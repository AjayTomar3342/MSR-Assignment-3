,0
0,     Internal change \n\n
1,     Replace LinkedList with ArrayDeque \n\nRefactor TrieParser  LineReader  and CacheLoaderTest by replacing LinkedList with ArrayDeque \n\nFixes    com/google/guava/pull/5429\n\nCo-authored-by: Olof Gren <olofthegren@gmail com>\nCo-authored-by: Caroline Larsen <e caroline larsen@gmail com>\nCo-authored-by: Joakim Skoog <joakim skoog 97@gmail com>\nCo-authored-by: Robin Wänlund <robin wanlund@hotmail com>\n
2,     Move Java-7-VM warning from `MoreObjects` to `Preconditions` \n\n
3,     ToStringHelper: omitEmptyValues() - Benchmark updates\n\nPiperOrigin-RevId: 360760353\n  
4,     Add `@DoNotCall` to a few more Guava APIs that are guaranteed to always throw `UnsupportedOperationException` \n\n
5,     update JUnit\n\n
6,     update enforcer-rule\n\n
7,     Internal change \n\nPiperOrigin-RevId: 359827899\n  
8,     Internal change \n\n
9,     Update Public Suffix data \n\n
10,     Add `@DoNotCall` to the mutator methods on immutable types\n\n
11,     Remove redundant `else` blocks \n\nFixes #3974 \n\n
12,     Delete hardcoded test  gwt xml files \n\nAs noted in CL 335869875  our open-source tests are already not looking at the contents of these files \n\nTested:\n  ( cd guava-gwt && JAVA_HOME=/usr/local/buildtools/java/jdk mvn clean install -Dtest include=DoesNotMatchAnything -Dmaven javadoc skip )\n
13,     This is causing upper bounds errors in google-http-java-client\n\n
14,     Migrate off deprecated Class#newInstance() \n\nFixes #5407\n\n
15,     Fix compatibility between the cache compute methods and a load \n\nFixes #5348\nFixes #5342\nFixes #2827\nResolves underlying cause of #2108\n\n
16,     Assign or use the result of a primitive wrapper method invocation (it will soon be an ERROR to ignore it) \n\n
17,     Add `@CheckReturnValue` to some `com google common cache` APIs \n\n
18,     Add a link to `ImmutableSortedMultiset` to `collect/package-info java` \n\nFixes    com/google/guava/pull/5384\n\n
19,     Remove `@Beta` from `CountingOutputStream` \n\n
20,     Fix assertion for `FilesTest testCopyIdenticalFiles()` \n\nFixes    com/google/guava/issues/5381\n\n
21,     Remove `@Beta` from `HashCode` \n\n   com/google/guava/issues/3284\n\n
22,     Fix a comment to reflect that the ImmutableSortedMap copyOf method uses the natural ordering of the keys  rather than a provided comparator \n\nPiperOrigin-RevId: 350137044\n  
23,     Update Public Suffix data \n\n
24,     Internal change\n\n
25,     Internal change \n\n
26,     Optimize CRC32C \n\nPiperOrigin-RevId: 348814325\n  
27,     Cache only  m2/repository  not all of  m2 \n\nHopefully this will fix  Could not find artifact org apache maven plugins:maven-checkstyle-plugin:jar:3 1 1 in google-maven-central  from    com/google/guava/pull/5363\n\nCompare CL 310633203 for Truth \n\n
28,     Bump deps \n\nMy methodology was something like:\n\n```\n( for F in   android; do ( mvn org codehaus mojo:versions-maven-plugin:2 8 1:update-properties org codehaus mojo:versions-maven-plugin:2 8 1:use-latest-releases -f $F/pom xml -DgenerateBackupPoms=false ); done )\n```\n\nFixes    com/google/guava/pull/5273\nFixes    com/google/guava/pull/5274\nMore completely addresses    com/google/guava/pull/4018\n\n
29,     Set @Target on @IgnoreJRERequirement \n\nValues:\n   mojohaus org/animal-sniffer/animal-sniffer-annotations/apidocs/org/codehaus/mojo/animal_sniffer/IgnoreJRERequirement html\n\nContext:\nThis doesn\ t  fix  anything  but it prevents us from replicating an error I just made in the future:\n   com/mojohaus/animal-sniffer/issues/131#issuecomment-747628259\n
30,     Internal change\n\n
31,     Internal change\n\n
32,     Internal changes \n\n
33,     Prepare for release 30 1 \n\n
34,     Log a warning if running under a Java 7 VM \n\nMore precisely  log a warning if lambda expressions or type annotations in our classes would produce an exception  If someone wants to use Retrolambda or a similar tool to rewrite our classes  that s fine with us if it works  And our support for Android is unchanged: The Android toolchain rewrites lambdas and removes type annotations \n\nThis is a step toward removing Java 7 support entirely:    com/google/guava/issues/5269\n\n
35,     Correct a typo and some odd phrasing in the first paragraph of the javadoc for SmoothRateLimiter \n\n
36,     Fix `relativePath` warning for guava-bom \n\nFixes #3945 \nCloses #5349 \n\n
37,     First step in cleaning up PSL handling  Next stage will be to change the template to store the trie string as a separate static constant  so that I can write a unit test that verifies that \n\n
38,     Fix a bug in HashBiMap which was causing crashes in Sheets on iOS \n\nThe crash was caused by the fact  that linked-list of BiEntry instances inside a bucket were using @Weak references  and only the first entry in the list was strongly referenced  The remaining ones were deallocated \n\nWith this change  Sheets iOS is not crashing anymore \n\n
39,     System getProperties() getProperty => System getProperty \n\nMy motivation was that it s slightly easier for a nullness checker to determine that System getProperty(standardProperty) is (generally speaking) non-null  But it turns out that java runtime name is not a standard property!\n\nStill  this is a slight simplification  so I guess I m submitting \n\n
40,     Automated rollback of 67517b5a5b7627eee39a47917197998b9f974751 \n\n*** Reason for rollback ***\n\nCausing Sheets iOS crash\n\n*** Original change description ***\n\nFix memory leaks and potential crashes in HashBiMap  which occur in transpiled ObjC code \nAdd iOS specific unit tests in XPlat  because Guava is missing infrastructure for iOS tests \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=345445573\n  
41,     Explain when StandardSystemProperty value() can return a null value  and deprecate JAVA_EXT_DIRS \n\nvalue() s return type has been @Nullable since 4232450e7bb7c46c08868f699323db3e787507c8  but I had forgotten the details about why  despite past CLs to update the test for specific missing keys \n\nI assume that we ll never actually *remove* JAVA_EXT_DIRS \n\n(Just slightly relevant to    com/google/guava/issues/2571)\n\n
42,     Suppress TSAN errors for benign races \n\nCompare other usages of `@LazyInit` on collection views  such as `HashBiMap inverse` and `AbstractTable cellSet` \n\n
43,     PUBLIC: Add missing Override annotations \n\n
44,     Internal change \n\n
45,     Make toImmutableSortedMap levarage collect collectors\n\n
46,     Make toImmutableEnum[Set|Map  to AndroidAccessToCollectors\n\nI think that’s the last of them \n\nThe implementations I moved verbatim  and there was no change of code there \n\n
47,     Update Public Suffix data \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=342455735\n  
48,     Fix open source “No tests found in com google common collect TableCollectorsTest”\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=342423867\n  
49,     Add TableCollectors to AndroidAccessToCollectors\n\n
50,     Add Multimap collectors to AndroidAccessToCollectors\n\n
51,     Backport combine to Immutable[List|Set Multimap\n\nInterestingly  ImmutableMultimap already had combine implemented by lowasser since 2017  Probably a backport oversight \n\n
52,     Add to[Immutable Multiset to AndroidAccessToCollectors\n\n
53,     Backport ImmutableTable combine\n\nThat should be the last combine to backport  All remainging collectors are implemented in terms of existing collection transformations \n\n
54,     Add AndroidAccessToCollectors \n\nThis adds the base Immutable collectors already in CollectCollectors  but is still lacking the Table-collections  Multi-collections  and mutable-collections \n\n
55,     Replaces cycle_finder references to  --whitelist  with  --suppress-list   and  --blacklist  with  --restrict-to  \n\n
56,     Tidy up description since this shows up in search results  Maven Central  and many other places around the web \n\nCL automatically created by:\n    replace_string \\\n       google \\  s collections  io classes  and much  \\\n       Google \\  s collections  I/O classes  and \n\n
57,     Fix memory leaks and potential crashes in HashBiMap  which occur in transpiled ObjC code \n\n
58,     Backport `combine` to java7 for Sorted collections & (Immutable)BiMap \n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections \n\n
59,     Backport combine to java7 for `ImmutableRangeSet`/`ImmutableRangeSet` \n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections \n\nI saved this for last  but they turned out to be the easiest to do  Tests are kind of crap  but honestly  baseline tests also seemed a little bit light to me \n\n
60,     Backport `combine` to java7 for `ImmutableMap` \n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections \n\nThe Java8/Java7 implementations branched once again  where Java8 uses an array of Entries  whereas Java7 uses an array of alternating key/value pairs  Either way  the implementations were pretty trivial this time \n\n
61,     Fix Android test failure in ClassPathTest \n\nReproduced the error and verified that this change fixes it \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=341509765\n  
62,     Add `X-Request-ID` to `HttpHeaders` \n\nFixes #5306 \n\n
63,     Added submitAsync to ClosingFuture \n\n
64,     Fix `LoadingCache` minor documentation typo \n\nFixes #5503 \n\n
65,     Backport `combine` to java7 for `ImmutableList` & `ImmutableSet` \n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections \n\n
66,     Rollback\n\n*** Original change description ***\n\nDo 16-byte strides in CRC32C in c g c hash  resulting in roughly a 3 3x speedup to 1 5 GB/s \n\nThis is probably as good as it gets until Java 11  when we ll have access to the intrinsics that use CRC hardware when available \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=340968144\n  
67,     Do 16-byte strides in CRC32C in c g c hash  resulting in roughly a 3 3x speedup to 1 5 GB/s \n\nThis is probably as good as it gets until Java 11  when we ll have access to the intrinsics that use CRC hardware when available \n\n
68,     Verify maximumWeight before setting\n\nThe maximumWeight builder method is the only method that does the argument verification before the assignment \nIt looks like a typo  and does not affect anyone in practice  but it is still better to have the implementation uniform \n\nFixes #5298\n\n
69,     Add additional test for `Crc32cHashFunction` \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=340502702\n  
70,     Remove outdated reference in docs\n\n
71,     Add constant for Origin Isolation header\n\nSpec:    com/WICG/origin-isolation\n\n
72,     Optimize Hashing crc32c() by eliminating two xors for every byte of input \n\nBenchmarks suggest a modest speedup around 8% \n\n
73,     Fix documentation for HashCode toString() that incorrectly claimed it returned in big-endian order \n\nThe implementation of toString() goes through the bytes in the same order that asBytes() returns  so if the order of the underlying bytes is little-endian (as is the case for LongHashCode)  then the string will also be little-endian  contradicting what the documentation says \n\n
74,     Refactor ClassPath: replace Scanner with Location class \n\n
75,     Fix minor documentation typos  thanks to @Stephan202 and @jbduncan\n\n
76,     Add ClassInfo isTopLevel() \n\nSeems like a useful method? I can t remember why I didn t add it in the first place  Perhaps just an oversight \n\nPartially addresses    com/google/guava/issues/3349\n\n
77,     Update IteratorTester example with a greater  steps  value\n\nThis allows IteratorTester to check the edge case that when an iterator has been exhausted (that is   next  has been called repeatedly until  hasNext  returns false) then calling  next  on the iterator again exhibits the same behavior as the user\ s chosen  known good  reference implementation \n\nFixes #5281\n\n
78,     Remove deprecated 1-arg ServiceManager addListener \n\n[ \n\n
79,     Prepare for release 30 0 \n\n
80,     Remove deprecated method Files fileTreeTraverser() that isn t being used anymore \n\n
81,     Added `@CanIgnoreReturnValue` to `cancel` \n\n
82,     Encode all primes less-than 66 into a bitmask\n\nUse a bitmask to make prime computation for all values less-than 66 O(1) and avoid any remainder calculations in these cases \n\n
83,     Add tests which validate the run order of listeners on futures when the output is cancelled to test the behavior added in cl/161148771\n\nRemove cancellation propagation test  as the intent of not propagating cancellation is to make sure run order is as expected \n\nIf we propagate cancellations  the test fails \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=337100661\n  
84,     Document what happens when FutureCallback throws exception \n\nFixes #5250  #2058\n\n
85,     Clarify that Interner should be preferred instead of String intern(); the existing language implies it s intended _only_ for other types \n\nSee also    com/google/guava/issues/399#issuecomment-61307754\n\n
86,     Fix example in documentation for `IteratorTester`\n\nI made a mistake and accidentally included an example that does not\ncompile  Specifically  importing `KnownOrder` as-is does not compile;\ninstead one needs to import `IteratorTester KnownOrder`  See #5254 for\nmore information \n\nI also changed the example to use `Collections#unmodifiableList`\nrather than `ArrayList` because `ArrayList#iterator` does not satisfy\nall the requirements of `IteratorFeature#MODIFIABLE` \n\nFixes #5276\n\n
87,     Don t call toString() on the results of successful futures \n\n
88,     Add a bunch of warnings to ExecutionSequencer \n\nSee discussion on CL 335046640 \n\n
89,     Clarify how to use `IteratorTester`\n\nWhen using `IteratorTester`  IntelliJ IDEA automatically imports\n`AbstractIteratorTester KnownOrder`  However `AbstractIteratorTester`\nis private  and it is not obvious that one was meant to import\n`IteratorTester KnownOrder` instead  Therefore this commit updates the\nJavadoc to give an example of how to use the API properly \n\nFixes #5272\n\n
90,     Removed all references to now useless workaround\n\nFixes #3679\nFixes #5265\n\n
91,     Clarify `HashMultimap` docs about concurrency \n\nCloses #5266 \nFixes #3682 \n\n
92,     Omit TestModuleEntryPoint from open-source repo \n\nSince I ve disabled GWT tests in the open-source repo  these no longer serve a purpose  (They re still listed in our testModule gwt xml files  but as noted in a previous commit  the GWT test infrastructure doesn t seem to care what we put in those files anymore )\n\nWe could still include them  but they re generated during our build  so that complicates exporting them with Copybara \n\n
93,     Check the generated PublicSuffixPatterns java into Piper \n\nCopybara can t export generated files \n\nAlso  reformat the template (and then the file) so that autoformatting the file doesn t produce diffs \n\n
94,     Run all zero of our GWT tests during presubmit/CI \n\nUnfortunately  this does *not* detect any bogus <inherits> lines in *test*  gwt xml files (neither the individual testModule gwt xml files nor the top-level GuavaTests gwt xml) \n(And bogus <inherits> lines in *prod*  gwt xml files were already detected even before this change )\n\nAs a result  this CL appears to be very nearly a no-op -- maybe just a verification that the no-op GWT module and entry point exist  And maybe I ll end up rolling it back if we reenable the tests externally someday  Still  for now it seems like a reasonable thing to clean up  if only to prevent me from trying to clean it up again 6 months from now :)\n\n(Followup after    com/google/guava/issues/3680)\n\n
95,     Move gwt-user dep to test scope \n\nWe no longer need it as a prod dependency (not even `provided`) after removing GWT-RPC support \n\n(Followup after    com/google/guava/issues/3680)\n\nFixes    com/google/truth/issues/637  if GitHub will let me get away with closing a Truth issue with a Guava commit :)\n\n
96,     Remove a couple GwtSerializationDependencies classes from open-source Guava after all \n\nAs noted in 0cb89dd110ce88770207889901e95ea2ac896932  this isn t necessary  As *also* noted there  we have *additional* FooGwtSerializationDependencies classes that I m leaving in place because they are *supertypes* of the prod classes and thus harder to remove \n\nBut I m removing these 2 because it saves me a few lines in the Copybara config :)\n\n(Followup after    com/google/guava/issues/3680)\n\n
97,     Tweak TODOs \n\n
98,     Remove GWT tests from open source \n\nWe will continue to run these tests internally \n\nI m not sure how much value the remaining open-source GwtTestSuite file provides us  Hopefully it s at least a sanity check on  gwt xml files  But I haven t tested by breaking a  gwt xml file to see what happens \n\n
99,     Begin tweaking Guava sources to satisfy Copybara \n\n- Change from http to https (and from github io links to guava dev/truth dev while I m at it) \n- Remove go/ links \n- Add whitespace around MOE directives \n- Put MOE stripping directives alone in comments  moving other comment text to a separate comment \n- One particular case of that: Put MOE intracomment stripping into HTML comments    even when it happens in non-Javadoc comments (i e   /* */)  It seems that Copybara wants for intracomment directives to stand alone in *some* kind of comment?\n- Add @GoogleInternal to some files that are currently omitted from Guava simply by not being in MOE filegroup targets \n\nThis is surely not a complete set of changes  but it s enough to get me started \n\n
100,     Mark BigDecimalMathTest as fully @GwtIncompatible \n\nCurrently it has every member annotated as @GwtIncompatible  This works fine internally  but the external GWT tests (which we run only at release time) complain about the resulting empty BigDecimalMathTest_gwt:\n   com/google/guava/blob/master/guava-gwt/test/com/google/common/math/BigDecimalMathTest_gwt java\n\n
101,     Fully remove GWT-RPC support externally \n\nReally  really closes    com/google/guava/issues/3680 \n\nPossible future work:\n- Be consistent about whether we put @GwtCompatible on the remaining internal CustomFieldSerializer classes  (For those files  it probably acts only as documentation (of something that is pretty obvious :))  Our open-source build used to take action when it saw `@GwtCompatible(emulated=true)`  but (a) it doesn t anymore  (b) those files don t exist externally anymore  and (c) they weren t `emulated=true` :) I believe that our internal build requires @GwtCompatible on most files in our GWT target  but I think there s an exception for GWT-target-only sources )\n- Remove some of the GwtSerializationDependencies classes  However  some of these classe are set up as *supertypes* of our prod classes  so this would require some surgery  Keeping them is harmless: It doesn t actually make the classes GWT-serializable \n- Remove the usages of serializable=true on @GwtCompatible  at least externally but maybe just entirely \n\n
102,     Fix ClassPathTest on Android JDK 11 \n\n
103,     Also print Android test failures \n\n
104,     Remove unnecessary parens\n\nFixes #4036\n\n
105,     Internal changes to ClassPath \n\n
106,     Internal changes to ClassPath \n\n
107,     Add brief test to Range for `[_  X  isConnected([X  _ )`;\n\n
108,     Change `ForwardingMap remove(Object)` parameter name from `object` to `key` to match `Map remove(Object key)` \n\nFixes    com/google/guava/issues/4028\n\n
109,     Deal with Class#isInstance checks which are guaranteed to be false \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=332298366\n  
110,     Fix UnsupportedOperationException from TreeRangeSet subRangeSet(   ) add(   ) \n\nFixes #4019  #4002\n\n
111,     Externally restore @DoNotMock to ClosingFuture Combiner  and externally add @DoNotMock to ClosingFuture itself \n\nThis implements an alternative workaround for    openjdk java net/browse/JDK-7101822  replacing the one submitted in CL 331770482 \n\n
112,     Add back web app to public suffix list\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=332107904\n  
113,     Fix random typos in Guava \n\nFixes #4021\n\n
114,     Fix AssertionError from Range gap \n\nFixes #4007  #4004\n\n
115,     Make EqualsTester test that non-Strings are not equal to their String representation \n\n
116,     Remove spurious annotation to fix Travis build \n\n
117,     Bump checker-qual from 2 11 1 to 3 5 0 \n\nFor unfortunate reasons involving internal legacy infrastructure  this is easier than merging #4018  But at least it gets us on the newest major version  That makes it easier to see that it s safe to resolve a conflict between  say  3 5 0 and 3 6 1 by just using the newer one \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=331554618\n  
118,     Fix typos and remove unnecessary words \n\nFixes #4012\n\n
119,     Make ClosingFuture available in open-source Guava (@Beta) \n\n
120,     Minor whitespace-only change\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=330053928\n  
121,     Update Public Suffix data \n\nThe copy is typically updated whenever Chrome s copy is updated  which\nis roughly every 6 weeks  Subscribe to the Chrome Milestone Calendar to see the\ndates \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=329222572\n  
122,     Deprecate Files createTempDir()  noting that better alternatives exist for Android as well as for users running Java 7 or later \n\n
123,     Throw if @Subscribe is applied to a method that takes a primitive parameter \n\nFixes    com/google/guava/issues/3992 \n\n
124,     Work around an android bug in LockSupport  this time with @CanIgnoreReturnValue\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=327861568\n  
125,     Adding SEC-CH-UA-Arch header \n\nHeader Spec Here:    github io/ua-client-hints/#http-ua-hints\n\n
126,     Don t directly call ByteBuffer  etc  methods that have covariant returns in Java 9+ \n\nDoing so produces a jar that doesn t work under Java 8 \n\nThis CL addresses the currently existing problematic calls (by calling the methods on the supertype Buffer instead)  but we should also add safeguards \n\nThe normal solution to this general problem is to use --release  but doing so here is complicated \n\nFor more information  see    com/google/guava/issues/3990\n\n
127,     Switch GWT rules implementation from native to  bzl \n\n
128,     [Efficiency  Modifies testToNumericFormatV6 to parse the input String in place \n\n
129,     Bring back previously deleted SerializedForms so that old data can still be read \n\n
130,     Remove `@Beta` from `Multimaps toMultimap` \n\nFixes    com/google/guava/issues/3957\n\n
131,     Avoid boxing in Doubles constrainToRange() and Floats constrainToRange() \n\nFixes    com/google/guava/issues/3984\n\n
132,     [Efficiency  Modifies textToNumericFormatV4 to parse the input String in place \n\n
133,     [Efficiency  Creates a variant of parseHextet and parseOctet that can work on a larger string with start and end indices \n\n
134,     Fix memory-leaks in LocalCache on iOS  caused by:\n\n1  Retain-cycle between outer LocalCache instance and inner Values  KeySet and EntrySet instances  The use of @Weak and @WeakOuter is incorrect there  since inner instances can outlive outer LocalCache instance  The correct solution is to use @RetainedWith annotation to inner-classes \n\n2  Retain-cycle between ReferenceEntry objects which internally form a doubly-linked list  Fixed by adding @Weak annotation to  next  and  previous  links  This is correct  since ReferenceEntry instances are already retained by Segments \n\nThe unit test for leak detection is added inside Xplat  because the required testing infrastructure is not present inside  google_common  (the IosAsserts class)  Eventually  everything should be moved to  google_common  \n\n
135,     Ensure that the set returned by ImmutableMap<K  V> keySet() is serializable when K is serializable  and similarly for values() \n\nSet<T> should be serializable when T is serializable but that is not always the case for the set returned by ImmutableMap keySet() due to a reference from the returned set back to the original map  When serializing this set  the original map is serialized is well  This change changes this so that only the keys are serialized \n\n
136,     De-beta toImmutable* methods in GWT variants( emulated ) of common collect \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=322779681\n  
137,     Shorten toString for AbstractFuture implementations inside util concurrent \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=322682481\n  
138,     Add awaitTerminationUninterruptibly \n\nFixes #3908\nFixes #1315\nSomewhat relevant to    com/google/guava/issues/3655\nVaguely relevant to    com/google/error-prone/issues/1490  since it creates a `@CheckReturnValue` variant of a `java util concurrent` method that returns `false` to indicate timeout \n\n
139,     Warn about stack overflows from directExecutor  add more warnings (including on AbstractFuture set* and cancel)  and move warnings to directExecutor itself \n\n
140,     Add @DoNotMock to Traverser \n\n
141,     Unconditionally call setException for RejectedExecutionException \n\nUnder JDK11  the write to thrownByExecute / thrownFromDelegate is upsetting TSAN  I *suspect* that TSAN is incorrect (and that it is likely to identify the same  problem  in other code) \n\nHowever  we years ago questioned whether the code I\ m removing served any real purpose   \n(fixes    com/google/guava/issues/2877)\n   so now seems like a good time to get rid of it and  at minimum  hopefully eliminate the current TSAN failure \n\nThe code that we\ re running in the executor is under our control  (That is  we\ re the ones who implement Runnable run() ) We\ re catching exceptions (and thus any RejectedExecutionException) in the obvious places  Occasionally we do call listeners  but naturally we do that only after completing the future or at least calling setFuture (after which a stray setException(rejectedExecutionException) would be a no-op) \n\nThe one(?) exception to that is that InterruptibleTask run() can call currentThread interrupt()  which we learned a few years ago can call arbitrary code through nio callbacks  At some point  though  I throw my hands up and say  whatever  \n\n(If the interrupt were to be a problem  it would have to be with an executor that executes tasks inline  like directExecutor  But I note that rejectionPropagatingExecutor  at least  already defends against this for directExecutor itself (by skipping the RejectedExecutionException logic entirely)  So the danger exists only with CombinedFutureInterruptibleTask or with a non-directExecutor that can execute tasks inline without catching exceptions -- and again  only in concert with nio interrupt callbacks  I think )\n\n
142,     Make breadth-first iterators consume the successor iterators lazily  and refactor to  cut about 150 lines of code \n\n
143,     Add toString() for SequentialExecutor s worker runnable\n\n
144,     Speed up Traverser and cut about 30 lines of code \n\nWhen stacked against the unsubmitted Walker  before the change:\n   breadthFirst was roughly on par;\n   preOrder/postOrder were about 70% slower (1359 vs  2358);\n\nAfter adopting the Walker impl  the tree traversal preorder/postorder are improved close to Walker impl \n\nThere is still about 10% slowness (2405 vs  2268) remaining  which I suspect is due to Iterator being slower than Spliterator  because with Spliterator  we can tryAdvance() once for each element  while with Iterator  we have to call both hasNext() and next() \n\nThe graph traversal adoption is similar  with about 15% remaining slowness compared to Walker (1583 vs  1338)  which is likely result of Spliterator tryAdvance() vs  Iterator hasNext() + next() \n\nDid not adopt the Walker s breadth-first impl for the following reasons:\n\n1  Adopting the Walker s breadth-first impl contributed about 10% slowdown compared to the current impl  I think this is likely due to the eager foreach loop of the successors in the current breadth-first iterator  In the full traversal benchmark  it s likely faster than consuming the successor iterator lazily \n\nOn the other hand  the breadth-first iterator is inconsistent with the depth-first iterators that consume the successor iterators lazily \n\nFor follow-up: It might be better to go complete lazy for breadth-first  even at the cost of 10% slowdown in the full-traversal benchmark  Plus we can reuse code and delete the two existing BreadthFirstIterator classes \n\nI m going to add the benchmark class in the the labs directory to compare between Iteration and Traverser \n\n
145,     Declare static types as Queue instead of Deque \n\nThis may slightly clarify how the object is used \n\n(I was looking through com google common for Deque instances that were used as stacks  so I noticed this one that was used only as a queue )\n\n
146,     Update Public Suffix data \n\nThe [  copy is typically updated whenever Chrome s copy is updated  which\nis roughly every 6 weeks  Subscribe to the Chrome Milestone Calendar to see the\ndates \n\nFor this update  [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=320112849\n  
147,     Fix annotation positions in Guava \n\n
148,     Hint with the type that `oldFuture` / `newFuture` / `ref` s `Future` never contains a value \n\nBeing clear may become slightly more valuable when we put nullness type annotations on this code \n\n
149,     Remove unnecessary comment \n\n
150,     Fix Converter java by moving @RetainedWith annotation to the correct side of the cycle \n\nThe annotation should be placed inside the  parent  object  and not the  child  object \n\nReference:    google com/j2objc/javadoc/annotations/reference/com/google/j2objc/annotations/RetainedWith\n\n
151,     Implement BigDecimalMath roundToDouble \n\n
152,     In ImmutableDoubleArray and ImmutableLongArray  use Arrays copyOf when expanding the internal array \n\nIn ImmutableIntArray  where we already made this change  remove an inconsistent `this ` \n\n
153,     Correct LongMath roundToDouble for values at and near Long MAX_VALUE\n\n
154,     Fix memory leak in SingletonImmutableBiMap which would appear in transpiled J2ObjC code \n\nThe @RetainedWith annotation can not be used on both sides of the retain-cycle  The RegularImmutableBiMap does not have this problem  because it uses Inverse inner class  This CL applies similar trick in SingletonImmutableBiMap  although without additional inner class \n\n
155,     Avoid reentrancy in ExecutionSequencer \n\n
156,     Add a test for the bug introduced by CL 316779471 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=316982088\n  
157,     Add LongMath roundToDouble \n\n
158,     Revert db53357fea477695deeaa32746660bf86d6d51c1\n\nBroke a test\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=316808913\n  
159,     Avoid reentrancy in ExecutionSequencer \n\n
160,     Add a Guava wiki entry about finding the min/max for various circumstances \n\n
161,     Revert a1e9a0bd1260a657f7502e5b81d38dfb818cd1d4\n\nCausing some internal failures\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=316509747\n  
162,     Upgraded ByteStreams#copy(InputStream  OutputStream) to use the faster FileChannel if possible \nSee also    com/@xunnan xu/its-all-about-buffers-zero-copy-mmap-and-java-nio-50f2a1bfc05c for some background \n\n
163,     Inline `ByteStreamsTest#assertEquals(byte[   byte[ )`\n\n#codehealth\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=315898541\n  
164,     Cleanup ByteStreamsTest java to fix a couple of IntelliJ warnings/suggestions \n\n#codehealh\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=315895616\n  
165,     Break retain-cycle in Converter java  when used in J2ObjC target \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=315679614\n  
166,     Suppress IdentityHashMapBoxing check\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=315558134\n  
167,     Discourage Ordering min(E  E) and max(E  E) in favor of Comparators min(E  E  Comparator) and max(E  E  Comparator) \n\n
168,     Add Comparators min/max\n\n
169,     Efficient UnmodifiableMultimap forEach\n\nforEach can pass calls directly to the delegate protected\ncollection because it is a read-only operation \n\nFixes #3911\nFixes #3912\n\n
170,     Implement BigIntegerMath roundToDouble  which rounds to the nearest representable double value \n\nPartially implements    com/google/guava/issues/3895\n\n
171,     Update Public Suffix data \n\nThis copy is typically updated whenever Chrome s copy is updated  which\nis roughly every 6 weeks  Subscribe to the Chrome Milestone Calendar to see the\ndates \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=314699619\n  
172,     Remove @DoNotCall from FluentIterable from(FluentIterable) \n\n
173,     guava: disavow VisibleForTesting\n\nJohannes and I invented this class in the early days of Blaze \nand in hindsight it was clearly a mistake; it encourages self-deception \nThis change adds a comment discouraging its further use \n\n
174,     Added support for the  font  Top-Level Media Type (   ietf org/html/rfc8081)\n\n
175,     Document that Ranges are immutable \n\nFixes    com/google/guava/issues/1813\n\n
176,     Adding the rest of the client-hints headers (besides Arch which I don t think we need) \n\nHeader Spec Here:    github io/ua-client-hints/#http-ua-hints\n\n
177,     Adding the Sec-CH-UA header  Ignore ClangTidy  It has to do with the constant naming scheme for httputils h \n\nSpec for header:    github io/ua-client-hints/\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=311420502\n  
178,     Suppress IdentityHashMapBoxing check\n\nThis would soon become an ERROR in blaze \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=311352634\n  
179,     Implemented lastIndexOf in CartesianList\n\nFixes #3878\n\n
180,     In ImmutableIntArray  use Arrays copyOf when expanding the internal array \n\n
181,     Ensure QueueWorker does not outlive SequentialExecutor on iOS \n\nWhen `SequentialExecutor` is used on iOS as J2ObjC-transpiled code  we need to\nmake sure that `SequentialExecutor QueueWorker` does not outlive its outer\nclass  Previously  because the inner class was annotated with `@WeakOuter`  it\ncould happen  and  when this happened  the inner class would then invoke\nmethods on a dangling pointer and crash the process in turn  The issue is now\nfixed by annotating the worker field in the outer class with `@RetainedWith` \n\nAlthough `@RetainedWith` was initially designed for bimaps  the annotation\naddresses exactly the lifecycle problem here \n\n
182,     Implement tryLockUninterruptibly\n\nFixes #3880\n\n
183,     Adds constants for `Cross-Origin-Embedder-Policy(-Report-Only)?` headers ([W3 (   github io/cross-origin-embedder-policy/#COEP)) \n\n
184,     Fix PowerSet equals() when comparing to another PowerSet whose items are the same  but in a different iteration order \n\n
185,     Fixed TreeRangeMap SubRangeMap putCoalescing\n\nThe short circuiting on an attempt to put an empty range caused the contract of putCoalescing to be violated \n\nFixes #3886\n\n
186,     Move comment to a more appropriate location\n\nThe comment was added along with putCoalescing in CL 143507326 \n\nFixes #3883\n\n
187,     Fix GitHub #3873 by reimplementing Cartesian Set List  contains \n\n
188,     Update Public Suffix data \n\nThe Guava copy is typically updated whenever Chrome s copy is updated  which\nis roughly every 6 weeks  Subscribe to the Chrome Milestone Calendar to see the\ndates \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=308028590\n  
189,     Hide InternetDomainName region() from GWT/j2cl \n\nThe method is not used from GWT/j2cl \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=307886252\n  
190,     Update readme with some grammar corrections \n\nCloses #3857\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=307658343\n  
191,     This change suppresses DefaultPackage check for any java class which uses the default java package  in preparation for enabling a compiler error that will prevent new instances of the bug \n\nThe Google Java Style Guide §8 2 1 requires Java files to have a (non-default) package declaration   Missing package declarations can cause odd problems that are difficult to debug  such as a class not being included in a test suite or confusion around package-private visibility \n\n
192,     Exclude Vim swap files from the jar we build \n\nFixes    com/google/guava/issues/3861\n\n
193,     Remove duplicate assumption \n\n
194,     Fix typo \n\n
195,     Prepare for release 29 0 \n\n
196,     Add `@since NEXT` for recently added `graph` APIs \n\n   dev/releases/snapshot-jre/api/diffs/changes/alldiffs_index_additions html\n\n
197,     Remove `@Beta` from `Service` and `ServiceManager` \n\nThis leaves `AbstractListeningExecutorService` as `@Beta` \n\nFixes #3806  #3418\nRelevant to #2966\n\n(I have tweaked Jesse s initial PR to leave `AbstractExecutionThreadService triggerShutdown` and `AbstractService doCancelStart` as `@Beta`  since we aren t sure we like the locking behavior of the former  and we ve realized that `Listener stopping` _might_ be a reasonable substitute for both )\n\n
198,     Don t request openjdk-11-source \n\nWe don t need it yet  since we build Javadoc snapshots with OpenJDK 8 \nMaybe we ll need it someday  but currently it doesn t exist :)\n\n   org/github/google/guava/jobs/673105448\nE: Unable to locate package openjdk-11-source\n\nFollowup to CL 305716744 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=305735746\n  
199,     Use @code instead of @link to allow imports to be stripped\n\n
200,     Try yet again to inherit docs from the JDK when building Javadoc for snapshots \n\nI am optimistic: See    com/google/guava/issues/3669#issuecomment-611658339\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=305716744\n  
201,     Fix unnecessary method access level escalation \n\nFixes    com/google/guava/pull/3843\n\n
202,     Add StandardImmutableDirectedNetworkTest \n\n
203,     Merge StandardUndirectedMultiNetworkTest into StandardMutableUndirectedNetworkTest\n\n
204,     Merge StandardDirectedMultiNetworkTest into StandardMutableDirectedNetworkTest \n\n
205,     Move tests from Multinetwork-test classes to base classes in preparation for merging the Multinetwork-classes with the mutable classes \n\n
206,     Merge StandardSimpleDirectedSortedNetworkTest into StandardMutableDirectedNetworkTest \n\n
207,     Change return type of ServiceManager servicesByState() to ImmutableSetMultimap \n\nBut also generate a bridge method with the old signature for binary compatibility \n\n   com/google/guava/issues/3418 (which I keep forgetting to mention from commits   )\n\n[ \n\n
208,     Add j2cl specializers for Doubles min/max  Floats min/max  Ints min/max  and Shorts min/max \n\n
209,     Extend deadline to fix flakiness \n\nIt s possible that we don t really need to assert that the pool finishes shutting down at all  Maybe the other existing assertions are enough? But I haven t bothered to look into it \n\n
210,     Make `Duration` overloads of `awaitRunning` and `awaitTerminated` `final` in all `Abstract*Service` classes \n\nThe other overloads already are already `final`  These ones aren t only because we didn t think to do this when adding the new `default` methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=304180695\n  
211,     Making headSet(E  boolean)  tailSet(E  boolean) public in GWT emulated ImmutableSortedSet \n\n
212,     Introducing floor(E) and ceiling(E) method in GWT emulated ImmutableSortedSet package \n\n
213,     Add immediateVoidFuture() to Futures java to create an immediately succeeding ListenableFuture<Void> \n\n
214,     Deprecate 1-arg overload of ServiceManager addListener \n\nIt default to directExecutor()  directExecutor() is often useful  but it should be an explicit choice  as some usages are dangerous:\n   dev/releases/snapshot-jre/api/docs/com/google/common/util/concurrent/ListenableFuture html#addListener-java lang Runnable-java util concurrent Executor-\n\n   com/google/guava/issues/3418\n\n
215,     Add missing `@since` for 1-arg `ServiceManager addListener` \n\n   dev/releases/15 0/api/diffs/changes/com google common util concurrent ServiceManager html#com google common util concurrent ServiceManager addListener_added%28com google common util concurrent ServiceManager Listener%29\n\n
216,     Make sure native js files are included in the Guava GWT release \n\nThis is needed for J2CL compatibility \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=302737505\n  
217,     Add some unit tests for base64Url() in BaseEncoding\n\nFixes #3816\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=302064745\n  
218,     Fixed double slicing ByteSource (#3501) \n\nFixes #3829\n\n
219,     Add `Duration`-based default methods to `ListeningScheduledExecutorService`\n\nThey just delegate to the existing methods from the interface  using the existing saturated conversion to nanoseconds  This matches existing `Duration`-based overloads of `(long  TimeUnit)` methods in the same package \n\n
220,     Store `values` in a local first instead of repeatedly reading it from a field \n\nAt worst  this is a no-op  At best  it may perform better \n\n
221,     Implement some more toString() methods for debugging \n\nI added these locally while debugging  but they seem potentially generally useful \n\n
222,     Replace Thread currentThread() interrupted() with Thread interrupted() or Thread currentThread() interrupt()  whichever seems appropriate \n\nThread interrupted: static method on Thread which returns whether the thread has been interrupted (and resets the interrupt bit)\n\nThread currentThread() interrupt(): interrupts the current thread\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=301162686\n  
223,     Make StandardMutableDirectedNetworkTest parameterized so that it tests both with and without self loops \n\nThis is similar to an earlier refector of the AbstractGraphTest tree \n\n
224,     Move all tests from StandardMutableDirectedNetworkTest to AbstractStandardDirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree \n\nNote: This is a pure refactor: No tests were added or removed \n\n
225,     Simplify the AbstractNetworkTest tree (directed branch): Delete StandardSimpleDirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree \n\n
226,     Make StandardMutableUndirectedNetworkTest parameterized so that it tests both with and without self loops \n\nThis is similar to an earlier refector of the AbstractGraphTest tree \n\n
227,     Move all tests from StandardMutableUndirectedNetworkTest to AbstractStandardUndirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree \n\nNote: This is a pure refactor: No tests were added or removed \n\n
228,     Simplify the AbstractNetworkTest tree (undirected branch): Delete StandardSimpleUndirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree \n\nNote: This is a pure refactor: No tests were added or removed \n\n
229,     Simplify AbstractGraphTest by replacing allowsSelfLoops() and incidentEdgeOrder() by graph accessors \n\n
230,     Document that our racy access is safe \n\n
231,     Roll-forward of a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d\n\nMake nullWriter() append(   ) (both overloads) accept a null CharSequence \n\nThe docs of Writer are misleading:\n\n   \nAn invocation of this method of the form out append(csq) behaves in exactly the same way as the invocation\n     out write(csq toString())\n   \n   oracle com/javase/7/docs/api/java/io/Writer html#app   \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=298459337\n  
232,     Rollback a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d pending internal break\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=298450900\n  
233,     Migrate from @MonotonicNonNull to @Nullable \n\nThe features of @MonotonicNonNull don t buy us anything in our use case  since we check the fields for null on every access  anyway \n\nAnd @MonotonicNonNull is likely not to be available in the set of nullness annotations we adopt \n\n   org/api/org/checkerframework/checker/nullness/qual/MonotonicNonNull html\n\n
234,     Store each result in a  Present<V>  instance instead of an Optional<V> \n\nWe can\ t store a plain V because we need to distinguish between Optional absent() and null (at least in the Google-internal successfulAsMap -- and eventually in whenAllComplete(   ) collectToList() (#1519)  which is likely to omit failures instead of mapping them to null as successfulAsList does) \n\nWe may have problems using Optional when we adopt new nullability annotations  since Optional<V> might not be a valid instantiation when V is instantiated with a nullable type \n\n
235,     Make nullWriter() append(   ) (both overloads) accept a null CharSequence \n\nThe docs of Writer are misleading:\n\n   \nAn invocation of this method of the form out append(csq) behaves in exactly the same way as the invocation\n     out write(csq toString())\n   \n   oracle com/javase/7/docs/api/java/io/Writer html#append%28java lang CharSequence%29\n\nBut that\ s not true  as the docs go on to say:\n\n   \ncsq - The character sequence to append  If csq is null  then the four characters  null  are appended to this writer \n   \n\nAccepting null in the 2-arg method is arguably even weirder  but at least the docs call it out more prominently:\n   oracle com/javase/7/docs/api/java/io/Writer html#append%28java lang CharSequence %20int %20int%29\n\nCredit to the Checker Framework for identifying this bug \n\n
236,     Delete unused method\n\n
237,     Remove remaining documentation references to configurable implementations\n\n
238,     Rename  ConfigurableX  to  StandardX  for Network  which better captures what these implementations represent \n\nNote that this work was already done for [Value Graph \n\n
239,     Update Public Suffix data \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=297380985\n  
240,     Make GWT compilation of tests no longer flaky \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=297372033\n  
241,     Make lenientToString easier for nullness-analysis tools to understand \n\nAnd I think prevent it from turning a StackOverflowError into a NullPointerException in unlikely cases?\n\nAs far as tools know  String valueOf is capable of throwing an Error or RuntimeException  even when it s called with a parameter whose values is null  Thus  tools conclude that the flow of the program might reach `o getClass() getName()` when `o` is null  That would in turn produce NullPointerException \n\nTools might not even be wrong  since String valueOf could produce a StackOverflowError if we were *just* about to run out of space  Of course  in that case we re going to have problems in the catch() block no matter what    :)\n\nTo avoid this  we check for null in lenientToString itself \n\n
242,     Make Compact(Linked)HashSet fall back to a java util LinkedHashSet if hash flooding is detected  just as the immutable collections do \n\n
243,     Refactor AbstractNetworkTest in the same way as AbstractGraphTest was refactored earlier: Allow the graph under test to be immutable \n\nNote: This is a pure refactor  no coverage is changing \n\n
244,     Simplify redundant `Collection addAll()` calls \n\nFixes #3800\n\n
245,     Invalidate delegate iterators during clear() and make FPP tests more strict\n\n
246,     Fixing a typo in some Guava javadocs \n\n
247,     Annotate FluentIterable from(FluentIterable) with @DoNotCall\n\n
248,     Make TopKSelector ctor throw IllegalArgumentException when buffer size is too big to be held in memory \n\nPreviously this would lead to java lang NegativeArraySizeException \n\n
249,     Rename  ConfigurableX  to  StandardX  for [Value Graph  which better captures what these implementations represent \n\nNote that this work was already started in the past with the abstract StandardGraph tests \n\n
250,     Apply changes from    com/google/guava/pull/3778 (which edited guava dev) to README md \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=294671757\n  
251,     Add missing @Nullable \n\n
252,     Make AbstractFuture compatible with ForkJoinPool by catching exceptions from property retrieval \n\nFixes #3788  #3784\n\n
253,     Annotate upperCase and lowerCase with @LazyInit \n\nThis eliminates a TSAN warning \n\n
254,     Link directly to guava dev for Javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=291383669\n  
255,     Write type annotations on types  not on declarations\n\nFixes #3774\n\n
256,     Update Resource getResource to allow ignoring return value for existence checks \n\nSpecifically this impacts getResource(contextClass  resourceName) as this is already present on getResource(resourceName)\n\n
257,     Rewrite the Stopwatch docs to explain elapsed vs wall time\n\n
258,     Update Public Suffix data \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=289672158\n  
259,     Upgrade checker-qual to v2 11 1 \n\nFixes    com/google/guava/pull/3671\n\n
260,     Make incidentEdgeOrder() public for [Value Graph\n\n
261,     Add incidentEdgeOrder() to the [Value Graph interface\n\n
262,     Disable GWT-RPC by default in the open-source release \n\n
263,     Fix off-by-one error in AsciiDigits asciiDigits initialization \n\nFixes #3761 \n\n
264,     Add test for stable incidentEdgeOrder support for mutable undirected valuegraphs in ValueGraphTest\n\n
265,     Add test case stable incidentEdgeOrder with a self loop to AbstractStandard[Un directedGraphTest \n\n
266,     Suppress GuardedBy violation in LocalCache \n\nThis looks like it s just for testing  which I think makes it /probably OK/  but feel free to suggest otherwise \n\n
267,     Add StandardImmutableUndirectedGraphTest\n\n
268,     Graph: Support stable incidentEdgeOrder for undirected graphs\n\n
269,     ImmutableValueGraph: Support incidentEdgeOrder=stable\n\n
270,     ValueGraph: Support incidentEdgeOrder=stable\n\n
271,     Ensure that we generate a non-empty Javadoc jar for guava-gwt \n\nWithout it  we get an error during Sonatype deployment:\n  Missing: no javadoc jar found in folder  /com/google/guava/guava-gwt/28 2-jre \n\nI hacked around this on the GitHub release branch for 28 2 by reenabling Javadoc:\n   com/google/guava/commit/a1b3c06876803a0b0e5d2f16708e1328da1bac09\n\nBut as you may recall from CL 276327335  we re soon going to have no classes to generate Javadoc for (after we remove GWT-RPC support)  So even with Javadoc generation enabled  we d end up with no jar \n\nTo ensure that we get a jar  I ve introduced a package-private dummy class (and then excluded it from the other steps in which source files are used) \n\n
272,     Suppress ignored return values from Collection#contains* \n\nI think this is all of them!\n\n
273,     Note another case in which our implementation of TypeVariable throws UnsupportedOperationException \n\n
274,     Update to JUnit 4 13\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=287995705\n  
275,     Fix instances of  #foo  in Javadoc \n\n
276,     Assign the result of contains() and containsAll() to a variable \n\nThis satisfies the CheckReturnValue checker \n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=287279350\n  
277,     Prepare for release 28 2 \n\n
278,     documenting IllegalArgumentException for too-large Cartesian\nProduct in Sets cartesianProduct\n\nFixes #3756\n\n
279,     Stop classifying AbstractHashFloodingTest as a test to be run directly \n\nWhen it s classified as a test to be run directly  our custom infrastructure generates AbstractHashFloodingTest_gwt  and Maven tries to run it  failing with:\n  No tests found in com google common collect AbstractHashFloodingTest_gwt\n\nIdeally  our infrastructure would recognize that an abstract class could never be run directly  at which point we wouldn t need to manually classify tests like this  But I don t remember seeing this problem in a long time  so we probably won t bother \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=287204169\n  
280,     Fix external GWT breakage from CL 272446666 \n\n
281,     Correct @Nullable and use Ints constrainToRange()\n\n
282,     refactor: Lambda can be replaced method reference\n\nFixes #3745\n\n
283,     Add @SuppressWarnings for new violations of the GuardedBy checker \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=286896398\n  
284,     Fix Maven test failures from CL 286604248:\n- Make  abstract  class abstract  (And make its constructor package-private while we\ re at it )\n- Add a dummy test method (similar to what FilteredCollectionsTest already has) \n\nThese should fix:\n- warning(junit framework TestSuite$1): Class com google common collect AbstractHashFloodingTest has no public constructor TestCase(String name) or TestCase()\n- warning(junit framework TestSuite$1): No tests found in com google common collect ImmutableBiMapTest\n\n   org/google/guava/jobs/628734577\n\n(Also  address a review comment:    com/google/guava/pull/3746/files/40d75c94d568935159ce838c61940430fce54249#r360917786)\n\n
285,     Make Compact(Linked)HashMap fall back to a java util LinkedHashMap if hash flooding is detected  just as the immutable collections do \n\n
286,     Expand Android access to Compact*Hash*\n\nAlso rename newCompactHashMapWithExpectedSize(int) to newCompactHashMap(int) to\nmatch newCompactHashSet(int) \n\n
287,     Use Error Prone s @GuardedBy enforcement to make sure that mutable state is appropriately synchronized \n\n
288,     Actually map Thenable helper interface to JS IThenable  The name is different to avoid a clash with elemental2 IThenable \n\n
289,     Format the Javadoc of ByteStreams read() with @throw tags \n\nFixes    com/google/guava/pull/3735\n\n
290,     Remove @DoNotMock from HashFunction \n\nUsers need some kind of way to  e g   easily produce collisions in cases in which collisions should be rare \nMaybe we can provide a better way to do this  but for now  let s at least not forbid using mocking frameworks \n\n
291,     Fix small error with how CaseFormat calculates the StringBuilder size when converting one format to another \n\nFixes    com/google/guava/pull/3730\n\n
292,     Add @DoNotMock to ListenableFuture\n\nRemove @DoNotMock from AbstractFuture  as it is now covered by @DoNotMock on ListenableFuture\n\n
293,     Add @DoNotMock to several com google common types\n\nRelnotes:\n  - Add @DoNotMock to several com google common types \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=284229762\n  
294,     Support stable incident edge order for directed Immutable[Value Graphs \n\n
295,     Make equally named putEdge() method adjacent\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=283987870\n  
296,     The Graph tests now consistently call graphAsMutableGraph foo() when testing foo()  rather than proxy methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=283984080\n  
297,     Add @SuppressWarnings( GoodTime ) to GWT supersource for LocalCache operating in primitive millis \n\n
298,     Use  IPv4  instead of  Ipv4  for consistency \n\nThis CL goes against the style guide  but we should be consistent within the file  We could instead rename the existing  lightly used methods to match the style guide  but I don\ t think this will be the best use of someone\ s time \n\n
299,     Annotate benign race in AbstractTable so as to avoid TSAN issues \n\n
300,     Add StandardImmutableDirectedGraphTest\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=283039950\n  
301,     Merge StandardMutableDirectedGraphTest and its variant with stable order \n\nThis is in preparation for adding an Immutable version that also needs tests for the stable order \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=283039017\n  
302,     Make the AbstractGraphTest tree more sane with only leaf nodes non-abstract and merge the tests for with and without self-loops \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=283037760\n  
303,     Merge AbstractXGraphTest and ConfigurableSimpleXGraphTest  thus removing one layer from the AbstractGraphTest tree \n\nReason: Nobody in [  is using these abstract test classes (even though they are designed for general purpose graphs)  However  even though they aren t used  these classes add a layer of complexity to an already complex class tree that is going to become more complex with the addition of ImmutableGraph tests and stable incident edge order tests \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=283036660\n  
304,     Refactor AbstractGraphTest to allow for tests with ImmutableGraph \n\nReason: ImmutableGraph implementations are undertested compared to MutableGraph implementations  The current tests didn t catch a bug I deliberately introduced in [  Also  it would be nice to be able to share the incident edge order tests \n\nNote about design: I started out by making an AbstractGraphTest subclass for mutable graphs  However  that would lead to a duplication of all 7 subclasses and most of their tests  The issue is that directed/undirected and mutable/immutable are orthogonal and we also want to test allowSelfLoops=true/false and incidentEdgeOrder=unordered/stable  The proposed solution is somewhat unconventional  but at least allows us to share much more code between the tests \n\n
305,     AbstractNetwork: fix bug in AbstractNetwork hasEdgeConnecting() causing it to throw if either endpoint was not in the graph \n\n
306,     Make incidentEdges() return edges in insertion order\n\n
307,     Add @JsOptional annotations to the 2nd parameter of the  then  method  since the second parameter is actually optional  This satisfies JsCompiler type checking \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=282755478\n  
308,     Support incidentEdgeOrder for directed Graphs\n\n
309,     Use internal fast path for getting failure without allocating a wrapper ExecutionException\n\nAlso fix GWT AbstractFuture so that it respects the trusted interface  (More motivation for    com/google/guava/issues/2934)\n\n
310,     subject verb agreement\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=281322594\n  
311,     Update to Truth 1 0\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=281279350\n  
312,     Update Public Suffix data \n\nThe [  copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated  the [  copy is updated 3 weeks before the\nEstimated Week of Stable:\n\n   chromium org/developers/calendar#TOC-Estimated-Stable-Dates\n\nFor this update  [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=281088952\n  
313,     checker-qual 2 10 0\n\nFixes #3706\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=281041572\n  
314,     Correct documentation of getCoercedIPv4Address \n\n
315,     Use Truth assertions instead of JUnit assertions in InetAddressesTest \n\nMake assertions stronger if possible (check object equality instead of reference equality) \n\n
316,     Format with Locale ROOT \n\nThis guarantees that the message matches across locales  including hi-IN  which we test with under Maven:\n   org/google/guava/jobs/611945191\n   com/google/guava/blob/cc6cff2df9d66d4d9cd18f378cb75d03f7002852/pom xml#L212\n\n
317,     Add support for scope IDs to InetAddresses isInetAddress() \n\nFixes    com/google/guava/issues/2587\n\n
318,     Move the big integer conversion code into InetAddresses\n\n
319,     Clean up some unnecessary initializations \n\n
320,     Migrate from arrays to ImmutableSets in InetAddressesTest \n\n
321,     Roll forward CL 269313299 \n\n*** Original change description ***\n\nLet ListenableFuture implement thenable via a default interface method in J2CL\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=279693687\n  
322,     Fix broken links in AtomicDouble \n\nSee    com/google/guava/pull/3689\n\n
323,     Add javadoc in attempt to help readers differentiate Futures allAsList() vs Futures successfulAsList() \n\n
324,     Simplify some range constraints \n\nFixes    com/google/guava/pull/3607 \n\n
325,     Upgrade maven source plugin from 3 1 0 to 3 2 0\nUpgrade maven jar plugin from 3 0 2 to the latest 3 2 0\nMaven source and jar plugins both introduced build reproducibility in 3 2 0\n\nSee    com/google/guava/pull/3534\nSee    com/google/guava/pull/3681\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=279077794\n  
326,     Migrate org mockito Matchers#any* to org mockito ArgumentMatchers\n\nThe former is deprecated and replaced by the latter in Mockito 2  However  there is a\nfunctional difference: ArgumentMatchers will reject `null` and check the type\nif the matcher specified a type (e g  `any(Class)` or `anyInt()`)  `any()` will\nremain to accept anything \n\nAll remaining `any(Class)` references are migrated to `nulllable(Class)` to maintain the functionality of Mockito 1 \nAll remaining `anyString()` references are migrated to `nullable(String class)` to maintain the functionality of Mockito 1 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=278736072\n  
327,     Have ImmutableGraph Builder set incidentEdgeOrder to stable() \n\n
328,     Remove usages of deprecated CharMatcher functions\n\nFixes #3565\n\n
329,     Add GraphBuilder incidentEdgeOrder() \n\n
330,     Add @SuppressWarnings( DoNotMock ) to mocked com google common types\n\n@DoNotMock will be added to these types  This change suppresses warnings for current cases where these types are mocked \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=278536113\n  
331,     Update Documentation\n\nFixes #3507\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=277725484\n  
332,     Handle StackOverflowError from both pendingToString and appendUserObject \n\nAdds a bunch of tests to validate error handling in toString code\n- Verify that a future completing during the toString call results in a done formatted string\n- Verify that an exception thrown by pendingToString doesn t cause toString to fail\n- Verify that cycles don t cause toString to fail\n- Verify that deep chains of SetFuture don t cause toString to fail\n\n
333,     Fix toString exception handling change from 957c37116fb2cc52b2f8b405871b65a84917f2ca \n\nThis is not an ideal code fix but it restores the previous functionality and adds a test that verifies the exception handling logic \n\n
334,     Move the SetFuture check into AbstractFuture toString() and out of pendingToString()  so that even if the latter is overriden we can include the SetFuture detail \n\nThis is useful for futures that initially do some of their own work  but then delegate to setFuture()  as FutureCombiner callAsync() does \n\n
335,     Format README md \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=276739948\n  
336,     Update \ adding Guava to your build using Gradle\  snippet\n\nThe notation with brackets - () - and double quotes -   - is valid\nin both Gradle\ s Groovy and Kotlin DSL \n\nThe  compile  configuration is already discouraged since some time and\nofficially deprecated with Gradle 6 \n\nFixes #3673\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=276737926\n  
337,     Rollback\n\n*** Reason for rollback ***\n\nDidn t work:    dev/releases/snapshot-jre/api/docs/com/google/common/primitives/UnsignedInteger html#equals-java lang Object-\n\n*** Original change description ***\n\nAttempt to fix inheriting Javadoc from the JDK again \n\nIt s currently missing:\n   dev/releases/snapshot-jre/api/docs/com/google/common/primitives/UnsignedInteger html#equals-java lang Object-\n\nBut I haven t managed to reproduce the problem locally \n\nI m trying this on the theory that java home might be pointing to the JDK (the top-level directory in which src zip lives) rather than the JRE (a subdirectory) \n\nNote that JDK11 has src zip in a lib/ subdirectory  I tried adding it to a Ja   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=276546857\n  
338,     Prepare to move gwt-user to test scope after we remove GWT-RPC support \n\nWhen we do that  we\ ll no longer be able to compile ForceGuavaCompilationEntryPoint as part of the normal javac compile or build its Javadoc (because of the  missing  dependency) \n(ForceGuavaCompilationEntryPoint lives under the main (i e   non-test) sources because we want to ensure that our prod code compiles without any dependencies added by our tests )\n\nSo exclude it from the javac compile  and turn off building Javadoc altogether  (Javadoc already isn\ t useful for guava-gwt  since it covers only ForceGuavaCompilationEntryPoint and the internal serialization classes  Once the serialization classes go away and ForceGuavaCompilationEntryPoint is hidden  we would get an error from Javadoc because it wouldn\ t find *any* sources )\n\nRemoving ForceGuavaCompilationEntryPoint from the javac compile is fine: I\ ve verified that the GWT compiler still runs and identifies any GWT compilation errors  And I\ ve diffed the resulting GWT jars \n\nWhile here  I moved some GWT-specific configuration into the guava-gwt pom xml \n\nRelevant to    com/google/truth/issues/637\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=276327335\n  
339,     Make inheriting Javadoc from the JDK work under JDK11 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=276122493\n  
340,     Fix Javadoc errors (and sometimes warnings) \n\nThese are mostly (perhaps entirely) problems new with Java 11 s javadoc (or at least with Java 9+) \n\n
341,     Use int[  for entries and byte[ /short[ /int[  for hashtable\n\nThe entries array containing the hash and next index was reduced from a long[ \nto int[   This is achieved by storing only the bits of the hash not covered by\nthe hashtable mask; the bits covered by the hashtable mask are implied-by and\ncan be inferred-from the hashtable bucket index  By ensuring that next pointers\nare always less than or equal to the hashtable mask  everything needed can be\npacked into an int[   Inferring the missing hash bits from the hashtable bucket\nindex is only required for rehashing (the hashtable bucket chains must be\nwalked) and is the source of the slowdown for unsized instances \n\nThe hashtable is created as a byte[ /short[ /int[  based on size  stored as an\nObject  and cast to the correct type using instanceof checks \n\nAndroid performance impact varies but stays within +/-15% (average: 3% better) \nJVM performance impact generally stays within +/-15% but unsized instances are\nup to 42% worse (average: 5% worse) \n\nCompactHashSet Android memory usage:\nbyte[  sizes (1-255): 14-48% better (average: 43% better)\nshort[  sizes (256-65535): 24-40% better (average: 38% better)\nint[  sizes (65536+): 0-25% better (average: 22% better)\n\nCompactHashMap Android memory usage:\nbyte[  sizes (1-255): 10-40% better (average: 34% better)\nshort[  sizes (255-65535): 19-33% better (average: 31% better)\nint[  sizes (65536+): 0-20% better (average: 18% better)\n\nEffects on CompactHashSetProGuard:\n12817 bytes => 14189 bytes (+11%)\n3 classes => 3 classes (0%)\n39 methods => 44 methods (+13%)\n\nEffects on CompactHashMapProGuard:\n19133 bytes => 21883 bytes (+14%)\n11 classes => 11 classes (0%)\n75 methods => 83 methods (+11%)\n\n
342,     Add ElementOrder stable() \n\n
343,     Attempt to fix inheriting Javadoc from the JDK again \n\nIt\ s currently missing:\n   dev/releases/snapshot-jre/api/docs/com/google/common/primitives/UnsignedInteger html#equals-java lang Object-\n\nBut I haven\ t managed to reproduce the problem locally \n\nI\ m trying this on the theory that java home might be pointing to the JDK (the top-level directory in which src zip lives) rather than the JRE (a subdirectory) \n\nNote that JDK11 has src zip in a lib/ subdirectory  I tried adding it to a Java 11 build of Guava  but things blew up because the JDK contains module declarations  which naturally are incompatible with our -source 8  Possibly the right fix there is to avoid -source 8 in favor of the approach I used for jimfs in CL 272937179 -- except that maybe I already tried that and it wasn\ t sufficient? I\ m happy to punt on that for now  especially since I just tried removing -source 8 and got a bunch of  too many module declarations found  errors :)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=275925004\n  
344,     Fix ImmutableList#of Javadoc\n\nFixes #3561\n\n
345,     Fix ByteStreams skipUpTo to avoid making unnecessary allocations \n\n- Fixes    com/google/guava/issues/3662\n- Closes    com/google/guava/issues/3663\n\n
346,     Resolve some rawtypes warnings in Converter\n\n
347,     Add Stream support to Stats and StatsAccumulator \n\nThis adds:\n - A static method Stats toStats() that returns a Collector<Number  StatsAccumulator  Stats> \n - Stats of overloads and StatsAccumulator addAll overloads that take DoubleStream  IntStream  and LongStream \n - A StatsAccumulator addAll overload that takes StatsAccumulator \n\n(In passing  this also improves the tests in a couple of ways  It removes the use of static initializer blocks in StatsTesting  which is contrary to best practice  And it fixes some tolerances on the assertions: the min() and max() ones should use exact equality  and the ones with INTEGER_MANY_VALUES and LONG_MANY_VALUES should scale up the tolerance to match the order of magnitude of the values  This latter change fixes the ErrorProne warnings that  in some cases  the tolerance was actually less than the difference between the expected value and the next nearest double  It just happened that everything was close enough before )\n\n
348,     update failureaccess version to match docs with code\n\nFixes #3653\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=274569910\n  
349,     Log warnings for users who send Guava types over GWT-RPC \n\n(Roll forward CL 273803350  which was rolled back in CL 273825377  This time with updates to one-definition whitelist )\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=274191489\n  
350,     Suppress more GoodTime errors \n\n
351,     Rename package-private Duration APIs:\n  saturatedToNanos() -> toNanosSaturated()\n  saturatedToMillis() -> toMillisSaturated()\n\n#goodtime\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=273995985\n  
352,     switch to an internal annotation for ignoring JRE\nrequirements\n\nFixes #3652\n\n
353,     Revert previous CL:\n\n============\nLog warnings for users who send Guava types over GWT-RPC \n\nI ve left this change out of the Android branch  For starters  it s not necessary there  since we don t support GWT  But normally we d include it anyway to minimize diffs  However  doing so increases the number of classes retained after running Proguard (thanks  I assume  to the Logger field)  There are other ways of getting around this  but for a temporary feature  the diffs seem tolerable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=273825377\n  
354,     [OpenSearch  Add MediaType for  application/opensearchdescription+xml \n\n
355,     Steam -> Stream in the names of certain locals in ByteStream \n\n
356,     Log warnings for users who send Guava types over GWT-RPC \n\nI ve left this change out of the Android branch  For starters  it s not necessary there  since we don t support GWT  But normally we d include it anyway to minimize diffs  However  doing so increases the number of classes retained after running Proguard (thanks  I assume  to the Logger field)  There are other ways of getting around this  but for a temporary feature  the diffs seem tolerable \n\n
357,     Require tokens to be non-empty \n\nFollowup to CL 272190935 \n\nFixes    com/google/guava/issues/3626 (again :))\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=273763774\n  
358,     Address TSAN errors:\n\n1  Suppress safe racy init in AbstractMultiset and HashBiMap  All the classes that are stored in the newly annotated fields have only final fields (except HashBiMap Inverse  which inherits AbstractBiMap\ s keySet and values fields  which are themselves @LazyInit)  so they are safe to read racily \n\n2  Mark some graph  cache  fields as volatile  These fields are an optimization: When the user accesses an entry through iteration (and sometimes through get(   ))  the graph stores the entry in a field  That way  if the user then queries it again (such as to look up the value associated with a key during iteration)  the graph doesn\ t have to perform a potentially mildly expensive lookup  But this caching isn\ t implemented in a thread-safe way  It *ought* to be safe to initialize a graph in one thread  safely publish it  and then read it concurrently from other threads  But because of the racy reads of the cached entry fields  I don\ t think this is guaranteed to be safe \n\n
359,     Remove duplicate null check from EnumMultiset \n\nFixes    com/google/guava/pull/3559\n\n
360,     Change tryParse methods to explicitly document that they throw NPE if the input is null \n\nThis is to hopefully reduce the chance of confusion based on the fact that the methods say that they do not throw an exception  if parsing fails  \n\nFixes    com/google/guava/issues/1259\n\n
361,     Document the JDK 9+ alternative to `MoreObjects#firstNonNull`\n\nFixes    com/google/guava/pull/3383\n\n
362,     Upgrade maven source plugin from 2 1 2 to 3 1 0\n\nFixes    com/google/guava/pull/3466\n\n
363,     Use if statement instead of for statement for a single item \n\nFixes #3633\n\n
364,     Bump version  which went out of date since the previous CL was created \n\n
365,     Change Quantiles  compute() methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes() \n\nFixes    com/google/guava/pull/2989\n\n
366,     Add testlib readme \n\nFixes #3453\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=272455172\n  
367,     Fix the logic that decides whether to use currentRequestThreadFactory() under App Engine \n\nWhile there  also support thread renaming under App Engine \n\nFixes    com/google/guava/issues/3598\nRelevant to    com/google/guava/issues/3606\n(also  the CL in which I experimented with    com/google/guava/issues/3569 before backing it out)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=272446666\n  
368,     Add a MIME type MPEG-DASH (mpd files)\n\nFixes #2677\n\n
369,     Document the JDK 9+ alternative to `Iterators#forEnumeration`\n\nFixes #3382\n\n
370,     Simplify some code \n\nFixes #3580\n\n
371,     Check the array indexes in Quantiles ScaleAndIndexes is non empty \n\nFixes #3210\nFixes #3211\n\n
372,     Add constant for the Cross-Origin-Opener-Policy header \n\n[ \n\n
373,     Add missing @since 20 0 \n\n
374,     Fix 2 bugs in MediaType parameter handling:\n\n1  Make empty parameter values serialize to a quoted string \n2  Require parameter values to be ASCII \n\nFixes    com/google/guava/issues/3626\n\nRelnotes:\n  Made `MediaType` serialize empty parameter values to quoted strings \n  Made `MediaType` reject non-ASCII parameter values \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=272190935\n  
375,     Update errorprone to 2 3 3\n\nFixes #3628\n\n
376,     Add Futures submit() \n\n
377,     Add Splitter splitToStream() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=271168270\n  
378,     s/a/an/\n\n
379,     Test iteration over a collection containing null \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=270909197\n  
380,     Clean up leftovers from MapMaker makeComputingMap:\n\n- Remove makeComputingMap from the GWT emulation \n- Deprecate ComputationException \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=270019222\n  
381,     Rollback of change to let ListenableFuture implement thenable via a default interface method in J2CL \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=270016981\n  
382,     Rollback of adding Splitter splitToStream() \n\n*** Reason for rollback ***\n\nMy guess is that this change somehow upsets an allowed list of\none-definition violations \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=269929261\n  
383,     Add comment explaining TABLE and MULTIPLIER in CharMatcher Whitespace\n\nFixes #1661\n\n
384,     Add Splitter splitToStream() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=269903927\n  
385,     Undo test CL 9a50815df26be7416be0fac489e29feee7a3c220 \n\nIt produces a tiny diff between the common base and common collect copies of AbstractIterator \n\n
386,     Add test for behavior described in #1900\n\n
387,     Let ListenableFuture implement thenable via a default interface method in J2CL \n\nThis is a second attempt after problems in e0bac74571b81756c4acf767e3ad186b7473a4f8 were fixed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=269313299\n  
388,     Add @LazyInit and @RetainedWith annotations to the lazily calculated  entries  field of ImmutableSetMultimap \n\nThis field is lazily evaluated by entries() without holding a lock  but multiple concurrent calls to entries() will produce idempotent results at the cost of some performance \n\n
389,     Export new AtomicLongMapBasherTest to open-source repo \n\n   com/google/guava/pull/3605#discussion_r324303026\n\n
390,     Increase various tests  timeouts \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=268726044\n  
391,     Fix (and in one case  suppress) low-hanging rawtypes warnings \n\nIt looks like at least some of these may once have been necessary for the Eclipse compiler (used by GWT)  In fact  I had to revert one similar change because it broke a GWT build  I m hoping that that means that the others are safe \n\n
392,     Roll forward previous rollback  but without making the type final \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=268660218\n  
393,     Rollback previous commit \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=267685692\n  
394,     Combine ImmediateSuccessfulFuture into ImmediateFuture \n\nImmediateFuture used to have other implementations  but we switched those to extend TrustedFuture instead \n\n
395,     Explicitly document that whenAllComplete will swallow failures (in contrast to waiting for all futures to complete and then propagating the first failure) \n\n
396,     Modify comment about safeOctets length to be consistent with code \n\n
397,     Update Public Suffix data \n\nThe copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated  the copy is updated 3 weeks before the\nEstimated Week of Stable:\n\n   chromium org/developers/calendar#TOC-Estimated-Stable-Dates\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=266255422\n  
398,     Let ListenableFuture implement thenable via a default interface method in J2CL\n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=266217624\n  
399,     Let ListenableFuture implement thenable via a default interface method in J2CL\n\n
400,     Release the input futures as soon as we submit the combiner task  But really  redo how we release resources in general \n\nThis is a followup to CL 265489523  which  only  released the input futures as soon as the combiner task finished running (which had often happened even before that CL but hadn\ t if the combiner returned a Future that was still pending)  That CL was good enough for practical purposes  but I wanted to better understand how we release resources \n\nThis CL standardizes on AggregateFuture releaseResources() as the way to null out all fields[*   merging logic from releaseResources()  releaseResourcesAfterFailure()  and AsyncCallableInterruptibleTask setValue(   )  As part of that  it merges AggregateFuture and AggregateFutureState/RunningState into a single object \n\n[*  OK  except seenExceptions  which gets its own handling  As a bonus  I believe that this CL clears seenExceptions earlier than it used to be cleared in the CombinedFuture case  Specifically  it clears it when all inputs are done  rather than when the combiner task has finished running \n\nIt turns out that blindly nulling out fields is too aggressive  so we need to be careful in 2 cases:\n\n1  CombinedFuture releaseResources() can\ t null out `task` until the future is done or the task is done running  That\ s because it may need to interrupt the task  To handle this  I don\ t null out `task` in releaseResources() unless isDone()  To ensure that `task` still gets nulled out as soon as it\ s done running  I null it out directly in afterRanInterruptibly()  (OK  this is another exception to my claim that releaseResources() handles nulling out  all  fields    )\n\n2  Even if the output future is done  processCompleted() sometimes needs access to the original futures in order to see whether any of them failed  To handle this  I store them in the listener and pass them through to processCompleted() (when necessary) \n\nThe changes to prod code are net negative in line count  at least ignoring the added comments  I\ ve also added a couple tests  only one of which passed before this CL  And I think the model for when fields are nulled out is overall clearer after this CL  So hopefully this CL is a step forward  despite the complexity of the changes and the remaining complexity in the code  (I also included a few unrelated simplifications  like not bothering to check collectsValues before calling collectOneValue(   ) )\n\n(Aside: This CL\ s releaseResources() is like our proposed afterCommit() API but different  First  releaseResources() may be called even before set() or setAsync() in the CombinedFuture case  Second  CombinedFuture may rely on the fact that it\ s called twice in some cases: It\ s called once when all inputs complete  but it doesn\ t null out `task`  and then it can be called again if the output is cancelled  at which point it *does* null out `task`  But that probably doesn\ t matter too much because the task was probably handed to an executor in the meantime  so CombinedFuture is unlikely to hold the final reference to it  Anyway  for more discussion of afterCommit()  see    com/google/guava/issues/2886)\n\n[ \n\n
401,     Prepare for release 28 1 \n\n
402,     Add missing @since  setting it straight to 28 1 \n\n
403,     Fix snapshots (and snapshot javadoc/jdiff) to be created again \n\nThey stopped at some point when we switched from oraclejdk8 to openjdk8 on Travis \n\n
404,     Prepare for removing GWT-RPC support for Guava types by adding a system property that disables it \n\nWhen the time comes  we ll flip the default value  and users who didn t see our earlier warnings can use a system property to restore support until they can stop serializing our types \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=265490471\n  
405,     Release resources of whenAllSucceed/whenAllComplete once input futures are complete \n\n
406,     Simplify while+break into do-while \n\nFixes #3577\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=265464337\n  
407,     Fix  bug  link that was actually a CL \n\n
408,     Restore Javadoc unintentionally lost in CL 264984423 \n\n   com/google/guava/pull/3575#issuecomment-524440221\n\n
409,     Adds constant for the Upgrade-Insecure-Requests header \n\n   github io/webappsec-upgrade-insecure-requests/#preference\n\n
410,     Automated g4 rollback of changelist 263577879 \n\n*** Original change description ***\n\nTemporarily update public_suffix to include web app\n\nWithout this  developers are not able to set up Google OAuth clients with URLs in Firebase Hosting web app domain \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=264649425\n  
411,     Fix #3570 by resetting expandTableThreshold and\nmaxRunBeforeFallback after resizing the hashTable \n\nFixes #3571\n\n[ \n\n
412,     Add toString() to ForwardingFluentFuture  to match ForwardingFuture\n\n
413,     Temporarily update public_suffix to include web app\n\nWithout this  developers are not able to set up Google OAuth clients with URLs in Firebase Hosting web app domain \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=263577879\n  
414,     Fix    com/google/guava/issues/3156 by implementing a proper `CollectSpliterators flatMapTo Int Long Double ` \n\nAlso  modify the existing `CollectSpliterators flatMap` to accept `null` from its `function` by treating it as an empty `Stream`  like `Stream flatMap` does  Add tests for this behavior \n\nTo test that the new methods also accept `null` through both their ` Int Long Double Consumer` APIs and their `Consumer` APIs  add `of Int Long Double ` methods to `SpliteratorTester`  They test the given `Spliterator of Int Long Double ` through both APIs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=263208125\n  
415,     Add note about  @code ByteSource wrap  s use of the given byte array \n\nFixes    com/google/guava/issues/2603\n\n
416,     Document that HashBiMap containsValue() tends to run in faster-than-linear time (overriding the default documentation from AbstractMap containsValue()) \n\nFixes #1973\n\n
417,     Add more clarification on what  access  means in expireAfterAccess() \nPrevious comment doesn\ t mention  containsKey() \n\nCopied from    com/google/guava/wiki/CachesExplained#asmap\n\n
418,     Fix an issue where the InputStream returned by BaseEncoding decodingStream(Reader) could fail to throw DecodingException while decoding an invalid string \n\nThis was caused by the default behavior of InputStream read(byte[   int  int)  which swallows any IOException thrown by any call to the single-byte read() method other than the first  To fix it  just override that method with an implementation that does not swallow any exceptions \n\nFixes    com/google/guava/issues/3542\n\n
419,     Change a use of Iterable forEach  which isn t available under Desugar \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=260986815\n  
420,     Add MediaType for  image/heif  and  image/jp2 \n\n
421,     gwt xml change from internal change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=260785140\n  
422,     Change the Splitter::limit arg to maxItems  for IDE usage \n\nThe old name of `limit` was uninformative when presented in e g  IDE autocompletions  `maxItems` will help distinguish it from the alternative meaning of max number of splits to make \n\n
423,     Remove inaccurate comment \n\n
424,     Link to guava-announce \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=259743523\n  
425,     Add RangeMap#merge  analogous to Map#merge \n\nRollback of 8000dc992d0124372972729b20df40a42b27a849\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=258637808\n  
426,     Rename a method to avoid J2ObjC collisions\n\nPrevent J2ObjC from treating `getAddSuppressed` as a getter by renaming it `generateAddSuppressed`  This silences a -Wobjc-property-implementation warning; soon  such warnings will become errors  See the referenced bug for full context \n\n
427,     Remove unneeded @SuppressWarnings from @Benchmark methods \n\n
428,     Clarify that SortedSetMultimap exposes the values for a key in sorted order but does *not* necessarily expose the keys in sorted order \n\n
429,     Automated rollback of 8dc46a72fa5417d02063052f05fd0355703411fc\n\n*** Reason for rollback ***\n\nBreaking a number of projects\n\n*** Original change description ***\n\nAdd RangeMap#merge  analogous to Map#merge \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=256288437\n  
430,     Add RangeMap#merge  analogous to Map#merge \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=256273536\n  
431,     Saturate LongAdder sum() results to Long MAX_VALUE during an overflow \n\nFixes    com/google/guava/issues/3503\n\n
432,     Fix some rawtypes in com google common cache \n\n
433,     Add a test for LongAdder overflow behavior \n\nSee    com/google/guava/issues/3503\n\n
434,     Update Fetch Metadata (formerly Sec-Metadata) headers to point to w3c documentation now it s been adopted by WebAppSec \n\n
435,     Fix typo in ImmutableList java \n\n
436,     Fix the travis build\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=255595656\n  
437,     Use LongMath saturatedAdd/Subtract in CacheStats \n\nFixes    com/google/guava/issues/3503\n\n
438,     Halve memory consumption when creating a Bloom filter \n\nAtomicLongArray(long[ ) clones its input  which is a waste when we re passing\nin a new array \n\n
439,     Add more @Nullables to variadic parameter lists \n\n
440,     Tweaks to the list of Guava features \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=253664020\n  
441,     Use saturatedToNanos() in CacheBuilder to avoid overflows \n\n
442,     Document default values of builder setters \n\n
443,     Upgrade animal sniffer version to 1 18\n\nFixes #3497\n\n
444,     Split catch() blocks so that javac doesn t generate a reference to their common supertype  ReflectiveOperationException \n\nReflectiveOperationException isn t available on the old versions of Android that we support \n\nAs far as we know  there is no actual problem with these references because no methods are called on them  However  the new version of Animal Sniffer we re updating to will flag them anyway  and I think that avoiding them is the safe thing to do \n\nPrepares for #3497\n\n
445,     Fix typo in  stoppingCount  variable name\n\nFixes #3500\n\n
446,     Add missing description tags to guava-parent poms \n\nWe were previously apparently inheriting them from sonatype-oss-parent  until we removed that  Releases don\ t work without a description   Invalid POM: /com/google/guava/guava-parent/28 0-android/guava-parent-28 0-android pom: Project description missing \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=252733039\n  
447,     Prepare for release 28 0 \n\n
448,     Push back removal date for some deprecated APIs \n\n
449,     Fix typo in testFindClassesToTeset_ignoreUnderscores\n\nFixes #3499\n\n
450,     Remove `inOrder` assertion for iterable with single element \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=252398740\n  
451,     Use `Stream empty()` instead of `Stream of()` to get empty stream \n\n
452,     Fix typo for accomodate -> accommodate in LocalCache \n\nAs raised in #3492\n\n
453,     Delete deprecated callWithTimeout() \n\n
454,     Make the adjacentNodes() documentation a little bit more clear \n\n
455,     Simplify implementation of Graphs reachableNodes()\n\n
456,     Make the incidentEdges() documentation a little bit more clear \n\n
457,     Clarify behavior of `ImmutableList#copyOf` for null argument \n\nFixes #3485\n\n
458,     Upgrade maven-gpg-plugin to 1 6\n\nFixes github com/google/guava/pull/3490\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=251265047\n  
459,     Remove `@Beta` from `setFuture` \n\n
460,     Document the Java 9 alternatives for Optional APIs \n\n
461,     MapMakerInternalMap - Remove redundant if statement\n\nFixes #3489\n\n
462,     Add Duration-based overloads to MoreExecutors \n\n#goodtime\n\n
463,     Replace google github io/dagger with dagger dev\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250908858\n  
464,     Add Duration-based default methods to the TimeLimiter interface \n\n#goodtime\n\n
465,     Migrate Correspondence subclasses to instead call Correspondence from \n\nThis makes the code shorter  and the subclassing approach is deprecated \n\nOpen-source note: Correspondence from was added to Truth 0 43  (So was Correspondence transforming  which I m using occasionally instead ) Correspondence formattingDiffsUsing was added in Truth 0 44 \n\nEND_PUBLIC\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250766819\n  
466,     Replace maven prerequisites with the enforcer plugin\n\nAdds minimum required maven and java version into the parent poms which gets inherited by all children \n\nFixes #3483\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250564119\n  
467,     Fix Javadoc \n\nFixes #3487\n\n
468,     Update Public Suffix data \n\nThe [  copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated  the [  copy is updated 3 weeks before the\nEstimated Week of Stable:\n\n   chromium org/developers/calendar#TOC-Estimated-Stable-Dates\n\nFor this update  [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250513952\n  
469,     Fix littleEndian/bigEndian checks in HashTestUtils \n\nThis surfaced as two errorprone warnings while creating a copy this code: \ bigEndian\  is currently unused  Let me know if I inferred the intented semantics of the test correctly?\n\nThe methods that calls this tests  assertHashByteBufferInvariants(  )  seems currently unused in [  -- I assume that\ s why  assertEquals(ByteOrder BIG_ENDIAN  littleEndian order());  didn\ t trigger any errors  (Also  the fix shouldn\ t break anything then) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250455177\n  
470,     RFC1123 InternetDomainName Test Cases\n\nFixes #3482\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250345834\n  
471,     Fix Apache license name in guava pom\n\nCloses    com/google/guava/pull/3471\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=250289501\n  
472,     Update documentation to refer correct method name \n\n   oracle com/javase/8/docs/api/java/util/Map html#getOrDefault-java lang Object-V-\n\n
473,     Fix Javadoc links \n\nFixes    com/google/guava/pull/3481\n\n
474,     Add Cross-Origin-Resource-Policy header name constants \n\nDetails    spec whatwg org/#cross-origin-resource-policy-header\n\n
475,     Upgrade maven-javadoc-plugin to 3 1 0 \n\nFixes    com/google/guava/pull/3478 \n\n
476,     Add MediaType for  application/geo+json  \n\nvia    com/google/guava/pull/3243\n\n
477,     Fix Streams zip documentation typo \n\n
478,     Fix  Apache License  Version 2 0  spelling\n\nThere are many Java libraries licensed under  Apache License  Version 2 0  that do not use its official spelling \nThis causes issues like    apache org/jira/browse/MPIR-382: with every library defining its own spelling  it\ s difficult in large projects to have a clear view of all licenses in use \nThis PR changes the license spelling to the official one  as advised by Maven developers \n\nCloses    com/google/guava/pull/3471\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=249139087\n  
479,     Define project build source encoding as UTF-8\n\nCloses    com/google/guava/pull/3465\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=249112040\n  
480,     Add Duration-based overload to Monitor \n\n#goodtime\n\n
481,     Add Duration-based overloads to RateLimiter \n\n#goodtime\n\n
482,     Remove CheckedFuture utilities from util concurrent Futures \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=248947498\n  
483,     Add Duration-based overloads to ServiceManager \n\n#goodtime\n\n
484,     Add Duration-based overloads to Service \n\n#goodtime\n\n
485,     Add Duration-based overloads to AbstractScheduledService \n\n#goodtime\n\n
486,     Add Duration-based overloads to Futures \n\n#goodtime\n\n
487,     Add Duration-based overloads to FluentFuture \n\n#goodtime\n\n
488,     Add Duration-based overloads to MoreExecutors \n\n#goodtime\n\n
489,     Always complete TimeoutFuture  even if toString() throws\n\n
490,     Add Duration-based overloads to Uninterruptibles \n\n#goodtime\n\n
491,     Tighten the GoodTime suppression locations in RateLimiter \n\n#goodtime\n\n
492,     Copy Durations saturatedToNanos(Duration) to package-private c g c u c Internal so it can be used by the concurrent package (and in Guava) \n\n#goodtime\n\n
493,     Add a link back to the goodtime rate bug \n\n
494,     Remove app link from the Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=247658982\n  
495,     Add a new header field  CDN-Loop  to httputils \n\nMore details:    ietf org/html/rfc8586\n\n
496,     Add Queues drain(BlockingQueue  Collection  int  Duration) and drainUninterruptibly(BlockingQueue  Collection  int  Duration) \n\n
497,     Add FakeTicker advance(Duration) and setAutoIncrementStep(Duration) \n\n#goodtime\n\n
498,     Update versions of some Guava dependencies \n\nFixes    com/google/guava/issues/3405\n\n
499,     Upgrade compiler plugin \n\nFixes    com/google/guava/pull/3454 \n\n
500,     Add java util UUID to ArbitraryInstances\n\nFixes #3448\n\n
501,     Add app link to the Public Suffix List \n\nThis is a temporary solution to stop app link affiliated websites being grouped together in the Password Manager UI  We will reach out to the owners of app link and work with them to update the public version of the PSL \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=246976477\n  
502,     Upgrade maven dependency plugin \n\nFixes    com/google/guava/pull/3456\n\n
503,     Migrate from assertThat(foo) named( foo ) to assertWithMessage( foo ) that(foo) \n\n(The exact change is slightly different in some cases  like when using custom subjects or check()  but it\ s always a migration from named(   ) to [assert WithMessage(   ) )\n\nnamed(   ) is being removed \n\nThis CL may slightly modify the failure messages produced  but all the old information will still be present \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=246367399\n  
504,     Remove CheckedFuture from Guava \n\n
505,     A few more doc tweaks  caught by @jbduncan in f2591b5c2a\n\n
506,     Migrate from is(Not)SameAs to is(Not)SameInstanceAs \n\nThey behave identically  and the old names are being removed \n\nOpen-source note: The new methods are available in Truth as of version 0 44 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=246135538\n  
507,     Migrate from assertThat(foo) named( foo ) to assertWithMessage( foo ) that(foo) \n\n(The exact change is slightly different in some cases  like when using custom subjects or check()  but it\ s always a migration from named(   ) to [assert WithMessage(   ) )\n\nnamed(   ) is being removed \n\nThis CL may slightly modify the failure messages produced  but all the old information will still be present \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=245945957\n  
508,     Fixed some links \n\nThe comparisons to the Android Hash* classes haven t been accurate since at least CL 81367572  so I ve removed them entirely \n\nFixes #3398\n\n
509,     Migrate from isNotSameAs to isNotSameInstanceAs \n\nThe two behave identically  and isNotSameAs is being removed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=245089419\n  
510,     Update to Truth 0 44 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=244957378\n  
511,     Remove outdated references to the  next release of Guava  \n\n
512,     Update Public Suffix data \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=244682930\n  
513,     Match the casing of the WebSocket HTTP headers to the RFC directly \n\n
514,     Fix misspelled Sec-WebSocket-Version header \n\nThe correct name is Sec-WebSocket-Version  not Sec-WebSocket-Versions \n\n
515,     Enable GoodTime-API\n\n
516,     Update NetworkBuilder documentation with option of building an immutable graph \n\n
517,     Update ValueGraphBuilder documentation with option of building an immutable graph \n\n
518,     Mitigate    com/google/guava/issues/3223 by guessing that Sets are already deduplicated and making  half and half  expectations about un-duplicated inputs in ImmutableSet creation \n\n
519,     Override a method instead of special-casing it \n\n
520,     Remove obsolete parent per    com/sonatype/oss-parents\nand Fixes    com/google/guava/issues/2756\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=243291402\n  
521,     Upgrade error_prone\n\nFixes #3439\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=242946434\n  
522,     Simplify graph PackageSanityTests by applying the new immutable graph builder \n\n
523,     Update GraphBuilder documentation with option of building an immutable graph\n\n
524,     Add websocket headers to HTTP header listings \n\nThis adds five headers  as defined in RFC 6455: Sec-WebSocket-Accept \nSec-WebSocket-Extensions  Sec-WebSocket-Key  Sec-WebSocket-Protocol  and\nSec-WebSocket-Versions \n\nThis also changes the C++ per-header unit test so that it can recognize the\nalternate capitalization of WebSocket  instead of adding five special cases  The\nGo and Java versions use the  Websocket  capitalization instead \n\n
525,     Bumped the FPP to prevent OOMs on JDK 11 \n\n
526,     Fix @param tag as per    com/google/guava/pull/3431#pullrequestreview-221507095\n\ncc @jbduncan\n\n
527,     Remove unused configuration of load factor\n\nThis allows removal of loadFactor/threshold which saves 8 bytes per object \n\nWhile here:\n- Reduce diff between Map/Set classes\n- Make base forEach() work for Linked classes\n\nShallow object size (bytes):\n- CompactHashMap: 64 -> 56\n- CompactLinkedHashMap: 80 -> 72\n- CompactHashSet: 40 -> 32\n- CompactLinkedHashSet: 56 -> 48\n\n
528,     Add NetworkBuilder immutable() \n\n
529,     Remove unnecessary Type parameter\n\n
530,     Add ValueGraphBuilder immutable() \n\n
531,     Use byte[ /short[ /int[  for hashtable depending on size\n\nThe hashtable is stored as an Object and cast to the correct type using\ninstanceof checks \n\nMemory:\nbyte[  sizes (2-89): 12-41% better (average: 32% better)\nshort[  sizes (90-22937): 20-29% better (average: 24% better)\nint[  sizes (22938+): unchanged\n\nRuntime on a Pixel 2:\ncreateAndPopulate: 9% better to 6% worse (average: 4 3% better)\nget: 1% better to 8% worse (average: 3 5% worse)\niterateWithKeySetAndGet: 9% better to 13% worse (average: 3 2% worse)\niterateWithEntrySet: unchanged (doesn t use hashtable)\n\nEffects on ImmutableMapProGuard:\n59105 bytes => 60369 bytes (+2 1%)\n21 classes => 21 classes (0%)\n200 methods => 201 methods (+0 5%)\n\nEffects on ImmutableBiMapProGuard:\n68893 bytes => 70235 bytes (+1 9%)\n25 classes => 25 classes (0%)\n232 methods => 233 methods (+0 4%)\n\n
532,     Add FluentFuture from(FluentFuture) factory method \n\nThis follows the steps of FluentIterable from(FluentIterable) and other\n“migration aid” methods that are deprecated from inception and are just here to\npoint out code that is no longer needed \n\n
533,     Implement GraphBuilder immutable() \n\n
534,     Adds constants for prefetch headers \n\nOf note  X-Purpose is NOT just a google specific header as previously defined \n\n   mozilla org/en-US/docs/Web/HTTP/Link_prefetching_FAQ#As_a_server_admin 2C_can_I_distinguish_prefetch_requests_from_normal_requests 3F\n\n   google com/web/updates/2018/07/nostate-prefetch\n\n
535,     Add (unimplemented) API for GrapbBuilder immutable() and ImmutableGraph Builder \n\n
536,     Lazily allocate CompactHash backing arrays on first write\n\nEmpty maps/sets are extremely common  Lazily allocating the backing arrays can\nsave hundreds of KB of heap and reduce load on the garbage collector \n\nWhile here:\n- Use serialized size to pre-size the arrays\n- Respect ordering during serialization (without using an iterator)\n- Consistently mark unused links as UNSET\n\nMemory savings before first write (bytes):\n- CompactHashMap create(): 184 -> 64\n- CompactLinkedHashMap create(): 240 -> 80\n- CompactHashSet create(): 136 -> 40\n- CompactLinkedHashSet create(): 200 -> 56\n- CompactHashMap createWithExpectedSize(0): 136 -> 64\n- CompactLinkedHashMap createWithExpectedSize(0): 168 -> 80\n- CompactHashSet createWithExpectedSize(0): 96 -> 40\n- CompactLinkedHashSet createWithExpectedSize(0): 144 -> 56\n\n
537,     Use J2ObjC s @RetainedWith annotation instead of @Weak on\nImmutableMap entrySet() to prevent crashes on iOS \n\nTESTED=Created a map inside an autorelease pool and saved a reference to the\nentry set  Checked that the entry set functions correctly outside the\nautorelease pool  Checked that both the entry set and the are deallocated by the\nautorelease pool when not holding a strong reference to the entry set  Did this\ntest with the following constructions to cover all entry set implementations:\n- ImmutableMap of(<2 entries>)\n- ImmutableMap copyOf(<EnumMap with 2 entries>)\n- ImmutableSortedMap of(<2 entries>)\n- ImmutableBiMap of(<2 entries>) inverse()\n\n
538,     Prepare for release 27 1 \n\n
539,     Add missing @since NEXTs \n\n
540,     Internal GWT change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=237058448\n  
541,     Remove misleading javadoc line (we haven t published microbenchmarks in N\nyears) \n\nFixes #3396\n\n
542,     Optimize ImmutableSet s hash flooding detection  using an algorithm which allows more false positives (though we calibrate the constant factors to compensate) but runs O(log n) times faster on average \n\n
543,     Suppress error for bad implementations of Comparable\n\n
544,     Update Public Suffix data \n\nThe [  copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated  the [  copy is updated 3 weeks before the\nEstimated Week of Stable:\n\n   chromium org/developers/calendar#TOC-Estimated-Stable-Dates\n\nFor this update  [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=236146421\n  
545,     Document that the memory increases appear to be necessary for Travis only (and that they do appear to solve the problem there) \n\n
546,     Fix a URL \n\n
547,     Remove GWT emulations that are no longer needed as of GWT 2 8 2 \n\n
548,     Fix Javadoc breakage under JDK11 canary \n\n   openjdk java net/browse/JDK-8212233\n   openjdk java net/browse/JDK-8193030\n\n
549,     Use J2ObjC s @RetainedWith annotation instead of @Weak on ImmutableMap values\nto prevent crashes on iOS \n\nTESTED=Created a map inside an autorelease pool and saved a reference to the\nvalues collection  Checked that the values collection functions correctly\noutside the autorelease pool  Checked that both the values collection and the\nmap are deallocated by the autorelease pool when not holding a strong reference\nto the values collection  Did this test with ImmutableMap of(<2 entries>) and\nImmutableMap copyOf(<EnumMap with 2 entries>) \n\n
550,     Internal GWT change\n\n
551,     Create constants for the SourceMap header\n\nNone of the tests like this header name  so each required some workarounds \n\n
552,     Modernize book reference \n\n
553,     Document the JDK 9+ alternative to `Maps#immutableEntry`\n\nFixes #3385\n\n
554,     Annotate checkNotNull s input and output as @NonNull \n\nWe don t want to go down the road of annotating most things @NonNull  as we eventually want to use tools that assume that that s the default  However  it s pretty weird for checkNotNull() to return a @Nullable value in the minds of some tools  so let s annotate just that method and see how it goes \n\n
555,     Use J2ObjC s @RetainedWith annotation instead of @Weak on ImmutableMap keySet\nto prevent crashes on iOS \n\nTESTED=Created a map inside a autorelease pool and saved a reference to the\nkeyset  Checked that the keyset functions correctly outside the autorelease\npool  Checked that both the keyset and the map are deallocated by the\nautorelease pool when not holding a reference to the keyset  Did this test with\nboth ImmutableMap of(<2 entries>) and ImmutableBiMap of(<2 entries>) \n\n
556,     Automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66\n\n*** Original change description ***\n\nInternal GWT change\n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=233628983\n  
557,     Internal GWT change\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=233617662\n  
558,     Delete WellBehavedMap \n\nThe bug it worked around was fixed in Java 7:\n   java com/bugdatabase/view_bug do?bug_id=6312706\n\nAnd I don t believe it was ever present under Android:\n   googlesource com/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/EnumMap java#146\n\nI haven t looked for the absolute first version ever of GWT  but the still very old GWT file doesn t have the bug  either \n\nDeleting this class will simplify some work I m doing around our EnumMap usage for j2cl \n\n
559,     Make a constructor private \n\n(I m looking into EnumMap stuff for other reasons  and I got to wondering if this was used outside the file  Nope )\n\n
560,     Remove @CanIgnoreReturnValue from Ordering sortedCopy() and immutableSortedCopy() \n\n
561,     Add some known UTF-8 hash values to Murmur3_32 tests  UTF-8 is more comparable between platforms than relying on Java s internal encoding \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=232756904\n  
562,     Remove @Beta from APIs:\n\ncollect\n- most Collectors (aside from BloomFilter and ImmutableRange*  as those whole classes are @Beta (though I did remove the redundant @Beta annotation from the Collector-returning methods for clarity))\n- Maps: asConverter  immutableEnumMap\n- MultimapBuilder\n- Streams: stream(Iterable)  concat\n\nio\n- ByteStreams: copy  toByteArray\n- CharStreams: copy  toString\n- Files: as(Char|Byte)(Source|Sink)\n\nutil concurrent\n- Futures: addCallback  getDone  getUnchecked  immediateCancelledFuture  immediateFailedFuture  immediateFuture\n- ListeningScheduledExecutorService\n- Uninterruptibles\n\nother\n- HtmlEscapers\n- Splitter splitToList\n- Ticker\n\nFixes    com/google/guava/pull/3287\nFixes    com/google/guava/issues/3251 (aside from ImmutableRange*  but those whole classes are @Beta  anyway)\nAddresses the main concerns of    com/google/guava/issues/3285 but doesn t cover the broader request\nFixes    com/google/guava/issues/3340\nPartially addresses    com/google/guava/issues/3239\n\n
563,     Name the method parameter  unused  for ImmutableSortedSet readObject(ObjectInputStream) (so the static analysis doesn t complain)\n\n
564,     Reformat with google-java-format\n\n
565,     Document the retention of listeners added to Guava implementations of ListenableFuture \n\n
566,     Add missing @Override annotations\n\n
567,     Reformat with google-java-format\n\n
568,     Remove unused imports and warnings \n\nFixes #3356\n\n
569,     Add Report-To header \n\n   w3 org/TR/reporting/\n\n
570,     Remove @CanIgnoreReturnValue from Futures catchingAsync()\n\n
571,     Removes java/util GWT emul dependency\n\nMost of the emulation provided by this target moved to JRE proper and most of dependencies are no longer needed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=230773476\n  
572,     Remove @CanIgnoreReturnValue from c g c collect Lists newArrayList() \n\n
573,     Automated rollback of commit 8fd7f60484218df9a208df0edf41bdee22d86900\n\n*** Reason for rollback ***\n\n*** Original change description ***\n\nRemoves java/util GWT emul dependency\n\nMost of the emulation provided by this target moved to JRE proper and most of dependencies are no longer needed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=230673390\n  
574,     Removes java/util GWT emul dependency\n\nMost of the emulation provided by this target moved to JRE proper and most of dependencies are no longer needed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=230668984\n  
575,     Remove @CanIgnoreReturnValue from c g c base Ticker\n\n
576,     Remove @CanIgnoreReturnValue from c g c collect Iterators getOnlyElement()\n\n
577,     Remove @CanIgnoreReturnValue from c g c collect ClassToInstanceMap getInstance()\n\n
578,     Swap the parameter order of the Collections disjoint call in Sets intersection\n\nCollections disjoint is implemented in such a way that it has better\nperformance if its 2nd parameter is the smaller of the two when both params are\ninstances of Set  The Sets intersection javadoc says it has better performance\nwhen set1 is the smaller set  but that is currently not the case for the\nisEmpty operation specifically \n\nOur team ran into a pathological case of this where we check for an empty\nintersection of two sets  one being ~5 orders of magnitude larger than the\nother \n\n
579,     Remove @CanIgnoreReturnValue from c g c collect Ordering min/max()\n\n
580,     Adds constants for Sec-Fetch-(Dest|Mode|Site|User) headers \n\n   com/mikewest/sec-metadata\n\n
581,     refactor literal to named constant\n\nFixes #3364\n\n
582,     Enable GoodTime-API for c g common cache\n\n
583,     Correct the spelling of the Range class \n\nIt s Range not Ranges \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=227899203\n  
584,     Specify that Range static factories can throw ClassCastException if the provided endpoints are not mutually comparable \n\nFixes    com/google/guava/issues/3343\n\n
585,     Hide Files methods that are @Deprecated internally\n\n
586,     Use maven-javadoc-plugin 3 0 1 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=225846924\n  
587,     Suppress soon to be GoodTime errors ( time  is now considered a keyword) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=225199757\n  
588,     Add the application/jose and application/jose+json media types \n\n   iana org/assignments/media-types/application/jose\n   iana org/assignments/media-types/application/jose+json\n   ietf org/html/rfc7515#section-9 2\n\n
589,     Use the primitive  number  type instead of the object counterpart  Number  to avoid a jscompiler error \n\nAn upcoming change to J2CL that simplifies how casting logic is transpiled will make the code  (Number) (Object) 3  here transpile to just  /** @type  Number  */ (3)  and jscompiler will see the  invalid cast  since  3  is not  Number  in the closure type system \n\n
590,     Make example compile (i e  supply a Path/File) and use depth first instead of breadth first \n\nReason: Depth first is more common for file traversal \n\n
591,     Remove  Media type for  or similar phrasing for visible constants in the MediaType class \n\n
592,     Add missing documentation and @since tags to MediaType entries that were added\nafter its initial relase of 12 0\n\n
593,     Add the @Immutable a few more classes  Both annotations enforce at compile-time that the annotated class meets the annotation’s requirements \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=223369138\n  
594,     Internal change\n\n
595,     Update Public Suffix data \n\nThe copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated  the copy is updated 3 weeks before the\nEstimated Week of Stable:\n\n   chromium org/developers/calendar#TOC-Estimated-Stable-Dates\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=222877055\n  
596,     Replace usages of Truth s deprecated hasMessage() with hasMessageThat() in Guava tests \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=222834185\n  
597,     Improve docs on Splitter fixedLength() when used in conjunction with Splitter limit() \n\nFixes    com/google/guava/issues/3321\n\n
598,     Add additional test of existing behavior of Splitter limit(n)\n\n
599,     Update failureaccess dep to 1 0 1  which includes OSGi metadata \n\n
600,     Update Guava README for 27 0 1 \n\n
601,     Create a Guava BOM \n\n
602,     Add the Origin-Trial HTTP response header \n\n
603,     Address why users should prefer our immutable collections to things like Collections emptyList() \n\n
604,     common graph PackageSanityTests: specify a default object for EndpointPair inputs \nThis should resolve a few internal flaky test issues\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=220529228\n  
605,     Standardise message format for  duplicate key  IllegalArgumentException thrown from ImmutableTable Builder build() \n\nInternally  ImmutableTable Builder build() delegates to two classes   Dense Sparse ImmutableTable and these currently have inconsistent error messages when a duplicate key is detected \n\nPrior to this CL  SparseImmutableTable had a message formatted like:\n   Duplicate value for row=%rowKey%  column=%columnKey%: %newValue%  %oldValue% \nWhereas DenseImmutableTable had:\n   duplicate key: (%rowKey%  %columnKey%) \n\nAfter this CL both classes will format the message like:\n   Duplicate key: (row=%rowKey%  column=%columnKey%)  values: [%newValue%  %oldValue%   \n\n
606,     Correct documentation for Splitter#withKeyValueSeparator(Splitter)\n\n
607,     Use maven-compiler-plugin version 3 8 0 \n\nSee    com/google/guava/pull/3294 \n\n
608,     Add MediaType MICROSOFT_OUTLOOK and add missing javadocs to a few other MediaTypes \n\nSee    com/google/guava/pull/3309\n\n
609,     Change failureaccess packaging to bundle so the OSGi metadata actually gets included \n\n
610,     Document that Chars lexicographicalOrdering is different than Alphabetical\nordering  which is more appropriate for user text \n\n
611,     Fix the issue with classes that should only be included in the failureaccess artifact being included in the main Guava jar \n\nIt appears (thanks to @michaelhixson on    com/google/guava/issues/3302) that the issue is with the maven-bundle-plugin (which does OSGi stuff)  Presumably because Guava was declaring that it exports com google common * (and doesn t exclude com google common util concurrent internal)  it was pulling those class files in from the dependency  It was also pointed out by @talios in that issue that failureaccess doesn t include OSGi metadata to export that package \n\nThis change should fix both of those issues  but we re going to need to release a failureaccess 1 0 1 and then guava 27 0 1 \n\n
612,     Ensure InterruptibleTask interruptTask works even when Thread interrupt() throws or takes a long time\n\nJava nio APIs enable arbitrary code to register callbacks that get run on calls to interrupt() as a result interrupt() can throw arbitrary exceptions  or even deadlock   This adds some defense against this in InterruptibleTask \n\n* we move the call to set(DONE) to a finally block to ensure it always runs\n* we have the completing task park itself if it spins for a long time waiting for set(DONE) to be called   This adds some complexity to the interruptTask protocol\n\n
613,     Document behavioral caveat on Splitter#withKeyValueSeparator(Splitter): the options in Splitter don t change anything about the behavior of the keyValueSplitter \n\n
614,     common graph: adding new EndpointPair-accepting overloads \n\n
615,     Suppress warnings in classes that implement equals() without also implementing\nhashCode() \n\nThe contract for Object hashCode states that if two objects are equal  then\ncalling the hashCode() method on each of the two objects must produce the same\nresult  Implementing equals() but not hashCode() causes broken behaviour when\ntrying to store the object in a collection \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=218187142\n  
616,     *Builder java: add @param documentation for the node/value/edge types that clarifies their behavior \n\nThis is in response to (and should resolve)    com/google/guava/issues/3299 \n\n
617,     Enable goodtime-api for Guava (with some exceptions) \n\n
618,     Mention Guava s new dependency in documentation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=217758655\n  
619,     Remove oraclejdk10 from Travis build \n\nIt s currently failing on Travis because Oracle has seemingly removed the ability to download JDK 10  Since we re already running on JDK 11  having a JDK 10 build may no longer be needed anyway \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=217745829\n  
620,     Enable GoodTime API checker for guava-testlib \n\n
621,     Prepare for release 27 0 \n\n
622,     Push back deprecated API removals again \n\n
623,     Enable GoodTime API checker for Guava\n\n
624,     Fix ThrowablesTest for JDK 11 \n\nInstead of hardcoding  9  and  10  as the versions of Java that lazyStackTrace() doesn\ t work for  only check that it works when the version is < 9 \n\n
625,     Fix ForwardingMapTest in JDK11 \n\nWe need to be able to create a valid instance of IntFunction<T[ > to pass to Collection toArray(IntFunction<T[ >)  including having its method return an array of the correct type  Switch from using raw Class<?> to TypeToken to handle that \n\n
626,     Update Public Suffix data \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=216573087\n  
627,     Clarify a comment in Futures NonCancellationPropagatingFuture \n\n
628,     Add support for Early-Data HTTP header \n\n
629,     Add JDK11 to the Travis config \n\nCloses    com/google/guava/pull/3274\n\n
630,     Cast null to make sure to select the right Collection toArray()  In JDK 11 there s a new default method that takes a different parameter \n\n
631,     Check input collection size in PowerSet before actually copying it s content \n\nCloses    com/google/guava/pull/3275\n\n
632,     Properly handle input cancellations in Futures catching[Async \n\nCurrently  if input future is cancelled and the fallback handler does not handle CancellationException  the output future will end up as failed with CancellationException  Instead  the more logical result should be that output future ends up as cancelled as well \n\n
633,     Remove unnecessary mocking of a data structure \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=213551639\n  
634,     Update truth  animal sniffer  error prone annotations  and JUnit\n\nAll of these dependencies are out of date from those used in gRPC  and preventing me from getting a current build of Guava into gRPC \n\nFixes #3268\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=213550989\n  
635,     Make FutureCombiner recommend Futures getDone() \n\nWhile there  switch it to a lambda \n\n
636,     Remove trustedGetException()\n\ntryInternalFastPathGetFailure gives access to similar fast-path\n\n
637,     Use newGuard() to make example in Monitor class javadoc more\nconcise \n\nThis commit also cleans up the method javadoc for newGuard() itself and\nreplaces a lingering  throw Throwables propagate(throwable)  with simply\n`throw throwable` (not related to newGuard()  but good to clean up) \n\nFixes #3236\n\n
638,     Introduce listenablefuture and failureaccess artifacts  plus InternalFutureFailureAccess \n\n(taken over from CL 210155310 to add Maven setup)\n\nIt provides a direct access to the cause of any failures \nso we can avoid unnecessary allocation of an exception \n\nDesign discussion:    google com/document/d/1_RVTtztq5pqrhs0srvJWHMI7PT1tA71--iaauV2l5UA/edit\n\n
639,     Fix a bug in AbstractFuture addListener where we failed to follow the contract precisely \n\nListenableFuture addListener says that listeners should execute  immediately  when the future is done   However  because the old version of addListener only checked the listeners field  it is possible to observe that the future is done and that your listener would not execute immediately   This cl fixes that by adding an explicit check for isDone \n\n
640,     Disambiguate Collection toArray() call so that the test passes in Java 11 where a new toArray method was added \n\n   java net/java/early_access/jdk11/docs/api/java base/java/util/Collection html#toArray(java util function IntFunction)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=212037283\n  
641,     Short circuit in withTimeout if the input future is already done \n\n
642,     Include original input value and RoundingMode in the failure message for MathPreconditions checkInRange() \n\n
643,     Use TrustedFuture where possible\n\n
644,     Bail early without a CancellationException in AbstractTransformFuture \n\n
645,     Add more validation to AbstractFuture when cancellation causes are enabled  so that it matches the behavior when they are disabled \n\n
646,     Update Public Suffix data \n\nThe copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=210378042\n  
647,     Automated rollback of changelist f380040f0041f94c83d24623c10f32de58d436c4\n\n*** Reason for rollback ***\n\nTest depends on incorrect Future implementation\n\n*** Original change description ***\n\nAdd more validation to AbstractFuture when cancellation causes are enabled  so that it matches the behavior when they are disabled \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=210143037\n  
648,     Suppress violation of MissingEqualsCall for EqualsTesterTest  given it quite legitimately fails to call #testEquals \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=210138846\n  
649,     Suppress warnings on thread suspending test \n\n
650,     Add more validation to AbstractFuture when cancellation causes are enabled  so that it matches the behavior when they are disabled \n\n
651,     Fix parameter name in Javadoc\n\n`name` doesn t exist in the current context \n\n#CodeHealth\n\n
652,     [guava concurrent  Inlined getDone() and getUninterruptibly() to break the source dependency from AbstractFuture to other classes in /util/concurrent \n\n
653,     Add Javadoc for MediaType KML+KMZ+MBOX\n\nCloses    com/google/guava/pull/3244\n\n
654,     Don t allocate a CancellationException if cancellation causes are not enabled \n\n
655,     Switch FluentFuture and AbstractFuture in inheritance chain\n\n
656,     Make delayed get() test more resilient to thread scheduling delays \n\n
657,     Remove unnecessary local \n\nIt is a holdover from when we used the value locally  rather than just returned it: 353ae349a24fb6c9b3e233ca03e4012761c7f3d8\n\n
658,     Add information about thread wakeup or scheduling delays to TimeoutExceptions thrown from guava futures \n\n
659,     Add missing @since tag \n\n   github io/guava/releases/21 0/api/diffs/changes/com google common util concurrent Monitor html#com google common util concurrent Monitor newGuard_added(java util function BooleanSupplier)\n\nNoticed because of    com/google/guava/issues/2853#issuecomment-412360793\n\n
660,     Use gradle formatting\n\nFixes    com/google/guava/pull/3216\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=208489219\n  
661,     Add a gap method to Range which computes the range that lies between two ranges  This operation is particularly useful as a replacement for Joda Time s Interval gap when migrating to Java Time which has no Interval class \n\nJoda Time:\nInterval interval =    ;\nInterval gap = interval gap(interval);\n\nJava Time (after this CL):\nRange<Instant> interval =    ;\nRange<Instant> gap = interval gap(otherInterval);\n\n
662,     Make ordering of Primitives#all Wrapper Primitive Types deterministic\n\n
663,     Enhance toString() for futures returned from ExecutionSequencer \n\nAlso make tests for ExecutionSequencer actually run  by porting them to junit3 :-(\n\n
664,     Add callable s toString to null failure message \n\nI find this happens in mock-heavy tests  and this makes it easier to identify the source of the bad mock call \n\n
665,     Fix javadoc typo in LinkedListMultimap\n\nFixes    com/google/guava/issues/3228\n\n
666,     Allow Service to transition from STARTING to TERMINATED  Add a new  doCancelStart  method that is called when a service is stopped while still starting  This gives implementations a chance to abort code which may be preventing the service from starting \n\n
667,     Adds WASM as a supported Media type to Google Java utilities \nAdds WASM support to the StaticFileAction in devserver (so that it is served\nwith the correct Content Type) \n\n
668,     Optimize ImmutableCollection toArray(T[ ) as per    net/blog/2016/arrays-wisdom-ancients/  the key goal being to avoid the necessity of zeroing a newly created array where possible \n\nAddresses    com/google/guava/issues/3209 \n\n
669,     Automated rollback of 45ca38358cac4368877650e591daf9650f5eaae1\n\n*** Reason for rollback ***\n\nThe test that caused the inital rollback is buggy\n\n*** Original change description ***\n\nIntroduce Trusted interface \n\nSo we can create FluentFuture Trusted without introduction of a dependency on FluentFuture in AbstractFuture \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=207588457\n  
670,     Automated rollback of 227d67fc6600a6041a3a3881f1e1b6652d3cf75c\n\n*** Original change description ***\n\nIntroduce Trusted interface \n\nSo we can create FluentFuture Trusted without introduction of a dependency on FluentFuture in AbstractFuture \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=207326809\n  
671,     Introduce Trusted interface \n\nSo we can create FluentFuture Trusted without introduction of a dependency on FluentFuture in AbstractFuture \n\n
672,     Remove reference to Strings isNullOrEmpty from AbstractFuture \n\n
673,     Insulate AbstractFuture from Futures java/MoreExecutors java dependency\n\nMade DirectExecutor package-private so that we can refer to it directly in AbstractFuture \n\n
674,     Add a note about the relative ordering of afterDone and listener execution\n\n
675,     Prepare for release 26 0 \n\n
676,     Isolate AbstractFuture from dependency on Ascii \n\n
677,     Push back removals again \n\n
678,     Roll-forward addition of ExecutionSequencer \n\n
679,     Change to some TODOs caused by some internal change \n\n
680,     Automated rollback of c7aa4671cd70853515171333c823e3cdece92918 \n\n*** Original change description ***\n\nMove ExecutionSequencer into guava as @Beta \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=206620316\n  
681,     Move ExecutionSequencer into guava as @Beta \n\n
682,     Remove deprecated CharMatcher constants \n\n
683,     Reduce ProGuard retained code from usages of Multimaps synchronizedXYZMultimap \n\nEffects on MultimapSynchronizedProGuard:\nJAR bytes: 148295 bytes => 50236 bytes (-66%)\nClasses: 67 classes => 28 classes (-58%)\nMethods: 458 methods => 155 methods (-66%)\n\n
684,     Remove Futures methods that implicitly use directExecutor() \n\n
685,     Fix initialCapacity calculation for a maximum size over Integer MAX_VALUE \n\nNoticed during discussion of    com/google/guava/issues/3202\n\n
686,     Change HostAndPort equals() and hashCode() to stop depending on whether brackets were included\n\nNow they depend only on host and port \n\nUseful for storing IPv6 addresses in Set and Map\n\n
687,     Internally  use PatternCompiler from Doubles tryParse \n\n(Redo of CL 202132002  which was partially rolled back in CL 202139691 )\n\nThis time including tests to cover the RE2J approach \nTo avoid the errors of last time  I had to remove the possessive quantifiers under RE2J and replace \\p XDigit  with [0-9a-fA-F  (which is equivalent; see the Pattern Javadoc) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=204301262\n  
688,     Add @Nullable to AbstractSequentialIterator s computeNext() method return value so that [  doesn t complain\n\n
689,     Update Public Suffix data \n\nThis copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=203488570\n  
690,     Adds constants for Sec-Metadata header \n\n   com/mikewest/sec-metadata\n\n
691,     Change Files map(File  MapMode) to get the size of the file from the channel just before mapping rather than before opening the file \n\nSee    com/google/guava/issues/3190 \n\n
692,     Avoid using inotify  which is causing problem under JDK10 \n\n
693,     Remove @WeakOuter from ImmutableMultiset ElementSet  @WeakOuter is useful for inner classes but not for static nested classes \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=202500806\n  
694,     Remove incorrect Javadoc in Multimaps \n\nFixes    com/google/guava/pull/3141 and    com/google/guava/issues/3140\n\n
695,     Implement Lists cartesianProduct indexOf efficiently \n\nFixes    com/google/guava/pull/2544/\n\n
696,     add  oraclejdk10  to Travis build matrix\n\nFixes #3186\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=202166033\n  
697,     Make Guava tests pass under Java 10 \n\nRelevant to    com/google/guava/pull/3186\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=202163744\n  
698,     Partial automated g4 rollback of changelist 202132002 \n\n*** Reason for rollback ***\n\nThe regex in Doubles uses ++  which isn\ t supported by RE2 \n\n*** Original change description ***\n\nInternally  use PatternCompiler from Doubles tryParse \n\nAlso  remove equals() and hashCode() from CommonPattern implementations  The implementations delegate to the underlying Pattern classes  which use identity equality  If we want  real  equality  we should check the equality of pattern() and flags()  Why bother now? Because our automated equals() tests expect equals()  if present  to behave in a sane way once they discover the CommonPattern compile() factory method (which they now do  since i   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=202139691\n  
699,     Internally  use PatternCompiler from Doubles tryParse \n\nAlso  remove equals() and hashCode() from CommonPattern implementations  The implementations delegate to the underlying Pattern classes  which use identity equality  If we want  real  equality  we should check the equality of pattern() and flags()  Why bother now? Because our automated equals() tests expect equals()  if present  to behave in a sane way once they discover the CommonPattern compile() factory method (which they now do  since it\ s now located on CommonPattern itself) \n\n
700,     Add MediaType for  application/hal+json  \n\nFixes    com/google/guava/issues/3184\n\n
701,     Omit some unnecessary parens\n\n
702,     Remove GWT emulation of UndeclaredThrowableException \n\nWe no longer need it now that Futures transform() no longer has a special case for it \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=201217932\n  
703,     Bump Checker Framework annotations version to 2 5 2 \n\nFixes    com/google/truth/issues/467 for Truth and perhaps similar problems for other projects that use Guava \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=201097814\n  
704,     Removed special-casing UndeclaredThrowableException in Futures transform()\n\n
705,     Update Guava to use Truth 0 41 \n\n
706,     Test setValue(null) (both success and failure cases) \n\nFixes #2467  #3176\n\n
707,     Fix nonpublic identifiers and documentation that use  whitelist  or  blacklist  to use less problematic terms \n\n
708,     Fix mangled Javadocs \n\n
709,     Add a direct dependency from guava-gwt to checker-qual \n\nThe GWT sources (specifically  GwtSerializationDependencies) use @Nullable directly  so we shouldn t rely on relying on it indirectly through guava-jre \n\nHowever  what actually prompted this is a strange behavior in Compile-Testing  which Truth uses  This CL should help  though it might not be a fully solution \n   com/google/compile-testing/issues/149\n\n
710,     Fix b/80241237 to correctly *not* change segment weight  nor report an eviction  when a compute() call does not change the present value \n\n
711,     Create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and ICU4J \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=198553510\n  
712,     Suppress exceptions raised from argument s toString methods during lenient formatting - take 2 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=198468540\n  
713,     In open-source Guava  completely skip trying to discover pluggable PatternCompiler implementations \n\nIt s never been possible to create such implementations externally  anyway  and users are now seeing problems running the useless discovery code under the module system \n\nFixes    com/google/guava/issues/3147\n\n
714,     fix a grammar mistake\n\nFixes #3161\n\n
715,     Automated rollback of 9e6e1d02faa4ff07f2c5746a1902ae36cd54335b\n\n*** Reason for rollback ***\n\nAppears to tickle a J2CL bug \n\n*** Original change description ***\n\nFix    com/google/guava/issues/3156 by implementing a proper CollectSpliterators flatMapTo Int Long Double  \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=198112871\n  
716,     Fix    com/google/guava/issues/3156 by implementing a proper CollectSpliterators flatMapTo Int Long Double  \n\n
717,     Some changes to the Guava README \n\nMove most information about the latest release to the release badge at the top  which now links to the GitHub release page for the latest release and automatically displays the latest release version number \n\nNote: I probably would have removed explicit references to the latest version number entirely (meaning no changes to it need to be made when a new release is created) except for the fact that the release process currently relies on there being *some* change made when prepare_release is run so that the release script knows what commit to create the release from  There are ways we could deal with that  but I didn t want to deal with that yet \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=198086774\n  
718,     Add duration info to checkArugment() call in Suppliers memoizeWithExpiration()\n\n
719,     Use api instead of compile for Android\n\nFixes #3154\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=197947742\n  
720,     Prepare for release 25 1 \n\n
721,     Automated g4 rollback of changelist 197588491 \n\n*** Reason for rollback ***\n\nBreaking a JS build\n\n*** Original change description ***\n\nSuppress exceptions raised from argument s toString methods during lenient formatting \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=197631208\n  
722,     Add missing test case for emptiesLast \n\nCloses    com/google/guava/pull/3089\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=197618303\n  
723,     Put @NullableDecl last in lists of annotations\n\nFixes #3152\n\n
724,     Suppress exceptions raised from argument s toString methods during lenient formatting \n\n
725,     Remove now-unused dependency on the Checker Framework compatibility annotations\n\nFor example  @NullableDecl \n\n
726,     Migrate from @MonotonicNonNullDecl to @MonotonicNonNull\n\n
727,     Fixes deadlocks in LocalCache asMap() compute() if the Function throws\n\nCloses    com/google/guava/pull/2901\n\n
728,     Migrate ClassSanityTester to type annotations\n\n
729,     Fix a typo  Change  if the this  to  if this  \n\n
730,     Added @DoNotCall to Futures methods which do not take an executor\n\nFutures methods which run a callback and do not accept an Executor will be removed in a future release   @DoNotCall has been added to these methods to prevent their use until that time \n\nFor more information  see [ \n
731,     Remove usages of CaliperMain from java_benchmarks targets since the deps for java_benchmarks don t need to (and shouldn t) include CaliperMain anymore \n\nSuch benchmarks should be run via the java_benchmarks generated binary directly \n\nGITHUB_BREAKING_CHANGES=n/a\n
732,     Continue migrating to type annotations for @Nullable\n\n
733,     Swap Preconditions and Verify over to Strings lenientFormat \n\n
734,     Branch eventbus  net  and escape for Java 7\n\n
735,     Introduce Strings lenientFormat()  copied from Preconditions format()  Rewrote documentation but the method body remains unchanged \n\n
736,     Move type annotations immediately before the type they apply\nto\n\nFixes #3145\n\n
737,     Update Public Suffix data \n\nThe copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=196136837\n  
738,     Fix a documentation error \n\nFluentFuture catchingAsync does not take a future as an argument \n\n
739,     Use the type annotation version of @Nullable in the Java 8 branch\n\n
740,     Add Token Binding HTTP header names to header libraries \n\n
741,     Continue type annotation preparations in NullPointerTester\n\n
742,     Support type annotations in NullPointerTester\n\n
743,     Replace    info with    info since that site\nserves from https now\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=195671646\n  
744,     Bump jsr305 version \n\n
745,     Fix a few formatting nits\n\n
746,     Use @SafeVarargs annotation for Sets cartesianProduct() \n\nFixes    com/google/guava/pull/3127\nFixes    com/google/guava/issues/2724\n\n
747,     Prepare for release 25 0 \n\n
748,     Push back some Guava removal dates to July 2018 \n\n
749,     Remove Files fileTreeTraverser() \n\n
750,     Add Annotations to a gwt xml file \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=194244915\n  
751,     Re-fix    com/google/guava/issues/3081 \n\n
752,     Avoid presizing arrays \n\n
753,     Strip @DoNotMock annotations\n\n
754,     Use https for API docs\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=193714229\n  
755,     Make SuppliersTest testMemoizeExceptionThrown() actually memoize the suppliers before testing them \n\nFixes    com/google/guava/issues/3122\n\n
756,     Adding a new (initially internal  pending API Review) static factory to Striped \n\nThis allows for custom Lock injection  which might be useful for cases not covered by the currently existing factories  With this  Striped<Lock> with fair sync is possible \n\n
757,     Don t enable use of Unsafe getLong() on aarch64 devices \n\nAndroid devices may report to run aarch64 while running in 32-bit mode  and then\ncrash when loading 64-bit values at unaligned addresses \n\n
758,     Automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174e \n\nIt looks like the original change can cause an infinite loop in LocalCache LoadingValueReference get() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=193210868\n  
759,     Use Diamond \n\n
760,     Use Splitter for IPv6  too  This eliminates usage of java util regex from this file (which is used via String split  otherwise) \n\n
761,     Use Splitter instead of String split  in InternetDomainName \n\n
762,     Fix toString of NonSerializableMemoizingSupplier\n\nFixes #3107\n\n
763,     Update Public Suffix data \n\nThis copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=192451340\n  
764,     Remove pre-mature optimization of storing a total bit size for ConcatenatedHashFunction \n\n
765,     Fix typo in Future javadoc \n\n
766,     Fix tests that failed if we couldn t recursively delete securely by using Jimfs and just getting rid of the whole file system each time \n\nFixes    com/google/guava/issues/3100\n\n
767,     Slightly discourage the use of the <long  TimeUnit> overloads on CacheBuilder \n\n
768,     remove maven-badges herokuapp com from readme\n\nFixes #3090\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=191298096\n  
769,     Add java time Duration overloads to CacheBuilder:\n  cacheBuilder expireAfterAccess(Duration)\n  cacheBuilder expireAfterWrite(Duration)\n  cacheBuilder refreshAfterWrite(Duration)\n\nFixes    com/google/guava/issues/2999\n\n
770,     Fix    com/google/guava/issues/3081 \n\n
771,     Ignore FinalizableReferenceQueueClassLoaderUnloadingTest in JDK 9 \n\n
772,     Open source refactorings directory   This is knowingly very simple  without yet documentation or many refactorings; it s a prototype first \n\n
773,     Supersource nullToEmpty and emptyToNull in Strings java to native JS \n\nThis allows us to improve performance in docs/xplat code that uses those methods \n\n
774,     Stop using ByteArrayOutputStream in ByteStreams toByteArray methods \n\nThey were using ByteStreams copy to copy the source to the BAOS  This meant reading from the source into a buffer  then copying from that buffer to a different buffer in the BAOS  Additionally  the way BAOS operates is not great: whenever it needs more space  it creates a new array twice as large as the previous  copies all bytes from the previous array to the new one  and discards the previous array \n\nInstead  read directly from the source into a sequence of buffers  When a buffer fills up  don t discard it  but instead create a new  twice as large  buffer and start reading into it \n\n(Roll-forward of previously rolled back e50ce7e7ed79fbce1901081838c8e0f9269d4128 now that the tests failing because they were mocking InputStream are fixed )\n\n
775,     HashBiMap: unnecessary call to rehashIfNecessary\n\nCloses    com/google/guava/pull/3076\n\n
776,     Automated rollback of e50ce7e7ed79fbce1901081838c8e0f9269d4128\n\n*** Reason for rollback ***\n\nCausing OutOfMemoryError in some tests \n\n*** Original change description ***\n\nStop using ByteArrayOutputStream in ByteStreams toByteArray methods \n\nThey were using ByteStreams copy to copy the source to the BAOS  This meant reading from the source into a buffer  then copying from that buffer to a different buffer in the BAOS  Additionally  the way BAOS operates is not great: whenever it needs more space  it creates a new array twice as large as the previous  copies all bytes from the previous array to the new one  and discards the previous array \n\nInstead  read directly from the source into a sequence of buffers  When a buffer fills up  don t discard it  but instead create a new  twice as large  buffer and start reading into it \n\n***\n\n
777,     Set serialVersionUID in TypeToken java\n\n
778,     Stop using ByteArrayOutputStream in ByteStreams toByteArray methods \n\nThey were using ByteStreams copy to copy the source to the BAOS  This meant reading from the source into a buffer  then copying from that buffer to a different buffer in the BAOS  Additionally  the way BAOS operates is not great: whenever it needs more space  it creates a new array twice as large as the previous  copies all bytes from the previous array to the new one  and discards the previous array \n\nInstead  read directly from the source into a sequence of buffers  When a buffer fills up  don t discard it  but instead create a new  twice as large  buffer and start reading into it \n\n
779,     Make ByteSource read() use sizeIfKnown()  if available  to help avoid extra byte array allocations/copies \n\nAlso don t use 32 as the initial ByteArrayOutputStream size in either version of ByteStreams toByteArray(); just seems way too small  Use the default size for buffers instead  at a minimum \n\nAlso change ConcatenatedByteSource sizeIfKnown() to return absent if its Iterable of sources is not a Collection; this is to prevent sizeIfKnown() trying to loop over an infinite Iterable  which previous caused an infinite loop  That is also fixed in this CL; ConcatenatedByteSource size() and sizeIfKnown() now stop and return Long MAX_VALUE if the result would exceed that rather than going negative and continuing  But looping over an infinite Iterable in sizeIfKnown() seems potentially slow even if it will eventually stop  and as such against the spirit of sizeIfKnown()  which should be fast \n\n
780,     In Ascii  define a constant for the character case bitmask  and use it in place of 0x20 and 0x5f throughout the class \n\n
781,     Prepare for release 24 1 \n\n
782,     Add @since NEXT to new methods on Traverser \n\n
783,     Add X-Download-Options header (IE8 header to control the  Open  button on the download dialog) \n\n
784,     Change all instances of encoded subSequence() to use a simple start index offset  which reduces the Java memory footprint for TrieParser by at at least 130 MBs  This is because the original call to subSequence() would generate a new String on the heap for each call  where as just using an offset avoids the need to generate a new String all together \n\nThis memory enhancement was found while investigating flakiness issues for some tests which had the same root cause of: java lang OutOfMemoryError: GC overhead limit exceeded  mostly in the TrieParser class \n\n100-test runs at original code:\nMemory usage\n- maximum: 503MiB (527 769 600 bytes)\n- average: 388MiB (407 225 077 bytes)\n\n100-test runs with my changes:\nMemory usage\n- maximum: 316MiB (325 271 552 bytes)\n- average: 221MiB (239 355 320 bytes)\n\nAt maximum: 187 MB saved\nAt average: 167 MB saved\n\n
785,     Add isSubtypeOf()  pre -condition check before getSubtype() returns \n\nWe have to call it before return because before type variable substitution  isSubtypeOf() can\ t apply \n\nSee    com/google/guava/issues/3048\n\n
786,     Fix List<Foo<?>> isSubtypeOf(List<Foo<?>>) \n\nThis used to return false because isSubtypeOf() does a wildcard capture of the Foo<?> type parameter  turning it into Foo<C>  and then List<Foo<C>> isn t a subtype of List<Foo<?>> \n\nWildcard capture is needed for resolving types at invariant or contravariant elements (fields and parameters)  But for resolving in covariant context  wildcard should remain as is \n\nI found this when trying to add isSubtypeOf() precondition check in getSubtype()  in response to    com/google/guava/issues/3048 \n\n
787,     Traverser java: add support for multiple start nodes \n\nUpdate documentation (in this file and in graphs_explained md) relating to behavior and definitions of equals() and hashCode() \n\n
788,     Correct a typo in ImmutableBiMapTest \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=187268361\n  
789,     Automated g4 rollback of changelist 185433235 \n\n*** Reason for rollback ***\n\nb/73552091\n\n*** Original change description ***\n\nAdd hash flooding protection to HashBiMap \n\n***\n\n
790,     Always expect a suppressing Closer \n\nSince we now require Java 7  it should always be available -- other than under Android  where we don t currently run this test \n\n
791,     Hide Downloading/Downloaded lines from output \n\n   com/a/35653426/28465\n   itemis com/en/in-a-nutshell-removing-artifact-messages-from-maven-log-output\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=186050936\n  
792,     Add @Override to some serialization methods \n\nThe problem with this is that they re not overrides under GWT  The solution is to mark them @GwtIncompatible -- probably not a bad idea  anyway  in case they ever come to depend on libraries not available under GWT \n\n
793,     Update Public Suffix data \n\nThe [  copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=185723883\n  
794,     Document that the compact collections aren t universal wins \n\n
795,     Fix @since tag from CL 185440742 \n\n
796,     Migrate uses of the double-brace initialization pattern to factory methods or builders\n\n[ \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=185463519\n  
797,     Add linear 16 audio type  We are using L16 audio in our project ([  and need this field defined to match our mime type \n\n
798,     Add hash flooding protection to HashBiMap \n\n
799,     Add hash flooding protection to ImmutableMultiset  falling back to a JDK HashMap backed implementation when probable flooding is detected \n\nWhile we re at it  rearchitect ImmutableMultiset on GWT to use that implementation rather than the handrolled hash table in RegularImmutableMultiset \n\n
800,     In Java 8 branch  fall back to an ImmutableSet backed by j u HashSet (and its binary tree magic) if apparent hash flooding is detected \n\nAs part of this restructuring  we redesign Immutable Set SortedSet  Builder to always allocate O(distinct) memory instead of O(insertions)  deduplicating as elements come in (somewhat lazily in ISS B s case) \n\n
801,     Adds the @Immutable annotation to InternetDomainName java \n\n
802,     Group overloads together \n\n
803,     In Java 8 branch  fall back to j u HashMap based implementation in ImmutableBiMap if hash flooding appears probable   (Partially motivated by external feature requests  partially by [ \n\n
804,     Hide class used from Google-internal test \n\n
805,     Remove incorrect Javadoc \n\nIt looks like we got this wrong back in CL 62226066 (from    appspot com/58760044/patch/1/10006): The tests aren t identical  One tests a null key; the other  a null value  Does that sound right?\n\n(Motivation: The @link in the Javadoc is broken  so we re getting warnings from the Guava build )\n\n
806,     Add meaningful null check messages to ImmutableTable \n\nThis is especially important in cellOf()  where we had 3 null checks on a single line  making it impossible to determine which argument caused the NPE \n\n
807,     In Java 8 branch  fall back to j u HashMap based implementation in ImmutableMap if hash flooding appears probable   (Partially motivated by external feature requests  partially by [ \n\n
808,     Work around breakage in which release builds run maven-javadoc-plugin 2 7 in child poms  even though pluginManagement tells them to use 3 0 0 \n\nThis is similar to the fix for Truth in [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=184063561\n  
809,     Replace @link reference to an old  removed API with @code \n\n
810,     Prepare for release 24 0 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=184031422\n  
811,     Mark HashFunction @Immutable \n\n
812,      Fix  Types toString doc for arrays \n\nRelevant to    com/google/guava/pull/2990\n\n
813,     Restrict length of varargs array in immutable collection factory methods\n\nThis PR documents the restriction that immutable collection factory methods with varargs pose on the length of the last argument  and adds a check for this precondition to prevent NegativeArraySizeException from being thrown \n\nFixes #3027\nFixes #3026\n\n
814,     Stop using `forward new InverseEntrySet()` because javac9 generates Objects requireNonNull() calls for it \n\nThat method isn t available under old versions of Android \nThankfully  the calls are caught by Animal Sniffer \nInternally  [  eliminates these when targeting Java 6 (b/32446315)  Another reason to build with Bazel someday?\n\nNo effect on Proguard numbers \n\n
815,     Delete deprecated Predicates assignableFrom(Class)  Please use Predicates subtypeOf(Class) instead \n\n
816,     Remove Graphs equivalent() methods  Please use graphA equals(graphB)  or Objects equals(graphA  graphB) instead \n\n
817,     Remove a couple of APIs scheduled for removal in January 2018 \n\nFor other APIs scheduled for removal  give them a stay of execution until April so their existing usages can be cleaned up  Also update a few methods that were scheduled for removal in February to April  since we won t be doing @Beta removals in February \n\nALSO update the java7 version of TreeTraveserTest to match changes that were made at some point in the past to the mainline version but not merged \n\n
818,     Clarify purpose of CacheBuilder newBuilder s function signature \n\n
819,     Improve allocation behavior of Multiset copying and addAll implementations in both Guava versions \n\n
820,     Add efficient TreeMultiset forEachEntry \n\n
821,     Add even more toString details to Futures \n\n
822,     Add implementation for EnumMultiset forEachEntry \n\n
823,     Adding [HTTP2-Settings  HTTP header \n\n   org/specs/rfc7540 html#Http2SettingsHeader\n\n
824,     *Graph java: add @since NEXT to incidentEdges()  and retire the use of @inheritDoc in favor of just copying the documentation over wholesale   (This preserves the @throws tags in the subinterfaces )\n\n
825,     Remove AbstractMultiset s default O(n) (or worse) implementations of size()  count()  and clear() \n\nAs part of the cleanup:\n- make TreeMultiset clear() (in the normal case) O(n) rather than something worse (due to rebalancing)\n- make AbstractMapBasedMultiset stop allocating its entrySet() and an entrySet() iterator() during construction\n- make TreeMultiset clear() (in the normal case)  StandardConcurrentMultimap clear() and several Multiset view implementations  clear() methods avoid allocating Entry objects\n\nMaybe it makes sense to have such default implementations in AbstractMap  a public type accessible to end users who might really want a quick and dirty Map  But AbstractMultiset is package-private  and we d probably rather be explicit about when we re choosing an O(n) implementation \n\nAlso  rename Multisets sizeImpl to linearTimeSizeImpl \n\nEffects on ArrayListMultimapProGuard:\n58546 bytes => 58285 bytes\n54 classes => 54 classes\n409 methods => 406 methods\n\nEffects on HashMultimapProGuard:\n60833 bytes => 60572 bytes\n54 classes => 54 classes\n415 methods => 412 methods\n\nEffects on HashMultisetProGuard:\n21990 bytes => 21685 bytes\n17 classes => 17 classes\n150 methods => 147 methods\n\nEffects on LinkedHashMultimapProGuard:\n70828 bytes => 70567 bytes\n61 classes => 61 classes\n490 methods => 487 methods\n\nEffects on LinkedHashMultisetProGuard:\n26100 bytes => 25794 bytes\n21 classes => 21 classes\n172 methods => 169 methods\n\n
826,     Include method name and parameters in the message of the ArithmeticException during overflows \n\nHaving this information available would make debugging overflows much easier \n\n
827,     Improve allocation behavior of ImmutableMultiset Builder addAll(Multiset) \n\nEffects on ImmutableMultisetProGuard:\n33905 bytes => 34170 bytes\n29 classes => 29 classes\n236 methods => 241 methods\n\n
828,     Add allocation measurements for basic immutable collection operations \n\n
829,     Fix tests that assume Class getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the  java class path  system property \n\nThis doesn\ t fully fix FinalizableReferenceQueueClassLoaderUnloadingTest: I still see a failure for testUnloadableInStaticFieldIfClosed  But at least the other 2 tests in the file pass  and the failure is now a  real  failure ( Predicate did not become true within 10 second timeout ) rather than a ClassCastException \n\n(I\ ve confirmed that the failing test computes exactly the same classpath under Java 9 as under Java 8  so I\ m not sure exactly what\ s up  I may ask emcmanus )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=182227182\n  
830,     Update maven-javadoc-plugin to 3 0 0 \n\nAs part of that  migrate from additionalparam  which was deprecated and removed this year  to additionalOptions \n\nAlso  remove duplicate -Xdoclint:-html line \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=182209120\n  
831,     Remove org apache maven plugins  which is the default:\n\n   apache org/guides/introduction/introduction-to-plugin-prefix-mapping html#Configuring_Maven_to_Search_for_Plugins\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=182205463\n  
832,     Suppress warnings from existing nested futures \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=182120920\n  
833,     Code cleanup \n\nFixes #3032\n\n
834,     Avoid loading some javax annotation classes\n\nTo work around split package issues under JDK 9 \n\n
835,     Fix REE handling in SerializingExecutor \n\nThe old implementation had two bugs:\n1  Tasks that threw RejectedExecutionException on submission would still execute later\n2  Two threads submitting to an idle SequentialExecutor might see one submission succeed  even if the delegate threw REE  The submitted task wouldn t run until someone else successfully submitted another task \n\nThis costs a possible extra lock acquisition  (to solve #2) and an allocation (to solve #1) when submitting to a SequentialExecutor that doesn t already have worker scheduled or running \n\n
836,     Add MediaType withParameters(String attribute  Iterable<String> values)\n\n
837,     common graph: add incidentEdges() method to Graph/ValueGraph \n\nAlso added an override of remove() to the Set returned by the edges() method  to ensure that it wouldn t allow removal of elements from the set \n\nJava [ \n\n
838,     Improve handling of Function argument so that it shows up in toString() while the future is running\n\n
839,     Make checkedMultiply available under GWT \n\n
840,     Update Public Suffix data \n\nThe [  copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=181484427\n  
841,     Annotate all public AbstractTester subclasses with @Ignore \n\nThis prevents our internal Android test-suite builder from trying to run them directly \n(The tests continue to run on the JVM (JUnit 3) test runner  which doesn\ t look for the JUnit 4 @Ignore annotation  Yes  it\ s a little strange that the Android test-suite builder respects the JUnit 4 annotation even for these JUnit 3 tests )\n(I\ m not 100% sure what happens to our generated TestSuiteBuilder suites under Android  as they\ re currently broken for other reasons (b/30575968)  If this CL causes any problem for them  we\ ll have to deal with it later  I\ m fairly sure that we\ re safe  though  as we generate code that constructs the test and calls its methods directly )\n\nThis in turn lets us back out our binary-under-test hack \n\nAnd that means we no longer trigger b/69965697  so we start running more tests under Android:\n\n29 => 88 for collect testing\n1526 => 1698 for labs collect\n2519 => 5772(!) for collect\n(no change for primitives)\n\n(Note: I believe we\ re still ignoring suite() methods  That\ s kind of a good thing  since those would further increase the number of tests to run  I\ m not sure if we even can run suite() methods with the default runner  as I believe it looks only for  test*  methods  I\ ve been hoping to eventually split all the suite() methods into separate classes and put them through the generated-TestSuiteBuilder-test magic  but as noted above  that doesn\ t work for Android at the moment  anyway )\n\n
842,     Fix some simple cases of stack overflow in AbstractFuture toString()\n\nThis is a partial fix for people doing weird things and can easily be circumvented by people adding some indirection  but this is also what AbstractCollection toString does so it seems like there is a decent precedent for a partial solution to this problem \n\nIt doesn t appear to be possible to implement a full fix without resorting to things like threadlocals or examining the callstack  and this problem doesn t seem important enough to justify a solution like that \n\n
843,     Overhaul Android  Hash LinkedHash Multiset to operate much more directly on ObjectCountHashMap  eliminating many unnecessary classes  allocations  and even calls to hashCode on the elements \n\nEffects on HashMultisetProGuard:\n25422 bytes => 20198 bytes\n20 classes => 16 classes\n163 methods => 123 methods\n\nEffects on LinkedHashMultisetProGuard:\n31438 bytes => 21635 bytes\n27 classes => 17 classes\n197 methods => 141 methods\n\nEffects on ArrayListMultimapProGuard:\n58474 bytes => 57991 bytes\n54 classes => 53 classes\n408 methods => 409 methods\n\nEffects on HashMultimapProGuard:\n60759 bytes => 60277 bytes\n54 classes => 53 classes\n414 methods => 415 methods\n\nEffects on LinkedHashMultimapProGuard:\n70757 bytes => 70274 bytes\n61 classes => 60 classes\n489 methods => 490 methods\n\n
844,     Let our internal Android test runner run AbstractPackageSanityTestsTest s nested test class directly \n\nThis is the path of least resistance  as detailed in the internal CL description \n\n
845,     Add nullness annotations on the field in LinkedListMultimap java\n\n
846,     Add nullness annotations on the fields in TreeBasedTable java\n\n
847,     Add nullness annotations on the fields in AggregateFuture java\n\n
848,     Add nullness annotations on the fields in AbstractScheduledService java\n\n
849,     Add nullness annotations on the fields in MinMaxPriorityQueue java\n\n
850,     Add nullness annotations on the fields in ImmutableMultiset java\n\n
851,     Add nullness annotations on the fields in DescendingMultiset java\n\n
852,     Add nullness annotations on the fields in StandardTable java\n\n
853,     Add nullness annotations on the fields in Maps java\n\n
854,     Add nullness annotations on the field in ConcurrentHashMultiset java\n\n
855,     Add nullness annotations on the fields in TreeMultiset java\n\n
856,     Add nullness annotations on the fields in LinkedHashMultimap java\n\n
857,     Add nullness annotations on the fields in AbstractTable java\n\n
858,     Add nullness annotations on the field in AbstractMapBasedMultimap java\n\n
859,     Add nullness annotations on the field in AbstractMapBasedMultiset java\n\n
860,     Add nullness annotations on the field in AbstractMultiset java\n\n
861,     Fix bug where Multiset elementSet remove did not propagate changes to Multiset size \n\nThis fix is not the most efficient  and incurs unnecessary allocation in Multiset elementSet iteration  but is a tolerable workaround until we do something more sophisticated \n\n
862,     Add nullness on the fields in AbstractBiMap java\n\n
863,     Make  emptiesFirst(naturalOrder())  infer the type more reliably \n\nFixes #3022 \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=180665310\n  
864,     Add nullness annotations on the fields in ArrayTable java\n\n
865,     Add nullness annotations on the fields in CompactHashMap java\n\n
866,     Add nullness annotations on the field in AbstractMapBasedMultiset java\n\n
867,     Add nullness annotations on the fields in HashBiMap java\n\n
868,     Add nullness annotations on the fields in CompactHashSet java\n\n
869,     Add nullness annotations on the fields in AbstractMultimap java\n\n
870,     Add nullness annotations on the field in AbstractSequentialIterator java\n\n
871,     Add nullness annotations on the fields in CompactLinkedHashSet java\n\n
872,     Add nullness annotations on the field in CompactLinkedHashMap java\n\n
873,     Add nullness annotations on the fields in Cut java\n\n
874,     Add nullness anntations on the field in AbstractMapBasedMultimap java\n\n
875,     Add nullness annotations on the field in AbsatractIterator java\n\n
876,     Add nullness annotations on the fields in AbstractSortedMultiset java\n\n
877,     Add nullness annotations on the fields in ImmutableSetMultimap java\n\n
878,     Add nullness annotations on the fields in ImmutableMultimap java\n\n
879,     Push down implementation of Multiset iterator() from AbstractMultiset \n\nEffects on ArrayListMultimapProGuard:\n59653 bytes => 58487 bytes\n55 classes => 54 classes\n414 methods => 408 methods\n\nEffects on HashMultimapProGuard:\n61927 bytes => 60761 bytes\n55 classes => 54 classes\n420 methods => 414 methods\n\nEffects on LinkedHashMultimapProGuard:\n71932 bytes => 70766 bytes\n62 classes => 61 methods\n495 methods => 489 methods\n\nEffects on HashMultisetProGuard:\n26583 bytes => 25426 bytes\n21 classes => 20 classes\n169 methods => 163 methods\n\nEffects on LinkedHashMultisetProGuard:\n32586 bytes => 31429 bytes\n28 classes => 27 classes\n203 methods => 197 methods\n\n
880,     Add nullness annotations on the fields in Iterators java\n\n
881,     Add nullness annotations on the fields in LinkedHashMultimap java\n\n
882,     Add nullness annotations on the fields in ImmutableEntry java\n\n
883,     Add nullness annotations on the fields in ImmutableMap java\n\n
884,     Add nullness annotations on the fields in ImmutableRangeSet java\n\n
885,     Add annotations on the fields in GeneralRange java\n\n
886,     Add nullness annotations on the fields in AbstractBiMap java\n\n
887,     Eliminate the apparently unnecessary Multimaps Keys KeysEntrySet \n\nEffects on ArrayListMultimapProGuard:\n62399 bytes => 59653 bytes\n57 classes => 55 classes\n426 methods => 414 methods\n\nEffects on HashMultimapProGuard:\n64797 bytes => 61927 bytes\n57 classes => 55 classes\n432 methods => 420 methods\n\nEffects on LinkedHashMultimapProGuard:\n74790 bytes => 71932 bytes\n64 classes => 62 classes\n507 methods => 495 methods\n\n
888,     Add nullness annotations on the fields in ImmutableTable java\n\n
889,     Add nullness annotations on the fields in LinkedListMultimap java\n\n
890,     Add nullness annotations on the fields in MapMakerInternalMap java\n\n
891,     Add nullness annotations on the fields in Lists java\n\n
892,     Add nullness annotations on the fields in MapMakerInternalMap java \n\n
893,     Add nullness annotations on the fields in MapMaker java\n\n
894,     Add nullness annotations on the fields in Maps java\n\n
895,     Add nullness annotations on the field in MinMaxPriorityQueue \n\n
896,     Add nullness annotations on the field in Multimaps java\n\n
897,     Add nullness annotations on the fields in Multisets java\n\n
898,     Add nullness annotations on the fields in StandardTable java\n\n
899,     Add @Nullable on the field in Tables java\n\n
900,     Add nullness annotations on the fields in RegularImmutableMultiset java\n\n
901,     Add nullness annotations on the fields in Synchronized java\n\n
902,     Add @NullableDecl on the field in TreeBasedTable \n\n
903,     Add @NullableDecl on the field in TopKSelector java\n\n
904,     Add nullness annotations on the fields in NaturalOrdering \n\n
905,     Attempt to fix bugs where objects that are incompatible with eachother are tested for equality (generally: Lists and Sets  or Classes of incompatible types) \n\nIn order to facilitate enhancements to an existing compile-time error check ([  it s necessary to fix existing issues before updating the static analysis \n\nIf I ve gotten the fix incorrect  please let me know here  or  if you d prefer  I can add a suppression on the existing buggy code for you or your team to pick up later \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=180217836\n  
906,     Add @NullableDecl to the fields of TreeMultiset\n\n
907,     Add nullness annotations on the field in Sets java\n\n
908,     Push down AbstractMapBasedMultimap wrapCollection logic into subtypes \n\nEffects on ArrayListMultimapProGuard:\n80560 bytes => 62399 bytes\n73 classes => 57 classes\n575 methods => 426 methods\n\nEffects on HashMultimapProGuard:\n91236 bytes => 64797 bytes\n80 classes => 57 classes\n646 methods => 432 methods\n\nEffects on LinkedHashMultimapProGuard:\n101181 bytes => 74790 bytes\n87 classes => 64 classes\n720 methods => 507 methods\n\n
909,     Add nullness annotation to the filed  holder  in Streams \n\n
910,     Push down logic of AbstractMapBasedMultimap createKeySet into subtypes \n\nEffects on ArrayListMultimapProGuard:\n83062 bytes => 80560 bytes\n75 classes => 73 classes\n599 methods => 575 methods\n\nEffects on HashMultimapProGuard:\n93757 bytes => 91236 bytes\n82 classes => 80 classes\n670 methods => 646 methods\n\nEffects on LinkedHashMultimapProGuard:\n103682 bytes => 101181 bytes\n89 classes => 87 classes\n744 methods => 720 methods\n\n
911,     Push down logic of AbstractMapBasedMultimap createAsMap into subtypes \n\nEffects on ArrayListMultimapProGuard:\n86365 bytes => 83062 bytes\n77 classes => 75 classes\n642 methods => 599 methods\n\nEffects on HashMultimapProGuard:\n97037 bytes => 93757 bytes\n84 classes => 82 classes\n713 methods => 670 methods\n\nEffects on LinkedHashMultimapProGuard:\n106972 bytes => 103682 bytes\n91 classes => 89 classes\n787 methods => 744 methods\n\n
912,     Add missing nullable annotations on the fields in the cache package \n\n
913,     Add missing nullness annotation on the field in WellBehavedMap\n\n
914,     Add @MonotonicNonNullDecl to TreeRangeSet \n\n
915,     Add mising nullness annotations to the fields in the io package in guava \n\n
916,     Add missing nullness annotations on the fields in the base package in guava \n\n
917,     Add missing nullness annotations on the fields in the hash package in guava \n\n
918,     Add @MonotonicNonNullDecl to UnmodifiableSortedMultiset \n\n
919,     Add missing nullness annotations to the fields in the concurrent package in\nguava \n\n
920,     Make Stopwatch toString() work under j2cl  which checks casts more strictly than GWT \n\nWithout this change  I see:\njava lang ClassCastException: java lang Double cannot be cast to Number\n\nThe original code was taken from [ \nI noticed this when attempting to use a similar idiom in Truth (now with j2cl tests  yay! but not yet for Guava):    \n\n
921,      #id  doesn t work from the Github Wiki  I think  only from github io sites (e g      github io/truth/faq#imports) \n\nFollowup to CL 179856462 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=179861167\n  
922,     Link directly to instructions for repackaging Guava \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=179856462\n  
923,     Add a recommendation to the Guava README that libraries using Guava use the Beta Checker \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=179830005\n  
924,     Prepare for release 23 6 \n\n
925,     Add dummy test methods to Compact(Linked)HashSetTest so that the Maven test runner doesn t complain \n\n
926,     Don t use Iterables transform in Maps  key value Iterator \n\nEffects on ArrayListMultimapProGuard:\n88459 bytes => 86365 bytes\n80 classes => 77 classes\n647 methods => 642 methods\n\nEffects on HashMultimapProGuard:\n99137 bytes => 97037 bytes\n87 classes => 84 classes\n718 methods => 713 methods\n\nEffects on LinkedHashMultimapProGuard:\n109126 bytes => 106972 bytes\n94 classes => 91 classes\n792 methods => 787 methods\n\n
927,     Link to the things I wrote about our Javadoc link problems \n\n
928,     Add missing @Nullable annotations on the fields in the reflect package \n\n
929,     Add missing @NullableDecl on the fields  instance  in Suppliers \n\n
930,     Add @since NEXT to FutureCombiner run \n\n
931,     Use compact data structures in ImmutableMultimap builders \n\nYes  this hurts code size  we want to know how much   It does improve allocations incurred in creating ImmutableMultimaps \n\nEffects on ImmutableListMultimapProGuard:\n61163 bytes => 71554 bytes\n52 classes => 61 classes\n409 methods => 465 methods\n\nEffects on ImmutableSetMultimapProGuard:\n82739 bytes => 97853 bytes\n69 classes => 80 classes\n560 methods => 641 methods\n\n
932,     Don t mention ImmutableSortedSet in Sets unmodifiableNavigableSet   That was causing many immutable collections to get retained by mutable multimap usages \n\nEffects on ArrayListMultimapProGuard:\n108287 bytes => 88459 bytes\n97 classes => 80 classes\n791 methods => 647 methods\n\nEffects on HashMultimapProGuard:\n113059 bytes => 99137 bytes\n99 classes => 87 classes\n819 methods => 718 methods\n\nEffects on LinkedHashMultimapProGuard:\n122946 bytes => 109126 bytes\n106 classes => 94 classes\n892 methods => 792 methods\n\n
933,     Start some simple improvements to multimaps in code size and allocation count \n\nAll of these measurements are taken after the switch to CompactHash* structures:\nInitial ArrayListMultimapProGuard:\n108287 bytes\n97 classes\n791 methods\n\nInitial HashMultimapProGuard:\n113059 bytes\n99 classes\n819 methods\n\nInitial LinkedHashMultimapProGuard:\n122946 bytes\n106 classes\n892 methods\n\n
934,     Add missing @NullableDecl on fields in google common base \n\n
935,     Push view creation down to subtypes of AbstractMultimap  so ImmutableMap can strip them out \n\nEffects on ImmutableListMultimapProGuard:\n80938 bytes => 61163 bytes\n74 classes => 52 classes\n546 methods => 409 methods\n\nEffects on ImmutableSetMultimapProGuard:\n102365 bytes => 82739 bytes\n91 classes => 69 classes\n693 methods => 560 methods\n\n
936,     Use maps directly in ImmutableMultimap Builder  instead of delegating to a mutable multimap \n\nEffects on ImmutableListMultimapProGuard:\n135061 bytes => 80938 bytes\n122 classes => 74 classes\n963 methods => 546 methods\n\nEffects on ImmutableSetMultimapProGuard:\n147668 bytes => 102365 bytes\n131 classes => 91 classes\n1024 methods => 693 methods\n\n
937,     Don t bother sharing a superclass of ImmutableMultimap values() iterator and ImmutableMultimap entries() iterator \n\nEffects on ImmutableListMultimapProGuard:\n135474 bytes => 135061 bytes\n123 classes => 122 classes\n966 methods => 963 methods\n\nEffects on ImmutableSetMultimapProGuard:\n148081 bytes => 147668 bytes\n132 classes => 131 classes\n1027 methods => 1024 methods\n\n
938,     Push down the implementation of ImmutableMultiset SerializedForm  so ImmutableMultimap keys() doesn t retain implementations of ImmutableMultiset it doesn t use \n\nEffects on ImmutableListMultimapProGuard:\n142493 bytes => 135474 bytes\n128 classes => 123 classes\n1002 methods => 966 methods\n\nEffects on ImmutableSetMultimapProGuard:\n155088 bytes => 148081 bytes\n138 classes => 132 classes\n1063 methods => 1027 methods\n\nEffects on ImmutableMultisetProGuard:\n34823 bytes => 34989 bytes\n29 classes => 29 classes\n236 methods => 237 methods\n\n
939,     Make CompactHash data structures package-private in external Guava   (Before we didn t expose them at all externally   This is so they can be used in multimap guts in Android )\n\n
940,     Avoid having ImmutableMultimap/ImmutableListMultimap depend on ImmutableSetMultimap due to serialization shenanigans \n\nEffects on ImmutableListMultimapProGuard:\n153838 bytes => 142493 bytes\n136 classes => 128 classes\n1060 methods => 1002 methods\n\nEffects on ImmutableSetMultimapProGuard:\n154486 bytes => 155088 bytes\n136 classes => 137 classes\n1062 methods => 1063 methods\n\n
941,     Add missing @NullableDecl to OrderedPermutationIterator nextPermutation\n\n
942,     Explicitly document that RateLimiter is thread-safe now that we ve removed @ThreadSafe \n\n
943,     Remove an unneeded dependency \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=179039547\n  
944,     Switch from @Nullable to @NullableDecl \n\n
945,     Add Uninterruptibles methods for Condition \n\nFixes #3010  #2870\n\n
946,     Add missing @NullableDecl to BaseEncoding java\n\n
947,     Add missing @Nullable to Shorts ShortArrayAsList \n\n
948,     Link to JDK Supplier  just as we link to JDK Function and Predicate \n\nChange Function and Predicate to display the fully qualified name of the class they re linking to \n\nAlso link to the JDK versions of all those classes in the backport  which we re building with a Java 8 version of Javadoc and from which we re linking to Java 9 Javadoc \n\n
949,     Partial g4 rollback of changelist 170507937 \n\n*** Reason for rollback ***\n\nThe Files APIs are @Beta  so they can still be removed \n\n*** Original change description ***\n\nRemove removal dates for non-@Beta deprecations \n\n***\n\n
950,     Document that it s safe to exclude Guava s annotation dependencies \n\n   google com/d/topic/guava-discuss/esIthL_9AIc/discussion\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178379402\n  
951,     Reduce iterations of testBuilder_bruteForce under GWT \n\nMaven timings:\nImmutableDoubleArrayTest: 00:11 -> 00:01\nImmutableIntArrayTest: 00:35 -> 00:04\nImmutableLongArrayTest: 00:49 -> 00:06\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178279918\n  
952,     Run fewer iterations of testByteArrayRoundTrips \n\nMaven timing: 01:30 -> 00:09\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178279876\n  
953,     Document why AbstractIteratorTest looks slow under GWT but really isn t \n\n(It s because it runs first in our internal test setup  so it pays for browser startup )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178279804\n  
954,     Migrate from jsr305 @Nullable to Checker Framework @NullableDecl \n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178274875\n  
955,     Make Javadoc output quieter \n\nThe important stuff is still there: See below  (I inserted the ERROR from an earlier version of [ it s not present at HEAD or that in CL )\n\n[INFO  --- maven-javadoc-plugin:2 10 4:javadoc (default-cli) @ guava ---\n[ERROR  Error fetching link:    org/api//package-list  Ignored it \n[INFO \n1 warning\n[WARNING  Javadoc Warnings\n[WARNING  /tmp/tmp DGUFqGBmMY/guava/src/com/google/common/collect/ImmutableTable java:226: warning - Tag @link: can t find Builder() in com google common collect ImmutableTable Builder\n\nI think you had silenced some other plugins not too long ago  Maybe it just wasn t clear how to silence this one  since it uses a Javadoc-specific flag? But if there s a reason to avoid quiet here  let me know \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178259859\n  
956,     Fix JSR305 links yet again \n\nI broke them when I added links to the Checker Framework  which began to claim javax annotations  just as the JDK had previously done \n\nI had hoped that the fix was as simple as moving the Checker Framework to the -linkoffline section so that it could come after JSR305  but that didn t work: Maven tries to prevalidate the package-list file  and somehow it fails to connect to checkerframework org \n\nWe saw problems with pre-validation before with JSR305 in [ But I diagnosed it wrong there: I thought that Maven was trying to fetch the Javadoc root URL -- e g      org/api/  But I was wrong: I was confusing the `link` and `linkUri` variables in the maven-javadoc-plugin source  In fact  Maven tries to fetch the package-list file  as you d expect  But for some reason  this fails for javadoc io and for checkerframework org  even though it succeeds for docs oracle com  But it doesn t appear to be a User-Agent problem: I m able to wget from checkerframework org with the default Java User-Agent (which fails in the javadoc io case)  an absent User-Agent  and the User-Agent that I think maven-javadoc-plugin is using (judging from its source code)  Plus  as far as I can tell  the connection attempt doesn t even get far enough to send a User-Agent \n\nHere are the logs provided by `mvn javadoc:javadoc -Dorg slf4j simpleLogger log org apache http=debug`  (Note: Even *that* logging may go away with the upgrade to maven-javadoc-plugin 3 ) Both javadoc io and checkerframework org follow the same pattern:\n\n[DEBUG  Connection request: [route:  s ->   org [total kept alive: 0; route allocated: 0 of 2; total allocated: 0 of 20 \n[DEBUG  Connection leased: [id: 1 [route:  s ->   org [total kept alive: 0; route allocated: 1 of 2; total allocated: 1 of 20 \n[DEBUG  Connecting to checkerframework org:443\n[DEBUG  Connection org apache http impl conn DefaultClientConnection@45545e7a closed\n[DEBUG  Connection org apache http impl conn DefaultClientConnection@45545e7a shut down\n[DEBUG  Connection org apache http impl conn DefaultClientConnection@45545e7a closed\n[DEBUG  Connection released: [id: 1 [route:  s ->   org [total kept alive: 0; route allocated: 0 of 2; total allocated: 0 of 20 \n[DEBUG  Connection manager is shutting down\n[DEBUG  Connection manager shut down\n[ERROR  Error fetching link:    org/api//package-list  Ignored it \n\nCompare to the successful logs for docs oracle com:\n\n[DEBUG  Connection request: [route:  s ->   oracle com [total kept alive: 0; route allocated: 0 of 2; total allocated: 0 of 20 \n[DEBUG  Connection leased: [id: 0 [route:  s ->   oracle com [total kept alive: 0; route allocated: 1 of 2; total allocated: 1 of 20 \n[DEBUG  Connecting to docs oracle com:443\n[DEBUG  CookieSpec selected: best-match\n[DEBUG  Auth cache not set in the context\n[DEBUG  Target auth state: UNCHALLENGED\n[DEBUG  Proxy auth state: UNCHALLENGED\n[DEBUG  Attempt 1 to execute request\n[DEBUG  Sending request: GET /javase/9/docs/api//package-list HTTP/1 1\n   \n\nSo what is wrong? Probably SSL  Based on that suspicion  I learned that I could set -Djavax net debug=ssl  which produced more information before the close message:\n\nmain  WRITE: TLSv1 2 Handshake  length = 239\nmain  READ: TLSv1 Alert  length = 2\nmain  RECV TLSv1 2 ALERT:  fatal  handshake_failure\nmain  called closeSocket()\nmain  handling exception: javax net ssl SSLHandshakeException: Received fatal alert: handshake_failure\nmain  IOException in getSession():  javax net ssl SSLHandshakeException: Received fatal alert: handshake_failure\nmain  called close()\nmain  called closeInternal(true)\n[DEBUG  Connection org apache http impl conn DefaultClientConnection@3667faa8 closed\n\nAnd now that I ve written that  I can t reproduce it :\\ With -Djavax net debug=*all*  I can see what else is going on:\n\n%% Cached client session: [Session-1  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \nmain  called close()\nmain  called closeInternal(true)\nmain  SEND TLSv1 2 ALERT:  warning  description = close_notify\nmain  WRITE: TLSv1 2 Alert  length = 26\nmain  called closeSocket(true)\n[DEBUG  Connection org apache http impl conn DefaultClientConnection@58af5076 closed\n\nMaybe the server has an aggressive timeout? I think I saw someone suggest that as a possibility \n\nI don t know more detail than that  I see people who suggest that the problem could involve:\n- connection managers (which maven-javadoc-plugin uses):    com/a/24084141/28465\n- a need for a specific key store:    com/a/5206837/28465\n- a need for extra crypto implementations/settings:    com/a/38264878/28465\n- or other settings (I at least tried passing -Dhttps protocols= and adding the suggested (possibly wrong in this case) -Dhttps cipherSuites to that):    com/a/32226688/28465\n- a new JDK:    com/a/39405982/28465\n- a new HTTPClient (though whatever comes with the newest maven-javadoc-plugin (assuming that that s built in to the plugin and not to Maven??) apparently wasn t good enough):    com/a/43220038/28465\n- aggressive timeout  I think  as noted above\n- maybe weird things happen when maven-javadoc-plugin closes the stream without reading from it?\n- I think other things that I ve forgotten  and surely other things I haven t understood \n\nAnyway  I made a local copy of the package-list  just as I d done for the javadoc io projects  even though this time there s only one problem instead of two :)\n\nI m pretty sure that the Checker Framework links will work now  too  but I haven t tested because we don t have any yet in Guava itself \n\nPossibly I should just switch us to back using -link instead of -linkoffline  adding the User-Agent override that I figured out last time    \n\nAlso  I moved some configuration to the parent pom so that it also affects guava-testlib  But I didn t move the most interesting parts  which require a little more work (though hopefully not much   ) \n\nRe-fixes    com/google/guava/issues/2965\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=178252119\n  
957,     [guava concurrent  Added  Submitted tasks have a happens-before order as defined in the Java Language Specification  to the documentation of newSequentialExecutor()  This popped up as a useful way to think about this Executor on a related design \n\n
958,     Deprecate ConcurrentHashMultiset#createEntrySet()\n\nFixes #3004\n\n
959,     Recognize @NullableDecl in NullPointerTester and friends \n\nAlso  migrate common testing to itself be annotated with @NullableDecl  rather than @Nullable \nI could claim that I did this as a small-scale test  but honestly I just didn\ t feel like pulling the  real  changes of this CL out from the @NullableDecl migrations already present in my client :)\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177902265\n  
960,     Depend on checker-compat-qual instead of checker-qual \n\n
961,     Miscellanous followup to CL 177814345:\n\n- Make inverse() thread-safe in the mainline  as it is in the backport \n- Remove an inaccurate comment:    \n- Eliminate a couple spurious diffs between branches  (That said  if you don t want @RetainedWith in the java7 branch  I don t mind keeping it out  I just happened to notice it )\n\n
962,     google-java-format MOST OF THE THINGS \n\nThe only things I did were:\n- fixed  lists  in StringUtil and NullPointerTesterTest\n- fixed a few files that needed string wrapping: WhitespaceMatcherBenchmark  SourceSinkTester  FuturesTest\n- added some missing braces for for() loops in ListsTest\n- removed `static` from interfaces in TypeTokenSubtypeTest and TypeTokenTest\n- added blank lines between methods in ListsImplTest  CharStreamsTest  UnsignedInts  UnsignedLongs  Lists (b/26486965)\n- added blank lines between copyright and package in ImmutableEnumMap  ImmutableRangeSet  TestSortedSetGenerator  SubscriberExceptionContext  SubscriberExceptionHandler  ServiceManager  WrappingScheduledExecutorService  MapsCollectionTest  ServiceManagerTest (b/28398622)\n- removed blank lines inside a method call in IntMathTest and LongMathTest (b/70148121)\n\n
963,     I tripped and rewrote HashBiMap in the fully compact form  with no redundant code or storage  like I had assumed was too much work \n\nMemory consumption effects:\nUnsized: 52 bytes/entry vs  64 for server-side implementation vs  74 for CompactHash* implementation\nSized: 40 bytes/entry vs  64 for server-side implementation vs  56 for CompactHash* implementation\n\n(NB: I did not include storage of hash codes  as included in the other implementations   If we wanted that it d add another 8 bytes/entry sized  and probably 12 bytes/entry unsized )\n\nEffects on HashBiMapProGuard:\n17833 bytes vs  30172 bytes for server-side implementation vs  31159 bytes for CompactHash* implementation\n13 classes vs  29 classes for server-side implementation vs  27 classes for CompactHash* implementation\n99 methods vs  132 methods for server-side implementation vs  173 methods for CompactHash* implementation\n\n
964,     Remove public constructors from SimpleTimeLimiter \n\nThis change was already made for public Guava and is now done for [  users as well \n\n
965,     [FUTURES  Added Futures whenAllComplete(  ) run(  ) to Futures java\n\nSince runnable cannot throw checked exception  you cannot use getDone when defining your runnable which is a shame :(\n\n
966,     Remove maven-gpg-plugin configuration from Guava s pom \n\nUsing the sonatype-oss-release profile will do this for us  Also remove the default of gpg skip=true since the gpg plugin will no longer be used for normal builds \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177637510\n  
967,     Make getUnchecked available under GWT \n\nIn service of the tests of forthcoming CL 177218820 \n\n
968,     Automated g4 rollback of changelist 177586281 \n\n*** Reason for rollback ***\n\nMissed Guice reflective calls \n\n*** Original change description ***\n\nRemove public constructors from SimpleTimeLimiter \n\nThis change was already made for public Guava and is now done for [  users as well \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177603142\n  
969,     Update oss-parent to version 9 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177595991\n  
970,     Add @Nullable to MoreObjects \n\n
971,     Change  late 2017  removal date to January 2018 \n\n
972,     Schedule assignableFrom for deletion \n\nIt was deprecated over a year ago: [ I think our deprecation-date test (which has since been removed) missed it because it just looks for a number  and the regex ran into the @since tag \n\n
973,     Remove public constructors from SimpleTimeLimiter \n\nThis change was already made for public Guava and is now done for [  users as well \n\n
974,     Add missing @Nullable to the fields in ImmutableSet java\n\n
975,     Migrate from jsr305 s @GuardedBy and @OverridingMethodsMustInvokeSuper to Error Prone s \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177511255\n  
976,     Migrate from jsr305 s @CheckReturnValue to Error Prone s \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177507004\n  
977,     Depend on error_prone_annotations 2 1 3 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=177502898\n  
978,     Promote ReferenceEntry to a top-level class for weird reasons \n\nSpecifically: With the switch to the Checker Framework annotations  PackageSanityTests testNulls fails:\n\n  No exception thrown for parameter at index 3 from static com google common cache LocalCache$ReferenceEntry com google common cache LocalCache newEntry(com google common cache LocalCache java lang Object int com google common cache LocalCache$ReferenceEntry)[      1  null  for class com google common cache LocalCache\n\nNullPointerTester  even when updated to look for the Checker Framework @Nullable  can\ t detect it -- not as a parameter annotation  not as a type annotation  The annotation is on the method in the  class file according to javap (though I don\ t know for sure that it\ s in the  right  place)  but Java doesn\ t see it at runtime  This class is the only place I\ m having this problem \n\nI suspect that this is a bug specific to nested classes: NullPointerTester can detect the Checker Framework @Nullable annotation if the parameter type is a top-level ReferenceEntry class but not a nested one  I tried  LocalCache @Nullable ReferenceEntry<K  V>  and variants of that with no luck  so I\ m going with top-level \n\n(We\ re looking into reporting the bug upstream )\n\nUpdate: There is a decent chance that I won\ t use the Checker Frameworks\  *type* annotations at all (instead using declaration annotations)  in which case this CL won\ t be strictly necessary  But given that we may well migrate to those annotations someday  it seems worth working around this now while it\ s fresh on my mind \n\n
979,     Add missing @Nullable to Finalizer \n\n
980,     Add missing @Nullable to Preconditions \n\n
981,     Add missing @Nullable annotation to ForwardingSortedSet unsafeCompare(Object  Object) \n\n
982,     Adding [Server-Timing  HTTP header \n\n   w3 org/TR/server-timing/\n\n
983,     Don t use recursion in MultiInputStream read() \n\nFixes    com/google/guava/issues/2996\n\n
984,     Prepare for release 23 5 \n\n
985,     Add ImmutableMap getOrDefault() in the Android branch \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=176589307\n  
986,     Add Checker Framework to dependencies \n\nThis CL doesn t *use* any annotations yet  and I m not even certain that we re going to yet  But I think we re likely to  and there s enough that can go wrong with just this step that I d like to get it in \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=176584793\n  
987,     Deprecate Files fileTreeTraverser() and MoreFiles directoryTreeTraverser() \n\n
988,     Update Public Suffix data \n\nThe copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=176514824\n  
989,     Carry @CanIgnoreReturnValue over to new methods \n\n(Same as [  except for SimpleTimeLimiter)\n\n
990,     Migrate usage of Files fileTreeTraverser() to Files fileTraverser() \n\n
991,     Fix inheriting docs from the JDK \n\nThis broke somewhere between 18 0 and 19 0  I\ d wildly speculate because of changes to Maven?\n   github io/guava/releases/18 0/api/docs/com/google/common/hash/BloomFilter html#hashCode%28%29\n   github io/guava/releases/19 0/api/docs/com/google/common/hash/BloomFilter html#hashCode%28%29\n\nSo it took 2-3 years to notice :\\\n\nI chose this new phase based on:\n Invokes the execution of the lifecycle phase generate-sources prior to executing itself  \n   apache org/plugins/maven-javadoc-plugin/javadoc-mojo html\n\nAnd generate-sources seems to make more sense than anything that comes before that:\n   apache org/ref/3 5 2/maven-core/lifecycles html\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=176502970\n  
992,     Mutable Graph  Network  ValueGraph  java: tighten the contract for the edge-adding methods   The contract now states that if the specified nodes are not already present in the graph  they are silently added   (Removes the option of throwing in this case )\n\n
993,     Carry @CanIgnoreReturnValue over to new methods \n\n
994,     Fully qualify some references to javax annotation Nullable in files that will likely soon refer to both that Nullable and the Checker Framework s \n\n
995,     Remove @ThreadSafe and @NotThreadSafe annotations \n\nThey re part of jsr305  which we re looking to migrate off \nAnd they aren t checked by Error Prone or providing much other value \n\n
996,     Migrate from jsr305 s @Immutable to Error Prone s \n\n
997,     Import Map Entry almost everywhere \n\nQualified types make @Nullable annotations more complicated: If we\ re using a type annotation  the  @Nullable  has to come between  Map   and  Entry  rather than before the whole thing  That means diffs between the mainline  presuming that it supports type annotations  and the backport  presuming that it doesn\ t  It\ s not entirely clear that that\ s how things will work out  but I can\ t experiment until I fix the problem  and I figure I might as well submit the fix  given that I think we generally like doing this  at least with Multiset Entry isn\ t in play? But it\ s not very hard to handle the problem as it comes up  either  if this CL is too much \n\n(Naturally  the same problem will exist for other types  But this CL fixes the most common problem )\n\n
998,     Try out @OverridingMethodsMustInvokeSuper  and remove some unnecessary work in AbstractMapTester \n\nThe first couple locations I found to use @OverridingMethodsMustInvokeSuper were cases where we\ re already doing the right thing  so that\ s  disappointing  \n\nOn the plus side  while I was looking into this  I noticed that AbstractMapTester is redoing all the work of its superclass (at least assuming that no one tries to override resetMap() rather that resetContainer() -- if anyone should be overriding that at all   )  So I fixed that  Maybe  if we\ re lucky  it will make our GWT and Android tests faster -- at least internally  where we actually run our suite-builder suites on those platforms  But the GWT test times are variable enough that it\ s hard to be sure without a bunch of runs  and the Android tests aren\ t running at the moment (b/30863522)  so    I don\ t know if this really helps or not \n\n
999,     Annotate Cache with @CompatibleWith\n\n
1000,     Graduate Verify and VerifyException from Beta as requested here:\n   com/google/guava/issues/2409\n\nThese have been essentially stable for 3 5 years \n\n
1001,     Refactor file tree children logic to separate method just like in MoreFiles \n\n
1002,     Update docs that refer to the removed `suspensions` field \n\n
1003,     Claim that ImmutableCollection classes should still be preferred over Java 9 factories like `Set of` \n   com/google/guava/issues/2969\n\n
1004,     Roll forward \n\n*** Original change description ***\n\nAdd MoreFiles fileTraverser() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=175582408\n  
1005,     Roll forward \n\n*** Original change description ***\n\nAdd Files fileTraverser() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=175564642\n  
1006,     Make package-list files available to the android backport  too \n\nThis fixes the errors created by CL 173688451 \n\nIt s presumably possible to do this without duplicating the files  but    eh \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=175331982\n  
1007,     Correct gender off-by-one error  :)\n\n
1008,     Don t release guava-tests to Maven Central\n\nNo one should be depending on our tests (except from our own GWT tests) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=175197426\n  
1009,     Don t construct thousands of strings \n\nTest timings aren t 100% consistent  even when I run the Maven tests locally (rather than the internal tests in some random cluster)  so don t take this as definite truth  but I m seeing some apparent improvements from this CL  even after my earlier CL to decrease the iteration count  Here are the numbers for all tests to take >=10 seconds:\n\nBefore:\n00:11 testCorrectOrdering_smallHeapsPollFirst\n00:11 testCorrectOrdering_smallHeapsPollLast\n00:16 testHeapIntact\n00:17 testRandomAddsAndRemoves_duplicateElements\n00:19 testRemoveAt\n00:25 testRandomAddsAndRemoves\n00:48 testCorrectOrdering_mediumHeapsPollFirst\n00:52 testCorrectOrdering_mediumHeapsPollLast\n02:02 testCorrectOrdering_randomAccess\n\nAfter:\n00:08 testCorrectOrdering_smallHeapsPollFirst\n00:08 testCorrectOrdering_smallHeapsPollLast\n00:15 testHeapIntact\n00:17 testRandomAddsAndRemoves_duplicateElements\n00:18 testRemoveAt\n00:27 testRandomAddsAndRemoves\n00:46 testCorrectOrdering_mediumHeapsPollLast\n00:50 testCorrectOrdering_mediumHeapsPollFirst\n01:14 testCorrectOrdering_randomAccess\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=175152127\n  
1010,     Reduce iterations for MinMaxPriorityQueueTest under GWT \n\nI had a bunch of theories as to why these tests were slow (string construction  java util Random  collection construction)  They are probably part of the story -- especially string construction  which I might still submit a CL to reduce -- but fundamentally  I think the slow thing is our many calls to isIntact()  Let s not make so many  Likely the non-GWT tests would catch any problems here  anyway  and we ll still run the tests under GWT  albeit with fewer iterations  in case we have an obvious bug there \n\nThis is a clear win internally: All MinMaxPriorityQueueTest methods are now under 10 seconds  and I d previously seen ~6 over that mark  including 1 around a minute and 2 around 30 seconds  I ll get some external numbers next \n\nat head  top 14 MinMaxPriorityQueueTest tests:\n00:04 com google common collect MinMaxPriorityQueueTest_gwt|testExhaustive_pollAndPush\n00:06 com google common collect MinMaxPriorityQueueTest_gwt|testIteratorTester\n00:06 com google common collect MinMaxPriorityQueueTest_gwt|testIteratorTesterLarger\n00:10 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollLast\n00:11 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollFirst\n00:15 com google common collect MinMaxPriorityQueueTest_gwt|testHeapIntact\n00:16 com google common collect MinMaxPriorityQueueTest_gwt|testRandomRemoves\n02:51 com google common collect MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves_duplicateElements\n03:00 com google common collect MinMaxPriorityQueueTest_gwt|testRemoveAt\n04:13 com google common collect MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves\n07:28 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollFirst\n07:31 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollLast\n16:31 com google common collect MinMaxPriorityQueueTest_gwt|testRemoveAt_exhaustive\n19:19 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_randomAccess\n\nwith this CL  top 14 MinMaxPriorityQueueTest tests:\n00:01 com google common collect MinMaxPriorityQueueTest_gwt|testCreation_maximumSize_withContents\n00:01 com google common collect MinMaxPriorityQueueTest_gwt|testRemoveAt_exhaustive\n00:02 com google common collect MinMaxPriorityQueueTest_gwt|testRandomRemoves\n00:03 com google common collect MinMaxPriorityQueueTest_gwt|testExhaustive_pollAndPush\n00:06 com google common collect MinMaxPriorityQueueTest_gwt|testIteratorTester\n00:06 com google common collect MinMaxPriorityQueueTest_gwt|testIteratorTesterLarger\n00:11 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollFirst\n00:11 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollLast\n00:16 com google common collect MinMaxPriorityQueueTest_gwt|testHeapIntact\n00:17 com google common collect MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves_duplicateElements\n00:19 com google common collect MinMaxPriorityQueueTest_gwt|testRemoveAt\n00:25 com google common collect MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves\n00:48 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollFirst\n00:52 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollLast\n02:02 com google common collect MinMaxPriorityQueueTest_gwt|testCorrectOrdering_randomAccess\n\n
1011,     Prepare for release 23 4 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=175016465\n  
1012,     Automated g4 rollback of changelist 174856751 \n\n*** Reason for rollback ***\n\nBreakage \n\n[ \n\n*** Original change description ***\n\nAdd Files fileTraverser() \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174874052\n  
1013,     Automated g4 rollback of changelist 174865821 \n\n*** Reason for rollback ***\n\nBreakage \n\n[ \n\n*** Original change description ***\n\nAdd MoreFiles fileTraverser() \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174868235\n  
1014,     Add MoreFiles fileTraverser() \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174865821\n  
1015,     Add Files fileTraverser() \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174856751\n  
1016,     Remove no-op check \n\nThe only way for the current port to be equal to defaultPort is if it s a valid port  That s already covered by the hasPort() check \n\n
1017,     Support for empty ArrayTable \n\nI re-wrote the documentation as best as I could \n\nI may add support for 0×N in a follow up \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174703945\n  
1018,     Fix range typo in comments of subRangeMap \n\n
1019,     Make all  Tester  classes *end* with  Tester   and simplify our exclusions accordingly \n\n(We might be able to fully switch to glob-based  java includes/excludes now  rather than regex-based  class includes/excludes  but  class makes more sense  since Maven is really looking for classes  not source files  and I don\ t really feel like running the tests yet more times to make sure that I didn\ t accidentally exclude something new )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174501688\n  
1020,     Run nested classes for real this time \n\nI had thought that CL 157867713 accomplished this  but it didn\ t  My CL description there says that I tried both an <exclude> approach and a %regex approach  and only %regex worked  But I just reran tests before and after that CL (with both Maven 3 5 0 and Maven 3 1 1)  and the CL makes no difference in the number of tests run  and in particular it doesn\ t run nested tests \n\nMy theory is:\n- I inserted a fail() call into a *specific* test and looked for the failure  rather than looking at the total number of tests  That still isn\ t a complete explanation  of course  because that failure should have happened in both cases or in neither  So probably also   \n- I had both <exclude> and a *different* %regex value present at one point  and *that* was enough to run this particular nested test \n- Then I removed <exclude>  I assume because I got confused about what I was testing \n- I also removed the fail() call \n- Finally  I changed the %regex value to avoid running AbstractPackageSanityTests and other classes that don\ t end in  Test   If I had still been running nested classes at this point  still had the fail() call present  and still been looking for the failure  I would have found that it was no longer running \n\n(Update: Alternative simpler theory: The test I inserted the fail() call in was a FooTest class nested inside a BarTests class whose suite() method adds FooTest  This test would not have run originally (because  BarTests  doesn\ t match  **/*Test java  and the FooTest class is nested and thus excluded)  But it would have run during my initial testing of the new CL because I originally included *Tests as well as *Test  But then I removed the *Tests part because I didn\ t see any top-level classes of that name other than the problematic PackageSanityTests classes  At that point  I didn\ t retest the original failure  Unfortunately  my  bash_history cuts off right around the time of the original CL (but that\ s another story    :)) )\n\nAs best I can tell:\n\n- The old  **/*Test java  *does* run some nested test classes *if* I add <excludes>  Even though Maven purports to accept the name of a  java file  it appears to be internally turning it into a class name  so it can match nested classes that don\ t have a top-level source file of their own \n- But it doesn\ t run *all* nested tests  since some of their names don\ t fit the  FooTest  pattern  Specifically  it runs the same set of tests as the existing %regex filter \n\nSo it seems that we don\ t need %regex at all  But there\ s a catch: Maven now tries to run various nested classes that aren\ t supposed to be run as tests  And the easiest way to get the correct set of classes is to use regex after all \n\nI haven\ t spent a ton of time trying to find the absolute most correct set of tests  but the filters in this CL should be pretty close  The filters include everything  whether a top-level class or nested class  with a new documented exclusions \n\nguava-tests:\nbefore: Tests run: 833248  Failures: 0  Errors: 0  Skipped: 0\nafter: Tests run: 837060  Failures: 0  Errors: 0  Skipped: 0\n\nguava-testlib:\nbefore: Tests run: 118427  Failures: 0  Errors: 0  Skipped: 0\nafter: Tests run: 850859  Failures: 0  Errors: 0  Skipped: 0 [mostly from running OpenJdk6*Tests (OK  those names are misnomers now  but whatever :)) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174501246\n  
1021,     Remove redirectTestOutputToFile from guava-testlib configuration \n\nWe already removed it from guava-tests when moving it to the parent pom (CL 158738701)  but I missed that we d added it here (CL 92277616) after we d added it to guava-tests (CL 84561967) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174497867\n  
1022,     Don\ t issue a warning for the lack of srcs in the  main  guava-tests jar \n\nIt appears that I need up update maven-jar-plugin to access this new option \n\nBefore:\n[WARNING  JAR will be empty - no content was marked for inclusion!\n\nAfter:\n[INFO  Skipping packaging of the jar\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174471751\n  
1023,     Wait longer for the interrupt to happen \n\nEvidently our current wait wasn t long enough for at least one Travis run:\n   org/google/guava/jobs/296430665\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174385968\n  
1024,     Optimize ImmutableCollection Builder addAll(ImmutableCollection) to use System arraycopy when possible \n\n
1025,     Actually export print_surefire_reports sh \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174366533\n  
1026,     Run tests in a deterministic order \n\nWe just had a failure that depends on test execution order  It wasn t too hard to figure out (and would have been even easier with the output that I m adding in CL 174361258)  but determinism is a good thing that may help us in the future \n\n(It *might* also bring us closer to the Bazel test-runner behavior  but I haven t actually checked  And anyway  we shard some of our Bazel tests  so even if both systems now use the samer order  they might be executing different subsets of tests  so they still might not show the same errors )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174365332\n  
1027,     Print the actual output of failed tests \n\nLuckily  last time I was able to guess at the cause specifically because it was an  error  and not a  failure  \nAnd typically we\ d be able to reproduce the failure by running locally  though I\ m not sure if that\ s the case here because it depends on test ordering    which is currently dependent on the filesytem\ s order of files  but I\ ll deal with that in a separate CL \n\nThis appears to be the best solution:    com/a/19685036/28465\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174362932\n  
1028,     Clear the interrupt bit at the end of the test \n\nThis fixes the failure in    org/google/guava/jobs/296270564  in which get() was throwing InterruptedException \n\n
1029,     Make a small change to README md to make it simpler to auto-update \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=174357681\n  
1030,     [guava concurrent  Upstreamed a modified form of the modified interruption behaviour from a fork of SerializingExecutor  Documented and tested the behaviour thoroughly \n\n
1031,     Remove @GwtCompatible annotations from classes in the hash\npackage  which have no corresponding  gwt xml file \n\nFixes #2983\n\n
1032,     Add private constructor to Traverser \n\n
1033,     In Java 7 branch  don t bother using Iterators forArray in RegularImmutable List Set    The default ImmutableList listIterator implementation amounts to the same thing  an AbstractIndexedListIterator delegating to the array \n\nEffects on ImmutableSetProGuard:\n22598 bytes => 20871 bytes\n17 classes => 15 classes\n147 methods => 144 methods\n\n
1034,     Fix links to JSR305  and start linking to JDK 9 \n\nThe main problem with the JSR305 links is that the JDK -link argument was  claiming  the javax annotations package  This was happening for 2 reasons:\n- <detectJavaApiLink> defaults to true  so Maven adds its own -link (or -linkoffline  not sure) for the JDK  So I unset it \n- We manually specified a -link argument  and Maven\ s command-line order puts -link before -linkoffline (which  oh  we\ re now using -- see below)  So I made the JDK a -linkoffline argument  too  which is still possible when we\ re pulling the package-list from online \n\nThere\ s an additional problem  which is that Javadoc (or Maven? I forget) tries to download    javadoc io/com google code findbugs/jsr305/3 0 1/  which gives an access denied error  even though it needs only the package-list file in that directory  which downloads fine  As a fix  make our own local copy of that package-info file  I\ ve also done that for j2objc-annotations  though currently none of its annotations are @Documented  so it\ s not doing us much good yet \n\nThen  in the process of switching to a manual -link for the JDK  I lost JDK links  It turns out that Javadoc doesn\ t like the http links to the Oracle site  even though it\ s fine with http links from other sites  I switched to https (and did the same for the other projects while I was there)  and I posted this on    com/q/29867384/28465#comment80906399_29867384 to hopefully help anyone else in this situation  (I\ ll also try to ask our Java platform team about fixing the javadoc man page )\n\nConveniently  the switch to a manual -link also lets us choose which version of the JDK to link to  It seems like Java 9 makes the most sense   ? It\ s true that we promise compatibility with Java 8  but I think the normal thing would be to link to the newest version  I see in particular that we linked to Java 7 from the backport  That\ s defensible  but it\ s a bit weird: The primary target for the backport is Android  and we target a  Java-6-like  version of the Android SDK  The only  Java-7-like  thing we do is use language features like the diamond operator  The Java 7 link does make sense for actual Java 7 users  but I still think we\ re likely better off linking to JDK 9 Javadoc and letting users look at @since when they want  This should also help in cases in which we want to link to a newer type along the lines of  If you can use java util function Function  do so  \n\n(Oh  and while I was there  I added a comment to explain why we *also* need JDK sources  as I\ d forgotten )\n\nFixes    com/google/guava/issues/2965\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=173688451\n  
1035,     Add @since tags to some nested types \n\nI don t know if I got them all  but this is probably at least a majority \n\nTODO(cpovirk): Consider whether to redundantly put @Beta on nested types  The Beta checker consults enclosing types automatically  but it might be nice to have the info directly in rendered Javadoc \n\n
1036,     Update readme to show new current version 23 3 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=173589977\n  
1037,     Upgrade GWT version to 2 8 2  plus:\n\nAutomated g4 rollback of changelist 173434289 \n\n*** Reason for rollback ***\n\nThe bug isn t in HtmlUnit; it s in the old version of GWT (2 8 0) we were running against externally \n\n*** Original change description ***\n\nDetect HtmlUnit s broken sorting  and skip our tests that depend on proper sorting  at least when running our GWT tests in the open-source build \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=173560372\n  
1038,     Add Referrer-Policy to HTTP Headers \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=173526011\n  
1039,     Set all @since NEXT to @since 23 3 \n\n
1040,     Detect HtmlUnit s broken sorting  and skip our tests that depend on proper sorting  at least when running our GWT tests in the open-source build \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=173434289\n  
1041,     Avoid using WeakSafeReadWriteLock when not using weak references\n\nThis avoids needing to create a wrapper object every time we attain the lock \n\n
1042,     Deprecate [Binary TreeTraverser \n\n
1043,     Use whichever version of nextDown is available \n\n(followup to CL 158434703 to make the Android tests runnable under Java 9)\n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=172804202\n  
1044,     Fix minor spelling errors in tests \n\nFixes #2973\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=172766537\n  
1045,     
1046,     Add the notion of RegistrySuffix to InternetDomainName \n\n
1047,     Using Object instead of a specific type irritates some thread safety tests   Fix that \n\n
1048,     Add test for a graph with a single root \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=172477925\n  
1049,     Traverser: Throw IAE if startNode is not part of the graph and add tests for empty graph case and disjoint trees (forest) case \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=172443426\n  
1050,     Strip the public from ListenerCallQueue Event in open source   It s not actually visible  anyway \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=172361815\n  
1051,     Fix Striped lazyWeakReadWriteLock so that holding on to just the read or just the write lock will not allow the ReadWriteLock to be garbage collected  which many users find surprising \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=172355708\n  
1052,     Update hasPublicSuffix javadoc\n\n google  is a public suffix  and  google foo  is under public suffix  foo   Therefore hasPublicSuffix() should have returned true for both of them  In fact both TLDs ( google and  foo) are owned by Google Registry  i  e  us!\n\nI tested calling InternetDomainName from( google ) hasPublicSuffix()  which returns true as expected  Same goes for  google foo  \n\nI suspect this javadoc has not been updated after the last round of gTLD expansion  This method really should only return false for domains that are under nonexistent TLDs  like  google invalid   or fake TLDs themselves  like  invalid  (see    wikipedia org/wiki/ invalid) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171993370\n  
1053,     Update AtomicDouble in Java 7 to use AtomicLong directly instead of AtomicLongFieldUpdater   This is a relatively simple way of protecting against bugs like the Samsung bug  and clm@ and I agreed that the simplification over what e g  AbstractFuture has had to do was worth the extra allocation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171989893\n  
1054,     Update latest release to 23 2 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171972306\n  
1055,     Update hardcoded digit() and invisible() from Unicode 6 3 to Unicode 9 \n\n
1056,     Remove unnecessary volatile; this boolean value is only relevant if the executor runs the provided runnable inline  which means that the write will always be visible to the read in the catch() statement \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171882510\n  
1057,     Make the copying done for guava-gwt not verbose \n\nThis is the only thing I haven t been able to suppress by using -q or a flag to suppress output for specific plugins  It might be there s some flag for the antrun plugin that could be used in some way to make this not verbose  but I m not sure what (and to me it doesn t seem like there s much need to see this output anyway) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171879805\n  
1058,     Update deprecation messages for the CharMatcher constants to match the new deprecation messages on the factory methods while still suggesting that the factory methods be used rather than the constants if needed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171869554\n  
1059,     Don t log until static state is fully set up  This prevents a (hypothetical  to my knowledge) bug where a device exhibiting the samsung reflection bug would fail to fall back if an installed logger called a Futures method inline \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171857899\n  
1060,     Document that negate() @Overrides under Java 8 but not under Java 7 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171832549\n  
1061,     Deprecate matchers which cannot work as expected because the API does not support supplementary code points  Clarify some API docs  Point to ICU4J for an actual Unicode library \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171821078\n  
1062,     Fix links \n\nThe targets are manual <a name> anchors  not methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171819037\n  
1063,     ValueGraphTest java: add a few checks to make sure that we re properly exercising both null and non-null default values \n\nThis addresses the most recent suggestion in GitHub issue #2924 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171818169\n  
1064,     Automated g4 rollback of changelist 163355688 \n\n*** Reason for rollback ***\n\nMaven sees the JRE version as the newest now:\n   herokuapp com/maven-central/com google guava/guava/badge svg\n\n*** Original change description ***\n\nRemove Maven version badge from README \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171717363\n  
1065,     Expand BiMapTestSuiteBuilder s tests for setValue calls on entries (which get run on both forward and backward BiMaps) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171716221\n  
1066,     Expand BiMap test suite for forcePut operation  and fix a newly revealed bug in the HashBiMap status quo \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171699933\n  
1067,     Fix bug where ImmutableSortedMap could accept a null key/value pair \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171692711\n  
1068,     Update Public Suffix data \n\nThe copy is updated whenever Chrome s copy is updated  which is\ntypically every 6 weeks  Star the following to watch Chrome s updates:\n\n   chromium org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171689826\n  
1069,     Implement Traverser forTree() depthFirst*() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171687201\n  
1070,     Implement Traverser forTree() breadthFirst() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171648476\n  
1071,     Rollback [  for AtomicDouble(Array) that added jdk5 support \n\nFixes    com/google/guava/issues/1996\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171547765\n  
1072,     Add JPMS module name\n\nCloses    com/google/guava/pull/2961\nFixes    com/google/guava/issues/2920\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171539196\n  
1073,     Make sure that local task reference is retained in objc\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171467091\n  
1074,     Handle InheritableThreadLocals correctly on Java 9 \n\nThe internal Finalizer class is used by FinalizableReferenceQueue  In order to avoid holding a reference to the ClassLoader that loaded the class  it is necessary to avoid inheriting any ThreadLocals in the thread running the Finalizer code  Previously  we did this with a nasty hack accessing a private field in Thread  Although that field still exists in Java 9  private accesses like these are not allowed by default  This particularly access is also not needed on Java 9  since there is now a Thread constructor with a boolean parameter that says whether to inherit ThreadLocals  So we use that constructor if it is present  in preference to the field access \n\nFixes    com/google/guava/issues/2723 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171212577\n  
1075,     All javadoc examples now use the same example graph (also matches the one in the unit test) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171154720\n  
1076,     Documentation improvement: Clarify disambiguities around post-order/pre-order \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171152967\n  
1077,     ValueGraph: fix implementation of edgeValueOrDefault() \nAlso fixed tests to guard against similar future regressions \n\n(This fixes a regression that was introduced when we temporarily replaced this method with edgeValueOrNull() ([  and then failed to restore the original semantics when we restored the original method ([   Oops )\n\nRef: GitHub issue #2924\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=171145586\n  
1078,     Update README to refer to HEAD-jre/android-SNAPSHOT for the snapshot versions \n\nAlso update the URLs for snapshot Javadoc and JDiff \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170914305\n  
1079,     Update the farmHashFingerprint64() javadoc to specify how FarmHash\ s numeric fingerprint is encoded by HashCode#asBytes() \n\nThe HashFunction interface demands that an implementation output bytes [1   But FarmHash\ s Fingerprint64() is defined (by its C++ reference implementation) as returning a 64 bit unsigned number and farmHashFingerprint64() doesn\ t specify how this number is encoded by HashCode#asBytes()  This change will assure users that HashCode#asLong() from Guava\ s implementation of FarmHash will yield the same value as would be returned by farmhash::Fingerprint64() on the same input  The current  byte-wise identical to C++  language isn\ t helpful because again  C++ FarmHash returns a uint64_t not bytes and the C++ language doesn\ t specify how this value is encoded in memory \n\nNo code changes are needed because the unit tests already compare the output of #asLong() with golden values \n\n[1  The HashCode abstraction is nice but #asLong() and #asInt() are both are defined in terms of #asBytes()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170879437\n  
1080,     Implement Traverser forGraph() depthFirst*() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170856993\n  
1081,     Update  current release  to 23 1  Remove API diffs that are available from the release page \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170739806\n  
1082,     Remove removal dates for non-@Beta deprecations \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170507937\n  
1083,     Document that we re no longer removing stable APIs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170502671\n  
1084,     For clarity  re-apply @Beta to the CharMatcher constants \n\nWe deprecated the CharMatcher constants back when they were @Beta  Then we removed @Beta from the class  Because these methods were never present as non-@Deprecated  non-@Beta APIs  and because they are expensive to initialize on Android  we\ ll still remove them \n\nSince we\ re removing them  it makes sense to put our  We might remove this  annotation them  Doing so should make things clearer to humans  and it should allow tools to identify usages of these APIs to warn about possible breakages \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170502670\n  
1085,     Remove CountDownLatch emulation\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170466397\n  
1086,     Fix Escaper java comment typo \n\nFixes    com/google/guava/pull/2955\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170426933\n  
1087,     [guava concurrent  Removed the now-unused suspend() and resume() methods from SequentialExecutor  Removed the special-case visibility  Marked SequentialExecutor final  Removed the now-unused SerializingExecutor migration interface  Updated Javadoc to remove references to the now-gone methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170383728\n  
1088,     Minor noop updates to Future and TimeUnit in preparation of moving \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170376409\n  
1089,     We test on Ice Cream Sandwich now  not Gingerbread \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170348376\n  
1090,     Update Verify java @since NEXT tags to 23 1 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170346041\n  
1091,     [guava concurrent  Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170335851\n  
1092,     [guava concurrent  Removed the executeFirst() method from SequentialExecutor  and its test case  Switched the internal representation of the task queue back to Queue from Deque \n\nThe method was never public  and is no longer used in the depot \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170244464\n  
1093,     Update set_version sh to handle new versioning scheme and ignore snapshot versions since those are no longer chaning \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170242268\n  
1094,     Fix some random Error Prone warnings \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170241825\n  
1095,     Update @since tags to @since 23 1 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170234714\n  
1096,     Update Preconditions overloads that were added in 20 0 to have @since 20 0 and new Verify overloads to have @since NEXT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170230384\n  
1097,     Change Futures dereference removal from Guava 25 0 to January 2018 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170218859\n  
1098,     Change  @since 24 0  to  @since NEXT  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170113877\n  
1099,     Change version number in pom files from 24 0 to HEAD(-jre/android-SNAPSHOT) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170103675\n  
1100,     Fixed a typo in the Predicates class documentation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170083413\n  
1101,     Slightly bump the fpp to prevent OOM under JDK9 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170065907\n  
1102,     Fix Guava version number re  BloomFilter thread safety \n\nFixes    com/google/guava/issues/2949\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=170060213\n  
1103,     Make common collect spliterators backed by an int-indexed function correctly splittable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169941103\n  
1104,     Throwables#lazyStackTrace unsupported on IBM JDK 6\n\nFix addresses a problem occurred on IBM JDK 6  To ensure\nthat we can call underlying method  Throwables#getSizeMethod \nto get  stack size  first a smoke test  with dummy exception \nOnce method executed with success  it is safe to return it for\nfurther usage \n\nFixes #2947\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169910803\n  
1105,     common graph: fix formatting error in Graph/ValueGraph/Network Javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169869396\n  
1106,     Implement Traverser forGraph() breadhFirst() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169699092\n  
1107,     Traverser java: tweak the forGraph() and forTree() documentation to make memory use a bit more clear \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169556295\n  
1108,     Revert parts of CL 33393713 that changed Splitter on(   ) tests to redundant Splitter on(\  \ ) tests \nUse COMMA_SPLITTER in more remaining Splitter on(\  \ ) tests \n\nFixes    com/google/guava/pull/2946\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169545037\n  
1109,     Fix space complexity in forTree() documentation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169403578\n  
1110,     Add the same overloads that Preconditions has in Verify \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169291293\n  
1111,     Make propagateCancellation helpers @GoogleInternal \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169280037\n  
1112,     Add sortDescending methods in common primitives \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169267470\n  
1113,     Add @GoogleInternal propagateCancellation to Futures \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169256636\n  
1114,     Fix documentation for checkArgument and checkState\n\nBoth claim\n\n@throws NullPointerException if the check fails and either  @code\nerrorMessageTemplate  or  @code errorMessageArgs  is null (don\ t let this\nhappen)\n\nbut this doesn\ t actually happen - the message is created using\nPrecondition format that handles null values without throwing \n\nThis is more of a concern for the  don\ t let Args be null  because having\npotential null args is in fact a legitimate usecase \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169252415\n  
1115,     Merge pull request #2942 from google/sync-master-2017/09/18\n\nMoe sync  
1116,     Propagate close for to the inputs of Streams zip and Streams mapWithIndex\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=169073180\n  
1117,     Add sorting methods for the unsigned primitives in common primitives \n\n
1118,     Add reverse methods to all primitive arrays in common primitives \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168873513\n  
1119,     Clarify some docs on Ordering+Comparators\n\nFixes    com/google/guava/issues/2744\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168709191\n  
1120,     Add Traverser API without implementation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168700059\n  
1121,     Fix tests that assume Class getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the  java class path  system property \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168584444\n  
1122,     Make ClassPath search the contents of the  java class path  system property for the system class loader in Java 9 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168478543\n  
1123,     Add note about nodes being valid Map keys to PredecessorsFunction and SuccessorsFunction \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168384390\n  
1124,     The documentation of PredecessorsFunction and SuccessorsFunction now makes it clear that null nodes are forbidden \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168363735\n  
1125,     Fix edge case in EnumMultiset remove\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168298209\n  
1126,     Add @CanIgnoreReturnValue to EnumMultiset#add\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168270965\n  
1127,     Rewrite EnumMultiset to be directly backed by an E[  and an int[   avoiding allocation of boxing objects \n\nIt turns out that copying the enum constants array allocates less  requires less code  and avoids boxing overhead \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168250122\n  
1128,     Fix parameter comments that don t match the formal parameter name\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168222299\n  
1129,     Migrate Executor-less Futures callback methods to the ones with an Executor  while applying MoreExecutors directExecutor() for identical behavior \n\nFor more information  see [ \n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=168196211\n  
1130,     MOE strip the  public  from SortedLists\  member enums \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=167911908\n  
1131,     Remove @CanIgnoreReturnValue from Listening*ExecutorService \nUsers should do something with the returned Futures  if only log failures \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=167801778\n  
1132,     Set version numbers to 24 0-jre-SNAPSHOT \n\nThis makes Maven consider 24 0-jre to be  newer  than 24 0-android \nThat\ s preferable  as discussed in    com/google/guava/issues/2914     com/google/guava/issues/2839  and    google com/document/d/1NYGbfz56C0Oh4IGymXjeQUVK4FcRiqDbpc4vGLnDMrY/edit#\n\n
1133,     Remove redundant calls to NullPointerTester#setDefault\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=167536897\n  
1134,     [guava concurrent  Renamed SerializingExecutor to SequentialExecutor  Turned SerializingExecutor into a proxy to SequentialExecutor so two Components classes that directly use it have a chance to catch up \n\nComponents CL to change Components usages should be independent \n\n
1135,     Streams concat: Propagate close to sources streams\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=167296331\n  
1136,     fix typo\n\nFixes #2927\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=167272653\n  
1137,     Add java util Optional and its derivatives (OptionalInt  OptionalLong  OptionalDouble) to ArbitraryInstances and FreshValueGenerator \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=167165795\n  
1138,     Update Guava s dependency on Truth to 0 35 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=166834737\n  
1139,     Javadoc update when delegate throws exception \n\nFixes #2916\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=166719697\n  
1140,     Update Public Suffix list \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=166092121\n  
1141,     ImmediateFuture toString() implementation to provide the returned value or exception \nProvides for all ImmediateFutures implementation the same syntax that AbstractFuture uses \n\nIt\ s especially convenient during debugging of mocked asynchronous gRPC services \n\nFixes bug in AbstractFuture#toString in GWT that caused wrong representation:\n Class$S413@205[status=SUCCESS  result=[FAILURE  cause=[Class$S6    due to ongoing\nbuilder being already called when getDone() throws exception \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165925433\n  
1142,     Specifically instruct people who are calling dereference(transform(   )) to call transformAsync(   ) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165749798\n  
1143,     [guava concurrent  Added MoreExecutors sequentialExecutor()  and its documentation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165747869\n  
1144,     Use diamond for collect tests \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165711604\n  
1145,     Use diamond operator for all test targets except  collect \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165710863\n  
1146,     Remove a dangling closing bracket from Javadoc\n\nThere s a dangling closing curly bracket in the Javadoc example of\nMoreObjects toStringHelper()  Remove that in the main and the android\n\nFixes #2917\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165704738\n  
1147,     catch (SomeException e)  \n  // Expected\n \n\n=>\n\ncatch (SomeException expected)  \n \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165703702\n  
1148,     Store the CancellationException class (as we do in other tests)  not the cause of the CancellationException \n\nThe cause is null nowadays  so we were presumably never taking the if() branch at line 467 \nThat meant that we weren t actually checking isCancelled() \nA comment also suggests that we could theoretically have seen test failures because it was possible for setFuture to also succeed  but I don t think we ve seen that in practice  I have spent 0 seconds thinking about whether there s anything deeper to ponder here \n\n(I noticed this while migrating to multicatch  This CL also adopts multicatch in one place where it does make sense )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165647160\n  
1149,     Multicatch!\n\nThis should be fine for Android  even old versions  as I understand it  since dex is smart enough to turn it into something that works with any version \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165645769\n  
1150,     Use given throwable as the cause for the IAE that s thrown during loop\ndetection \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165643812\n  
1151,     On second thought  back out a few diamond operators in the mainline when they don t also work with Java 7 type inference \nThis minimizes diffs between the branches \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165608703\n  
1152,     Use diamond operator for rest \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165581940\n  
1153,     Use diamond operator in base+cache+concurrent \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165453531\n  
1154,     Use diamond operator in collect\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165450412\n  
1155,     Update Guava s JUnit dependencies to 4 11 (the version in [ )\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165313267\n  
1156,     Fix @since tags for collectors that didn t make 23 0 \n\n(pointed out in    com/google/guava/issues/2750#issuecomment-321129730)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165311302\n  
1157,     Add ImmutableSet builderForExpectedSize   Currently  the implementation is that if and only if a size is specified up front  the builder starts generating the hash table online and deduping elements \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165233245\n  
1158,     Fixes #2905\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=165000871\n  
1159,     Polishing\n\nFixes #2903\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164986539\n  
1160,     Fix javadoc link by including package name \n\nFixes #2904\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164983301\n  
1161,     Add Immutable Map BiMap  builderWithExpectedSize API \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164881633\n  
1162,     Test that a failed/cancelled input doesn t cause us to cancel other inputs \n(It s debatable whether that s the long-term behavior we want  but we should at least document that current behavior properly )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164874228\n  
1163,     Add ImmutableList builderWithExpectedSize API \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164872795\n  
1164,     common graph: remove j2cl annotations  as no one s using it from j2cl  it has no immediate prospective users  and it doesn t support Network-related capabilities anyway \n\nBonus cleanup: remove TODOs for adding documentation  as the indicated bug has been closed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164867192\n  
1165,     In ImmutableCollection ArrayBasedBuilder  keep a forceCopy flag to allow builder types to force a copy even if the entire array has not been used \n\nThis syncs the java7 implementation to the current implementation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164788429\n  
1166,     Fix typo in AbstractService log message \n\nFixes #2894\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164616826\n  
1167,     Ignore the lazyStackTraceIsLazy test on Java 9  for now \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164604079\n  
1168,     Fix broken Javadoc link in UnsignedLongs toString(long)\n\nFixes #2895\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164593709\n  
1169,     Suppress tests broken by CL 164180554 s emulator upgrade to API level 15 \n\nIt seems like that particular version of Android might not GC as aggressively (perhaps specifically for variables in the current method that have been nulled out  perhaps specifically when GC isn t strictly required -- I don t know) \nThe tests pass under the newest emulator  though  so I don t think there s a bug for us to report  Hopefully it s just a quirk of GC and not some strange way that some versions of Android are actually retaining a reference (not that we could necessarily do anything about it  anyway) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164593083\n  
1170,     Update Guava README for 23 0 and update snapshot versions \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164477814\n  
1171,     Catch NoClassDefFoundError and generic Error  the types thrown by JVM8 and by modern versions of Android \n\nFixes    com/google/guava/issues/2888\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164271678\n  
1172,     Avoid dependency on CharMatcher in BaseEncoding \n\nEffects on BaseEncodingProGuard:\n82416 bytes => 69250 bytes\n33 classes => 16 classes\n198 methods => 136 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164041197\n  
1173,     Update removal data for dereference() \n\nIts deprecation CL came just after the 23 0-rc1 cutoff \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=164024314\n  
1174,     Minor fix in comment \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163918392\n  
1175,     Change CacheBuilder constructor modifier to private  and\nrewrite corresponding tests\n\nFixes #2883\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163868156\n  
1176,     Shuffling from internal-only change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163850602\n  
1177,     Make ListenableScheduledFuture GwtCompatible \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163737479\n  
1178,     Avoid importing ImmutableList from Ordering \n\nEffects on OrderingProGuard ([ 79684 bytes => 64945 bytes\n28 classes => 15 classes\n215 methods => 124 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163721091\n  
1179,     Add collectors for ImmutableRangeSet and ImmutableRangeMap \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163522365\n  
1180,     Add notes about Java8 to UnsignedBytes  UnsignedInts  and UnsignedLongs \n\nFixes    com/google/guava/issues/2817\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163467425\n  
1181,     Remove Maven version badge from README \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163355688\n  
1182,     Mention 23 0-rc1 in Guava README \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163219156\n  
1183,     Use diamond operator \n\nFixes #2875\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=163205176\n  
1184,     Take advantage of suppressed exceptions in ServiceManager now that Guava is on Java 8 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162991053\n  
1185,     Remove some methods that are scheduled for removal in 23 0  along with one that was apparently scheduled for removal in 21 0 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162962688\n  
1186,     Fix an interruption bug from CL 162649353  but do so in a way that doesn t reintroduce yet another bug that that CL fixed \n\nSpecifically  go back to setting the runner thread before checking isDone() (so that we can t end up with a task that was cancel(true)ed but runs without being interrupted) \n\nBut also  if aborting because isDone()  spin until we ve received the interrupt  just as we do during normal completion (so that we don t end up interrupting the thread after the task is done) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162941603\n  
1187,     Warn a little more about weakKeys resulting in == key comparisons  even in the asMap view \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162780454\n  
1188,     Fix a bug in AbstractFuture setFuture\n\nIf the future being assigned was cancelled then there could be slightly different behavior based on whether or not the wasInterrupted bit is set and whether or not it was a TrustedFuture   The fix is to never propagate the wasInterrupted bit from setFuture \n\nThis also fixes the potentially confusing behavior where wasInterrupted could be true but interruptTask() would never be called \n\nFor all these reasons  it remains the case that setFuture can never cause interruptTask to be invoked \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162767529\n  
1189,     Super-minor cleanup to AggregateFuture\n\naccess the wasInterrupted local instead of calling the method again\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162687910\n  
1190,     Plug ImmutableIntArray in Ints  etc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162665962\n  
1191,     Forgot to specify equals() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162665061\n  
1192,     Add @ForOverride to AbstractFuture afterDone now that    com/google/error-prone/issues/342 is fixed \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162662199\n  
1193,     Fix interruption leak in submitAsync and whenAllComplete() callAsync() \n\nThere are two bugs in the handling of TrustedListenableFutureTask:\n\n1  Returning an future that was cancelled with interruption calls setFuture()  which then calls interruptTask() on the output future - this then calls InterruptibleTask interruptTask()  which happily interrupts the thread that directExecutor execute() was called on \n\n2  The thread that InterruptibleTask runs on is referenced forever  and CombinedFuture nulls out its reference to InterruptibleTask in afterDone() - which is called after interruptTask  This means that if the setFuture() path is taken  then cancel(true) is called  the thread that called the callable will be interrupted  even after InterruptTask run() has returned \n\nIf we ve ever seen spurious InterruptedExceptions in production  this could be a cause - whenAllComplete() callAsync(callable  executor) cancel(true) can interrupt whatever thread callable was called on  even long after call() returns  If that thread is part of a pool (which it probably always would be)  then this would interrupt whatever unlucky task happened to be running on that pool thread later \n\nThis CL adds earlier nulling out of the InterruptibleTask in TrustedListenableFutureTask  as well as makes InterruptibleTask robust to having interruptTask called after runInterruptibly has returned  To avoid tasks interrupting themselves when they call setFuture of an interrupted and cancelled future  a new method allows subclasses to end the interruption window early - this should also somewhat reduce the race of directExecutor() listeners being interrupted \n\nAdditionally  by splitting CombinedFuture setValue() into 2 methods  this CL fixes the equivalent of    com/google/guava/issues/2254 for Futures whenAllSucceed/whenAllComplete \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162649353\n  
1194,     Use specialized spliterators for Primitives asList utilities   Addresses    com/google/guava/issues/2874  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162417940\n  
1195,     Rollforward [  which was rolled back in [  because it\ncaused some tests using appengine to fail with IOExceptions when calling\nFileInputStream available()   The workaround in the rollforward is to not call\nthe method   The one case where we were calling it we had actually already\ncalled a similar method  so trying again doesn t seem valuable anyway \n\n*** Original change description ***\n\nImplement ByteSource asCharSource(charset) read() using the decoding string\nconstructor instead of streaming the contents into a StringBuilder \n\nthis allows us to avoid a number of copies that are currently happening for\neach character (1  into a temporary CharBuffer  2  into a StringBuilder  3 into\nthe String char[ ) and replace it with simply whatever is required by\nByteSource read() and the String(byte[   charset) constructor   For certain\nByteSource implementations (like FileByteSource) ByteSource read() can often\npresize the byte[  correctly and the string constructor can also do some things\nto guess at the correct array sizes and avoid copies in the common case \n\nBenchmarks have shown that this should improve the speed of Files toString\nsignificantly \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162275181\n  
1196,     Automated g4 rollback of changelist 162220754 \n\n*** Reason for rollback ***\n\napp-engine has a buggy implementation of FileInputStream available() which is throwing IOException\n\n*** Original change description ***\n\nImplement ByteSource asCharSource(charset) read() using the decoding string constructor instead of streaming the contents into a StringBuilder \n\nthis allows us to avoid a number of copies that are currently happening for each character (1  into a temporary CharBuffer  2  into a StringBuilder  3 into the String char[ ) and replace it with simply whatever is required by ByteSource read() and the String(byte[   charset) constructor   For certain ByteSource implementations (like FileByteSource) Byte   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162245286\n  
1197,     Add deprecation notice to Futures dereference\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162231445\n  
1198,     Implement ByteSource asCharSource(charset) read() using the decoding string constructor instead of streaming the contents into a StringBuilder \n\nthis allows us to avoid a number of copies that are currently happening for each character (1  into a temporary CharBuffer  2  into a StringBuilder  3 into the String char[ ) and replace it with simply whatever is required by ByteSource read() and the String(byte[   charset) constructor   For certain ByteSource implementations (like FileByteSource) ByteSource read() can often presize the byte[  correctly and the string constructor can also do some things to guess at the correct array sizes and avoid copies in the common case \n\nBenchmarks have shown that this should improve the speed of Files toString significantly \n\nfurther work should also be done for the normal CharSource read implementation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162220754\n  
1199,     Add submitAsync and scheduleAsync methods  to ease the deprecation of Futures dereference\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=162004818\n  
1200,     Short-circuit null check in Throwables#lazyStackTraceIsLazy\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161998907\n  
1201,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161899116\n  
1202,     Add @SafeVarargs to Predicates and(Predicate<? super T>   ) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161877904\n  
1203,     Shutdown the original executor in getExitingScheduledExecutorService \n\nThe shutdown hook thread names itself after the executor  presumably to aid in debugging   If the original executor does NOT shutdown quickly  looking at the thread dump shows an executor never created by application code \n\nInstead  give up a little of the wrapping safety of unconfigurableScheduledExecutorService  to make debugging easier \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161869256\n  
1204,     Optimize CharStreams copy to take advantage of known Readable/Appendable types \n\nThe most common Readable is a Reader which has good support for reading char arrays  the most common Appendable is either a StringBuilder or a Writer  both of which have good support for writing char arrays   Furthermore the default implementation of Reader read(CharBuffer)  is less than ideal (copies the characters an extra time) and the default implementation of StringBuilder append(CharBuffer) calls charAt() on every character (instead of trying to access the underlying array()) which incurs lots of bounds checks   Similarly Writer append(CharBufffer) calls toString() on the CharBuffer which incurs an extra copy   So depending on the combination of types involved we may copy the bytes 4 times instead of 2 \n\nBy adding specialized implementations we can avoid this overhead most of the time and deal with simple char arrays for our temporary buffers \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161868537\n  
1205,     common graph: create (package-protected) ForwardingValueGraph and ForwardingNetwork classes  and use those (and ForwardingGraph) to simplify the implementation of the Transposed* inner classes in Graphs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161856111\n  
1206,     Optimize CharSource wrap(CharSequence) for when the CharSequence is a String\n\nStringReader should be faster than CharSequenceReader in this case since it can\nuse the String getChars() method \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161843629\n  
1207,     ValueGraph java: remove bogus @since 23 0 on edgeValueOrDefault \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161824124\n  
1208,     ValueGraph java: restore edgeValueOrNull() to edgeValueOrDefault() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161738013\n  
1209,     Switch to using AtomicReference  since only one field needs CAS \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161675875\n  
1210,     Make RateLimiter create parameter order consistent \n\nFixes #2869\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161668959\n  
1211,     Fix >100 violation in ImmutableMap doc update \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161564762\n  
1212,     Add @since 23 0 to new (or with new return type) edgeValue methods in ValueGraph \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161545836\n  
1213,     Don t include the toString() of the future if it completes while the timeout expires \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161523026\n  
1214,     Add @SafeVarargs to Predicates or(Predicate<? super T>   ) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161477333\n  
1215,     Make documentation on iteration order more explicit \n\nImmutableCollection specified that each construction pathway would specify how it does ordering  but we didn t really follow through on that   Now  we\n\n- add more explicit documentation to the main construction pathways for the main immutable collections\n- specify in ImmutableCollection that it s usually insertion order\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161237788\n  
1216,     ValueGraph edgeValue*: change from\n* V edgeValue()  V edgeValueOrDefault()\nto\n* Optional<V> edgeValue()  V edgeValueOrNull()\n\nFixed Graphs inducedSubgraph() implementations so that it appropriately specifies the # of nodes in the induced subgraph as being the size of the supplied node Iterable \n\nFixed MoreGraphs inducedSubgraph() implementations so that the filtered nodes are being returned as Lists rather than Iterators  so that calculating their size doesn t exhaust the Iterator \n\nFixed the graph *Builder from() methods so that they are all uniformly enforcing types (this was causing MOE problems in conjunction with the expectedNodes() call \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161235517\n  
1217,     Throw IllegalArgumentException if a loop in the causal chain is detected in Throwables getCausalChain() and Throwables getRootCause() \n\nFixes    com/google/guava/issues/2866\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161233381\n  
1218,     Prepare common graph for GWT/j2cl usage \n\n1  Had to replace String format() uses  because it s not supported for j2cl \n2  Had to mark Network-related code as @GwtIncompatible because of uses of\n   java lang ref SoftReference  which j2cl cannot support \n\nNeeded as a step toward using common graph in JSCompiler \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161208004\n  
1219,     Fix some more broken  @link  comments \n\n(I didn t check that every referenced method exists  but this should be better than the status quo )\n\nMethodology:\nreplace_string  (\\100link(?:plain)? )([a-z [^\\n (  *[(  )   $1#$2 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161135720\n  
1220,     Fix broken  @link  comment in AbstractFuture \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161128242\n  
1221,     Remove static map allocation and map lookup in base Defaults \n\nFixes    com/google/guava/issues/2709\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161114331\n  
1222,     Update code google com link to github in Murmur3Hash32Test\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161087101\n  
1223,     Add an Automatic-Module-Name manifest entry \n\nFixes #2846\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161084009\n  
1224,     Add @since for pendingToString() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161082171\n  
1225,     Add cross-references to sibling Preconditions and Verify methods  to aid discoverability \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161036542\n  
1226,     Open up pendingToString()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=161027032\n  
1227,     Add simple `closed` and `closedOpen` ContiguousSet factories for int and long \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160847399\n  
1228,     Remove unnecessary from() calls for things that are already FluentIterables\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160622367\n  
1229,     Fix AbstractFuture toString()\ s message on futures that failed  Expanded unit tests to match the expected strings more completely \n\nBefore this change  SUCCESS  result=[  would be erroneously included in the output \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160576932\n  
1230,     hasEdge(): rename to hasEdgeConnecting()  remove @GoogleInternal annotation  and add to Network as well \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160455853\n  
1231,     Remove extra punctuation in single-sentence @return\n\nAs per [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160398233\n  
1232,     Propagate CL 160170507 s doc changes to the java7 branch \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160186624\n  
1233,     Add BloomFilter collector  now that common hash is forked   Finishes off    com/google/guava/issues/2810 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160170507\n  
1234,     Fix Javadoc missing  code  typos \n\nSpecifically  fix up occurrences of / @[A-Za-bd-hjkm-uw-z /\n\nThanks to    com/google/guava/commit/a3e5514784cfe739f9e3b28bb24bdb0e24711a9c#commitcomment-22758348\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160161267\n  
1235,     AbstractNetwork: add a functionally correct (if not super-efficient) implementation of edgesConnecting()  because it s easy to do wrong \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160155863\n  
1236,     Prepare for Java-8-specific changes to common hash \n\nThis happens to touch the executable bit of our files externally \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=160139425\n  
1237,     Only get values from Map in Maps immutableEnumMap once   Fixes    com/google/guava/issues/2854  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159973292\n  
1238,     Update Guava to depend on Truth 0 34 \n\nThere s no immediate need  but I figure I might as well so that future users don t get confused when they try to use MultimapSubject containsExactly() or something \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159965728\n  
1239,     Fix doc which was incorrect in the null case  and add a few words about a behavior some users have been depending on (that it intercepts NPE and CCE) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159867183\n  
1240,     common graph tests: unify some duplicate constructs (enums  methods  constants) and put them in TestUtil java \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159856272\n  
1241,     Network java: fork edgeConnecting() for java7/Android:\n* current/   /Network java now provides\n  java util Optional<E> edgeConnecting(N  N)\n  E edgeConnectingOrNull(N  N)\n* java7/   /Network java now provides\n  E edgeConnectingOrNull(N  N)\n\nNeither current/ nor java7/ use common base Optional in external APIs any more \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159748595\n  
1242,     Fix typo in FluentIterable#stream javadoc\n\nFixes #2849\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159695686\n  
1243,     Stop claiming that Guava has only one dependency \n\nFixes    com/google/guava/issues/2855\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159573711\n  
1244,     Prepare common graph for Java-8-specific changes \n\nIt so happens that this makes a bunch of files no longer executable  They shouldn t have been in the first place  so that s good  It s not clear that we ll fix up our tools to stop making the rest of the files executable anytime soon  though \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159462625\n  
1245,     Marginally improve what Maven prints for javac errors (by upgrading maven-compiler-plugin) \n\nBefore:\n[ERROR  /home/cpovirk/clients/guava-black/guava/guava/src/com/google/common/reflect/Types java:[607 7  error: cannot find symbol\n\nAfter:\n[ERROR  /home/cpovirk/clients/guava-black/guava/guava/src/com/google/common/reflect/Types java:[607 8  cannot find symbol\n  symbol: class Overridez\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159271532\n  
1246,     Output  java util Map Entry  under Java 9  as the JDK does \nUnder previous JDKs  we continue to output  java util Map java util Map Entry   just as those JDKs do \n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159237707\n  
1247,     Don t fail tests just because we can t securely delete recursively \n\nI guess that the principled thing here would be for us to delete the individual files and directories manually  but that sounds like more effort than is really worthwhile \n\nFixes    com/google/guava/issues/2845\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=159220065\n  
1248,     Optimize murmur3_32 hashString(CharSequence  UTF_8) to unroll the Utf8 directly into the hasher rather than converting it to a byte array \n\nBenchmark results: Pure ASCII took 83% as much time   rare exotic  text took 43% as much time (!)  and everything in between took an in-between amount of time   Unnecessary garbage was reduced to zero \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158984049\n  
1249,     MutableGraph java: fix Javadoc link \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158972072\n  
1250,     Expand common hash ByteBuffer support  adding a default AbstractHasher hashBytes implementation and expanding HashTestUtils to test more about the hashing of ByteBuffers \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158901523\n  
1251,     Change implementation of Byte/CharSource isEmpty to avoid opening a stream when the size of the source is known to be >0 \n\nFixes    com/google/guava/issues/2843 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158854512\n  
1252,     Test Android code on Travis with two different environments to hopefully avoid timeouts\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158852632\n  
1253,     Have ImmutableMap go back to using a specialized singleton implementation for size = 1 maps \n\nBazel has made a pretty convincing argument that so many real usages of immutable collections have size = 1 that the tradeoff is worth it \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158849972\n  
1254,     Add toString() to some Future subclasses \n\nI opted for CANCELLED rather than CANCELED to match isCancelled() \n\nExample toString:\ncom google common util concurrent AbstractFutureTest$11@1ae369b7[status=PENDING  info=[setFuture=[com google common util concurrent AbstractFutureTest$10@6fffcba5[status=PENDING  info=[cause=[Someday         \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158789362\n  
1255,     Abstract common graph classes: add Javadoc warnings that methods implemented in these classes should not be overridden without cause \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158777768\n  
1256,     Recognize Java-9-style version strings \n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158747678\n  
1257,     Use a newer version of Mockito  as necessary for Java 9 \n\nApparently 2 8 40 is out  but currently we re internally upgrading to 2 7 19  so that seems like the safest thing to target  (But I m sure we ll get to 2 8 40 or later eventually  so maybe I m wasting time bothering with 2 7 19    )\n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158745717\n  
1258,     Move all surefire configuration to the parent pom \n\n(I got confused when I added an argLine in the parent pom (as part of Java 9 testing) and found it had no effect  apparently because it s overwritten in the child )\n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158738701\n  
1259,     Mark Immutable(Int|Long|Double)Array with the errorprone @Immutable annotation\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158732518\n  
1260,     Don t expect java ext dirs under Java 9 \n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158545119\n  
1261,     Skip static methods  like the forthcoming Set of \n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158475485\n  
1262,     Adding ByteBuffer support to Hashing APIs  Rollforward now that broken user is fixed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158447108\n  
1263,     Under Java 8  use Math nextDown instead of FpUtils nextDown \n\nFpUtils is going away in Java 9 \nWe d use Math under Java 7  too  but it s not present until Java 8 \n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158434703\n  
1264,     Update Javadoc plugin to a version that understands the Java 9 version scheme:\n   apache org/jira/browse/MJAVADOC-442\n\n(part of    com/google/guava/issues/2571)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158429834\n  
1265,     Add @ReflectionSupport to AggregateFutureState  AtomicDouble and InterruptibleTask \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158270892\n  
1266,     Automated g4 rollback of changelist 158168944 \n\n*** Reason for rollback ***\n\nNeed to fix some code that relied on the undefined behavior of calling put*() after hash() \n\n*** Original change description ***\n\nAdding ByteBuffer support to Hashing APIs \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158210614\n  
1267,     Adding ByteBuffer support to Hashing APIs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158168944\n  
1268,     Resurrect SingletonImmutableList on server side only \n\nBazel has apparently measured that in their applications  ~50% of ImmutableLists have size 1   This is significant enough that it s probably worth resurrecting the optimization to have a specialized implementation that just wraps the one element \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158164804\n  
1269,     Propagate cancellation for Futures inCompletionOrder\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158154825\n  
1270,     Disable some tests externally until GWT releases a version with the problematic bug fixed \n\nThe tests work fine in non-GWT mode  but we don\ t have a trivial way to say  run this everywhere except externally under GWT   so I\ m just stripping them entirely \n(In particular  I don\ t think  // MOE:insert @GwtIncompatible  works because we would stil generate a StreamsTest_gwt that refers to the removed methods  so it would fail to compile )\nThis ensures that we still run them internally in both modes  which seems more important than running them internally+externally but never under GWT (as @GwtIncompatible would do) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=158046739\n  
1271,     Reduce sizes of exhaustive/random MinMaxPriorityQueue tests; they re taking way too long \n\ntestHeapIntact and testExhaustive_pollAndPush each seem to take on the order of a minute and a half on Android  before this CL   After  they take ~1 sec \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157872566\n  
1272,     Fixes incorrectly-ordered arguments to calls to assertEquals\n([ \nThis change has been automatically generated by an Error Prone check that\ndetects incorrect argument ordering on calls to assertEquals-style methods  See\n[ \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157871496\n  
1273,     Run nested classes in the open-source build \n\nEvidently Maven looks only at top-level classes by default -- perhaps by scanning for  java files and then looking for the corresponding top-level classes?\n   apache org/surefire/maven-surefire-plugin/test-mojo html#includes\n\nI\ d found a suggestion here that I might just need to override the default excludes:\n   atlassian com/clover/using-clover-with-maven-+-surefire-test-+-inner-test-classes-285840787 html\nBut I couldn\ t find a way to get that to work -- which makes sense in light of the  java point above  I\ m guessing that the linked page is not actually trying to explain exactly how Maven skips nested classes  only that it does so at all \n\nThe syntax is documented here:\n   apache org/surefire/maven-surefire-plugin/examples/inclusion-exclusion html#Regular_Expression_Support\n\nThe regex here should match everything that the old default did  and it now pulls in nested classes  too  since it operates on  class files  as documented in the previous link  For the old default  see:\n   apache org/surefire/maven-surefire-plugin/test-mojo html#includes\n(The old default also includes Test* and *TestCase  but those don\ t appear to match any new test classes for us  so I didn\ t bother complicating the regex for them )\n\nCorrection: *Our* old value was  **/*Test java   since we set that manually \nThat dates back to CL 41635188 \nI\ m not sure why I thought that was the default at the time  but evidently the Maven docs of the day were just plain wrong  claiming that the defaults include only  IT  classes:\n   archive org/web/20130102062549/   apache org/surefire/maven-surefire-plugin/test-mojo html#includes\nAnyway  we were already omitting *Tests java \nI initially planned to include *Tests java  but then I discovered that this includes PackageSanityTests classes \nI *thought* I had seen all tests run successfully anyway  but now I\ m seeing failures[*   so I\ ve gone back to omitting PackageSanityTests classes \n(And  *Tests java  doesn\ t match any tests other than PackageSanityTests classes )\n\nContinuing to omit PackageSanityTests is reasonable enough  at least in the short term:\n\n- (minor) We sometimes want to run it in a different VM  That said  that problem is solvable in other ways  and we already elected to be lazy and skip it entirely:    com/google/guava/commit/cc2b970f45d28a9258dbd9c01fda97a4ba293c20 (Of course it turns out that we were skipping it entirely already  And in fact  that commit didn\ t intentionally remove PackageSanityTests; it just changed our build macros to reflect in the open-source build something that was already happening internally -- that PackageSanityTests wasn\ t part of our main test target (though it is run in a separate test target)  The commit\ s actual purpose was to avoid publishing some unrelated files )\n\n- We probably don\ t really want to run against benchmark classes  At best  doing so seems wasteful  And worse  it\ s causing failures  Likely AbstractPackageSanityTests should be configured to skip benchmarks  just as it today skips tests  But I\ d rather save that for yet another CL \n\nThe bottom line here might be that this is another reason to move from Maven to Bazel (at least assuming that Bazel\ s test runner is equivalent to our internal one)  cc=ronshapiro :)\n\n[* \njava lang NoClassDefFoundError: com/google/common/util/concurrent/FutureFallback\n\tat java lang Class getDeclaredConstructors0(Native Method)\n\tat java lang Class privateGetDeclaredConstructors(Class java:2673)\n\tat java lang Class getDeclaredConstructors(Class java:2022)\n\tat com google inject spi InjectionPoint forConstructorOf(InjectionPoint java:243)\n\tat com google inject internal ConstructorBindingImpl create(ConstructorBindingImpl java:96)\n\tat com google inject internal InjectorImpl createUninitializedBinding(InjectorImpl java:629)\n\tat com google inject internal InjectorImpl createJustInTimeBinding(InjectorImpl java:845)\n\tat com google inject internal InjectorImpl createJustInTimeBindingRecursive(InjectorImpl java:772)\n\tat com google inject internal InjectorImpl createJustInTimeBindingRecursive(InjectorImpl java:761)\n\tat com google inject internal InjectorImpl getJustInTimeBinding(InjectorImpl java:256)\n\tat com google inject internal InjectorImpl getBindingOrThrow(InjectorImpl java:205)\n\tat com google inject internal InjectorImpl getInternalFactory(InjectorImpl java:853)\n\tat com google inject internal FactoryProxy notify(FactoryProxy java:46)\n\tat com google inject internal ProcessedBindingData runCreationListeners(ProcessedBindingData java:50)\n\tat com google inject internal InternalInjectorCreator initializeStatically(InternalInjectorCreator java:133)\n\tat com google inject internal InternalInjectorCreator build(InternalInjectorCreator java:106)\n\tat com google inject internal InjectorImpl createChildInjector(InjectorImpl java:217)\n\tat com google inject internal InjectorImpl createChildInjector(InjectorImpl java:224)\n\tat com google caliper runner CaliperMain exitlessMain(CaliperMain java:120)\n\tat com google caliper runner CaliperMain main(CaliperMain java:81)\n\tat com google caliper runner CaliperMain main(CaliperMain java:69)\n\tat com google common base WhitespaceMatcherBenchmark main(WhitespaceMatcherBenchmark java:56)\n\tat sun reflect NativeMethodAccessorImpl invoke0(Native Method)\n\tat sun reflect NativeMethodAccessorImpl invoke(NativeMethodAccessorImpl java:62)\n\tat sun reflect DelegatingMethodAccessorImpl invoke(DelegatingMethodAccessorImpl java:43)\n\tat java lang reflect Method invoke(Method java:498)\n\tat com google common reflect Invokable$MethodInvokable invokeInternal(Invokable java:197)\n\tat com google common reflect Invokable invoke(Invokable java:100)\n\tat com google common testing NullPointerTester testParameter(NullPointerTester java:349)\n\tat com google common testing NullPointerTester testMethodParameter(NullPointerTester java:220)\n\tat com google common testing NullPointerTester testMethod(NullPointerTester java:188)\n\tat com google common testing NullPointerTester testStaticMethods(NullPointerTester java:134)\n\tat com google common testing ClassSanityTester doTestNulls(ClassSanityTester java:197)\n\tat com google common testing AbstractPackageSanityTests testNulls(AbstractPackageSanityTests java:231)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157867713\n  
1274,     In 4 files  manually include a TestCase in its own suite() \nThis lets the open-source build run those tests \n\nDetails: Our internal test runner  given a TestCase with a suite() method  always runs the TestCase in addition to the suite()  even if the suite() doesn\ t include it \nThe external Maven test runner  by contrast  skips the TestCase itself unless the suite() includes it \nThat\ s led us to add the suite manually:    com/google/guava/blob/fac8339c87815fb7deca0cf01d61a5146355723f/guava-tests/test/com/google/common/collect/SetsTest java#L116\nBut we missed it in a few recent cases \n\nI noticed one of these cases when I ran the open-source GWT tests and they failed (because we\ re using an old Truth version externally  which I\ m also fixing) \nThis raised the question of why the non-GWT tests weren\ t failing in the same way  and the answer is that this suite() business was skipping them \nI identified other affected tests with:\n\n$ grep -rl \ ^  public static Test suite[( [) \  */test/ > /tmp/files\n$ grep \ ^  public void test\  -l $(for F in `cat /tmp/files`; do BASE=$(basename $F  java); grep  addTestSuite($BASE class)  -L $F; done)\n\nNote that  with this solution  we run the tests *twice* internally \nThis is unfortunate but probably livable \nAn alternative that we\ ve employed is to move the tests into a nested class  which we then don\ t need to add to the suite:\n   com/google/guava/blob/fac8339c87815fb7deca0cf01d61a5146355723f/guava-tests/test/com/google/common/collect/ImmutableListTest java#L127\nThat way  we run the test only once internally \nThe downside is that we don\ t run it externally at all :(\nI should fix the external problem for the existing tests  but that\ s a problem for another CL (CL 157852006  pending) \n\nAnother alternative is to move all our suites out of the main test files \nThis is possibly a good idea  anyway  as it\ s a prerequisite for running the suites under GWT and Android  which would have caught problems like [ But again  one thing at a time   \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157861023\n  
1275,     Upgrade Truth to 0 33 \n\nThis fixes some GWT failures (and  once I submit CL 157827695  non-GWT failures) that result from calling assertThat(doubleArray) isEqualTo(   )  which was forbidden under 0 31 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157860829\n  
1276,     Increase timeout \n\nI just tried running the GWT tests because I expected them to fail from [ They unexpectedly passed because  [WARNING  Forked JVM has been killed on time-out after 21600 seconds  is non-fatal :(\n\nWith this change  the expected tests fail (as do some others  for reasons that I\ ll address in other CLs) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157829988\n  
1277,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157798760\n  
1278,     PredecessorsFunction  SuccessorsFunction: remove @GoogleInternal annotation  now that we\ ve resolved the  what type should the method return?  question \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157642605\n  
1279,     Reorganize abstract HashFunction and Hasher implementations to simplify common hash and potentially prepare for exposing these skeletal implementations \n\nEffects on HashingProGuard:\n81130 bytes => 80229 bytes\n42 classes => 40 classes\n193 methods => 193 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157618945\n  
1280,     Fix @since tag \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157618843\n  
1281,     Fixes incorrectly-ordered arguments to method calls ([ \n\nThis change has been automatically generated by an Error Prone check that\ndetects incorrect argument ordering on calls to assertEquals-style methods  See\n[ \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157502059\n  
1282,     FluentFuture \n\nThis includes making AbstractFuture and immediate*Future be a FluentFuture (though we don t change the return type of immediate*Future to expose this) \n\nAPI Review docs: [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157499710\n  
1283,     Delete com google math Sample \n\nThis CL also migrates the last usage of it to Stats — it so happens that the last usage is in a subpackage of math  so I think it s okay to do it at the same time (especially as it s a safe local change that only affects unit tests) \n\nIt also removes a couple of references in the javadoc for the Quantiles benchmark algorithms class (which probably shouldn t have been in the open source version anyway  oops)  They don t really add value now \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157461412\n  
1284,     Avoid garbage allocation in simple hashBytes calls with Murmur3 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157146977\n  
1285,     Added some Unit Tests\n\nFixes #2825\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157145435\n  
1286,     Eliminate most holder classes from c g c hash Hashing  but still keep those constants lazily generated -- e g  moving the static constant to its own implementation class \n\nEffects on HashingProGuard:\n85448 bytes => 81130 bytes\n51 classes => 42 classes\n197 methods => 193 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157142790\n  
1287,     Start adding testing for ProGuard and allocation testing for common hash \n\nInitial HashingProGuard measurements:\n85448 bytes\n51 classes\n197 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157137394\n  
1288,     Change toMultiset() to accept    Function<? super T     > \n\nSee    com/google/guava/issues/2696#issuecomment-303642729\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157118306\n  
1289,     Update SNAPSHOT versions in README \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157114045\n  
1290,     Fixes incorrectly-ordered arguments to calls to assertEquals\n([ \nThis change has been automatically generated by an Error Prone check that\ndetects incorrect argument ordering on calls to assertEquals-style methods  See\n[ \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157061178\n  
1291,     common graph classes: clean up documentation  change Object references to generic type indicators where possible in the internal implementation classes (this was already done for the public APIs) \n\nRename internal  oppositeNode  to  adjacentNode  for consistency with the external API \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157050755\n  
1292,     Move UnsignedLongs static constants to a static class  to allow other UnsignedLongs methods to get inlined \n\nEffects on IntMathProGuard:\n55843 bytes => 55068 bytes\n8 classes => 7 classes\n51 methods => 50 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157039263\n  
1293,     Make initialization of Longs asciiDigits lazy so ProGuard can eliminate Longs entirely from its users \n\nEffects on IntMathProGuard:\n56435 bytes => 55843 bytes\n9 classes => 8 classes\n53 methods => 51 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157027975\n  
1294,     Start measuring DoubleMath s ProGuard retention  and optimize it by inlining some things: LongMath isPowerOfTwo  and DoubleUtils ONE_BITS \n\nEffects on DoubleMathProGuard:\n50619 bytes => 48800 bytes\n5 classes => 3 classes\n24 methods => 19 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157025614\n  
1295,     Update guava-gwt version to 23 0-SNAPSHOT; missed this last time since it isn t under current \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=157008161\n  
1296,     Apply \ @ForOverride\  to Converter doForward & Converter doBackward\n\nPending todo: clean up usage from method reference ( ::doForward  &  ::doBackward )\n\nTODO(jijiang): address TODO after CL submitted\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156992728\n  
1297,     Just admit that newConcurrentMap returns and will always return a ConcurrentHashMap \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156925490\n  
1298,     Reduce allocation in Iterators concat \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156923366\n  
1299,     Avoid reallocating a new unmodifiableSortedSet wrapper on every operation on Sets unmodifiableNavigableSet \n\n(While we re there: in the Java 8 version  forward the default methods correctly  since ForwardingSortedSet deliberately doesn t forward them )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156918009\n  
1300,     Update Guava versions to 23 0-SNAPSHOT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156901136\n  
1301,     Update main readme to describe the main and Android flavors of Guava  and how to depend on them \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156863289\n  
1302,     Inline some filtering logic  etc  into Sets views to reduce code retention and allocation of Predicate objects \n\nEffects on SetsProGuard:\n173261 bytes => 170929 bytes\n107 classes => 106 classes\n915 methods => 899 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156803771\n  
1303,     Reduce the number of different ranges TreeRangeMap attempts to test with; these were taking exorbitant amounts of time in Android tests \n\n(See e g  [  where testPutAll took over two minutes  and that wasn t the only TreeRangeMap method that took multiple minutes \n\nAfter this change  putAll takes 8 seconds   [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156761836\n  
1304,     Run StreamsTest and ComparatorsTest under GWT \n\nThis would have caught b/38304985 and also catches new b/38490623 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156761057\n  
1305,     common graph classes: mark types and methods as @GoogleInternal that are not yet ready for release in Guava 22 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156749408\n  
1306,     Add tests for Lists lastIndexOfImpl (Also removed one warning from ListsTest) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156569812\n  
1307,     Roll forward of [  going back to exactly the original semantics while we re at it \n\n*** Reason for rollback ***\n\nFixed the targets that were really broken deep down  but we also reverted the slight semantics change that exposed the issues   I think the changed semantics were fine  but I don t think it s important enough to make a fuss \n\nNew effects on IterablesProGuard:\n95045 bytes => 94834 bytes\n53 classes => 52 classes\n265 methods => 263 methods\n\nAdditionally  added IterablesAllocationTest  which measures the actual effects of this optimization \n\nWalking concat(collection1  collection2) changed from requiring 13 allocations to requiring 8 \nWalking concat(concat(c1  c2)  concat(c3  c4)) changed from requiring 41 allocations to requiring 22 \n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 156329581 \n\n*** Reason for rollback ***\n\nBroke some tests   (I think they re doing something that should ve failed and this just revealed the error  but I m still attempting to discern what really happened )\n\n*** Original change description ***\n\nSimplify Iterators concat and optimize it for minimizing allocations  while preserving the smart behavior for nested Iterators concats \n\nEffects on IterablesProGuard:\n97559 bytes => 95471 bytes\n57 classes => 54 class   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156493253\n  
1308,     Omit PackageSanityTests from open-source Guava \n\nIt shouldn t be run in the same JVM as other tests because some of its method call set the interrupt bit \n(Alternatively  we could run those tests in a separate thread  but it hasn t seemed worth bothering )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156485709\n  
1309,     Automated g4 rollback of changelist 156329581 \n\n*** Reason for rollback ***\n\nBroke some tests   (I think they re doing something that should ve failed and this just revealed the error  but I m still attempting to discern what really happened )\n\n*** Original change description ***\n\nSimplify Iterators concat and optimize it for minimizing allocations  while preserving the smart behavior for nested Iterators concats \n\nEffects on IterablesProGuard:\n97559 bytes => 95471 bytes\n57 classes => 54 classes\n277 methods => 266 methods\n\nEffects on IteratorsProGuard:\n76937 bytes => 75212 bytes\n35 classes => 32 classes\n175 methods => 170 methods\n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156342594\n  
1310,     Reduce allocations in filtered views of  Sorted Navigable Set \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156338232\n  
1311,     Simplify Iterators concat and optimize it for minimizing allocations  while preserving the smart behavior for nested Iterators concats \n\nEffects on IterablesProGuard:\n97559 bytes => 95471 bytes\n57 classes => 54 classes\n277 methods => 266 methods\n\nEffects on IteratorsProGuard:\n76937 bytes => 75212 bytes\n35 classes => 32 classes\n175 methods => 170 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156329581\n  
1312,     Avoid having a static Joiner constant in Predicates   This typically eliminates both Joiner and the Predicates class itself  which was prevented from being optimized away by the presence of the static constant \n\nEffects on Collections2ProGuard:\n85910 bytes => 84265 bytes\n36 classes => 34 classes\n199 methods => 194 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156325587\n  
1313,     Stick to IntMath in Collections2 orderedPermutations size \n\nEffects on Collections2ProGuard:\n89279 bytes => 85910 bytes\n38 classes => 36 classes\n202 methods => 199 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156321417\n  
1314,     Correct a slightly inaccurate claim in the javadoc of the equals() methods on Stats and PairedStats  If strictfp is not in force  we can t actually guarantee getting equal statistics even for the same values in the same order \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156289223\n  
1315,     Avoid allocation and references to Predicates where possible in Collections2 \n\nEffects on Collections2ProGuard:\n91872 bytes => 89279 bytes\n40 classes => 38 classes\n216 methods => 202 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156243603\n  
1316,     Use ImmutableList sortedCopyOf instead of Ordering immutableSortedCopy \n\nEffects on Collections2ProGuard:\n92924 bytes => 91872 bytes\n41 classes => 40 classes\n221 methods => 216 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156237339\n  
1317,     Don t build a full Multiset in the Java 7 branch of Collections2 isPermutation  just using the underlying hash table structure \n\nEffects on Collections2ProGuard:\n108614 bytes => 92924 bytes\n54 classes => 41 classes\n350 methods => 221 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=156230331\n  
1318,     Explain/advertise CacheLoader from() better \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155904679\n  
1319,     Remove some misleading interruption docs:\n- Our interruption behavior doesn\ t fully match the JDK  My point in CL 23833126 was that both AbstractFuture and the JDK implementations throw if the thread was interrupted *before* the get() call as well as during  But:\n  - We differ from the JDK in a different area: We throw InterruptedException even if the get() call wouldn\ t have had to wait  (We see this as a feature: Since the task is apparently cancelled anyway  we might as well take this opportunity to abort )\n  - My phrasing may be equally misleading in the other direction: It may suggest that get() throws if the thread was *ever* interrupted in the past  More generally  by changing the phrasing at all  I may be suggesting a change in behavior where none exists \n- InterruptedException support is probably in some sense  optional   but there\ s no reason to call it out as specifically optional for AbstractFuture \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155865732\n  
1320,     Merge some classes in Iterables that don t really need to be split \n\nEffects on IterablesProGuard:\n94711 bytes => 92873 bytes\n57 classes => 54 classes\n277 methods => 268 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155648417\n  
1321,     Fix link to whitespace comparison doc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155643809\n  
1322,     Pull LOWER_BOUND_FN and UPPER_BOUND_FN into their own classes  instead of having them be static constants in Range itself   They aren t actually used in Range itself  just in other APIs using Range \n\nEffects on RangeProGuard:\n59099 bytes => 58681 bytes\n13 classes => 12 classes\n112 methods => 110 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155566243\n  
1323,     Avoid generating separate classes for the two BoundType enum instances \n\nEffects on RangeProGuard:\n59989 bytes => 59099 bytes\n15 classes => 13 classes\n114 methods => 112 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155549621\n  
1324,     Avoid referencing ContiguousSet directly in Range  instead just using SortedSet   This actually constitutes a general optimization  since we make it O(1) for all SortedSets and not just ContiguousSets  but it also makes a big difference to ProGuard:\n\n91546 bytes => 59989 bytes\n42 classes => 15 classes\n328 methods => 114 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155545589\n  
1325,     Manual fix-ups before we google-java-format \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155501761\n  
1326,     Fix buggy advice \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155427010\n  
1327,     Added tests for Lists IndexOfImpl\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155423645\n  
1328,     Reduce use of Predicates in Maps filter variants \n\nEffects on MapsProGuard:\n218054 bytes => 217126 bytes\n170 classes => 164 classes\n1300 methods => 1276 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155421460\n  
1329,     EnumCountHashMap is an implementation detail  not a public type \n\n(Hopefully cherrypickable into 22 0  since I saw this in the API diffs )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155396203\n  
1330,     Correcting a JavaDoc in Immutable Primitive arrays \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155256441\n  
1331,     Implementation of Sets combinations(Set  int)  approved by [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155231438\n  
1332,     new MapMaker() makeMap() just returns a ConcurrentHashMap   Inline that logic into Maps newConcurrentMap() \n\nEffects on MapsProGuard:\n262307 bytes => 218054 bytes\n211 classes => 170 classes\n1532 methods => 1300 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155228371\n  
1333,     Migrate Executor-less Futures callback methods to the ones with an Executor  while applying MoreExecutors directExecutor() for identical behavior \n\nFor more information  see [ \n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155174706\n  
1334,     asList() views are serializable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155126187\n  
1335,     Some simple changes to Iterators to reduce ProGuard retention and allocation \n\nEffects on ProGuard retention:\n79026 bytes => 75115 bytes\n41 classes => 35 classes\n196 methods => 175 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155124112\n  
1336,     Fix    com/google/guava/issues/2804 issues with nested Iterators concats on partially advanced iterators \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155111980\n  
1337,     Make toImmutableList() and toImmutableSet() collectors singletons \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=155071697\n  
1338,     Added test for addAllImpl \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154976838\n  
1339,     Rewrite ImmutableSortedMultiset Builder on Android to avoid using TreeMultiset  which allocates a ton of objects and also uses a ton of code \n\nThe strategy we use is a little modified from how we changed ImmutableSortedMap: on every expansion  we sort and deduplicate the elements that have been added to the builder \n\n(modest reduction in bytes allocated  significant reduction in objects allocated  significant constant factor increase)\n\nEffects on ImmutableSortedMultisetProGuard:\n142818 bytes => 110301 bytes\n86 classes => 58 classes\n702 methods => 498 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154893300\n  
1340,     Make BloomFilter concurrent \n\nOriginal pull request by Val Markovic at    com/google/guava/pull/2761\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154881019\n  
1341,     ImmutableDoubleArray\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154872857\n  
1342,     Partial rollback of changelist 151480429 \n\n*** Reason for rollback ***\n\nI ve fixed our GWT test generator (CL 154831023)  so it no longer chokes on these tests \n\n*** Original change description ***\n\nPartial rollback of changelist 150805495 \n\nSpecifically  I m rolling back only the server/java8 changes \n\n*** Reason for rollback ***\n\nNeed to investigate Bazel heap regression \n\n*** Original change description ***\n\nDo not copy in Immutable List Set SortedSet  construction \n\nWe re still avoiding the potential for a memory leak with the forceCopy part  but we want to avoid the garbage created by slicing the array down to exactly the right size \n\nWe don t ever copy in ImmutableList  since we can o   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154857178\n  
1343,     Make it clearer that Cut doesn t implement equals without hashCode\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154785879\n  
1344,     Remove HostAndPort getHostText() (scheduled for removal in 22 0) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154734786\n  
1345,     Fix ImmutableLongArray hashCode()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154726612\n  
1346,     Add a script for setting the version for guava and guava-android \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154560774\n  
1347,     Fix deploy_snapshot for android snapshots\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154542742\n  
1348,     Run mvn on the android branch without running `cd`  so that we don t mess up base the directory\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154453557\n  
1349,     Provide specializations of MapMakerInternalMap s internal data structures  notably InternalEntry  for the case where the value type is a singleton  This is Interners s exact use case \n\nThis CL is a pure refactor that results in a strict memory win  No public apis are changed \n\nI am very happy that my design made this refactor very easy :)\n\nThere are the following Interners use cases:\n- Interners#newStrongInterner\n- Interners#newWeakInterner\nand the following relevant jvm flags:\n- -XX:+UseCompressedOops\n- -XX:-UseCompressedOops\n\nOf the four combinations of interner type and pointer size  the most important use case is probably Interners#newWeakInterner  since users tend to put lots of stuff in weak interners  On a 64-bit jvm with +UseCompressedOops  there s actually no win because of the way the current object alignment for WeakKeyStrongValueEntry works out  However  the current object alignment works out unfavorably on a jvm with -UseCompressedOops  and so this CL gives a sizeable win there \n\nThe CL also gives very large savings for Interners#newStrongInterner  but I reckon that use case isn t too important \n\nSummary of results:\n-------------------\nStrongInternerImpl w/ +UseCompressedOops --> 19 8% savings\nWeakInternerImpl w/ +UseCompressedOops --> 0 00016% savings\nStrongInternerImpl w/ -UseCompressedOops --> 12 3% savings\nWeakInternerImpl w/ -UseCompressedOops --> 9 0%% savings\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154450505\n  
1350,     Test the android branch (in TAP for [   and Travis for Github)\n\nIn the process  fix and simplify the javadoc configuration  I mistakenly removed some of it in the Android branch when I worked the poms  thinking that what was for jdk8 was really jdk7+\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154444654\n  
1351,     Assorted javadoc fixes in com google common\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154343275\n  
1352,     Link java7 branch javadocs to javase/7  not 8\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154329415\n  
1353,     Move poms to the proper directory \nMOE got confused because it ran against Ron s CL but with a config file from before Ron s CL \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154302373\n  
1354,     Add pom xml files for Guava-Android\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154302373\n  
1355,     Move ClassInSubpackage    actually into a subpackage  This looks to have not been moved correctly when forking common reflect\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154299216\n  
1356,     Make Immutable*ArrayTests have javac7-compatible generics \n\nThis was done to ImmutableIntArrayTest in [  but that was interleaved with the creation of ImmutableLongArray \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154296466\n  
1357,     Fork common reflect and remove a few tests from the java7 branch that don t work on Android\n\nSee discussion in [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154222595\n  
1358,     Make some changes to generics so the Android branch can compile externally with -source 7 -target 7\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154211832\n  
1359,     ImmutableLongArray  Regenerated the int-based classes using it as the model \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154059885\n  
1360,     Don t release SourceSinkFactories that are java7-specific (i e  use java nio)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154055354\n  
1361,     Make some generics explicit that the maven-compiler-plugin can t figure our when compiling for Java 7\n\nEach change was reflected in the mainline  or has already deviated from the mainline  so this shouldn t incur any additional forking costs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154053375\n  
1362,     Remove stale comment about Java 8 APIs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=154051124\n  
1363,     Add missing common primitives to Guava for Android \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153841285\n  
1364,     Add  X-DNS-Prefetch-Control  header \n\nDocumentation:\n   mozilla org/en-US/docs/Web/HTTP/Headers/X-DNS-Prefetch-Control\n   chromium org/developers/design-documents/dns-prefetching#TOC-DNS-Prefetch-Control\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153835731\n  
1365,     Begin exporting sources of Guava for Android \n\npom xml files to come \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153757913\n  
1366,     Fix typo in Javadoc link \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153581577\n  
1367,     Document that we don t forward calls to default methods  Multimap edition \n(followup to CL 124370400 now that Multimap has a default method)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153481169\n  
1368,     Update misleading comment in RegularImmutableList; it is used even for lists\nwith 1 item now that SingletonImmutableList has been removed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153458644\n  
1369,     Test coverage for equals()  With this  coverage for the file looks good enough to me \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153379567\n  
1370,     Remove docs that specify which equals() element we return \n\nFixes    com/google/guava/pull/2052\n(only 2 years later!)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153209013\n  
1371,     Internal @AndroidIncompatible docs:\n- It s not for prod APIs \n- It works through a special MOE config \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153202986\n  
1372,     For APIs that require Java 7  strip them from Guava-Android entirely  not just from our internal copy of Guava-Android \nThis prevents a third-party library from using them  only to fail when used with our internal Guava-Android \n\nTo accomplish that  we use @GoogleInternal instead of @AndroidIncompatible  but we use it only on the Java 7 branch \n\nFor context  see my belated comment on CL 138100073 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153200690\n  
1373,     Skip GWT tests by default \n\nThe fact that they  hang  (i e   take ~8 hours) confused the reporter of    com/q/43040327/28465  and I suspect he\ s not the first \nPlus  I mean  who wants to wait 8 hours? :)\nI\ ve updated our release docs to explicitly turn on GWT tests during the main test command \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153193781\n  
1374,     Remove  nullness  suppressions added in CL 152864813 \nThey are only necessary when running the Checker Framework  and we don\ t \n(And they won\ t be necessary for the Checker Framework  either  after its\  upgraded )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=153184952\n  
1375,     ImmutableIntArray asList() stream() is now  efficiently splittable  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152991064\n  
1376,     Add Java8-specific methods: copyOf(Stream)  Builder addAll(Stream)  stream()  forEach(IntConsumer)  (w/lowasser)\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152986681\n  
1377,     ImmutableIntArray is serializable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152969076\n  
1378,     Advertise Comparators least/greatest collectors from TopKSelector \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152967871\n  
1379,     First round of adding tests for the Lists *Impl package-private methods \n\nThis is checking that the overall structure is reasonable; if so  tests for the other methods will be added \n\nI also included some minor cleanups in Lists \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152960063\n  
1380,     Implement ancient TODO to use EqualsTester  Use reserialize() with it to prove that absent() still equals itself after a round-trip \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152890149\n  
1381,     Assign otherwise ignored Future return values to local variables  This change is part of [  which will eventually make it an error to ignore the return value of methods that return Future \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152864813\n  
1382,     Reformatting \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152863915\n  
1383,     minor enhancements to serializingexecutor\n\n* only acquire/release the lock once per call to execute (inline the top half\n  of startQueueWorker into callers)  the bytecode of startQueueWorker is long\n  enough that it probably doesn t get inlined and thus things like hotspot lock\n  coarsening probably aren t trigerring \n* only allocate the queue worker once  and repurpose it for the lock\n\nThis leads to a small bit of redundancy in execute/executeFirst/suspend  however  due to the needed control flow in the caller  i am not sure if it is very avoidable   Also  it does allow us to avoid some redundant checks (e g  no need to check queue size if we just added an item)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152848537\n  
1384,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152750256\n  
1385,     Make smear() produce accurate results under GWT  hopefully \nThis appears to solve the problem reported in HashMultiset under GWT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152710159\n  
1386,     Remove Spliterator characteristic SIZED after a trySplit operation in CollectSpliterators flatMap \n\nFixes    com/google/guava/issues/2781\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152710038\n  
1387,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152694884\n  
1388,     Harmonize NPE @throws clauses on FluentIterable toXX() methods and friends\n\nI noticed that toSet() and toList() each lacked an @throws NullPointerException for the case where an element of the FluentIterable is null; this seems like an omission given that their sorted cousins have the @throws  as do the various other toXX() methods that return an ImmutableXX as well as index() and uniqueIndex() which are similar in spirit \n\nI also standardized toMap()  index()  and uniqueIndex() to each use the same format for listing the reasons they can throw NPE (null element  or null function result)   Note that these can also throw NPE on a null parameter to the method  but that is not documented per convention since the package has @ParametersAreNonnullByDefault \n\nFinally  I updated Multimaps index() and Ordering immutableSortedCopy() to adopt this convention as well (since they\ re passed through to by the FluentIterable methods)  and I tidied up some wording choices (e g  consistently using   @code null    and using  element of this iterable  instead of just  element  when the method takes parameters) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152552349\n  
1389,     Implement CharSink writeLines(Stream[  String ) \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152418428\n  
1390,     Updated the main interfaces javadoc snippet to reflect the new interfaces  Successor Predecessor Graph \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152356712\n  
1391,     Eliminate references to ImmutableAsList in ImmutableMultiset \n\nImmutableMultiset  for once  doesn t have a specialized asList()  so this does the right thing on both server side and Android: on Java 7  it returns a normal ImmutableList  on server-side it returns an ImmutableList whose contains() method delegates to the backing ImmutableMultiset \n\nEffects on ImmutableMultisetProGuard ([ \n80423 bytes => 78313 bytes\n34 classes => 31 classes\n257 methods => 240 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152304598\n  
1392,     isFinite: use `&&` to avoid a ShortCircuitBoolean warning; if there really is benefit to `&` that could be benchmarked/justified in the future \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152292580\n  
1393,     BloomFilter approximateElementCount(): rename from its temporary name \npursuant to API Review \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152264799\n  
1394,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152256148\n  
1395,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152247926\n  
1396,     Fix for Android crash caused by mis-aligned call of Unsafe getLong on a 4-byte aligned field offset \n\nAny use of Unsafe to read java arrays of  another type  is dangerous\nand unsupported (by Unsafe)  so fall back to safe java more\nconservatively  unless we are running 64-bit java with 8-byte aligned\nbyte array offset   This leaves the Big Java Server optimizations in place \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152215885\n  
1397,     Automated g4 rollback of changelist 151734490 \n\n*** Reason for rollback ***\n\nRoll forward  since we ve concluded this is not the culprit \n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 151172294 \n\n*** Reason for rollback ***\n\nSuspected cause of b/36638818 \n\n*** Original change description ***\n\nRewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset  taking ruthless advantage of its property that it retains insertion order in the absence of removals \n\nThis avoids reimplementing yet another hash table  saves some memory -- not as much as an open-addressed table would ve  but some  and still keeps us to O(1) total objects --   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152060057\n  
1398,     Test ImmutableIntArray under GWT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=152035299\n  
1399,     Change switch() to if() \n(followup to CL 151849104)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151865662\n  
1400,     Remove the singleton list optimization from ImmutableList sublist\n\nsince SingletonImmutableList no longer exists there is no benefit and this will\ncause singleton sublists to consume more memory than non singleton sublists\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151861509\n  
1401,     Make ImmutableIntArray @GwtCompatible\n\n * changed one int[  clone() into Arrays copyOf(int[ )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151853310\n  
1402,     Fixed bugs in test in that 1 >> x - 1 is actually 1 >> (x - 1) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151850976\n  
1403,     Automated g4 rollback of changelist 151172294 \n\n*** Reason for rollback ***\n\nSuspected cause of b/36638818 \n\n*** Original change description ***\n\nRewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset  taking ruthless advantage of its property that it retains insertion order in the absence of removals \n\nThis avoids reimplementing yet another hash table  saves some memory -- not as much as an open-addressed table would ve  but some  and still keeps us to O(1) total objects -- and saves us some code   Of course  we ve still got lots of code size reduction work to do on HashMultiset  now  but even so this still represents   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151734490\n  
1404,     Add @since and a comment \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151611541\n  
1405,     Methods that take an edge as parameter now take type E instead of Object \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151584791\n  
1406,     Methods that take a node as parameter now take type N instead of Object \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151580804\n  
1407,     ImmutableIntArray initial version \n\nNext steps:\n- serializable\n- gwt  android\n- add java8-specific methods\n- adopt\n- clone to Immutable Long Double Array after it seems to stabilize\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151519883\n  
1408,     Partial rollback of changelist 150805495 \n\nSpecifically  I m rolling back only the server/java8 changes \n\n*** Reason for rollback ***\n\nNeed to investigate Bazel heap regression \n\n*** Original change description ***\n\nDo not copy in Immutable List Set SortedSet  construction \n\nWe re still avoiding the potential for a memory leak with the forceCopy part  but we want to avoid the garbage created by slicing the array down to exactly the right size \n\nWe don t ever copy in ImmutableList  since we can only be too big by a factor of 3/2   In Immutable Set SortedSet   we copy if  after deduplication  the number of unique elements is < array length / 2   (And we rebuild the hash table in IS if it s more than twice as   \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151480429\n  
1409,     Eliminate the static Ordering constant in Multisets  moving it into its own class  to avoid the various problems with static initialization \n\nEffects on ImmutableMultisetProGuard ([ \n86386 bytes => 84832 bytes\n39 classes => 37 classes\n284 methods => 277 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151478858\n  
1410,     Avoid referencing any Ordering methods except natural() in ImmutableSortedSet \n\nThis is a behavior change  but kevinb@ and I agreed that this shouldn t really be detectable -- the handful of users of SortedSet comparator() don t seem likely to actually do much introspecting on the comparator  and the comparator is equivalent  just no longer an Ordering \n\nEffects on ImmutableSortedSetProGuard:\n81478 bytes => 78328 bytes\n32 classes => 29 classes\n307 methods => 287 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151474930\n  
1411,     Renamed  Successor Predecessor Graph to  Successors Predecessors Function \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151421328\n  
1412,     Added more memory benchmarks for collections \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151394873\n  
1413,     (w/lowasser) Streams forEachPair()\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151386365\n  
1414,     Add test in MultisetForEachEntryTester to test multiple copies of a single element \n\nFollow-up to [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151364503\n  
1415,     Close <ul> element \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151362187\n  
1416,     Inline containment logic in Iterators removeAll  allowing ImmutableMultiset to avoid retaining Predicates \n\nEffects on ImmutableMultisetProGuard ([ \n104688 bytes => 102704 bytes\n56 classes => 53 classes\n427 methods => 418 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151351199\n  
1417,     Add BloomFilter approximateCount() \n\nFixes #2755\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151333352\n  
1418,     Apply  @ForOverride  to AbstractService doStart & AbstractService doStop\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151328608\n  
1419,     Deprecate Executor-less Futures methods upon incoming migration completion to the ones with a MoreExecutors directExecutor()  discouraging internal use  while keeping the open-source version in Guava intact  They and scheduled to be deleted in April 2018 \n\nFor more information  see [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151237280\n  
1420,     Rewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset  taking ruthless advantage of its property that it retains insertion order in the absence of removals \n\nThis avoids reimplementing yet another hash table  saves some memory -- not as much as an open-addressed table would ve  but some  and still keeps us to O(1) total objects -- and saves us some code   Of course  we ve still got lots of code size reduction work to do on HashMultiset  now  but even so this still represents a modest transitive retention reduction for ImmutableMultiset \n\nEffects on ImmutableMultisetProGuard:\n110419 bytes => 104143 bytes\n64 classes => 56 classes\n456 methods => 426 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151172294\n  
1421,     Update docs for AbstractFuture subclassers to recommend afterDone() \nAlso  fix a typo in BloomFilter \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151133593\n  
1422,     Deprecated the old TimeLimiter callWithTimeout() method now that its replacements have been fully implemented \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151123087\n  
1423,     Deprecated SimpleTimeLimiter s constructors and added a static factory method \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151072768\n  
1424,     Fix embarrassing forEachEntry bug in ImmutableSortedMultiset \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151063670\n  
1425,     Implemented new TimeLimiter methods in SimpleTimeLimiter \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151010922\n  
1426,     make NullPointerTester isNullable() use @CheckForNull too\n\ni e   returns true if a parameter is annotated with @Nullable\n*or* @CheckForNull  Both annotations mean  this can be null  \n\nFixes #2731\n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=151005288\n  
1427,     Reorder methods so we (a) aren t splitting overloads anymore and (b) have them in the order: stream starters  stream combiners  stream chainers  and terminal ops \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150915090\n  
1428,     Implemented new TimeLimiter methods in FakeTimeLimiter \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150902171\n  
1429,     Moved TimeLimiter s class-level documentation to newProxy() and replaced it with more general info \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150894315\n  
1430,     Added TimeLimiter  call run WithTimeout() methods with improved exception behavior and more readable method signature \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150889844\n  
1431,     Do not copy in Immutable List Set SortedSet  construction \n\nWe re still avoiding the potential for a memory leak with the forceCopy part  but we want to avoid the garbage created by slicing the array down to exactly the right size \n\nWe don t ever copy in ImmutableList  since we can only be too big by a factor of 3/2   In Immutable Set SortedSet   we copy if  after deduplication  the number of unique elements is < array length / 2   (And we rebuild the hash table in IS if it s more than twice as big as it should be) \n\nThe memory cost here isn t big  but Android especially doesn t like garbage objects  and garbage isn t super fun on server side either \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150805495\n  
1432,     Add @FunctionalInterface to AsyncCallable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150771279\n  
1433,     Removed  Successor Predecessor Graph nodes() \n\nReasons:\n- The new interfaces are functional\n- It will be easier converting existing uses of TreeTraverser and similar classes \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150682183\n  
1434,     Added tests to cover some forEach code in Iterables  (Which means these tests should not be in the Java7 version) \n\nAlso some minor cleanups\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150666890\n  
1435,     Fix LocalCache compute deadlock issue  also added unittests \n\n   com/google/guava/issues/2743\n\nwe need to hold the lock when calling compute  the rest of the calls\nlike removeEntry need to hold the lock too \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150363160\n  
1436,     Preconditions java: reword the section on Performance to clarify what aspects of performance are actually expected to be an issue in practice \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150348211\n  
1437,     Fix external bug #2751 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150327872\n  
1438,     Added a test for copyOf when the collection is an EnumSet   In the process generalized the abstract classes so that we could call copy of \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150220273\n  
1439,     Apply  @ForOverride  annotation to Equivalence doEquivalent & doHash \n\n[ \n\n   com/google/guava/issues/1966\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150196929\n  
1440,     Added a test that improves test coverage of the nested class MapViewOfValuesAsSingletonSets (via asMultimap) \n\nAlso cleans up ImmutableMap to match Java 7 patterns of constructors (and thus show the test coverage improvements) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=150104082\n  
1441,     Added missing tests to ImmutableList sortedCopyOf() (using natural order) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149945041\n  
1442,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149768016\n  
1443,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149651971\n  
1444,     Make MediaType charset() a little cheaper \n\nSince we only care if there are zero or 1 elements we don t need to construct an ImmutableSet at all and so can avoid copying the list \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149602676\n  
1445,     It was senseless to hold these nifty collectors back from Guava (sorry) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149416083\n  
1446,     Reimplement inCompletionOrder() (courtesy lukes@) \n(Also  make it available under GWT  but possibly I could have done that without reimplementing?)\n\nThis is likely to be slightly faster than what we had before  In particular  it means that a directExectur() listener for one output Future can t slow the completion of other output Futures (except to the extent that all Futures-based code is likely to be an interconnected graph in which any directExector() listener can slow any other :)) \nIt also means that we complete each output Future in the same thread as the input Future completed  This shouldn t matter to most users  but it could affect people who think they know better than the directExecutor() warnings  (And the resulting improvement to parallelism is one reason for the likely performance improvement noted above  along with the removal of SerializingExecutor s locking )\nIt might also increase the chances that the output Futures actually complete in the same order as the input Futures (though there will always be the potential for races)  Users shouldn t care  but it seems like a nice property to provide to the extent that we can easily enough \n\nIf nothing else  it removes the last remaining usage of SerializingExecutor from Guava  which may be nice for minimizing dex size for Android \nThat said  many Android users probably do want SerializingExecutor for their own use  But currently we don t expose ours publicly  so they have their own copy  and they could end up with both ours and theirs -- at least if they use both inCompletionOrder and their own copy  which probably no one does currently  But the long-term solution may be to expose SerializingExecutor publicly  in which case they d be back to having only one version  and the only people who would benefit would be those who use inCompletionOrder but don t otherwise use SerializingExecutor \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149415170\n  
1447,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149330334\n  
1448,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149315090\n  
1449,     Use the valuesSpliterator() method we added to AbstractTable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149314468\n  
1450,     Add CharSource forEachLine(Consumer) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149307373\n  
1451,     Among the Futures methods that run user callbacks  those that don t take an Executor will be deleted   This CL migrates them to the counterparts that take MoreExecutors directExecutor() as such Executor in the parameter list  exactly the way that the old method works \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149302150\n  
1452,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149297072\n  
1453,     Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\nFor constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149152061\n  
1454,     Fix bad reference to BufferedReader#readLine by adding parens so it doesn t somehow assume it should refer to the package-private version of the method that takes a boolean argument \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149139876\n  
1455,     Add CharSource lines() \n\nAlso make a variety of javadoc tweaks and improvements \n\nFixes    com/google/guava/issues/2693 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149122377\n  
1456,     Add javadoc of common ways to obtain a non-public-constructable objects \n\nMapSplitter -> Splitter withKeyValueSeparator\nCache/LoadingCache -> CacheBuilder\nInterner -> Interners\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149053355\n  
1457,     Add Stopwatch elapsed() which returns a java time Duration\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149027680\n  
1458,     google-java-format Stopwatch (and test) to minimize diffs introduced by\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=149000993\n  
1459,     For constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\nThis change replaces constants (static final CONSTNAT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148919704\n  
1460,     For constant field declarations  you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)  This communicates to your callers important semantic guarantees \n\nThis change replaces constants (static final CONSTNAT_CASE) declaration type which use the general collection interface (e g  List) with an immutable type (e g  ImmutableList) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148879760\n  
1461,     Deprecate and better document many hash functions \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148661971\n  
1462,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148458296\n  
1463,     Support an optional label when enqueuing listener events  to make using method references more palatable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148397429\n  
1464,     Inline the logic of Ordering onKeys() to get from a key comparator to an entry comparator with only one class instead of more \n\nEffects on ImmutableSortedMapProGuard ([ \n60598 bytes => 57291 bytes\n53 classes => 49 classes\n432 methods => 420 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148394436\n  
1465,     Switch ImmutableSortedMap over to using AbstractMap SimpleImmutableEntry instead of ImmutableMapEntry \n\nEffects on ImmutableSortedMapProGuard ([ \n62724 bytes => 60598 bytes\n55 classes => 53 classes\n444 methods => 432 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148390060\n  
1466,     Avoid reference to PeekingIterator in RegularImmutableSortedSet containsAll  inlining that logic instead of pulling in the extra class \n\nEffects on ImmutableSortedSetProGuard ([ \n40823 bytes => 39358 bytes\n34 classes => 32 classes\n314 methods => 307 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148374768\n  
1467,     Annotate some flaky slow tests as @AndroidIncompatible \n\nThese tests appear to have become flakier around CL 148237028 -- probably mostly because it removed @AndroidIncompatible from one method but perhaps because of the changes in implementations of some of the other methods  (I even wonder if changes to the implementations of some tests are causing other tests to fail  given the number of new failures I saw in unrelated tests in my  After  run  Or maybe that\ s just an artifact of small sample size )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148352222\n  
1468,     Make ListenerCallQueue functionality available outside the concurrent package internally  Changes:\n- encapsulate list of listeners functionality\n- rename Callback interface to Event and make it lambda-compatible\n- move  methodName  to just be toString() on Event  which also defers/avoids unnecessary allocations\n- remove @GuardedBy suppression\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148347379\n  
1469,     Make the tests for Quantiles use up-to-date Truth technology  My main motiviation here is to stop using hasValuesWithin  which is going away  While I m at it  let s start using comparingValuesUsing for the Map assertions to avoid the unpleasant loop  and inline the helpers  which aren t really useful now that we ve done that \n\nI also fixed testPercentiles_index_computeInPlace() which was being slow (about 100s on my machine  and it was annotated as incompatible with android just for slowness) because it was doing a lot of stuff which wasn t really necessary \n\nI also added a jsr305 dep which blaze complained was missing if I didn t :-/ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148237028\n  
1470,     ByteProcessor does not operate on lines \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148235758\n  
1471,     Make classpath scans over circular symlinks predictable \n\nFixes #2649\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148224109\n  
1472,     Allow Funnel<? super T> for BloomFilter readFrom()\n\nThis brings readFrom() in line with create() (as well as the protected constructor that readFrom() delegates to) in accepting Funnel<? super T>   The existing Funnel<T> requirement is needlessly strict  given that a Funnel<T> is a consumer of T so any Funnel<? super T> should be acceptable \n\nRelaxing this allows  for example  reconstructing a BloomFilter<String> that uses a Funnel<CharSequence> such as Funnels unencodedCharsFunnel() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148122926\n  
1473,     Rename Multiset collector parameter names to be consistent with other collector factories \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148116285\n  
1474,     Instead of using the SortedLists utility class  go straight to Collections binarySearch in the implementation of RegularImmutableSortedSet \n\nSortedLists is a much nicer API  but it carries a decent chunk of code weight that we can lose without a problem  and we don t need its fancier features of dealing with multiple elements comparing as equal -- the point of a SortedSet is that we don t have to worry about those \n\nEffects on ImmutableSortedSetProGuard ([ \n50271 bytes => 43278 bytes\n44 classes => 34 classes\n360 methods => 334 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148112233\n  
1475,     Explain the segmented nature of maximumWeight better \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=148103826\n  
1476,     Fixed signature compatibility issue \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147899708\n  
1477,      *Graph  Network  java: change documentation of allowsSelfLoops() and allowsParallelEdges() to correct the type of exception that is thrown when one attempts to modify them in a way that the constraint prevents (e g   adding a self-loop to a graph that doesn t allow them) \n\nTechnically this is a contract change  but in fact the implementations were already throwing IllegalArgumentException  so in practice anyone that was depending on that documentation being accurate (by  say  catching UnsupportedOperationException) was already in trouble  so IMO we should just make this change without trying to worry about backward compatibility; this is just a bug fix \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147933338\n  
1478,     Some rework of Equivalence javadocs  Remove a message that no longer applies there \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147899167\n  
1479,     Added SuccessorGraph/PredecessorGraph \n\nThis CL has no tests because it only adds interfaces without any testable logic \n\nNext steps:\n- Update the paragraphs starting with  There are three main interfaces  (added TODO\ s)\n- Update the wiki\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147874873\n  
1480,     Suppress @GuardedBy errors \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147862530\n  
1481,     Push down definition of ImmutableSortedSet createDescendingSet to subclasses  so we don t get DescendingImmutableSortedSet unless we actually have an ImmutableSortedSet implementation that uses it \n\nEffects on ImmutableSortedSetProGuard ([ \n47637 bytes => 46304 bytes\n41 classes => 40 classes\n337 methods => 318 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147783833\n  
1482,     Fix  SecretSpecKey  typo in Hashing javadoc\n\nThe actual JDK class is named SecretKeySpec  not SecretSpecKey   Arguably this is confusing since it does implement Key  but then again it also implements KeySpec   \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147632964\n  
1483,     Fix cases where GWT sometimes couldn t infer which types are serialized \nAnd finally revise our (internal-only) tests to catch these problems and the problem fixed by CL 147488537 \n\nAs far as I can tell  our old tests passed only because of a GWT bug \nThe fixes are mostly to create dummy superclasses with dummy fields  as usual \nThe exception is ImmutableSortedSet  For some reason  the fix there is to move the existing dummy fields to RegularImmutableSortedSet  My completely wild guess (without investigating at all) is that GWT ignores the ImmutableSortedSet fields because ImmutableSortedSet_CustomFieldSerializer doesn t have the expected methods  This guess makes no sense  especially because GWT appears to be fine with the *Comparator<E>* field on ImmutableSortedSet  just not the E field  Basically nothing makes any sense  but I m just happy it works now \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147607863\n  
1484,     Push down the implementation of createValues() into the subclasses of ImmutableMap \n\nThe only implementations of ImmutableMap that actually use the ImmutableMapValues class are the handful of views like DenseImmutableTable rowMap()   Pushing down the implementation of createValues() allows us to avoid getting ImmutableMapValues or its dependencies for users just using ImmutableMap directly \n\nEffects on ImmutableMapProGuard ([ \n30202 bytes => 27737 bytes\n26 classes => 23 classes\n180 methods => 167 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147515235\n  
1485,     Eliminate references to ObjectArrays in the closure of ImmutableSet and ImmutableMap \n\nProGuard cannot currently eliminate any class that has a static constant that isn t a primitive or String  and ObjectArrays has the EMPTY_ARRAY static constant   Instead  we ll directly inline empty object array singletons anywhere we need them; Object[0 s will still be singletons  we ll just have different singletons in different places \n\n[ \nEffects on ImmutableSetProGuard:\n23072 bytes => 22614 bytes\n17 classes => 16 classes\n140 methods => 140 methods (no change)\n\nEffects on ImmutableMapProGuard:\n30589 bytes => 30224 bytes\n27 classes => 26 classes\n180 methods => 180 methods (no change)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147491289\n  
1486,     Copied from cpovirk s CL 147393681 to submit while cpovirk is OOO \n\nFix GWT serialization broken by CL 146683890 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147488537\n  
1487,     Push down the implementation of ImmutableMap createKeySet() into its implementations  because ProGuard can t figure out how to eliminate createKeySet even when it s overridden in the only ImmutableMap implementation it knows of \n\nThis makes there be one and only implementation of key sets retained by ImmutableMap itself  RegularImmutableMap KeySet   There is no implementation change to the other map types  we just inline the createKeySet() method to those implementations \n\nEffects on ImmutableMapProGuard ([ \n32155 bytes => 30612 bytes\n29 classes => 27 classes\n190 methods => 180 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147408143\n  
1488,     Move the the static constant empty iterator to live in its implementation class  ArrayItr \n\nThis removes the only static constant field from c g c c Iterators  which allows ProGuard to eliminate it and move its methods to another common location   Additionally  if we don t reference emptyIterator() or forArray(   ) in future  we ll eliminate ArrayItr too \n\n[ \nEffects on ImmutableSetProGuard:\n23711 bytes => 23087 bytes\n18 classes => 17 classes\n143 methods => 140 methods\n\nEffects on ImmutableMapProGuard:\n32685 bytes => 32171 bytes\n30 classes => 29 classes\n192 methods => 190 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147359807\n  
1489,     Don t use ImmutableSet of() for the keySet of ImmutableMap of() \n\nThe keySet of the empty map will still be a singleton (since the empty map is a singleton and it caches keySet)  it ll just be a different singleton from ImmutableSet of()   This ensures that the only implementation of ImmutableSet retained by usages of ImmutableMap are its own keySet implementations \n\nEffects on ImmutableMapProGuard ([ 38966 bytes => 37886 bytes\n37 classes => 36 classes\n231 methods => 219 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=147078624\n  
1490,     Turn Iterators emptyModifiableIterator into an enum singleton instead of an anonymous inner class \n\nProGuard can t eliminate static fields  but it can recognize that the enum isn t referenced except by emptyModifiableIterator and eliminate it from classes that reference other methods in Iterators \n\nEffects on ImmutableMapProGuard: ([ 41126 bytes => 40551 bytes\n40 classes => 39 classes\n247 methods => 243 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146953456\n  
1491,     Don t use a Predicate in Iterators contains   This saves an embarrassing number of classes \n\nEffects on ImmutableMapProGuard: ([ 46280 bytes => 41212 bytes\n48 classes => 40 classes\n273 methods => 247 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146929047\n  
1492,     Automated g4 rollback of changelist 146841288 \n\n*** Reason for rollback ***\n\nSome people appear to have been depending on specific hashCode behavior?\n\n*** Original change description ***\n\nEliminate SingletonImmutableSet  partially folding it into RegularImmutableSet \n\nWe skip allocating an all-up hash table for a singleton set  but we share implementation with the hash-based RegularImmutableSet \n\n[ Effects on ImmutableSetProGuard:\n26650 bytes => 24854 bytes\n21 classes => 19 classes\n165 methods => 149 methods\n\nEffects on ImmutableMapProGuard:\n50050 bytes => 50176 bytes  no other changes \n(I infer that SingletonImmutableSet wasn    \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146925879\n  
1493,     Update version guarantee for our tests\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146917804\n  
1494,     Eliminate SingletonImmutableSet  partially folding it into RegularImmutableSet \n\nWe skip allocating an all-up hash table for a singleton set  but we share implementation with the hash-based RegularImmutableSet \n\n[ Effects on ImmutableSetProGuard:\n26650 bytes => 24854 bytes\n21 classes => 19 classes\n165 methods => 149 methods\n\nEffects on ImmutableMapProGuard:\n50050 bytes => 50176 bytes  no other changes \n(I infer that SingletonImmutableSet wasn t actually in the post-ProGuard transitive closure from ImmutableMap and that we just added a little bit of code to a utility method that was )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146841288\n  
1495,     Eliminate references to Joiner in toString static utilities  inlining the joining logic explicitly \n\nEffects on ImmutableMapProGuard ([ \n50061 bytes => 46299 bytes\n53 classes => 48 classes\n293 methods => 273 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146838293\n  
1496,     Add emptiesFirst/Last to Comparators for easily comparing java util Optional\nvalues \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146801689\n  
1497,     Delete SingletonImmutableList \n\nWhile SingletonImmutableList allocates one fewer object  this isn\ t worth it on Android   This has no effect on the MemoryTester bounds for ImmutableList itself \n\nCurrently we are deleting it in all environments  but if we liked we could delete it only in Android; its deletion does increase the MemoryTester bounds for e g  ImmutableListMultimap  whose  sparse  configuration generates a singleton ImmutableList per key \n\n[ Effects on ImmutableSetProGuard:\n27697 bytes => 26650\n22 classes => 21 classes\n173 methods => 165 methods\n\nEffects on ImmutableMapProGuard:\n51766 bytes => 50061 bytes\n55 classes => 53 classes\n305 methods => 293 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146683890\n  
1498,     Don t have a special class for Iterators unmodifiableListIterator()  instead using Iterators forArray(ObjectArrays EMPTY_ARRAY) \n\n[ Effects on ImmutableSetProGuard:\n28632 bytes => 27697 bytes\n24 classes => 22 classes\n180 methods => 173 methods\n\nEffects on ImmutableMapProGuard:\n52700 bytes => 51766 bytes\n57 classes => 55 classes\n312 methods => 305 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146675737\n  
1499,     Have ImmutableMaps for zero and one element use RegularImmutableMap instead of  Empty Singleton ImmutableBiMap  avoiding pulling in ImmutableBiMap and all its dependencies \n\nThe increase in the size of singleton maps does require an increase in the constant overhead in MemoryTester for immutable multimaps and tables  but a constant overhead isn t worth that much concern   (We might come back to work on these when we start trying to improve multimap and table size  though )\n\nEffects on ImmutableMapProGuard: ([ 59284 bytes => 52710 bytes\n64 classes => 57 classes\n363 methods => 312 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146528004\n  
1500,     Optimize ContiguousSet asList() for the three built-in DiscreteDomains \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146513267\n  
1501,     Avoid mentioning ImmutableSortedMap in the ImmutableMap implementation \n\nI m not sure why ProGuard couldn t strip this out already  but ImmutableSortedMap and several of *its* dependencies were getting retained when ProGuard stripped ImmutableMap  and this fixes it \n\nEffects on ImmutableMapProGuard: ([ 87770 bytes => 59284 bytes\n93 classes => 64 classes\n601 methods => 363 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146505055\n  
1502,     Make RegularImmutableSet extend ImmutableSet directly  not ImmutableSet Indexed \n\nThe only side effects are that the iterator is slightly more efficient (less indirection)  and importing ImmutableSet by itself doesn t import helpers for ImmutableSet views of other collections   A minor gain  but they add up \n\nEffects on ImmutableSetProGuard: ([ 31249 bytes => 30128 bytes\n28 classes => 26 classes\n198 methods => 192 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146473318\n  
1503,     Avoid mentioning ImmutableSortedSet in the ImmutableSet implementation \n\nI m not sure why ProGuard couldn t strip this out already  but ImmutableSortedSet and several of *its* dependencies were getting retained when ProGuard stripped ImmutableSet  and this fixes it \n\nEffects on ImmutableSetProGuard: ([ 37524 bytes => 31249 bytes\n34 classes => 28 classes\n263 methods => 198 methods\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146427279\n  
1504,     Added a new tests case that proves RateLimiter works even for very small numbers \n\nFixes #2594\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146144129\n  
1505,     Make annotation dependencies non-optional \n\nFixes    com/google/guava/issues/2721\n\nDiscussion: [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146128219\n  
1506,     Deprecate several redundant methods in Files  cross-reference functionality\nadded to JDK s Files class (hence not in Guava s MoreFiles) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146069308\n  
1507,     Test that all MediaType constants are unique \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146033356\n  
1508,     Allow ignoring Constructors in NullPointerTester\n\nFixes #2728\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=146030420\n  
1509,     Among the Futures methods that run user callbacks  those that don t take an Executor will be deleted   This CL migrates them to the counterparts that take MoreExecutors directExecutor() as such Executor in the parameter list  exactly the way that the old method works \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145602579\n  
1510,     Make TearDownStack thread-safe\n\nI encountered an issue with some code that starts several servers in\nthe background (in parallel)  adding a TearDown to stop each one after\nthe test is finished  Fixing that issue in the calling code itself\nboils down to basically one of two choices: a  synchronzing my access\nto the tear down stack; or b  restructuring the code so the teardown\nhappens on the main thread  Solution  a  is incomplete  as I can\ t\nprotect the access to the stack from code at large (only my code)  and\nsolution  b  leads to a less-readable  more convuluted code  that\ndelays the registering of the teardown to much after it would\nnaturally go (and lead to incomplete tear downs  if the test were to\nstop before the moment where the tear down is registered) \n\nMaking TearDownStack thread-safe seems like a much better option \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145446978\n  
1511,     Among the Futures methods that run user callbacks  those that don t take an Executor will be deleted   This CL migrates them to the counterparts that take MoreExecutors directExecutor() as such Executor in the parameter list  exactly the way that the old method works \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145349663\n  
1512,     Among the Futures methods that run user callbacks  those that don t take an Executor will be deleted   This CL migrates them to the counterparts that take MoreExecutors directExecutor() as such Executor in the parameter list  exactly the way that the old method works \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145333015\n  
1513,     Add the method Network edgeConnecting() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145123448\n  
1514,     Link to    com/google/guava/wiki/Why-we-deprecated-Throwables propagate\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145114919\n  
1515,     Change NullPointerTester to work for Stream parameters \n\nThe default-generated proxy for Stream instance will throw ClassCastException if the method/constructor calls collect()  which is common \n\nThe reason for the exception is that stream collect() return R  which the proxy has no idea  that is a List<T>  or ImmutableList<T> or whatever  That type is unknown because of erasure \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145114911\n  
1516,     Support interface static methods and default methods for NullPointerTester \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145114472\n  
1517,     Add the methods Graph hasEdge() and ValueGraph hasEdge()  Also add some test coverage for ValueGraph asGraph() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=145109107\n  
1518,     Shuffling from internal-only change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144996795\n  
1519,     Finally add Tables synchronizedTable  which has seemed to continually fall through the cracks   \n\nFixes    com/google/guava/issues/1297\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144981241\n  
1520,     Introduce a package-private BaseGraph interface and AbstractBaseGraph class  This allows us to remove a large amount of code duplication  It also gives us a small reduction in constant overhead for Graphs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144926159\n  
1521,     Now that ValueGraph no longer extends Graph  change all the common graph interfaces to handle equals()/hashCode()  normally   Deprecate Graphs equivalent() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144788407\n  
1522,     Make it so ValueGraph no longer extends Graph  Instead  provide a ValueGraph asGraph() method  In a followup change  this will allow us to handle equals()/hashCode()  normally  and delete the Graphs equivalent() methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144787090\n  
1523,     Update README for Guava 21 0 final and set snapshot version to 22 0-SNAPSHOT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144370430\n  
1524,     To fix external bug    com/google/guava/issues/2152 \n\nThis code follows the article emcmanus mentioned:\n   oracle com/blogs/kohsuke/2007/04/25/how-convert-javaneturl-javaiofile\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144362958\n  
1525,     Fix  Feburary  typo \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144227696\n  
1526,     Expose collectors for Multisets accepting per-element counts\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144222270\n  
1527,     Deprecate CheckedFuture \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=144206874\n  
1528,     Mention rc2 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143787902\n  
1529,     Annotate AbstractFuture with @DoNotMock \n\nIdeally we d annotate ListenableFuture itself  but I don t want to go down the road of fixing or suppressing all existing violations right now \nI m doing even AbstractFuture only because it will soon become a subclass of FluentFuture  which we want to be @DoNotMock \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143777863\n  
1530,     Better phrasing of Throwables getCauseAs() documentation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143599868\n  
1531,     Add @since to RangeMap putCoalescing() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143594298\n  
1532,     Add MoreFiles equal() - Files/MoreFiles feature parity \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143587980\n  
1533,     Add RangeMap putCoalescing() in order to support coalesced RangeMap entries \n\n   com/google/guava/issues/2665\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143507326\n  
1534,     Add example anti-pattern to getCauseAs() Javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143498116\n  
1535,     Apply `assertTrue(obj instanceof Class)` -> `assertThat(obj) isInstanceOf(Class class)` refactorings to c g common \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143496490\n  
1536,     Avoid isNotInstanceOf()  which can wrongly succeed under -XdisableClassMetadata \n\n   com/google/truth/issues/198\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143483705\n  
1537,     Mark RemovalListener and Weigher as Java 8 FunctionalInterfaces\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143461582\n  
1538,     Tweaks from shuffling of internal hash functions \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143402767\n  
1539,     Fix javadoc errors reported by IntelliJ IDEA \n\nFixes #2699\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143271383\n  
1540,     Remove more unused imports \n\nFixes #2698\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143270574\n  
1541,     Remove unused imports \n\nFixes #2697\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143186380\n  
1542,     Release @Immutable annotations in common graph \nWe ve already released them in other packages \n\nThis uses some of the previously unused imports that would be removed by #2697 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143185270\n  
1543,     Make Maps toImmutableEnumMap use j u f Function \n\nFixes    com/google/guava/issues/2694\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143120572\n  
1544,     Update Guava README to mention 21 0-rc1 \n\nAlso update headers to ATX style \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143120092\n  
1545,     Stop qualifying references to local types \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143116418\n  
1546,     Consistently use java util function interfaces in arguments to Collector factories (   com/google/guava/issues/2694)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143114856\n  
1547,     Add a TODO; inadvertently update some copyright dates \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143076499\n  
1548,     Add a toString() to the Runnable created by Futures addCallback   While not typically exposed to the user  the Runnable may still be seen in logging and/or debugging output \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=143062925\n  
1549,     Specify that EvictingQueue is FIFO \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142690159\n  
1550,     Fix occasional hangs \nAlso  include LinkedBlockingDeque in our public tests  since we ve required Java 6 for a long time \nPlus  use static imports  Stopwatch  and Truth  and reformat \n\nThe cause of the hang is that sometimes we cancel the producer task before it has even begun to execute  Part of the correct fix is probably to wait longer than 10ms  as martinrb has taught me     But for the moment  let s at least wait for the task to start before potentially cancelling it \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142670289\n  
1551,     Implement Throwables getCauseAs(Throwable  Class)  which safely casts a Throwable s cause and ensures that the exception thrown on a bad cast has the original exception as its cause \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142602139\n  
1552,     Add a custom gwt serializer for the Range object\n\nFixes #2687\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142559536\n  
1553,     Fix 2 javadoc typos introduced by [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142488570\n  
1554,     Inline two vestigial single-use helper methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142479573\n  
1555,     Update Truth dependency to 0 31 and add truth-java8-extension dependency for guava-gwt tests \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142186596\n  
1556,     Annotate Table and Multiset with @CompatibleWith\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142164308\n  
1557,     Improve EqualsTester doc\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142156023\n  
1558,     I think this recommendation will go over better  (It happens to be identical to\nwhat we already had on the java 7 branch )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=142039672\n  
1559,     guava-testlib: Cover Collections synchronizedNavigable Map Set () \n\nThe tests only cover regular Navigable Map Set  behavior for the\ncase of wrapping a Tree Map Set   They do not test the fact that\nthe wrapper is synchronized \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141996774\n  
1560,     Add  Sets Maps  toImmutableEnum Set Map  Collectors \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141945702\n  
1561,     Add a  constrainToRange  method to constrain a value to a closed interval \n\nEquivalent to Boost\ s clamp function [1  and numpy clip [2  \n\nMath min(Math max(x  min)  max) is much more difficult to read and error-prone \n\n[1     boost org/doc/libs/1_53_0/boost/algorithm/clamp hpp\n\n[2     scipy org/doc/numpy/reference/generated/numpy clip html\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141944536\n  
1562,     Fix typos in UnsignedInts docs\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141936357\n  
1563,     Add UnsignedInts  checked saturated Cast \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141789650\n  
1564,     Make ImmutableMultiset elementSet() return ImmutableSet \n\nFixes    com/google/guava/issues/1050\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141785980\n  
1565,     Remove unneeded JSNI from Objects equals\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141768910\n  
1566,     Warn about upcoming deprecation of Multimap static factory methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141596365\n  
1567,     Add a disclaimer to Files/MoreFiles getFileExtension that clarifies that it is unable to account for filesystem-specific quirks and instead only uses the information available in the File/Path API \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141517772\n  
1568,     Stop scaring Cache asMap() users away from new Java 8 methods  which Louis made\nwork really well long ago \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141456649\n  
1569,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141369309\n  
1570,     Add set-arithmetic operations to ImmutableRangeSet  as discussed in\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141337779\n  
1571,     Annotate Graph and Network with @CompatibleWith as appropriate \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141267927\n  
1572,     Annotate Multimap with @CompatibleWith annotations to enforce type-compatibility with keys and values as appropriate \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141203238\n  
1573,     Remove non-interface methods from Multimap implementations \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141187597\n  
1574,     Remove non-interface methods from TreeBasedTable implementations \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141187443\n  
1575,     Add Reflection annotation to j c g common util concurrent AbstractFuture for j2objc compile  in order to strip all other transpiled java reflections \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=141119133\n  
1576,     Add toJavaUtil instance method  which is handier and also doesn t have to be\nmarked @Nullable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=140905873\n  
1577,     Fix iteration+removal bug for reference-equal objects\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=140849556\n  
1578,     Adds @RetainedWith to ImmutableSet asList to prevent the reference cycle from\ncausing leaks in Objective-C \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=140738410\n  
1579,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=140673519\n  
1580,     Fail more clearly when escapers run out of buffer space \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=140383461\n  
1581,     Fix two bugs in MinMaxPriorityQueue (introduced in [  First is a bug in removeAt(int) that sometimes causes the wrong element to be removed  Second is a bug that sometimes causes certain elements to be iterated over more than once if elements were removed during iteration \n\nReported externally at    com/google/guava/issues/2658\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=140382230\n  
1582,     Add Booleans  true false First \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139831226\n  
1583,     Remove methods scheduled for deletion in Guava 21 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139609575\n  
1584,     fix typo\n\n by  ->  be  (3x)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139481101\n  
1585,     Add more docs on the relationship between c g c c view methods and Streams \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139396264\n  
1586,     Add flatteningToMultimap collectors \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139360343\n  
1587,     Migrate last users of ForwardingTestCase and delete it \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139349868\n  
1588,     Use ForwardingWrapperTest to simplify last round of ForwardingTestCase subclasses \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139318347\n  
1589,     Use ForwardingWrapperTester to simplify a few more Forwarding*Test \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139121126\n  
1590,     Override Multiset size() to clarify add additional javadocs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=139078681\n  
1591,     Suppress warning for modification of immutable collections\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138927630\n  
1592,     Use GWT s provided Arrays copyOf and Arrays copyOfRange where\npossible\n\nFixes #2635\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138921292\n  
1593,     Document and deprecate mutations on SetView  which already documents its unmodifiability  as suggested by cushon@ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138920681\n  
1594,     Reflect Navigable* support in GWT in TreeMultimap \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138910015\n  
1595,     Use ForwardingWrapperTester in Forwarding*MultimapTest \n\nForwardingObjectTester is a convenient thin wrapper around ForwardingWrapperTester  But it uses mockito and lives in common/util/concurrent  so not used here \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138905486\n  
1596,     Include java lang Lang from java util Util \nThis is necessary now that our java util contains classes that use java lang InterruptedException \n\nIn short:\n\nBefore:\n<module>\n <super-source path= super />\n</module>\n\nAfter:\n<module>\n <super-source path= super />\n <inherits name= java lang Lang />\n</module>\n\nFixes    com/google/guava/issues/2638\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138904012\n  
1597,     Add @Beta to the ImmutableTable collectors \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138675494\n  
1598,     Add mutable Table collector to Tables  including a version with a merge function to match Collectors toMap and ImmutableMap toImmutableMap \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138673160\n  
1599,     Add a value-merging collector for ImmutableTable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138670433\n  
1600,     Add mapWithIndex overloads mapping IntStream -> Stream  etc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138666464\n  
1601,     Improve the Spliterator of Multimap values-for-key collections \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138553300\n  
1602,     Make some AbstractMapBasedMultimap helper methods static   (As part of the process  make Sets unmodifiableNavigableSet GWT-compatible  as NavigableSet is no longer an issue )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138550340\n  
1603,     Fix some typos in guava-[gwt testlib tests /*\n\nFixes #2630\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138514647\n  
1604,     Automated g4 rollback of changelist 56995761 \n\n*** Reason for rollback ***\n\nUse Preconditions in primitives checkedCast methods  as [  renders the change in [  unnecessary \n\n*** Original change description ***\n\nDon t use Preconditions checkArgument in primitives checkedCast methods  as it boxes for what should be a very fast method \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138467875\n  
1605,     Warn about overriding Converter reverse() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138458677\n  
1606,     Update link to GWT docs that died with Google Code \n\nThe best substitute I ve found is a commit diff email \n\nThe copy of the page carried over from Google Code to Github doesn t include the relevant information  and it didn t come with history:\n   com/gwtproject/old_google_code_wiki/commits/master/ResourceOracle wiki md\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138424761\n  
1607,     Defer overlap checking in ImmutableRange Set Map  Builder to the build() call  which matches the behavior in ImmutableMap Builder and allows significantly faster handling of the case where ranges are inserted in predictable order \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138415685\n  
1608,     Go back to Collections sort() instead of List sort() to eliminate difference\nbetween forks  since the former just delegates to the latter anyway \n\nBasically rolls back the part of [ that wasn t already\ncorrected \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138232524\n  
1609,     Note that Guava for Java 8 is coming \n\nI guess we\ ll update this again -- possibly along with the Github tagline (    for Java 6+ )  editable (only?) straight from the Github UI -- when we actually release 21 0 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138213797\n  
1610,     Open source Comparators \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138197361\n  
1611,     Make SloppyTearDown logger private \n\nFixes #2624\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138190467\n  
1612,     Automated g4 rollback of changelist 138114495 \n\n*** Reason for rollback ***\n\nThese type inference errors seem to be fixed by using a newer JDK8 version \n\n*** Original change description ***\n\nFix JDK8 compilation errors in non-test code \n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138189338\n  
1613,     Continue uploading snapshots now that we re building only with JDK 8 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138189249\n  
1614,     Remove a redundant statement in TreeRangeMap remove() \n\nFixes #2167\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138184740\n  
1615,     Use a newer JDK 8 for travis build\n\nThe travis docker image uses JDK 8u31  which is ancient and has type\ninference bugs that are fixed at head  This change causes it to use\n8u111 instead:\n\nFixes #2625\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138184449\n  
1616,     Fix ForwardingMultimapTest\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138184166\n  
1617,     Fix links to javadoc io for Maven Javadoc Plugin\n\nFixes #2479\n\nFixes #2628\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138184010\n  
1618,     Simplify some Table implementation details \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138116540\n  
1619,     Add Multimaps toMultimap(keyFunction  valueFunction  multimapSupplier) collector \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138115283\n  
1620,     Fix JDK8 compilation errors in non-test code \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138114495\n  
1621,     Change travis config to not try to build on JDK7 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138107654\n  
1622,     Release Java 8 changes to Guava \n\n(Note: This will break the public Guava GWT tests  We ll come back to fix them )\n\nFixes    com/google/guava/issues/2585     com/google/guava/issues/2479     com/google/guava/issues/2029  and probably various other issues :)\n\nAlso relevant:    com/google/guava/issues/2591\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138100073\n  
1623,     Removes unnecessary (and unsafe) @Weak annotation that is causing crashes on\niOS \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=138077107\n  
1624,     Fixes a reference cycle between WeakValueEntry instances and their\nWeakValueReference \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137989327\n  
1625,     fix warning on eclipse\n\nFixes #2621\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137977709\n  
1626,     Fix typo in comments\n\nFixes #2166\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137968297\n  
1627,     Remove emulated=true   The class no longer needs to be emulated since there s nothing GwtIncompatible in it \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137960451\n  
1628,     Add @since for Interners Builder \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137843495\n  
1629,     Make Ints  to from ByteArray GWT compatible \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137840276\n  
1630,     Fix some typos in guava/*\n\nFixes #2618\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137827424\n  
1631,     Introduce InternerBuilder  which allows tweaking of the concurrency level of the to-be-built Interner \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137825551\n  
1632,     fixes serialization errors when serializing a\nRegularImmutableAsList\n\nthe issue occur when ImmutableList is included in gwt s serialization\npolicy and ImmutableSet not and a list created by ImmutableSet asList\nneeds to be serialized\n\nFixes #2614\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137724815\n  
1633,     Fix #1190\n\nBefore this fix  splitting a single character input string with a\nSplitter onPattern instance created with a zero-width regex pattern \nwould have caused the input string to be dropped from the output \nresulting in an empty iterable being returned rather than a single\nelement one \n\nThis fix ensures that the input passes through untouched \n\nFor example  whereas before in this code snippet  \ words\  would have\nbeen initialized as an empty iterable   \n\n   String string =  f ;\n   Iterable<String> words =\n       Splitter on(Pattern compile( \\\\b )) split(string);\n   // words is empty!\n\nFixes #2615  #2086\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137723825\n  
1634,     Add ImmutableList sortedCopyOf \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137571509\n  
1635,     Fix the extra space that shows up in ValueGraph s javadoc summary \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137559829\n  
1636,     Fix a couple things in README \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137558251\n  
1637,     Fix link to Release 20\n\nAlso remove the no-longer-needed link to v20-rc1   
1638,     Update README to point to 20 0 as the latest release and update version numbers to 21 0-SNAPSHOT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137552649\n  
1639,     Migrate from deprecated Guava APIs to replacements:\n Objects firstNonNull() -> MoreObjects firstNonNull()\n Objects ToStringHelper -> MoreObjects ToStringHelper\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137538755\n  
1640,     Mark Utf8 as emulated  since it has @GwtIncompatible methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137532973\n  
1641,     Make Forwarding[Listenable Future GwtCompatible \n\nThey were marked with GwtIncompatible  but I do not think there s any reason to apply such a restriction \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137515337\n  
1642,     Make AtomicLongMap serializable \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137404691\n  
1643,     Fix links to murmurhash3 cpp\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137404185\n  
1644,     Start on documenting Iterables to explain the connection to Streams \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137220845\n  
1645,     Shuffling from internal-only change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137207933\n  
1646,     Lint Javadoc for HTML and syntax  and fix errors \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137191293\n  
1647,     Fix bad Javadoc tags \n\nFixes #2610\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137186740\n  
1648,     Update to GWT 2 8 0\n\nFixes #2608\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137183524\n  
1649,     Shuffling from internal-only change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137176212\n  
1650,     Graph[Builder  java et al : fix representation of angle brackets in Javadoc   *sigh*\n\ncgdecker@  we will need to cherrypick this one too for the v20 release   :(\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137161301\n  
1651,     Move ForwardingBlockingDeque into c g c u c \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137071571\n  
1652,     Update to GWT 2 8 0-rc3 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137051387\n  
1653,     graphs_explained md: file being added to facilitate reviewed changes to    com/google/guava/wiki/GraphsExplained \n\nIncludes updates to the top-level graph type class Javadoc also \n\nReplaces  iff  with  if  throughout common graph  to address GitHub issue #2605 \n\ncgdecker@  this is going to need to be cherrypicked for the final release \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=137047779\n  
1654,     Make Charsets ISO_8859_1 GwtCompatible \nAlso run google-java-format over the files \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136764462\n  
1655,     Add JDK Deque implementations to Queue tests \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136755080\n  
1656,     Stop stripping @LazyInit annotations \nThe annotation has been released in public Error Prone \n\n(roll forward of CL 136160211  which was rolled back in CL 136171136 because of a problem fixed in CL 136350404)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136589788\n  
1657,     Update Public Suffix List \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136425689\n  
1658,     Prepare for Public Suffic List update  which removes the  !  rule that this file was using \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136359859\n  
1659,     Fixes a documentation error regarding the return type/value\n\nFixes #2604  #2599\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136357364\n  
1660,     Shuffling from internal-only change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136201585\n  
1661,     Optimize allocation in nonCancellationPropagating\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136179307\n  
1662,     Add @SafeVarargs to some methods Lists \n\nI m also removing a couple of casts from Ordering<Comparable> to raw Ordering which were causing warnings and didn t seem necessary \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=136176905\n  
1663,     Update the Guava tagline on github \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135846196\n  
1664,     Allow MemoizingSupplier to release its delegate to the GC where possible \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135792840\n  
1665,     Add new RangeSet methods accepting Iterable<Range<C>> \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135723032\n  
1666,     Suppress an intentional type mismatch \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135710548\n  
1667,     As currently defined  the hashcode of every unordered EndpointPair which is a self-loop is zero! This is particularly not good for graphs with many self-loops  such as the transitive closure graph  where every node has an incident self-loop  Change hash to use + instead of ^ (this still preserves the property of symmetry  even with overflow) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135539805\n  
1668,     Bring over some API documentation from [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135513835\n  
1669,     Remove Iterator tester infrastructure  which has never had any real tests \n(We do perform IteratorTester-based testing through CollectionIteratorTester and ListListIteratorTester )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135501101\n  
1670,     Shuffling from internal-only change \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135500956\n  
1671,     Updated Guava README to mention Guava 20 0-rc1 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135492007\n  
1672,     Add @since 20 0 to BaseEncoding canDecode \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135482744\n  
1673,     Delete constraints APIs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135480846\n  
1674,     Rewrite MutableClassToInstanceMap to avoid using ConstrainedMap \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135408484\n  
1675,     Skip GWT tests on Travis \nThey re just too slow \n\nFixes    com/google/guava/issues/2568 once and for all  maybe \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135244971\n  
1676,     No need to disable doclint completely  Disabling high-level\nHTML issues should be enough\n\nFixes #2523\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135244931\n  
1677,     usage of American English spelling for  license \n\nFixes #2590\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135244865\n  
1678,     Remove stale links from  Learn about Guava   
1679,     Update removal target for APIs that should be removed in 20 0 but which actually won t be \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135140462\n  
1680,     Update Mockito version to 2 1 0\n\nFixes #2588\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135139422\n  
1681,     Fix typo in ValueGraphBuilder \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135057781\n  
1682,     Fix particularly unfortunate typo in ValueGraph javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=135011464\n  
1683,     Migrate users from HostAndPort getHostText() to HostAndPort getHost() \nThese methods behave identically  but the former name is deprecated \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134844363\n  
1684,     Implement edgeValue() via edgeValueOrDefault() instead of vice versa  For edgeValue() this is the same efficiency  but makes edgeValueOrDefault() perform fewer hash lookups \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134820696\n  
1685,     Remove ancient `@Beta` annotations  making these APIs  final  \n(They can still be removed via 2-year deprecation cycle )\nAlso touched up a bit of javadoc here and there \n\nHonestly  which exact libraries I chose to debeta in this CL are somewhat\nrandom (though leaning toward older things) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134817353\n  
1686,     Replace unnecessary StringBuilder calls with String concat\n\n(Roll forward the part of CL 134687034 that was rolled back in CL 134695981  The j2cl bug has been fixed )\n\nFixes #2582\n\nTested:\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134792990\n  
1687,     Remove CharacterFilter(BitSet) along with CharMatcher fromBitSet  which was introduced as a temporary helper for the migration \n(partial rollback of CL 132688558  plus some additional changes)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134770507\n  
1688,     Apply a handful of automated  returns @Nullable  suggestions \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134770298\n  
1689,     (partial) Automated g4 rollback of changelist 134687034 \n\n*** Reason for rollback ***\n\nj2cl bug?\n[ \n\n*** Original change description ***\n\nReplace unnecessary StringBuilder calls with String concat\n\nFixes #2582\n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134695981\n  
1690,     Remove reference to a deprecated method\n\nFixes #2580\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134689299\n  
1691,     Remove unused imports\n\nFixes #2583\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134687038\n  
1692,     Replace unnecessary StringBuilder calls with String concat\n\nFixes #2582\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134687034\n  
1693,     Apply IntelliJ-suggested language feature migrations \n\nAll code which initializes an IOException with a cause exception now uses the appropriate constructor (which was introduced in Java 6)  rather than initCause  Since Guava now depends on Java 6  this is a safe change to make \n\nFixes #2581\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134684204\n  
1694,     Remove redundant String format call\n\nFixes #2584\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134682786\n  
1695,     Change some javadoc to reference node U and V in the context of connectivity (to be consistent with methods on EndpointPair) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134464648\n  
1696,     Use an anonymous class for AbstractGraph edges() This was changed recently ([  because of some planned changes we ended up going a different direction with  so now I think it makes more sense inlined \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134453666\n  
1697,     Update Mockito version to 2 1 0-RC 1\n\nFixes #2567\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134425972\n  
1698,     Tweak Network edgesConnecting() javadoc so people don t think it returns a path of edges \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134419709\n  
1699,     Add paragraph to javadoc for Network edgesConnecting() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134408815\n  
1700,     Add edgeValueOrDefault() method to ValueGraph interface  and remove Map-returning edgeValues() for now  This CL effectively rolls back [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134341213\n  
1701,     Assorted cleanup of cancellation:\n- Eliminate our overrides of interruptTask() (other than one in a test of interruptTask()) \n- Make cancel() final under GWT \n- Simplify a few tests \n- Add or improve boilerplate comments about visibility of fields \n\nWe will likely not be able to make cancel() final in general (even if it weren t for our backward-compatiblity guarantees)  thanks to certain usages \nI had hoped that maybe we could in FluentFuture  I suppose that we still could  since we ll offer FluentFuture from(ListenableFuture)  and anyone who needs to override cancel() could override it in the delegate \n\n   com/google/guava/issues/1905\n   com/google/guava/issues/2075\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134216985\n  
1702,     Javadoc improvement(?) pass to Function/Functions  To be continued \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134125361\n  
1703,     Increase more timeouts to reduce test flakiness  as in CL 133260276 \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134086982\n  
1704,     Increase GWT timeout again \n\n   org/google/guava/jobs/161959726#L5083\n\nFixes    com/google/guava/issues/2568 again  hopefully \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134086956\n  
1705,     Fix comment that had gone out of date \n\nThis used to be true:\n[ \n\nBut it hasn t been for a long time:\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=134001575\n  
1706,     Remove a stray  the  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133962640\n  
1707,     Fix a typo \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133909277\n  
1708,     HostAndPort java: Deprecate getHostText() in favor of getHost() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133907054\n  
1709,     Update GWT deps to 2 8 0-rc2 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133854841\n  
1710,     Bump Travis timeout  It s still too low  e g  \n\n   org/google/guava/builds/161636738\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133848972\n  
1711,     If File exists throws an exception when constructing a ClassPath instance  ignore that entry in the classpath rather than propagating the exception \n\nFixes    com/google/guava/issues/2390 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133844760\n  
1712,     Put scary doc on hashString and less scary doc on hashUnencodedChars \n\nI ve based the doc on what we currently have in the Hasher class doc \n\nMotivation:\n[ [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133835490\n  
1713,     Remove the offset and size fields from RegularImmutableList \n\nThese seemed to be designed to create a faster sublist()  but our base\nimplementation of sublist seems likely to be quite similar in performance \nPlus by eliminating these fields we:\n\n* eliminate a preconditions check and extra field reads on each call to  get(int)\n* save 8 bytes for the fields (and maybe more for alignment on some platforms)\n\nThis design seems to be from the very first version of RegularImmutableList and there don t appear to be benchmarks covering ImmutableList get()   so this change is somewhat speculative   I m curious what your thoughts are \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133794845\n  
1714,     Use ArrayDeque and PriorityQueue under GWT (where they re newly available)  and provide synchronizedQueue  synchronizedDeque  and MinMaxPriorityQueue there \nThis also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally \n\nFixes #2545\n\n(Roll forward CL 131198531  which was rolled back in CL 131218608 because of a GWT bug that has since been fixed )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133714567\n  
1715,     Tell Travis to wait for Maven to finish \n\nCurrently  it times out:\n   org/google/guava/jobs/161103688\n\nFollowup to CL 133592825  which it turns out effectively converted a silent timeout (   com/google/guava/issues/2568) to a noisy one \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133612375\n  
1716,     Increase GWT test timeout \nApparently the GWT Maven plugin considers tests to have succeeded if they time out!\n\nFixes    com/google/guava/issues/2568\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133592825\n  
1717,     Small refactor of AbstractGraph edges() (move to inner class instead of anonymous class) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133384196\n  
1718,     Some cleanup in EndpointPairIterator \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133383011\n  
1719,     Delete MapConstraints notNull()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133379674\n  
1720,     Remove Constraint stuff from package-info \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133300878\n  
1721,     Some additional test coverage for undirected graphs + minor cleanup \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133282385\n  
1722,     Create TreeTraverser using() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133270986\n  
1723,     Delete MapConstraints constrainedMultimap()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133265325\n  
1724,     Make flaky test less likely to flake \nThe test currently fails if a thread stalls for more than 50s  I ve increased that to 9999ms \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133260276\n  
1725,     Fix another typo in javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133213816\n  
1726,     Fix typo in javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133213802\n  
1727,     Fix imports in all Guava packages \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133190481\n  
1728,     Delete MapConstraints constrainedSetMultimap() and constrainedSortedSetMultimap()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133180608\n  
1729,     Delete MapConstraints constrainedBiMap()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133175256\n  
1730,     Avoid using  i e   in first sentence of javadoc so the javadoc generator doesn\ t prematurely cut off the summary \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133166740\n  
1731,     Try to explain the Stream equivalent for filter(Class) a little better \n(And stop caring about the paltry benefits of `e -> e instanceof Foo` over `Foo class::isInstance` )\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133156773\n  
1732,     Update an @link in javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133143698\n  
1733,     Optimization of RegularImmutableMap \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133136645\n  
1734,     RegularImmutableSet extends ImmutableSet Indexed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133133513\n  
1735,     Improve docs on the FluentIterable-Stream connection (part 1) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133039225\n  
1736,     Add some test coverage for ElementOrder comparator() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133024805\n  
1737,     Prepare for Java 8 \n\nFallout:\n\n1  This temporarily breaks the j2objc cycle whitelist \nEventually we will provide different versions of it for Java 8 and pre-Java 8 \n\n2  This incidentally disables pluggable regex support \nEventually we will turn it back on for Java 8 and leave it off for Android \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132882204\n  
1738,     Fix typo \n\nFixes #2564\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=133001763\n  
1739,     Add another test for Iterables removeIf \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132998224\n  
1740,     Add the  vtt type used for HTML5 video subtitles \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132996392\n  
1741,     Increase test coverage for Networks  Add clarifying statement in javadoc for inEdges() and outEdges()  Modify the sanityCheck method to also check that a set is equals() to its ImmutableSet copy (this will also make sure the set doesn t have duplicate elements) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132956078\n  
1742,     Optimize Graphs transitiveClosure() to avoid copying to a List in the undirected case  Credit to jbduncan for the idea!\n\nNote: Change reachableNodes() from HashSet to LinkedHashSet since the latter has has slightly better iteration performance  and we re now iterating over the set repeatedly \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132927288\n  
1743,     Add note about replacements for BYTES constants  isFinite()  and hashCode() methods in Java 8 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132923187\n  
1744,     Warn Android users that default Stopwatch behavior may be bad for their health \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132910015\n  
1745,     Temporarily allow creation of a CharMatcher from a BitSet for internal purposes \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132688558\n  
1746,     Update Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132612873\n  
1747,     Use AssertionError for default case \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132476284\n  
1748,     Clean up some exceptions  In general  the pattern we try to follow is that if the user provides an invalid argument (e g  a node not in a graph)  we throw an IllegalStateException with a detailed error message  If it s an internal method and something is wrong on our end  we throw an IllegalStateException (and don t usually bother with an error message) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132447786\n  
1749,     Swap the nodes of an unordered EndpointPair to prevent callers from relying on the  ordering  of an unordered pair  Remove some superfluous  this   prefixes in ElementOrder (we generally only include  this   when assigning to a member variable) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132439705\n  
1750,     Add a test for passing ListenableFuture<?> instances to whenAllComplete \nIt doesn t always work as we d like :(\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132437172\n  
1751,     Run g4 fix on all the files in common graph \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132405519\n  
1752,     Move some javadoc out of the graph implementation classes (where we don t really expect people to be poking their noses)  Mention briefly in the graph interfaces \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132390285\n  
1753,     Avoid duplication of code in ImmutableValueGraph  Surprised I didn\ t realize this sooner :-/ the backing graph is a ValueGraph  so we can just call through  This also let\ s us do some other nice things:\n\n1) Get rid of the static methods in AbstractValueGraph \n2) Get rid of the static method in AbstractGraph  That was actually for a different reason (because of ForwardingObject)  but the only thing ForwardingObject did for us was forward the toString() method which we actually *don\ t* want \n3) Allow us to  cache  the edge value map  and have both the mutable and immutable implementations inherit that behavior  If someone is calling e g  graph edgeValues() get(   ) in a loop this should be a noticeable improvement \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132330742\n  
1754,     Rename parameter \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132286166\n  
1755,     Increase test coverage for common graph  Ensure properties besides just those covered by Graphs equivalent() are copied over as well \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132210161\n  
1756,     Some minor common graph tweaks to avoid equals() checks when unnecessary \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132168152\n  
1757,     Refer to Network references as  network  instead of  graph   Note that we\ ve already started doing this  but (as you can see) are fairly inconsistent with it \n\nRename GraphType to EdgeType in  Graph Network EquivalenceTest\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132130888\n  
1758,     Suppress some unused warnings in Eclipse \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132121576\n  
1759,     Eliminate checkNotNulls where they\ re clearly they\ re not necessary (i e  when we dereference the variable on the immediately following line)  Also remove the  variableName  message in some of them  particularly when they\ re internal variables \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132120234\n  
1760,     guava-testlib: Cover Collections unmodifiableSortedMap()\n\nTested: [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132105239\n  
1761,     guava-testlib: Cover checked  Sorted  Map Set \n\nTested: [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132091633\n  
1762,     guava-testlib: Cover Collections unmodifiableMap\n\nTested: [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132070464\n  
1763,     Add some missing @Nullable annotations \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132065891\n  
1764,     Specify in the javadoc the behavior of Graphs equivalent() when both parameters are null  Run g4 fix on the file \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132046690\n  
1765,     Refactor test utility methods to match graph mutation signatures \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=132005311\n  
1766,     Fix Eclipse warning (missing #) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131988897\n  
1767,     ValueGraph java: modify edgeValues() Javadoc to clarify that the behavior of get() if passed an EndpointPair not in the graph is different from the behavior of edgeValue() if passed two nodes not connected in the graph \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131985226\n  
1768,     Add ValueGraph edgeValues()  Remove ValueGraph edgeValueOrDefault(node  node) \n\nThere\ s a few nice things we get out of this  An easy way to address all the values in a ValueGraph as a single collection (edgeValues() values())  An easy way to get an edge value if you\ re dealing with  EndpointPair s  And if you\ re on Java 8+  Map has getOrDefault() plus some other nifty methods \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131959724\n  
1769,     Scope an (internal) return type to UnmodifiableIterator \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131915927\n  
1770,     Make the  constructor  methods EndpointPair ordered()/unordered() public (and make the ones accepting a Graph/Network package-private) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131908058\n  
1771,     Changes to common graph  Sorry for the churn  but after this things should be settled down for a while (and we\ ll be launching v20 soon!)  Changes include:\n\n-Revert the interface names back   BasicGraph  is now  Graph  (BasicGraph was probably a a poor choice)  and  Graph  is now  ValueGraph   The  node only  Graph interface is at the top of the interface hierarchy  and ValueGraph extends it \n-To facilitate the above  the various graph interfaces do *not* specify equality  and the default implementations use reference (identity) equality \n-Add static methods Graphs equivalent(   ) for users that want value-based equality \n-Rename Endpoints to EndpointPair  Rename nodeA()/nodeB() to nodeU()/nodeV() and expose isOrdered() \n\nMinor changes:\n\n-Undid the small refactor from [  since the original structure makes it easier for the Immutable classes to have the right hierarchy (i e  ImmutableValueGraph extends ImmutableGraph  ImmutableNetwork asGraph() is an ImmutableGraph) \n-Added an  isEquivalentTo  method to NetworkSubject (formerly GraphSubject) in labs  Eventually we should get around to having a single truth import for both Graphs and Networks \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131906631\n  
1772,     Fix the serialization of sparse immutable tables \n\nThe  cellColumnIndices  fields of DenseImmutableTable and SparseImmutableTable\nappeared to serve the same purpose  but were actually slightly different  This\nbroke serialization of sparse immutable tables  Additionally  our serialization\ntests did not cover sparse immutable tables \n\nRename the SparseImmutableTable field for clarity  and add tests covering\nsparse immutable tables \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131855143\n  
1773,     Add some javadoc stating that immutable graphs are thread safe \n\nSlightly refactor code so enterprising users looking at the implementation don t think that s not the case :) And more seriously  this is a better design that makes us less likely to introduce bugs  so it s a good change all around  Thanks Greg!\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131507603\n  
1774,     Try to explain Sets newHashSetWithExpectedSize() more accurately and usefully \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131318810\n  
1775,     Fix typo just because \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131316999\n  
1776,     Make it more difficult to get StackOverflowErrors from hooking chains of futures together with setFuture\n\nThere are two ways such an SOE can occur given a chain of AbstractFutures strung together with setFuture\n1 when the  innermost  future completes  the sequence of directExecutor listeners will all execute inline  recursively\n2 when the  outermost  future is cancelled  AbstractFuture cancel() propagates cancellation to the future that has been assigned to it via setFuture since this is  inline  we can run out of stack\n\nThe first one can be solved by modifying the way we execute listeners and detecting this case explicitly\n\nThe second one would technically allow for the same solution but a number of users depend on their cancel methods actually getting called so we need to limit this solution to TrustedFuture subclasses and mark TrustedFuture cancel final   I can break this change into a separate CL but i thought it might be easier to review altogether  let me know \n\nThis of course doesn t solve every way you could get such a StackOverflowError  just a few potentially common ones \n\n(This may help with problems like    com/google/guava/issues/2254)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131312174\n  
1777,     Add @Beta to new method that hasn t yet been API reviewed \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131302300\n  
1778,     Make nonCancellationPropagating available to GWT \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131285023\n  
1779,     Automated g4 rollback of changelist 131198531 \n\n*** Reason for rollback ***\n\nThe ArrayDeque implementation in upstream GWT has a bug that is being fixed in    googlesource com/#/c/16680/\n\n*** Original change description ***\n\nUse ArrayDeque and PriorityQueue under GWT (where they re newly available)  and provide synchronizedQueue  synchronizedDeque  and MinMaxPriorityQueue there \nThis also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally \n\nFixes #2545\n\n***\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131218608\n  
1780,     Use ArrayDeque and PriorityQueue under GWT (where they re newly available)  and provide synchronizedQueue  synchronizedDeque  and MinMaxPriorityQueue there \nThis also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally \n\nFixes #2545\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131198531\n  
1781,     Fix bug in Helpers isEmpty \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131104085\n  
1782,     Allow atomic removal of 0 values from AtomicLongMap\n\nI think this is a pretty sensible thing to expose as an atomic sort of alternative to\nremoveAllZeros  We could also expose remove as is \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131078929\n  
1783,     NullPointerTester should not require @Nullable on the param of an equals() override\n\nThis is currently being worked around with things like:\n\nnew NullPointerTester()\n     ignore(AutoValue_MyValueType class getMethod( equals   Object class))\n       \n\nThe work-arounds prevent AutoValue from being treated as a pure implementation-generating processor \n\nFixes #1819\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131074329\n  
1784,     Add @Nullable annotations \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131061728\n  
1785,     Disabling SelfEquals check for test\n\nWe intend to make this a compilation error in [  s Java compiler  so it is necessary to fix existing occurrences first to avoid breaking builds \n\nSee [  for more details \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=131053298\n  
1786,     Add Vector tests to guava-testlib s TestsForListsInJavaUtil\n\nTested: [ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130970050\n  
1787,     Prefer hardcoding constant over calculating at runtime \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130969942\n  
1788,     Return the underlying graph/network for multiple calls to Graphs transpose()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130954918\n  
1789,     Add Graphs transpose() static utility methods for viewing the transpose of a graph  See:    wikipedia org/wiki/Transpose_graph\n\nAdd Graphs asBasicGraph()  One downside to having BasicGraph *under* Graph in the type hierarchy (still overall a good idea though :P) is that people are likely to write methods that accept  BasicGraph<N>   even though they COULD accept  Graph<N  ?>   A little bit of javadoc is not going to stop that from happening  so might as well make it less painful to handle  Also  if someone e g  wants to make a MutableBasicGraph copy of a Graph  there was really no way to do that before  They can now do:\n\nGraphs copyOf(Graphs asBasicGraph(myGraph));\n\nNote that we cannot simply change the MutableBasicGraph version of copyOf() to accept a Graph<N  ?>  because then it would have the same type erasure as the MutableGraph version of copyOf() but a different return type  ImmutableBasicGraph copyOf() has the same issue  because ImmutableBasicGraph extends ImmutableGraph which has it\ s own copyOf() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130939830\n  
1790,     Minor javadoc tweak \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130896308\n  
1791,     Remove some superfluous checkNotNulls in NetworkConnections  On the nodes/edges  these are internal classes and those parameters have already been checked  On the calls to super remove*  they ve also already been checked \n\nNote that I previously made a similar change for the GraphConnections \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130873616\n  
1792,     Fix indentation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130870792\n  
1793,     Change allowsSelfLoops() to default to false for Graph/NetworkBuilder \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130840045\n  
1794,     Delete the unused Graphs parallelEdges()  Promote Graphs adjacentEdges (back) to interface method  with a default impl in AbstractNetwork \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130803846\n  
1795,     Make Endpoints implement Iterable \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130800281\n  
1796,     Fix some stale language in a test \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130796558\n  
1797,     Fix typo\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130785660\n  
1798,     Slightly update javadoc for inducedSubgraph()  Since edges() has different return type in Graph vs Network  have to use slightly different terminology here \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130776654\n  
1799,     Change javadoc to refer to Mutable* interfaces  Technically  Graph/Network don t dictate anything when adding edges  because they don t have methods for adding edges \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130760757\n  
1800,     Add NetworkMutationTest (parallel to GraphMutationTest) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130753566\n  
1801,     Expand on  question 3  from the graph/network javadoc  which I felt was a little hard to parse  Also some misc  javadoc cleanup \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130752546\n  
1802,     Fix typo\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130699020\n  
1803,     Super nit: move allowsParallelEdges() above allowsSelfLoops() in the Network interface (this is the order they re presented in NetworkBuilder  as well as the order in the implementing class) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130698523\n  
1804,     Fix compile-time constant expression overflows\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130697805\n  
1805,     Some more cleanup of javadoc  Add specific language regarding undirected graphs since I feel the behavior there is non-obvious \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130684893\n  
1806,     Update Network asGraph() s edge value methods to be consistent with how they re defined in the interfaces  Update tests to fail with the old implementation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130683572\n  
1807,     Completely overhaul top-level javadoc for common graph interfaces in light of the new interface hierarchy  Spend a lot of time answering what I think will be the #1 question users have: should I use a Graph or a Network? Spend a lot less time defining graph theory terms  that s what wikipedia is for :) plus the method-level javadoc defines terms as necessary  Overall  make it a lot more concise  Javadoc that s too long for anyone to bother reading is just as good as javadoc that doesn t exist!\n\nAlso  ran g4 fix on these files \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130673920\n  
1808,     Update some javadoc in the graph builders  add sample code  Run g4 fix on the files \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130658795\n  
1809,     More test coverage for graphs! Test adding and removing nodes/edges repeatedly  Currently only for Graph  will add similar coverage for Network later \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130657984\n  
1810,     Optimize directed graphs to consume less memory  at the cost of additional code complexity  Some very rough benchmarks also seem to indicate this has slightly faster runtime  I suspect this is due to improved cache performance/locality when using a single Map \n\nMemory: Directed mutable graphs consume less memory across the board  with graphs of small degree benefiting the most (memory consumption around 75% of previous)  Directed immutable graph memory consumption is more of a wash - going down slightly for graphs of small degree and up for graphs of large degree \n\nRuntime: Adding a few million edges seems to be about 10% faster \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130653738\n  
1811,     Add *degree() methods back to Graph/Network interfaces  with correct formal definition this time (self-loops count twice) \n\nReplace references (in affected tests) to assert True False  with Truth assertThat() is True  False  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130651507\n  
1812,     Remove reference to hypergraphs in test!\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130646222\n  
1813,     Move Network validation into a static method (will be useful for adding Network coverage to MutationTest later) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130645401\n  
1814,     Add more test coverage for Immutable graphs/networks \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130643917\n  
1815,     Change the definition of hashcode for Networks (map of edges to endpoints) to more closely mirror hashcode for Graphs (map of edges to value)  Also the map we re basing the hashcode on is now half the size for undirected networks  which is nice (a downside is that isolated nodes don t affect the hashcode  but I m not too worried about that) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130560997\n  
1816,     Rename SimpleEdgesConnecting to EdgesConnecting to be consistent with our naming pattern for NetworkConnections (*NetworkConnections and *MultiNetworkConnections) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130551638\n  
1817,     Update some javadoc  Remove old @SuppressWarnings \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130551561\n  
1818,     Make equals/hashcode methods in AbstractGraph/Network final  since changing the behavior of these while still implementing the interface is incorrect \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130551324\n  
1819,     Rename ValueGraph to Graph \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130546021\n  
1820,     Update error message for calling source/target on endpoints of an undirected edge \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130530287\n  
1821,     Rename  Graph  to  BasicGraph   Flip the inheritance hierarchy  Now  BasicGraph<N> extends ValueGraph<N  Presence> \n\nNote that in a followup CL   ValueGraph  will be renamed  Graph   and this will make more sense :)\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130529648\n  
1822,     Add Hashtable to TestsForMapsInJavaUtil \n\nTested: [ \nAs a sanity check  also verified that that target fails if I put a  throw new AssertionError()  in testsForHashtable()\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130452528\n  
1823,     Shuffling from internal-only change \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130430413\n  
1824,     Slightly update wording on Graph equals() javadoc \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130410280\n  
1825,     Delete the NodeConnections interface  As an implementation detail we previously took advantage of the shared interface  but that is no longer the case  and such a trivial interface doesn t seem worth keeping around \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130403467\n  
1826,     Add a bit of test coverage for value graphs \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130333367\n  
1827,     Delete the unused  @GoogleInternal copy* methods (in particular  copyNodes  copyEdges  and their Predicate-based counterparts)  We re missing the ValueGraph version for all of these  and in the copyEdges case  also the Graph version  The Predicate-based methods have the obvious issue that we d want to release with the Java-8 Predicate  not the Guava Predicate  copyNodes() and copyEdges() have the unfortunate issue of there not being an obvious correct answer for the whether the source or destination should come first in the parameters  And finally  copyEdges() requires us to decide what to do in the event that the destination graph doe not contain the incident nodes (and neither option is particularly intuitive)  Overall  we d rather not have to support these methods at this point \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130333320\n  
1828,     Define equality for Graphs so that a Graph never equals a ValueGraph  This allows ValueGraphs to have the expected behavior when you query valueGraphA equals(valueGraphB) (i e  values are taken into account as well) \n\nSince ValueGraph now defines its own equals/hashcode  add AbstractValueGraph to facilitate clients getting this behavior \n\nAdd ValueGraph versions of copyOf() and inducedSubgraph() \n\nAdd a package-private ForwardingGraph class for the non-value graph classes (ConfigurableMutableGraph  ImmutableGraph) to use \n\nRename AbstractConfigurable* classes to Configurable* (and make non-abstract) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130329432\n  
1829,     Move GraphProperties isCyclic() to Graphs  delete the GraphProperties class  Rename method to hasCycle()  because isCyclic() implies that it might be O(1)  Also to be consistent if we ever add other  has  methods (e g  hasSelfLoop()  hasTriangleSubgraph()  etc ) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130327382\n  
1830,     Add the methods Graphs reachableNodes() and Graphs transitiveClosure()  Three teams have already implemented similar logic! Also  looking through the remaining uses of the legacy Digraph  the only thing preventing many from being converted to common graph is the lack of transitive closure  So I d say there s very high demand for this \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130307025\n  
1831,     Fix source links \n\nFixes    com/google/guava/issues/2548\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130300093\n  
1832,     Clean up the javadoc for the mutable graph interfaces \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130297160\n  
1833,     Delete TestGraphBuilder/TestNetworkBuilder  Remove the testing subpackage from common graph \n\nNote that similar functionality will be introduced if we add ImmutableGraph Builder classes (see b/30855928)  but that probably won t be for a little while \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130280956\n  
1834,     Shift the nodeOrder/edgeOrder methods down in the Graph/Network interfaces  These are definitely  properties  of the graph  and should be under the label as such  Note that the AbstractConfigurable* implementation classes already have the methods in this order \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130227111\n  
1835,     ValueGraph implementation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130174881\n  
1836,     Add some test coverage \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130173111\n  
1837,     Update isCyclic() to work on both directed and undirected graphs  This is part of the effort to move it to Graphs (which I ll do in a followup CL)  so we can delete the GraphProperties class!\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130163573\n  
1838,     Expand test coverage  Make validateGraph() a static method so ValueGraphTest can use it (a MutableValueGraph is a not MutableGraph so it can t extend AbstactGraphTest directly)  Move removeEdge_existingEdge() up in the test hierarchy \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130160765\n  
1839,     Update Ordering javadoc to explain the Java 8 situation  Now with branchiness \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130097437\n  
1840,     Use BitSet under GWT  as it s now available there \nThis lets us remove our manual emulation of BinaryTreeTraverser  and it moves us a step closer to allowing precomputed CharMatchers there (if we want to someday  which we might not due to memory concerns) \n\nFixes #2546\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=130010612\n  
1841,     Fix compile-time constant expression overflows\n\nThis change fixes compile-time constant expressions that overflow  in\npreparation for enabling a new compiler error \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129993557\n  
1842,     Use StringBuilder append(a) append(b) instead of sb append(a + b) in Iterators java \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129988431\n  
1843,     Rename addEdgeV2() to addEdge() \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129976233\n  
1844,     Endpoints java: revert language change in Endpoints adjacentNode()\ s exception message;  does not contain  seems more appropriate even though Endpoints is no longer a Collection    is incident to  implies that  Endpoints  is really a misnomer for  Edge   which is sort of OK for Graph but not so much for Network  and  contain  works in both cases \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129924124\n  
1845,     Bump timeout after recent flaky failure \n\n[ \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129894231\n  
1846,     Some tweaks to the Endpoints class:\n\n-Expose nodeA() and nodeB() as public methods \n-Don t have Endpoints implement Collection \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129826551\n  
1847,     Remove logging of regex compiler \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129777911\n  
1848,     Make ImmutableTable serializable \n\nAdd a common serialized form for ImmutableTable implementations which preserves\nall external behavior (e g  view iteration orders) through round-trip\nserialization \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129756122\n  
1849,     Remove a few unnecessary casts that were previously required due to the old  ? super  signature  Some slight tweaks to AbstractNetwork toString() method (no behavioral changes) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129696909\n  
1850,     Remove the  ? super  from the return type of the nodeOrder/edgeOrder methods  It doesn\ t actually provide any additional functionality for the user  just a mild annoyance  Also this is in line with the recommendation here:\n\n[ \n\nIn partiular:\n\n In return types\n\nAvoid using wildcards in return types and constants  You should almost never need to do this  and it puts a burden on the user  \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129689329\n  
1851,     Add the following method to the Graph interface:\n\nSet<Endpoints<N>> edges()\n\nwhich replaces the existing Graphs endpoints() method  but makes it more discoverable and also makes  size() O(1) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129680891\n  
1852,     Improve EvictingQueue addAll() s performance by skipping the head of\ncollections larger than the size of the queue  Also clear the backing\nqueue in such cases to avoid calling  remove() n times \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129679957\n  
1853,     while-statement did not loop\n\nA return statement occurred in the first\niteration of the loop making the loop\nstatement redundant  as it is semantically\nequivalent to an if-statement \n\nReplaced the loop-statement with the\nequivalent if \n\nFixes #2541\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129649564\n  
1854,     AbstractGraphTest: use Truth-style assertions where possible \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129645612\n  
1855,     Fix a test not marked @Test\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129588434\n  
1856,     Rename MutableGraph addEdge(N  N) to MutableGraph putEdge(N  N) (to indicate that Graphs do not support parallel edges and for consistency with the upcoming ValueGraph interface)  Change the order of parameters in MutableNetwork addEdge(E  N  N) to MutableNetwork addEdge(N  N  E) \n\nThe migration for the latter will be done in two steps  in order to avoid silently breaking someone with a WIP change involving a Network<N  E> where N == E  The method with the new parameter order will temporarily be called addEdgeV2  and is planned to be changed back to addEdge the evening of Wednesday  August 10 \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129529711\n  
1857,     Add a service provider for the regex library used by common base (e g  Splitter onPattern) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129471520\n  
1858,     Update to GWT 2 8 0-rc1 \n\nThis requires that we treat the GWT sources as Java 8  That should be harmless \nIt also requires that we upgrade the version of Firefox that we use to run GWT tests (not that we run GWT tests very regularly)  Probably also harmless?\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129440214\n  
1859,     Demote Network adjacentEdges() from an interface to a utility method \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129380888\n  
1860,     Make the Endpoints subclasses private  Expose a package-private isDirected() method  The instanceof check felt a little hacky to me \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129352385\n  
1861,     Preliminary ValueGraph interfaces \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129344333\n  
1862,     Use J2ObjC s @RetainedWith annotation to prevent leaks resulting from reference\ncycles between inverse maps \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129344101\n  
1863,     Remove the *degree() methods from the Graph/Network interfaces  In a followup CL  we ll add a (correct) implementation of degree() as a static utility method in Graphs  But I d like to get the client-affecting changes (i e  ones where the longer I wait the more merge conflicts I get) out ASAP \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129170874\n  
1864,     Minor style tweak (doesn t actually change anything  but the better symmetry makes me happy) \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129060870\n  
1865,     Flatten the Graph->Network hierarchy  In other words  it\ s no longer true that a Network IS A Graph  Instead  provide an asGraph() method that allows for viewing a Network as a Graph  Also  update a lot of code that should have been using Graph (instead of Network) to use Graph \n\nThe motivating reasons for this are:\n\n1) Graphs  by definition  do not support parallel edges  So to have Network be a Graph and break that is a little odd  Instead  we can delegate this to asGraph()  stating that the graph will have an edge between node A and B if the Network has an edge between A and B \n\n2) Equality/hashcode semantics  It was rather unfortunate to require Graph to have explicit knowledge of its subinterfaces  so that they could have their own definition of equality that\ s incompatible with Graph  With this change  Graph has only one definition of equals/hashcode (like basically every other Java data structure) and subinterfaces (e g  the upcoming ValueGraph) are expected to follow that \n\n3) We\ re going to add an edges() method to Graph  but Graphs will have a slightly different concept of edges than Networks  In a Graph the edges ARE the endpoints  while in a Network the edges HAVE endpoints (and ARE the user-provided objects) \n\nNote that there are a LOT of places where we refer to networks as  graph  in the code  This CL does not make an attempt to change those  It\ s uncertain whether we want to change those to  network  or continue to use  graph  as a generic term  but that can be handled in a separate CL if necessary \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=129020913\n  
1866,     Redesign of MapMakerInternalMap with the motivation of saving a lot of memory by not wastefully having stuff that s unneeded  The algorithm (the j u concurrent ConcurrentHashMap-inspired segments of hash tables) is untouched \n\nMemory usage of MapMakerInternalMap is important because it s used under the covers by Interners#newWeakInterner \n\nThe problems the new design fixes\n---------------------------------\n\nThere are four relevant cases of MapMakerInternalMap  one for each combination of weak/strong keys and weak/strong values  The old code implemented all of these exactly the same  from a memory layout perspective  For example  in the worst-case of strong-keys-strong-values  there s the following waste (all numbers assume 64-bit jvm with Xmx < 32G)  in decreasing order of severity:\n\n* per-entry: 16 bytes for the StrongReference object\n* per-segment: 32 bytes for the ReferenceQueue object for the values  32 bytes for the ReferenceQueue for keys  8 bytes for the storing the references to both of those) \n* per-map: 8 bytes for storing the references to keyStrength and valueStrength  4 bytes for storing the reference to valueEquivalence (just comes from valueStrength) \n\nFor maps with strong values  there s also the minor issue that a new StrongReference wrapper is created whenever the value of a key is changed  This puts unnecessary  albeit probably not that much  pressure on the GC \n\nThe approach\n------------\n\nWe want to get rid of the above waste but we don t want to sacrifice any type safetey  Here s how we do this:\n\n* We introduce four different entry implementations and four corresponding Segment implementations (for each key & value strength pair)  These implementations have optimal memory usage wrt the waste discussed above \n* We introduce a base InternalEntry interface  parameterized on its own implementation (i e  CRTP -    wikipedia org/wiki/Curiously_recurring_template_pattern)  This is so the Segment implementation can be generic in the actual Entry type and still be type safe) \n* We introduce a base Segment class  parameterized on its own subclass (CRTP) as well as on the type of the InternalEntry implementation  The latter is so that the Segment implementations know how to safely efficiently handle the corresponding InternalEntry implementations \n* And  tying it all together  we introduce a InternalEntryHelper class  parameterized on the InternalEntry implementation type  Specific InternalEntryHelper implementations know how to safely and efficiently deal with the corresponding InternalEntry and Segment implementations \n* Each of the four InternalEntryHelper implementation classes are singletons (they have no state!)  The MapMakerInternalMap has a reference to the specific InternalEntryHelper implementation it needs - this is the _only_ overhead of our approach \n\nThe existing MapMakerInternalMap tests unfortunately poke around into the internals in a hacky and unsafe manner  To continue to support this  we have XXXForTesting methods that do casts and call into the type-safe methods alluded to above \n\nResults\n-------\n\nGuava s memory benchmark\ntl;dr:\nStrongKeysStrongVals (size = 1M) -> 28 3% memory savings\nWeakKeysStrongVals (size = 1M) -> 24 8% memory savings\nStrongKeysWeakVals (size = any) -> 48 bytes per-map memory savings\nWeakKeysWeakVals (size = any) -> no change\n\nFuture Work\n-----------\n\nThe same design optimization could be applied to LocalCache \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128986019\n  
1867,     Update Guava s J2ObjC dependency to version 1 1  This version includes the\n@RetainedWith annotation \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128842160\n  
1868,     Rename otherNode() to adjacentNode() in Endpoints \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128831933\n  
1869,     Add guarantee of insertion-based order to HashBiMap \nPreserve insertion order in GWT as well \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128827385\n  
1870,     Update MutableGraph javadoc to state in no uncertain terms that there can only be a single edge connecting a pair of nodes  Delete TODOs regarding parallel edges for Graphs  which we will not do \n\nRegarding motivation:\n\n1) Having a Graph with parallel edges complicates things a fair bit  There are certain assumptions you can make about graphs without parallel edges that you cannot make about graphs with parallel edges  Given that we don\ t even expose an  allowsParallelEdges()  method  there\ s literally no way to future-proof yourself if we did later add Graphs with parallel edges  We\ d just break a lot of code \n\n2) In order for a Graph with parallel edges to actually make sense  we would have to expose several additional methods (at the least  getEdgeCount(nodeA  nodeB)  setEdgeCount(nodeA  nodeB)  and allowsParallelEdges())  Given that Graph is supposed to be the simpler interface  this would be unfortunate \n\n3) With my proposed ValueGraph interface  a ValueGraph<N  Integer> would be exactly analogous to a Graph<N> with parallel edges  but with clearer semantics  However  I feel points #1 and #2 are sufficient to resolve this matter \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128824588\n  
1871,     Automated g4 rollback of changelist 128499385 \n\n*** Original change description ***\n\nSuper source Strings#isNullOrEmpty to improve JS performance \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128709966\n  
1872,     Object shouldn t be tested for equality with itself  This was identified using Error Prone check \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128657125\n  
1873,     Object shouldn t be tested for equality with itself  This was identified using Error Prone check \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128588135\n  
1874,     Automated g4 rollback of changelist 128473677 \n\n*** Original change description ***\n\nSuper source Strings#isNullOrEmpty to improve JS performance \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128499385\n  
1875,     Super source Strings#isNullOrEmpty to improve JS performance \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128473677\n  
1876,     Graph java: fix typo in documentation\n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128397707\n  
1877,     Super source Objects to have Objects#equal(String  String) to improve JS performance \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128390183\n  
1878,     Fix typo in Splitter limit javadoc \n\nAlso  grammar pedantry:  including the last  is a parenthetical but was missing a comma  Adding a third comma was too many  so I moved it to the end \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128381331\n  
1879,     Add MapMakerInternalMap to BenchmarkHelpers  mostly for the sake of getting support for MapMemoryBenchmark \n\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128380910\n  
1880,     Remove unused import \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128196200\n  
1881,     Optimize Ascii toUpperCase/toLowerCase for generic charsequences\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=128182386\n  
1882,     Replace calls to deprecated Throwables propagate() with  throwIfUnchecked(e)  (if it is possibly unchecked) and  throw new RuntimeException(e)  \n\nFor files in javatests/  just wrap + throw a new RuntimeException \n\nWe are removing all calls in preparation for deleting the method \n\nMore information: [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127774261\n  
1883,     Update imports ordering to the new java import order \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127770522\n  
1884,     Update imports ordering to the new java import order \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127766798\n  
1885,     Change HashBasedTable to be backed by LinkedHashMaps so iteration order is deterministic \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127625411\n  
1886,     Add some test coverage for removeEdge() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127584532\n  
1887,     An optimization for removeNode() on undirected graphs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127583081\n  
1888,     Update imports ordering to the new java import order \n\nThe import order is changing because the current rules are unnecessarily complicated  difficult to configure in IDEs  and difficult for users to remember \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127568338\n  
1889,     Rename NodeConnections to NetworkConnections and NodeAdjacencies to GraphConnections  Have a base interface called  NodeConnections   This change is just cosmetic right now (although we do refer to these things as  connections  everywhere  so it\ s nice to actually have  NodeConnections  be the base interface)  but it will make more sense in the context of ValueGraph (there will be a ValueGraphConnections) \n\nHowever  I think this change is worthwhile (or at least not harmful) even outside of ValueGraph  And a rename like this  if bundled like with a large functional CL  will clutter things up a lot \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127552346\n  
1890,     Rephrase the equals() javadoc in Graph  Remove same statement from Network since there currently are no subinterfaces of Network  Clean up a reference to  relation  (that\ s impressive it snuck in considering we ditched that name long before we actually checked in any code!) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127547695\n  
1891,     Small tweaks to some methods in AbstractGraph/Networks \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127546964\n  
1892,     Eliminate some duplicated code \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127538907\n  
1893,     Remove the public equal/hashCode/toString methods from Graphs  There are a variety of reasons for doing this:\n\n1) No other class in Guava does this  For example  there\ s no Sets hashCode() or Multimaps equals() \n2) The instanceof checks and casting is annoying  and would only get substantially worse if we introduced an additional core interface  Yes  this is hidden from the user  but might as well take advantage of polymorphism and avoid it entirely \n3) Reduced API surface area  I don\ t like exposing multiple ways to do the exact same thing  The user shouldn\ t have to wonder  hmm    is Graphs equal(foo  bar) always going to give me the same result as foo equals(bar)?  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127507834\n  
1894,     Delete the ImmutableSet copyOf() inside edgesConnecting() for immutable networks  Three main points here:\n\n1) The comment is no longer true  edgesConnecting() used to be evaluated as the intersection of two sets  but is now done differently (we did add a unit test to make sure they\ re equal though!) \n\n2) With the introduction of  SimpleEdgesConnecting   in the no parallel edges allowed case  this is already super efficient (i e  everything is O(1))  There\ s no need to wrap it in an immutable set \n\n3) With the introduction of  MultiEdgesConnecting   even in the parallel edges allowed case  methods such as  contains()   size()  and  isEmpty() are all O(1) if successors() has been invoked  We lose the O(1) runtime of those methods if we always make an immutable copy of the set first \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127470554\n  
1895,     Update the javadoc for the MutableGraph/Network interfaces  Update three things:\n\n1) Remove the reference to  optional operation   This was before the mutation methods were split out into Mutable* interfaces  Now that they are  the language doesn\ t really make sense - if an implementation didn\ t support it they just wouldn\ t implement the Mutable interface! jrtom@ mentioned the possibility of e g  a MutableGraph that only supports adds but not removes  This is possible  but seems relatively unlikely  and it\ s not like this stops them from throwing UOE  I just don\ t think it\ s worth mentioning in the javadoc any more \n\n2) Mention what the default behavior of addEdge() is  My coworker using graph for the first time was trying to figure it out  and was frustated because he had to dive into the implementing class logic to figure it out (and it wasn\ t particular easy)  We should just state up front what we do \n\n3) Make it clear when addEdge() will throw an IllegalArgumentException  We no longer have to add clarifying javadoc in the implementing classes \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127449329\n  
1896,     Fix typo in GraphBuilder nodeOrder() javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127438088\n  
1897,     Update edgesConnecting() size() and edgesConnecting() isEmpty() to be more efficient for Networks with parallel edges  In particular  take advantage of the cached successor multisets  Currently the methods are always O(D)  This will also be O(D) if successors hasn t been invoked  but will be O(1) for future calls  For example  with something like:\n\nedgesConnecting(n1  n2) size()\nedgesConnecting(n1  n3) size()\nedgesConnecting(n1  n4) size()\n   \n\nAll calls after the first will be O(1)  as it invokes successors(n1)  This makes it so that  if someone has a dense graph with O(N^2) edges  calling edgesConnecting() size() or edgesConnecting() isEmpty() on every pair of nodes is O(N^2) (i e  amortized O(1)) rather than (N^3) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127381761\n  
1898,     Add the Forwarded header (RFC 7239) to HttpHeaders java \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127381583\n  
1899,     Make ImmutableNetwork copyOf() more efficient in the case of directed networks that allow self loops  Sets intersection() size() is linear in the size of the first set  whereas this is O(1) assuming degree() is O(1) (which at least in our impl  it is) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127357590\n  
1900,     More test coverage!\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127355528\n  
1901,     Suppress error for comparing objects to themselves\n\nMore information: [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127346658\n  
1902,     Make Endpoints of(Un)Directed package private  I don\ t think it makes sense to create Endpoints outside the context of a Graph  Also  exposing these methods might encourage clients to try to make graphs with  mixed  (directed and undirected) edges  or even use Endpoints as a hacked up Pair \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127230487\n  
1903,     Fixed the typo for javadoc\n\nFixes #2528\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127197947\n  
1904,     Update link to Style Guide \n\nFixes #2526\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127196987\n  
1905,     Remove the isDirected() method from Endpoints  Also remove Graphs addEdge()  which was only used inside Graphs  and I wasn t a huge fan of (it s super easy to implement yourself if you need the functionality) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127142376\n  
1906,     Remove the method Graphs roots()  “roots” as we’re defining them isn’t really a standard term of art (I can only find references to ROOTED graphs  which have exactly one root)  Additional reasons to remove:\n\n1) It\ s super easy to implement yourself  either inlined as you\ re processing nodes or as a static method \n2) The definition is even weirder for undirected graphs \n3) If we have this method  we should have also have the parallel method  Set<N> leafs(Graph<N> graph)   However   leafs  is not well-defined in graph theory  It can either mean  nodes with an out degree of zero  OR  nodes with a degree of one  \n4) There\ s only 1 real caller  Technically there\ s 2  but one of them seems to have a bunch of methods that are dead \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127139526\n  
1907,     Split testFuzzyCompare()  which seems to be the main test to time out recently \nThis should reduce the flakiness to more tolerable levels \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127115918\n  
1908,     Migrate from easymock to mockito in javatests/com/google/common/collect\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127112056\n  
1909,     Migrate from easymock to mockito in javatests/com/google/common/hash\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127106598\n  
1910,     Enforce that various iterators are unmodifiable to prevent potential bugs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127101187\n  
1911,     Fix typo in ForwardingMultiset \n\nPS: It would appear this class and many like it have between 0 and low single digit usage in all of [  (and of those uses  some are    questionable)  I wonder how useful these classes really are :-/ although I m sure we re not in any rush to deprecate them  just an observation \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127094899\n  
1912,     Slightly rearrange the methods in NodeConnections (I prefer all the Set-returning methods to be together)  The subclasses still implement the methods  in order  due to their particular hierarchy \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127035785\n  
1913,     Update Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=127000299\n  
1914,     Fix 2 small typos in common math Stats classes \n\n   com/google/guava/issues/2522\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126994349\n  
1915,     Migrate from easymock to mockito in javatests/com/google/common/io\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126993635\n  
1916,     Increase timeout for each open-source GWT test method from 5 minutes to 10 \nThe test that does static initialization of MathTesting is timing out \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126971588\n  
1917,     Migrate from easymock to mockito in javatests/com/google/common/util/concurrent\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126971523\n  
1918,     Migrate from easymock to mockito in javatests/com/google/common/cache\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126971307\n  
1919,     Update definitions of equals() and hashCode() for Graph/Network  The new hashCode() shouldn t change any behavior (of course) but should be more efficient for directed graphs  equals() does change behavior in certain corner cases (see [  but it was arguably broken before  To keep things simple  we now flat out say directed != undirected \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126965617\n  
1920,     Update MapCacheTest so it s not flaky  Ensure the mapCache is cleared before every test so state is not persisted across tests \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126918869\n  
1921,     Delete MapMaker makeComputingMap() and ComputingConcurrentHashMap \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126901506\n  
1922,     Add ConcurrentHashMultiset create(ConcurrentMap) \nDeprecated and  MOE insert public  for ConcurrentHashMultiset create(MapMaker) \nMigrate [  users to the latter \n\n
1923,     Add the method Graphs endpoints() that does what you expect: returns the endpoints corresponding to each edge in a graph  The whole  we print every edge in an undirected graph\ s toString() twice  and that\ s a feature not a bug *wink*  annoyed me  Also there\ s other cases  such as copyOf() and and getWeaklyConnectedComponents()  where we don\ t want to process each edge twice  In those particular cases they happen to be no-ops  but for cases where it\ s not  or where you do something computationally expensive  doubling up on undirected edges is bad :(\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126884706\n  
1924,     Avoid using MapRetrievalCache unless node lookup is expensive  The class constructs  CacheEntry  objects when adding to the cache  which if the cache is not used makes us slower  and even if the cache is used is roughly a wash speed-wise if map lookup is fast (e g  a HashMap or ImmutableMap  and an object with a reasonable hashCode()) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126874176\n  
1925,     Move oppositeNode() from Graphs to Endpoints and rename it otherNode()  Also make a few methods final  It changes the following code:\n\nGraphs oppositeNode(graph  edge  node);\n\nto this:\n\ngraph incidentNodes(edge) otherNode(node);\n\nThe oppositeNode() method in Graphs always kind of bugged me  It takes three parameters  which is a lot for a utility method  More importantly  the last two parameters were both of type Object  with no  obviously correct  ordering  so it was easy to accidentally swap them and get a run-time error  Finally  with the introduction of the Endpoints class  this moves the method to the more logically correct place  Someone looking for this method was probably already dealing with incidentNodes() and Endpoints  It makes a lot more sense to say  hey  sorry you can\ t call target() since this is undirected  try otherNode() instead!  if it\ s in the same class \n\nIn terms of the change itself  the more fluent style seems like a big win  And there\ s not even a burden to third-party implementations of Graph/Network  because we will have the only implementations of Endpoints (the constructor is private)  So I see only positives and no negatives for this change \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126859221\n  
1926,     An optimization for Graphs and Networks  inspired by Michael  Introduce  MapIteratorCache  and  MapRetrievalCache   MapIteratorCache is extremely light-weight and optimizes the follow case:\n\nfor (N node : graph nodes())  \n  graph foo(node);\n \n\nwhile MapRetrievalCache is slightly heavier and additionally optimizes the following cases:\n\ngraph foo(node);\ngraph bar(node);\n\nOR\n\ngraph foo(node1);\ngraph foo(node2);\ngraph bar(node1);\ngraph bar(node2);\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126763076\n  
1927,     Permit forwarding from a Future<V> to a Future<? extends V> \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126696175\n  
1928,     Fix typo \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126665968\n  
1929,     Replace use of MapMaker makeComputingMap in Ordering \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126444165\n  
1930,     Fix DoubleMath rounding bug identified in Guava issue 2509 \n\nThe approach is a little changed from the pull request #2511 -- more exhaustive testing  and it does more math in long arithmetic before casting back to a double \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126331169\n  
1931,     Fixing missing dep in concurrent \nNot sure how targets are only now failing: [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126318059\n  
1932,     Update comment to be more accurate/descriptive \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126308525\n  
1933,     Use N and E instead of S and T in get*MapForBuilder() methods \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126305518\n  
1934,     Automated g4 rollback of changelist 125826869 \n\n*** Reason for rollback ***\n\nThe class-level Javadoc for the top-level interfaces is going to be refactored soon  and I don t want to lose these comments in the process \n\n*** Original change description ***\n\nI was reading through the class-level javadoc (which could use some cleaning up  but I think jrtom said he s working on that)  and this passage struck me  The latter two options don t seem like something that would actually happen  For example  we allow nodes of any type  so an impl where the nodes store the topology and cannot be shared across graphs doesn t really make sense \n\nEven beyond that  this just seems like low-level implementation stuff that users of the Graph/Network interfaces shoul   \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126258496\n  
1935,     Suppress SelfComparison error \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126106581\n  
1936,     Mention getOnlyElement() as an alternative in the Javadoc for getFirst() \n\nThis came up in my Java readability review ([ as I had been\naware of getFirst() but not of getOnlyElement()  Indeed  I think many of the\ncases where it s valid to only look at one element from an iterator are\nactually cases where there s only one element in the iterator  and so I suspect\nI won t be the only person who s using getFirst() when they are really looking\nfor getOnlyElement() instead \n\nThis CL also reformats the rest of the Javadoc for getFirst() to 100 characters\nto be consistent with the new paragraph that I added \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126073627\n  
1937,     Super nit fix: move <p> into the same line as comment (this is how rest of common graph is formatted) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=126025605\n  
1938,     Have more helpful error messages \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125997504\n  
1939,     Makes copyNodes() and copyEdges() @GoogleInternal  kevinb mentioned earlier that he thinks those methods should be @GoogleInternal for now \n\nAlso  change copyOf() slightly to have separate impls for the predicate and non-predicate versions  The non-predicate version can be slightly more efficient by avoiding incident node containment checks when adding edges \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125995006\n  
1940,     Delete the common graph algorithms subpackage  Move the    unusual retainWithTransity() method into the same package as its only caller  Move inducedSubgraph() into Graphs (dropped the  get  prefix) and tried to apply some sense of ordering to the class \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125983079\n  
1941,     The JavaDocs for LinkedHashMultimap#keySet() don t specify the iteration order of the returned set  so making the documentation more specific  The new JavaDocs were copied from Multimap#keySet()  with the 2nd paragraph added by me \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125961795\n  
1942,     Use some fancy logic to reduce the number of equality checks in certain cases for undirected endpoints \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125901163\n  
1943,     Move the static  constructor  methods in ElementOrder above the class methods (as done in e g  Endpoints)  Also  remove  final  from the static methods  since it\ s not standard practice to include on static methods (and the class itself is final) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125901101\n  
1944,     Update example code snippet slightly (existing one doesn t techincally compile) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125873135\n  
1945,     Fix broken generic types in ElementOrder  Added two tests  neither of which compile with the existing code!\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125863282\n  
1946,     Fix typo \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125863097\n  
1947,     I was reading through the class-level javadoc (which could use some cleaning up  but I think jrtom said he s working on that)  and this passage struck me  The latter two options don t seem like something that would actually happen  For example  we allow nodes of any type  so an impl where the nodes store the topology and cannot be shared across graphs doesn t really make sense \n\nEven beyond that  this just seems like low-level implementation stuff that users of the Graph/Network interfaces shouldn t have to care about \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125826869\n  
1948,     Make the load factor for  inner  (per node/edge) hash maps and sets 1 0  Note that non-multi networks use HashBiMaps  which already have an unmodifiable load factor of 1 0 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125796201\n  
1949,     More safety checks when adding and removing edges  plus simplify the code  Rather than return a boolean  addEdge now asserts that it *always* add an edge (we avoid calling it at all if it wouldn t)  Similarly for removing edges  removeEdge() now asserts that it always removes an edge - unless the graph is undirected and it s a self-loop edge \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125784233\n  
1950,     Make degree(node) on directed networks O(1) instead of O(D)  at the cost of a teensy bit of memory (a self loop counter)  In actuality it doesn t seem to take up any extra memory  perhaps due to how the object is padded/aligned  Additionally  this CL makes iterating through incidentEdges() slightly faster on directed networks if no self-loops are present  In the undirected case  adding and removing self-loop edges is now slightly faster \n\nNote: this CL makes it so that every call to *degree(node) is O(1)  as explained here:\n\ndegree(node)\ndirected graphs: we store a map that combines predecessors + successors\nundirected graphs: easy\ndirected networks: now O(1) :P see description above\nundirected networks: easy\n\noutDegree(node)\ndirected graphs: we store an explicit successor count\nundirected graphs: same as degree(node)\ndirected networks: easy  we store an out edges map\nundirected networks: same as degree(node)\n\ninDegree(node)\ndirected graphs: we store an explicit predecessor count\nundirected graphs: same as degree(node)\ndirected networks: easy  we store an in edges map\nundirected networks: same as degree(node)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125754834\n  
1951,     Make sure all public classes/interfaces in common graph have @Beta and @since \n\nAlso  a little bit of narcissism :) add myself to authors to the main interfaces (Graph/Network/MutableGraph/MutableNetwork)  I normally wouldn t list myself first but the convention seems to be alphabetical order \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125691964\n  
1952,     Delete some incorrect javadoc  ImmutableGraph doesn t evan *have* an edgesConnecting() method  For ImmutableNetwork  the statement isn t quite true either  In the case of no parallel edges allowed  it s actually O(1) (thanks to [  Given that  I think it makes sense to just remove the statement entirely \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125686408\n  
1953,     Remove trailing whitespace \nIt s marginally complicated a couple Java 8 branch integrations for me \nAlso  add trailing newlines  and replace tabs with spaces \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125668183\n  
1954,     Remove some TODOs I added a while ago that probably shouldn t be TODONE \n\nRegarding Java 8: we ll want to minimize the code differences between the two versions of Guava  and avoiding repeating a 3 line static method doesn t really seem worth the difference \n\nAllowing users to specify the expected degree is in direct opposition with specifying expected edge count  since given two out of (node count  edge count  degree) you can always derive the third  Specifying node/edge count seems like the most reasonable combination  and it s what s already implemented \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125642711\n  
1955,     Make the predicate versions of copyOf() not call expected(Node|Edge)Size  because that may allocate too much memory if most elements don t pass the predicate \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125642699\n  
1956,     Test ImmutableMap equals in ImmutableMapTest testEquals \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125597377\n  
1957,     A teensy weensy optimization for the no-self-loops case \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125596848\n  
1958,     Interrupt the producer thread instead of assuming it will exit naturally \nIf the SynchronousQueue producer doesn t try to put() in time for the consumer to accept the value  it hangs forever \nThe result is a flaky test \n\nAs part of this  I ve removed the producer s ability to fail the test if it s interrupted \nThat s because I need to be able to interrupt the SynchronousQueue put() operation \nI could find a way to continue to fail on interrupts in other cases  but it doesn t seem valuable enough to be worth the trouble \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125565652\n  
1959,     Always wait around for the expected interrupt \nIn the current code  we sometimes stop waiting too early and never receive it  The main thread then waits forever to hear that the interrupt was received \nThe result is a flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125560176\n  
1960,     I thiiiink there s a chance the current removeEdge() impl could still cause a CME  Either way  I have a change that avoids the issue and is more efficient  by removing the self node from the predecessors/successors before we start iterating through them \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125536109\n  
1961,     Fix typo in private method in Graphs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125493802\n  
1962,     I remember why I did the parallel edge check before the self-loop check now! In the MutableGraph case  it s actually more efficient  because we can return early (rather than just throw an exception) in that case  And I have the same order in MutableNetwork just for consistency \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125487467\n  
1963,     Propagate toString() through TrustedListenableFutureTask  for better debug \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125473814\n  
1964,     Remove a retain cycle in FluentIterable \nEven though  this iterable = this  is a legitimate java code  it causes a memory leak when it is transpiled to objective-c via j2objc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125467534\n  
1965,     Rename orderNodes() to nodeOrder() and orderEdges() to edgeOrder() \n\nNote that I feel this is actually *more* in the spirit of the guidelines we established \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125467297\n  
1966,     Merge GraphErrorMessageUtils into GraphConstants \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125402353\n  
1967,     Improve the performance of addEdge()  This doesn t change the big O runtime (it s already O(1))  but it does eliminate several hash lookups :)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125397749\n  
1968,     Add Graphs replaceEdge() (@GoogleInternal for now)  Especially useful if a caller has immutable weighted edges and needs to update an edge weight  Given that we want to encourage immutable elements (as opposed to the mutable weighted edge my team ended up using :P)  seems worthwhile \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125392004\n  
1969,     Prefer TODO with bug number over alias  plus add a couple TODOs re: graphs with parallel edges \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125370345\n  
1970,     Lower  expected degree  for internal maps  of which we have O(N) per graph/network  This greatly reduces memory consumption for graphs of small average degree  in exchange for a small performance hit for graphs of large average degree \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125369630\n  
1971,     Update variable names that referenced old node1/node2 names with new A/B names \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125368052\n  
1972,     Delete the TODO to  try creating an abstract superclass that NetworkBuilder and GraphBuilder could derive from  \n\nI investigated this  and although it\ s possible  you get almost no benefit from it  There\ s only 3 rather trivial methods that end up the in the abstract class (4 if we eventually allow parallel edges on Graphs)  and the subclasses still have to override them to scope the return type (you don\ t want to actually return the abstract base class to the user!) \n\nIf the method names were buildGraph() and buildNetwork() instead of just build()  it would be much more reasonable   Then we wouldn\ t need an abstract class at all and NetworkBuilder could extend GraphBuilder  But I don\ t think the extra verboseness for callers is worth being able to simplify some code on our end  Also  I don\ t think being able to use a NetworkBuilder to build Graphs (not Networks) is an ability anybody particularly wants \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125365378\n  
1973,     Give a more realistic usage example for EqualsTester \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125338610\n  
1974,     Update the immutable and mutable versions of copyOf() to have the correct restriction: don t make copies of Networks that allow parallel edges \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125224138\n  
1975,     Mark methods in Graphs that take a Predicate as @GoogleInternal until we can migrate to JDK 8 s Predicate  Rename the merge*From() methods to copy*()  Change the behavior of copyEdges from copying over all edges (and adding incident nodes as necessary) to only copying over edges where the incident nodes are already present (and thus not adding any additional nodes)  as was discussed in API review \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125178123\n  
1976,     Clean up the implementation of roots() and move it to Graphs  This is part of the effort to delete GraphProperties java  as discussed earlier  The other method in GraphProperties is isCyclic()  which I d like to handle separately (e g  it should handle undirected graphs if it s going to be in Graphs  or maybe moved to labs/) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125176121\n  
1977,     Update toString() for Endpoints in undirected case  Also  change test to use EqualsTester  which gives us coverage for hashCode() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125174596\n  
1978,     Remove the redundant (inherited from Graph) adjacentNodes() method from Network  as well as some other javadoc cleanup I missed in [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125172452\n  
1979,     Work around javac bug \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125169771\n  
1980,     Delete the existing Hypergraph interface  We\ re pretty much 100% sure this is not where we want it in the interface hierarchy  and leaving it there as a public interface isn\ t helping anyone \n\nAlso  remove references to  hyperedges  and  hypergraphs  in the javadoc/g3doc  No proposal that we\ re considering will Graph/Network support hyperedges \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125098921\n  
1981,     Change the return type of Network incidentNodes() from Set<N> to Endpoints<N>  This also replaces the source() and target() methods on Network and moves them to Endpoints \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125092926\n  
1982,     Make unmodifiableNavigableMap covariant in V \n\nFixes #2499\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125058909\n  
1983,     Update javadoc  The previous sample code was not actually doing what the comment describes  In particular  it was calling adjacentNodes() instead of successors()  The comment says  all nodes reachable from node   but adjacentNodes() will also travel AGAINST the direction of the edge (not necessarily  reachable  in the directed case) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=125022633\n  
1984,     Fixes mismatched parentheses in Graph javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124975157\n  
1985,     Remove @Beta from Escaper and UrlEscapers \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124844727\n  
1986,     Add a Charmander to CharMatcher \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124753981\n  
1987,     Fix usage example of ImmutableSortedMultiset Builder \n\nFixes #2500\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124729333\n  
1988,     *Builder  graph classes: support element ordering using a new ElementOrder class \n\nMemoryTester: add accessors for bytesPerElement and constantOverhead \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124401032\n  
1989,     Fix some Graph/Network javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124387755\n  
1990,     Document that we don t forward calls to default methods  except when we do \nAlso  standardize on <b> for Warnings \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124370400\n  
1991,     Allow linear white space before  ;  character in MediaType \nThis is allowed by the relevant specs  AFAICT \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124283184\n  
1992,     Move Graphs selfLoopPredicate() to GraphsTest java\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124271785\n  
1993,     Suppress warning from comparing Object to itself  This was identified using Error Prone \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124270612\n  
1994,     Add some missing @Nullable annotations to InetAddresses \nUse static imports for Preconditions \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124267108\n  
1995,     Push asList() cache down into ImmutableCollection subtypes to avoid holding onto the extra reference in ImmutableList \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124186158\n  
1996,     Support owner type subtype relationship in TypeToken isSubtypeOf() and TypeToken getSubtype()\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=124038295\n  
1997,     Make a couple of optimizations to UnsignedLongs toString(x  radix):\n\n* If x > 0  use Long toString  The JDK code is essentially the same for radices other than 10  and is much faster for 10 \n\n* If radix is a power of two  use shifting and masking instead of division and remainder \n\n* If radix is even  simplify the initial division that extracts the last digit \n\nSee also    com/google/guava/issues/2478 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123940513\n  
1998,     Change MoreExecutors invokeAnyImpl to accept <long  TimeUnit> \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123436300\n  
1999,     <td><b> => <th>\n\nAlso move the <blockquote> tags  The forthcoming Javadoc formatter will probably move them somewhere else  I kind of want to remove them  but I assume they re there to indent the table \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123426877\n  
2000,     - Update links to URL and HTML specs where necessary \n- Use https for all links  new and old \n- Remove claim that the *fragment* will be percent-encoded at *parse* time  as this is apparently not true:\n Unfortunately not using percent-encoding is intentional as implementations with majority market share exhibit this behavior  \n   spec whatwg org/#fragment-state\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123321924\n  
2001,     Remove unnecessary string concatenation\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123253690\n  
2002,     Deprecate Ordering binarySearch \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123249690\n  
2003,     Add a fallback in Ordering leastOf to ensure the worst case of the quickselect component is bounded to O(k log k) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=123038053\n  
2004,     Make iterating through predecessors() and successors() more efficient on directed graphs  Avoids doing a hash lookup for every element in the table  A rough benchmark shows that iteration takes slightly less than half the previous time \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122853102\n  
2005,     Restrict Unsafe getLong() hack to x86_64 (amd64) and AArch64 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122817458\n  
2006,     Adding WOFF2 media type \n\nBootstrap uses this file format  which is then filtered out in apps framework since this type isn t defined \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122743223\n  
2007,     Use    @code @  or similar formulations to prevent things like  @Override  from being interpreted as tags \nRemove some @Override tags entirely \nMake other fixes as necessary \nMove some code in the direction of the one-ish true-ish template-ish  <pre>    @code      </pre>  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122443929\n  
2008,     Rewrite the LongMath SIEVE_30 constant in a more readable form  The new form is not numerically equivalent but the difference is only in the ignored bits 30 and 31 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122266867\n  
2009,     Update javadoc of Futures#dereference to point to correct #transformAsync method \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122184701\n  
2010,     Update public suffix list \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122019817\n  
2011,     isPrime: try to improve javadoc\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=122003309\n  
2012,     Expose  Int Long Math isPrime to external users \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121998832\n  
2013,     Remove emptyIterator() from Guava \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121572091\n  
2014,     Deprecated Throwables propagateIfInstanceOf() and propagateIfPossible() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121520908\n  
2015,     Annotate the GWT client copy of ImmutableList add* with @CanIgnoreReturnValue \nThe server copy already has this annotation \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121516405\n  
2016,     Delete unused methods in ConfigurableMutable* \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121494418\n  
2017,     Inline remaining usages of Throwables propagate  We are removing all calls in preparation for deleting the method \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121489882\n  
2018,     Make the AbstractConfigurable* classes actually abstract \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121411875\n  
2019,     Rename ConfigurableNetwork->ConfigurableMutableNetwork and ConfigurableGraph->ConfigurableMutableGraph  A followup CL will rename AbstractConfigurableNetwork->ConfigurableNetwork and AbstractConfigurableGraph->ConfigurableGraph (this is being done in two seperate CLs otherwise critique doesn t understand it s a rename)  The above mentioned classes are not actually abstract  so calling them Abstract* is wrong \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121393585\n  
2020,     Adds content security policy (CSP) headers  which are used by older user agents \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121387099\n  
2021,     Remove @Beta from Throwables throwIfInstanceOf() and throwIfUnchecked() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121375812\n  
2022,     Deprecated Throwables propagate()\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121375741\n  
2023,     Fix a minor oversight in using a constant in LongMath for its intended purpose \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=121145870\n  
2024,     Predicates subtypeOf  a correctly-named duplicate of Predicates assignableFrom  Deprecate the latter  Add javadoc \n\n   com/google/guava/issues/1444\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120843247\n  
2025,     Delete warning that TimeLimiter might be changed significantly \n\nIt is just as API-unfrozen as any other @Beta API -- no more  no less \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120835232\n  
2026,     Added NaCL binaries to media type list \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120819293\n  
2027,     Add some missing @Beta s for new stuff in 20 0 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120809190\n  
2028,     Delete GenericMapMaker parent class now that generic parameterization is no longer needed (caching APIs are gone) \nDelete unused NullEntry and AbstractReferenceEntry \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120734317\n  
2029,     Add spaces to annotations inside comments to prevent them from being interpreted as real code when the file is parsed by tools that behave like the checker framework (see    cs washington edu/checker-framework/current/checker-framework-manual html#annotations-in-comments) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120731063\n  
2030,     Delete MapMaker softValues() \nDelete unused NullConcurrentMap and NullComputingConcurrentMap implementations \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120709309\n  
2031,     Remove MapMaker expireAfterWrite()  the expirationQueue  ticker related functionality  and all expirable/evictable related implementation details \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120703596\n  
2032,     Change name of Animal Sniffer run \nThe old name includes the version of Java that we re running against  This would otherwise become an unnecessary diff between the Java 8 and Android branches \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120559577\n  
2033,     Suppress what will soon be an error-prone compile error internally \n\npropagateIfPossible(e) means  throw e if it\ s a RuntimeException or Error   In this code  e is known to be a checked exception \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120407217\n  
2034,     Small optimization for node/edge containment  It wouldn t be worth it if nodes()/edges() returned they keysets directly  but wrapping in an unmodifiableset involves an extra object creation and subsequent garbage collection \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120366484\n  
2035,     Make sure edgesConnecting() is unmodifiable in the parallel edges allowed case \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120348240\n  
2036,     Clean up the impls of edges connecting in the no parallel edges allowed case  Slightly optimize contains() by avoiding constructing an interator \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120347747\n  
2037,     Support reflection-less atomic updates in AggregateFutureState and InterruptibleTask as in AbstractFuture \n\nFixes    com/google/guava/issues/2463\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120337540\n  
2038,     Add some validation to predecessor/succesor counts  This should also catch the unlikely (impossible?) case where there are more than Integer MAX_VALUE predecessors or succesors  Alternatively we could change these to longs  but that adds ~8 bytes to every node  and I m already pretty sure a HashMap cannot hold more than 2^30 entries \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120291028\n  
2039,     Update documentation for Interners \nSince Java 7  the String intern() does not allocate the strings in permgen  but instead on the heap (in a table whose bucket size is configurable using XX:StringTableSize) \n\nSee    java com/view_bug do?bug_id=6962930\nand    info/string-intern-in-java-6-7-8/\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120287206\n  
2040,     Make mutable directed graphs about 40% smaller  Another nifty benefit: directedGraph adjacentNodes(node) size() is now O(1)  Remove (unused) equals/hashcode impl from NodeAdjacencies \n\nInterestingly  this does make immutable directed graphs slightly larger  The exact % depends on the degree of the nodes  inDegree == 1 and outDegree == 1 is a particularly large increase because two SingletonImmutableSets is much smaller than one ImmutableMap with two entries \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120276536\n  
2041,     Reduce the memory usage of Networks by roughly 20%  Delete the IncidentNodes class  Remove (unused) equals/hashcode impl from NodeConnections  Additionally  removeEdge() is now O(1) in all cases (used to be O(D) for networks with parallel edges)  edgesConnecting() is now O(1) for networks that don’t allow parallel edges (used to be O(D)  even though a network without parallel edges cannot return > 1 edge for this method) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120272801\n  
2042,     Stop using exceptions as flow control in isUriInetAddress() \n\nThis causes processes to use more memory (Object[ s) than they ought to due to filling in stack traces for the exception \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120245586\n  
2043,     AbstractServices failure exceptions report what service failed to help with debugging tests with many services \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120232421\n  
2044,      subType  ->  subtype \n superType  ->  supertype \n\n Subtype  is one word  according to various dictionary and to our usage in public methods on TypeToken and MediaType \n Supertype  is not as 100% clear in the dictionary  but when a dictionary or other document mentions it  I see it as one word  I also see precedent in  Class getSuperclass  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=120124434\n  
2045,     Work around Eclipse bug that previously affected GWT and now affects j2objc (with -sourceLevel 8):\n   eclipse org/bugs/show_bug cgi?id=443596\n\nFixes    com/google/guava/issues/1939 (though I believe that GWT fixed things on their end a while back)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119992342\n  
2046,     Make some of Throwables available under GWT \n\nFixes #2457\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119967512\n  
2047,     Add @GwtIncompatible \nThis isn t currently necessary but may be so someday  so I ve been trying to establish the practice \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119881900\n  
2048,     Add char overload to Joiner withKeyValueSeparator() to parallel the overload in Splitter withKeyValueSeparator() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119803558\n  
2049,     Currently  SomeClass<?> getSubType(SubClass<?  OtherT>) returns SubClass<?  OtherT> \nHowever  if we do NotGeneric getSubtype(SubClass<OtherT>)  we get SubClass as a raw type instead of\nSubClass<OtherT> \n\nIf we fix that bug  then as it turns out we weren t generating proper owners for static classes  so fix that too\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119755147\n  
2050,     Followup to  Let PackageSanityTests run over the entire package (and stop special casing)  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119501361\n  
2051,     Let PackageSanityTests run over the entire package (and stop special casing) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119488117\n  
2052,     Graph java: break out mutation- and edge-specific methods into subinterfaces:\n* Network java: edge-specific methods (extends Graph)\n* MutableGraph java: mutation methods for Graph (extends Graph)\n* MutableNetwork java: mutation methods for Network (extends Network)\nGraph<N  E> becomes Graph<N> \n\nConsequential changes:\n* adding various new Network-specific classes (NetworkBuilder  AbstractNetwork  etc )\n* adapted Graph-specific classes to remove edge-related code\n\nNote: Graph does not currently support parallel edges \n\nMotivations:\n* Make graphs without explicit  first-class edge objects available \n* Remove mutation methods from the top-level interfaces so that Graph/Network objects supplied as their parameters don t (contractually) support modifications   (And so that the slightly differing signatures for Graph and Network mutation methods don t cause user confusion )\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119461180\n  
2053,     Stop toString() on Stats and PairedStats throwing when the count is zero \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119289337\n  
2054,     Add throwIfUnchecked and throwIfInstanceOf \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119271623\n  
2055,     Delete MapMaker expireAfterAccess()  including it s recencyQueue \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119225281\n  
2056,     Delete MapMaker maximumSize()  including it s evictionQueue \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119208974\n  
2057,     Add javadocs about O(1) support for Iterables getLast() on RandomAccess lists \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119188139\n  
2058,     Avoid importing classes that don t exist in GWT \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119183243\n  
2059,     Remove MapMaker removal notification queue and removal listener support \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119165768\n  
2060,     Update Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=119098167\n  
2061,     Improve MoreExecutors shutdownAndAwaitTermination \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118971489\n  
2062,     Hide MapMaker maximumSize() internally \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118959646\n  
2063,     Add more warnings to the javadoc of Files copy(File  File)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118821183\n  
2064,     Fix typo in Javadoc: ImmutableList is a  list   not a  set  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118817173\n  
2065,     Implement Stopwatch toString() under GWT \n\nFixes #2437\nFixes #2365\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118680962\n  
2066,     Remove wildcard imports \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118678029\n  
2067,     Remove the use of static  shared buffers for skipping/discarding data \n\nAlso replace the use of BUF_SIZE constants with createBuffer() methods \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118598496\n  
2068,     Add ByteSteams exhaust(InputStream) and CharStreams exhaust(Readable) \n\nAlso ensure that the write-only skip buffers are zeroed each time they re written to just so we don t hang on to any data we shouldn t in memory \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118584097\n  
2069,     Add  DS_Store to  gitignore \nFrom: mardibiase <mardibiase@gmail com>\n\nFrom #2437\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118503538\n  
2070,     Re-run google-java-format on //java[tests /com/google/common/ (up to escape) now that some\nformatting behavior has changed \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118071047\n  
2071,     Changes to the LinearTransformation API: add inverse()  remove transformY(y)  and rename transformX(x) to transform(x)  Note that inverse() transform(y) is the new transformY(y) \n\nThe inverse is lazily initialized  following the pattern used in Converter  (This doesn t to any double-checked locking or anything  which is presumably okay because in the unlikely event of a race  constructing it twice is not the end of the world )\n\nTGP appears to show nothing but flakes: [ [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=118056833\n  
2072,     Remove hardcoded graph toString() tests  Instead  simply verify that every node and edge appears in the graph s string representation  This is done for a few reasons:\n\n1) It gives us a false sense of test coverage  For example  getPropertiesString() is used in both the actual code and the test code  If there was a bug in getPropertiesString none of the tests would catch it \n\n2) Any minor tweak to the graph string format  which should be an easy change  requires touching a lot of tests \n\n3) The biggest reason: incidentNodes() on an undirected graph makes no guarantee of order  As such  a test should not hardcode the expected toString() result  Multiple string representations of the same graph are equally valid \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117974195\n  
2073,     Link to the new spec instead of the old one  and do so more concisely \n\nContext:    com/google/guava/issues/2434#issuecomment-200464086\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117950249\n  
2074,     Add constants for X-Forwarded-Host and X-Forwarded-Port to HttpHeaders \n\nSee    com/google/guava/issues/2430\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117837581\n  
2075,     Deprecate all CharMatcher constants \n\nRemoval date tentative based on date of 20 0 release \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117833310\n  
2076,     Re-remove CharMatcher WHITESPACE internally \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117823196\n  
2077,     updated readme\n\nFixes #2431\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117823087\n  
2078,     Remove MapMaker expireAfterAccess() from public API internally  Please use CacheBuilder instead \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117774783\n  
2079,     Make all AbstractFutures behave like TrustedFutures under GWT \n\nI m doing this for two reasons:\n\n1  Exceptions are almost certainly disproportionately expensive under GWT  But mostly   \n\n2  I can get away with under GWT  where there are very few users of util concurrent  (This is technically a violation of our compatibility policy  but I suspect we ve played a little fast and loose with it when it comes to GWT before  Plus  util concurrent is likely to be even less used outside Google than it is inside  and it gained GWT support only in Guava 19  And to top that off  I hope to remove Future get() entirely from GWT  so this CL will be the least of users  worries :))\n\nAlso  update a comment in ImmediateFuture \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117746555\n  
2080,     Steer users away from dereference() \n\nQuestions:\n- Should I steer them away even more strongly? Should I be trying to delete this method?\n- Might we want Callables submit(Executor  AsyncCallable)? This is a moderately common use of dereference()     com/google/guava/issues/2076\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117730195\n  
2081,     Steer users away from ListenableFutureTask \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117730099\n  
2082,     Update public suffix list \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117625766\n  
2083,     Major refactoring of the com google common graph APIs (including updates to client code):\n-Remove DirectedGraph and UndirectedGraph interfaces; a Graph s directedness can now be queried with graph isDirected() \n-Remove GraphConfig class; use the query methods directly on the Graph interface instead \n-Add GraphBuilder; use this instead of Graphs create[Un Directed(GraphConfig)\n-Remove ImmutableGraph Builder; ImmutableGraph construction is now done with ImmutableGraph copyOf(Graph) \n-Rename multigraph() to allowsParallelEdges(boolean) \n-Rename noSelfLoops() to allowsSelfLoops(boolean) \n\nOld example syntax for creating a graph:\n  DirectedGraph<N  E> graph = Graphs createDirected(GraphConfig multigraph());\n\nNew example syntax for creating a graph:\n  Graph<N  E> graph = GraphBuilder directed() allowsParallelEdges(true) build();\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117606125\n  
2084,     Automated g4 rollback of changelist 117579683 \n\n*** Original change description ***\n\nRemove CharMatcher WHITESPACE internally \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117604531\n  
2085,     Test that changes to an Iterator are reflected in the backing collection \nUnrelatedly  move CopyOnWriteArrayList suppressions into TestsForListsInJavaUtil  since the collection s quirks are documented decisions  not implementation bugs  This prepares for adding another suppression on the Java 8 branch \n\nTested:\nglobal TAP\n[ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117580763\n  
2086,     Remove CharMatcher WHITESPACE internally \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117579683\n  
2087,     Document that order() is called even without KNOWN_ORDER \n\nFixes    com/google/guava/issues/2349\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117569479\n  
2088,     Skip Map+Multimap toString() tests if NON_STANDARD_TOSTRING is specified \n\nFixes    com/google/guava/issues/2418\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117563335\n  
2089,     Hide MapMaker removalListener() internally \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117372601\n  
2090,     Restore documentation that Futures catching is available under GWT but with some caveats \n\nThe resulting documentation looks roughly like this:\n\n@Partially GwtIncompatible(value= AVAILABLE but requires exceptionType to be Throwable class )\npublic static <V X extends java lang Throwable> com google common util concurrent ListenableFuture<V> catching(\n    com google common util concurrent ListenableFuture<? extends V> input \n    java lang Class<X> exceptionType \n    Function<? super X ? extends V> fallback)\n\nFixes    com/google/guava/issues/2379\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117364356\n  
2091,     Remove all CharMatcher constants except WHITESPACE internally \n\nWHITESPACE will be removed separately since it had orders of magnitude more usages \n\nThis is effectively a roll-forward of [  but with additional constants removed \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117362844\n  
2092,     Remove class from <pre class= code > \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117357703\n  
2093,     Specify behavior with self-loops in degree() javadoc \n\nWikipedia states:  the degree (or valency) of a vertex of a graph is the number of edges incident to the vertex  with loops counted twice   I\ ve found several primary sources that also state the same  But Wolfram has this definition:  The degree of a graph vertex v of a graph G is the number of graph edges which touch v  with no mention of self-loops \n\nWith directed graphs it would be easy to get this behavior (just return inDegree + outDegree)  but with undirected graphs you would either need to store more information than we currently do or make this an O(D) method instead of O(1)  Overall I\ m not sure how many people care so probably not worth changing  but at least worth calling out in the javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117273477\n  
2094,     Fix javadoc typo in ImmutableSet copyOf()\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117174782\n  
2095,     Replace instances of StringBuilder append(String substring/CharSequence subsequence) with the append overload that takes a substring range  Plus another minor change \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117136790\n  
2096,     Make immediateFailedFuture and immediateCancelledFuture trusted futures \n\n   com/google/guava/issues/1961\n\n(Rollforward CL 86499614  which was rolled back in CL 86516778 because of test breakages )\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=117125023\n  
2097,     Update references to guava-libraries googlecode com to the Github location in pom xml files \n\nTested:\n    TAP --sample for global presubmit queue\n    [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116983878\n  
2098,     This change replaces usages of static final fields on CharMatcher  e g  CharMatcher WHITESPACE  with the equivalent static factory method  e g  CharMatcher whitespace() \n\nThe change is being made so that we can remove the static final fields  primarily because they must be eagerly initialized  causing many implementation classes (which may be unnecessary) to be loaded  This is a significant performance problem on Android  Using methods allows implementation classes to only be loaded when actually needed  as well as matching our long-standing preference for factory methods over public fields \n\nSee [  for more information \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116880331\n  
2099,     Used UncheckedThrowingFuture in another place \nAdd tests for Error throwing now that that s easy to do \n\nThis also eliminates a usage of Forwarding*Future:\n   com/google/guava/issues/2416\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116853544\n  
2100,     Adopt getDone() and getDoneFromTimeoutOverload() in other Future tests \nMove  get(-1  SECONDS)  test out of the normal path and into its own test method so that I can supppress it if we remove Future get under GWT \nTest  get(MAX_VALUE  SECONDS)  for overflow \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116853438\n  
2101,     Fixes  standardizations  and noise reduction in Futures tests \n\n- Run more tests under GWT (and fix some @GwtIncompatible reason documentation)  This required no actual changes to the tests except   \n- Make testSuccessfulAsList_resultCancelledRacingInputDone look at the correct logger now that we\ ve moved most listener execution to AbstractFuture \n- Retrieve that logger with getLogger() rather than from the class under test\ s `log` field \n- Use TestLogHandler instead of our custom throwing handler \n- Move RuntimeExceptionThrowingFuture out of FutureCallbackTest  and use it in FuturesTest instead of our hacked up solutions that happen to work today \n- Test both overloads of get() for some immediate*Future() implementations \n- Go crazy with static imports  even by my standards \n- Rename expected exceptions to  expected   and remove comments about their expectedness \n- Remove descriptions from fail() calls \n- Remove a redundant immediateFuture() test \n- Use Truth in a few places \n- Use getDone() for various reasons:\n  - It will let tests work under GWT if I remove get() there \n  - It sometimes saves us an isDone() assertion \n  - It prevents some tests from hanging in the case of a bug \n  - It doesn\ t declare `throws InterruptedException`  so in theory  we might be able to remove some `throws` clauses  (But I haven\ t done so )\n- Add a getDoneFromTimeoutOverload() with a custom GWT implementation to prepare for losing timed get() there \n\nLeft for later CLs:\n- reformatting everything\n- splitting FuturesTest into separate classes\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116759522\n  
2102,     Make LittleEndianDataOutputStream final (like LittleEndianDataInputStream) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116674000\n  
2103,     Fix tiny Javadoc problems \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116657537\n  
2104,     Use Futures getDone() internally \nAdd a doc reference to getDone() from getUninterruptibly() \nImprove the error message on bad calls to getDone() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116652736\n  
2105,     Add @CheckReturnValue to the com google common io package  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116620632\n  
2106,     Start a README md and an overview/recipe-book for Stats calculations  Revise Stats java class docs a bit \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116584822\n  
2107,     Discourage people from mocking or otherwise creating custom implementations of ListenableFuture \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116573821\n  
2108,     This change replaces usages of static final fields on CharMatcher  e g  CharMatcher WHITESPACE  with the equivalent static factory method  e g  CharMatcher whitespace() \n\nThe change is being made so that we can remove the static final fields  primarily because they must be eagerly initialized  causing many implementation classes (which may be unnecessary) to be loaded  This is a significant performance problem on Android  Using methods allows implementation classes to only be loaded when actually needed  as well as matching our long-standing preference for factory methods over public fields \n\nSee [  for more information \n\nTested:\n    TAP train for global presubmit queue\n    [     Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116565003\n  
2109,     Automated g4 rollback of changelist 116449500 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116468022\n  
2110,     Prevent fail() from being ignored by the surrounding catch() block by throwing new Error() \n\nTests of a testing API often look like this:\n\ntry  \n  runATestThatShouldFail();\n  fail();\n  catch (AssertionError expected)  \n \n\nHowever  the catch() block can catch not only the expected failure from runATestThatShouldFail() but also the  test did not fail when it should have  failure from fail() \n\nThis an automated fix using Error Prone ([ \n\nWe intend to make this a compilation error in [ \ s Java compiler \nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116458330\n  
2111,     Fix documentation issues with CharMatcher matchesNoneOf \n\nFixes external issue    com/google/guava/issues/2410 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116450985\n  
2112,     Shuffling from internal-only change \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116449500\n  
2113,     Remove more unnecessary @CheckReturnValues on APIs now that these packages are\ncompletely @CRV d \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116285375\n  
2114,     Remove @CheckReturnValue from individual classes now that it is in\npackage-info java\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116280164\n  
2115,     Add Futures getDone() \n\nAPI Review:\n   google com/document/d/1HvGIffjs3clWLzs0SNzLSKSzlzjIIesZOt6fhedo85Y/edit\n\nAlso  make immediateCancelledFuture() available under GWT  since I use it in the new tests \nTo use cancellationExceptionWithCause() from it  I had to move that method out of the server-only AbstractFuture java and into the shared Futures java \nThis runs somewhat counter to my effort to make Futures java smaller  Maybe we ll want a Util/Helpers class  though I m not quite sure what else would go in it (executeListener? currently non-static maybePropagateCancellation?) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116279071\n  
2116,     Update the travis configurations to only build the  master  branch or any branches prefixed with  release  in order to reduce the duplicate use of build bots on travis for pull requests based on non-user-fork-originated branches \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116275195\n  
2117,     Add @CheckReturnValue to com google common collect package  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116272898\n  
2118,     Add tests:\n- map put(presentKey  value)\n- entry setValue\n\nFixes    com/google/guava/issues/2406\n\nMake classes support entry setValue:\n- CompactHashMap\n- LocalCache\n  - Support was removed in [  and I m not sure why \n  - The private documentation still claims that it s supported \n  - A test (that I edit in this CL) checks that it s not  but presumably only because it was copied from a test that looked for the old behavior and thus needed to be updated:     | [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116244562\n  
2119,     Remove unused variables \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116177337\n  
2120,     Add asAsyncCallable method to Callables \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116175454\n  
2121,     When displaying the actual class name  use the simple name \n(Note that GWT has supported getSimpleName() since 2 6 0 )\n\nWe started doing this for the expected class name in CL 115380685 by passing literal strings like  IllegalStateException  to the constructor \nBut I also made some changes to make this more obvious \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116150794\n  
2122,     Add missing rejectionPropagatesToOutput tests \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116137704\n  
2123,     Never return a (Sorted|Navigable|Bi)(Map|Set) from the plain (Map|Set) overloads \n\nPrior to this CL  the plain overloads performed instanceof checks  delegating to the (Sorted|Navigable|Bi) versions when possible \n\nThe old behavior is probably The Right Thing  but it hinders Proguarding \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116128191\n  
2124,     Encourage users to use framworks instead of chaining things together manually \n\nAs part of that  I tried to clarify the significance of using ListenableFuture  as an input to another Future   I don\ t love what I\ ve ended up with  but I\ m not optimistic that I\ ll do better anytime soon \nOne part of *that* was switching part of the doc to the second person simply because I couldn\ t find a good way to make it flow otherwise  I ended up propogating this to more of the doc  and I think it\ s probably a small net improvement \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116019725\n  
2125,     Add @CheckReturnValue to Iterators  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=116004491\n  
2126,     Add @CheckReturnValue to ListMultimap and SetMultimap  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115997209\n  
2127,     This change replaces usages of static final fields on CharMatcher  e g  CharMatcher WHITESPACE  with the equivalent static factory method  e g  CharMatcher whitespace() \n\nThe change is being made so that we can remove the static final fields  primarily because they must be eagerly initialized  causing many implementation classes (which may be unnecessary) to be loaded  This is a significant performance problem on Android  Using methods allows implementation classes to only be loaded when actually needed  as well as matching our long-standing preference for factory methods over public fields \n\nTested:\n    TAP train for global presubmit queue\n    [     Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115935997\n  
2128,     Add overloads to Preconditions checkState checkArgument and checkNotNull to avoid boxing and varargs for the most common parameter combinations \n\nThis adds primitive overloads for all combinations of Object char int and long up to 2 parameters and Object only overloads up to 4 parameters   This covers 92-98% of formatting calls based on an analysis of googles codebase \n\nThis change is fully binary compatible but only mostly source compatible   It is possible that this cl will call some Preconditions calls to become ambiguous with respect to overload resolution   For example this call\n\nvoid foo(Boolean condition  short s)  \n  checkState(condition   %s   s);\n \n\nwill fail to compile with this change   There are two simple changes to the invocation that will resolve the ambiguity   \ condition\  can be explicitly unboxed  or \ s\  can be explicitly boxed   We believe that such situations will be incredibly rare \n\nSee the JLS 15 12 2 for full information on overload resolution:    oracle com/javase/specs/jls/se7/html/jls-15 html#jls-15 12 2\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115881707\n  
2129,     Add @CheckReturnValue to RangeMap and RangeSet  This forces the caller of these\nAPIs to  do something  with the result of the call \nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115856896\n  
2130,     Add @CheckReturnValue to Multimap and Table  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115771812\n  
2131,     Make Iterables unmodifiableIterable() and Iterators unmodifiableIterator() methods accept (Iterable|Iterator)<? extends T> instead of (Iterable|Iterator)<T>  Some of our unmodifiable*() methods already did this (e g  unmodifiableMultiset()  unmodifiableBiMap())  and the  ? extends T  signature is consistent with the unmodifiable*() methods in Collections java \n\nNote that SortedMap only does it for values  not keys  due to the various Key-typed methods that return views in the interface  Maps unmodifiableMultimap() also has some issues that at the very least make it tricky (maybe impossible  didn\ t investigate enough to be sure) to follow this pattern \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115705731\n  
2132,     Add the Service-Worker-Allowed header to the HTTP header constants for Java/Go \n\n(Note: C++ constants are added in [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115700477\n  
2133,     Automated g4 rollback of changelist 108345794 \n\n*** Reason for rollback ***\n\nCauses performance regression in J2CL transpiler and requires incorrect code to be accepted \n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 108184450 \n\n*** Reason for rollback ***\n\nChange no longer needed  j2cl transpiler was updated \n\n*** Original change description ***\n\nRemove import for java util Formatter since it s needed only for the javadoc \nThis class is not supported by GWT and in the new version of GWT (J2CL) we plan to strip not needed imports only if the class/method is marked with @GwtIncompatible \n\n***\n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115640681\n  
2134,     Add @CheckReturnValue to the immutable collection types  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115562334\n  
2135,     Add @since 20 0 to the  ceiling floor PowerOfTwo methods \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115489834\n  
2136,     Add  floor ceiling PowerOfTwo as discussed at API review \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115483556\n  
2137,     Add @CheckReturnValue to Multiset and friends \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115381146\n  
2138,     Fix 6-year-old test bug \n\nThe bug is:\n\n  try  \n    somethingThatShouldFail();\n    fail();\n    catch (AssertionFailedError expected)  \n   \n\nThe fail() is masked by the catch() block \nI ve requested an enhancement to Error Prone to catch this:    com/google/error-prone/issues/393\n\nAdditionally  I improved IteratorTester under GWT: IteratorTester couldn t catch wrong-exception bugs there because of GWT s lack of reflection  This was a known  documented limitation  but the tests still attempted to verify its ability to do so  When I fixed the test bug  they broke  I then realized that I could just fix IteratorTester to work under GWT  It s probably even a simplification \n\nTested:\nglobal TAP\n[ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115380685\n  
2139,     Reformat parts of util concurrent that I had mostly already reformatted \nNow that I have some more automation  I ve caught some more problems \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115358094\n  
2140,     Strip mentions of soft references from Guava \nReformat \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115352566\n  
2141,     Remove most of our uses of <code> \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115352506\n  
2142,     Replace <br> tags \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115352490\n  
2143,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115333807\n  
2144,     Add @CheckReturnValue to Iterables  This forces the caller of these APIs to  do\nsomething  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115264046\n  
2145,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115240986\n  
2146,     Removes @WeakOuter from AggregateFuture RunningState and subclasses  The weak\nouter reference causes a dangling pointer if the RunningState outlives its\nFuture  Furthermore  the @WeakOuter wasn t necessary to maintain leak-free\nbehavior because AggregateFuture nulls it s runningState reference in\nafterDone() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115226151\n  
2147,     Fix Error Prone errors in GWT code \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115110183\n  
2148,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115089318\n  
2149,     Remove closing </li> tags \nI couldn t find any </p> or other optional closing tags in any of the files I ve touched so far \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115089061\n  
2150,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115088232\n  
2151,     Move <p> tags to the beginning of the line \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115086346\n  
2152,     Attempt to finish adding Java 8 usage notes to our functional types \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115081604\n  
2153,     GraphConfig: fix logic bug in compatibleWith()  document the correct behavior  and add tests \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115078269\n  
2154,     AbstractPackageSanityTests java: document that the @Test annotations are deliberate even though it s not actually a JUnit4 test  as some of its subclasses @RunWith(JUnit4) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=115074892\n  
2155,     Make effectively final fields final\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114996899\n  
2156,     Make effectively final fields final\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114996805\n  
2157,     Create an abstract base class for our graph implementations  Eliminate lots of redundant code! Also improves the (currently incorrectly documented) runtime of removeNode() in IncidenceSetUndirectedGraph on multigraphs from O(degree^2) to O(degree) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114995238\n  
2158,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114992641\n  
2159,     Fix bad line breaks \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114992502\n  
2160,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114976442\n  
2161,     Add missing GWT emulation of interruptTask() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114972363\n  
2162,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114972304\n  
2163,     More reformatting \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114963965\n  
2164,     Reuse the mac instance just constructed for bit-length calculation \n\nVia    com/google/guava/pull/2395/\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114961907\n  
2165,     Add @CheckReturnValue to the com google common  escape|xml|html  packages and subpackages  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114912000\n  
2166,     Graph java: change return type of #degree() methods to int \nAdd documentation specifying behavior if the number of relevant edges is > Integer MAX_VALUE \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114905866\n  
2167,     Introduce AbstractGraph  This is a bare-bones base class that all Graph implementations should be able to extend (analogous to e g  AbstractSet for Sets)  It ensures there is consistent equals()/hashCode() across different Graph implementations  Additionally  this CL drops the requirement that two graphs have to have  the same type  to be equal \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114901380\n  
2168,     Reformat FluentIterable  moving some  Stream equivalent  sections above @tags so that they appear properly \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114900720\n  
2169,     Use StringBuilder reverse() instead of reimplementing it \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114887716\n  
2170,     Fix modifier order\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114875899\n  
2171,     Eliminate intra-|if| MOE stripping  and add a comment \n\n[ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114859955\n  
2172,     google-java-format the rest of util concurrent \nI also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter) \nI made almost no hand changes \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114854530\n  
2173,     More reformatting \nI ve restricted myself to files that are part of open-source Guava \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114854445\n  
2174,     Change Range toString() to use printable ASCII chars (  ) instead of \\u2025 (‥)\n\nSee    com/google/guava/issues/2376\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114820315\n  
2175,     Indent continued @tag lines 4 spaces instead of aligning them with the second word of the first line \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114799803\n  
2176,     google-java-format common escape \nI also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter) \nI made almost no hand changes \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114785034\n  
2177,     Clarify docs of filter()  limit()  and transform() to specify that the result is a view \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114554046\n  
2178,     In EnumsTest  rewrite code that creates a second copy of TestEnum in a second ClassLoader  so that it doesn t try to add instances of the second TestEnum to a Set<TestEnum> (which is a Set of the original TestEnum)  In Java 8  apparently this is a little bit less erased so it fails \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114474572\n  
2179,     Add javadoc and test coverage stating that non-hypergraph edges are always incident to either one or two nodes \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114459445\n  
2180,     Run more tests against MutableClassToInstanceMap by defining a type that implements 5 interfaces \nEliminate a suppression for MutableTypeToInstanceMapTest that is unnecessary because put() is unsupported  anyway \nDo some assorted other cleanup \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114449200\n  
2181,     Add a validation check to AbstractDirectedGraphTest  opposite to the one in AbstractUndirectedGraphTest:\n\n[ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114447561\n  
2182,     Slightly optimize Graphs oppositeNode()  50% of the time (assuming node is randomly chosen between the repeated node and adjacent node) we ll only have to perform one equals() check instead of two \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114380996\n  
2183,     Add @CheckReturnValue to the com google common util concurrent package  This forces the caller of these APIs to  do something  with the result of the call \n\nIf you want to use transform() to perform an action on a successful Future without returning a result  use addCallback()  (addCallback() brings the added bonus that any exceptions will be logged )\nSimilarly  if you want to use catching() to perform an action on a failed Future without return a result  use addCallback() \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114371704\n  
2184,     Simplify some code in directed graphs  In particular  make removing the incident edges when removing a node more intuitive  Note that removeNode() in undirected graphs currently is O(degree^2) (for multigraphs)  but that will be alleviated once we have AbstractIncidenceSetGraph and it moves to this implementation \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114345530\n  
2185,     Remove unused variable declarations that are followed by fail() \nThey are no longer necessary \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114342552\n  
2186,     Add test coverage to IncidentNodes to ensure our equals/hashcode is compatible with other Sets  Add a (micro)optimization to avoid constructing an iterator object for calls to contains() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114329541\n  
2187,     Add some validation checks for undirected graphs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114224325\n  
2188,     Add @CheckReturnValue to com google common reflect  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114218057\n  
2189,     Add @CheckReturnValue to collect Range  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114147974\n  
2190,     Permit the elapsed time to be slightly shorter than expected \nThis fixes some flakiness I m seeing in Guava \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114130006\n  
2191,     Release most of UninterruptiblesTest and UninterruptibleFutureTest to Guava \nI ve excluded the CountDownLatch tests  which are currently intertwined with some other Google-internal tests \n\nThis requires migrating off TearDownTestCase to TearDownStack \n   com/google/guava/issues/1752#issuecomment-180971813\n   com/google/guava/issues/2387\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114122813\n  
2192,     Add @SafeVarargs to Iterators cycle() (being consistent  since we just added it to forArray()) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114120886\n  
2193,     Use String isEmpty() in Strings isNullOrEmpty() \n\nString isEmtpy() was not in Android until Java 6/API 9 (   android com/reference/java/lang/String html#isEmpty())  which Guava now requires \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114108086\n  
2194,     Add @SafeVarargs to Iterators forArray (ImmutableList of() and ImmutableSet of() are already annotated with this) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114078599\n  
2195,     Add documentation indicating that the builder mutators returns the same builder object \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114066331\n  
2196,     Document the requirement that  for directed graphs  incidentNodes iterates as source then target  Move other directed graph specific documentation into DirectedGraph \n\nNote: this order is already expected in a few places  and is tested in existing tests here:\n\n[ \n[ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114038654\n  
2197,     Add @CheckReturnValue to DiscreteDomain  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114030796\n  
2198,     Some small cleanup to Graphs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114030721\n  
2199,     Replace  DirectedIncidentNodes  and  UndirectedIncidentNodes  with a shared  IncidentNodes  class that implements Set  This avoids the call to  asImmutableSet() that the directed graphs were performing  and also makes it so that we are now very close to having an abstract base graph implementation that will almost entirely replace the 4 current implementations \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=114000977\n  
2200,     Move toString() implementation for graphs to Graphs java  This is similar to how Graphs equal() is implemented  and will allow Graph implementations to get toString() for  free  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113999189\n  
2201,     Add @CheckReturnValue to com google common math  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113983550\n  
2202,     Add more consistency checks to AbstractGraphTest \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113961752\n  
2203,     Reduce memory footprint of mutable graphs by roughly 10%  Considering the increase that [  yielded  getting this back down is definitely good \n\nThis is done by using HashSets instead of LinkedHashSets for the various internal data structures stored in NodeConnections  Note that we still maintain insertion order on nodes() and edges()  because those are the keysets of LinkedHashMaps  As  outer level  structures (i e  only 1 per graph)  making those HashMaps instead of LinkedHashMaps would have a relatively small effect on memory footprint compared to changing the many  inner level  Sets inside NodeConnections \n\nAs for the question of whether we WANT to maintain insertion order  that\ s not what we were doing anyway  and implying it is what we were doing could be dangerous if someone relies on it  For example  the order in which nodes becomes predecessors or successors to other nodes can be completely different from the order in which the nodes were inserted to the graph  So there is no consistent ordering of nodes  each call to predecessors() or successors() will yield a different  ordering  than that of nodes()  To complicate the matter even further  there are methods like incidentEdges() and adjacentNodes() on directed graphs  These are simply the union of two other sets  which by its nature will not preserve any ordering (a union iterates over the elements in set1  followed by the elements of set2 that were not in set1)  so we have yet another inconsistent  ordering   For now  I propose we should only guarantee insertion order on a graph\ s nodes() and edges()  and not any other accessors \n\nAs a side note  of the two problems mentioned  the former will not be a problem when we allow  sorted nodes/edges  because the inner Sets can simply be TreeSets as well  preserving the same ordering as the outer level TreeMaps  The implementation of Sets union() will still prove to be problematic  but the implementation could be presumably be modified to support SortedSets if we want to guarantee that any Set<N> or Set<E> accessor will be sorted if the Graph is created with a Comparator<N> or Comparator<E> \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113885975\n  
2204,     Make Graphs oppositeNode() slightly more efficient  It performs the same number of equals checks (1 in self-loop case  2 otherwise) but without the additional call to contains() - while still providing the incidence check \n\nAlso  make it work on the base Graph type  This will be necessary in order to call it from our base abstract graph implementation \n\nAnd finally  add test coverage  for which there was apparently none!\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113869827\n  
2205,     Add @CheckReturnValue to MinMaxPriorityQueue  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113863719\n  
2206,     Add @CheckReturnValue to ObjectArrays  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113856750\n  
2207,     Add @CheckReturnValue to the com google common eventbus package  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113855301\n  
2208,     Remove  SetView  from all graph implementations  See [  for why it should be killed with fire  In particular  it made the returned Sets have O(N) (in both time and memory) size() and contains() methods  and in one case  O(N^2) iteration!\n\nTo facilitate this change  create  NodeConnections  to replace  IncidentEdges   This class stores not only the incident edges but also the adjacent nodes for each origin node \n\nAs a side benefit  addEdge() is now O(1) in all cases \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113813654\n  
2209,     Add @CheckReturnValue to SortedLists  This forces the caller of these APIs to  do something  with the result of the call \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113749076\n  
2210,     Add validation that checks that predecessors  successors  in edges  out edges  and all sorts of other relationships are in sync after every test  Add more test coverage for removing edges  This would have caught the breakage in [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113690611\n  
2211,     Graph java: fix indentation in class-level Javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113683678\n  
2212,     Fix various collections (Sets union()  Sets intersection()  Multisets sum()  etc ) that might overflow when asked for size()  With very large collections  these could potentially return negative (!) results  According to the spec  the result should be Integer MAX_VALUE:\n\n   oracle com/javase/7/docs/api/java/util/Collection html#size()\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113683485\n  
2213,     Remove unnecessary  unused  variables thanks to an update in the @CheckReturnValue checker \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113673831\n  
2214,     Small fix in javadoc\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113660488\n  
2215,     Automated g4 rollback of changelist 113559037 \n\n*** Reason for rollback ***\n\nAs per api review   This is being rolled back since [  statistics have been gathered \n\n*** Original change description ***\n\nAdd overloads to the Preconditions check(NotNull|State|Argument) varargs\nmethods to avoid varargs and boxing overhead in the case of 1-2 template parameters \n\nIn order to avoid autoboxing and numeric conversions we need to support all primitive types \n\nAPI review:\n   google com/document/d/1EJ0dqFIagdOCJZQkrNGgzhnIS-4lSEYi0_GQeUlKJBE/edit\n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113655916\n  
2216,     Add @CheckReturnValue to the following classes: EvictingQueue  FluentIterable  and Ordering \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113653886\n  
2217,     Add @CheckReturnValue to MapMaker \n\nFor more information  see [ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113640939\n  
2218,     Automated g4 rollback of changelist 113583321 \n\n*** Reason for rollback ***\n\nForgot to remove nodes from predecessor/successor sets if we were removing the last connecting edge \n\n*** Original change description ***\n\nRemove  SetView  from all graph implementations  See [  for why it should be killed with fire  In particular  it made the returned Sets have O(N) (in both time and memory) size() and contains() methods  and in one case  O(N^2) iteration!\n\nTo facilitate this change  create  NodeConnections  to replace  IncidentEdges   This class stores not only the incident edges but also the adjacent nodes for each origin node \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113599971\n  
2219,     Remove  SetView  from all graph implementations  See [  for why it should be killed with fire  In particular  it made the returned Sets have O(N) (in both time and memory) size() and contains() methods  and in one case  O(N^2) iteration!\n\nTo facilitate this change  create  NodeConnections  to replace  IncidentEdges   This class stores not only the incident edges but also the adjacent nodes for each origin node \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113583321\n  
2220,     Document which exception is used by catching()/catchingAsync() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113563893\n  
2221,     Remove incorrect javadoc regarding  passing the smaller Set first  from Sets union() \n\nIn Sets intersection() this comment makes sense  since it iterates through set1 as the  main set   and does a contains check against set2 for every element in set1  So iterating through intersection() is O(|set1|) for HashSets  or O(|set1| * log|set2|) for TreeSets  For the union() case though  I don\ t believe this comment is correct  Iterating through the union involves:\n\n-Iterate through set1  No contains checks are performed  This is simply O(|set1|) (assuming the Set has normal iteration performance)\n-Iterate through set2  For every element  a contains check against set1 is performed  Thus we have O(|set2| * C1)  where C1 is the cost of a contains() call to set1 \n\nSo if set1 is a HashSet we have O(|set1|) + O(|set2|)  Order makes no difference  If set1 is a TreeSet we have O(|set1|) + O(|set2| * log|set1|)  This is actually *worse* when set1 is the smaller of the two sets \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113561878\n  
2222,     Add overloads to the Preconditions check(NotNull|State|Argument) varargs\nmethods to avoid varargs and boxing overhead in the case of 1-2 template parameters \n\nIn order to avoid autoboxing and numeric conversions we need to support all primitive types \n\nAPI review:\n   google com/document/d/1EJ0dqFIagdOCJZQkrNGgzhnIS-4lSEYi0_GQeUlKJBE/edit\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113559037\n  
2223,     *GraphTest java: Add @Test annotations to tests marked @Override \n(This is apparently not strictly necessary but makes for better documentation )\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113549694\n  
2224,     Refactor the test classes from the previous hierarchy:\n\n                      AbstractGraphTest\n                        |           |\n                        v           v\n        AbstractMutableGraphTest   AbstractImmutableGraphTest\n         |                    |\n         v                    v\nAbstractDirectedGraphTest   AbstractUndirectedGraphTest\n\nto the following:\n\n                      AbstractGraphTest\n                        |           |\n                        v           v\n      AbstractDirectedGraphTest   AbstractUndirectedGraphTest\n                  |                             |\n                  v                             v\nAbstractImmutableDirectedGraphTest   AbstractImmutableUndirectedGraphTest\n\nUnfortunately the lack of multiple inheritance in Java means we have to choose between whether we want inherit from a base  immutable graph test  or get all the functionality of the base  (un)directed graph  test  Both involve some amount of code duplication for full test coverage  but I think this is the better option of the two given that the (un)directed tests are likely to have more tests added over time  whereas a base immutability test is unlikely to be expanded much (the tests for this are currently repeated between AbstractImmutableDirectedGraphTest and  AbstractImmutableUndirectedGraphTest) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113542823\n  
2225,     Add @CheckReturnValue to the entire c g c hash package \nOpt-out certain APIs using @CanIgnoreReturnValue \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113536377\n  
2226,     Some optimizations to AbstractIteratorTester based on profiling data on MapsCollectionTest \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113299505\n  
2227,     Add @CheckReturnValue to Lists  Maps  Multimaps  Multisets  Queues  Sets  and Tables \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113265870\n  
2228,     Remove APIs to be deleted for Guava 20 0 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113254099\n  
2229,     Some minor improvements to FeatureUtil in the hope of speeding up c g c collect tests \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113178622\n  
2230,     Don t silently swallow Errors \n   com/google/guava/issues/2254\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113152082\n  
2231,     Add ClassPath ResourceInfo asByteSource() and asCharSource(Charset) \n\nFixes    com/google/guava/issues/2228\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113094135\n  
2232,     This change replaces usages of static final fields on CharMatcher  e g  CharMatcher WHITESPACE  with the equivalent static factory method  e g  CharMatcher whitespace() \n\nThe change is being made so that we can remove the static final fields  primarily because they must be eagerly initialized  causing many implementation classes (which may be unnecessary) to be loaded  This is a significant performance problem on Android  Using methods allows implementation classes to only be loaded when actually needed  as well as matching our long-standing preference for factory methods over public fields \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113072117\n  
2233,     Add @CheckReturnValue to the entire c g c graph package (by adding it to package-info java) \nOpt-out certain APIs using @CanIgnoreReturnValue \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=113060183\n  
2234,     Publish j2objc cycle_whitelist txt to the public Guava repo \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112992186\n  
2235,     Add a comment about the use of non-short circuiting logical operators \n\nThis is identical to a comment in IntMath \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112913215\n  
2236,     Move @CheckReturnValue to package-info java so it applies to all of\ncom google common primitives  Annotate some methods with @CanIgnoreReturnValue \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112870925\n  
2237,     Move @CheckReturnValue to package-info java so it applies to all of\ncom google common base  Annotate some methods with @CanIgnoreReturnValue \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112870719\n  
2238,     Improve nullability checking for com google common hash \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112829088\n  
2239,     Some updates to Graph javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112818614\n  
2240,     This change replaces usages of static final fields on CharMatcher  e g  CharMatcher WHITESPACE  with the equivalent static factory method  e g  CharMatcher whitespace() \n\nThe change is being made so that we can remove the static final fields  primarily because they must be eagerly initialized  causing many implementation classes (which may be unnecessary) to be loaded  This is a significant performance problem on Android  Using methods allows implementation classes to only be loaded when actually needed  as well as matching our long-standing preference for factory methods over public fields \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112814971\n  
2241,     Change BaseEncoding toString() to return  withPadChar(\ =\ )  instead of  withPadChar(=)   This is more consistent with how the string literals are printed for the alphabet \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112723381\n  
2242,     Add FluentIterable concat methods  and make Iterable concat methods delegate to them \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112713876\n  
2243,     This change replaces usages of static final fields on CharMatcher  e g  CharMatcher WHITESPACE  with the equivalent static factory method  e g  CharMatcher whitespace() \n\nThe change is being made so that we can remove the static final fields  primarily because they must be eagerly initialized  causing many implementation classes (which may be unnecessary) to be loaded  This is a significant performance problem on Android  Using methods allows implementation classes to only be loaded when actually needed  as well as matching our long-standing preference for factory methods over public fields \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112708491\n  
2244,     Improve performance of nested calls to Iterables concat() and Iterators concat() *without* using any additional memory  This CL brings the runtime from O(D^3) to O(D^2)  where D is the nesting depth of concatenation \n\nIt appears this issue was previously discussed here:\n   google com/p/google-collections/issues/detail?id=151\n\nBut no work was done to fix it other than adding some javadoc to Iterators  While still not as fast as unnested concatenation (which is linear)  this seems fast enough that a javadoc warning is no longer necessary - especially considering the warning was only in Iterators and not in Iterables  even though both exhibited the cubic runtime and there are 13x more calls to Iterables concat() than Iterators concat() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112701959\n  
2245,     Add MediaType L24_AUDIO \n\nSee    com/google/guava/issues/2132\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112650740\n  
2246,     Shuffling from internal-only change \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112626786\n  
2247,     Add new MediaTypes  See    com/google/guava/issues/2132\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112612873\n  
2248,     Fix the tests in primitives for tryParse not to generate their own NPEs \n\n   com/google/guava/issues/2238\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112600511\n  
2249,     Add tests for    com/google/guava/issues/2238\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112410294\n  
2250,     Reduce the memory consumption of undirected graphs by storing the incident nodes explicitly in an  UnirectedIncidentNodes  class  rather than in a Set \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112273670\n  
2251,     Remove stray line \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112271827\n  
2252,     Automated g4 rollback of changelist 112075036 \n\n*** Reason for rollback ***\n\nBroke various tests  may not be handling second-level domains properly \n\n*** Original change description ***\n\nAllow terminal hyphens on domain parts \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112175053\n  
2253,     Document RFC 1123 host label digit prefix mandate\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112163962\n  
2254,     Update Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112099761\n  
2255,     Add Service-Worker \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112094082\n  
2256,     Graph java: clarifying the requirements around node/edge objects \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112082354\n  
2257,     Allow terminal hyphens on domain parts \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112075036\n  
2258,     Update Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=112015560\n  
2259,     Bump GWT to a non-snapshot dependency  so Guava is unblocked for release \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111953577\n  
2260,     Remove TODO  which is no longer an issue now that we re committing to GWT 2 8 0 \n\n   com/google/guava/issues/1999\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111852957\n  
2261,     Reformat \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111843256\n  
2262,     Quiesce the continuous integration builds a bit by running maven in batch mode (reducing chatter from download progress logging)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111811091\n  
2263,     Publishes the new StatsAccumulator addAll(Stats) and PairedStatsAccumulator addAll(PairedStats) methods \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111704390\n  
2264,     Add TODO to use ofElementsIn(expected) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111703041\n  
2265,     Simplify the implementation of RemovalNotification by extending AbstractMap SimpleImmutableEntry \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111636230\n  
2266,     Use getBytes(Charset) instead of getBytes(String) now that we require a new enough version of GWT \n(We require 2 8 0 and need at least 2 7 0 for this CL )\n\nAlso  replace our custom array assertion with Truth \n\n   com/google/guava/issues/2124\n   com/google/guava/issues/1999\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111624468\n  
2267,     Stop ignoring    sun com/bugdatabase/view_bug do?bug_id=6533203 in iterators now that the bug has been fixed in GWT for a while and the JDK for even longer \n(This is like CL 57745078 but for a different bug )\nAlso  go a step further  and remove support entirely for ignoring both bugs \n\nThis is safe to submit now that we require a version of GWT with the bug fix (2 8 0  though 2 7 0 would have been good enough) \n   com/google/guava/issues/1999\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111622620\n  
2268,     Go back to avoiding AssertionError(String  Throwable)  which isn t available in Gingerbread \n   android com/reference/java/lang/AssertionError html#AssertionError%28java lang String %20java lang Throwable%29\n\nThis rolls back CL 111609121  which AFAIK didn t break any tests but would have made broken tests run under Gingerbread throw NoSuchMethodError instead of the proper  descriptive AssertionError \n\nI had noted this compatibility issue previously but had dismissed it because we were not running our tests on Android at the time \n   com/google/guava/issues/1999#issuecomment-85579982\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111622300\n  
2269,     Remove unnecessary copy of Arrays copyOf now that we require a new enough version of GWT \n\n(taken over from kak s CL 83767705)\n\n   com/google/guava/issues/1942\n   com/google/guava/issues/1999\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111610384\n  
2270,     Automated g4 rollback of changelist 86212236 \n\n*** Reason for rollback ***\n\nWe now require GWT 2 8 0 \n\n   com/google/guava/issues/1999\n\n*** Original change description ***\n\nAvoid AssertionError(String  Throwable) constructor  which isn t available in version of GWT we use for Guava \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111609121\n  
2271,     Add a test case to GraphEqualsTest to make sure edge direction is handled properly in different graph types  Also  use EqualsTester so that we re additionally verifying that the hashcodes between equal graphs are equal \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111547711\n  
2272,     Use Collections newSetFromMap directly \nIt is available in GWT as of 2 7 0 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111510442\n  
2273,     Optimize PairedStatsAccumulator addAll(PairedStats)  If we update the xStats before we update sumOfProductsOfDeltas  instead of after  so that we use the new value of (values xStats() mean() - xStats mean()) instead of the old value  then we absorb two of the factors in the product  and save ourselves a multiplication and a division \n\nThis seems like a straight win  and also makes the code look more like that in the add(double  double) method \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111495396\n  
2274,     Change StatsAccumulator addAll(Stats) to use a more Knuth-like calculation for the mean  I claim that this is more accurate in the cases we care about \n\nWe know that this method is more accurate when adding a single value to an accumulator which has accumulated a large number of values (see Knuth for the background)  I believe that it is generally more accurate when we are adding a small number of values to a larger number  It may be less accurate when the two datasets are comparable in size  But I claim that we care about the former more than the latter \n\nAs a motivating example  think turning a double into a Stats of a single value  and then merging the Iterator<Stats> into a single Stats using this new method  The aggregation will happen hierarchically: typically  there will be a first phase on the mapper where we combine individual values on a given shard  and a second phase on the reducer where we combine values from the various shards  In the first phase  we\ re combining a lot of Stats each with a single value  so this is actually equivalent to the case where we\ re adding a single value  and the Knuth method is definitely more accurate  In the second phase  we can expect to be combining similarly-sized Stats instances from a large number of shards  so the process will be dominated by the case where we\ re adding one shard\ s values to many shards\  values  which is adding a small number to a larger number \n\nAnything where we\ re combining more than a few similarly-sized Stats instances will benefit from this change \n\nThis CL also makes a tiny tweak to add(double): instead of incrementing count and then branching on count==1  it branches count==0 and increments (or sets to 1) inside both branches  This is probably more readable (because it\ s easier to understand  are we starting from an empty accumulator  than  are we creating an accumulator with one value )  it improves the symmetry between the two methods  and there\ s an outside chance it could be faster (if the compiler/hotspot create better code for comparing to zero) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111495046\n  
2275,     Convert all @GwtIncompatible reason values to implementation comments \n(redo of CL 110542459)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111321187\n  
2276,     Add @GwtIncompatible annotations to top-level classes \n(redo of CL 110542265)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111314988\n  
2277,     Fix a tiny mathematical typo in LongMath \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111156014\n  
2278,     Add @since for RangeSet intersects \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=111072613\n  
2279,     Add @CheckReturnValue to BaseEncoding decode() and decodeChecked() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110989320\n  
2280,     Adds an addAll(Stats) method to add a Stats object to a StatsAccumulator  and corresponding methods for PairedStats and PairedStatsAccumulator \n\nThis is useful for merging statistics accumulated by multiple StatsAccumulators  One application is using a saved Stats object to restore the state of a StatsAccumulator \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110843746\n  
2281,     Add  intersects() to RangeSet \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110802499\n  
2282,     Provide information about which parameter we were passing null for and what values we used for the other parameters -- even if another exception was thrown \n(We already did this if no exception was thrown  thanks to CL 3405048 and CL 48801694) \n\n   com/google/guava/issues/2264\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110793874\n  
2283,     Release Futures whenAllComplete and whenAllSucceed as @Beta \nWe may still develop these further by integrating allAsList/successfulAsList into them \n\nRelated Guava request:\n   com/google/guava/issues/1421\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110712191\n  
2284,     Add deprecation notices to mutation methods on ImmutableRange Set Map  as per    com/google/guava/issues/2258 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110711365\n  
2285,     Automated g4 rollback of changelist 110542265 \n\n*** Original change description ***\n\nAdd @GwtIncompatible annotations to top-level classes \nOur previous policy was:  Look for a @GwtCompatible annotation  If it doesn\ t have one  then it\ s not GWT-compatible  \n\nBut maybe it\ s better to be explicit in both cases?\nIf nothing else  it might let us write tests that everything is annotated one way or the other  so we would have to actively annotate something wrongly to get the wrong outcome \nBut the real motivation is that this gets us a step closer to relying on the GWT compiler\ s @Gw   \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110556733\n  
2286,     Automated g4 rollback of changelist 110542459 \n\n*** Original change description ***\n\nConvert all @GwtIncompatible reason values to implementation comments \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110555733\n  
2287,     Convert all @GwtIncompatible reason values to implementation comments \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110542459\n  
2288,     Add @GwtIncompatible annotations to top-level classes \nOur previous policy was:  Look for a @GwtCompatible annotation  If it doesn\ t have one  then it\ s not GWT-compatible  \n\nBut maybe it\ s better to be explicit in both cases?\nIf nothing else  it might let us write tests that everything is annotated one way or the other  so we would have to actively annotate something wrongly to get the wrong outcome \nBut the real motivation is that this gets us a step closer to relying on the GWT compiler\ s @GwtIncompatible stripping internally (as we already do externally) instead of our own \n\nDo note  though  that I haven\ t fully annotated everything:\n- I\ ve skipped c g c base internal Finalizer  where I\ m not sure it\ s safe to depend on @GwtIncompatible or even to declare a special copy  (It has a test that forbids nested classes  but maybe I could put a copy in the internal package as a top-level class?)\n- I might have just missed stuff that was added since I first created the first version of this CL back in  like  2013  (This is actually part of my motivation for submitting it: I keep having to do enormous syncs with annoying merges  I want to stop carrying these changes around in a client )\n\nI\ ve left all of the reasons (that is  the annotation values) blank \nWe decided that this was OK in API Review \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110542265\n  
2289,     Remove @SuppressWarning for  CheckReturnValue  and  CanIgnoreReturnValue  in\nfavor of unused variables \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110486602\n  
2290,     Make @GwtIncompatible reason optional \nWhile there  redocument and reformat the file \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110482560\n  
2291,     Make AbstractFuture#done protected & rename it #afterDone to decrease chance of collision with existing subclasses \n\nafterDone() provides a more general (and probably overall better) solution than what was originally proposed in    com/google/guava/issues/1905\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110469383\n  
2292,     Add @SafeVarargs to Immutable List Set  of just to suppress the Eclipse warning \n\n(Taken over from lowasser s CL 101977679 )\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110376515\n  
2293,     Increase wait time \n\nI saw a failure with the current value  and I assume that it just didn t wait long enough:\n\n-------------------------------------------------------------------------------\nTest set: com google common util concurrent InterruptibleMonitorTest\n-------------------------------------------------------------------------------\nTests run: 16  Failures: 1  Errors: 0  Skipped: 0  Time elapsed: 0 447 sec <<< FAILURE!\ntestTryEnterIf_initiallyTrue(com google common util concurrent InterruptibleMonitorTest)  Time elapsed: 0 067 sec  <<< FAILURE!\njunit framework AssertionFailedError: expected:<true> but was:<false>\n\tat junit framework Assert fail(Assert java:47)\n\tat junit framework Assert failNotEquals(Assert java:283)\n\tat junit framework Assert assertEquals(Assert java:64)\n\tat junit framework Assert assertEquals(Assert java:71)\n\tat com google common util concurrent TestThread callAndAssertBlocks(TestThread java:145)\n\tat com google common util concurrent MonitorTestCase testTryEnterIf_initiallyTrue(MonitorTestCase java:186)\n\nThis is the first time I ve seen this test be flaky \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110375968\n  
2294,     Deprecate DoubleMath mean \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110342322\n  
2295,     A first pass at an optimized canDecode implementation \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110304545\n  
2296,     Add BaseEncoding canDecode(CharSequence) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110289529\n  
2297,     Suppress test under Android \nIt is occasionally slow  making GuavaAndroidTests flaky \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110259603\n  
2298,     Migrate callers of (Long|Int)Math checked(Add|Multiply) to the new saturated math methods if it appears that that is what they wanted \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110255813\n  
2299,     Write compare method in a way that won t look buggy to Error Prone \n\nThis change modifies Java compare methods that are using int casts from longs in\na usually broken way  Int casts in Java will truncate a long value and\nconsequently may alter the sign of the value being cast  Compare methods may be\nimplemented using a subtract  iff values are known not to be near overflowing\nlimits  When the values are longs you can get:\n\nint compare(MyLongHolder other)  \n  return (int)(other x - x);\n \n\nAs the cast won’t preserve the sign of the subtract it is buggy and can lead to\nbroken sort orders \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110206257\n  
2300,     Add LocalCache getOrDefault implementation \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110199123\n  
2301,     Automated g4 rollback of changelist 110160185 \n\n*** Reason for rollback ***\n\nMysteriously breaks tests \n\n*** Original change description ***\n\nMake AbstractFuture#done protected \n\ndone() provides a more general (and probably overall better) solution than what was originally proposed in    com/google/guava/issues/1905\n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110198153\n  
2302,     Warn not to call any default methods on the map returned by Cache asMap() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110193849\n  
2303,     Update deletion date for Sets newSetFromMap to December 2017 \n\nAlso switch all calls to it from other methods in Sets to use Collections newSetFromMap \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110188751\n  
2304,     Add saturated(Add|Subtract|Multiply|Pow) IntMath and LongMath\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110188732\n  
2305,     Document Predicate vs  Java 8 issues \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110185504\n  
2306,     To generate random hashable things  use Random instead of Object hash codes \n\nApparently Object hash codes are not particularly random on Gingerbread  under which we run our tests (though they\ re better by Marshmallow) \nPerhaps the  best  hash functions can deal with this  but we\ ve seen a few hash functions that sometimes generate more collisions than our tests permit \n\nThis made their tests flaky \n\nI couldn\ t identify any particular reason for the use of hash codes over Random \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110171885\n  
2307,     Make AbstractFuture#done protected \n\ndone() provides a more general (and probably overall better) solution than what was originally proposed in    com/google/guava/issues/1905\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110160185\n  
2308,     Make a slight tweak to the way we calculate means in StatsAccumulator  We pull out a variable for (value - mean) instead of computing it twice  This also means that we no longer need the old mean to compute the change in sumOfSquaresOfDeltas  we only need the new mean  so we can update mean directly instead of storing nextMean  We end up with the same number of temporary variables and the same calculation but one subtraction fewer and (perhaps more importantly) we do the computations in a more natural order \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110147656\n  
2309,     Skip JUnit 4 test under Android \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110097819\n  
2310,     Update Guava s package-info java files to point at github instead of googlecode \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110088488\n  
2311,     Add package-info java for com google common graph \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110041898\n  
2312,     Hardcode the expected value to work around Android UTF_16 bug:\n   google com/p/android/issues/detail?id=196848\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110028408\n  
2313,     Adds to PairedStats toByteArray() and fromByteArray() to facilitate (faster) serialization \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110027472\n  
2314,     Prepare Stats et al and Quantiles for beta release in Guava 20 0 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110013555\n  
2315,     Open source com google common graph into Guava \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110008126\n  
2316,     Update README to reference 19 0 as the latest release \n\nAlso update the current snapshot version from 19 0-SNAPSHOT to 20 0-SNAPSHOT \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=110006844\n  
2317,     Skip cases in which checkedMultiply() fails on Gingerbread (because of an Android bug that has since been fixed) \nI would ideally also be unsuppressing the test now  but it s sometimes slow enough to be flaky  so I m leaving it suppressed \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109997357\n  
2318,     Upgrade Guava to use Truth 0 28 for its tests \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109995862\n  
2319,     Re-suppress testDivNonZeroExact  which  like testDivNonZero  is too slow \nIt s been flaky since I turned it back on \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109911520\n  
2320,     Instead of skipping testDivNonZeroExact entirely under Android  skip only the problematic cases \nAndroid bug:    google com/p/android/issues/detail?id=196555\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109800696\n  
2321,     Document that bug affecting LongMathTest testDivNonZeroExact() has been fixed in recent versions of Android \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109800032\n  
2322,     Suppress testGoodFastHash32 under Android  as it is flaky there \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109792217\n  
2323,     Remove type parameters from IterableSubject  MultisetSubject  and MultimapSubject \n\nSee    com/google/truth/issues/192\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109722143\n  
2324,     Document that regex bug has been fixed in recent versions of Android \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109689421\n  
2325,     Better documentation for an Android test suppression \nMatcher probably isn t intended for cases in which the subject string is being mutated \nWe probably don t need to test this case at all  but I ve kept it around for now and just explained why it s kind of unfair to begin with \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109688628\n  
2326,     Shuffling from internal-only change \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109621456\n  
2327,     Preparation for j2cl in com/google/common/collect|math|primitives \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109604218\n  
2328,     Remove support for deprecated GWT Dev Mode (but continue to support Super Dev Mode) \n\nRelated:    com/google/guava/issues/1328\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109588917\n  
2329,     Update README to reference 19 0-rc3 as the latest release candidate \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109442368\n  
2330,     Add @Beta annotation to new subSet/subMap methods \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109435892\n  
2331,     Add subSet and subMap methods to Sets and Maps (respectively) which use Ranges\nto construct the views \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109360209\n  
2332,     Delete InputSupplier and OutputSupplier from Guava \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109306705\n  
2333,     Remove TODO  We re satisfied with the current behavior \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109112840\n  
2334,     Ensure the correct removal notification is published \n\nFixes #2101 \n\nPull request #2122 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=109009756\n  
2335,     Add @CheckReturnValue to more BaseEncoding APIs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=108994823\n  
2336,     Fix calls to contains(Object) and get(Object) that pass a value of apparently the wrong type \nTighten up some generics in other cases to make the type  which was correct after all  look more correct \n\nBUGS:\n\nAbstractBiMapTester:\n- Fix inv entrySet() contains(   ) check  which was using the forward entry instead of the reverse \n- Fix getMap() get(v) call to be an inv get(v) call \n- Use |reversed| instead of |entry| consistently for clarity \n\nTypeToken:\n- Call map get(K) instead of map get(TypeCollector) \n(Presumably this was just an optimization and not necessary for correctness?)\n\nSIMPLIFICATIONS:\n\nTypeResolver:\n- forLookup always returns a (nullable) TypeVariableKey  Declare that return type instead of plain Object \n(benyu@: I feel like we may have talked about this  with your expressing a preference for the Object type  But I can find no record of the discussion  so I could be making that up  If you do prefer Object  I won t push for the change )\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=108994208\n  
2337,     Restore import for java util Formatter \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=108345794\n  
2338,     Remove import for java util Formatter since it s needed only for the javadoc \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=108184450\n  
2339,     Adds documentation to various Sets and Maps factories to discourage their usage \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=108181363\n  
2340,     Add toString() overloads for all of the singleton enums in c g common primitives\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=108004576\n  
2341,     Some prep for making SleepingStopwatch extensible someday \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107961123\n  
2342,     Add a third AtomicHelper strategy to abstract future\n\nThis should only be used when getDeclaredField(String) fails (used by AtomicReferenceFieldUpdater)   afaik classes are always allowed to reflect on their own private fields so this should never happen   But some Samsung 5 0 x android devices have bugs in the reflection APIs that can cause this to happen   As yet reproducing such failures has proven elusive  it is thought that this failure mode may depend on address layout randomization or possibly a flaky bug in the ART compiler \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107939645\n  
2343,     Update Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107852605\n  
2344,     Another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107780748\n  
2345,     Fixes missing parenthesis in javadoc for addCallback in Futures java\n\nThe current example does not compile \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107776271\n  
2346,     Suppress another flaky test \nI ve seen 3 failures in the past 2 weeks \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107682920\n  
2347,     Implement FarmHash s Fingerprint64 in Java \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107440675\n  
2348,     Explain relationship with juf Function \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107409616\n  
2349,     Document the behavior of transform(|Async) if the input fails \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107384495\n  
2350,     Revise CL 103553690 s scaretext  and propagate it to Cache \n\nAlso  reformat to 100 characters where not already done \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107269241\n  
2351,     Suppress another test that s flaky on Android \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107265666\n  
2352,     Start running the tests for guava-testlib under Android \nThis revealed the usual minor problems and also a new test bug in ForwardingWrapperTesterTest: The sample buggy forwarding class was buggy in *two* ways instead of the intended one  Not only did it forward to the wrong method in one case  but it also reversed the order of parameters in all cases  Android happens to test its methods in a different order than the JVM  so it detects the reversed parameters first  I ve fixed this by fixing the parameter order \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107246813\n  
2353,     Remove no-longer-needed suppression method \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107200850\n  
2354,     Implement CharSource asByteSource(Charset) \n\n   google com/document/d/12AiHmmoOuMFposUQI9nyVBUr7-pZcsiKkDj5sm2Qwvo/edit\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107071921\n  
2355,     Add warning/scare text to MD5 and SHA1 hash functions \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107007414\n  
2356,     Make CycleDetectingLockFactory lockStateChanged static \nFixes #2213 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107001430\n  
2357,     Make MultisetNavigationTester totalSize static \nFixes #2214 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=107000422\n  
2358,     Make methods in CycleDetectingLockFactoryBenchmark static\nFixes #2215 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106999688\n  
2359,     Make some methods in guava-tests static \nFixes #2216 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106999599\n  
2360,     Suppress another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106983717\n  
2361,     Reduce Bloom filter size again to reduce (eliminate?) flakiness \n(In fact  CL 106839287  while it claims to remove a value that\ s  no longer meaningful   seems to have made the flakiness worse  This fits with the comments on the CL that suggest it has effects -- specifically  an increase in wall time  Since that CL  this test has been failing 100% of the time instead of just the vast majority of the time  though it\ s possible that the timing is a coincidence )\nThis test has also been causing problems for our coverage build:\n\n[ \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106949319\n  
2362,     Fix lastIndexOf reference in BooleansTest \n\nSaw this when looking through [  Looks to be a copy/paste error?\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106864923\n  
2363,     Suppress new CollectionIncompatibleType Error Prone check by casting\nincompatibly-typed argument to query methods in generic collection types \nThis will enable us to make this pattern an error in [   preventing\nfuture occurrences of this bug \n\nREVIEWERS TAKE NOTE: We are *not* fixing this bug   Fixing it requires making\na behavioral change  and we need your team to assume any risks associated\nwith that  Please approve this CL  so we can enable the new compiler error\nand prevent future occurrences of this bug \n\nBackground:\n\nVarious generic collection types have methods that take Object rather than the type parameter you would expect  e g  Collection#contains  Consider a\nCollection<String>   If someone invokes contains() on that collection and\npasses in an argument of type Integer  it can never return true because the\nCollection cannot contain any Integers \n\nThis CL changes places where these methods are called with an incompatible\ntype by casting the argument to the declared type of the method  such as\nObject or Collection<?>   **This does not fix the bug **  It is\nsemantically-equivalent code that bypasses the Error Prone check so that the\ncode will continue to compile after we enable the check in the compiler \nFixing the bug mechanically is not feasible because the fixes are too complex \nbut we want to prevent more instances of this bug from entering the codebase \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106759178\n  
2364,     Eliminate some CollectionIncompatibleType errors that were suppressed by CL 106598613 \nThe errors are harmless in this case  but we might as well make sane calls \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106759168\n  
2365,     Suppress new CollectionIncompatibleType Error Prone check by casting\nincompatibly-typed argument to query methods in generic collection types \nThis will enable us to make this pattern an error in [   preventing\nfuture occurrences of this bug \n\nREVIEWERS TAKE NOTE: We are *not* fixing this bug   Fixing it requires making\na behavioral change  and we need your team to assume any risks associated\nwith that  Please approve this CL  so we can enable the new compiler error\nand prevent future occurrences of this bug \n\nBackground:\n\nVarious generic collection types have methods that take Object rather than the type parameter you would expect  e g  Collection#contains  Consider a\nCollection<String>   If someone invokes contains() on that collection and\npasses in an argument of type Integer  it can never return true because the\nCollection cannot contain any Integers \n\nThis CL changes places where these methods are called with an incompatible\ntype by casting the argument to the declared type of the method  such as\nObject or Collection<?>   **This does not fix the bug **  It is\nsemantically-equivalent code that bypasses the Error Prone check so that the\ncode will continue to compile after we enable the check in the compiler \nFixing the bug mechanically is not feasible because the fixes are too complex \nbut we want to prevent more instances of this bug from entering the codebase \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106729548\n  
2366,     Fix buggy test identified by CollectionIncompatibleType \nThe test was calling get(class) instead of get(typeToken) \nThe test still passes  since it was expected a null return value -- exactly what it gets for a key that isn t present \nI ve also added containsKey() and entrySet() contains() checks to verify that the null value really is present \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106703971\n  
2367,     Improve docs \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106684213\n  
2368,     Reduce size of  large bloom filters  test   it\ s causing OOMEs\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106629533\n  
2369,     Suppress new CollectionIncompatibleType Error Prone check by casting\nincompatibly-typed argument to query methods in generic collection types \nThis will enable us to make this pattern an error  preventing\nfuture occurrences of this bug \n\nREVIEWERS TAKE NOTE: We are *not* fixing this bug   Fixing it requires making\na behavioral change  and we need your team to assume any risks associated\nwith that  Please approve this CL  so we can enable the new compiler error\nand prevent future occurrences of this bug \n\nBackground:\n\nVarious generic collection types have methods that take Object rather than the type parameter you would expect  e g  Collection#contains  Consider a\nCollection<String>   If someone invokes contains() on that collection and\npasses in an argument of type Integer  it can never return true because the\nCollection cannot contain any Integers \n\nThis CL changes places where these methods are called with an incompatible\ntype by casting the argument to the declared type of the method  such as\nObject or Collection<?>   **This does not fix the bug **  It is\nsemantically-equivalent code that bypasses the Error Prone check so that the\ncode will continue to compile after we enable the check in the compiler \nFixing the bug mechanically is not feasible because the fixes are too complex \nbut we want to prevent more instances of this bug from entering the codebase \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106628443\n  
2370,     Fix deletion date for Objects APIs to be two years since the release of 18 0 \n\n   github io/guava/releases/18 0/api/diffs/changes/com google common base Objects html\n   com/google/guava/wiki/ReleaseHistory\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106615381\n  
2371,     Flag another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106606046\n  
2372,     Adding SOAP 1 2 media type \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106586330\n  
2373,     Pick a clearer word to describe |target| \n\nFixes #2211 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106549164\n  
2374,     Another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106508082\n  
2375,     Suppress more flaky tests  plus a few that I m guessing will also be flaky (because they have nested loops over our integer candidates) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106498617\n  
2376,     Another another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106438348\n  
2377,     Yet another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106426307\n  
2378,     Re-apply wildcard translation fix \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106415574\n  
2379,     Suppress the MapMaker equivalent of the Cache test suppressed in CL 106397380 \nThe test is flaky \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106404785\n  
2380,     Revert unintended Objects->MoreObjects migrations \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106403843\n  
2381,     Another flaky test \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106402571\n  
2382,     Migrate users from c g c base Objects to MoreObjects \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106401177\n  
2383,     Suppress the main flaky tests we ve seen since running Guava-Android tests \nThis probably isn t a complete list  but it s a good start \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106397380\n  
2384,     Replace one use of String split() with a Splitter to reduce\nmemory allocations \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106330171\n  
2385,     Rename SuppressUnderAndroid to  AndroidIncompatible   since we treat it just like GwtIncompatible: stripping  not @Suppress-style suppression \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106329942\n  
2386,     Eliminate the hacks that we needed in order to use ClassValue and Unsafe on Android \nNow we tell Proguard to ignore those classes (since Unsafe is actually available and both have fallbacks anyway) \n\n(partial rollback of CL 101034385)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106320897\n  
2387,     Suppress  non-varargs call of varargs method with inexact argument type for last parameter  \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106315392\n  
2388,     Automated g4 rollback of changelist 105235264 \n\n*** Reason for rollback ***\n\nIt turns out this doesn t fix the Guava issue  As such  I think it s probably preferable to keep the count != 0 check as it prevents unnecessary work when there are no entries in the segment  I have another fix in progress that seems to work \n\n*** Original change description ***\n\nAttempt to address    com/google/guava/issues/2131 by removing the if (count != 0) check \n\n***\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106181279\n  
2389,     Port a small optimization made to a copy of ByteStreams upstream \n\nThe small optimization preallocates the ByteArrayOutputStream \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106169239\n  
2390,     Stop stripping Error Prone @ForOverride from Guava \n(We still need to strip @LazyInit  which hasn t yet been released publicly )\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106159338\n  
2391,     Have Cache stats() warn that stats might be untracked (zero)  Addresses Guava\nissue #2178 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106154194\n  
2392,     Fix RegularContiguousSet intersection to handle singleton results \n\nPull request from perceptron8 <perceptron8@gmail com>\n   com/google/guava/pull/2197\n\nFixes    com/google/guava/issues/2196\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106153276\n  
2393,     Warn about stringConverter() s very surprising behavior for Longs  Ints and Shorts \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106139124\n  
2394,     Link to wiki \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=106007357\n  
2395,     Improve Throwables propagate javadoc\n\nThe mention of the type system is misleading  and a word was missing \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105980357\n  
2396,     Fix Iterables removeIfFromRandomAccessList to handle Lists for which set() throws IAE (for example  if the list disallows duplicate elements) \n\nFixes Guava issue #1596\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105826920\n  
2397,     Add a note about finding the first non-null element in an iterable and with varargs \n\nRelated to    com/google/guava/issues/384\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105802942\n  
2398,     Make warning warningy  Fixes Guava issue #2153 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105800506\n  
2399,     Update the comment link for the Apple Passbook media type \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105787155\n  
2400,     Deprecate FluentIterable of(E[ ) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105753905\n  
2401,     For public Guava only  rely on the GWT compiler s built-in @GwtIncompatible stripping instead of our custom stripping \nThe custom stripping dates from the days before GWT 2 6 0 added it to the compiler:    gwtproject org/release-notes html#Release_Notes_2_6_0_RC1\nThis change has been possible for a while  since Guava has required GWT 2 6 1 since Guava 18  but we hadn t had the motivation \nNow we do: This lets us avoid checking the stripped sources into Github  which lets us avoid mixing stripped and handwritten sources  which lets us simplify our MOE inverse mappings \nInternally  we will continue to rely on the custom stripper for now \n\nMechanically  all we re doing is:\n- Remove all the stripped sources from public Guava (by removing the build rules that put them into Guava) \n- In Maven/Ant  copy *all* GWT-compatible sources  whether fully GWT-compatible or not  into our GWT resources  Those that aren t fully GWT-compatible either have supersource emulations (in which case the main sources will be ignored under GWT s usual supersource mechanism  as they are now) or simply require the built-in @GwtIncompatible stripping (in lieu of the previous custom stripping) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105596491\n  
2402,     Add tests that demonstrate the difference between FI from(E[ ) and FI of(E[ ) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105513154\n  
2403,     Reformat much of util concurrent \n\nI squeezed in a few other changes:\n- for (;;) => while (true)  since our formatting rules require(?) weird formatting for the former\n- removal of some  @throws NullPointerException if x is null  clauses  since that is our default policy\n- adding    to some if() statements or loops or something\n- maybe other things I forgot?\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105508573\n  
2404,     Update public suffix list \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105479296\n  
2405,     Don t strip the @GwtIncompatible from Guava \nDoing so will cause problems if we change how we generate GWT supersource \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105328892\n  
2406,     Remove @GoogleInternal from GWT emulation of ForwardingSortedMultiset \nForwardingSortedMultiset itself has been GWT-compatible since CL 43412779 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105327321\n  
2407,     Emphasize the differences between of(E[ ) and from(E[ ) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105322014\n  
2408,     Cache Ordering natural() nulls First Last ()  since those are very commonly used     com/google/guava/issues/1451\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105247018\n  
2409,     Attempt to address    com/google/guava/issues/2131 by removing the if (count != 0) check \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105235264\n  
2410,     Link from SettableFuture to AbstractFuture  and do some more rewriting and reformatting \nMotivation:    com/google/guava/pull/2184\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105234717\n  
2411,     Address    com/google/guava/issues/1543 by explicitly despecifying evaluation order \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105077540\n  
2412,     Rewrite Iterables toArray to work correctly in the presence of concurrent modification (   com/google/guava/issues/1558) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105071914\n  
2413,     1  Omit sun security * methods from our Android tests \nThat package isn t available there (at least at compile time  presumably at all) \n\n2  Accept NPE instead of IAE when given an empty key \nI didn t dig enough to figure out whether this was an Android bug or a spec ambiguity \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105070193\n  
2414,     Whitespace changes from MOE release?\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=105015253\n  
2415,     Make MutableClassToInstanceMap serializable \n\nFixes Guava issue #1437 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104998043\n  
2416,     Remove more possible static-init deadlocks (   com/google/guava/issues/1977) \n\n- ImmutableSortedMultiset: I couldn t figure out a way for this to actually deadlock  but I figure it s best for it to follow the pattern of the others \n- ImmutableSortedSet: This might be able to deadlock if one thread creates a RegularImmutableMap (which then calls into RegularImmutableSortedSet and then ImmutableSet) while another initializes ImmutableSortedSet (which then calls into RegularImmutableSortedSet) \n- ImmutableTable: This might be able to deadlock if one thread GWT-deserializes a SparseImmutableTable (which then calls into ImmutableTable) while another initializes ImmutableTable (which calls into SparseImmutableTable) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104995935\n  
2417,     Upgrade local variables for Iterables filter and Iterators filter to indicate the input predicate keeps the result (not filter out elements from result) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104528163\n  
2418,     Update README to include link to guava-testlib Javadoc and to reference 19 0-rc2 as the latest 19 0 release candidate \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104437358\n  
2419,     Bump version of maven-dependency-plugin \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104298531\n  
2420,     Fixes to FluentIterable:\n-add from(E[  elements) (unmodifiable)\n-open source of()\n-open source of(E  E   )\n-soon-to-deprecate of(E[ ) (modifiable)\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104226690\n  
2421,     Delete AbstractFuture newCancellationCause() \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104201894\n  
2422,     Test rejectionPropagatingExecutor under GWT \nThis would have caught the bug since fixed in CL 104101156 \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104199812\n  
2423,     Update the Public Suffix List \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104153251\n  
2424,     Move many implementations out of Futures java (   com/google/guava/issues/2091) \nMostly I ve moved them to new classes  but I ve also moved rejectionPropagatingExecutor to MoreExecutors (unmodified except for a new null check) \n\nThis also revealed that the GWT copy-pasted catching/catchingAsync code was missing use of rejectionPropagatingExecutor  This is now fixed \n\nAlso  reformat the moved code \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104101156\n  
2425,     Presize the ArrayList/LinkedHashMap to which ListFuture/MapFuture adds its final results  See [  for motivation (ignore the fact that I accidentally used List#newArrayListWithExpectedSize there    oops!) \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=104098308\n  
2426,     Make TreeRangeSet Serializable \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103974562\n  
2427,     Disable cancellation causes by default and make them enableable via a system property \n\nAlso  remove protected from newCancellationCause   I ll eliminate in a followup \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103957793\n  
2428,     Remove unnecessary string literal concatenation \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103863840\n  
2429,     Test the current propagation of cancellation (but non-propagation of interruption) from the input Future to the transformed Future \nArguably we should test this for methods like catching+catchingAsync and perhaps others  Maybe we already do; these tests are kind of a mess:    com/google/guava/issues/2091\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103769878\n  
2430,     Add copy/paste for Gradle projects that want to use Guava \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103556414\n  
2431,     slight error message enhancement requested in Guava bug #2158\n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103386220\n  
2432,     Point users directly to catchingAsync instead of requiring them to read the withFallback deprecation advice  too \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103323620\n  
2433,     Open source the HMAC hashing libraries (@since 20 0) \nClone the underlying Mac instance (if possible) during newHasher() invocations \n-------------\nCreated by MOE:    com/google/moe\nMOE_MIGRATED_REVID=103098597\n  
2434,     Try to uncorrupt the Converter javadoc \n   [  com/5619060859994112\n\nIf I ever interview elsewhere in the future and they ask what the hardest\ntechnical challenge I ever faced was  I plan to say  getting a code example to\nshow up right in Javadoc   Unless they want an example where I was ultimately\nsuccessful \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102877432\n  
2435,     Deprecate Hasher#hashCode()  implementations of this method return a hashCode of the Hasher object itself and not the hashed data  deprecating this would help warn users of making this mistake \n\nSee [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102665096\n  
2436,     Fix two javadoc typos in Forwarding[Loading Cache ( delegete  ->  delegate ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102646747\n  
2437,     Ensure that ByteStreams skipFully/skipUpTo don t skip more bytes than remain in the stream \n\nThis is a horrible thing that is possible with FileInputStream in JDK7  despite that it violates the contract of InputStream skip  The solution (which we were already doing in our method for counting a stream via skip) is to never ask to skip more bytes than the stream reports as available() \n\nThis does unfortunately change skipFully to skip by reading when the InputStream always returns 0 from available() (the default behavior if it isn t overridden)  but as far as I can tell it s necessary to ensure correct behavior \n\nThis issue is causing test failures under JDK7 with the recent change to the behavior of ByteSource slice \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102586216\n  
2438,     Allow slicing a ByteSource starting at an offset that is >= the source s total size \n\nIn this case  the sliced source will be empty  Previously  the call to slice() would succeed but an exception would occur when the user attempted to read the returned source  There is precedent for this behavior: FileChannel/SeekableByteChannel allow setting the channel s position beyond the end of the file  in which case reads return EOF \n\nThis is a change to existing behavior  but I think it s probably a good change to make:\n\n- Previously  it was unspecified what happens if offset is >= source size  Now it s specified \n- Previously  a call to slice could succeed but return an (effectively) invalid ByteSource that would always throw \n- The override of ByteArrayByteSource slice is currently using this behavior  because I thought that was the behavior that the normal slice implementation was already using  I could change that  but I think this is preferable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102276980\n  
2439,     Remove unnecessary  unused  suppressions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102260279\n  
2440,     Escaped instance of symbol  \   within a url so that more apps detect the full URL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102250495\n  
2441,     Mark ClassPath as compatible with j2objc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=102170255\n  
2442,     Make Splitter on(String) redirect to Splitter on(char) if the String has one character \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101985625\n  
2443,     A few small improvements to ImmutableSet method docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101956976\n  
2444,     Advertise Converter from() a little better  for Java 8 users \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101721565\n  
2445,     Avoid boxing ints in ConcurrentHashMultiset Preconditions checks\n\nThe preconditions checks for occurrences are boxing int values for the format\nstring  This has shown up in profiling as we are using this collection quite\nheavily  Switch from preconditions formatting to basic if statement to avoid boxing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101702798\n  
2446,     Use MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders \n(Retry of CL 100504590  which was rolled back in CL 100578593  The problematic target has been fixed )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101478691\n  
2447,     Roll back most of the rest of CL 100047098 (the javatests/    parts  since I got java/    in 100850485) \n\nLeave a few tests suppressed:\n- the  relies on assumptions about OpenJDK  Maps tests\n- TreeMultisetTest#testElementSetBridgeMethods\n- ForwardingMultisetTest#testElementSet\n- ImmutableTableTest#testOverflowCondition\n\n*** Reason for rollback ***\n\nNested test classes now work under Android: [ \n*** Original change description ***\n\nSpray @SuppressUnderAndroid on everything related to suite builders and nested test classes \nAlso:\n- Work around Android toArray() bug in UnmodifiableCollectionTests \n- Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest java / ListsTest java  The reference impedes the import stripper \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101455645\n  
2448,     Roll back the eventbus portion of CL 100292134 \n\n*** Reason for rollback ***\n\nNested test classes now work under Android: [ \n*** Original change description ***\n\nSuppress tests under Android \n- ByteStreamsTest testNewDataOutput_writeChars may show a legitimate bug  whether in our code or in the Android library \n- CloserTest testCreate looks up the JDK version  We should update this to look up the Android version if applicable \n- Android seems to have trouble with:\n  - nested test classes\n  - test classes without default constructors (which are necessarily constructed in suite() methods) \n\nI ve also improved some failure messages in ByteStreamsTest \n\n(Not   \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101455589\n  
2449,     Clarify why we re logging a specific failure \n\n   com/google/guava/issues/2134#issuecomment-133094389\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101240012\n  
2450,     (These changes apply ONLY to our Google-internal Android-specific copy of Guava )\n\n- Hackily disable use of Unsafe and ClassValue as a temporary measure \n- Strip comment reference to @ForOverride  which was impeding import stripping \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101034385\n  
2451,     Convert much of Guava to Truth by using Refaster \n\nThe motivation was my wish for a better ThrowablesTest error message in    com/google/guava/issues/2130 (though I m pretty confident that the problem there is \\n vs  \\r\\n) \nI made a lot of changes  but I left a lot undone  In particular  I avoided most of the collection assertions  since we often want to test specific collection methods  e g   we don t necessarily want get() to be rewritten to containsKey() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101020845\n  
2452,     Internally rewrite LexicographicalOrdering to accept a Comparator \n\nThis is just to make it easier  in Java 8  to write a Comparators lexicographical(Comparator) that need not go via Ordering \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=101014892\n  
2453,     Import Animal Sniffer annotation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100960079\n  
2454,     Update public suffix list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100855861\n  
2455,     Automated (partial) g4 rollback of changelist 100047098 \n(only the testlib parts  and excluding UnmodifiableCollectionTests  where we still need a workaround for Android s toArray() bug)\n\n*** Reason for rollback ***\n\nNo longer a problem now that we put test infrastructure in a separate dex (CL 100842219) and suppress searching for tests in that dex (CL 100849889) \n\n*** Original change description ***\n\nSpray @SuppressUnderAndroid on everything related to suite builders and nested test classes \nAlso:\n- Work around Android toArray() bug in UnmodifiableCollectionTests \n- Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest java / ListsTest java  The reference impedes the import stripper \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100850485\n  
2456,     Test that the Future returned by schedule() returns the correct value \n\n   com/google/guava/issues/2133\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100686478\n  
2457,     Fix SlicedByteSource sizeIfKnown() to work in the case where offset + length > Long MAX_VALUE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100584971\n  
2458,     Automated g4 rollback of changelist 100504590 \n\n*** Original change description ***\n\nUse MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100578593\n  
2459,     Do intelligent sizing in ImmutableMap Builder put(Iterable<Entry>) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100573858\n  
2460,     Discourage use of CheckedFuture \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100572172\n  
2461,     Fix a typo in an identifier in FreshValueGenerator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100543465\n  
2462,     Use MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100504590\n  
2463,     Fix ByteArrayByteSource slice to handle the case where offset + length > Long MAX_VALUE \n\nFixes    com/google/guava/issues/2127\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100485800\n  
2464,     Loosen up our nefarious Entry tests to permit an exception so long as the nefarious entry can t harm the underlying collection \nIf a nefarious Entry really wants to throw an exception  we can t stop it  since it could also do it from getKey() or getValue() \n\nThis fixes the test under Android \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100300382\n  
2465,     Suppress tests under Android \n- I ve suppressed nearly everything that might be calling Type equals()  At some point  we can try to figure out whether we can interoperate with Android s Type equals() just as we do with JDK7 s  Or we can at least be more surgical in our suppressions; this CL sprays them everywhere \n- I ve suppressed a bunch of URLClassLoader-using tests  I m not sure that custom URLClassLoaders make a lot of sense on Android \n- I ve suppressed some suite() methods  as I haven t managed to get the test-suite builders working under Android \n- ForwardingObjectTesterTest may show limitations of ForwardingObjectTester under Android  or it may a sign that we just need to call setAccessible or something  But since ForwardingObjectTester is just a package-private testing utility  I haven t dug into it \n- I ve commented a test in RateLimiterTest that may fail for similar reasons in newer versions of Android \n\nA general point about c g c reflect: Reflection is slow on Android  so it s unlikely that users will be making significant use of this package  For this reason  I don t see further work on Android testing of the package as a priority \n\n(Note that we don t actually run these tests on Android at HEAD  This will be changing soon )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100300236\n  
2466,     Whoops  FluentIterable cycle() does have a decent Stream equivalent when the source is something with a stream() method \n\nAnd I even tested this \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100298931\n  
2467,     Document why we re using a custom annotation instead of Android s built-in @Suppress \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100295547\n  
2468,     Suppress tests under Android \n- ByteStreamsTest testNewDataOutput_writeChars may show a legitimate bug  whether in our code or in the Android library \n- CloserTest testCreate looks up the JDK version  We should update this to look up the Android version if applicable \n- Android seems to have trouble with:\n  - nested test classes\n  - test classes without default constructors (which are necessarily constructed in suite() methods) \n\nI ve also improved some failure messages in ByteStreamsTest \n\n(Note that we don t actually run these tests on Android at HEAD  This will be changing soon )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100292134\n  
2469,     Fix    com/google/guava/issues/2125 by having all the AbstractService delegate classes forward their toStrings() to their outer impls \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100274992\n  
2470,     - Use newFastestQueue in ConsumingQueueIterator so that we get ArrayDeque instead of LinkedList on the server \n- Use newFastestQueue in BinaryTreeTraverser  bringing it one step closer to GWT compatibility \n- Rename newFastestQueue to newFastestDeque \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100127987\n  
2471,     Remove unneeded  emulated=true  to fix open-source GWT tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100126746\n  
2472,     Fix an ancient bug in Iterators cycle: Once we spawn a second iterator  we shouldn t remove from the first one \nAndroid caught this bug (by returning true from hasNext() rather than by throwing ConcurrentModificationException as the new test does) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100115203\n  
2473,     Make EvictingQueue GWT compatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100063347\n  
2474,     Makes sure guava only uses public GWT APIs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100051360\n  
2475,     Spray @SuppressUnderAndroid on everything related to suite builders and nested test classes \nAlso:\n- Work around Android toArray() bug in UnmodifiableCollectionTests \n- Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest java / ListsTest java  The reference impedes the import stripper \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100047098\n  
2476,     Give MapMaker the same workaround as Cache for Android s concurrency-unsafe toArray() implementation \nThe fixes the corresponding Android test for MapMaker \nAlso  use that implementation for values() (for which we have no test  but it looks likely to be vulnerable  too) \nFinally  include an android com link in case the shutdown of Google Code invalidates the existing bug link \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=100037556\n  
2477,     Reformat with google-java-format (a few hand corrections necessary) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99979179\n  
2478,     Finish explaining the Stream equivalents \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99831803\n  
2479,     Eliminate our custom emulations of java nio charset Charset and java nio charset StandardCharsets \nThe classes will be including in GWT itself in the next release \nTo get our code to compile  we must change to build against a GWT snapshot \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99780060\n  
2480,     Update FluentIterable to explain its relationship with Stream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99760803\n  
2481,     Suppress tests on Android \n- BigInteger and BigDecimal appear to be buggy on Android (at least Gingerbread  where I m testing now  since we claim to work with it) \n- Some c g c math utilities appear to be failing there  presumably because of other Android bugs  but I suppose it s conceivable that there s something wrong with our code  Ideally we will investigate further at some point  perhaps after testing on newer versions of Android \n\nAlso  check in some of the failure-message improvements I put together while debugging \n\n(Note that we don t actually run these tests on Android at HEAD  This will be changing soon )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99743836\n  
2482,     Suppress tests under Android:\n- EasyMock  since class extension doesn t work there\n- BloomFilter tests where Android runs out of memory\n- a couple other tests where Android appears to disagree about String format rounding\n\n(These tests don t actually run on Android at HEAD yet  but they will soon )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99728601\n  
2483,     Update public suffix list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99624314\n  
2484,     Loosen the tests around the regex: It s OK for the regex to match something that turns out to be invalid \nThis makes the test pass on Android \n\nAlso  add debugging output for when the test does fail \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99605586\n  
2485,     Migrate from EasyMock to Mockito \nThis lets the test work on Android \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99598924\n  
2486,     Work around Android toArray() bug by doing what we arguably should have done in the first place -- calling containsElementsIn(   ) inOrder() instead of converting both arguments to List \n\n   google com/p/android/issues/detail?id=72073\n   android com/98929\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99598194\n  
2487,     Provide concurrency-safe toArray() implementations for Android VMs (at least Gingerbread  probably others) that need it \nThis fixes LocalCacheTest testExpand_cleanup on Android:\n[ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99595440\n  
2488,     Add notes about circular buffer to EvictingQueue javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99585760\n  
2489,     - Stop manually stripping @MediumTest  MOE has stripped it automatically for a while  Remove end-of-line comments that were interfering with stripping in this particular case \n- Strip @Flaky with strip_line instead of begin_strip/end_strip \n\nBoth of these are minor simplifications  and that\ s nice  But also   \n\nI ran into a bad interaction between (I think) MOE\ s  strip elements with this annotation  stripper\ s heuristics and its comment stripper  I started stripping @MediumTest-annotated attributes from a special internal  Guava for Android   MOE\ s annotation heuristics appear to strip the end_strip comment but not the begin_strip comment  I guess that it\ s stripping everything from the first method annotation -- surely the right thing to do but a pain in this case  This causes MOE to strip everything from there to the end of the file  As it turns out  there\ s not much left to strip  But it strips the closing    so that fouls everything up \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99569931\n  
2490,     Fix for\nTypeToken[Map<?  String>  getSubtype(ClassToInstanceMap class)\n\nto return TypeToken[ClassToInstanceMap<String> \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99527025\n  
2491,     Mark MoreExecutors DirectExecutorService and decorator classes final to prevent Mockito spy usage\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99526523\n  
2492,     Javadoc update to reflect generic type change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99506351\n  
2493,     Noninvasive patch for negative results from size()   See    com/google/guava/issues/2108 for more details \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99503151\n  
2494,     Change the type of ImmutableSortedMultiset naturalOrder to be more liberal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99501054\n  
2495,     Fixes J2ObjC reference cycles in c g c util concurrent \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99482445\n  
2496,     Suppress some Guava tests for c g c base  and update others \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99400844\n  
2497,     Make a private inner class final  Prevents Mockito spy() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99391056\n  
2498,     Remove a stray @Beta annotation on a test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99365620\n  
2499,     remove special Error handling from JdkFutureAdapters   no need to turn Errors into deadlocks \n\nSuch special handling has been removed from other parts of concurrent over the years \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99300567\n  
2500,     Adding a new MediaType for  application/manifest+json   defined in    w3 org/TR/appmanifest/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99289128\n  
2501,     Use Ascii truncate() now that our copy of Guava contains it \nActually  I think we could have done this back in CL 97895305  if not earlier \n\n(partial rollback of CL 74746985)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99270142\n  
2502,     Optimize the GWT TimeUnit library in terms of performance \n\nBackground:\nLong divisions in GWT are expensive because there is no  long  type in Javascript and the GWT emulates them  When the TimeUnit library is used in a hot loop  it causes perfomance issues \n\nSolution:\nThe long divisions are extracted into precomputed constants \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99220786\n  
2503,     Give directExecutor a better toString() (currently it is just  INSTANCE )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99183090\n  
2504,     Fix cycles com google common cache \nAdds @J2ObjCIncompatible to com google common util Debugger \nStop whitelisting other packages that pass the cycle test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99038555\n  
2505,     Add mention of Guava 19 release candidate in README \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=99037572\n  
2506,     Introduce tryParse function to Longs which accepts radix parameter  This makes it consistent to Ints which support this function as well \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98915993\n  
2507,     Work around a type inference change in javac\n\nThe javac compiler\ s behavior when handling wildcards and  capture  type\nvariables has been improved for conformance to the language specification  This\nimproves type checking behavior in certain unusual circumstances  It is also a\nsource-incompatible change: certain uses of wildcards that have compiled in the\npast may fail to compile because of a program\ s reliance on the javac bug \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98889343\n  
2508,     Add maven-central badge to Guava README \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98851664\n  
2509,     Do not require an exception to be thrown on a no-op putIfAbsent if null is unsupported \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98636371\n  
2510,     Dummy change to test something \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98514770\n  
2511,     Use raw types in ImmutableSet copyOf(EnumSet) magic \n\nI haven t been able to find any better way to make this work when I try to build against Java 8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98448037\n  
2512,     Add missing @throws tags to Verify \n\nPull request from Alberto Goffi <alberto goffi@usi ch>:\n   com/google/guava/pull/2106\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98443748\n  
2513,     Don t require an exception to be thrown on a no-op putIfAbsent if put is unsupported \n\nThis rules out Java 8 s default putIfAbsent implementation  and is really just a pain \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98443465\n  
2514,     Resolves J2ObjC reference cycles in eventbus \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98393529\n  
2515,     Update Guava s README md to add release info \n\nThis includes info on the latest release version as well as on snapshot versions  with links to Javadoc and JDiff for both \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98328630\n  
2516,     Fix guava test breakage due to GWT internal changes \n\nFor some reason Guava tests call into GWT internal implementations \n\nI ported guava to use Arrays copyRange instead of GWT s internal arrays methods  These\nmethods should never be called from any code outside of GWT s core module \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=98113442\n  
2517,     Eagerly check for an appropriate exceptionClass constructor during calls to Futures getChecked \nThis way  callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails \n\n(Retry of CL 97776570  rolled back in CL 97787294 because of a breakage that has since been addressed  I ve made two tweaks: I ve improved the error message (to minimize confusion  and I ve migrated to the standard J2ObCIncompatible annotation (as done elsewhere already) \n\nWe hope for bad exceptionClass parameters to soon be caught at compile time \n\nTo keep performance acceptable  cache a set of classes with appropriate constructors \nUse ClassValue  which was introduced in JDK7 \nDo the compatibility dance  including making Animal Sniffer happy by annotating the class that uses ClassValue \nThat requires updating Animal Sniffer to a version that respects the annotation in more places  perhaps related to    codehaus org/browse/MANIMALSNIFFER-29\nI ve also updated the Animal Sniffer signatures on the theory that newer is probably better  although there is no apparent no impact on Guava \n\nThe cost of the eager check is performance in the success case: What used to take ~1 6ns will now take ~3 2ns  This is likely to be swamped by the actual work being done and by other overhead (like threads)  (This was discussed and approved in API Review )\nThe ClassValue implementation is faster than the fallback version  particularly in the unlikely case in which users call getChecked() with many different kinds of exception types \n\nFinally  take the opportunity to start on splitting up Futures java and FuturesTest java:    com/google/guava/issues/2091\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97961145\n  
2518,     Stop stripping lowasser s username \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97814212\n  
2519,     Run the tests from the class instead of those from some other class \n\nI seem to recall some weirdness around adding suites to themselves -- like  the tests were getting run even without the self-add call except in some unusual case like when you requested a run of a specific class with --test_arg/--test_filter? I forget  Anyway  I came across this while trying to run the tests under Android  which apparently we don t do \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97801167\n  
2520,     Automated g4 rollback of changelist 97776570 \n\n*** Reason for rollback ***\n\nBroke tests \n\n*** Original change description ***\n\nEagerly check for an appropriate exceptionClass constructor during calls to Futures getChecked \nThis way  callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails \n\nWe hope for bad exceptionClass parameters to soon be caught at compile time: [ \nAPI Review:    google com/document/d/1hUeO_1OJY_xIAHN089p5d9as1uX4M62MBlbkiLyiJbk/edit\n\nTo keep performance acceptable  cache a set of classes with appropriate constructors \nUse Clas   \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97787294\n  
2521,     Eagerly check for an appropriate exceptionClass constructor during calls to Futures getChecked \nThis way  callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails \n\nWe hope for bad exceptionClass parameters to soon be caught at compile time: [ \nAPI Review:    google com/document/d/1hUeO_1OJY_xIAHN089p5d9as1uX4M62MBlbkiLyiJbk/edit\n\nTo keep performance acceptable  cache a set of classes with appropriate constructors \nUse ClassValue  which was introduced in JDK7 \nDo the compatibility dance  including making Animal Sniffer happy by annotating the class that uses ClassValue \nThat requires updating Animal Sniffer to a version that respects the annotation in more places  perhaps related to    codehaus org/browse/MANIMALSNIFFER-29\nI ve also updated the Animal Sniffer signatures on the theory that newer is probably better  although there is no apparent no impact on Guava \n\nThe cost of the eager check is performance in the success case: What used to take ~1 6ns will now take ~3 2ns  This is likely to be swamped by the actual work being done and by other overhead (like threads)  (This was discussed and approved in API Review )\nThe ClassValue implementation is faster than the fallback version  particularly in the unlikely case in which users call getChecked() with many different kinds of exception types \n\n[  run --run_under=perflab javatests/com/google/common/util/concurrent:FuturesGetCheckedBenchmark -- -i runtime -DexceptionType=CHECKED -DotherEntriesInDataStructure=0 12 -Dvalidator=NON_CACHING_WITHOUT_CONSTRUCTOR_CHECK CLASS_VALUE WEAK_SET\n   [  com/runs/1b73aa59-83d1-429d-9ff4-e40cd8f4637a#r:scenario benchmarkSpec parameters otherEntriesInDataStructure scenario benchmarkSpec parameters validator&c:scenario benchmarkSpec parameters result\n\nFinally  take the opportunity to start on splitting up Futures java and FuturesTest java:    com/google/guava/issues/2091\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97776570\n  
2522,     Add static factory methods to CharMatcher equivalent to the existing constants \n\nAlso do some significant reorganization  primarily extracting anonymous CharMatcher implementations to named nested classes and grouping them together at the bottom of the file  This makes it easier to look through the various methods in CharMatcher without being swamped by implementation details of individual matchers  It s also needed for the constant implementations to create a place to put a static final INSTANCE field (which will allow the implementations to be effetively constants  but also lazily loaded  once we remove the constant fields \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97727559\n  
2523,     Added missing @throws tag to ConcurrentHashMultiset removeExactly \n\nPull request from Alberto Goffi <alberto goffi@usi ch>:\n   com/google/guava/pull/2099\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97701970\n  
2524,     Use j2objc-annotations instead of local annotations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97671363\n  
2525,     Test Collection clear() to ensure that iteration and size() are consistent with isEmpty() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97347352\n  
2526,     Check that size and iteration are consistent with isEmpty after map clear()   BiMapTestSuiteBuilder failed to catch an error of this type in HashBiMap  though other tests fortunately caught it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97345369\n  
2527,     Explain the relationship with java util Optional  in some detail \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97336621\n  
2528,     Use key insertion order in HashBiMap \n\nThis bumps memory consumption back up to equal a pair of HashMaps; the shared entries in both directions are just enough to pay for the linked list   On the other hand  we re not actually allocating any additional objects  so this shouldn t be a significant loss for Android \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97273863\n  
2529,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97263526\n  
2530,     Suppress FuturesGetCheckedIllegalExceptionType  a forthcoming Error Prone error \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97236165\n  
2531,     @GoogleInternal a helper method that s only used by an @GoogleInternal test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97235390\n  
2532,     Call out MinMaxPriorityQueue failure mode \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=97167980\n  
2533,     Add Apple Passbook media type\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96881592\n  
2534,     Adds (unused) method to Utf8Test as part of internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96817586\n  
2535,     Group annotation dependencies at the top \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96795721\n  
2536,     Resolves reference cycles in com google common collect for J2ObjC translation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96793584\n  
2537,     Minor changes to Utf8 as part of internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96788388\n  
2538,     Recognize that the reason for an early completion might be cancellation rather than exception \nThis fixes the bug  com google common util concurrent AbstractFuture$Cancellation cannot be cast to com google common util concurrent AbstractFuture$Failure \n\nTODO(cpovirk): Write basher tests at some point \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96784416\n  
2539,     Remove usage of Truth from Guava Testlib \n\nThere s a circular dependency issue  This also removes some trailing whitespace \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96639131\n  
2540,     Sort imports \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96604490\n  
2541,     Test EmptyContiguousSet equals() more heavily  specifically with an argument that s a RegularContiguousSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96599243\n  
2542,     Replace a couple usages of Iterators emptyIterator() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96356488\n  
2543,     Add ImmutableMap Builder orderEntriesByValue \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96353128\n  
2544,     Use static import for Character char constants \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96348182\n  
2545,     Make some more helper methods static  as suggested \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96347171\n  
2546,     Remove references to SourceCodeEscapers from javadoc \n\nIt s still internal-only \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96345180\n  
2547,     Permits common/ io reflect testing  packages to be transpiled by j2objc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96324276\n  
2548,     Minor readability and coverage improvements to Utf8Test:\n- static import of Character constants\n- more thorough testing of invalid strings\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96321934\n  
2549,     Mark GcFinalization as @J2ObjCIncompatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96311707\n  
2550,     Avoid use of raw types \n\nJDT s rules for raw types do not match javac s  so it issues a compile error \nFixes    com/google/guava/issues/2082\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96216812\n  
2551,     Update  travis yml encrypted username/password for oss sonatype org to use encrypted form of access token  which can be revoked \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96120709\n  
2552,     Fix a lock ordering deadlock in CustomScheduler reported in    com/google/guava/issues/2072\n\nThe issue is that CustomScheduler uses a lock to atomically reschedule after each iteration  unfortunately this lock has inconsistent ordering with respect to the lock used by AbstractService   In particular for a RUNNING service the following can ocurr\n\nT1:\nservice stopAsync()\n  -> AbstractService stopAsync() [ ACQUIRE AbstractService monitor \n     -> AbstractService doStop()\n        -> CustomScheduler cancel() [ ACQUIRE CustomScheduler lock \n\nT2:\nCustomScheduler reschedule() [ ACQUIRE CustomScheduler lock \n   (getNextSchedule throws an exception)\n  -> AbstractService notifyFailed [ACQUIRE AbstractService monitor \n\nBoom deadlock!\n\nIt looks like i introduced this deadlock in    com/google/guava/commit/2c0727049d7e7cbbe1febf5bcf6b7a4b1860dea5 though it is possible it wasn t an issue at the time since the AbstractService implementation was different\n\nThe fix was to simply move the call to notifyFailed outside the lock \n\nI have similar concerns about the other lock in this class  but i believe it actually is safe (though we should probably remove it anyway  as per an ancient TODO)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96113737\n  
2553,     Automatically release snapshots to Maven and Javadoc/JDiff to gh-pages on push \n\n- Based off of the Dagger config\n- The Javadoc/JDiff updates are handled by    com/google/guava/blob/gh-pages/updaterelease sh\n- Encrypted env variables have already been added for google/guava\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96064069\n  
2554,     Override isHashCodeFast() to return true for a couple ImmutableSet implementations for which    well  hashCode() is fast \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96044185\n  
2555,     Google Collections -> Guava\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96022158\n  
2556,     && -> &\nI have no benchmarks  but I d argue that  based on our past benchmarks of similar situations  this should be our default move \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=96014749\n  
2557,     Fix  @code  and  @link  in com google common that are either missing the @ completely or put it before the brace \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95921937\n  
2558,     Scaretext for everyone!\nFollowup to CL 95568320 and CL 95480161 \n\nAlso  tweak and reformat some other docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95914301\n  
2559,     Ignore CacheLoadingTest testExpandDuringRefresh in open-source \n\nIt s extremely flaky  particularly when run in Travis CI  It s pretty much guaranteed to fail in at least one of the 3 different build runs we do there \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95839819\n  
2560,     Update README md to point to new GitHub Javadoc locations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95839673\n  
2561,     Change the order of timeoutFuture setException() and delegate cancel()  which no one seems to depend on anymore \nThis allows us to rely on done() for almost all cleanup \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95839519\n  
2562,     Add missing @since 19 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95790743\n  
2563,     Change link to OrderingExplained to GitHub location \n\nIt got reverted to the Google Code location by the doc change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95780221\n  
2564,     Re-add create() methods with an int expectedInsertions parameter \n\nThese methods should probably live on indefinitely for binary compatibility \n\nAlso add @since 19 0 to the versions with a long parameter  since they re technically newly added methods  and add a paragraph from the 3-param version that was missing to the 2-param version \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95741164\n  
2565,     Add a warning about deadlocks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95636626\n  
2566,     Move cancellation propagation from cancel() to done() \n\nAdvantages:\n- We are no longer a blocker to making AbstractFuture cancel() final  Realistically  that will never happen  but maybe we can make FluentFuture cancel() final when it comes along?\n- cancel() is not the only way to cancel: setFuture(cancelledFuture) also works  bypassing any propagation logic defined in cancel()  This is probably fine in practice: Once setFuture() is called  there\ s generally no need for additional propagation logic  Still  it feels cleaner to me \n- The  read to local  then cancel  then use local  dance is error-prone (<[ Extracting a method happens to simplify things \n\nDisadvantages:\n- The method has to be defined in both copies of AbstractFuture (GWT and non-GWT)  We could work around this by introducing a superclass or by making it static \n\nRelated:    com/google/guava/issues/1905\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95634367\n  
2567,     Javadoc generation fixes\n\nDisable timestamp comments in generated files and restrict the use of our custom javadoc stylesheet to builds under JDK7    using that stylesheet with JDK8 generated files produces bad results \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95584269\n  
2568,     Fix a race:\nIf one input fails at nearly the same time and with the same exception as the *first* failure  we sometimes log the exception  even though it s already propagated into the output \nThe problem is that the first failure lets subsequent failures proceed before it registers itself in seenExceptions \nIt does register itself with setException()  but we don t have full atomicity because we have two sources of truth \n(This is why we have a problem only when the first failure is involved: Other failures atomically manipulate seenExceptions )\nThe solution is for whichever caller initializes seenExceptions to propagate it with the value from setException() \nThis is a little messy but hopefully not too bad \n(It comes with a small bonus: It happens to avoid allocating seenExceptions entirely if there is only one failure )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95568611\n  
2569,     directExecutor() scaretext  take 152 \n\nThis revision consists mostly of being less specific about the circumstances in which bad things happen and more specific about the effects of the bad things \n\nIf we like this  we can decide whether it belongs here or on directExecutor() itself  and we can link to it from Futures transform  etc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95568320\n  
2570,     Try to teach users how to understand complex chained Ordering statements \n\n   com/google/guava/issues/1342\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95475801\n  
2571,     Random collect javadoc improvements  including replicating the pseudo-deprecation information found on Lists newArrayList for Sets newHashSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95474959\n  
2572,     Miscellaneous minor doc fixes \n\nincluding:\n   com/google/guava/issues/1725\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95466089\n  
2573,     Rewrite the AbstractFuture Javadoc \nLink to Futures from ListenableFuture \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95464400\n  
2574,     Inline doRun()  which is no longer needed after the combine() rewrite \nMake done() final \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95461156\n  
2575,     Change Guava wiki links to new GitHub locations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95452934\n  
2576,     Add test for the complicated example in Guava issue #1342 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95442782\n  
2577,     Put |final| on a couple methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95325599\n  
2578,     Remove the test code from TypesTest that tries to ensure that Types newTypeVariable functions correctly in the presence of a SecurityManager \n\nIt isn t really possible to test this fully given that the security-sensitive operation happens in a static initializer \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95325181\n  
2579,     Aggressively null out references when invoking the transformation/fallback \n\nThis probably won t matter for the Function overloads  (But in theory the GC could recognize that the remaining references in local variables are unused  And we could null those out if we want  too )\nIt is more likely to help with the AsyncFunction overloads  There we are more likely to let inputFuture (and possibly a chain of its own dependencies) be GCed long before the derived future completes  since the whole doTransform/doFallback stack frame is often destroyed before the setFuture call bears fruit \n\nOne other advantage: If we screw up and try to access the fields instead of the local variables  we get an error always instead of only in rare cases \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95137240\n  
2580,     Rename AbstractCatchingFuture running to  inputFuture  \nThis matches AbstractChainingFuture \nThe  running  name was more appropriate in the days that it used to sometimes contain the fallback future \nThat was necessary for cancellation at the time  but now that\ s handled by our use of setFuture() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95134862\n  
2581,     Strip testNewTypeVariable from Guava \nIt really needs to run in its own VM  and this doesn t seem worth the trouble to set up in Maven \nWe ll continue to run it internally while we decide whether it s worth keeping \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95121754\n  
2582,     Grammar correction in RateLimiter javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95117476\n  
2583,     De-@Beta Stopwatch \n\nSee    com/google/guava/issues/1312 (we were holding off on the\nde-@Beta ing because we wanted to remove the public constructors) \n\nThe only other API change we might want to make is to add toString(TimeUnit)\n(   com/google/guava/issues/2007) but that shouldn t stop us from\nde-@Beta ing it now  right?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=95031929\n  
2584,     Dereference the future stored in the local  not the future stored in the field \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94956002\n  
2585,     Some enhancements for Futures transform and Futures catching\n * extract a template method and 2 subclasses from CatchingFuture and ChainingListenableFuture   This will allow us to eliminate asAsyncFunction() and 2 allocations per transform\n * make CatchingFuture implement Runnable and save a Runnable allocation\n * have CatchingFuture/ChainingListenableFuture clear all their fields on cancel  which should prevent pinning the transformers\n * have rejectionPropagatingRunnable short circuit for directExecutor() which should save 2 allocations for users who prefer to pass directExecutor() explicitly\n * have Futures catching use the rejected execution exception logic when it makes sense\n\n   com/google/guava/issues/1995\n   com/google/guava/issues/2013\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94954378\n  
2586,     Deprecate ComparisonChain#compare(Boolean  Boolean) \n\nSee    com/google/guava/pull/2062\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94949611\n  
2587,     Replicate CL 94485597 s uniqueIndex doc changes to FluentIterable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94930940\n  
2588,     Static import all Feature values (except sizes) when no names in the file are ambiguous \n(Ambiguous names are cases like  SUPPORTS_REMOVE   a name used by both IteratorFeature and CollectionFeature )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94787622\n  
2589,     Add ConcurrentNavigableMapTestSuiteBuilder  which also applies the ConcurrentMap testers to the sub-map views \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94786659\n  
2590,     Add testers for ConcurrentMap replace(K  V  V) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94784595\n  
2591,     Fix a bug where NavigableMapTestSuiteBuilder was not using NavigableMapTestSuiteBuilder on the descending map tests  due to an oversight discussed in [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94779653\n  
2592,     Use ConcurrentMapTestSuiteBuilder to test CacheBuilder and its flavors\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94773095\n  
2593,     Add a tester for ConcurrentMap replace(K  V) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94772513\n  
2594,     Eliminate TestConcurrentMapGenerator  which isn t really buying us anything \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94766887\n  
2595,     Revert hack introduced in [ \n\nError Prone now has its own copy of @GoogleInternal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94720637\n  
2596,     Add a tester for ConcurrentMap remove(key  value) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94711404\n  
2597,     Start ConcurrentMapTestSuiteBuilder  adding a tester for putIfAbsent \n\nBegins work on    com/google/guava/issues/149 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94704830\n  
2598,     In TypesTest  change the check for correct functioning in the presence of a SecurityManager  Previously we had a SecurityManager that refused Method setAccessible except in a few well-known places  the intent being that one of the places it would refuse would be the use in Types TypeVariableInvocationHandler that we wanted to test  But that proved to be fragile  Instead  we explicitly refuse that place  and we check that the refusal happened  This builds more knowledge of the implementation into the test  but should be more robust \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94699561\n  
2599,     Make Stopwatch s constructors package private \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94623624\n  
2600,     Reformat collect [A-I * with google-java-format \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94617505\n  
2601,     google-java-format com google common hash\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94607659\n  
2602,     Automated g4 rollback of changelist 94598995 \n\n*** Original change description ***\n\nAnnotate com google common base Converter reverse field with @LazyInit \nIt\ s safe to lazy init  reverse  field since the object it\ s pointing to is immutable \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94606878\n  
2603,     Reformat common primitives with google-java-format \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94602682\n  
2604,     Reformat common base with google-java-format  to 100 columns  A few changes by hand as discussed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94602205\n  
2605,     Annotate com google common base Converter reverse field with @LazyInit \nIt\ s safe to lazy init  reverse  field since the object it\ s pointing to is immutable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94598995\n  
2606,     Rollforward [  with the missing dep added \n\n*** Original change description ***\n\nAnnotate MediaType toString with @LazyInit and remove volatile (which is\nunnecessary) \n\nMinor followup to [ \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94594440\n  
2607,     Automated g4 rollback of changelist 94571347 \n\n*** Original change description ***\n\nAnnotate MediaType toString with @LazyInit and remove volatile (which is\nunnecessary) \n\nMinor followup to [ \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94574051\n  
2608,     Annotate MediaType toString with @LazyInit and remove volatile (which is\nunnecessary) \n\nMinor followup to [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94571347\n  
2609,     Annotate lazily iniatialized fields of immutable collections with @LazyInit\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94498610\n  
2610,     Deprecate Sets newSetFromMap() \n\nSee    com/google/guava/issues/1001\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94497455\n  
2611,     Suggest Multimaps index from Maps index -- both in its Javadoc and in its failure messages \nRewrite the Javadoc more generally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94485597\n  
2612,     Add special-file doc to isEmpty() \nThis is similar to what we already have on size/sizeIfKnown/length/lengthIfKnown \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94299611\n  
2613,     Enable tests that are newly runnable under GWT:\n\n- some immediateFailedFuture tests  which we missed when making immediateFailedFuture work under GWT \n- some tests that uses TestLogHandler now that TestLogHandler works under GWT \n\nAlso  rename a logger variable to reflect the recent CombinedFuture->AggregateFuture rename \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94197944\n  
2614,     Make TestLogHandler GWT-compatible \n\nGWT doesn t have synchronizedList  so I switched to |synchronized|  The small performance difference shouldn t matter much \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94193122\n  
2615,     Use Arrays deepToString() to print arrays in MoreObjects toStringHelper() \n\nSee    com/google/guava/issues/1125\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94118840\n  
2616,     Special case Futures immediateFuture(null) to return a static constant since all null immediateFutures are indistinguishable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94118271\n  
2617,     Update travis-ci for new container based infrastructure and maven caching \n\nPull Request:    com/google/guava/pull/2043\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94116813\n  
2618,     Simplify CharStreams skipFully \n\nSkip is documented as blocking until characters are available  so zero should only be returned if EOF \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94099984\n  
2619,     Add usage example to MMPQ s class docs \n\nSee    com/google/guava/issues/1678\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94030468\n  
2620,     Use lazy init (single-check idiom) for MediaType toString() \n\nSee    com/google/guava/issues/1486\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94028416\n  
2621,     Add size-related methods to Byte/CharSource:\n\n- ByteSource: Optional<Long> sizeIfKnown()\n- CharSource: Optional<Long> lengthIfKnown()\n- CharSource: long length() throws IOException\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94027330\n  
2622,     Complete the migration of static analysis annotations to Error Prone\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=94023780\n  
2623,     GWTifies a few more concurrency related things to support delayed execution and futures with timeout \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93930624\n  
2624,     Deprecate MapConstraint and MapConstraints \n\nWe removed Constraint + Constraints back in Guava 16  so these should ultimately go as well \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93750347\n  
2625,     Update public suffix list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93726186\n  
2626,     Add a comment to AbstractStreamingHasher explaining why putString(CharSequence  Charset) is not overridden \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93648231\n  
2627,     Adding javadoc to com google common collect testing Helpers testComparator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93470413\n  
2628,     Add specialized slice support to ByteArrayByteSource \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93334857\n  
2629,     Properly use the expected-size factory methods in MultimapBuilder  instead of conflating capacity with expected size \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93322785\n  
2630,     GWT-related shuffling from internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93144921\n  
2631,     Don t rely on MessageDigest isEqual() for constant-time evaluation in HashCode \n\nAdd benchmarks for the various array equality impls \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=93134222\n  
2632,     Remove some unnecessary checkNotNulls from BaseEncoding \n\n(One instance was reported here    com/google/guava/pull/2045)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92938049\n  
2633,     Finally publish Lists cartesianList to Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92936363\n  
2634,     Give people who have never used UnmodifiableIterator before a hint \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92927557\n  
2635,     Specify constant-time behavior for HashCode equals() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92925537\n  
2636,     Fix typo in Floats max() javadocs \n\nReported here    com/google/guava/pull/2044\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92574147\n  
2637,     Fix LongMath checkedPow to correctly error out on large negative inputs  and fix LongMathTest to test a full range of long inputs   See    com/google/guava/issues/2036  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92571001\n  
2638,     Use getBytesInternal in HashCode  hashCode  toString  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92395681\n  
2639,     Fixed typo in comment \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92388286\n  
2640,     Add RangeSet asDescendingSetOfRanges() and RangeMap asDescendingMapOfRanges() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92378397\n  
2641,     Suppress log output from tests in guava-testlib by redirecting it to files \n\nWe made this same change a while back for guava-tests ([  guava-testlib s tests also have some log output we d rather not see \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92277616\n  
2642,     Minor changes from internal addition \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=92186970\n  
2643,     Migrate users calling new LinkedHashMap(int) to\nMaps newLinkedHashMapWithExpectedSize when it appears that that is what they\nactually want \n\nnew LinkedHashMap(int) sets the size of the internal hashtable to the given\nsize  but usually callers really just want a hash table that is large enough\nfor a given number of elements   newLinkedHashMapWithExpectedSize does exactly\nthat \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91990827\n  
2644,     Remove duplicate Stopwatch tests \n\nSee    com/google/guava/issues/2039\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91890774\n  
2645,     Fix a few warnings in ThrowablesTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91884994\n  
2646,     Add Maps newLinkedHashMapWithExpectedSize\n\nRerolling the dice\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91788123\n  
2647,     Make Optional absent() hashCode() different from Optional of(0) hashCode()\n\nFixes    com/google/guava/issues/2037\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91595440\n  
2648,     Fix typo - Trutested is tru and tested  but not a word \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91420403\n  
2649,     Remove unneeded and unavailable inherits from testModule gwt xml files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91328781\n  
2650,     Refactored Scanner onJarEntry() and onResourceFile() to scanJarFile() and scanDirectory() \n\nAdvantages discussed sofar:\n\n1  scanJarFile(JarFile) and scanDirectory(File) leaves no room for ambiguity  Questions like  are manifest files  directory resources filtered out?  won\ t be asked because it\ s up to subclasses \n\n2  scanDirectory() can potentially be more efficient when searching for a particular package for example  You wouldn\ t even need to recurse into c/g/common if you are only interested in c/g/foo \n\n3  scanJarFile() can use JarFile entries() and loop over  It\ s an existing API that we don\ t need to provide an alternative way to traverse through Jar file entries \n\n4  scanDirectory() can use either Files fileTreeTraverser() or java nio file Files newDirectoryStream()  So we shouldn\ t expect too much boilerplate duplication \n\n5  If a client doesn\ t like to silently ignore unreadable sub directory  it doesn\ t have to \n\nDisadvantages include inconvenience for the subclass compared to implementing the bare-bone onJarEntry() and onResourceFile() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91324193\n  
2651,     Add @CheckReturnValue to MultimapBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91101255\n  
2652,     Two minor changes to the new Scanner support\n* Pass the JarFile to onJarEntry  this way we can read the jar entry without having to open the Jar a second time\n* add  throws IOException  to the callback methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91020019\n  
2653,     Add a method that tells how many permits are stored and can be used without blocking future tryAcquire calls \n\nSuccessfully acquiring permits when the rate is set to near zero causes all subsequent tryAcquire calls to fail even after setting the rate really really high  For our use-case we don t want to ever incur this penalty and would instead want to only acquire if we ve stored up enough \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=91004719\n  
2654,     Fixed a line-wrapping I missed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90934632\n  
2655,     Fix ClassPath by exposing Scanner for internal clients to customize \n\nThis change slows down CodeInspectionTest  But it exposes Scanner for it to extend and memorize the urls \n\nBasically  the test should create its own ClassInfo class (name + url) \n\nAnd subclass ClassPath Scanner as:\n\nclass MemorizingScanner extends ClassPath Scanner  \n\n  private final ListMultimap<String  ClassInfo> classes =    ;\n\n  @Override void onResourceFile(ClassLoader loader  String packagePath  File file)  \n    if (file getName() endsWith(  class ))  \n      classUrls put(packagePath + file getName()  new ClassInfo(resourceName  url));\n     \n   \n  //  same for jar entry\n \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90897375\n  
2656,     Just cleaning up old @since tags \n\nI finally couldn\ t stand seeing this stupid phrase  imported from Google Collections Library \nall over the place  It\ s long since irrelevant information now that there have been 17 Guava\nreleases since then \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90732444\n  
2657,     Update public suffix patterns \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90558429\n  
2658,     Pull out a subclass of ImmutableSet for indexed implementations  which are common enough that it saves code overall \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90549526\n  
2659,     Remove all of common cache from @Beta \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90542356\n  
2660,     Make CacheLoader UnsupportedLoadingOperationException and RemovalNotification s constructor public \n\nBoth may be needed for custom Cache implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90540168\n  
2661,     Address    com/google/guava/issues/2008 by discarding references to iterators in Iterators concat after they have been iterated over \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90525172\n  
2662,     Update AsyncFunction javadoc to point to a non-deprecated method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90438335\n  
2663,     Delete redundant performance overloads from SingletonImmutableList \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90196002\n  
2664,     Add RandomAccess implementations for Lists  equals indexOf lastIndexOf Impl  to eliminate allocation of the iterator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90193421\n  
2665,     Trim overrides from SingletonImmutableSet that are just for tiny performance wins \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90191174\n  
2666,     Fix minor bug in setValue method of HashBiMap inverse() entrySet() entries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90104250\n  
2667,     Minor simplifications to HashBiMap using the  key value OrNull utilities from Maps \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90100234\n  
2668,     Reuse the passed-in entry array in RegularImmutableMap and RegularImmutableBiMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=90082508\n  
2669,     Minor tweak: ImmutableList subList can return the original list instead of a view if the range is the whole list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89893003\n  
2670,     Fold RegularImmutableSortedMap into ImmutableSortedMap  since that is now the only implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89888434\n  
2671,     Fold EmptyImmutableSortedMultiset into RegularImmutableSortedMultiset \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89740927\n  
2672,     Fold EmptyImmutableSortedMap into RegularImmutableSortedMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89737176\n  
2673,     Demonstrate a race that can result in excessive logging \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89722067\n  
2674,     Woops - seenExceptions should only be released when the future is done  not on failure!\n\nUnfortunately  difficult to write a test because it requires 2 failed futures to complete at almost the exact\nsame time  with the first future setting seenExceptions=null immediately after the other future does a compareAndSet\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89721761\n  
2675,     Tiny simplification in CharMatcher to define indexIn(CharSequence) as indexIn(CharSequence  0) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89718886\n  
2676,     Eliminate EmptyImmutableSortedSet  while we re at it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89712042\n  
2677,     Remove replaceFrom overrides from CharMatcher NONE \n\nThe default implementation short-circuits if indexIn == -1  which is always the case \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89711093\n  
2678,     Reduce memory consumption of ImmutableSortedMultiset by eliminating the count array \n\nIt can be inferred indirectly from the cumulative sums of the counts \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89710934\n  
2679,     Tiny simplification to CharMatcher \n\nmatchesNoneOf is already defined in terms of indexIn; ANY and NONE don t need to override it for performance  since they already optimize indexIn \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89709447\n  
2680,     Delete EmptyImmutableBiMap  instead using a RegularImmutableBiMap with null hash tables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89629248\n  
2681,     Eliminate EmptyImmutableSet  replacing it with a RegularImmutableSet with a null hash table \n\nRelated:    com/google/guava/issues/1268\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89625833\n  
2682,     Don t execute AsyncFunction in ChainingListenableFuture if the future has been canceled \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89613683\n  
2683,     Remove the version of getChecked() with the old parameter ordering \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89606673\n  
2684,     Add @CheckReturnValue to many APIs in c g common util concurrent Futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89553140\n  
2685,     Microoptimization: presize builder when deserializing ImmutableMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89527038\n  
2686,     Add @CheckReturnValue to filter*() methods in Collections2  Iterables  Maps  and Multimaps \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89522301\n  
2687,     Deprecate the version of getChecked() with the old parameter ordering \n\nThis is to discourage backsliding while I test the CL to remove the method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89508952\n  
2688,     Add @CheckReturnValue to all methods in FluentIterable (except copyInto(Collection)) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89461679\n  
2689,     Round 3 of the immutable collections classdocs rewrite \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89434768\n  
2690,     Add a new overload of getChecked() with a different parameter order \n\nWe will migrate callers to the new version \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89434462\n  
2691,     Alternative way to get AssertionError instance in com google common util concurrent GeneratedMonitorTest  since public AssertionError(String message  Throwable cause) does not exist in Java 6 yet \n\nPull request from Pingsan:    com/google/guava/pull/2012\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89416149\n  
2692,     Wrap the Method setAccessible call in Types TypeVariableInvocationHandler in try/catch so that it is not an error for it to fail \n\nUsually setAccessible won t be necessary: we only added it because of App Engine s unusual execution environment  TypesTest now runs with a SecurityManager so we can detect this and similar problems \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89368532\n  
2693,     Simplify the ImmutableMapEntry shared code by making the base ImmutableMapEntry class terminal and sharing the subclasses for non-terminal nodes in the hash table \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89319446\n  
2694,     Prevent rare disastrous classloading in first call to LockSupport park \nSee:    openjdk java net/browse/JDK-8074773\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89317155\n  
2695,     Eliminate boxing in RegularImmutableMultiset by inlining the hash table implementation \n\nThis is primarily intended as an optimization for Android s sake  but is expected to have net performance benefit in all environments  just at the expense of code complexity \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89315361\n  
2696,     Round 2 in the great ImmutableCollection javadoc rewrite  Try to make it a little tighter  and widen the circle to a few more classes \n\nI m still trying to avoid getting into rewriting any *method* javadocs  though\nI couldn t help tackling a few obvious problems \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89309215\n  
2697,     When a new entry exceeds the segment\ s maxWeight all by itself  don\ t bother evicting anything else  only the new one  Still go through all the motions of actually adding and evicting it; otherwise I fear the code complexity will skyrocket \n\nIn a sense this starts us down a path of trying to make weight-based eviction  smart   and it\ s not clear where that should end up  but I think this seems like a logical special case no matter what \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89308526\n  
2698,     Apply some simplifications and improvements \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89149129\n  
2699,     Use Hashing smearedHash directly in HashBiMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=89066886\n  
2700,     Make implicit narrowing compound assignments explicit \n\nCompound assignments to variables with type byte  char  short  or float hide\ndangerous narrowing conversions  This change makes implicit narrowing\nconversions explicit in preparation for enabling a new compiler error that will\nprevent narrowing compound assignments \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88986348\n  
2701,     Make it explicit that a memoized Supplier s get() method is invoked at most once \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88974060\n  
2702,     Improve the implementation of Multisets ElementSet remove to do only one operation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88968217\n  
2703,     Document that callers of catching() should prefer more specific exception types \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88864139\n  
2704,     Migrate calls of to-be-deprecated Futures get to equivalent Futures getChecked \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88830649\n  
2705,     In com google common reflect Types  make the Method objects that are used as part of Java compatibility accessible \n\nMaking them accessible should not be necessary  since they are being used to access package-private methods from elsewhere in the same package  But having them not accessible trips over an unfixable race condition in App Engine  There  the security layer intercepts reflective operation and ultimately ends up invoking the Method from another package  To make this work it has to do Method setAccessible(true) in a try/finally  But if two threads end up doing this at the same time then one may set the Method back to inaccessible just after the other has set it accessible  Making the Method always accessible avoids this problem  It is not any kind of security problem since the methods in question are harmless and the only reason they are not public is to avoid polluting the API \n\n   artima com/weblogs/viewpost jsp?thread=164042\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88573029\n  
2706,     Add FluentIterable toMultiset() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88522314\n  
2707,     Deprecate get()  which is being replaced by getChecked() \n\nNearly all callers have been migrated  Callers who use guava_jdk5 will be stuck on the deprecated method for now  We ll migrate them when getChecked() becomes available in guava_jdk5 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88468127\n  
2708,     Migrate calls of to-be-deprecated Futures get to equivalent Futures getChecked \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88435725\n  
2709,     Add Futures getChecked  the new name of Futures get \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88397579\n  
2710,     Remove warnings from Futures java \n\nSafeVarargs is an especially painful one  as it ll produce warnings in any users of the methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88345700\n  
2711,     Optimize BaseEncoding by removing GwtWorkarounds and using an implementation without streams\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88332628\n  
2712,     Add tests for current transformAsync/catchingAsync interruption behavior  namely  It doesn\ t do anything  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88255363\n  
2713,     Refactorings in util concurrent so more code can be shared \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88247030\n  
2714,     ImmutableRangeMap is now serializable \nCopy/paste javadoc fixed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88227012\n  
2715,     Collections coming from ImmutableRangeSet asSet() and ImmutableRangeMap asMapOfRanges() can now be correctly serialized \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88224961\n  
2716,     Re-enable compilation of benchmarks in Guava now that caliper 1 0-beta-2 is out \n\nFix some things this turned up:\n\n- Remove a couple benchmarks for APIs that aren t public in Guava \n- Remove LoadingCache benchmarks that compare a LoadingCache to MapMaker makeComputingMap  which is package-private now \n- Fix a usage of diamond operator that snuck in \n- Remove CombinedFuture from Futures  since the methods that use it are internal-only \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88142834\n  
2717,     Move EMPTY to RegularImmutableList \nThis was requested in    com/google/guava/issues/1977 to avoid circular static-init dependencies \nI fear that we have other such problems  We should consider adding a test for them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88131198\n  
2718,     Add the piece of information that I really wanted last time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=88115213\n  
2719,     Improve failure message from testUrls to help us figure out why it\ s failing on Travis  e g  \n   org/google/guava/jobs/53222839\n testUrls(com google common reflect ClassPathTest): expected:<3> but was:<1> \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87967592\n  
2720,     Remove com google common labs reflect Signature  It has not gained any uses in\nthree years of existence \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87751075\n  
2721,     Remove @Beta from Maps asMap and Maps toMap \n\nUpdate the Javadoc of Maps toMap and FluentIterable toMap to specify that it s unspecified what value you get for a key when it appears multiple times in the iterable and your function isn t well-behaved \n\nCloses Guava issue #1963 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87740790\n  
2722,     *Close* our blocks  now in our moment of triumph?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87644978\n  
2723,     Fix    com/google/guava/issues/1982 by adding some preconditions\n\nThe error behavior isn t really changing  since it would still fail  it is just\nthat now it will fail slightly sooner and the stack trace when it does will\npoint to the users buggy scheduler() method  which i believe is all the bug was\nasking for \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87567830\n  
2724,     Remove APIs scheduled for deletion in March 2015 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87511933\n  
2725,     Add missing @Nullable annotations to Table and BiMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87297784\n  
2726,     Fix a signaling bug in newDirectExecutorService()  Also switch to implicit\nmonitors to take advantage of biased locking \n\nIf thread A calls awaitTermination while there are no running tasks  then\nThread B calls shutdown()  Thread A will never be woken up \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87280837\n  
2727,     Enable j2objc compilation of common/util/concurrent \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87259269\n  
2728,     Deprecate AsyncFunction transform() and withFallback() \nDeprecate FutureFallback \n\nMore information:\n   google com[ document/d/1FJxzf-e-jez00-_cWqEzdJNnZzhIQ-9ezmHt77gM8_I/edit\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87154647\n  
2729,     Expose Hashing concatenating() in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87106619\n  
2730,     Change exception messages; part of internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87085064\n  
2731,     Migrate calls of to-be-deprecated Futures java APIs to their equivalents:\n- Migrate calls from transform(   AsyncFunction   ) to transformAsync() \n- Migrate calls from withFallback(future  new FutureFallback<V>) to catching(future  Throwable class  new AsyncFunction<Throwable  V>()) (or occasionally a slight variant of that) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87071526\n  
2732,     Shuffling from internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87059596\n  
2733,     Update publix suffix data \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=87012581\n  
2734,     Rewrite javadocs for immutable collections \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86995462\n  
2735,     Sort and remove unused imports \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86993473\n  
2736,     Call file toURI() toURL() outside of the entry iteration loop   It turns out\nthat this sequence may end up stat ing the jar  which can significantly slow\nthings down \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86990876\n  
2737,     Add @CheckReturnValue to Stopwatch\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86977616\n  
2738,     One more @GoogleInternal I missed last time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86977055\n  
2739,     Add @CheckReturnValue to c g c hash APIs\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86973520\n  
2740,     Remove ClassPathTest tests from Guava for the moment \nThey re failing there \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86968210\n  
2741,     Add @CheckReturnValue to BinaryPredicates and Defaults \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86847333\n  
2742,     Change a while to an if in AbstractFuture   #TIL you can break <label> out of an if \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86842992\n  
2743,     Suppress future Error Prone error for AsyncFunction that returns a _null Future_  rather than the intended _Future whose value is null_ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86830267\n  
2744,     Add @CheckReturnValue to more classes in common base \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86794958\n  
2745,     Add @CheckReturnValue to Predicates \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86794808\n  
2746,     Add @CheckReturnValue to Functions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86791183\n  
2747,     Collect all resource URLs in the ResourceInfo objects \n\nEssentially ResourceInfo url() is analogous to Class getResource() and now\nResourceInfo urls() provides analogous support for Class getResources() with the benefit that it is significantly faster (ClassPath was already calculating these as part of scanning) \n\nThis is yet another attempt at trying to add a way to see alternate resources to classpath \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86761898\n  
2748,     Make Files use transferTo  which can copy files without bringing the bytes into userspace \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86744917\n  
2749,     Migrate calls of to-be-deprecated Futures java APIs to their equivalents:\n\n- Migrate calls from transform(   AsyncFunction   ) to transformAsync() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86703224\n  
2750,     Add @CheckReturnValue to Joiner  Objects  and Splitter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86646027\n  
2751,     Migrate from Truth s deprecated  is(expected) to  isEqualTo(expected) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86642578\n  
2752,     Avoid boxing in newDataOutput s checkArgument invocations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86638527\n  
2753,     Refer to the old names of transformAsync and catchingAsync from their @since tags \n\nWe have done this elsewhere  e g    @since 9 0 (in 1 0 as  @code compose ) \nIt should make migration easier for anyone who skips over the version of Guava in which the old method was deprecated \nIt should also help both internal and external users who go looking for the old name \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86593983\n  
2754,     Rollback of change to immediateFailedFuture and immediateCancelledFuture \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86516778\n  
2755,     Make immediateFailedFuture and immediateCancelledFuture trusted futures \n\n   com/google/guava/issues/1961\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86499614\n  
2756,     Migrate from assertContentsAnyOrder() to Truth \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86498851\n  
2757,     Rollback of BaseEncoding change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86442772\n  
2758,     Optimize BaseEncoding s encode method by using an implementation without streams\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86425194\n  
2759,     Optimize LongMath isPrime \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86298499\n  
2760,     Add @CheckReturnValue to ComparisonChain \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86282152\n  
2761,     Avoid AssertionError(String  Throwable) constructor  which isn t available in version of GWT we use for Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86212236\n  
2762,     Add newCancellationCause() again \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86206373\n  
2763,     Add Futures transformAsync() to replace the AsyncFunction overloads of transform() \nThis will make the methods work better with Java 8 lambdas \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86188098\n  
2764,     Warn about immutability \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86185367\n  
2765,     Add Futures catching  Async  to replace Futures withFallback \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86180055\n  
2766,     - More carefully guard all of loadFuture s functionality inside the try block\n- Prioritize calling setException when exceptions occur\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86118912\n  
2767,     Avoid generating calls to GWT-incompatible setUp or tearDown methods \n\nPrior to this CL  such methods would generate compile errors:\n\n[ERROR  Line 24: The method setUp() from the type TestCase is not visible\n[ERROR  Line 32: The method tearDown() from the type TestCase is not visible\n\n[ \n\nAlso  remove the workaround I added to com google common \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86112432\n  
2768,     Inline the implementation of DoubleMath mean rather than using a helper class  This is called inside loops often enough that I think it s worth avoiding the object assignment  Also improve the javadoc \n\nThis code is basically all copied from Stats meanOf  where it was reviewed  so hopefully it shouldn t be too controversial \n\n(For background  we accidentally --- it was my fault --- ended up with DoubleMath mean and Stats meanOf duplicating the same functionality  One of them needs to go  and it seems clear this one should survive  since it s already in guava and it s not even @Beta  But I want to make sure this one has the improvements from the other )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86081434\n  
2769,     Roll back addition of newCancellationCause \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86068136\n  
2770,     Add Hashing sha384()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86055528\n  
2771,     Add newCancellationCause \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86054805\n  
2772,     Hide setSampleInstances internally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86015706\n  
2773,     Add @CheckReturnValue to entire Optional class \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=86014536\n  
2774,     Fix several mistakes in how iteration order is documented for ImmutableMultimap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85990417\n  
2775,     Migrate from Truth s deprecated  is(expected) to  isEqualTo(expected) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85986665\n  
2776,     Hide GoogleInternal*EscapersTest files completely  rather than leaving a test with no methods behind for Maven to complain about \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85899334\n  
2777,     Re-remove Google-internal getAllEntries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85767223\n  
2778,     Re-add Google-internal getAllEntries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85742568\n  
2779,     GWTify Futures#withFallback and its tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85631779\n  
2780,     Migrate from deprecated isAssignableFrom to identical isSupertypeOf \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85539357\n  
2781,     Seperate tests for GoogleInternal methods into their own class\n\nSome of the tests in javatests/com/google/common are run not\njust against the java/com/google/common code but also against\nGuava  This is fine as long as the tests do not test any\ncode marked as @GoogleInternal because they break as the\ncode to test does not exist in Guava \n\nThis change breaks up test classes that break when run against\nGuava into separate classes  one for running against internal\nand Guava and one just to run against internal \n\nThis is part of the work to upgrade guava_jdk5 to v17 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85501856\n  
2782,     Add missing removal dates/releases for deprecated APIs \nAdd a horrible test to catch future missing info \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85463445\n  
2783,     Re-add Multisets removeOccurrences(Multiset  Multiset) \n\nThis non-@Beta method was removed in 18 0 and replaced with removeOccurrences(Multiset  Iterable)  We need to have both for backward compatibility \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85456166\n  
2784,     Roll back addition of getAllEntries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85379241\n  
2785,     Add Google-internal getAllEntries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85375065\n  
2786,     Give the removal date for isAssignableFrom \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85333830\n  
2787,     Add isSupertypeOf and isSubtypeOf  deprecating isAssignableFrom \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85327607\n  
2788,     GWTifies Futures#allAsList and friend \nEnables some but not all FuturesTests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85168289\n  
2789,     Stop scrubbing some more usernames (MOE update?) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85156857\n  
2790,     Fix after rollback changelist 84974387 \n\nAdded documentation and test that SerializingExecutor ignores interrupts \nsince javatests/com/google/apps/framework/concurrent/ListenableStreamTest java assumes\nthat should be the case \n\nI am not convinced that this is correct because it effectively disables the normal mechanism for shutting down an executor \n\n*** Original change description ***\n\nAdd some functionality to SerializingExecutor and rework its code \n\nAdd functionality to suspend the execution  Intended primarily for cases where we want to wait\nfor an rpc before continuing execution    \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85137867\n  
2791,     Rollback of: Add @CheckReturnValue to Optional\n\nBreaks lots of tests who aren t using the results of Optionals \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85104606\n  
2792,     Add lazyStackTrace \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85099500\n  
2793,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85089450\n  
2794,     Add @CheckReturnValue to Optional\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85088656\n  
2795,     GWTifies Futures#combine() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85081294\n  
2796,     Add @CheckReturnValue to UnsignedBytes  UnsignedInts  and UnsignedLongs (except for parse methods and methods that throw exceptions that people may reasonably want to catch) \n\nRelated:\n   com/google/guava/issues/1956\n   com/google/guava/issues/1957\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85081061\n  
2797,     Run dereference() tests under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85079832\n  
2798,     Add a few final(?) tests \n\nMost are tests of null handling  since our automated null tests don\ t run under GWT \nI\ ve added checkNotNull() calls where appropriate \n\nOne is to verify that a failing listener doesn\ t interfere with other added listeners \n\nI also added a test of get() with a negative value  as concurrency classes generally permit:\n All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all  \n   oracle com/javase/7/docs/api/java/util/concurrent/package-summary html\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85076704\n  
2799,     Add and use helper methods like assertDone() in tests \nThis found no bugs -- well  maybe one if you count the inconsistent propagation of interruption from the delegate  though I had suspected as much already \n\nAdd another  misbehaving listener  test  this one for the case in which the Future is already done \nThis found a bug  which I\ ve fixed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85074586\n  
2800,     Add @CheckReturnValue to c g common primitives \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85074273\n  
2801,     Test no-arg get() on pending Futures  even in a non-GWT setting \nTo prevent from hanging forever  of course  we need to spin up another thread to make the call \nConveniently  we already have the code for this lying around  The main thing I did to it was change it to call getUninterruptibly  since we handling interrupts isn t worth the trouble here \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85072429\n  
2802,     Short-circuit future setFuture(TrustedFuture) in GWT  too \n\nIf anything  I would expect the gains of avoiding  new ExecutionException(   )  to be greater than GWT than in  normal Java  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85071658\n  
2803,     Run many tests for addCallback and transform under GWT \nMake the no-Executor overload of addCallback available under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=85070996\n  
2804,     GWTifies Futures#dereference() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84985065\n  
2805,     Rollback of: Add some functionality to SerializingExecutor and rework its code \n\nAdd functionality to suspend the execution  Intended primarily for cases where we want to wait\nfor an rpc before continuing execution \n\nAdd functionality to prepend a task to the queue  intended primarily for cases where\na continuation of the current task is needed to run immediately afterwards  This\nmay happen if we need to send an rpc and suspend the queue before retrying the current task \n\nUse case: [  there named Ex   \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84974387\n  
2806,     Release withTimeout as @Beta\n\nFixes    com/google/guava/issues/1146\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84900032\n  
2807,     Add BaseEncoding benchmarks for decode and stream methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84860248\n  
2808,     Add some functionality to SerializingExecutor and rework its code \n\nAdd functionality to suspend the execution  Intended primarily for cases where we want to wait\nfor an rpc before continuing execution \n\nAdd functionality to prepend a task to the queue  intended primarily for cases where\na continuation of the current task is needed to run immediately afterwards  This\nmay happen if we need to send an rpc and suspend the queue before retrying the current task \n\nUse case: [  there named ExecutionQueue\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84859082\n  
2809,     Add @CheckReturnValue to CaseFormat  Enums  Equivalence  Joiner  MoreObjects  Strings and Suppliers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84797925\n  
2810,     More doc tweaks based on martinrb@s comments on [  (sorry  submitted too fast!)\n\nAnd  now that I at least have decided that we should just deal with it via a few extra null checks  introduce those null checks in the appropriate places \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84664256\n  
2811,     An update on write visibility \n\nClarify the data race issue in a comment and link to the concurrency-interest thread \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84637827\n  
2812,     Move LabsFutures makeTimeoutFuture to Futures withTimeout in prep for releasing in guava   This changes the signature to avoid joda time Duration and also eliminates the AtomicReferences which i believe are unnecessary \n\nCurrently it not public in guava  pending api review \n\n   com/google/guava/issues/1146\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84575437\n  
2813,     Clarify the error message when an AsyncFunction returns null (*not* a Future that contains null) \nAdd a similar message for FutureFallback \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84565778\n  
2814,     Suppress log output from tests in the console by redirecting it to files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84561967\n  
2815,     Address lint identified by    com/lewisd32/lint-maven-plugin\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84559622\n  
2816,     Fix Travis build (hopefully) by setting max heap in the same <argLine> that sets the user language/country \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84553475\n  
2817,     Annotate AsyncFunction parameter as @Nullable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84545868\n  
2818,     Add documentation of the happens-before guarantees of ListenableFuture addListener \n\nThis is essentially the same documentation that is on Executor execute \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84463792\n  
2819,     Add more info to README md \n\nGuava pull request #1950\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84455104\n  
2820,     Add @CheckReturnValue to Collections2\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84437574\n  
2821,     Add @CheckReturnValue to Ascii \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84437572\n  
2822,     Improve invalid character exceptions from BaseEncoding\n\nFixes    com/google/guava/issues/1947\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84345586\n  
2823,     Simplify a boolean return \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84337684\n  
2824,     Implement wasInterrupted() under GWT  and use that API to verify that cancel+setFuture passes the correct mayInterruptIfRunning value to the delegate \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84154982\n  
2825,     Fail setFuture(null) immediately under GWT (as it already does under plain Java) to avoid going into an inconsistent state \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84154017\n  
2826,     Take advantage of new GWT AbstractFuture tests to enhance overall AbstractFuture testing:\n- Run the tests not just under GWT but also under  normal Java  \n- Run the test as part of our open-source build (which happens mostly  automatically  as part of the above change) \n- Expand the tests to run with a TrustedFuture input and a non-TrustedFuture input  Currently this matters only in non-GWT mode  but I expect that to change in time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84152832\n  
2827,     Depend on Truth 0 25 \nI m about to introduce some assertThat(throwable) hasMessage(message) calls \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84134145\n  
2828,     GWTifies Futures#transform() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84084635\n  
2829,     Fix typo in InetAddresses  Javadoc \n\nGuava pull request #1943\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84052980\n  
2830,     Add toString to DeadEvent \n\nGuava pull request #1948\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84051921\n  
2831,     Increase heap \n\nWe\ ve been running out of heap since    com/google/guava/commit/651774d3734a0f72dd7bccab9e57bd9579cfff0e yesterday:\n testLargeNumberOfInsertions(com google common hash BloomFilterTest): Java heap space \n   org/google/guava/jobs/47023222\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=84048185\n  
2832,     GWT emulation for some of util concurrent \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83996751\n  
2833,     Fallout from MOE update:\nWe now preserve some more usernames in comments \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83975277\n  
2834,     Clear FallbackFuture running  this used to be the behavior but it was lost when updating this method to use setFuture \n\nThis fixes:    com/google/guava/issues/1937\n\nIn addition to not pinning the input future  i also changed it so that a call to cancel() prior to the input completing  does not trigger a CancellationException in the listener \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83951020\n  
2835,     Fix comment typo in Maps: 0 75 -> 0 75 \n\nThis may have been correct in the original author s locale  but it s at\nodds with the standard Java syntax \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83948565\n  
2836,     Pass a Locale to String format calls \nThen  run Guava tests in locale hi-IN to catch future dependencies on the default locale \nFinally  as a convenience in debugging problems  write Maven logs in UTF-8 rather than ASCII  (This is likely already the case in  normal  Maven runs  but our guava_moe_test target was stuck on ASCII )\n\nThis CL covers all the String format calls in Guava  fixing <   com/google/guava/issues/1567>  There are many other calls in internal com google common code  We may want to consider additional testing and avoidance strategies  e g   a RootLocale format convenience method and an error-prone check for no-Locale calls \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83859950\n  
2837,     adding MediaType for Dart files\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83819730\n  
2838,     Up the buffer size used in copies to the JDK 7 default buffer size \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83625926\n  
2839,     Optimize containsAll and equals for ImmutableEnum* when compared to another ImmutableEnum*\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83622617\n  
2840,     Adds a small clarifying comment to the Javadoc of common cache RemovalListener \n\nMy team was previously assuming that calls to CacheLoader load and RemovalListener onRemoval would always be paired  but we found out this is not the case \n\nIn retrospect  the existing Javadoc already hints at this  but I think it can be made a bit more explicit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83610070\n  
2841,     Standardize that Functions foo() toString() returns  Functions foo()   (I\ ve preserved two existing exceptions: compose(b  a) (which returns  b(a) ) and forMap(map  default) (which returns  Functions forMap(map  defaultValue=default) )  I don\ t know whether that\ s ideal  but it doesn\ t feel worth spending too much time worrying about )\nThis matches what Predicates foo() toString() and Ordering foo() toString() return \n\n(Also  remove some unnecessary toString() calls from Predicates java  Those changes would have been made in CL 58115976 (successor to CL 56242188) except that that change was made concurrently with a CL just like the one you\ re reading but for Predicates (CL 59050444) )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83539256\n  
2842,     setFuture documentation tweaks:\n- Describe cancellation propagation \n- Stop referring to setFuture as though it *always*  sets asynchronously  \n- Small tweak that I\ m not sure actually helps: change  previously been set or cancelled  to  already been set or cancelled   Somehow I feel like this is marginally clearer that it refers to  done at the time of the setFuture call  rather than  done at the time the supplied Future completes   Am I crazy? Maybe I should just say  done at the time the supplied Future completes? \n- Maybe other stuff I\ ve forgotten \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83537510\n  
2843,     Update public-suffix list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83479451\n  
2844,     Add @CheckReturnValue to Strings nullToEmpty()  For more information  see attached bug \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83453191\n  
2845,     Add @CheckReturnValue to Iterables elementsEqual()  For more information  see attached bug \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83453102\n  
2846,     Set default GWT log level to WARN \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83447444\n  
2847,     Add @CheckReturnValue to Collections2 transform()  Iterables transform() and Lists transform() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83443729\n  
2848,     Add @CheckReturnValue to Futures successfulAsList() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83431953\n  
2849,     Add @CheckReturnValue to Lists reverse() \n\nSee    com/google/guava/issues/1931\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83347495\n  
2850,     Add @CheckReturnValue to * filter() methods in c g c collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83340841\n  
2851,     Add @CheckReturnValue to Futures immediate*Future() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83340815\n  
2852,     Shuffling from internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=83280657\n  
2853,     Hide Utf8Benchmark  which has taken on some internal-only code \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82987350\n  
2854,     Create TrustedListenableFutureTask so that our listener executor services can produce futures compatible with the new setFuture optimization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82743827\n  
2855,     Create TrustedFuture (name TBD) a trusted  less abstract  subclass of AbstractFuture that we can use to optimize setFuture and try to use it everywhere in util concurrent \n\nAlso  introduce AbstractFuture done() a template method to aid in clearing state after a future completes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82683934\n  
2856,     Add oraclejdk8 to the build matrix for Guava on Travis CI \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82532082\n  
2857,     Specify source level 1 6 for GWT \n\nThis fixes failures in guava-gwt when building/testing under JDK8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82526985\n  
2858,     Removed test on url()  It s partially testing ClassLoader  and it sometimes fails \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82525887\n  
2859,     Disable doclint when building under JDK8 \n\nBecause it complains about everything and fails the build \n\nAlso fix something that my IDE was marking as an error: the <overWrite> element from the configuration for the maven-dependency-plugin isn t valid for the unpack-dependencies goal (there s <overWriteIfNewer>  but it s true by default)  so I removed it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82468188\n  
2860,     (1) Don t use a lock for seen exceptions field; should help speed a little (saves space in the non-error state)\n(2) Track not only seen exceptions  but also the causal chain \n\nGood example of unnecessary logging from this is a CancellationException  which is wrapped in another CancellationException on list futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82368457\n  
2861,     Make implicit narrowing compound assignments explicit \n\nCompound assignments to variables with type byte  char  short  or float hide\ndangerous narrowing conversions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82265189\n  
2862,     Add a more efficient implementation of Sets symmetricDifference \n\nBackground: was looking through the Guava code and came upon a TODO \n\nAn even more efficient implementation could involve using a special consuming iterator to first return the items that are in set 1 but not in set 2  and then add the items from set 2 that weren t consumed (because they aren t in set 1); however  that would either modify the original set or have to use more space \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82161404\n  
2863,     Mention splitToList explicitly in the doc comment for Splitter limit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82160580\n  
2864,     Fix typo in Splitter limit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82158244\n  
2865,     Fix example description which is no longer accurate \n\nAlso  adjust sample code  Let s assume activeInLastMonth is a predicate  rather than a call that returns a predicate \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=82153708\n  
2866,     Fix the reference to Utf8#encodedLength \nGratuitous reformatting \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81819384\n  
2867,     In com google common reflect Types  implement the TypeVariable interface using a dynamic proxy rather than an explicit implementation \n\nThis is to work around a compatibility problem introduced by Java 8  See    com/google/guava/issues/1738 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81817139\n  
2868,     Fix a class loading ordering bug on android \n\nApparently in some android versions (and/or testing environments  maybe?) Unsafe getFieldOffset(Field) will trigger initialization (not just loading) of the class that declares the field   This causes an ordering bug where when the Waiter class is initialized ATOMIC_HELPER is null \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81812260\n  
2869,     Fix extendsFromClass() \n\nChecking only the primary upper bound isn t sufficient for purposes like <A extends Foo&Bar> getSuperType(Bar class)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81782225\n  
2870,     Fix some bugs related to calling Preconditions checkNotNull on expressions\nthat are definitely non-null \n\nCreated via a work-in-progress error-prone check for unnecessary null checks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81594383\n  
2871,     Optimize UriParameterMap parse() by making fewer passes when parsing and by checking requiresByteLevelDecoding() more efficiently \n\nThe new code is ~25-42% faster in caliper \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81584621\n  
2872,     Rollforward the previously rolled back AbstractFuture change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81501035\n  
2873,     Do not propagate cancellations to children if it was a result of a child being cancelled\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81457128\n  
2874,     Rollback previous change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81455024\n  
2875,     Increase the guarantees about what happens when you call setFuture with a completed future \n\nPreviously it was possible to have setFuture return true and for the future to not be completed with the future due to a racing cancel \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81446929\n  
2876,     Skip unnecessary presizing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81367572\n  
2877,     Refactored the overloads of isAssignable*() methods to instance methods with simpler signature\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81364016\n  
2878,     use Map<File  ResourceInfo> instead of Map<URI  ResourceInfo> to work around the problem mentioned in    com/google/guava/issues/1899\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81339582\n  
2879,     Rewrite nonCancellationPropagating to take advantage of setFuture\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81244943\n  
2880,     Delete AsyncSettableFuture \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81197333\n  
2881,     Fixed isAssignableFrom() for <? super T> wildcard types  as pointed out by Guava issue 1898 \n\nIn a nutshell  here\ s what we have in the current implementation:\n\nList<? super String> isAssignableFrom(List<Object>) == true // Correct\n<? super CharSequence> isAssignableFrom(String) == false // Wrong!\n<? super String> isAssignableFrom(<Object>) == true // Wrong! Not assignable\n\nTo show why they are wrong  consider the following three code snippets where the first two compile and the third doesn\ t compile:\n\nvoid okay(Receiver<List<? super String>> receiver  List<Object> objects)  \nreceiver accept(objects);\n \n\nvoid okay2(Receiver<? super CharSequence> receiver)  \nreceiver accept( 1 );\n \n\nvoid notOkay(Receiver<? super String> receiver  Object obj)  \nreceiver accept(obj);\n \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81180102\n  
2882,     Steer some consistentHash users to WeightedConsistentHash \nSteer all weightedConsistentHash users to WeightedConsistentHash \n\n(WeightedConsistentHash is internal only at this point )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81155544\n  
2883,     Add benchmark for BaseEncoding \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81099316\n  
2884,     Strip some internal-only GWT modules \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=81083376\n  
2885,     fix potential npe in ChainingListenableFuture cancel\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80832292\n  
2886,     Shuffling from internal-only change  Will be reverted soon \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80831887\n  
2887,     Handle addListener throwing\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80787198\n  
2888,     Shuffling from internal-only change  Will be reverted soon \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80747845\n  
2889,     Two quick followups to take (minor) advantage of the new setFuture implementation\n\nDeleting AsyncSettableFuture should be pretty easy after this\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80658233\n  
2890,     Rewrite AbstractFuture to fix the following issues\n\n1  set setException and cancel are all potentially blocking methods\n2  using AbstractQueuedSynchronizer is overkill for a future\n3  the lack of a setFuture method leads to a lot of repetitive code\n4  abstract future is fat\n5  timed get() calls will always succeed if the future is done when the blocked thread wakes up  even if the deadline has passed \n\nThe approach is to directly implement the interface using Unsafe and LockSupport \n\nExecutionListBenchmark is written to essentially generate as much thread contention as possible    im not sure how useful it is   Also  the more i try to run multithreaded (micro) caliper benchmarks the less confident i am that any of the data is reliable   The main point is that the future is definitely much smaller and also faster in most scenarios \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80505365\n  
2891,     Migrate from Truth s deprecated iteratesAs(   ) to containsExactly(   ) inOrder() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80491240\n  
2892,     Migrate from Truth s deprecated iteratesAs(   ) to containsExactly(   ) inOrder() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80490101\n  
2893,     Remove AUTHORS file \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80416702\n  
2894,     Fix shutdown issue in AbstractScheduledService \n\nThe issue is that if stopAsync() was called after an interation had been\nexecuted (but before it had actually run) then we would fail to unlock\nour lock and then shutdown would hang forever \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80236732\n  
2895,     Remove unnecessary null checks \n\nGuava pull request #1892\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80232609\n  
2896,     Remove references to AsyncLoadingCache from CacheBuilder docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80227076\n  
2897,     Add a constructor to VerifyException to permit a cause to provided alongside a message \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=80128106\n  
2898,     Remove the rethrow on failure behavior from all the threaded service implementations \n\nguava-discuss thread:    google com/d/msg/guava-discuss/k_69XGQFPuk/jqTwIRlyP0wJ\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79991294\n  
2899,     Link to one templating system as an example \nOn issue 1887  I said that we try to steer people to templating systems  but that s kind of a weak claim at present \n\n   com/google/guava/issues/1887\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79954411\n  
2900,     Add AsyncLoadingCache internally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79901718\n  
2901,     Test that far-future scheduling means  effectively never  rather than overflowing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79870651\n  
2902,     Use TransformedIterator instead of ForwardingIterator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79673799\n  
2903,     [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79611585\n  
2904,     Add CONTRIBUTING md file to tell users how they can contribute and what to expect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79583464\n  
2905,     Remove references to on-demand computation of values \n\nGuava issue #1885\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79582498\n  
2906,     Use features from GWT 2 6 0:\n- Use Class getSimpleName() instead of our custom implementations \n- Mark test that uses StringBuilder appendCodePoint() as working under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79579791\n  
2907,     Remove AsyncSettableFuture isSet\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79569901\n  
2908,     Make GWT logging even quieter for Travis build \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79441097\n  
2909,     Set explicit -Xmx for Guava tests in pom xml \n\nAlso remove attempt to set the heap size in the Travis configuration\nand change it around a little so Javadoc is generated in the install\nstep and not in the testing step \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79437983\n  
2910,     Attempt to increase max heap space for Travis builds  since the new test for BloomFilters with a large number of insertions is currently running out of space \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79372034\n  
2911,     Remove openjdk6 as a platform to build Guava on  It fails due to a weird generics issue \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79358423\n  
2912,     Allow expectedInsertions to be up to Long MAX_VALUE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79352147\n  
2913,     Make GWT less spammy for Travis CI builds by changing its log level to INFO \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79291520\n  
2914,     Make log level for GWT configurable for Maven builds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79283169\n  
2915,     Add support for Travis CI \n\nGitHub pull request #1877 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79275478\n  
2916,     Replace Google Code URLs with corresponding GitHub URLs \n\nGitHub pull request #1876 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79275279\n  
2917,     Add a  gitattributes file to control line ending normalization  which is otherwise a mess that depends on each git client s settings  (See    github io/git/gitattributes html and    com/2012/03/01/mind-the-end-of-your-line/ for more about that )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79186519\n  
2918,     Remove mvn-deploy sh and jdiff jar  which aren t really needed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79183142\n  
2919,     Fix ByteArrayDataInput javadoc (GitHub pull request #1874) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79122254\n  
2920,     Use Truth for isNotInstanceOf \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79090103\n  
2921,     Make GWT s LocalCache values() not be a Set  since it may contain duplicate values \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=79088720\n  
2922,     Change README to README md and make it reference GitHub locations rather than Google Code \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78948385\n  
2923,     Migrate from Truth s deprecated iteratesAs(   ) to containsExactly(   ) inOrder() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78848834\n  
2924,     Add an IteratorBasedAbstractMap class to simplify map implementations in common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78776528\n  
2925,     Introduce Multimap convenience methods (k0  v0  etc )  and migrate to them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78763814\n  
2926,     Use Map convenience methods in a few more places \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78763717\n  
2927,     Replace instances of CollectionSubject with IterableSubject (the former has\nbeen deprecated and will be removed soon) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78759479\n  
2928,     Add convenience methods for e0() getKey()  etc   and migrate to them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78756685\n  
2929,     Add convenience methods for samples e0()  etc   and migrate to them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78756024\n  
2930,     Migrate off of deprecated CollectionSubject has() exactly(   ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78755738\n  
2931,     Hide samples e0  etc  behind methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78677562\n  
2932,     Clean up usages of deprecated Truth has() Collection methods:\n-has() item(   ) -> contains(   )\n-has() allOf(   ) -> containsAllOf(   )\n-has() exactly(   ) -> containsExactly(   )\n-has() exactlyAs(   ) -> containsExactlyElementsIn(   )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78667656\n  
2933,     Clean up usages of deprecated Truth has() Collection methods:\n-has() item(   ) -> contains(   )\n-has() allOf(   ) -> containsAllOf(   )\n-has() exactly(   ) -> containsExactly(   )\n-has() exactlyAs(   ) -> containsExactlyElementsIn(   )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78667341\n  
2934,     Clean up usages of deprecated Truth has() Collection methods:\n-has() item(   ) -> contains(   )\n-has() allOf(   ) -> containsAllOf(   )\n-has() exactly(   ) -> containsExactly(   )\n-has() exactlyAs(   ) -> containsExactlyElementsIn(   )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78667251\n  
2935,     Clean up usages of deprecated Truth has() Collection methods:\n-has() item(   ) -> contains(   )\n-has() allOf(   ) -> containsAllOf(   )\n-has() exactly(   ) -> containsExactly(   )\n-has() exactlyAs(   ) -> containsExactlyElementsIn(   )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78666537\n  
2936,     Clean up usages of deprecated Truth has() Collection methods:\n-has() item(   ) -> contains(   )\n-has() allOf(   ) -> containsAllOf(   )\n-has() exactly(   ) -> containsExactly(   )\n-has() exactlyAs(   ) -> containsExactlyElementsIn(   )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78664552\n  
2937,     Add comment to apparently unused line in LongAddables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78588590\n  
2938,     Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78472045\n  
2939,     Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78471461\n  
2940,     Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78471417\n  
2941,     Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78470770\n  
2942,     Added Ping-From and Ping-To headers associated with <a ping> \n\nThe spec for <a ping> adds two new HTTP headers that may be sent with\na ping request  See\n   spec whatwg org/multipage/semantics html#hyperlink-auditing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78456250\n  
2943,     Remove the array copy from Fingerprint2011 hashBytes(byte[   int  int) method \n\nConclusion: for hashFunctionWithOffset the improvements are visible in terms of bytes used  but also in terms of execution speed (before: 297 340; after: 173 506)  Interestingly enough  there are small improvements for the hashBytes without offset version (before: 184 860; after: 164 804) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78433787\n  
2944,     Roll-forward of: Change CountingInputStream and CountingOutputStream to require a non-null delegate stream  as reported in   \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78358518\n  
2945,     Rollback of: Change CountingInputStream and CountingOutputStream to require a non-null delegate stream  as reported in Guava issue #1869 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78356364\n  
2946,     Change CountingInputStream and CountingOutputStream to require a non-null delegate stream  as reported in Guava issue #1869 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78355152\n  
2947,     Improve error message \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78174362\n  
2948,     Update public suffix patterns \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78130620\n  
2949,     Update Guava to Truth 0 24\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78118999\n  
2950,     Fix @since documentation tags \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=78101179\n  
2951,     Avoid importing BitSet for Javadoc-only usage \nWe ve gotten reports that this breaks things in GWT:    google com/p/guava-libraries/issues/detail?id=1824\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=77957959\n  
2952,     This CL fixes null annotations in com google common primitives\n\nThe annotations on the tryParse() methods are inconsistent  Many of them don t have @Nullable annotations  This is problematic  because: a) the method can return null; and b) the package itself is annotated with @ParametersAreNonnullByDefault  This causes Eclipse to display dead code warnings when checking the return value from these methods \n\nI ve included the @CheckForNull annotation  since I saw you guys using it already  Technically  this isn t required and @Nullable by itself should be fine  But it doesn t hurt to have both  Also Eclipse doesn t understand @CheckForNull \n\nI also threw in a few @Nullable on equals() methods that were missing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=77896210\n  
2953,     Ensure that using a rate of Double MIN_VALUE (the smallest positive double value) results in an effectively zero rate  It currently seems unlimited \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=77276457\n  
2954,     Small step first: rename and clarify the meaning of ImprovedAbstractMap  now ViewCachingAbstractMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76723220\n  
2955,     Add copyOf(Iterable<Entry>) to ImmutableMap  ImmutableMultimap  and their subtypes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76459632\n  
2956,     Move indexMap to a more logical location \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76448806\n  
2957,     Dedup logic in ImmutableEnumMap that is available elsewhere \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76375623\n  
2958,     In ImmutableMap keySet() iterator()  transform the entrySet iterator rather than transforming its asList view  for the cases where that is not efficient \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76351252\n  
2959,     Inline Maps valueIterator(UnmodifiableIterator<Entry>) into its one call site\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76350780\n  
2960,     Add a common superclass for ImmutableMap implementations that create a custom Iterator to iterate  reducing the total number of nested classes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76350704\n  
2961,     Establish RangeMap iteration order  as per Guava issue 1842 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76272760\n  
2962,     Reuse ImmutableMap EMPTY_ENTRY_ARRAY in other ImmutableMap types\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76267320\n  
2963,     Eliminate varargs-accepting create() method  which was never called with multiple arguments \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76264541\n  
2964,     Return to scrubbing cgdecker s username  which we temporarily stopped doing in 69045357f5b4 \nWe will finally stop scrubbing it again when the standard MOE binary is rebuilt with CL 75843182 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76253324\n  
2965,     Simplify ImmutableMap asMultimap() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76196628\n  
2966,     Dedup conflict checks and get(Object) implementation between RegularImmutableMap and RegularImmutableBiMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76194662\n  
2967,     copyOfEnumMap only gets called with an EnumMap  so narrow its parameter type from Map to EnumMap \n\nThis also makes it clearer that copyOf on an empty EnumMap will succeed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76190743\n  
2968,     TerminalEntry s constructor already calls checkEntryNotNull; no need to do it again \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76188203\n  
2969,     Factor out an array-backed ImmutableMapEntrySet to use in RegularImmutableMap and RegularImmutableBiMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76182964\n  
2970,     Investigate possible deduplication between RegularImmutableMap and RegularImmutableBiMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76176371\n  
2971,     Delete unused SingletonImmutableBiMap(Entry) constructor \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76173755\n  
2972,     One last (?) round of presizing builders where possible in common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=76105103\n  
2973,     Refactor the three places in common collect that we convert a List<E> to an ImmutableMap<E  Integer> \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75926603\n  
2974,     Refactor ImmutableSortedMap construction paths   The previous implementation did some redundant copying \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75853973\n  
2975,     Presize the ImmutableMap Builder used in ImmutableMultiset construction \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75851783\n  
2976,     Make ImmutableCollection contains abstract  and fix some embarrassing oversights of where it should have been overridden \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75849013\n  
2977,     Add ImmutableBiMap Builder put(Entry) overload  which had previously not been overridden from ImmutableMap Builder   Now  it correctly returns ImmutableBiMap Builder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75833810\n  
2978,     Expand and improve uses of Ordering immutableSortedCopy in common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75744632\n  
2979,     Don t frontload CharMatcher toString() computation  that s silly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75555670\n  
2980,     Actually  LocalCache getIfPresent _does_ increment the hits counter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75546548\n  
2981,     Fixed a FreshValueGenerator bug that causes failure in generating fresh values recursively when there are finite number of distinct values provided by user \n\nThe fix is to make sure the  freshness  AtomicInteger is only incremented at the end of generating a fresh value for user code  Recursive generation of values for nested types (such as generating the K and V for a Map<K  V>) doesn\ t increment the freshness \n\nThis ensures that for finite set of distinct values  we don\ t ever skip distinct value \n\nAlong the way  the special casing for Optional had to be changed  So I just spent extra effort supporting an @Empty annotation that can be used to generate  empty  value for any arbitrary type \n\nOriginally  I tried to return empty collections  But some existing tests failed because the classes don\ t always like being injected with empty collections or maps (they may have a precondition check to reject empty collection) \n\nSo @Empty is only applied to Optional  Range and ConcurrentMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75542159\n  
2982,     Modify SmoothRateLimiter so that the ratio between maximum-permits-per-second and minimum-permits-per-seconds can be specified -- currently this ratio is hard coded to 3 \n\nThis makes it much more flexible as  ramp up limiter  aka  acceleration limiter  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75381543\n  
2983,     Use presized ImmutableList Builder in ImmutableSortedMap creation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75327745\n  
2984,     Fix @GuardedBy annotations with invalid lock expressions \n\n- fix typos\n- qualified  this  accesses can only be used for enclosing classes: the\ndeclaring class is accessed as  this   enclosing classes are accessed as\n OuterClass this \n- replace annotations being used for general documentation with comments\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75324114\n  
2985,     Fix @GuardedBy annotations with invalid lock expressions \n\n- fix typos\n- qualified  this  accesses can only be used for enclosing classes: the\ndeclaring class is accessed as  this   enclosing classes are accessed as\n OuterClass this \n- replace annotations being used for general documentation with comments\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75302901\n  
2986,     Stop using MapSubject hasKey() and  lacksKey() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=75211614\n  
2987,     use getAvailableCurrencies() under Java 7 to get fresh currency instance\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74986782\n  
2988,     Temporarily avoid scrubbing cgdecker s username \nThis change will be reverted when we stop using my custom-build MOE binary  which already contains CL 75843182 \nLater  it will come back when the standard binary is updated \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74887544\n  
2989,     GWT: Better error checking  logging  and documentation \n- Error checking: I had been trying to enable compilation with -strict (<   github com/Abdennebi/2828230>)  However  while the GWT compiler parameter is  -strict  and the Maven system property is  gwt compiler strict   the Maven parameter is  failOnError:  <   codehaus org/gwt-maven-plugin/compile-mojo html#failOnError>  Additionally  while the compilation goal supports failOnError  the test goal does not: <   codehaus org/gwt-maven-plugin/test-mojo html>  Maven had been ignoring the unrecognized names \n- Logging: Turn up the logLevel to make any future problems easier to diagnose \n- Documentation: Explain the presence of some scary  Ignored 53 units with compilation errors  warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74868684\n  
2990,     Integration of Justin Sampson s fixes to Monitor and addition of extensive tests \n\nJustin is original author of Monitor and heroic volunteer xoogler \n\nThere was significant additional work by myself (martinrb) while preparing this CL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74829983\n  
2991,     Add of() factories for ImmutableClassToInstanceMap for n=0 1 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74815130\n  
2992,     Fix hash map ordering bug \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74779605\n  
2993,     Temporarily duplicate Ascii truncate() for internal build-system reasons \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74746985\n  
2994,     Strip <resource> lines from  gwt xml  They are not yet supported by a release version of GWT  (Support was added in internal CL 62367280  which imported <   googlesource com/gwt/+/f39e11150ef0ea635a7f7d30154221907775efc6>  I m not sure when our build was changed to generate the new elements )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74705447\n  
2995,     Delayed fallout from build-system changes of CL 74684238  which adds <resource> elements to some  gwt xml files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74686661\n  
2996,     Changes AtomicLongMap#removeAllZeros to use iterator for removals \n\nAlthough ConcurrentHashMap doesn t throw ConcurrentModificaitonException  the GWT emulation in gwt/corp/emul uses HashMap and we are submitting a change that will start making GWT s HashMap to throw ConcurrentModificationException which breaks this code \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74631176\n  
2997,     Fix javadoc typo: wrapTask\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=74092956\n  
2998,     Generalize the javadocs on CacheBuilder ticker()\n\nSee    google com/p/guava-libraries/issues/detail?id=1836\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73901400\n  
2999,     Stop using now-internally-deprecated Truth APIs (which are not yet pushed to open-source Truth)  and leave a todo to migrate to the newer Truth apis once they are released to maven  or after Guava 18 is released and we can rely on snapshots \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73722570\n  
3000,     Update tests to cope with the fact that  google  is now a public suffix  This fixes today\ s test failures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73721981\n  
3001,     Update public suffix patterns\n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73686076\n  
3002,     Stop using isBetween and isInclusivelyInRange in preparation for the (not yet released to open-source) assertThat(4) isIn(Range open(2  5)); etc \nCleanup the stragglers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73545684\n  
3003,     Incorporate Justin Sampson s wording improvement in\n   google com/r/jsampson-guava/source/diff?spec=svn965c15345482203be7f4af3ce2c44488bc0ff9ec&name=jsampson/monitor-fixes&r=965c15345482203be7f4af3ce2c44488bc0ff9ec&format=side&path=/guava/src/com/google/common/util/concurrent/Monitor java\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73540789\n  
3004,     Add more tests for Futures immediateCancelledFuture() to essentially document\nwhy two chained CancellationExceptions are thrown \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73186288\n  
3005,     Rewrite ServiceManager to use MultimapBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73173782\n  
3006,     Add AbstractPackageSanityTests UNDERSCORE_IN_NAME to make it easy to exclude generated classes like AutoValue_Foo from testing  The issue is that these classes typically do not apply @Nullable to the argument of equals(Object)  so that they will work when Nullable is not on the classpath  But NullPointerTester requires @Nullable on this argument because otherwise it will fail when equals(null) follows its contract and does not throw an exception \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73169035\n  
3007,     Update Truth dep to 0 23  (   google com/p/guava-libraries/issues/detail?id=1830)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73072462\n  
3008,     Update Iterators emptyIterator() @deprecated Javadoc to specify the replacement as ImmutableList <T>of() iterator() rather than just ImmutableList of() iterator()  The latter will basically never compile \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=73064832\n  
3009,     Update Javadoc in Futures and other classes to reference directExecutor or newDirectExecutorService rather than sameThreadExecutor  Also change the references to inline execution or an inline executor to use the term  direct  instead \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72669239\n  
3010,     Fix documentation error in DoubleMath \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72665652\n  
3011,     Remove system property control for the default strategy to use for BloomFilters  This was only supposed to work for Guava 17 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72664539\n  
3012,     Update Guava versions to 19 0-SNAPSHOT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72661640\n  
3013,     Major refactoring of EventBus  in preparation for further changes \n\n- Make an Executor a property of all EventBuses  not just AsyncEventBus  A normal EventBus uses a direct Executor by default  Executors are stored per-subscriber \n- Pull out the event dispatch strategy into a Dispatcher class  This handles how events are queued (or not) as they re posted  EventBus and AsyncEventBus each use strategies that should match their old behavior exactly \n- Pull out the subscriber registration code into a SubscriberRegistry class  At the same time  switch back to using a ConcurrentMap<Class<?>  CopyOnWriteArraySet<Subscriber>> to store subscribers in order to allow lightweight  copy-free immutable snapshots of all subscribers to an event \n- Rename EventSubscriber to Subscriber and make some changes to it  Move most code related to actually invoking a subscriber method to it \n- Expose the EventBus s identifier \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72652483\n  
3014,     Fix Maps newHashMapWithExpectedSize for JDK8 \n\nTwo changes to HashMap in JDK8 have affected this test:\n- First  the table field is set lazily  so it is null until you add\nelements to the Map \n- Second  the resize() calculations have changed in JDK8  so we adjust\nthe predicted size accordingly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72650895\n  
3015,     Open source Hashing crc32c() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72569582\n  
3016,     Finish open-sourcing tests for Monitor \n\nA previous CL open-sourced MonitorTestCase  but this class is abstract\nand its two subclasses also need open-sourcing!\n\nOur release processes didn t notice that we had tests that were never\nrun  but original author and Xoogler Justin noticed!\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72519095\n  
3017,     Update Truth location from org truth0 to com google common truth \n(internal CL 72431224)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72437171\n  
3018,     Migrate usages of Truth s Subject is(Object) to isEqualTo(Object)  The former is being removed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72319735\n  
3019,     Fix generic types in BloomFilter public API \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=72265659\n  
3020,     Migrate guava to directExecutor now that it will be in the next release \n\nMostly trivial  the only possibly interesting one was in LocalCache \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71753284\n  
3021,     Open source directExecutor and newDirectExecutorService  deprecate sameThreadExecutor\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71699710\n  
3022,     Fix CollectionFeature ALLOWS_NULL_QUERIES to MapFeature ALLOWS_NULL_KEY_QUERIES \n\nFrom leventov ru:    google com/p/guava-libraries/issues/detail?id=1649#c10\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71683488\n  
3023,     Allow overriding of entrySet() and values() derived suites  This is similar to the existing support for keySet() \n\nFrom leventov ru:    google com/p/guava-libraries/issues/detail?id=1801\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71670585\n  
3024,     Make the timing assertions more forgiving \n\nOriginally I just changed it to be within 50ms of 203ms and that was still too\ntight (flaked at least 0 001%) so I abandoned that and just asserted that we have a timing for service\nb \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71662833\n  
3025,     Add failure causes as supressed exceptions for each failed service in the exception thrown by\nawaitHealthy \n\nTechnically these supressed exceptions are already logged  but putting the\nexceptions in the exception that is actually thrown is slightly more useful\nsince it will get picked up properly by some tools which expect to\ninterrogate causes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71661495\n  
3026,     Denigrate Lists newLinkedList() following examples set for newArrayList \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71382856\n  
3027,     Add decrement function to InetAddresses\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71368911\n  
3028,     Fix timing race in ServiceManagerTest testServiceStartupTimes and add another\ntest for the actual behavior \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71364623\n  
3029,     Inline some test logic to support some torturous internal build cases \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71364170\n  
3030,     Update to new Truth package \nUse assertThat() instead of ASSERT that()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71286559\n  
3031,     Upgrade truth s gwt library to a more recent snapshot and upgrade OptionalTest to verify \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71278153\n  
3032,     Update the public suffix list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71219810\n  
3033,     Remove specification of behavior when the number of arguments does not match the number of  %s  in the format string from Preconditions javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71201390\n  
3034,     Rename SameThreadExecutorService to DirectExecutorService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=71178008\n  
3035,     Fix errors in @GuardedBy annotations \n\n@GuardedBy( Segment this ) refers to an enclosing class named \ Segment\ ;\n@GuardedBy( this ) refers to the current class \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70991665\n  
3036,     Fixed a java 8 compatibility issue in ForwardingWrapperTest  Can t use isDefault() because this code needs to compile under Java 7\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70779175\n  
3037,     Add @Beta to methods we just open sourced in FluentIterable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70732653\n  
3038,     Fix: NullPointerException in getAllPresent() \n\nCurrently when some of the keys aren t cached  getIfPresent() returns null and ImmutableMap throws an exception as it doesn t allow neither null keys nor null values \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70704051\n  
3039,     Upgrade Truth to 0 22\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70679145\n  
3040,     Open-source tests for Monitor (which is already open-sourced as part\nof guava) by removing @GoogleInternal  removing the dependence on\nTearDownTestCase  and also open-sourcing the helper class TestThread \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70653606\n  
3041,     Remove javax inject from OSGi package imports and from dependencyManagement in guava-parent \n\nGuava issue:    google com/p/guava-libraries/issues/detail?id=1798\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70642363\n  
3042,     Expand contract for Futures makeChecked() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70433012\n  
3043,     Reenable EnumMap tests  which work as of JDK7:    java com/view_bug do?bug_id=6312706\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70423146\n  
3044,     Release FluentIterable methods for Guava 18 and remove @Beta from toSortedList \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70420650\n  
3045,     Suppress ConcurrentHashMap entrySet() add() tests  which fail now that JDK8 permits those calls \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70418657\n  
3046,     Add x-apple-aspen-config mediatype for Apple  mobileconfig file serving \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70333950\n  
3047,     Benchmark should build in JDK 6 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70264278\n  
3048,     Add  unless noted otherwise  to the README section about the serialized forms of objects \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70263802\n  
3049,     Update the Guava README \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70258669\n  
3050,     Crude hack to make ForwardingMapTest pass in JDK8 \n\nThe proxy idea is probably fine  but I m using very suspect logic to\nmake it work \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70251894\n  
3051,     Prevent bursty RateLimiters from getting stuck at an infinite rate if they spent any time with one \n   google com/p/guava-libraries/issues/detail?id=1791\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70235429\n  
3052,     Use @Nullable on public *methods* consistently for Guava classes of common base\n(plus StringUtil  given how erratic its null-friendliness is)  Of course \nnothing is *proving* that these are correct or complete (and probably nothing\nshort of moving to full JSR308ness can?) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70026461\n  
3053,     Update the suffix patterns \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=70001122\n  
3054,     Call size() once \n\nSee    google com/p/guava-libraries/issues/detail?id=1790\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69946558\n  
3055,     Make doHash() protected in Equals Equivalence \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69899412\n  
3056,     More strictly restrict when fields are added to the set of relevant fields  only supporting non-synthetic String fields \n\nRollback of a rollback  reverting changelist 69845543\n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69877432\n  
3057,     Remove methods scheduled for removal in Guava 18 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69856875\n  
3058,     Automated g4 rollback of changelist 69842250 \n\n*** Reason for rollback ***\n\nBreaks tests\n\n*** Original change description ***\n\nMore strictly restrict when fields are added to the set of relevant fields  only supporting non-synthetic String fields \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69845543\n  
3059,     More strictly restrict when fields are added to the set of relevant fields  only supporting non-synthetic String fields \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69842250\n  
3060,     Move implementations from Objects methods into MoreObjects \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69783878\n  
3061,     Add scheduled deletion date of June 2016 to deprecated methods in Objects \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69770246\n  
3062,     Replace usages of deprecated Objects toStringHelper() with\nMoreObjects toStringHelper() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69572761\n  
3063,     Use MoreObjects firstNonNull instead of Objects firstNonNull \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69552363\n  
3064,     Make Converter andThen() final \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69490364\n  
3065,     Guava issue 1768: FilteredEntryNavigableMap should short-circuit isEmpty() queries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69479092\n  
3066,     In HashCode#equals implementation  avoid creating new byte arrays when it can be avoided:\n- first  check that the 2 hash codes have the same number of bits\n- if the number of bits is 4 or 8  compare the results of #asInt() or #asLong()\n- otherwise  use HashCode#getBytesInternal() instead of HashCode#asBytes()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69395204\n  
3067,     Disable incorrect @GuardedBy annotations \n\nThe @GuardedBy annotations in this CL did not follow the JCIP semantics: either\nthey referred to locks that did not exist  or they were being used for general\ndocumentation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69311266\n  
3068,     Open source base MoreObjects and add appropriate @since tags \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69310042\n  
3069,     Update to Truth 0 20 to match the internal version and to eliminate non-fatal compile errors  (AbstractArraySubject used Pattern and Matcher from java util regex )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69308900\n  
3070,     Document that the allAsList Future fails immediately when an input fails \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69300816\n  
3071,     Fix BloomFilter optimalNumOfHashFunctions calculation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69297820\n  
3072,     Avoid using a constructor that is available only in JDK6+ \nThis lets the mainline code work for the Guava backport \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69296675\n  
3073,     Update tests broken by CL 69197766 s update to the public-suffix list \nThose tests used nic uk as an example of an exclusion  and it no longer is one \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69295926\n  
3074,     Update PSL to pick up * uk changes:  uk TLD is now available for public\nregistration    nominet org uk/uk-domain-names/introducing-uk\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69197766\n  
3075,     Release BloomFilter#writeTo and #readFrom  which provide custom serialization that is more compact than standard Java serialization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69172238\n  
3076,     Graduate Queues synchronized Que Deq ue from @Beta \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69169032\n  
3077,     Update the Public Suffix files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69140019\n  
3078,     Disable incorrect @GuardedBy annotations \n\nThe @GuardedBy annotations in this CL did not follow the JCIP semantics: either\nthey referred to locks that did not exist  or they were being used for general\ndocumentation \n\nThe annotations are being replaced with comments in preparation for enabling\nstatic analysis of @GuardedBy annotations \n\nTested:\nTAP presubmits for global presubmit queue\n[ Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69093384\n  
3079,     Withdraw application/x-protobuf from Guava  and document it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69015118\n  
3080,     Update @since to reflect the change in parameter types \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69014933\n  
3081,     Replace meaningful Javadoc with GWT-emulation boilerplate \n\nI have two main reasons for this:\n1  Meaningful Javadoc is sure to get out of sync between the two versions \n2  Boilerplate helps to distinguish the two in searches  e g      [ /search?jq=immutablecollection\n\nThere\ s also the implicit third reason  We do it this way in the other classes   If we instead want to include real Javadoc  it would be nice to do so consistently \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69014555\n  
3082,     Strip isPrime benchmarks from Guava  since isPrime itself is @GoogleInternal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69012929\n  
3083,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=69004612\n  
3084,     Add application/x-protobuf \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68866844\n  
3085,     Add a benchmark for [Google-internal -- this CL will be rolled back in Guava  isPrime on positive inputs   The input distribution is logarithmic \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68733770\n  
3086,     Make ImmutableCollection Builder public in the GWT emulation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68729337\n  
3087,     Fix EventBus to not include bridge methods when registering subscribers under Java 8  Annotations are included on bridge methods in Java 8 where they weren t before \n\n(Guava issue 1549 )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68654467\n  
3088,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68641973\n  
3089,     Updating comments to fix statements that MoreExecutors sameThreadExecutor is used if an Executor is not supplied  which is no longer actually the case since we switched the defaults to the internal INLINE_EXECUTOR \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68506380\n  
3090,     Add default instances of ByteSource  ByteSink  CharSource and CharSink to ArbitraryInstances  (Guava issue 1770 )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68417594\n  
3091,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68416232\n  
3092,     Add  et  as an effective TLD \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68415393\n  
3093,     Widen Multisets removeOccurrences to accept Iterables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68409485\n  
3094,     Increase the symmetry of the Javadoc changes to Multimap hashCode() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68397956\n  
3095,     java/com/google/common: CL generated with data from dead-code analysis\nusing //devtools/scythe:remove_dead_code\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68103937\n  
3096,     Expand Javadoc of Multimap to clarify unusual hashCode implementations  as per Guava issue 1722 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68093584\n  
3097,     Fix overflow issues in LocalCache  as per Guava issue 1761\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=68007129\n  
3098,     Shuffling from internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=67842017\n  
3099,     Test that it s possible to attach a callback to a ListenableFuture<?> \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=67713851\n  
3100,     Release FutureCallbackTest to Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=67707789\n  
3101,     Update Truth version to 0 18 \n\nThis version includes primitive type arrays  improved String support  renaming of the object under test  as well as custom error messages \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=67639126\n  
3102,     Add OSGi Bundle-DocURL to Guava MANIFEST file \n\nDespite the name  it doesn t seem like it should point to the Javadoc (based on what    osgi org/wiki/Bundle-DocURL says)  so I just pointed it to the Guava project page \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=67036360\n  
3103,     Split RateLimiter implementations off into separate files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=67034085\n  
3104,     Extend mocking tests to cover EasyMock \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66920336\n  
3105,     Fix Guava issue 1751\n\n   google com/p/guava-libraries/issues/detail?id=1751\n\nThe bug is that this test depends on listener ordering  I believe that this race was technically introduced by [   since our strategy for invoking listener callbacks was sufficiently serialized prior to that cl  such that this was safe even though it violated the spec \n\nAs it is  it takes some seriously bad luck to observe the race (thanks cpovirk!)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66902563\n  
3106,     Add Google-internal ManualRateLimiter and (as part of that work) public Uninterruptibles tryAcquireUninterruptibly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66895167\n  
3107,     Reduce differences between  when is the next permit available?  and  request a permit :\n- Standardize the method name format \n- Standardize on returning the next available time (rather than the wait time that one of the two currently returns) \n- Standardize on allowing the return value to indicate a time in the past (rather than requiring it to be a present/future time as one of the two currently does) \n\nAlso  improve tests and documentation around all this  particularly the  in the past  part \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66891133\n  
3108,     Revert base Objects -> j u Objects deprecations until we do the bulk of the migrations ourselves (blocked: see bug) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66815987\n  
3109,     The example is below  not above \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66659338\n  
3110,     Add documentation to all versions of Lists newArrayList methods to discourage their usage; all the other collection factory methods to follow (Sets newHashSet  etc )  Tweak verbiage of other obsoleted-by-Java7 methods to match \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66644002\n  
3111,     Remove buggy future workarounds from ChainingListenableFuture (a k a  the future returned by Futures transform)\n\nThis should only affect users who are passing buggy future implementations to Futures transform  the most likely culprit is com google net rpc util  RpcListenableFuture RpcCheckedFuture  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66523545\n  
3112,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66426194\n  
3113,     Add David E  Wheeler to Guava AUTHORS\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66319030\n  
3114,     Give date-based deletions a stay of execution (24 months  not 18) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66299916\n  
3115,     Deprecate Iterators emptyIterator() in Guava  because it always has a decent replacement even when not on Java 7 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66299891\n  
3116,     Add more tests for known BF false positives when using UTF8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66295364\n  
3117,     Disable PackageSanityTests null-pointer testing for LongAdder  as we don t want to patch Striped64 to include @Nullable annotations \nAlso  remove that annotation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66293925\n  
3118,     Sync with latest upstream jsr166e changes \nFixes  classloader leak  \n   google com/p/guava-libraries/issues/detail?id=1553\n   gmane org/gmane comp java jsr 166-concurrency/12659\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66247344\n  
3119,     Use a MatchResult created by a successful match  as required by Harmony (used on Android):\n   gl/5VQFmC\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=66096434\n  
3120,     Beef up documentation and validation of parameters \nAlso  fully hide/remove some unusable methods  and fix up a return type \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65883612\n  
3121,     Test mocking of RateLimiter to avoid regressions like that of CL 65383672 \nIdeally we will make all non-final methods mockable  but for now  I ll settle for not breaking any new ones \n(The real fix may be a bigger project  e g   converting RateLimiter to an interface  I don t know yet )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65821400\n  
3122,     Migrate calls to Annotation getClass() to Annotation annotationType() \n\nAnnotation getClass() returns a proxy class generated at runtime that is not particularly useful -- it returns false for isAnnotation()  for example -- where annotationType() actually returns the type associated with the annotation (e g  MyAnnotation class for @MyAnnotation) \n\nTested:\nTAP --sample for global presubmit queue\n[ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65806476\n  
3123,     Make Ints tryParse available under GWT \n\nIt already works  thanks to careful avoidance of overflow in checks against |cap| and MIN_VALUE \n(Contrast the previous (Android) version  which may or may not have worked under GWT because GWT integers don t wrap when they overflow  (I think that our workaround for this was successful  but it s hard to be confident ))\n\nAlso  enable the tests for *Longs* tryParse under GWT \n(I also added a few more tests to both versions just to be paranoid )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65806393\n  
3124,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65733547\n  
3125,     Remove the callAllGets  feature  of CombinedFuture \n\nThis should only be necessary for buggy future implementation\n\nThis is a rollfoward \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65725521\n  
3126,     Automated g4 rollback of changelist 65602026 \n\n*** Reason for rollback ***\n\nThis commit caused several test failures  so rollback until a forward-fix can be integrated \n\n*** Original change description ***\n\nRemove the callAllGets  feature  of CombinedFuture \n\nThis should only be necessary for buggy future implementation \n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65624847\n  
3127,     Reimplement Throttle as a passthrough to its reimplementation under the new RateLimiter API \nI ve attempted to leave the behavior untouched (aside from fixing an unsynchronized access to maxTime) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65604449\n  
3128,     Remove the callAllGets  feature  of CombinedFuture \n\nThis should only be necessary for buggy future implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65602026\n  
3129,     Change the implementation of Futures combine to be faster!\n\nAlso  replace all uses of sameThreadExecutor with a cheaper implementation  (IMHO  this should be _the_ implementation of sameThreadExecutor with a new sameThreadExecutorService for those who want it  but since that wouldn t be backwards compatible     sadness)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65564280\n  
3130,     Handle overflow and negative timeouts:\n   google com/p/guava-libraries/issues/detail?id=1622\n\nSome discussion of each:\n- Overflow is of course impossible to prevent entirely with fixed-size number types  but we\ re less likely to see overflow with the new  available - timeout  than with the old  now + timeout\ : The latter can overflow almost immediately if given MAX_VALUE timeout  (Compare the advice at <   oracle com/javase/7/docs/api/java/lang/System html#nanoTime%28%29> )\n- Negative timeouts are supported by java util concurrent APIs  For similar behavior in RateLimiter  we need to be sure that a request to  wait up to -1 seconds  is treated identically to  wait up to 0 seconds  -- specifically  that it works right if the permit has become available within the last second  (Another potential problem  albeit one much less likely  is overflow when subtracting an input of MIN_VALUE )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65540333\n  
3131,     Reimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API \nI ve mostly attempted to leave the behavior untouched  but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely  but it could happen) \n- Removed logging \n- Stop swallowing interrupts \n\n(Retry of CL 65383672  which was rolled back in CL 65402625 because of breakages in mocks  fixed by lazily initializing the mutex field )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65446945\n  
3132,     Propagate RejectedExecutionException to transformed/combined futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65412634\n  
3133,     Rollback of changelist 65383672  which broke a test that mocks RateLimiter \n\n*** Original change description ***\n\nReimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API \nI ve mostly attempted to leave the behavior untouched  but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely  but it could happen) \n- Removed logging \n- Stop swallowing interrupts \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65402625\n  
3134,     When \\FFFE  \\FFFF  or ASCII control characters are found in the input  replace them with \\FFFD \nThe behavior prior to this CL is to include them in the output (for \\FFFE and \\FFFF) or to strip them (for ASCII control characters) \nThe characters are not valid in XML:    w3 org/TR/2008/REC-xml-20081126/#charsets\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65400047\n  
3135,     Reimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API \nI ve mostly attempted to leave the behavior untouched  but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely  but it could happen) \n- Removed logging \n- Stop swallowing interrupts \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65383672\n  
3136,     Remove Platform classGetSimpleName() in favor of calling class getSimpleName() directly \nThe method isn t used under GWT  so it doesn t make sense for it to be emulated in Platform \n(Coincindentally  it turns out that getSimpleName() is available under GWT nowadays  anyway )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65377305\n  
3137,     Tweaks necessary to make common collect build in Java 8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65201740\n  
3138,     Fix test that will fail in an upcoming patch to GWT \n\nThe semantics for String toUpperCase() are that of the JavaScript browser implementation and might not conform to their JRE specification \n\nIn FF  pa\\u00dfword  toUpperCase() is not  PASSWORD ; however the test was succeeding in GWT due to a pass of static evaluation that was done in the GWT compiler  The GWT compiler is removing all optimizations from -draftCompile and in that scenario the test fails \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65192347\n  
3139,     Change @since on some methods in reflect Parameter to 18 0 since the changes didn t make it in to 17 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65147685\n  
3140,     Add notes for external Guava users re  JDK 7 APIs \nDeprecate obsoleted Objects APIs \nReplace <b>Note</b>: with <b>Note:</b> in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65135062\n  
3141,     Push current RateLimiter implementation down into a subclass \nThis will make it easier to provide alternative RateLimiter implementations to replace our legacy rate-limiting APIs \nAlso  random cleanup:\n- Static import stuff \n- Use Stopwatch instead of reimplementing it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65119596\n  
3142,     Use ImmutableSet of() iterator() instead of Iterators emptyIterator() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65059838\n  
3143,     Use ImmutableSet of() iterator() instead of Iterators emptyIterator() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65046437\n  
3144,     Replace usages of deprecated IterableSubject iteratesOverSequence(   ) with iteratesAs(   )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=65045496\n  
3145,     Use Double compare() instead of Doubles compare() \nUse Float compare() instead of Floats compare() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64999716\n  
3146,     Remove workaround that was required by the <T extends Object & Iterable<?> & Iterator<?>> method \nThat method was removed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64996669\n  
3147,     Use ImmutableSet of() iterator() instead of Iterators emptyIterator() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64993582\n  
3148,     Allow disabling of guava gwt tests from command line \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64929463\n  
3149,     Roll-forward:\n\n*** Original change description ***\n\nMake common reflect build and pass tests against both Java 7 and Java 8 \n\nIn particular  Java 7 had both the TypeVariable and AnnotatedElement interfaces  which were unrelated   In Java 8  TypeVariable extends AnnotatedElement  and gained a method getAnnotatedBounds()  returning an AnnotatedType[   where AnnotatedType was an interface introduced in Java 8   \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64921461\n  
3150,     Update Guava versions to 18 0-SNAPSHOT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64904324\n  
3151,     Fix busted code tag in @return for MoreExecutors shutdownAndAwaitTermination\nUpdated javadoc in response to    google com/p/guava-libraries/issues/detail?id=1725\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64893877\n  
3152,     Add @since 13 0 to Ordering allEqual() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64777126\n  
3153,     Remove entrySet() redundancy between AbstractMultiset and ConcurrentHashMultiset \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64720096\n  
3154,     Shuffling from internal-only change \nTo be used for a temporary migration aid only!\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64716281\n  
3155,     Rollback of changelist 64659484 ( Make common reflect build and pass tests against both Java 7 and Java 8 ) \n\nOur internal build changes seem to be causing problems \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64665073\n  
3156,     - For a Collection<T> parameter that we don t know how to generate  fail the test  Previously  we would sometimes generate a Collection<String>  since the value is usually used only for equals() and hashCode() testing  (All this also applies to most other JDK and Guava collection types )    google com/p/guava-libraries/issues/detail?id=1665\n- For Optional parameters  generate Optional absent() before generating any Optional of(   ) instances \n- Deprecate setSampleInstances in favor of setDistinctValues \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64661899\n  
3157,     Make common reflect build and pass tests against both Java 7 and Java 8 \n\nIn particular  Java 7 had both the TypeVariable and AnnotatedElement interfaces  which were unrelated   In Java 8  TypeVariable extends AnnotatedElement  and gained a method getAnnotatedBounds()  returning an AnnotatedType[   where AnnotatedType was an interface introduced in Java 8 \n\nWe now have TypeVariableImpl extend a class NotAnnotatedElement  which provides an implementation for AnnotatedElement where no annotations are present  and throw UnsupportedOperationException on TypeVariableImpl getAnnotatedBounds() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64659484\n  
3158,     Change default BloomFilter strategy to be controllable by a system property for Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64657125\n  
3159,     This CL is to fix EnumMultisetTest that would otherwise break with the new FreshValueGenerator that doesn t generate raw Iterable for Iterable<T> \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64631310\n  
3160,     Temporary fix to ClassSantityTester \nWe cannot remove the fallback to Iterable class generation yet  because doing that would break some teams  tests  They need to be fixed with extra setDistinctValues() before we remove the fallback \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64603381\n  
3161,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64574375\n  
3162,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64573579\n  
3163,     Fix flaky ServiceManager test\n\nGuava issue 1715:\n   google com/p/guava-libraries/issues/detail?id=1715\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64565848\n  
3164,     Generates fresh value for Range  It was an oversight not adding it in the first place \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64481937\n  
3165,     Migrate to setDistinctValues() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64399927\n  
3166,     Added setDistinctValues() to ClassSanityTester and AbstractPackageSanityTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64398568\n  
3167,     Change default BF strategy for Guava to MURMUR128_MITZ_64 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64156827\n  
3168,     Fix minor Javadoc error in CharStreams \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64151790\n  
3169,     Improve BF serialization documentation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64144815\n  
3170,     Rollback of changelist 63979311  which changed the default BloomFilter strategy \n\nThe caused problems for teams that sent BloomFilters from new binaries to old binaries  as the old binaries could not read the new binaries  BloomFilters \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64114639\n  
3171,     Add koeln TLD \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64111945\n  
3172,     Don t allow repeated calls to hash() on a MessageDigest-based hasher \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64080687\n  
3173,     Add tests to make sure classes don t get exported to JS by accident/mistake \n\nThis happened once with SafeHtmlBuilder and I nearly did it again recently  We can export classes that make use of @CompileTimeConstant if we make sure we export only specific methods  but for now it s simpler to blank disallow any class with @CompileTimeConstant \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=64052070\n  
3174,     Switch default BloomFilter strategy from the broken MURMUR128_MITZ_32 to the\nnew MURMUR128_MITZ_64 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63979311\n  
3175,     Clean up misuses of Truth where proposition values are passed into ASSERT that() instead of the object under test   This leads to patterns like:\n\nASSERT that(myMap values() isEmpty());\n\nThe above will do exactly nothing  because Truth is a fluent API and expects a value and returns an object with custom proposition methods on it  i e \n\nASSERT that(myMap values()) isEmpty(); is the appropriate fix \n\nThis is in preparation for an upgrade to Truth which includes @CheckReturnValue on methods like  that() in order to let error-prone flag these as a compile-error \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63974750\n  
3176,     Init combinedHash to hash1 as per  Less Hashing  Same Performance:\nBuilding a Better Bloom Filter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63973319\n  
3177,     Add a new BF strategy  The old one is subtly broken  For more information  see:    google com/p/guava-libraries/issues/detail?id=1119\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63970075\n  
3178,     Fix a typo in CacheBuilder s docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63969189\n  
3179,     Add HashCode getBytesInternal() for package-private direct access to the\nunderlying  mutable byte array (for byte-based HashCodes) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63906429\n  
3180,     Change the behavior of Service Listener and ServiceManager Listener such that we guarantee that listener callbacks (for a single listener) will never be called concurrently   Previously  the only semantics we guaranteed was about the order in which callbacks were submitted to executor execute   This significantly strengthens those guarantees \n\nThis is being done to resolve the flake that cpovirk@ identified here:\n   [ /target?id=58fc52ba-a5f8-4619-83d3-ea0a28b9ee72&target=//javatests/com/google/common/util/concurrent:MediumTests\n\nThe flaky test could be fixed either by using a SerializingExecutor in the test\nor by changing the semantics of Service/SeriveManager addListener to guarantee\nserial callback execution   I ve opted for the latter since this is a very rare\nand confusing race and it is unlikely that any user would actually want their\ncallbacks to execute concurrently \n\nTo implement this I ve deleted ExecutionQueue and introduced a new object\ncalled SerialListenerQueue that is essentially\nExecutionQueue+SerializingExecutor   I ve implemented it this way rather than\nby combining ExecutionQueue with SerializingExecutor since:\n1  ExecutionQueue\trelies on poorly documented features of ConcurrentLinkedQueue\n2  ExecutionQueue is itself quite complicated\n3  that would introduce an extra queue operation per callback execution\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63836415\n  
3181,     Fix up  gwt xml file as a part of some internal changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63544353\n  
3182,     Pick up a whole lot of TLD changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63499305\n  
3183,     Change bitCount from int to long \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63498264\n  
3184,     Remove redundant  public  modifier from StatsCounter interface methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63486708\n  
3185,     Make Enums getIfPresent ~16 times faster for 80% hit rate  ~72 times faster for 20% hit rate \n\nSee:    google com/benchmark:enums getifpresent\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63478563\n  
3186,     Add missing <inherits> to modules \nThe result is that we don t have to manually include User in our compilation tests  and other users won t have to include it  either \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63444626\n  
3187,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63436180\n  
3188,     Make AtomicLongMap tests work under GWT \nSee the comments added to the  gwt xml files for the sordid details \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63401251\n  
3189,     Add missing modules \nThis ensures that the open-source build compiles all packages and has everything it needs to run all tests (or so I will claim until I find my *next* oversight :))\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63359056\n  
3190,     Prevent our rollup modules from including any  real  source files from c g c subpackages \nThis should make no difference unless we forget to list a module  in which case it will prevent us from seeing the module\ s  java files without its  gwt xml \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63357986\n  
3191,     Guava publicsuffix  gwt xml fixes:\n- Use the Guava-munged  gwt xml files rather than the Google-internal versions  (The versions are currently identical  but this will change in CL 63334981 )\n- Put the  gwt xml files under guava-gwt instead of guava  (I m not 100% sure whether this fixes any concrete problems or just removes the  gwt xml files from the main guava jar  where they clearly don t belong )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63357956\n  
3192,     Mark DoubleMath as @GwtCompatible  allowing these methods to be used from GWT code:\n- log2(double x)\n- factorial(int n)\n- fuzzyEquals(double a  double b  double tolerance)\n- fuzzyCompare(double a  double b  double tolerance)\nThe other methods are marked as @GwtIncompatible due to aspects of their implementations not being GWT-compatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63356280\n  
3193,     Override close() in all subclasses of FilterOutputStream to ensure they do not swallow exceptions thrown when flushing the delegate stream \n\n   google com/p/guava-libraries/issues/detail?id=1651\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63289125\n  
3194,     Remove inaccurate claim of GWT compatibility \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63262539\n  
3195,     Run some common collect testing tests under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63261660\n  
3196,     Remove GWT copy of ImmutableSortedSet of(E[ ) from Guava \nThe non-GWT version has been gone since CL 24279246 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63077177\n  
3197,     Release Converter from(Function  Function) for Guava 17 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63073973\n  
3198,     Fix Maven warning from duplicate Animal Sniffer reference:\n\n[WARNING  Some problems were encountered while building the effective model for com google guava:guava:bundle:17 0-SNAPSHOT\n[WARNING   build pluginManagement plugins plugin (groupId:artifactId)  must be unique but found duplicate declaration of plugin org codehaus mojo:animal-sniffer-maven-plugin @ com google guava:guava-parent:17 0-SNAPSHOT  /usr/local/google/home/cpovirk/clients/guava-white/guava-libraries/pom xml  line 184  column 17\n[WARNING \n[WARNING  Some problems were encountered while building the effective model for com google guava:guava-parent:pom:17 0-SNAPSHOT\n[WARNING   build pluginManagement plugins plugin (groupId:artifactId)  must be unique but found duplicate declaration of plugin org codehaus mojo:animal-sniffer-maven-plugin @ line 184  column 17\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63030073\n  
3199,     Adding stream based factory methods for ByteArrayDataInput/Output and tidying up to minimize actual constructors \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=63021371\n  
3200,     Add Futures inCompletionOrder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62970544\n  
3201,     Open source base Verify in Guava 17 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62936772\n  
3202,     Add a test case to EnumsTest that ensures that the Enums getIfPresent method doesn t cause a reference to the Enum class parameter to be held indefinitely \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62564526\n  
3203,     Remove  <add-linker name=\ std\ />  workaround  which is no longer necessary \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62490843\n  
3204,     Automatically add <inherits> for java * emulations to Guava \nRemove the manually added <inherits> \n\nThis change applies only to java * emulations: Normally <inherits> are added automatically as part of the build \nThe problem here was that the java * <inherits> added were for internal-only modules that only transitively pulled in the public modules \nThis change rewrites the internal-only module names to match the public module names \n\nThe result is mostly a no-op  but  in addition to some theoretically irrelevant reordering  the automation also produces a few <inherit> fixes:\n- Remove net -> util \n- Remove collect/testing -> util \n- Add collect/testing -> truth \n- Add collect/testing/google -> truth \n\nAdditionally  the automation identifies that cache was missing a BUILD dependency on util \n(It got away with it because the dependency was pulled in transitively through base  (This worked because strict Java deps doesn t fully apply to GWT ))\nI have added the appropriate dependency \n\n(This CL redoes *most* of CL 62235637 (which was rolled back in CL 62240733)  and it also touches other packages that that CL did not )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62345986\n  
3205,     *** Reason for rollback ***\n\nRemoving the rest of the  gwt xml references to java * breaks open-source compilation of files like Suppliers  so Suppliers probably needs the java * references; it just happens to be getting them now from other targets also on the classpath \n\n*** Original change description ***\n\nCleanup unnecessary gwt xml s from c/g/common/base and c/g/common/collect \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62240733\n  
3206,     Cleanup unnecessary gwt xml s from c/g/common/base and c/g/common/collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62235637\n  
3207,     Changed ArbitraryInstances to use public constant instance if present \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62232146\n  
3208,     Adding precise control over types of null queries allowed by MapFeatures \nAlso  propagate ALLOWS_NULL_VALUES to Multimap values() features \nFrom leventov ru:    appspot com/58760044/    appspot com/65730044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62226066\n  
3209,     Override toString() in Iterables consumingIterable() and\nIterators consumingIterator() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=62154162\n  
3210,     Remove javacomp_package\n\nLeaves a couple of empty builddefs files in place to avoid breaking\nprojects that still subinclude them   Those files will be removed\nonce the subincludes are all cleaned up \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61607971\n  
3211,     Add a new HostAndPort fromHost() factory  which behaves like fromParts()\nwithout the port number   This is useful for converting a host into\npossibly-bracketed form  so that a port may be appended afterward \n\nAlso  the correct buffer size is  length + 8   due to the 5-digit port \ntwo brackets  and a colon \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61830506\n  
3212,     Fix a minor nit in Futures dereference() documentation: the listener runs in either the thread that called dereference() OR the thread the completes the input future \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61801821\n  
3213,     Deprecate the primitive compare() methods internally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61755619\n  
3214,     Minor docfix in Iterators java \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61749084\n  
3215,     Increase timeouts that are expected never to expire \nUnder current timeouts  the test is flaky \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61742992\n  
3216,     Improve the error message thrown from MediaType parse() \n\nReport as    google com/p/guava-libraries/issues/detail?id=1667\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61538444\n  
3217,     Clarify javadoc of Files move; it doesn t work just like mv \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61519547\n  
3218,     Mark ImmutableMultiset toArray() tests as flaky \nThe best way I know to do that for our suite-generated tests is to mark all ImmutableMultiset/ImmutableSortedMultiset tests as flaky \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61395617\n  
3219,     grow the destination buffer more aggressively to avoid excessive array copying in escapeSlow\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61330434\n  
3220,     Add Follow-OnlyWhenPrerender-Shown http header constant \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61312752\n  
3221,     Method to shut down an ExecutorService in two phases included in j/c/g/common/util/MoreExecutors \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61230873\n  
3222,     Add a more descriptive error message when AsyncFunction apply returns null \n\nAs it currently is  the NPE gets thrown several lines later in a very confusing function which  at first glance  should not be able to produce an NPE (since outputFuture is not @Nullable)   And since outputFuture looks like (but isn t) a field  one has to search the entire class to determine how it was set to null in the first place   This adds a very clear message to the NPE saying that AsyncFunction may not return null \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61228632\n  
3223,     Correct code example in Funnel Javadoc  that uses the old deprecated-then-removed PrimitiveSink#putString(String) method \n\n   guava-libraries googlecode com/git-history/release/javadoc/com/google/common/hash/Funnel html\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61134562\n  
3224,     Deprecate the constants in com google common base Charsets for internal users  Internal users should prefer the constants in java nio charset StandardCharsets \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61098351\n  
3225,     Add closeQuietly(InputStream) and closeQuietly(Reader) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61085980\n  
3226,     Delete AndroidInteger \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61067964\n  
3227,     Mozilla TLD update \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61013135\n  
3228,     Run Animal Sniffer on guava-testlib and guava-test in addition to guava itself \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=61001284\n  
3229,     Reshuffling from internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60993826\n  
3230,     Belated nitpicking and comment revisions for TypeResolver change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60944582\n  
3231,     Change TypeResolver to not construct new TypeResolver when all the bounds remain the same  This is to work round the change in JDK TypeVariableImpl equals() \n\nIn summary:\n\n1) When <A> resolves to itself <A> (i e  all bounds resolve equal to themselves)  uses the original TypeVariable instead of the Guava artificial TypeVariableImpl  which doesn t compare equal with JDK TypeVariableImpl \n\n2) In order to do 1)  we need TypeVariableImpl equals() to compare bounds too \n\n3) Uses TypeVariableKey as key in the map from TypeVariable to Type  during resolution  This ensures that during type resolution  despite the change of equals() in 2)  the same type variable with or without partially resolved bounds is always mapped to the same resolved type \n\n4) Since JDK s TypeVariableImpl no longer compares equal with our custom TypeVariableImpl  We need to change equals() to do the same to ensure symmetry \n\n5) All of the above are done conditionally only under the new JDK \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60778041\n  
3232,     Promise at least weakly consistent iteration for asMap() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60762175\n  
3233,     Fix tests that break when Stopwatch constructors are hidden \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60761955\n  
3234,     Hide deprecated Stopwatch constructors in Guava \nThe constructors are scheduled for deletion in Guava 17 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60668113\n  
3235,     Rewrite Ints tryParse(int) with a copy of the Longs tryParse implementation  which accepts only ASCII digits \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60660931\n  
3236,     Added Media types for the following font formats: EOT  SFNT  WOFF \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60484333\n  
3237,     Fix a call to checkArgument in SimpleTimeLimiter newProxy to use string substitution \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60440806\n  
3238,     Also benchmark creating SortedSets  which predictably fare worst  but at least\nwe can observe by how much \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60385622\n  
3239,     Stop using assertSeededHashFunctionEquals for goodFastHash \nThe problem is that goodFastHash(n) is sometimes equal to goodFastHash(m) even when n and m are different \nBasically  the value is rounded up to a multiple of 128 \n(It\ s a size  not a seed as it is for the other Hashing methods )\n\nCurrently the test passes because of the specific values that the test Random generates \nHowever  which specific numbers are used for goodFastHash is dependent on the order in which the Hashing methods are tested  which is dependent on the JVM \nThe methods are reordered with the latest JDK7 build  breaking the test (at least in Guava  which has a slightly different set of methods than internally) \n\nWe could  fix  this by sorting the methods before testing them  but the fundamental problem is that assertSeededHashFunctionEquals makes sense for seeds but not sizes \n(This basic fact is hinted at by a comment that already existed in the test )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60202745\n  
3240,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60101894\n  
3241,     Use string substitution for MapMaker checkNotNull \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=60034674\n  
3242,     Remove the deprecated Service methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59981888\n  
3243,     Update Guava version to 17 0-SNAPSHOT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59979307\n  
3244,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59954427\n  
3245,     Add some performance enhancements to Striped:\n\n1  Enhance bulkGet to not call getAt() for runs of identical stripes\n2  Introduce a new Striped implementation for LazyWeak Striped instances with\nsmall numbers of stripes\n\nTo justify this I also added a caliper benchmark \n\nIt is a minor runtime improvement in all but cases where there are a small\nnumber of stripes where it is a major improvement\n\nThe LAZY_SMALL appears to be superior in all cases until the stripes size gets very large where the large array size becomes a potential issue   Due to this i have introduced a static integer LARGE_LAZY_CUTOFF at 1024 so that lazyWeak striped instances with more than that many stripes use the legacy implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59821299\n  
3246,     Fix LocalCache asMap() values() to not implement Set \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59806114\n  
3247,     Allow for the possibility of the CacheLoader load not taking enough time for the system clock to tick in LocalLoadingCacheTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59799155\n  
3248,     Change SortedMapTestSuiteBuilder and DerivedCollectionGenerators to correctly handle SortedMaps whose keySet()s are not SortedSets--the spec of SortedMap keySet() doesn t require that it return a SortedSet  and it apparently didn t at least for TreeMap in JDK5 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59756355\n  
3249,     Remove deprecated  unused  Google-internal Futures transform overload that accepts a plain Future \nThe ListenableFuture overloads appear to be serving users well \nFor those users who are stuck with a plain Future  we still provide Futures lazyTransform  which has similar but not identical behavior to Futures transform  Specifically  lazyTransform does not cache the result of the transformation  This could in principle result in Futures whose value changes over time  This  along with the potential costs of repeated function application  is a reason to prefer Futures transform when possible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59754254\n  
3250,     Fix a number of test failures running the backport under JDK5 \n\n- Sets testPowerSetIteration seemed to be relying on the order of elements in a HashSet \n- ImmutableSortedSetTest testDifferentComparator_serialization was relying on Collections reverseOrder() deserializing to the singleton instance of it \n- ImmutableSortedMultisetTest testCopyOfDefensiveCopy and testCopyOfSortedDefensiveCopy were relying on the JDK calling toArray()  while JDK5 is calling toArray(T[ ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59749873\n  
3251,     Cache the reverse Converter view to avoid allocating every time reverse() is\ncalled \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59697492\n  
3252,     Add SortedCopyBenchmark and document its findings in the Ordering javadoc \nFirst rename away the existing benchmark for measuring comparator delegation\noverhead \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59694095\n  
3253,     Fix up ExecutionQueue docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59677053\n  
3254,     Clarify the relationship between Iterables toString(collection) and collection toString() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59586049\n  
3255,     Javadoc tweaking \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59531412\n  
3256,     Add tests for inserting null values into a Multimap \nI was unable to reproduce the behavior reported at    com/questions/21078379/guava-null-pointer-on-multimap-with-multiple-null-values\nMaybe it depends on the JRE version  since  as you noted  old JREs had a TreeSet bug \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59522383\n  
3257,     Change a couple of usages of Deque push() and pop() to addFirst()/removeFirst()  reducing the delta for the JDK5 backport slightly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59415987\n  
3258,     Add iteration order discussion to SortedMultiset doc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59412449\n  
3259,     Some changes to CharMatcher WHITESPACE implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59409460\n  
3260,     Remove use of JDK7 API in ServiceManagerTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59402724\n  
3261,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59362873\n  
3262,     Functions forMap and Maps asConverter should have cross-references in their documentation  as well as the two forms of Functions forMap with each other \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59349470\n  
3263,     Replace  fail(   ); return x;  with  throw new AssertionFailedError(   ); \nThis eliminates some unreachable code that the compiler couldn\ t prove was unreachable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59341803\n  
3264,     Remove unused private nested class from SortedMapInterfaceTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59335399\n  
3265,     Add @CheckReturnValue annotation to Objects equal() so that error-prone\nenforces that the return value is used \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59280111\n  
3266,     Create a Google-internal RateLimitingExecutorService \n\nThe only thing needed from RateLimiter was a pair of methods to get a permit without sleeping \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59264619\n  
3267,     Cleanup from rename of asyncReload() to asyncReloading() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59229767\n  
3268,     Rename CacheLoader asyncReload to asyncReloading \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59214974\n  
3269,     Update Converter javadocs:\n-added a link to Maps asConverter()\n-added a note saying do not call the SPI methods directly\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59155849\n  
3270,     Change CharSource wrap(   ) toString() to use Ascii truncate and increase the maximum number of characters to truncate at  Also change ByteSource wrap(   ) toString() to truncate the hexadecimal representation of the byte array \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59155734\n  
3271,     Release CacheLoader asyncReload() in Guava 17 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59050926\n  
3272,     Change toString() methods of returned Predicate instances to consistently use the  code-like  style \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59050444\n  
3273,     Move configuration to the constructor \nThat s where we do it in other packages \nPlus  it s ever so slightly less code \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59041814\n  
3274,     Optimize BigIntegerMath sqrt(BigInteger  CEILING)  which needs to test if the square root is exactly an integer  by doing a quick check in int arithmetic first \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59039597\n  
3275,     Clarify the relationship between the two wrapTask methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59003211\n  
3276,     Miscellaneous cleanups:\n- Remove unused ImmutableSortedMultiset Builder comparator \n- Change @link to @linkplain where appropriate  and fix a couple busted @link tags seen along the way (based on a search for \  @link\\b[^  *([ * +[^ *  *[^ *  *[^ *   ) 3 \ )  (Change one @link in ServiceManager to @code ) In a couple cases (TimeUtil  ServiceModule)  the text ought to be *partially* code font  but I haven\ t taken further action\n- Strip Converter from implementation from Guava  since Converter from itself is stripped \n- Run trivial RunnablesTest under GWT \n- Remove a few instances of  $inheritDoc   which should have been  @inheritDoc  and wasn\ t necessary anyway \n- Remove per-method @GwtIncompatible annotations from SmallCharMatcher  which is entirely @GwtIncompatible \n- Remove stray blank line in AbstractMapBasedMultimap \n- Insert missing space in UninterruptiblesTest failure message \n- Remove extra space in WrappingExecutorService wrapTask Javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=59001342\n  
3277,     Make some minor simplifications in common base \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58996623\n  
3278,     Remove use of JDK 7 language feature from a Guava benchmark  Guava hasn t\ndesupported JDK 6  and even when it does we may still want benchmarks to be\nrunnable against older vms \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58938655\n  
3279,     Mark isSmall as @GwtIncompatible \nIt references the @GwtIncompatible type SmallCharMatcher \nThis works fine in prod mode  but it breaks in dev mode \nSee    google com/p/google-web-toolkit/issues/detail?id=8510 and the discussion on linked CL 39931458 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58906855\n  
3280,     Add benchmark methods to determine efficiency of map iteration using both entry set and key set \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58904951\n  
3281,     Remove Platform charBufferFromThreadLocal layer of indirection  which existed for GWT purposes \nIt hasn t been used from GWT code since the escapers were moved from common base to common escape \nIts one remaining (Google-internal) caller was never GWT compatible  so the caller didn t actually need to use the method (though it has done so since its creation back in CL 24637091) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58904453\n  
3282,     Small Converter cleanups:\n-move all @annotations to individual lines\n-fix some @Nullable annotations\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58824450\n  
3283,     Remove null boilerplate from Converter subclasses \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58787043\n  
3284,     Converter from(forwardFunction  backwardFunction)  This will be essential in\nJDK 8  It s probably not that useful before then  but    why not?\n\n(Converter from is Google-internal currently  but we ve accidentally released the implementation  We ll strip it out later )\n\nSneak in a few javadoc tweaks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58786360\n  
3285,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58655362\n  
3286,     Update common io package-info java to refer to Sources and Sinks rather than Input/OutputSuppliers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58567579\n  
3287,     Slightly adjust Ordering from() doc to be more amenable to the jdk 8 future \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58558868\n  
3288,     Remove doc references to the deprecated service methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58500316\n  
3289,     Compile Guava GWT tests with -strict \nWe already compile the prod code with -strict \nI assume that I just didn t realize that -strict was valid for the test goal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58499115\n  
3290,     Make some changes to MultimapBuilderTest to make it build in GWT (2 5 0-rc1  which Guava is using currently) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58497528\n  
3291,     Fix arrayListValues(int) in MultimapBuilder to actually throw IAE when expectedValuesPerKey is negative \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58491662\n  
3292,     Open source HashingInputStream and HashingOutputStream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58485637\n  
3293,     Open source Runnables doNothing() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58481831\n  
3294,     Open source MultimapBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58480935\n  
3295,     Open source tests for ByteSource read(ByteProcessor) and CharSource readLines(LineProcessor) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58426058\n  
3296,     Remove Closeables closeQuietly in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58425087\n  
3297,     Deprecate InputSupplier  OutputSupplier and all public methods in common io that use either type  Also release methods on Byte/CharSource that take ByteProcessor and LineProcessor so that the equivalent methods in Byte/CharStreams can be deprecated reasonably \n\nSchedule InputSupplier and OutputSupplier to be removed in June 2015 (they weren t @Beta apparently) and schedule the deprecated methods to be removed in 18 0  to give plenty of time for conversion \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58420238\n  
3298,     Make CaseFormat converterTo()  Enums stringConverter()  and Maps asConverter()\nreturn serializable converters with reasonable equals()  hashCode()  and\ntoString() representations \n\nWeakly deprecate Enums valueOfFunction() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58359600\n  
3299,     Import publicsuffix org s test data \nRun the tests as part of the tests of InternetDomainName topPrivateDomain()  suppressing those that fail \n(Plus miscellaneous no-op changes to the test )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58354304\n  
3300,     Open source Converter and friends in Guava 16 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58300985\n  
3301,     Improve some javadoc in Preconditions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58300765\n  
3302,     Rewrite type conversion to be acceptable to not only JDK8 but also Eclipse \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58300702\n  
3303,     Remove DI annotations from ServiceManager \n\nIf this breaks your server due to a missing @Inject constructor on ServiceManager  please install a com google common util concurrent ServiceModule in your injector to provide an identical binding \n\nTap global presubmit has been run with this change multiple times to try to identify all servers that would break when this constructor is deleted  all those injectors/servers have been fixed   However  if your injector does not have a tap test that would expose this issue  this cl may break your server   The fix is simple  please let me know and i can send advice/followup cls \n\nThis is the final step of a Large Scale Change ([ across [    See    google com[ document/d/1HxavPxi9152BGIhWhfpwXhrj2Roagq4rgj5f-PiBGl0/edit?usp=sharing for more information \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58291439\n  
3304,     Reformat file to 100 columns  except the class docs which will be completely\nreplaced by [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58284754\n  
3305,     Link to JDK7 Javadoc instead of JDK6 \nI m not sure where the JDK6 default is coming from  but this is sufficient to override it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58277660\n  
3306,     Simplify EqualsTester/EquivalenceTester/RelationshipTester by pulling the common assertions up into RelationshipTester \nThis reduces duplication and removes the need to rewrite exception messages \n\nWhile there  tweak a few other things  notably making itemReporter a final field \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58110002\n  
3307,     Stabilize the UncaughtExceptionHandlers against exceptions thrown in\nlogging  Quoting from the Java manual:  Any exception thrown by this\nmethod [uncaughtException  will be ignored by the Java Virtual Machine  \nThis seems slightly paranoid  but doesn\ t cost us much and avoids stupid\nnon-terminations in OOM situations or other logging failures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58086612\n  
3308,     Fix tiny javadoc syntax mistake \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58069740\n  
3309,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58069096\n  
3310,     Temporarily strip testCleanupOnReferenceCollection from Guava \nIt fails when run under Maven in a 64-bit JVM  probably because it tries to fill up the presumably larger heap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58051028\n  
3311,     Improve the example in FinalizableReferenceQueue  Previously it would always  log a message about how nobody called close  even if somebody did in fact call close \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=58001245\n  
3312,     Add an example to the javadoc for FinalizableReferenceQueue \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57993804\n  
3313,     Change TypeToken method() and TypeToken constructor() equals implementation such that List<Integer> get() is unequal to List<String> get() and List get()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57989174\n  
3314,     Clarify the performance improvements of Ordering sortedCopy over alternative implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57924772\n  
3315,     Attempt to fix AbstractInvocationHandler s equals implementation that may fail for JDK type proxies  after reserialization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57918440\n  
3316,     Ensure that Lists transform preserves IndexOutOfBoundsExceptions thrown by the transform function \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57916083\n  
3317,     the the -> the\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57915223\n  
3318,     Deprecate implementations of Predicate apply that should never be invoked directly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57908208\n  
3319,     Include the key in the recursive load exception  to make debugging easier \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57905649\n  
3320,     Multimap method javadocs: a few improvements  This doesn t by any means complete the job of perfecting all the docs in this interface \n\nI ve removed @param and @return clauses that add no value (which was all of them in the former case) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57822103\n  
3321,     Automated g4 rollback of changelist 57771110 \n\n*** Reason for rollback ***\n\nBreaks some tests who are depending on a specific toString() implementation \n\n*** Original change description ***\n\nChange toString() methods of returned Predicate instances to consistently use the  code-like  style \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57776968\n  
3322,     Change toString() methods of returned Predicate instances to consistently use the  code-like  style \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57771110\n  
3323,     Stop ignoring    sun com/bugdatabase/view_bug do?bug_id=6529795 in iterators now that the bug has been fixed in the JDK for a while \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57745078\n  
3324,     Make CombinedFuture stop logging identical exceptions multiple times\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57675851\n  
3325,     Rename common collect methods named removeIf  to prevent shadowing in JDK8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57673689\n  
3326,     Rename Splitter spliterator to splittingIterator  to proactively prevent name shadowing with Java 8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57671698\n  
3327,     Move GenerateTldPatterns to a new directory \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57607554\n  
3328,     Adding equalsIgnoreCase for ASCII only  This exists because there\ s generally no good reason to use String equalsIgnoreCase() with non-ASCII data (you should be using proper unicode normalization) \n\nIdeally we would migrate anyone calling\nequalsIgnoreCase( <ascii only>   x)\nequalsIgnoreCase(x   <ascii only> )\nto use this and provide an error prone check for things like:\nstring toLowerCase() equals( <lower case ascii> )\nstring toUpperCase() equals( <upper case ascii> )\n\nAlso provide benchmark (4x-5x faster than String equalsIgnoreCase()) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57357299\n  
3329,     Javac 8 clean-up \n\nJavac 8 places additional restrictions on generic type inference  and will\noccasionally report an inference error in situations where javac 7 would have\nbeen more permissive  This change allows compilation with javac 8 to succeed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57309921\n  
3330,     Deprecate implementations of Function apply that should never be invoked directly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57308600\n  
3331,     Rewrite the Tld Pattern generator  take 2 \nThis CL adds the possibility to reuse the pattern generator for other template files  Also now the generator keeps track about which tld patterns are from the official ICANN list  and which patterns are private \n(Roll forward of CL 56906311  which was rolled back in CL 56996630  with a fix for the multiple internal-only GWT modules in com google common net )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57258531\n  
3332,     Remove the ServiceManager constructor that used to be annotated with @Inject \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57132730\n  
3333,     Removed unnecessary static imports as they are pulled in through\njunit framework TestCase \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57073259\n  
3334,     Some documentation improvements for Ascii truncate \n\nAlso remove the overload that used       as a default truncation indicator because:\n- Some people might assume that it used no truncation indicator (  )\n- It\ s easier to understand when reading if the indicator is passed explicitly\n- No need to warn people about       not being what they want to use for some locales\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57067405\n  
3335,     Make the constructors on Source/Sink classes protected \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57057612\n  
3336,     Retrying changelist 56687027  RateLimiter: make the acquire() methods return the time slept (instead of void) \nRationale: allow clients to keep track of whether they are rate-limited; useful to update e g  Varz/Streamz \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57014398\n  
3337,     Inline checkNotNull call \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57011958\n  
3338,     Remove ByteBuffer usage in ConcatenatedHashFunction makeHash() method and use HashCode writeBytesTo instead \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=57005557\n  
3339,     Minor improvement to Ascii truncate implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56999832\n  
3340,     Add Ascii truncate methods  which truncate a string to a maximum length  appending a string such as       as an indicator if the resulting string was truncated \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56998047\n  
3341,     Rollback of changelist 56906311 \n\n*** Original change description ***\n\nRewrite the Tld Pattern generator \n\nThis CL adds the possibility to reuse the pattern generator for other template files  Also now the generator keeps track about which tld patterns are from the official ICANN list  and which patterns are private \n\n***\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56996630\n  
3342,     Don t use Preconditions checkArgument in primitives checkedCast methods  as it boxes for what should be a very fast method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56995761\n  
3343,     Minor changes to TearDownStack:\n- Changed logger to be private and removed explicit static reference \n- Removed t getMessage() in logging statement as this is duplicated\nwhen t is printed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56992155\n  
3344,     Belatedly add Justin s comments from an old email exchange \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56987273\n  
3345,     Specify that behavior is undefined for non-ASCII input \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56954960\n  
3346,     Remove checkNotNulls in MapJoiner that existed to satisfy NullPointerTester before it accepted UnsupportedOperationException\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56953505\n  
3347,     Add warning to CharMatcher DIGIT\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56937982\n  
3348,     Remove Stopwatch elapsedTime and elaspedMillis\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56909797\n  
3349,     Fix some typos in Equivalence \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56907469\n  
3350,     Rewrite the Tld Pattern generator \n\nThis CL adds the possibility to reuse the pattern generator for other template files  Also now the generator keeps track about which tld patterns are from the official ICANN list  and which patterns are private \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56906311\n  
3351,     Shuffling from internal-only changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56868933\n  
3352,     Update Mozilla public suffix list from 2013-06-06 to 2013-11-07 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56847666\n  
3353,     Mark a test that uses StringBuilder appendCodePoint as GwtIncompatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56553406\n  
3354,     Optimize Utf8 encodedLength even more  at the cost of increased complexity \nI continue to be surprised by the size of the branch-mispredict penalty \n\nI added tricky overflow logic to remove the need to use longs \n\nDiscussion on guava-discuss\n   google com/forum/#!msg/guava-discuss/cMMsMJ8SGD4/vjmklk0kenIJ\n\nBenchmark notes:\n\n(for client in vanilla Utf8 Utf-3; do g4d $client && g4 sync && [  run --java_cpu=k8 -- javatests/com/google/common/base:Utf8Benchmark -DmaxCodePoint=0x80 0x90 0x100 0x800 0x10000 --trials=2 --benchmark=lengthOfString lengthOfStringBuilder; done)\n   googleplex com/runs/607baae7-a24a-40b7-a3d0-6892c129f1fe # vanilla\n   googleplex com/runs/71ac4495-1d70-4265-ab58-23e61095ff27 # Utf8\n   googleplex com/runs/124a69f7-d87b-48c6-95d4-22cbbafe774d # Utf-3\n\n5x faster for 0x100 !\n\nSee [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56498817\n  
3355,     Add EvictingQueue remainingCapacity() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56474670\n  
3356,     Lots of minor cleanups and simplifications \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56467585\n  
3357,     Lazy-initialize all the things (in Hashing)  For some of these this may be overkill but we have reports of major <clinit> slowness on Android \n\n   google com/p/guava-libraries/issues/detail?id=1574\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56406847\n  
3358,     Make ImmutableClassToInstanceMap serializable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56232403\n  
3359,     Use CollectPreconditions checkNonnegative more widely in common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=56097311\n  
3360,     Fix incorrect reference to in javadoc  Iterator should be iterable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55950925\n  
3361,     Remove beans xml from Guava \n\nIt no longer serves any purpose now that there are no JSR-330 annotations in\nGuava  and it was a problem to begin with \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55883109\n  
3362,     Remove the jsr-330 annotations from ServiceManager and remove javax inject from\nthe guava pom xml since this was the only use \n\nSee    google com/p/guava-libraries/issues/detail?id=1433 for the\nhilariously depressing rationale \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55868332\n  
3363,     Fixed incorrect placement of   in Iterables contains method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55810948\n  
3364,     Remove deprecated methods that had been hanging around without specified removal dates / Guava versions:\n- ImmutableSet of(E[ )  which has been replaced by copyOf(E[ ) and which was removed from the  plain Java  code long ago but has hung around in the GWT version \n- InternetDomainName fromLenient() and name()  which have been replaced by from() and toString() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55803460\n  
3365,     s/delimeter/separator/  We converged on  separator  a while ago  but missed fixing this one because it\ s misspelled \n\nA  delimeter  is a unit measuring one\ s current distance from sandwiches  I am hereby not allowed to use that joke again for at least five years \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55638928\n  
3366,     Warnings-related cleanup to c g c base and its tests  Ruthlessly standardizing the comment we use so these can potentially be replaced with string constants one day  In some cases I have actually removed unjustified suppressions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55637082\n  
3367,     Migrate from deprecated InternetDomainName name() to equivalent toString() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55556636\n  
3368,     Ensure that failures get logged before transitionService is called \n\nSee the bug for context  but the tldr is that a server was exiting in response to startup failure and this happened before the root cause was logged \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55509012\n  
3369,     Fix Equivalence#wrap documentation to match the appropriate usage of the method (and the javadoc on the Wrapper class)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55467018\n  
3370,     Explicitly test that BREAKING_WHITESPACE is a subset of WHITESPACE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55422871\n  
3371,     Improve mod javadoc even more \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55375877\n  
3372,     Improve the javadoc for mod \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55370624\n  
3373,     Fix a flaky test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55362090\n  
3374,     Add benchmarks for Utf8 length \n\nThe biggest surprise for me was seeing how much performance of\nthis micro-benchmark is dominated by branch-prediction\npenalty - 0x100 is twice as slow as either 0x90 or 0x800 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55358109\n  
3375,     Micro-optimize  especially for runs of ASCII \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=55130107\n  
3376,     Mark CartesianList as RandomAccess \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54897081\n  
3377,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54791037\n  
3378,     Remove the use of deprecated Service methods from the Abstract*Service test cases \n\nThere are hardly any callers left! In fact i think these tests account for >50% of remaining callers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54784808\n  
3379,     Fixed the javadoc of RangeSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54694622\n  
3380,     Instead of just tracking our state via 2 integers in ServiceManager State track all current service states via a Multimap<State  Service> \n\nThis enables some features \n\n1  servicesByState() returns a consistent snapshot\n2  TimeoutExceptions report on the services that caused the timeout\n3  IllegalStateExceptions from awaitHealthy report on the services that are not running\n\nAlso  this slightly simplifies the relationships between our 3 objects (ServiceListener  ServiceManager State and ServiceManager) since ServiceManager no longer holds a reference to the Listeners directly \n\nThis should also fix b/10734437 because it simplifies the way that the stopwatches are handled and we also use a weak reference between the Listeners and ServiceManagerState to ensure that if the service manager is only partially constructed the listeners will become no-ops \n\nI am not super tied to using the weak reference to solve this problem but it seems weird to keep updating this state object when there are no references to it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54239479\n  
3381,     And let s rename Utf8 length() one more time  this time to Utf8 encodedLength() \nFrom here on out we really should rename this method no more than once a week \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54213513\n  
3382,     Port protobuf s UtfDecodingBenchmark for Utf8 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=54140446\n  
3383,     Document compare() methods to point out their JDK equivalents \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53930986\n  
3384,     Rename methods in the new Utf8 class  rewrite some javadoc  and a few very small code improvements \n\nutf8Length -> length\nisValidUtf8 -> isWellFormed\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53921068\n  
3385,     Delete ForwardingService   it has been deprecated for two guava releases now so i think it is time to drive the stake through the heart of this beast \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53861773\n  
3386,     Fix failure in MapsTest with coming-soon jdk \nI couldn t restrain myself from renaming sizeOf \n\njdk_into_perforce /auto/buildstaticnorep/projects/java/sun-jdk/linux-i586/jdk7-google-trunk-latest\n[  test --host_javabase=//testjdk --javabase=//testjdk --java_langtools=//testjdk:langtools --javac_bootclasspath=//testjdk:langtools-bootclasspath //javatests/com/google/common/collect:SmallTests\n[ \n1) testNewHashMapWithExpectedSize_wontGrow(com google common collect MapsTest)junit framework AssertionFailedError: expected:<0> but was:<1>\nat com google common collect MapsTest testNewHashMapWithExpectedSize_wontGrow(MapsTest java:124)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53835727\n  
3387,     Added more javadoc to AbstractPackageSanityTests for Guava bug 1535\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53743498\n  
3388,     Fix low-hanging rawtypes warnings in javatests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53733108\n  
3389,     Remove or hide APIs scheduled for deletion in Guava 16 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53732502\n  
3390,     Clone c g protobuf Utf8 to c g common io Utf8 and add new utf8Length(String) static method  Callers will be migrated in future changes  It is currently unknown whether protobuf itself will be able to depend on Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53696008\n  
3391,     Add a couple @since tags for recent additions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53671037\n  
3392,     Add function to return the number of boolean values that are true from a variable length boolean input \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53643457\n  
3393,     Include common xml s package-info in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53568852\n  
3394,     Update ChainingListenableFuture docs to explain why the UndeclaredThrowableException special case exists and why it is no longer necessary \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53489160\n  
3395,     Move htmlEscaper to the top \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53344665\n  
3396,     Followup javadoc changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53298273\n  
3397,     Make it possible to use class path to retrieve non-top level classes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53297583\n  
3398,     Ensure that AbstractIterator does not hold onto its next reference after it has been returned by next() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53283705\n  
3399,     Verify that listeningDecorator does not decorate simple tasks submitted with execute():\n   com/a/19009309/28465\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53264107\n  
3400,     Optimize Ascii#toUpperCase and Ascii#toLowerCase  Don t recreate a String if the input String is already upper-cased/lower-cased \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=53066382\n  
3401,     Fix argument order in Futures sample code \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52670595\n  
3402,     Make EvictingQueue serializable \nSee    google com/p/guava-libraries/issues/detail?id=1537\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52532527\n  
3403,     Change all the reference to event handler to event subscriber \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52404442\n  
3404,     Fix medium-hanging rawtypes warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52391647\n  
3405,     Add @since tags and nitpick Javadoc formatting from CL 52250001 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52286822\n  
3406,     Introduce the SubscriberExceptionHandler \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52250001\n  
3407,     Change PathByteSource in MoreFiles to not use Files readAllBytes() for its read() method  as Files readAllBytes() creates 2 unnecessary copies of the byte array the file is read into in the normal case where the file doesn t change size \n\nIn the process of doing that  a few other changes:\n- Change both PathByteSource and FileByteSource to delegate to a new package-private method ByteStreams toByteArray(InputStream  int) which handles reading to a byte array when you have an expected size \n- Also change both implementations to get the expected size for the file from the size() method on FileChannel/SeekableByteChannel instead of reading the size attribute before opening the stream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52120076\n  
3408,     Use @link and @linkplain in Objects firstNonNull() javadocs \n\nSee    google com/p/guava-libraries/issues/detail?id=1526\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=52109962\n  
3409,     Update Guava pom xml files to version 16 0-SNAPSHOT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51967518\n  
3410,     Make it obvious that RateLimiter can handle < 1 qps \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51961102\n  
3411,     Remove compare(boolean  boolean)  which has been renamed to compareFalseFirst \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51892007\n  
3412,     Avoid array allocation in HashCode writeToBytes() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51848312\n  
3413,     Second guess CL 43477677 s de-@Beta-fication of allAsList and successfulAsList \nThere are still issues to settle:    google com/p/guava-libraries/issues/detail?id=1519\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51620880\n  
3414,     Change ByteSource concat and CharSource concat to not blow up on infinite Iterables  This also helps users whose Iterables actually eagerly load data to create sources when iterated  though ideally they shouldn\ t be doing that \n\nAlso fix some javadoc formatting and suppress a couple  possible heap pollution  warnings \n\nSee Guava issue:    google com/p/guava-libraries/issues/detail?id=1516\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51552427\n  
3415,     Bring @GwtCompatible annotations into line with reality \nFuture CL 51540044 will add tests to verify this automatically \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51547670\n  
3416,     Miscellaneous cleanups:\n- Add spaces between keywords and parentheses (e g    for(  ->  for ( )  fixing up some indentation and missing braces along the way \n- Declare Platform classes as |final|  and add private constructors \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51540900\n  
3417,     Adding missing dependency \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51434507\n  
3418,     Replace CharMatcher WHITESPACE by a much faster implementation as it doesn t deserve to be slowed down by division \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51342342\n  
3419,     mark AbstractService startAndWait()/stopAndWait() as non-final due to test breakages\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51323441\n  
3420,     Fix broken test name that prevents test from running \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51318709\n  
3421,     Mark the new Service methods as final in AbstractService \nAbstractExecutionThreadService  AbstractIdleService and\nAbstractScheduledService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51305735\n  
3422,     Make WrappingScheduledExecutorService s constructor protected  rather than package-private  (This is consistent with WrappingExecutorService )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51273229\n  
3423,     Make the supersource for GWT version of com google common collect Java 7 compatible \n\nThe non GWT version of the collection classes were made Java 7 compatible in CL 13495337 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51266213\n  
3424,     Fix documentation for c g common collect Maps transform Values Entries  \n\nIt used to refer to methods that no longer exist \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51253115\n  
3425,     This CL fixes usage of equality operators for subclasses of java lang Number  Comparing numeric objects using  ==  tests for reference equality  when most likely value equality is intended  This an automated fix using error-prone \n\nWe intend to make this a compilation error in Google\ s Java compiler  so it is necessary to fix existing occurrences first to avoid breaking builds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51251971\n  
3426,     Add DoubleMath mean  (Includes a few drive-by lint fixes on DoubleMathTest )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51173415\n  
3427,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51147719\n  
3428,     Fix TreeTraverser s class javadoc to the correct result for a breadth-first traversal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51145407\n  
3429,     In the FinalizableReferenceQueue code  remove the unnecessary nested exception\nclass Finalizer ShutDown  which could cause problems if the URL for the\nclassfile of Finalizer was not related in the obvious way to the URL for the\nclassfile of Finalizer ShutDown  This is Guava issue 1505\n<   google com/p/guava-libraries/issues/detail?id=1505> reported by\nJesse Glick <jglick@cloudbees com>  and the fix is based on the patch he linked\nto there \n\nAlso add a test to ensure that Finalizer doesn t acquire other nested classes\nin the future \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51090847\n  
3430,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=51059733\n  
3431,     Update Mozilla PSL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50980142\n  
3432,     Add  text/tab-separated-values; charset=utf-8  as constant MediaType TSV_UTF_8\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50964188\n  
3433,     Ensure that CharMatcher precomputed() doesn t change description \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50957795\n  
3434,     Fix a wrong description in CharMatcher \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50956932\n  
3435,     Add documentation that SetMultimap and mutable values don t get along  as per Guava issue 357      google com/p/guava-libraries/issues/detail?id=357\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50924610\n  
3436,     Small simplifications to LocalCache to extend AbstractReferenceEntry where possible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50778090\n  
3437,     Actually fix tearDown handling that was made worse in CL 50062431 \n- The behavior before that CL was to ignore exceptions thrown by tearDown \n- The behavior currently is to exceptions thrown by tearDown unless there was another exception thrown by the test itself  in which case we overwrite the test s exception with the tearDown s exception \n- The new behavior is to respect the exception from tearDown unless an exception from the test itself exists to override it  This matches the JUnit behavior  Really \n\nThis time  I ve added (internal-only) tests \nI also improved some error logging in the tests while I was debugging \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50778046\n  
3438,     This CL fixes invalid self-referential collection operations (c addAll(c)  c removeAll(c)  c retainAll(c)  and c containsAll(c))  Such cases are either no-ops  undefined behavior  or unnecessarily complicated  and often reveal bugs  This an automated fix using error-prone \n\nWe intend to make this a compilation error in Google s Java compiler  so it is necessary to fix existing occurrences first to avoid breaking builds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50739321\n  
3439,     Fix a race condition in\nAbstractServiceTest#testListenerDoesntDeadlockOnStopAndWaitFromTerminated \n\nThe race condition is triggered due to a slight difference in the behavior of\nstartAsync() awaitRunning() vs  startAndWait()\n\nstartAndWait() would return RUNNING even if the service in question was\nalready TERMINATED whereas awaitRunning() will throw if the state is\nTERMINATED when it is called \n\nThe service in question here very quickly transitions from\nSTARTING->RUNNING->TERMINATED so depending on thread timing awaitRunning\ncould observe the service as RUNNING or as TERMINATED  the fix is to have the\nservice shutdown be triggered by a call to stop rather than happening\nautomatically \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50639385\n  
3440,     Fix division bug in HashCode writeBytesTo()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50635321\n  
3441,     Service rewrite!  Add new methods to service so that we can move users away from the confusing ListenableFuture based methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50634823\n  
3442,     Move hashCode() implementation into abstract parent class instead of\nsubclasses \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50632699\n  
3443,     Extract CollectPreconditions with some common checks \nUse those checks more widely  especially checkRemove \nMore importantly  use checkEntryNotNull to include the key and value in  null key/value  NPEs of ImmutableMultimap and GWT-only ImmutableMap/ImmutableBiMap \n(Non-GWT ImmutableMap/ImmutableBiMap already got this right )\nPlus  make ImmutableMap copyOf(enumMap) and ImmutableMultimap put(Entry) resilient to entries whose keys or values become null midway through construction \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50631776\n  
3444,     MOE insert public for com google common hash HashCodes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50582094\n  
3445,     Fix small LocalCacheTest bug\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50580565\n  
3446,     Add fragment escaper \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50515561\n  
3447,     Update javadocs for HashCode fromString() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50463690\n  
3448,     Add HashCode fromString(String) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50449901\n  
3449,     Copy static factory methods from HashCodes to HashCode \nDeprecate the old methods in HashCodes \nUpdate usages in com/google/common/hash to use new methods \nMove the tests from HashCodesTest to HashCodeTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50448177\n  
3450,     Add test demonstrating perhaps incorrect behavior of\nHashCode hashCode() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50390060\n  
3451,     Small javadoc tweaks to Stopwatch based on external Guava issue #1492 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50384056\n  
3452,     Elements of Sets powerSet should support contains() in O(1) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50069151\n  
3453,     Javadoc improvements:\n- Minimize the importance of  short circuiting  in ComparisonChain \n- Fix copypasta ListenableFuture doc to refer to  this Future  instead of  the input Future  \n- Specify the exit status used by UncaughtExceptionHandlers systemExit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50066092\n  
3454,     Don t ignore exceptions thrown by tearDown() (unless they would mask exceptions from the test itself) \nThis puts our generated GWT tests in line with what JUnit normally does \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50062431\n  
3455,     Tiny simplifications to HashBiMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=50050765\n  
3456,     Make generic type <E extends Comparable> instead of <E> for priority\nqueues \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49949075\n  
3457,     Added constants for HPKP (public key pinning) headers \n\nSee    ietf org/html/draft-evans-palmer-key-pinning-08\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49911987\n  
3458,     Added constant for Strict-Transport-Security header as defined in    ietf org/html/rfc6797#section-6 1 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49905943\n  
3459,     Fix BaseEncodingTest#testBase16UpperCaseIsNoOp to actually test what it s meant to test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49905873\n  
3460,     Overhaul of the Queues javadocs on the static factory methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49900450\n  
3461,     Shuffling from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49835144\n  
3462,     Change AbstractListeningExecutorService to extend AbstractExecutorService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49779273\n  
3463,     Mark some of the worst-performing tests on GWT as @GwtIncompatible  to speed up tests slightly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49627900\n  
3464,     Provide JDK sources when generating Javadoc \nThis enables Javadoc to inherit documentation from JDK supertypes \n   google com/p/guava-libraries/issues/detail?id=1181\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49615231\n  
3465,     Add publicApiOnly (shuffling resulting from internal-only change) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49600551\n  
3466,     Give a removal date for PrimitiveSink putString(CS) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49578904\n  
3467,     Add some missing @since 15 0 tags \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49577247\n  
3468,     Add DiscreteDomain bigIntegers()  which was in fact already implemented and tested \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49576220\n  
3469,     A few small Javadoc changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49575019\n  
3470,     Removing unnecessary index bounds check for lazy striped when\nall bits of the hashcode are to be used \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49571072\n  
3471,     Delete DiscreteDomains for Guava 15 \nRemove erroneous @since 15 0 on deprecated method InternetDomainName name() \nUnstrip a couple of classes that are now public in collect/package-info java \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49570015\n  
3472,     Note that arrays get no special treatment in Objects hashCode javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49561753\n  
3473,     Fix a couple of issues with JDK7 javadoc style by using a slightly customized version of the default stylesheet in Guava  Specific issues this fixes:\n\n- Huge text with a slightly misaligned first line in <pre> @code  blocks in Guava javadoc (for example  see    guava-libraries googlecode com/git-history/v14 0 1/javadoc/com/google/common/io/Closer html)  Both <pre> and <code> were increasing the font size  This changes the <code> block to inherit the font-size of the <pre> block \n- No blank line before <pre> blocks in class-level javadoc  A CSS class rule for a div surrounding the class level javadoc set <pre> s margin-top to 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49515875\n  
3474,     Add Queues synchronizedDeque(Deque<E>) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49514053\n  
3475,     - Move close of <pre> @code  blocks (i e    </pre> ) that are on a separate line up to the last line of the block contents  eliminating an extra blank line between the pre block and what follows \n- Change a number of <pre> blocks to <pre> @code  blocks \n- Remove @Override from methods inside several <pre> @code  blocks  When they\ re preceded by a    they cause javadoc to screw up by thinking they\ re an invalid javadoc tag  even though it doesn\ t interpret tags inside  @code  blocks    \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49513507\n  
3476,     In com/google/common javadoc  add explicit <p> before paragraph text following other block level closing tags (</h*>  </pre>  </table>)  Without the <p>  a blank line may not be added between the text and block level elements such as <ul> that follows it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49494081\n  
3477,     Add explicit <p> at the start of paragraphs following an </ol> or </ul> tag in com/google/common javadoc  JDK7 javadoc without the <p> does not show a blank line after the list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49461463\n  
3478,     Add isEmpty() to ByteSource and CharSource \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49444816\n  
3479,     Random javadoc spruces for Maps asMap/toMap and Ordering \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49401524\n  
3480,     Fix a small typo in Multimaps transformValues Javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49382729\n  
3481,     Miscellaneous cleanups \n- Remove  final  from  static final  methods  as it has little meaning there \n- In  Expired entries may be counted in Cache size    change  in  to  by  to match similar change to MapMaker \n- Remove line-starting @ so that AbstractInvocationHandler code snippet isn\ t truncated \n- Insert some spaces after casts in PopulatedCachesTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49192494\n  
3482,     Detect symbolic link cycles in ClassPath\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49168430\n  
3483,     Add a beans xml file disabling CDI bean discovery to META-INF/ in the guava jar  See guava issue:    google com/p/guava-libraries/issues/detail?id=1433\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49166428\n  
3484,     Clarify the behavior of Map size() in a MapMaker-built Map with weak or soft references  borrowing phrasing from CacheBuilder \n\nMotivated by    com/questions/17559629/why-does-guavas-mapmaker-report-an-incorrect-size-for-my-map-when-using-weak-ke\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49138369\n  
3485,     Small formatting change from internal change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49112717\n  
3486,     Strip out weightedConsistentHash reference from public JavaDoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49100661\n  
3487,     Open source Hashing#sipHash24() and Hashing#sipHash24(long  long) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49085958\n  
3488,     Verify that the RegularImmutableAsList constructor doesn t check for nulls  to help verify that ImmutableSet asList() is O(1) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=49062366\n  
3489,     Fix some formatting in Closer javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48904048\n  
3490,     Redo: Use the context class loader in Resources getResource(String)  instead of\nthe class loader of the Resources class  Continue to use that loader if the\ncontext class loader is null  though \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48888869\n  
3491,     Replicate CL 47862236 s clarification to sameThreadExecutor-using methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48838767\n  
3492,     Some additional Multimap doc clarifications in re: Guava issue 1458:\n\n   google com/p/guava-libraries/issues/detail?id=1458\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48811159\n  
3493,     Change MediaType to add constants to the known types map as they re created  eliminating the need to explicitly add them all after they re created \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48801732\n  
3494,     Include failing parameter index in exception - useful for inherited classes where it s\nnon-obvious which parameter is failing null check \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48801694\n  
3495,     Add test for roundtripping HashCode#toString \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48688256\n  
3496,     Fix low-hanging rawtypes warnings for common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48684234\n  
3497,     Score one for javac7 s rawtypes warning: surely we just overlooked the proper generics on these signatures?\n\nTogether these have only one outside caller  which looks safe \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48653001\n  
3498,     Add EPUB MediaType\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48636026\n  
3499,     Re-document goodFastHash  with the (hopefully) appropriate amount of scaretext \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48602073\n  
3500,     Get rid of usages of TestUtil from common io test classes and open source most of FilesTest \n\nThis includes several changes:\n\n1  Replacing the use of TestUtil getSrcDir() to get at resources in the testdata package as Files  This is handled by creating a File from the URL path directly if it\ s a file:// URL and copying the resources to a temp dir on demand if it\ s not \n2  Replacing the use of TestUtil getTmpDirFile() with a temp dir created in a manner similar to Files createTempDir()  Also  IoTestCase\ s tearDown() should ensure that any temp dirs/files created during tests are deleted afterwards \n3  Changing some file paths in FilesTest to be built dynamically from their parts so as to hopefully work correctly on Windows as well as Unix systems  For example  instead of  /foo/bar   file(root()   foo    bar ) \n4  Fixing a few things with the testdata resources in the BUILD file \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48592858\n  
3501,     Delete AbstractSetMultimapTest  whose remaining tests are all covered by SetMultimapTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48590510\n  
3502,     The fact that ClassPath does a lot of I/O in its creation makes the two added methods unnecessarily expensive   They still make sense  but perhaps not on this class \n\nRollback: Update ClassPath to expose the URIs that comprise the classpath   Also add an asClassPathString method that lets you quickly go from ClassLoader to a classpath suitable for Java s -classpath flag \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48583016\n  
3503,     Migrate the remaining Multimap values() tests from AbstractMultimap to MultimapTestSuiteBuilder  and delete AbstractMultimapTest  which no longer contains any tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48537940\n  
3504,     Update open-source Guava to Truth 0 13  and tighten up tests from allOf->exactly and allFrom->exactlyAs \n\nI started with an unconditional textual substitution \nThen I went back and reverted false positives: EnumSet allOf  EnumFilter allOf  Matchers allOf  IterablesTest testSkip_allOf* \nThen I reverted any tests that failed (all of which looked like they ought indeed to stay as allOf/allFrom )\nI gave all the remaining automated changes a sanity check  and they all passed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48536664\n  
3505,     Update ClassPath to expose the URIs that comprise the classpath   Also add an asClassPathString method that lets you quickly go from ClassLoader to a classpath suitable for Java s -classpath flag \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48519216\n  
3506,     Remove com google common collect Ranges (the static methods have been\nmoved to com google common collect Range) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48509690\n  
3507,     Improve an error message \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48472965\n  
3508,     Add a mechanism to ForwardingWrapperTester for when the forwarded interface contains methods that are defined to  return this    In this case straight delegation doesn t work since the wrapped methods should return the forwarding object and not the delegate object \n\nThe strategy is to detect this situation by inspecting the return value of the forwarded method and if it is assignable to the interface type then we allow the forwarding method to return either the return value of the delegate or the wrapper itself \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48461760\n  
3509,     Remove JUnit4 @Test annotations from JUnit 3 tests  where they re no-ops \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48455067\n  
3510,     Remove deprecated appendTo(Object&Iterable&Iterator) overloads \nThese methods existed only to support classes that implement both Iterator and Iterable \nIf you need to add such a call in the future  cast the argument explicitly to Iterator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48293496\n  
3511,     Typo fix \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48205733\n  
3512,     Change MultiInputStream and MultiReader to work with ByteSource and CharSource rather than InputSuppliers  Change Byte/CharSource#concat to no longer delegate to Byte/CharStreams#join and change join to delegate to concat instead \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48146409\n  
3513,     Fix rawtypes (and some unchecked) warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48127404\n  
3514,     Reduce the visibility of ForwardingService internally \n\nForwardingService has been deprecated for a while  but I\ m not sure if it\nsafe to delete from guava yet ( @Beta means never having to say you\ re sorry ?)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48122716\n  
3515,     Adding a helper class for adding Content Security Policy headers to a HttpServletResponse \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48037766\n  
3516,     Create sameThreadScheduledExecutor() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48036849\n  
3517,     Add @since for KEY_ARCHIVE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=48031735\n  
3518,     Annotate FutureCallback onSuccess parameter as @Nullable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47989392\n  
3519,     Annotate safeContains and safeRemove parameter as @Nullable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47980950\n  
3520,     Add KEY_ARCHIVE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47874734\n  
3521,     Clarify statement in addListener documentation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47862236\n  
3522,     Change x == x to equivalent isNaN() in preparation for making it a compile error \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47811494\n  
3523,     Delete AbstractListMultimapTest  which no longer has any tests not already part of ListMultimapTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47674443\n  
3524,     Delete AbstractCollectionTest  which is now only being used in multiset implementation tests  and which has no remaining tests that aren t already part of MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47666389\n  
3525,     Some internal changes in RateLimiter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47663162\n  
3526,     Migrate Synchronized  Navigable SetTest to the SetTestSuiteBuilders and off of AbstractCollectionTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47662426\n  
3527,     Kill AbstractMultisetTest   All its remaining tests are tested elsewhere by MultisetTestSuiteBuilder \n\n(In the process  we kill off several other implementation-specific tests that are still just duplicating MultisetTestSuiteBuilder tests )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47557844\n  
3528,     Migrate remaining Multiset elementSet() tests to MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47554296\n  
3529,     Migrate the remaining Multiset entrySet() tests from AbstractMultisetTest to MultisetEntrySetTester  fixing a few genuine bugs encountered in the process \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47552716\n  
3530,     Add MultisetEqualsTester to MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47550101\n  
3531,     Added support for days  hours  and minutes to chooseUnit and abbreviate\nmethods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47548131\n  
3532,     Finish migrating Multiset remove() (and removeAll  and retainAll) tests to MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47547148\n  
3533,     Remove tests of Multiset entrySet() from AbstractMultisetTest that just duplicate tests from the entrySet() SetTestSuite generated by MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47545853\n  
3534,     Remove tests of Multiset elementSet() that are redundant with the SetTestSuite generated for Multiset elementSet() by MultisetTestSuiteBuilder   (Some tests will still need to be migrated )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47543353\n  
3535,     Migrate tests for Multiset add from AbstractMultimapTest to MultisetAddTester  split off from MultisetWriteTester as part of MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47542388\n  
3536,     Remove redundant Multiset contains() tests from AbstractMultisetTest  which are already covered in CollectionContainsTester as part of MultisetTestSuiteBuilder  and add a couple more multiset-specific tests \n\nIn the process  fix a genuine bug where RegularImmutableSortedSet containsAll assumed that a nonempty sorted collection with the same comparator didn t have multiples of an element \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47540950\n  
3537,     Remove Multiset iterator() tests redundant with the CollectionIteratorTester tests from MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47509316\n  
3538,     Migrate Multiset remove() tests from AbstractMultisetTest to MultisetRemoveTester  split off from MultisetWritesTester  as part of the MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47508469\n  
3539,     Delete Multiset count() tests from AbstractMultisetTest that are redundant with MultisetCountTester in MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47507664\n  
3540,     Optimize UnsignedBytes lexicographicalComparator() by using Long numberOfTrailingZeros instead of an explicit binary search to identify the first byte where the two inputs differ \n\nReported externally:    google com/p/guava-libraries/issues/detail?id=1435\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47391350\n  
3541,     Use a radix trie approach to serializing TLDs for TldPatterns java to minimize code size \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47356985\n  
3542,     Clean up most usages of Input/OutputSupplier in tests in common io \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47348463\n  
3543,     Delete tests from AbstractListMultimapTest that duplicate ListTestSuiteBuilder tests automatically generated by MultimapTestSuiteBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47341744\n  
3544,     Remove tests from AbstractSetMultimapTest redundant with tests from SetMultimapPut(All)Tester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47338686\n  
3545,     Use assertNotSame(x  y) in place of assertTrue(x != y)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47307058\n  
3546,     Add FileBackedOutputStream asByteSource()  a ByteSource-returning method to replace getSupplier() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47293826\n  
3547,     Deprecate BaseEncoding methods that use Input/OutputSupplier and hide them internally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47292279\n  
3548,     Add CollectionFeature SUPPORTS_ITERATOR_REMOVE to MapTestSuiteBuilder for MutableTypeToInstanceMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47287341\n  
3549,     Migrate tests for Multimap keySet() from AbstractMultimapTest to MultimapTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47283976\n  
3550,     Migrate Caliper benchmarks from the old  superclass-based API to the new  annotation-based API \n\nMore information: LSC: Caliper Benchmark API migration (   google com[ document/d/15KUhmIsTVn0EA9u2S5es4Otn5k3Lo_ZHhkDsT9LYRKc)\n\nATTENTION REVIEWERS: This is a (mostly) scripted  behavior-preserving change  It should have the following effect:\n- No longer extend c g caliper legacy Benchmark\n- setUp method overrides are now annotated with @BeforeExperiment\n- tearDown method overrides are now annotated with @AfterExperiment\n- time methods are now annotated with @Benchmark and the time prefix has been removed\n\nTested:\nran test_all_benchmarks\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47282574\n  
3551,     Clean up the last Multimap entries() test in AbstractMultimapTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47274767\n  
3552,     Migrate tests for Multimap keys() from AbstractMultimapTest to MultimapTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47273152\n  
3553,     Instead of suppressing iterator() remove() tests  make iterator remove() support an independent property of a collection implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47238893\n  
3554,     Remove no-op main methods from Caliper benchmarks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47194759\n  
3555,     Migrate AbstractMultimapTest tests for Multimap asMap() to much more exhaustive and detailed MultimapTestSuiteBuilder testers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47111812\n  
3556,     Preserve SortedSet-ness of value collections across serialization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47106820\n  
3557,     Make sure all implementations being tested by SortedMapInterfaceTest are also tested with SortedMapTestSuiteBuilders  and remove tests from SMIT that are redundant with SortedMapNavigationTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47103324\n  
3558,     Somewhat trivial cleanups:\n- Use Sets removeAllImpl in Maps EntrySet removeAll \n- Work around bogus unchecked warning:  required: Iterator<?> / found: I \n- Remove derived size field from ReverseImmutableList \n- Override builder() in ContiguousSet to supply more appropriate Javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47102093\n  
3559,     Migrate AbstractMultimapTest tests for Multimap entries() to a MultimapTestSuiteBuilder tester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47101119\n  
3560,     Add MapTestSuiteBuilder tests for MapConstraints constrainedMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47100566\n  
3561,     Add TestSuiteBuilder tests for Maps transform*\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47098965\n  
3562,     Trivial cleanups:\n- Remove stray paren in Ordering Javadoc \n- Fix runnable/executor confusion in ExecutionQueue Javadoc \n- Fix MockingModuleTester and FastStackTracer links that refer to type parameter T instead of its valid name  the erased type Object  Fix a few @see errors while there \n- Remove  This class is GWT compatible  comments  which have been redundant since we began using @GwtCompatible in testlib code \n-  unreasonable slow  =>  unreasonably slow \n- Fix continued-line indent in Invokable \n- Insert spaces in cast expressions \n- Add missing spaces before open braces \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47059317\n  
3563,     Add application/protobuf mime type  from\n   ietf org/html/draft-rfernando-protocol-buffers-00\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47014458\n  
3564,     Delete completely unused ConcurrentMapInterfaceTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47004919\n  
3565,     Guava issue 1423: fix TreeMultimap asMap() headMap to properly register inclusivity argument\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=47004337\n  
3566,     Remove tests for Multimap get from AbstractMultimapTest that duplicate tests in MultimapTestSuiteBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46990147\n  
3567,     Add test suites for Multimap equals to MultimapTestSuiteBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46989151\n  
3568,     Migrate Multimap clear() tests (and tests to clear Multimap views) to MultimapClearTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46987144\n  
3569,     Remove tests from AbstractMultimapTest that overlap with MultimapRemoveTester and MultimapRemoveAllTester in MultimapTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46986379\n  
3570,     Add MapToStringTester and MultimapToStringTester  and fix ForwardingNavigableMap StandardDescendingMap toString() to correctly iterate in descending order \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46952541\n  
3571,     Remove get() subList() tests from AbstractListMultimapTest that are redundant with ListSubListTester in the derived test suite for ListMultimapTestSuiteBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46951757\n  
3572,     Add explicit type parameters in FilteredMultimapValues to make JDK6 happy \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46951071\n  
3573,     Delete Multimap contains Key Value  tests from AbstractMultimapTest that are redundant with MultimapContains Key Value Tester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46951020\n  
3574,     Remove tests from AbstractListMultimapTest that are redundant with ListMultimapPutTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46950561\n  
3575,     Delete tests from AbstractMultimapTest of the multimap views in isolation  that is  tests that initialize the multimap  get the view  and don t reference the multimap afterwards \n\nThese tests are redundant with the derived TestSuiteBuilders in MultimapTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46949401\n  
3576,     Migrate all remaining Multimap replaceValues tests from AbstractMultimapTest to MultimapReplaceAllTester\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46948091\n  
3577,     Add tester to MultimapTestSuiteBuilder for Multimap putAll(Multimap)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46946989\n  
3578,     Replace Multimap putAll(K  Iterable) tests from AbstractMultimapTest with more exhaustive tests in MultimapPutIterableTester\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46945862\n  
3579,     Add the TestSuiteBuilder for Multimap values()  and fix Multimaps filterXXX to pass those tests properly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46945446\n  
3580,     Remove tests of Multimap get() from AbstractMultimapTest that are duplicated in MultimapGetTester\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46942143\n  
3581,     Delete tests from AbstractMultimapTest that duplicate tests in MultimapSizeTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46940075\n  
3582,     Add Multimaps asMap() helpers that return a Map with more\nstrongly-typed values than ListMultimap#asMap()  etc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46939830\n  
3583,     Add tests to the asMap() views of ListMultimap  SetMultimap  and SortedSetMultimap to verify that the asMap() values() are of the correct type (List  Set  SortedSet) at runtime \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46939057\n  
3584,     Change return type of openBufferedStream() on ByteSource  ByteSink and CharSink to the base stream type rather than the Buffered* type to allow implementations to avoid unnecessarily adding additional buffering to streams that do not benefit from it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46926342\n  
3585,     Reshuffling from internal-only changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46885542\n  
3586,     Shuffling from internal-only changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46844311\n  
3587,     Give removal dates for Stopwatch ctors \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46791249\n  
3588,     Improve error messaging in EqualsTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46753546\n  
3589,     Implement Object#equals() and #hashCode() for stateful HashFunctions \nAdd tests to verify the behavior \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46751376\n  
3590,     Override ImmutableBiMap containsValue() to use the O(1) implementation  as per Guava bug 1416 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46744049\n  
3591,     Give removal dates (releases) for HashFunction#hashString(CS) and\nHasher#putString(CS) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46638784\n  
3592,     Add reference to Funnels from Funnel javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46629147\n  
3593,     Change SynchronizedEventHandler to use a synchronized block rather than just synchronizing the method  Since the method body does nothing but call the super method  it (and its synchronization) was apparently being optimized away under a certain JVM:    google com/p/guava-libraries/issues/detail?id=1403\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46627764\n  
3594,     Use com google caliper legacy Benchmark instead of com google caliper Benchmark  This CL facilitates the move from a superclass-based API to an annotation-based API  Benchmark and legacy Benchmark are equivalent classes  so this is NOT a behavior changing CL \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46556497\n  
3595,     fixed NPE caused by inaccessible directory  as reported by Guava issue 1407 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46478011\n  
3596,     Fix the logging in Futures CombinedFuture such that:\n\n1  Errors are always logged (even if they were put into the output future)\n2  If allMustSucceed is true then all failures after the first are logged\n3  if allMustSucceed is false then all failures are not logged \n\nIn the prior implementation (except for in rare races) exceptions were only logged if allMustSucceed was false \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46470009\n  
3597,     Some whitespace edits\n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46404300\n  
3598,     Update Mozilla PSL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46368166\n  
3599,     Add some missing dependencies in a GWT module \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46363258\n  
3600,     Add Funnels#unencodedCharsFunnel (and deprecate Funnels#stringFunnel()) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46350462\n  
3601,     Remove the rethrow Error behavior from AbstractFuture \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46315153\n  
3602,     Add a test for hashInt() vs  a loop w/ putByte() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46295877\n  
3603,     Change ServiceManager Listener to be an abstract class with empty implementations of its callbacks instead of an interface \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46244288\n  
3604,     Guava issue 1322: deal with a potential overflow issue in ImmutableTable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46160775\n  
3605,     Fix typo in Maps immutableEnumMap  See    google com/p/guava-libraries/issues/detail?id=1397\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46145330\n  
3606,     Change Service Listener from an interface to an abstract class with no-op implementations of all the callbacks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46026613\n  
3607,     Allow a max size of 0 for EvictingQueue\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=46003229\n  
3608,     Use hashFoo() shortcuts instead of newHasher() putFoo() hash() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45995812\n  
3609,     Remove incorrect test using UTF_16LE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45985871\n  
3610,     Changed Invokable from(constructor) getReturnType() to return ParameterizedType instead of raw class when the class is parameterized  This makes constructor invokable more consistent with factory method invokable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45912432\n  
3611,     Sort and removed unused imports in com/google/common \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45827926\n  
3612,     Allow HashCode#padToLong to work with hashs that have <32 bits \nFix a small typo in Hasher javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45717814\n  
3613,     CHANGE: Make HostAndPort GwtCompatible by getting rid of a regex \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45669298\n  
3614,     Change FileByteSource read() to not unnecessarily copy the byte array in the normal case where the file size doesn t change \n\nIt was incorrectly assuming that if the first read loop filled the original array  the last read() call would have returned -1 if it was done  which is not the case \n\nGuava bug:    google com/p/guava-libraries/issues/detail?id=1376\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45616868\n  
3615,     Fix apparently harmless but still incorrect references to module name \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45613704\n  
3616,     Remove unused HTML dependency \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45608957\n  
3617,     Fix @since for EscaperAsserts \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45601740\n  
3618,     Add links to the hash function comparisons to the Hashing javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45527021\n  
3619,     Add a test to demonstrate that hashBytes(Ints toByteArray(i)) ==\nhashInt(Integer reverseBytes(i)) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45476839\n  
3620,     Fixed a bug in rejectTypeVariable() where we failed to account for the owner type s type variables  For example:\n\nabstract class From<K>  \nclass To<V>  \nTypeToken<To<V>> type()  \nreturn new TypeToken<To<V>>(getClass())   ;\n \n \n\nstatic <K> TypeToken<From<K> To<?>> cheat()  \nreturn new From<K>() new To<String>()    type();\n \n\nTypeToken<From<String> To<?>> notReallyString = TheClass <String>cheat();\nnotReallyString rejectTypeVariables(); // Should throw\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45444012\n  
3621,     Added TypeVisitor to make it easier to navigate type hierarchy  and used it to replace a few code duplications \n\nTypeVisitor might be able to become something that s releasable for users to check on individual sub-components of a Type  Or  if after learning use cases  all that s needed are hasTypeVariables() and hasWildcards()  we ll just add the higher level APIs \n\nSee Guava issue:    google com/p/guava-libraries/issues/detail?id=1362\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45443595\n  
3622,     Add tests for common aliases of SHA1 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45427688\n  
3623,     Remove Platform clone()  along with various supersource versions \nThe last non-test caller was removed in CL 45290173 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45408889\n  
3624,     Reshuffling from removal of internal-only method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45408398\n  
3625,     Release base escaper classes  HTML escapers  XML escapers  and URL escapers into Guava \nKeep the source-code escapers internal until we figure out which ones to recommend and what to name them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45374049\n  
3626,     Added code example to AbstractInvocationHandler to suggest users to use Reflection newProxy() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45317940\n  
3627,     fix some docs in ExecutionQueue\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45311589\n  
3628,     add csiro au as TLD since is not listed on Mozilla PSL\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45307952\n  
3629,     Run  normal  GWT tests in public Guava \nWe still don\ t run the suite-builder tests  so the run is incomplete  but at least it\ s fairly quick:\nTests run: 6667  Failures: 0  Errors: 0  Skipped: 0  Time elapsed: 155 218 sec\n\nAmong the steps of this process covered by this CL:\n- Export the generated GWTTestCase files into Guava \n- Add dependencies in guava-gwt on the guava (and guava-testlib) test sources \n- Treat the GWT portion of guava-testlib as though it is part of the guava-gwt tests (to sidestep the issue that we should really have a separate guava-testlib-gwt artifact analogous to the separate guava-gwt project)  (Mainly this means putting its files under guava-gwt/tests )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45160153\n  
3630,     Use the renamingDecorator to ensure that Services always run in appropriately named threads \n\nAbstractIdleService and AbstractScheduledService encode the current state in the name so you should see something like\n\nMyService (STARTING|RUNNING|STOPPING)\n\nAbstractExecutionThread service just uses the serviceName() (so it would be  MyService )  I could additionally try to encode the state but it didn\ t seem worth it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45135687\n  
3631,     Provide ExecutorService decorators that will rename the threads in which its tasks run for the duration of the task \n\nOpen issues:\n1  should any of these be public?  Currently I am only planning on using them for some of the Service base classes so package private is fine  but we may want to make them public \n2  I needed/wanted to use WrappingExecutorService but it was marked GoogleInternal  so i removed @GoogleInternal   Is this ok? or should i use a similar private class? moe-strip public from it?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45121293\n  
3632,     Apply test include to testlib tests as well as main tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45103307\n  
3633,     Closer register supports null closeable\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45058002\n  
3634,     Internal refactoring to make it easy to expose a factory method that configures the burst size\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=45016791\n  
3635,     Convert GWT-only tests into normal tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44698403\n  
3636,     Add ByteSource empty() and CharSource empty() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44815909\n  
3637,     Add nullWriter()  a Writer that discards everything written to it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44805209\n  
3638,     Mention the use of slice(offset  length) for viewing a range in the array to the ByteSource wrap javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44798251\n  
3639,     Fall back to countByReading if InputStream available always returns zero \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44796829\n  
3640,     remove the queuedListeners lock from both ServiceManager and AbstractService \n\nThe original idea of splitting the queuedListeners queue into one queue per listenerInstance didn t pan out because it didn t actually solve the issue of not holding a lock while submitting the listener to the executor   So this is a different strategy \n\nI pulled all the listener execution logic into a new class called ListenerQueue which is analogous to ExecutionList (not sure about the name though   ) which cleaned up both AbstractService and ServiceManager \n\nThe approach is two-fold\n1  do not remove a listener from the queue of listeners until it has definitely been submitted to its executor\n2  ensure that submitting a listener to its executor happens no more than one time (using a lock) \n\nN B  we are still vulnerable to a weird or buggy executor implementation  If calling execute(runnable) runs for a long time without calling runnable run then we can still deadlock   I don t believe we can actually solve this problem without giving up on the ordering guarantees \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44709344\n  
3641,     Convert GWT-only tests into normal tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44698403\n  
3642,     Fix a copy/paste mistake in CharSource javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44648058\n  
3643,     Add isPrimitive()  wrap()  and unwrap() methods to TypeToken\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44620879\n  
3644,     Fix typo in javadoc: the name of the method to override is  compare   not  compareTo  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44580155\n  
3645,     A few small hash changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44571077\n  
3646,     Deprecate the constructors in com google common base Stopwatch and Stopwatch#elapsedMillis and #elapsedTime \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44568679\n  
3647,     Reduce redundant iterator creation in Multimap putAll(K  Iterable<? extends V>)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44559924\n  
3648,     new Stopwatch(); -> Stopwatch createUnstarted();\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44556107\n  
3649,     Change ByteStreams asByteSource calls to ByteSource wrap and deprecate it \nChange CharStreams asCharSource calls to CharSource wrap and deprecate it \nChange both deprecated methods to delegate to the replacement method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44516201\n  
3650,     Replace new Stopwatch() start() with Stopwatch createStarted() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44515274\n  
3651,     Nullability fixes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44514905\n  
3652,     Copy ByteStreams asByteSource(byte[ ) to ByteSource wrap(byte[ ) \nCopy CharStreams asCharSource(String) to CharSource wrap(CharSequence) \n\nAdd package-private CharSequenceReader and tests  for use by the CharSource \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44506727\n  
3653,     Add Class-Path cycle detection to avoid StackOverflowError\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44466033\n  
3654,     Throws UOE in MutableTypeToInstanceMap Entry#set()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44465568\n  
3655,     Add static factory methods to Stopwatch: createStarted() and\ncreateUnstarted() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44465501\n  
3656,     Fix up some javadoc in TypeToken re: TypeLiteral \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44411479\n  
3657,     Some more refactoring of TypeResolver TypeTable  I was in a hurry  The TypeTable code wasn t in a form I d LGTM \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44403308\n  
3658,     Make TypeResolver public in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44329762\n  
3659,     Fix bug in statistics benchmarks implementation of Knuth algorithms \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44319466\n  
3660,     Change Futures allAsList and  successfulAsList to return an unmodifiable list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44306369\n  
3661,     Hasher#putString(CharSequence) to Hasher#putUnencodedChars(CharSequence)\nHashFunction#hashString(CharSequence) to HashFunction#hashUnencodedChars(CharSequence)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44304885\n  
3662,     Updated AbstractPackageSanityTests javadoc to replace  public  with  visible  since by default package-visible classes and methods are also tested \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44268725\n  
3663,     Guava issue 1337: fix potential race with Cache refresh \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44213416\n  
3664,     Typos \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44212313\n  
3665,     Release Funnels sequentialFunnel in Guava 15 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44211868\n  
3666,     Migrate users of the deprecated HashFunction#hashString(CharSequence) to HashFunction#hashUnencodedChars(CharSequence) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44204656\n  
3667,     Add Resource Timing CORS header: Timing-Allow-Origin \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44198561\n  
3668,     Add Hasher#putUnencodedChars and HashFunction#hashUnencodedChars \nDeprecate Hasher#putUnencodedChars and HashFunction#putUnencodedChars \nUpdate callers to add overries/delegations where necessary \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44090897\n  
3669,     Modify recordStats to not accept a value in same manner as setWeakKey\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44016270\n  
3670,     Update the hashing benchmark to include all of the different hash\nfunctions \n\nDelete HashBenchmark java (nearly the same as HashFunctionBenchmark)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44010255\n  
3671,     Automated g4 rollback of changelist 44002262 \n\n*** Reason for rollback ***\n\nBreaks more ImmutableMap mockers \n\n*** Original change description ***\n\nMake ImmutableMap extend ImprovedAbstractMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44008499\n  
3672,     Make ImmutableMap extend ImprovedAbstractMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=44002262\n  
3673,     Remove the synchronized keyword from the ServiceManager ServiceListener startupTimes() method   It is unnecessary and potentially dangerous (I m pretty sure it could actually cause a deadlock due to lock ordering!) \n\nSee    google com/p/guava-libraries/issues/detail?id=1340\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43975294\n  
3674,     Add boolean parser to cache builder  add flag for record stats \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43956416\n  
3675,     Update version number  factor out common config  plus a few nits  specifically:\n* 15 0-SNAPSHOT is the new release target\n* Plugin-management for commonly configured plugins moved into the parent \n* Dependency management into the parents (for version and scope)\n* Make findbugs/javax inject from provided to default (compile) scope  but mark optional \n* Move Resources and sources paths into parent leaving exceptions in children \n* Add a few helper comments for maintenance \n* Add exclusions from Truth and Caliper to force use of guava being built \n\nThere are a few ways this could be locked down more  plugin versions implicitly pulled  etc   but not really necessary - just the ones we explicitly use and configure are important  There are other checks we could do  including pulling in errorprone or checkstyle to help developers building locally submit conformant patches  but this is a further evolution that can wait \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43918640\n  
3676,     Refactor out some common functionality in the HttpHeadersTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43918498\n  
3677,     Deprecate ForwardingSortedMap standardRemove  which has been discovered to interact badly with a bug in JDK6  and was never used in Google \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43914919\n  
3678,     Add Funnels stringFunnel(Charset) overload \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43908416\n  
3679,     Fix SafeTreeSet so delegate tailSet() is wrapped by a new SafeTreeSet as is headSet() and subSet()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43905970\n  
3680,     Remove Google specific headers from HttpHeaders \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43894977\n  
3681,     Make GwtPlatform available to server-side applications \nIt s not actually used there  but dev mode clients do use it  and it won t be available to them unless it s compiled by javac as part of our GWT targets \n\nOne complication: The obvious way of doing this requires the server-side code to depend on the GWT target containing @GwtScriptOnly \nThis might be OK (though we d have to check with at least one project  whose tests flag the new dependency)  but it turns out to be unnecessary:\n@GwtScriptOnly has an effect only on the supersource class (which makes sense  since it s the supersource version that s the one being used in JavaScript only -- the GwtPlatform files I m editing here are more like @UseThisInsteadIfNotGwtScript) \nThus  I can remove it from these versions of GwtPlatform \n\n   google com/p/guava-libraries/issues/detail?id=1328\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43892696\n  
3682,     Test and document LoadingCache s behavior in the face of InterruptedException (mostly by linking to the new <   google com/p/guava-libraries/wiki/CachesExplained#Interruption>) \nAlso  update some unrelated broken links:    archive org/web/20090301165914/   sun com/docs/books/jls/third_edition/html/lexical html#101089 =>    oracle com/javase/specs/jls/se7/html/jls-3 html#jls-3 10 6\n\nExternal bug:    google com/p/guava-libraries/issues/detail?id=1122\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43892475\n  
3683,     Simplify StandardTable implementation in common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43866642\n  
3684,     Add benchmarks to determine the overhead of the various stats calculation algorithms \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43849595\n  
3685,     Fix FunnelsTest to @GI Funnels sequentialFunnel tests\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43846130\n  
3686,     Add Funnels sequentialFunnel  an Iterable funnel wrapper  to Funnels \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43840825\n  
3687,     Add calls to flush() after writing to streams in ByteSink and CharSink \n\nIt turns out that  under JDK6  FilterOutputStream close() calls flush() and ignores any IOException it throws  This seems like pretty bad behavior  but we can work around it by manually flushing first  Doesn t seem like this should add much overhead for streams that don t require flushing before close either \n\nOn the other hand  this only applies to:\n- subclasses of FilterOutputStream\n- for which flush() does something\n- which do not override close() themselves\n- not running under JDK7+\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43795021\n  
3688,     Document the simplest way to get a List<ListenableFuture> from ListeningExecutorService invokeAll \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43643475\n  
3689,     Rename BloomFilter#mergeWith to #putAll\nRename BloomFilter#canMergeWith to #isCompatible\nRename BloomFilter#size to #bitSize\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43618412\n  
3690,     Actually run some tests that claim to be @GwtCompatible under GWT  stripping out the @GwtIncompatible parts \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43617179\n  
3691,     Open source Splitter#splitToList \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43611289\n  
3692,     Minor javadoc touchups \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43575540\n  
3693,     Fix presidential history  a k a  - the Multimap javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43563199\n  
3694,     Expose Lists cartesianProduct inside Google \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43553359\n  
3695,     Open source Futures#nonCancellationPropagating\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43477677\n  
3696,     Automated g4 rollback of changelist 43443903 \n\n*** Reason for rollback ***\n\nPeople are mocking ImmutableMap  and will need to get fixed  \n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43314514 \n\n*** Reason for rollback ***\n\nRoll forward now that Grubby s fixed\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43310565 \n\n*** Reason for rollback ***\n\nDirty Grubby hacks are getting broken again \n\n*** Original change description ***\n\nCommon out ImmutableMapEntrySet implementation\n\n    description truncated by g4 rollback    \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43454441\n  
3697,     Simplify the implementation of LongMath sqrt \n\nThe combination of an exhaustive test on all longs from 0 to FLOOR_SQRT_MAX_VALUE -- which takes under 90 seconds to run -- and a short proof manages to tighten the bounds from the previous proof  and simplify the reasoning at the same time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43446198\n  
3698,     Improve exception messages for HostAndPort fromParts\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43445669\n  
3699,     De-GoogleIternalify some APIs for Guava 15 0:\n-c g c collect TreeTraverser\n-c g c collect BinaryTreeTraverser\n-c g c io File#fileTreeTraverser\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43443966\n  
3700,     Automated g4 rollback of changelist 43314514 \n\n*** Reason for rollback ***\n\nRoll forward now that Grubby s fixed\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43310565 \n\n*** Reason for rollback ***\n\nDirty Grubby hacks are getting broken again \n\n*** Original change description ***\n\nCommon out ImmutableMapEntrySet implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43443903\n  
3701,     Open source ServiceManagerTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43414005\n  
3702,     Release ForwardingSortedMultiset into Guava 15 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43412779\n  
3703,     Open source Sets#newConcurrentHashSet() and\nSets#newConcurrentHashSet(Iterable) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43412565\n  
3704,     Simplify Multimaps AsMap implementation  pulling up common logic from its subclasses\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43412108\n  
3705,     Open source Files#isDirectory and Files#isFile\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43409856\n  
3706,     Factor out common logic in ImmutableMultiset EntrySet implementations\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43407517\n  
3707,     Simplify and refactor the logic to ensure that Immutable(Bi)Map Builder and friends create entries that can be reused by RegularImmutable(Bi)Map to avoid redundant copies \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43407355\n  
3708,     18 months from Guava 15 will be September  not August \nWe ll see if we end up needing to bump it to October because *somebody* doesn t get his Escapers work done in time for a March release ;)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43398394\n  
3709,     Add Content-Security-Policy header \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43393773\n  
3710,     Automated g4 rollback of changelist 42665747 \n\n*** Reason for rollback ***\n\nAll the broke tests have been fixed    i think \n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 42655638 \n\n*** Reason for rollback ***\n\nBroke tests relying on previous empty service manager behavior \n\n*** Original change description ***\n\nProvide a potentially more reasonable behavior for an empty ServiceManager  This is a situation that typically only arises in testing situations (but could theoretically happen w\n\n    description truncated by g4 rollback    \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43389638\n  
3711,     Add BloomFilter#canMergeWith(BloomFilter) which determines whether the\ngiven bloom filter can be safely merged into this one \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43357881\n  
3712,     Automated g4 rollback of changelist 43310565 \n\n*** Reason for rollback ***\n\nSome dirty hacks are getting broken again \n\n*** Original change description ***\n\nCommon out ImmutableMapEntrySet implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43314514\n  
3713,     Common out ImmutableMapEntrySet implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43310565\n  
3714,     Extend AbstractCollection where appropriate in common collect\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43309776\n  
3715,     Automated g4 rollback of changelist 43265767 \n\n*** Reason for rollback ***\n\nadsapi has fixed their problematic LinkedListMultimap usage\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43258188 \n\n*** Reason for rollback ***\n\nRollback until adsapi can delete their dirty hack that depended reflectively on LinkedListMultimap s inheritance hierarchy\n\n*** Original change description ***\n\nSimplify and deoptimize LinkedListMultimap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43303012\n  
3716,     Eliminate nondeterminism in memory consumption tests by forcing lazily computed views of the empty immutable collections \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43298195\n  
3717,     Add BloomFilter#size  which returns the number of bits in the underlying\nbit array \nFinally remove BloomFilter#expectedFalsePositiveProbability\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43298086\n  
3718,     Remove Unsigned Integer Long #asUnsigned from Guava 15 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43292361\n  
3719,     Automated g4 rollback of changelist 43258188 \n\n*** Reason for rollback ***\n\nRollback until adsapi can delete their dirty hack that depended reflectively on LinkedListMultimap s inheritance hierarchy\n\n*** Original change description ***\n\nSimplify and deoptimize LinkedListMultimap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43265767\n  
3720,     Adds BloomFilter#mergeWith(BloomFilter) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43265147\n  
3721,     Simplify and deoptimize LinkedListMultimap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43258188\n  
3722,     Simplify filter() implementations in common collect\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43252637\n  
3723,     Deoptimize Iterators methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43251260\n  
3724,     Add AbstractTable  a skeleton implementation-agnostic Table implementation  and factor out code in common between Table implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43250483\n  
3725,     Deoptimize Lists methods where overrides aren t clear wins \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43250163\n  
3726,     More simplification and refactoring of common code in common collect \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43236585\n  
3727,     Delete EmptyImmutableTable  which isn t clearly worth the code complexity \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43207266\n  
3728,     Delete EmptyImmutableMultiset  which isn t clearly worth the code complexity \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43202169\n  
3729,     Remove the following methods from\ncom google common primitives UnsignedInteger and UnsignedLong: add  subtract  multiply  divide  remainder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43201569\n  
3730,     Remove com google common io  LimitInput NullOutput Stream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43198122\n  
3731,     Promote StandardSystemProperty to @Beta in 15 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43197237\n  
3732,     Delete EmptyImmutableList  replacing it with a singleton instance of RegularImmutableList   This makes the common case for ImmutableList bimorphic instead of trimorphic  resulting in significant improvements to benchmarks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43197187\n  
3733,     Remove Stopwatch#toString(int) as promised in Guava 15 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43194646\n  
3734,     Delete the Ordering from(Comparator) and Ordering natural() overrides of sortedCopy and immutableSortedCopy  since benchmarks suggest any speed increases are minimal at best \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43178753\n  
3735,     Add DecodingException and decodeChecked to BaseEncoding\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43138785\n  
3736,     Make a few small changes to ServiceManager\n1  use the Monitor enterWhen* instead of Monitor waitFor* methods  as they are more efficient \n2  rewrite servicesByState to sort a list of Map Entries instead of constructing a Map and sorting a copy of the EntrySet\n3  Add an addListener convenience overload for when you want to use the sameThreadExecutor \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43135325\n  
3737,     Manually check for nulls in more places \nOur GWT tests would flag some of these  but it s looking like some of them aren t running \n[ will fix that  breaking the tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43133605\n  
3738,     Fix a bug where if Service stop() was called multiple times while the Service was in the STARTING state the stopping() listeners would fire once for every call to stop() violating the contract that listener methods should be called at most once \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43133059\n  
3739,     Minor collections cleanups \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43079662\n  
3740,     Adds @CheckReturnValue to chainable methods of FluentIterable  Thanks to error-prone  this will cause [  to refuse to build any code that doesn t store the return value from these methods \n\nIt will prevent subtle bugs where code is treating FluentIterable as though it is mutable  when in fact it is immutable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=43045750\n  
3741,     Add two static MediaTypes\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42979449\n  
3742,     Deprecate GenericMapMaker \nRemove unused loadFactor() from GWT MapMaker (removed from non-GWT version in 1 0-rc4!)  and make the class final (as the non-GWT version is) \nUpdate ConcurrentHashMultiset to accept MapMaker instead of GenericMapMaker \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42970216\n  
3743,     Fix serialization of GWT SingletonImmutableBiMap inverse() \nThere is a self-assignment that went undetected because (a) we don t run error-prone against GWT-only code and (b) we can t use a final field without breaking serialization even worse \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42969994\n  
3744,     Reduce visibility of Range#asSet (internally) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42968510\n  
3745,     Deprecate softValues  not weakValues \nI got this right in GenericMapMaker but wrong in MapMaker \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42924061\n  
3746,     Remove reference to UTF_16LE equivalence \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42919674\n  
3747,     Make ExecutionList smaller and faster by using a manual queue instead of a LinkedList \n\nWith these changes:\n* An empty/executed ExecutionList is now half the size (20 vs  40 bytes)  it is also smaller after execution as well \n* The new ExecutionList takes 16 fewer bytes per listener added also there is only 1 object allocated instead of 2   Also  if the list has already been executed there is no longer any allocation in add \n* There were also performance gains between 0 and 20% across the 4 benchmarks I wrote \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42915090\n  
3748,     Deprecate softValues \nMake makeComputingMap package-private in Guava  and stop using it in the example code  (It is the only method scheduled for deletion in February or March )\nReimplement out-of-package Guava makeComputingMap callers with the traditional putIfAbsent pattern \nRemove methods scheduled for deletion in Guava 15 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42902921\n  
3749,     Hide Constraint+Constraints internally  deprecating them in Guava \nUpdate remaining callers in a behavior-preserving way \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42901728\n  
3750,     Migrate users of deprecated Range#asSet(DiscreteDomain) to\nContiguousSet#create(Range  DiscreteDomain) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42868160\n  
3751,     Update truth to 0 11\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42845267\n  
3752,     Replace  throw Throwables propagate(checkedEx)  with equivalent  throw new RuntimeException(checkedEx)  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42786068\n  
3753,     Replace  Throwables propagate(alreadyTriedToPropagate)  with equivalent  throw new RuntimeException(alreadyTriedToPropagate)  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42782638\n  
3754,     Open source some more benchmarks \nThe Monitor benchmarks were left as internal when the class was migrated from Labs \nMy guess is that that was nothing more than  Caliper benchmarks can\ t be open-sourced yet  \nI notice that earlier CLs didn\ t open-source them  either \nMy guess is that that\ s just because they were excluded from the BUILD rule entirely and not merely marked with @GoogleInternal \nMy guess is that the same is true of the EventBus benchmark \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42749026\n  
3755,     Move Byte/CharStreams concat into Byte/CharSource \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42657113\n  
3756,     Fix flaky test: Wait for the Future listeners to execute and not just for the Future to complete \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42581734\n  
3757,     Open-source known hashes for crc32  triggered by our new automated test that expects to find them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42547175\n  
3758,     Hashing consistentHash: Add more tests to test that the C++ and Java implementations are equivalent \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42533999\n  
3759,     Add a test that ensures any new HashFunctions must have an entry in\nKNOWN_HASHES \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42508143\n  
3760,     listenInPoolThread didn\ t use to support a custom executor  but it has for a while \nUnfortunately  I never updated it to acknowledge that an InterruptedException is now possible \nWe don\ t really have any good options  so we\ ll go with  keep blocking  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42487946\n  
3761,     Factor out more common code in Maps filter and Multimaps filter implementations\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42449971\n  
3762,     Simplify Multimaps transform logic by sharing more implementation with Maps \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42445381\n  
3763,     Simplify implementation of Multimaps unmodifiableMultimap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42395522\n  
3764,     Optimize AbstractMapBasedMultimap values() iterator() to avoid going via entryIterator() and allocating entries which get immediately discarded \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42383138\n  
3765,     Fix typo in MoreExecutors#listeningDecorator\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42369458\n  
3766,     A rewrite of Monitor internals \n- use a linked list of active guards instead of an ArrayList\n- never signal next waiter while this thread still counted in active guards\n- optimize away excess signals\n- other stuff rewritten to Martin s taste\n\nLike lukes  I got bitten by the Improve Monitor bug  in part\nalso as a learning experience \n\nThis class really needs more tests \n\nI got carried away  and now have a new appreciation for how\nhard it is to get this kind of code correct \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42348803\n  
3767,     Don t rewrite Multisets equalsImpl in ImmutableMultiset\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42277117\n  
3768,     Rewrite the ImmutableCollection toArray() methods in terms of a package-private  copyIntoArray  method  which also lets e g  ImmutableMultimap values() toArray() use arraycopies  etc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42276632\n  
3769,     Promote EvictingQueue from labs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42276397\n  
3770,     Rewrite ImmutableMultimap values() iterator() not to go via the entries  so as to avoid allocating entries that promptly get discarded for the corresponding values \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42275929\n  
3771,     Make ImmutableMultimap values() contains() redirect to ImmutableMultimap containsValue  which for e g  ImmutableSetMultimap takes O(#keys) time  instead of the old implementation  which takes O(#entries) time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42243991\n  
3772,     Complete a TODO to write a proper ImmutableSet view for ImmutableSetMultimap entries() rather than doing a full ImmutableSet copy of the entries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42243829\n  
3773,     Use specialized entry types for ImmutableMap  and use these in the builders to avoid redundant copying of entries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42095809\n  
3774,     Guava Issue #1276    google com/p/guava-libraries/issues/detail?id=1275\n\nChange ServiceManagers INFO logs to FINE and guard them   Along the way clean up some random things \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42041878\n  
3775,     Don t use exceptions in the control flow of AnnotatedHandlerFinder   (Related: public Guava issue 1196 )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42040968\n  
3776,     Miscellaneous documentation fixes and internal cleanups \n- Remove potentially misleading  it cannot be started/stopped more than once  from Stopwatch exception messages \n- Fix TreeTraverser ASCII art \n- Remove inaccurate @GwtCompatible annotation from FeatureUtil \n- Fix mistaken duplicate words ( the the   etc ) \n- Strip *all* of benchmark running instructions from CharMatcherBenchmark  and preemptively strip instructions from internal escapers benchmarks \n- Remove test <echo> from ant section of pom xml \n- Add @Nullable to StandardBaseEncoding\ s other constructor\ s paddingChar parameter \n- Remove stale comment from Futures  (UninterruptibleFuture is long dead )\n- Update name of Truth GWT module \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=42036409\n  
3777,     Automated g4 rollback of changelist 41959970 \n\n*** Reason for rollback ***\nCL is breaking aw3_cawfe targeting  and aw3_cawfe dtt builds:\n   [ /target?id=d0b34600-250a-4d59-a7d4-0853fca21c18&target=//javatests/com/google/ads/apps/displayads/construction/webdriver:WebdriverTests_firefox-esr-linux#shard=1|run=1|attempt=1|page=-1\n\n   [ /target?id=d0b34600-250a-4d59-a7d4-0853fca21c18&target=//javatests/com/google/ads/apps/displayads/targeting/webdriver:DisplayTabWebDriverTests_firefox-esr-linux#shard=1|run=1|attempt=1|page=-1\n\n*** Original change description ***\n\nLog the default charset once during Charsets class initialization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41990650\n  
3778,     Conservatively simplify Tables and ImmutableTable implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41963659\n  
3779,     Log the default charset once during Charsets class initialization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41959970\n  
3780,     Scythe //java/com/google/common again \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41918585\n  
3781,     Add a simple unit test for AbstractCache#aggregate \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41904843\n  
3782,     Added support for META-INF back  Now any resource loadable from a ClassLoader should be returned by ClassPath getResource() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41869216\n  
3783,     Change EventBus to remove the thread local Queue after dispatching events  (Guava issue 1263:    google com/p/guava-libraries/issues/detail?id=1263)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41857158\n  
3784,     Add a simple test that shows why US_ASCII is usually a bad choice \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41853734\n  
3785,     Allow FluentIterable transformAndConcat() to accept a Function<A  Iterable<? extends B>> \n   google com/p/guava-libraries/issues/detail?id=1260\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41841084\n  
3786,     Correct two typos in IDN doc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41796838\n  
3787,     Optimize IntMath and LongMath by using a branch-free helper implementation of the expression (foo < bar) ? 1 : 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41793002\n  
3788,     Rollback\n\n*** Reason for rollback ***\n\nRolling forward now that the users depending on the error message have been migrated \n\n*** Original change description ***\n\nRollback\n\n*** Reason for rollback ***\n\nPeople depend on the exact error message   (They should feel bad  and they ll need to get fixed )\n\n*** Original change description ***\n\nSimplify and organize various Map implementations   Specifically:\n\n* factor out Hashing smearedHash\n* organize the CompactHash collections \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41788418\n  
3789,     Add NullPointerTester acceptIllegalArgumentException() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41744871\n  
3790,     Move timeout start to before tryLock() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41700665\n  
3791,     Enable command-line filtering of tests with  e g   -Dtest include=**/ClassPathTest java\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41635188\n  
3792,     Fix sourceDirectory  restoring compiled serializers to guava-gwt jar \nI accidentally removed the serializers\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41634343\n  
3793,     - Fix scheduleWithFixed(Delay|Rate)  As originally implemented  scheduleWithFixed(Delay|Rate) would submit a Callable/Runnable wrapped in a FutureTask to the delegate ScheduledExecutorService and fail to run more than once due to run-once nature of FutureTask \n- Implement cancel(boolean) on the returned LSFuture \n- Omit FakeScheduledExecutorService changes \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41598013\n  
3794,     Rollback\n\n*** Reason for rollback ***\n\nWe may want to change these methods to return FluentFuture very soon \n\n*** Original change description ***\n\nDe-betaify lots of methods in Futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41594182\n  
3795,     Fix toString() of Resources asByteSource to match method name \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41591180\n  
3796,     Incorporate latest mozilla tld changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41590242\n  
3797,     Migrate callers of caliper Runner to caliper runner CaliperMain directly \n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41579793\n  
3798,     Added cw to TldPatterns java\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41558410\n  
3799,     Rollback\n\nPeople depend on the exact error message   (They should feel bad  and they ll need to get fixed )\n\n*** Original change description ***\n\nSimplify and organize various Map implementations   Specifically:\n\n* factor out Hashing smearedHash\n* organize the CompactHash collections  implementations better\n* use consistent error messages for ImmutableMap and subclasses when rejecting duplicate elements\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41543614\n  
3800,     Simplify and organize various Map implementations   Specifically:\n\n* factor out Hashing smearedHash\n* organize the CompactHash collections  implementations better\n* use consistent error messages for ImmutableMap and subclasses when rejecting duplicate elements\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41539237\n  
3801,     Remove redundant tests and open source it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41527580\n  
3802,     Make ImmutableTable serializable \nAlso  reduce duplication across existing Table serializers \n   google com/p/guava-libraries/issues/detail?id=1264\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41522037\n  
3803,     Deprecate name() and make toString() return name of domain \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41514739\n  
3804,     Make ImmutableMap Builder fail atomically on null keys or values\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41476478\n  
3805,     Guava issue 1001: stop reimplementing Sets newSetFromMap  now that the backport is in place \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41471300\n  
3806,     Disable compilation of benchmarks  which have been updated to require a version of Caliper that has not been publicly packaged \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41469652\n  
3807,     Change Sources/Sinks to implement Input/OutputSupplier temporarily  to make migration of usages easier (make it possible to change an InputSupplier to a ByteSource without changing an API that takes an InputSupplier at the same time)  The getInput/Output methods are @Deprecated since they shouldn t be called directly  Also make public methods for viewing Input/OutputSuppliers as Sources/Sinks \n\nAlso add Byte/CharStreams concat  providing concatenation functionality equivalent to join for Sources \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41360226\n  
3808,     Add automatic subSet tests in  Sorted Navigable SetTestSuiteBuilder  and override various SortedMap implementations in common/collect to return SortedSet keySets \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41348783\n  
3809,     Migrate benchmarks from SimpleBenchmark to Benchmark and update the runner to accept Benchmark \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41343581\n  
3810,     Hide deprecated FluentIterable toImmutable* methods internally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41302220\n  
3811,     Minor bug fix and simplifications in common collect  including:\n\n* Iterables skip(iterable  size) s iterator would wrongly remove the last element of the input if the user called [next()  remove()  \n* In Iterators concat  instead of using checkNotNull and Arrays asList  just use ImmutableList of\n* Use Itera tors bles  addAll instead of for loops in Sets factory methods\n* Simplify Lists charactersOf implementations\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41300544\n  
3812,     Fix ImmutableMap copyOf s null checking on a singleton map with a null key or value \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41297381\n  
3813,     Complete a TODO to avoid redundant copies of entry arrays in ImmutableMap construction pathways \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41289454\n  
3814,     Bias CharMatcher precomputed() implementation towards BitSetMatcher  as per    google com/p/guava-libraries/source/detail?r=7218498c1e19a789a5064ae750db7e929e2e8287 comments\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41247243\n  
3815,     Broaden Maps immutableEnumMap generics\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41237787\n  
3816,     Optimize Monitor leave \n\nNo reason to check for whether we hold lock - lock unlock will\nthrow IMSE for us \n\nNo reason to signal if we are leaving a lock occupied with depth > 1 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41204492\n  
3817,     Add documentation to the remaining isPartialView methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41191330\n  
3818,     Simplify Maps   Specifically \n\n* factor out common code between mapDifference for Map  SortedMap\n* deabstractify Maps KeySet and Maps Values  since most (even if not all) implementations just return a specific Map\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41190675\n  
3819,     Split off Multimaps filterXXX overloads for SetMultimap (and filterKeys(ListMultimap)) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41190071\n  
3820,     Simplify ImmutableCollection implementation and related code   Specifically:\n\n* Redirect ImmutableCollection default serialization to ImmutableList  which it was basically emulating before\n* Factor out  handwritten ArrayList  logic from Immutable List Set  Builder\n* Be more organized in ImmutableList creation pathways about where and when null validation is done\n* Use default List iterator implementation in ImmutableList ReverseImmutableList\n* Use default List implementations for RegularImmutableList  equals  toString \n* Push down ArrayImmutableSet logic to its one and only subclass  RegularImmutableSet\n* Optimize ImmutableSortedSet creation paths  e g  to avoid creating any garbage in duplicate-free common case\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41188291\n  
3821,     Simplify Iterators and Iterables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41186453\n  
3822,     Minor simplifications to Multimaps \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41184579\n  
3823,     Reconcile @GwtIncompatible (and @GoogleInternal) annotations with the build-system lists of GWT-compatible (and GWT-compatible emulated) files \nThe main effect of this is to make InternetDomainName available under GWT in Guava  (It somehow seems to have worked anyway inside Google )    google com/p/guava-libraries/issues/detail?id=1253\nIt s also necessary to make UnsignedInteger multiply() (which is already deprecated) unavailable under GWT  since it is a simple passthrough to the times() method  which is also unavailable under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41134674\n  
3824,     check that forAllPublicStaticMethods() at least covers one method  ot avoid the case that user forgets to add public static modifiers to the factory methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41125051\n  
3825,     Trim lots of unused and redundant code   In particular \n\n* refactor hash table size computations into one place\n* use Maps safeGet and friends where appropriate\n* eliminate code duplication between the two skeleton implementations of NavigableMap descendingMap()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41052812\n  
3826,     It\ s January 2013!\n- Remove MapMaker softKeys \n- Remove AsynchronousComputationException (slated for November 2012 deletion) \n- Change Unsigned* methods\  expiration from a month to a version  since  one version  is what we try to do  anyway  and we had scheduled them for  January  rather than  15 0  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41046796\n  
3827,     MOE stripping fixes:\n- Put  MOE: begin end _intracomment_strip  in HTML comments so that it does not appear in internal Javadoc \n- Turn scrub_sensitive_comments off so that MOE gives errors instead of silently stripping comments that contained sensitive words \n- Where necessary  manually strip out sensitive words  remove them  or replace them with non-sensitive words \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41038153\n  
3828,     Fix toString() of some Source/Sink implementations to match method names \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41036419\n  
3829,     Rollback of controversial c423bec3cc53 ( Trim gratuitous code from ImmutableList implementations ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41031096\n  
3830,     Reduce unnecessary code in Multisets and Multimaps\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41030309\n  
3831,     Added Invokable#getOwnerType()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41008711\n  
3832,     Excluded META-INF/ from ClassPath\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41003993\n  
3833,     Add  application/binary  media type \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=41002328\n  
3834,     Remove unnecessary code from *Immutable*Map implementations\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40999290\n  
3835,     Simplified attempt to fix common issues with Unsafe in common libs\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40999025\n  
3836,     Trim gratuitous code from ImmutableList implementations\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40997992\n  
3837,     TypeParameter reshuffling \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40994611\n  
3838,     Added javadoc to ClassSanityTester about a pattern to test builder equality  Added invokable setAccessible(true) to allow public factories of non-public classes to be tested \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40993798\n  
3839,     Fix typo in UsingToStringOrdering javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40988923\n  
3840,     Include test txt in Guava to fix ClassPathTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40980832\n  
3841,     Cleans up HashingTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40973196\n  
3842,     Added ClassPath getResources()  See    google com/p/guava-libraries/issues/detail?id=1214\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40960937\n  
3843,     Use a for loop instead of a switch in Murmur3_32 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40945029\n  
3844,     Fix OSGI metadata creation in Guava build \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40892296\n  
3845,     Guava issue 1245: fix generics for BaseEncoding streaming encoding/decoding\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40878894\n  
3846,     Add new MediaTypes for use by WebFinger\n(   google com/p/webfinger) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40829323\n  
3847,     added tests to cover non-jar file case\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40779626\n  
3848,     See    google com/p/guava-libraries/issues/detail?id=1215 Catch IOException thrown by new JarFile()  Sometimes there may be non-jar files in the class path  for example   jnilib files\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40754214\n  
3849,     Add Invokable isVarArgs() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40749218\n  
3850,     Add application/xml to MediaType \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40684914\n  
3851,     Deprecate ForwardingService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40646316\n  
3852,     Write a more compact ImmutableTable implementation \n\nInstead of maintaining explicit Cell objects and an ImmutableSet<Cell> cellSet implementation  we keep iteration-ordered pointers into the main lookup structures to avoid keeping two hash tables for the same data \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40531451\n  
3853,     Fix calls to deprecated Stopwatch elapsedTime(TimeUnit) by inlining that method\ s implementation ( elapsed(TimeUnit) ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40480378\n  
3854,     Fix calls to deprecated Stopwatch elapsedMillis() by inlining that method\ s implementation ( elapsed(MILLISECONDS) ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40472379\n  
3855,     Give removal date for Stopwatch deprecation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40466574\n  
3856,     StandardSystemProperties -> @GI\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40464798\n  
3857,     Add a method to Uri that allows us to get the port (via HostAndPort) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40360770\n  
3858,     Fix comment in AbstractMapBasedMultiset reported in Guava issue 1234 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40349870\n  
3859,     Changed ClassSanityTester testEquals() to check against use of == on objects  We assume that the implementations should call equals()\n\nTested: [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40349360\n  
3860,     Add base StandardSystemProperties\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40325631\n  
3861,     Make Closer public and @Beta  Also  change Closer rethrow(Throwable) to propagate IOExceptions by default and change all calls to rethrow(e  IOException class) to rethrow(e)  Add a pointer from Closeables closeQuietly deprecation text to Closer \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40308996\n  
3862,     Take steps to fix Cache refresh race condition   Specifically  do a racy check outside the lock to see if the value is already being refreshed  and do an optional check inside the lock to eliminate the race condition entirely \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40301328\n  
3863,     Undeprecate Closeables closeQuietly for the moment  We ll deprecate it on the 14 0 release branch \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40268076\n  
3864,     Remove extraneous semicolon \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40263424\n  
3865,     Override HashFunction#toString() where possible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40255702\n  
3866,     Add tests for known defaults for all HashFunctions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40223497\n  
3867,     Put that coffee down  Coffee s for closers only \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40220880\n  
3868,     Reorganize LinkedListMultimap to avoid the three redundant hash maps  saving a fair amount of memory \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40210587\n  
3869,     Add default clause to every switch statement in our code \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40168064\n  
3870,     Make our code a little closer to obeying the  every switch must have a default  rule \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40165739\n  
3871,     Add  Byte Char  Source Sink  streaming APIs to BaseEncoding \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40155178\n  
3872,     Add BiMapMemoryBenchmark\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40154710\n  
3873,     Minor optimizations for BaseEncoding \n\nSpecifically  we compute the exact size of the decoded byte array in the absence of a separator by trimming away padding characters before estimating the decoded size \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40128625\n  
3874,     Ensure that recordStats works on Android  GWT  and environments which may restrict the use of sun misc Unsafe  as per Guava issue 1228 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40113906\n  
3875,     Revert accidental doc changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40085671\n  
3876,     Add more doc to BaseEncoding\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40048053\n  
3877,     Deprecate Stopwatch#elapsedTime  Stopwatch#elapsedMillis  and Range#asSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40031578\n  
3878,     Add subRangeSet to the RangeSet interface  and add the TreeRangeSet implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=40028620\n  
3879,     Rewrite TreeRangeSet complement() to be implemented in the same way as TreeRangeSet itself -- as a NavigableMap<Cut<C>  Range<C>> mapping lower bounds to ranges \n\nThis is a prelude to implementing TreeRangeSet subRangeSet  which -- itself implemented as a NavigableMap<Cut<C>  Range<C>> -- will be chainable with complement() operations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39984398\n  
3880,     Rollback LinkedListMultimap change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39937742\n  
3881,     Optimize CharMatcher as described in Guava issue 1223 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39931458\n  
3882,     Add MultisetMemoryBenchmark \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39931320\n  
3883,     Reducing some critical sections\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39926253\n  
3884,     Reorganize LinkedListMultimap to avoid the three redundant hash maps  saving a fair amount of memory \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39925816\n  
3885,     Hides the mutex that is used by RateLimiter  so clients can\ t interfere with it \nNote that the only current (and accidental) exposure of the fact that the RateLimiter\nuses  this  for synchronization  is the setRate/getRate methods  which have  synchronized \nin their signatures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39921152\n  
3886,     Add ByteStreams readBytes(InputStream  ByteProcessor)  It was requested by a Guava user and I actually already added the equivalent to CharStreams for LineProcessor  It also is a case where we should provide an InputStream equivalent so that users don t create single use InputSuppliers/ByteSources \n\nAlso add a missing @since tag and fix a few line lengths \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39918353\n  
3887,     Minor cleanups to BaseEncoding\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39881805\n  
3888,     Remove @Beta from UnsignedInteger and UnsignedLong \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39871896\n  
3889,     Deprecate DiscreteDomains \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39870832\n  
3890,     Expand Ascii to Lower Upper Case to take a CharSequence instead of a String\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39870574\n  
3891,     De-betaify lots of methods in Futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39869967\n  
3892,     SuppressWarnings for more tests ignoring return values \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39866774\n  
3893,     Remove logging from ServiceManager isHealthy  People who want the detailed information can easily get it from servicesByState() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39860721\n  
3894,     Change uses of DiscreteDomains methods to DiscreteDomain \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39844275\n  
3895,     Make SortedMultiset elementSet() return a NavigableSet outside GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39834726\n  
3896,     De-@Betaify AtomicDouble and AtomicDoubleArray \nFix javadoc typo in a href tag \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39797368\n  
3897,     Add TableMemoryBenchmark implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39795607\n  
3898,     Add MapMemoryBenchmark and SortedMapMemoryBenchmark \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39793649\n  
3899,     De-Betaify a slew of APIs in math  net and util/concurrent \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39793528\n  
3900,     Add SuppressWarnings for a couple places where a return value that shouldn t normally be ignored is ignored \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39777104\n  
3901,     Optimize collapseFrom and trimAndCollapseFrom so that they\nonly allocate if necessary   Add a few tests   Remove the GWT\nworkarounds for GWT bug 4491 since it appears to be fixed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39757514\n  
3902,     Shuffling in benchmark classes due to internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39747316\n  
3903,     New implementation of Objects ToStringHelper:\n\n- More efficient  doesn t create a list of temporary holders \n- Some javadoc improvements \n- New benchmark \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39701659\n  
3904,     Add SetMemoryBenchmark\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39700123\n  
3905,     Mark ServiceManager as Beta   Service is Beta so it makes sense for this class \n\nAlso  tweak a few docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39684054\n  
3906,     Add GWT compilation test \nSeparate testlib GWT files into guava-testlib/blackhole-gwt  where they can be ignored for the time being \n(testlib already doesn t work under GWT )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39671586\n  
3907,     Remove @Beta annotations from definitely stable standardXXX methods from ForwardingXXX classes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39629391\n  
3908,     Add Stopwatch#elapsed in prep for migration from elapsedTime() and\nelapsedMillis() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39620819\n  
3909,     Mention  hexadecimal  in BaseEncoding base16() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39617876\n  
3910,     Improve exception message for Stopwatch start() and stop() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39593299\n  
3911,     Merge DiscreteDomains into DiscreteDomain  in advance of migration \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39581939\n  
3912,     Reformatting from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39581002\n  
3913,     Remove @Beta from:\n-Objects ToStringHelper#omitNullValues\n-Optional or(Optional)\n-Optional transform\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39495606\n  
3914,     Remove @Beta from:\n-BoundType\n-FluentIterable (except toSortedList())\n-Range (except asSet())\n-SortedMapDifference\n-Immutable Set List  Multimap inverse()\n-ImmutableMultimap Builder order Value Key sBy\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39495506\n  
3915,     Remove @Beta from:\n-Ordering  lea greate stOf(Itera ble tor )\n-Ordering max/min(Iterator)\n-Sets synchronizedNavigableSet\n-Maps synchronizedNavigableMap\n-Maps filter Values Keys Entries \n-Maps transform Values Keys Entries \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39495484\n  
3916,     Small fixes to some incorrect @since tags \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39494615\n  
3917,     Forwarding classes out of @Beta (except standardFoo() methods) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39494356\n  
3918,     Change HashCode from 32-bit to 8-bit minimum in docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39493754\n  
3919,     Change (most) methods in common io that either return or take Input/OutputSuppliers to delegate to Sources/Sinks by wrapping suppliers as sources/sinks and vise versa  This also deprecates ByteStreams getChecksum() and Files getChecksum() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39480085\n  
3920,     Add an example to the javadocs for ThreadFactoryBuilder#setNameFormat\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39429195\n  
3921,     Opensource ServiceManager!\n\nSpecifically:\nremove @GI from Service failureCause (and implementors/referencing tests in util concurrent)\nremove @GI from ServiceManager and its tests\n\nadd javax inject as a compile dependency to guava/pom xml\nadd the javax inject jar to maven_local_repository tar gz\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39407518\n  
3922,     Rewrite Multimaps filter implementations  factoring out a significantly more efficient Multimaps filterKeys implementation in the process \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39394883\n  
3923,     Swap out truth 0 7 (and older source version) and swap in 0 10 with gwt support\nLots of import changes poached from:\nreplace_string  import org junit contrib truth   import org truth0 \nreplace_string  import static org junit contrib truth   import static org truth0 \nmanual search/replace containsAnyOrder() -> has() allOf()\nmanual search/replace containsInOrder() -> has() allOf() inOrder()\nsometimes s/r contains*Order() -> has() item or has() allFrom()  inOrder()  as appropriate\nother manual fixes\n\nTested:\nglobal presubmit\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39392184\n  
3924,     Implement ImmutableRangeSet subRangeSet(Range) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39377650\n  
3925,     Add subRangeMap to the RangeMap interface  and an implementation for TreeRangeMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39377500\n  
3926,     Implement ImmutableRangeMap subRangeMap(Range)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39333730\n  
3927,     Clarify docs on UnsignedLong fromLongBits/UnsignedInteger fromIntBits   Add UnsignedLong valueOf(long)  which rejects nonnegative values \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39281179\n  
3928,     Further LongMath sqrt optimizations  to show that a simple truncation is in fact sufficient   (This actually simplifies the proof )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39276105\n  
3929,     Optimize LongMath binomial by accumulating into separate numerator and denominator variables whenever overflow is known to be impossible  as in the BigIntegerMath implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39205160\n  
3930,     Minor cleanups: remove a gratuitous StringBuilder in CharMatcher  and up the ImmutableSortedMultiset memory consumption limit  which is causing flaky failures\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39204961\n  
3931,     Optimize LongMath sqrt \n\nThis optimization depends on the fact that Math rint(Math sqrt((double) longValue)) is at most 1 away from the true value of sqrt(longValue)  so there is no need for Newton s method iterations  or indeed any loops at all \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39162111\n  
3932,     Make CharMatcher toString() consistently format characters as \\uXXXX \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39158530\n  
3933,     Rewrite Multimaps transform* in terms of AbstractMultimap  and use MultimapTestSuiteBuilder on it directly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=39050523\n  
3934,     Changed Futures addCallback() not to call onFailure() when onSuccess() throws \n\nNote to test owners:\n\nThis change revealed test bugs in your test  The old code swallowed EasyMock  interaction expected  exception and passed it to your onFailure() method  which is a usually a no-op \n\nI didn\ t dig deeply enough into your code to understand if the offending interactions are supposed to happen  The fix is just blindly adding expect() call to make the tests pass \n\nIf you see a real bug  please let me know \n\nThanks!\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38864384\n  
3935,     LinkedHashMultimap rewrite\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38863555\n  
3936,     Clarify what does and doesn t count as a lookup in CacheStats \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38862581\n  
3937,     Add more class-level documentation and examples for RangeSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38862063\n  
3938,     Delete of(E[ ) from the GWT copy of ImmutableList \nThe  plain Java  copy has been gone for a long time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38793793\n  
3939,     Implement Multisets filter(Multiset  Predicate)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38740003\n  
3940,     Cache the upperCase() and lowerCase() results in the Encoding object itself  not the alphabet  so as to save an allocation from each call to lowerCase() or upperCase() after the first \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38731220\n  
3941,     Deprecate old UnsignedLong methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38728092\n  
3942,     Deprecate UnsignedInteger methods that have been renamed \nAdd @CheckReturnValue to the arithmetic methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38728022\n  
3943,     Refactor AbstractMultimap into a separate AbstractMultimap and AbstractMapBasedMultimap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38726867\n  
3944,     Add Longs tryParse \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38720107\n  
3945,     Minor re-ordering of gwt module declarations\n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38698087\n  
3946,     Fix up Iterators#cycle(E   ) docs \nAdd equality tests for HexString#encode  ByteArrays#toHexString  and HashCode#toString\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38654669\n  
3947,     Document the current behavior of ImmutableRangeSet Builder  even if we might change that behavior later \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38653539\n  
3948,     Fix bug in TreeRangeMap asMapOfRanges() get(absentRange)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38651843\n  
3949,     Add useful toString() for BaseEncoding\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38649483\n  
3950,     replace UnsignedInteger asUnsigned() with UnsignedInteger fromIntBits()\n\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38638597\n  
3951,     Stop recommending the use of delimiters when hashing strings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38631621\n  
3952,     Test default Charset \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38579676\n  
3953,     Avoid rebuilding alphabet lookup tables  etc  in BaseEncoding\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38575425\n  
3954,     Make Crc8HashFunction @GoogleInternal  since Hashing crc8 already is \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38565967\n  
3955,     UnsignedLong asUnsigned => UnsignedLong fromLongBits\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38564991\n  
3956,     Remove HashCode#padToInt (package-private) and override HashCode#hashCode() instead\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38560921\n  
3957,     Prepare for the same renamings for UnsignedInteger as in UnsignedLong\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38558333\n  
3958,     Re-write MessageDigestAlgorithmBenchmark using multiple @Params instead\nof different timeFoo() methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38484757\n  
3959,     Adds com google common hash Crc32cHashFunction \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38480998\n  
3960,     Use MessageDigest#clone() instead of MessageDigest#getInstance() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38480581\n  
3961,     Rewrite CacheBuilder removalListener docs a bit  removing some stale\nverbiage accidentally left over from GenericMapMaker  and being more\nclear about the requirement to use the returned reference \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38477912\n  
3962,     Add ByteSource  ByteSink  CharSource and CharSink abstract classes and factory methods for creating various implementations of them \n\nThese classes are intended to replace the InputSupplier and OutputSupplier interfaces  providing advantages such as: no generics  a more consistent interface that reduces the need for static methods  and better discoverability \n\nThis helps pave the way for JDK7 by making it extremely easy to provide the same features for the new file APIs (Path) that we currently provide for Files  etc  All it will require is adding new factory methods to create Sources and Sinks wrapping a Path \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38458933\n  
3963,     Use HashFunction#hashObject shortcut \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38455777\n  
3964,     Add new UnsignedLong methods that we will shortly migrate to \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38454126\n  
3965,     Add Crc8HashFunction to compute the CRC8 \nRelax restriction of >= 4 bytes for a HashCode instance \nAdd HashCode#padToInt\nAdd HashCodes#fromByte\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38451830\n  
3966,     Changed Invokable to always return the source-view of parameters  even for non-static inner class constructors \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38361864\n  
3967,     Add Maps filter Keys Values Entries (NavigableMap  Predicate)  since we added Sets filter(NavigableSet  Predicate) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38357323\n  
3968,     This CL fixes method calls that incorrectly ignore the return\nvalue  Method calls with no side-effect are pointless if you\nignore the value returned  Also  this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored  This an automated fix using\nerror-prone \n\nWe intend to make this a compilation error in Google s Java compiler \nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38277360\n  
3969,     Add a speculative size check to Iterables elementsEqual  as per Guava issue 1183 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38262433\n  
3970,     Guava issue 555: EnumMultiset create(Iterable  Class)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38260896\n  
3971,     Add @since for withFallback \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38255463\n  
3972,     Compute CharMatcher constants lazily whenever possible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38170514\n  
3973,     Add streaming encoding and decoding to BaseEncoding \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38154034\n  
3974,     Rewrite ImmutableBiMap to save ~35% on memory consumption  following the ideas of our HashBiMap rewrite \n\nThis should not have significant performance impact  as the implementation is essentially identical -- save that entry objects are shared between the forward and backward maps \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38148097\n  
3975,     Make TreeMultimap asMap() and keySet() return NavigableMap/NavigableSet  falling back to SortedMap/SortedSet on GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38143211\n  
3976,     Return a NavigableSet from TreeMultimap get\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38054420\n  
3977,     Add TreeRangeSet create(RangeSet)  copy factory method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38049043\n  
3978,     Add Google-internal memory consumption tests for  Immutable HashBased TreeBased Table \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38048228\n  
3979,     Add HashFunction#hashObject() shortcut \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38044012\n  
3980,     renames array fields with positive-length values \nwhich are mutable  from ALL_CAPS to camelCase\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38043270\n  
3981,     Add Google-internal memory consumption tests for all top-level Multimap implementation types \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38042089\n  
3982,     Avoid the fragile assumption in SortedMapTestSuiteBuilder that all tested maps are Map<String  String>\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38041962\n  
3983,     Add Google-internal memory consumption tests for Immutable List Set Map BiMap SortedMap SortedSet  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38036087\n  
3984,     Add Google-internal memory consumption tests for all top-level Multiset implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38035186\n  
3985,     Implement ImmutableRangeSet asSet(DiscreteDomain) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38034818\n  
3986,     Eliminate an unchecked cast from ImmutableSortedSet that previously generated unsuppressed warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38034277\n  
3987,     This CL fixes method calls that incorrectly ignore the return\nvalue  Method calls with no side-effect are pointless if you\nignore the value returned  Also  this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored  This an automated fix using\nerror-prone \n\nWe intend to make this a compilation error in Google s Java compiler \nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=38025487\n  
3988,     Fix generics in Cache which are breaking the MOE build \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37779427\n  
3989,     This CL fixes method calls that incorrectly ignore the return\nvalue  Method calls with no side-effect are pointless if you\nignore the value returned  Also  this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored  This an automated fix using\nerror-prone \n\nWe intend to make this a compilation error in Google s Java compiler \nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37689226\n  
3990,     Add RangeSet span()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37651646\n  
3991,     This CL fixes method calls that incorrectly ignore the return\nvalue  Method calls with no side-effect are pointless if you\nignore the value returned  Also  this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored  This an automated fix using\nerror-prone \n\nWe intend to make this a compilation error in Google s Java compiler \nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37644487\n  
3992,     Export TestingExecutorsTest to Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37556826\n  
3993,     Add TestingExecutors noOpScheduledExecutor to common/util/concurrent/testing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37540391\n  
3994,     Change Hashing smear to use MurmurHash3 s mixK1  which appears slightly faster and more effective for use in open-addressed hash tables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37090965\n  
3995,     Add RangeMap span() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37068105\n  
3996,     Add a package-private pollNext helper  using it for a few pollFirst/pollLast methods here and there\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37066519\n  
3997,     Forbid empty ranges in ImmutableRangeMap Builder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37065199\n  
3998,     Re-export testdata files into Guava after CL 36707785 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37065032\n  
3999,     Make FilteredCollectionsTest pass under Maven \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37049722\n  
4000,     Some javadoc improvement of Invokable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37049407\n  
4001,     Try to improve Splitter documentation\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37048099\n  
4002,     Rename com google common io Io-gwt to  com google common io Io  to follow the pattern used in our other packages \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37045666\n  
4003,     Add copyright information to ported Murmur hash functions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37032710\n  
4004,     Comment seemingly-unnecessary bitwise mask in UnsignedInteger \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=37025851\n  
4005,     Reorganize tests for filter methods on Iterables  Collections  Sets  etc \nNOTE: This CL introduces an empty FilteredCollectionsTest class  which Maven s test runner doesn t like  We ll fix it shortly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36708171\n  
4006,     Make BaseEncoding @GwtCompatible \nNOTE: This CL accidentally removes test data files  breaking tests  We will fix this shortly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36707785\n  
4007,     Change ByteStreams  CharStreams and Files to use Closer \n\nAlso update ByteStreams and CharStreams tests to check for suppressed rather than logged exceptions when running on JDK7  and change Closer to log to Closeables logger \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36704557\n  
4008,     Remove ImmutableRangeSet all()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36698163\n  
4009,     Release a couple io test methods \n\nThey were hidden because TestLogHandler wasn t available  but it is now \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36693847\n  
4010,     Add Closer as package-private in common io \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36681931\n  
4011,     Add RangeMap getEntry method \n\nThis appears to be needed by    [ /#[ /java/com/google/net/security/[ proxy/ProxyConfigFile java&l=583  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36676148\n  
4012,     Avoid allocating for Multimap removeAll(absentKey) implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36667564\n  
4013,     Make TreeMultiset elementSet() return a NavigableSet (albeit not in GWT)   Dependent on cl/36499908 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36545396\n  
4014,     Write the initial  skeletal BaseEncoding API \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36544759\n  
4015,     Add tests for ImmutableSortedMultiset asList views\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36537737\n  
4016,     Split MultisetCollectionTest suites into the appropriate test classes\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36537481\n  
4017,     Test SortedMultiset elementSet() with a SortedSetTestSuiteBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36535008\n  
4018,     Migrate IRangeMap into RangeMap s position \n\nCL automatically created by:\nreplace_string  \\\nRangeMap create\\\\\\(\\\\\\) \\\nTreeRangeMap create\\(\\)\n\nTested:\nreviewed submit queues\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36518602\n  
4019,     Add elementSet and entrySet tests to MultisetTestSuiteBuilder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36498472\n  
4020,     Change ImmutableRangeSet Builder to reject overlaps\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36498240\n  
4021,     Add ImmutableListCreationBenchmark to help evaluate the utility of pre-sized builders \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36498026\n  
4022,     Deprecate Closeables closeQuietly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36487308\n  
4023,     Improve Hasher docs about Hasher putChar(\ a\ ) putChar(\ b\ ) hash() being\nequivalent to Hasher putString( ab ) hash() \nAdd a test that demonstrates this behavior \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36383791\n  
4024,     Add tests for ImmutableSortedMap  entrySet keySet values  asList \n\nDependent on cl/36166288 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36374019\n  
4025,     Add an InternetDomainName test that confirms proper behavior when  under  TLD patterns overlap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36371550\n  
4026,     Specify the behavior of Hashers after Hasher#hash() has been called \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36368626\n  
4027,     Add ImmutableMultiset asList() tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36363737\n  
4028,     Fix precondition error message to use %s instead of %d (which is not supported by the preconditions formatter) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36322003\n  
4029,     Sanity test for a known bloom filter and false positives \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36200843\n  
4030,     Add tests for ImmutableMap  keySet entrySet values  asList\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36194340\n  
4031,     Allow for arbitrary orderings in tests for lists  rather than assuming insertion order \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36192794\n  
4032,     Add a message to EOFExceptions thrown by ByteStreams readFully and skipFully \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36182453\n  
4033,     Fix up javadocs to say   @link Foo  instances  instead of   @link Foo s  \n(Same with  @code     ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36168403\n  
4034,     Guava issue 1120  Remove ThreadLocal value in EventBus rather than setting to false \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36161462\n  
4035,     Automated g4 rollback of changelist 35973933 \n\n*** Reason for rollback ***\n\nBroke megastore tests\n\n*** Original change description ***\n\nMake ListeningScheduledExecutorService schedule* return a ListenableFuture\n(Originally from CL 23008243 by way of CL 22474051)\nMake FakeScheduleExecutorService a ListeningScheduledExecutorService\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36011435\n  
4036,     Automated g4 rollback of changelist 35980335 \n\n*** Reason for rollback ***\n\nBreaks megastore tests \n\n*** Original change description ***\n\nTiny cleanups after cl 35973933  Fixed a spurious character that snuck in and extra spacing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=36003816\n  
4037,     Break up Collection test suites and put tests for a class in   the tests for that class \n\nWhile we re at it  knock out a couple of redundant tests for TreeMultimap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35986812\n  
4038,     Tiny cleanups after cl 35973933  Fixed a spurious character that snuck in and extra spacing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35980335\n  
4039,     Make ListeningScheduledExecutorService schedule* return a ListenableFuture\n(Originally from CL 23008243 by way of CL 22474051)\nMake FakeScheduleExecutorService a ListeningScheduledExecutorService\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35973933\n  
4040,     Guava issue 1012: Sets filter for NavigableSet\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35956146\n  
4041,     Adding ForwardingBlockingDeque  as it s a natural fit for Guava and something which is currently missing from the library \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35939897\n  
4042,     Migrate BiMap-filtering methods out of Labs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35880650\n  
4043,     Allow ImmutableSortedMap naturalOrder() to accept a <K extends Comparable<? super K>>  since the javac bug appears to be fixed?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35876909\n  
4044,     Revert GWT emulation of HashBiMap to simpler version using two HashMaps that s better for GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35829480\n  
4045,     Second try at adding MoreExecutors platformThreadFactory() \nNow if ThreadManager currentRequestThreadFactory() throws  we fall back to Executors defaultThreadFactory() \nIn particular  this happens when AppEngine is running in this JVM  but there is no AppEngine context for the current thread (i e  we\ re  outside  appengine) \n\n*** Reason for rollback ***\n\nRoll forward after handling leaked system properties more robustly \n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 35431636 \n\n*** Reason for rollback ***\n\nBreaks puppet tests  where we falsely detect the environment to be AppEngine due to system property leakage \n\n*** Original change description ***\n\nAdd MoreExecutors platformThreadFactory()  an AppEngine-aware version of Executors#defaultThreadFactory \n\nUpdate classes within c g c\n\n    description truncated by g4 rollback    \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35820196\n  
4046,     Add more thorough tests to MultimapTestSuiteBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35614504\n  
4047,     Cancelling a successfulAsList() Future should not produce an exception (even if that exception is merely logged) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35580495\n  
4048,     Remove the State parameter from AbstractIdleService executor   This parameter is redundant with the value of the state() method at the times the method is called   So it can be removed without removing functionality and it brings this method (more) in line with AbstractExecutionThreadService executor and AbstractScheduledService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35573254\n  
4049,     Remove README maven  which is no longer relevant \n  
4050,     Two small service cleanups \n1  Make AbstractIdleService getServiceName protected (instead of private) and rename to serviceName\n2  Have serviceManager log service failures at SEVERE and also log service terminations at INFO level \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35524121\n  
4051,     Rename AbstractExecutionThreadService getServiceName to serviceName to be more consistent with other Service methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35510047\n  
4052,     Special-case ImmutableMap copyOf(EnumMap) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35504772\n  
4053,     Adding the IDN ccTLD for Kazakhstan that is implemented by IANA (   iana org/domains/root/db) but not yet\nin the Mozilla names file \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35492306\n  
4054,     A few small cleanups to use utility classes in c g c collect\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35489898\n  
4055,     Add ignoreClasses(Predicate) to AbstractPackageSanityTests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35488015\n  
4056,     Rollback MoreExecutors plaformThreadFactory() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35478665\n  
4057,     Update Mozilla PSL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35437775\n  
4058,     Give the thread running in the default ScheduledExecutorService for the AbstractScheduledService a name   This follows the pattern that AbstractExecutionThread uses \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35433849\n  
4059,     Minor javadoc cleanup \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35431916\n  
4060,     Add MoreExecutors platformThreadFactory()  an AppEngine-aware version of Executors#defaultThreadFactory \n\nUpdate classes within c g common util concurrent that create new threads to use this factory \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35431636\n  
4061,     Add GWT src-super for HashBiMap change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35367257\n  
4062,     Basic implementation of ImmutableMap asMultimap()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35373012\n  
4063,     Give CharMatcher apply() the same treatment as Range apply() etc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35346388\n  
4064,     fix toString  which was missing maximumSize (reported by François Vinassac)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35325729\n  
4065,     Rewrite HashBiMap to share entries between the forward and backward maps  yielding ~38% savings on memory \n\nThis imposes a small performance hit in the case of duplicate keys or values -- at most one addition traversal of a hash table bucket -- but no more \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35322418\n  
4066,     Fix javadoc of ClassSanityTester by replacing  public  with  non-private  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35290790\n  
4067,     Try to improve Multimap class docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35290017\n  
4068,     Add LegacyHashing fprint96() (aka  the first 12 bytes of the SHA-1 hash) \nAllow a MessageDigestHashFunction to return a subset of it s digest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35289881\n  
4069,     Added null tests against return values of MoreExecutors and Futures\n\nTested: [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35282579\n  
4070,     Add a special case for ImmutableSet copyOf(EnumSet) delegating to Sets immutableEnumSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35258318\n  
4071,     Remove scope=provided for jsr305 \n   google com/p/guava-libraries/issues/detail?id=1152\n\nPlus  remove type=jar  which is already the default \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35233240\n  
4072,     Remove obsolete maven configuration which used to merge in METADATA MF files into the jar  but no longer needs to  since maven will just scoop up the created METADATA MF produced by the osgi bundle generator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35231748\n  
4073,     Miscellaneous cleanup \n- Fixed Findbugs @Nullable problems \n- Fixed Javadoc warnings \n- Fixed Unsigned* doc copypasta  and generally made it more consistent \n- Documented exceptions in Uninterruptibles \n- Used NPT setDefault instead of an checkNotNull call for newEnumSet \n- Added Abstract*Service explicit constructors and docs \n- Fixed <p><b>Note</b></p> in SourceCodeEscapers \n- Fixed  to be be  in cartesianProduct \n- Fixed    in RetryingCallable doc \n- Fixed weird indent on call to createTestSuite \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=35230825\n  
4074,     Add a benchmark comparing CRC32 and Adler32 hashing using the Checksum API directly and using the common hash API \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34984248\n  
4075,     Implement DescendingImmutableSortedSet  a skeleton implementation of ImmutableSortedSet descendingSet() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34936379\n  
4076,     Remove ImmutableSetMultimap SortedKeyBuilderMultimap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34927857\n  
4077,     Delete TransformedImmutableSet  which was a skeleton abstract class with only one subclass anyway \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34859558\n  
4078,     Eliminate Iterators unmodifiableListIterator  which was package-private but never used \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34641948\n  
4079,     Rewrite TreeRangeSet implementation to use its own  smarter complement implementation   Most notably  complement() encloses(Range) is now a logarithmic-time operation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34639480\n  
4080,     Added getSimpleName() to ClassPath ClassInfo because some users might want to check on the class name prefix? There is already user who checks on the suffix \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34629374\n  
4081,     Some javadoc improvement of AbstractPackageSanityTests and ClassSanityTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34624992\n  
4082,     Added new API to allow filtering methods by return types:\n\nnew ClassSanityTester()\n forAllPublicStaticMethods(Iterables class)\n thatReturn(Iterable class)\n testNulls();\n\nThis better targets the tests against methods that need to be tested  and avoid pointless failures for methods that don t need to be tested \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34588474\n  
4083,     Applied package sanity tests to common util concurrent\n\nTested: [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34588014\n  
4084,     Add a microbenchmark for c g common base Joiner and other common implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34581745\n  
4085,     Specify exact CPP equivalents for murmur3 hashing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34580858\n  
4086,     Deprecate Hashing padToLong(HashCode) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34579256\n  
4087,     add equals/null tests for HashCodes\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34563347\n  
4088,     Add equals/hashCode to Suppliers  and tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34552771\n  
4089,     Make ListenableFutureTask non-final but not subclassable externally \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34552583\n  
4090,     Fix typo in comment about where test constant came from \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34551664\n  
4091,     Add HashCode padToLong() to replace Hashing padToLong(HashCode) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34550858\n  
4092,     Speed up notably slow math tests for GWT s sake \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34540675\n  
4093,     A few miscellaneous changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34536148\n  
4094,     Add Java Checksums (CRC32  Adler32) to Hashing \n\nThis is done so that we can allow users to easily compute the checksum of some bytes (a file  say) without having to use the Checksum API directly \n\nAlso add an abstract Hasher shared by MessageDigestHashFunction and ChecksumHashFunction  since they operate basically the same way \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34509490\n  
4095,     Add Splitter withKeyValueSeprator(char)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34504065\n  
4096,     Applied package sanity tests to common math\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34503919\n  
4097,     Fix a bug so we actually store the cause of cancellation in cancelled futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34502625\n  
4098,     Applied package sanity tests to common io\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34502521\n  
4099,     Applied package sanity tests to common eventbus\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34501606\n  
4100,     Remove serializable=true from ArrayTable\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34500078\n  
4101,     Make ArrayTable gwt compatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34495130\n  
4102,     Changed ClassSanityTester to not to attempt to instantiate the class if no instance method needs to be tested for nulls  This avoids unnecessary test failures for classes that don t need null check after all \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34466316\n  
4103,     Applied package sanity test to common cache  I had to add some checkNotNull() to LocalCache and CacheLoader  based on my understanding of the javadoc  Though it does change the contract: some didn t throw NPE on null  some threw UncheckedExecutionException \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34462784\n  
4104,     applied package sanity tests to common hash\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34460278\n  
4105,     Implement ImmutableRangeSet \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34454241\n  
4106,     Added PackageSanityTest to common/primitive\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34437463\n  
4107,     Replace SingletonImmutableMap with SingletonImmutableBiMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34396548\n  
4108,     Some minor further optimizations to Ordering leastOf \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34392353\n  
4109,     Guava issue 1154: use the new String(byte[   Charset) constructor directly\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34385923\n  
4110,     Remove <E extends Enum<E>> from GWT ImmutableEnumMap  reducing code bloat \nWe still don t really know why this happens  but the difference is huge \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34349121\n  
4111,     Implement ImmutableEnumMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34322860\n  
4112,     Applied package sanity tests to common/base\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34319507\n  
4113,     Implement Sets cartesianProduct to iterate in lexicographical order   In the process  Lists cartesianProduct has been implemented on a package-private basis \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34279184\n  
4114,     Change ImmutableClassToInstanceMap#getInstance() to reject null Class\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34262782\n  
4115,     Change the HostAndPort java to support case like  hostname: \nHere\ s the string does include a  :  but does not have the port number  before this CL  HostAndPort java tries to parse the empty string after  :  to a number and throws a NumberFormatException \nIn this case  it should treat the port is undefined instead \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34245642\n  
4116,     Applied package sanity test to common/collect  Had to add publicApiOnly() because there are a lot of package-private classes that should either not be tested (the shim classes) or are already covered by another test  like the various *ContiguousSet classes covered by ContiguousSetTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34235956\n  
4117,     Improve consistency of Javadoc for Multisets union/intersection/sum/difference  highlighting how they differ and the mathematical operation each is based on \n\nAlso get rid of an unnecessary call to Math max \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34230467\n  
4118,     Add Multisets union \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34224294\n  
4119,     Add Multisets sum and Multisets difference \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34223499\n  
4120,     Fix Ordering leastOf for very large k\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34196765\n  
4121,     Makes FreshValueGenerator more friendly to collection types especially immutable collection types  This reduces false positives and also reduces the need to set sample instances for collection types \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34163462\n  
4122,     Add Ordering greatestOf(Iterator  int) overload  and fix the doc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34132823\n  
4123,     Optimize Ordering leastOf() \n\nThis change reduces the temporary memory required by Ordering leastOf to O(k) instead of O(n) -- typically  astronomically smaller \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34131161\n  
4124,     Fix typo in code sample for ForwardingWrapperTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34069677\n  
4125,     Added testEquals() to AbstractPackageSanityTests \n\nExtracted some of the code into a new ClassSanityTester class \n\nAlso added utility to test factory classes such as Predicates  for example:\n\nnew ClassSanityTester() forAllPublicStaticMethods(Predicates class)\n testEqualsAndSerialiable();\n\nThis cannot be performed by package sanity tests because there is no reliable pattern to tell that a class is a factory class (using plural is tricky in i18n if not anything else)  But I think adding a simple test to PredicatesTest for Predicates is already a lot easier \n\nAdded javadoc to explain which case are covered by these automated sanity tests and which aren\ t \n\nAdded ItemReporter to RelationshipTester and EqualsTester so that the error message can be customized  The default  group i  item j  message is useless for automated test  since user didn\ t explicitly create the equality groups and the group numbers and item numbers are meaningless to users \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34054176\n  
4126,     Refactor RangeSet into an interface and an abstract skeleton\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34047917\n  
4127,     Move a comment that had become out of place \nThis bothered me when I noticed I d accidentally done it  so what the heck \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34035516\n  
4128,     Eliminate EmptyImmutableMap  using ImmutableBiMap of() everywhere instead \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34006338\n  
4129,     Add toString() to DiscreteDomains\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34006016\n  
4130,     Add documentation in Iterables getNext(Iterable  Object) that says that if no default value is desired  to use iterable iterator() next() instead \n\nThis is a 7 month late CL that I said I\ d do  tomorrow  in    google com[ d/msg/java-libraries-discuss/nXCh1owtVmw/5w493bgRgp0J  \nSee also these other threads asking the same question:    google com[ d/topic/java-libraries-discuss/TTyhA8ifTew &    google com[ d/topic/java-users/iA6Kav0D7XM  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=34002097\n  
4131,     Remove an unused import \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33904446\n  
4132,     define strict ordering over ClassInfo so that ordering is deterministic  Also renamed getClasses() to getTopLevelClasses() to be more explicit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33904815\n  
4133,     Fix a compile error in Java 7:\n\nerror: name clash: apply(T#1) in Predicate and apply(F) in Function have the same erasure  yet neither overrides the other\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33900718\n  
4134,     Rename expandFor in Immutable builders \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33900350\n  
4135,     Document the NPE in UnsignedLongs parseUnsignedLong\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33899913\n  
4136,     External Guava issue 1148: avoid explicitly copying ImmutableEnumSets\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33899746\n  
4137,     Remove Eclipse-based compiler error  The method set(int  Optional<V>) in the type List<Optional<V>> is not applicable for the arguments (int  Optional<capture#66-of ? extends V> \n\nAlso  remove unused import  (!)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33894774\n  
4138,     Add a single parity test with known output from SMHasher (python) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33886930\n  
4139,     Update javadocs to suggest using a PQ or MMPQ if the entire iterator\ncannot be held in memory at once \nAdd test for leastOf including null elements (the reason we can t use\nan ImmutableList as a return type) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33790169\n  
4140,     A number of small changes and fixes in EventBus:\n- flattenHierarchy was catching an exception that couldn t be thrown because the CacheLoader doesn t throw a checked exception  Fix it to catch the right exception type \n- Change eventsToDispatch to use non-thread safe queues since it s a ThreadLocal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33790152\n  
4141,     Simplify places in CharMatcher where StringBuilder is used unnecessarily \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33785205\n  
4142,     Change the default executor of the AbstractScheduledService so that it is shutdown when the service reaches a terminal state   This ensures that a stopped service cannot prevent the JVM from exiting \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33759240\n  
4143,     Clarify the wording of the exception messages in Optional subclasses \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33759112\n  
4144,     Experimental EventBus CL that reduces the overhead of reflection in the\ncase where a lot of EventBus instances are created and the same type of\nobjects are registered on all of them  This makes a difference of about\n4x in one app \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33742203\n  
4145,     Extracted FreshValueGenerator from ForwardingWrapperTester to a stand-alone class so it can be reused for automated equals testing \n\nFixed a bug in freshCurrency() because apparently no all Locale s can be passed to Currency getInstance() \n\nAlso added Parameter getInvokable()  I find that not having it forces me to pass around the Invokable together with the Parameter  which is inconvenient  And the backward reference isn t unprecedented  Method getDeclaringClass() does it too \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33689642\n  
4146,     Allow synchronous calls to EventBus post() \n\nAs we re only reading the set of registered event handlers when an event is posted  it is more efficient to split the lock on handlersByType into read and write locks and only acquire the write lock in register() and unregister() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33685413\n  
4147,     Fix thread-safety of EventBus \n\nIn a previous change  handlersByType was converted from a ConcurrentMap to a SetMultimap  However  the SetMultimap returned by Multimaps newSetMultimap is not threadsafe when concurrent operations update the multimap  even if the map and set factory are  This can cause registered subscribers to stop receiving events because they are dropped from the multimap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33680249\n  
4148,     Added AbstractPackageSanityTests to apply automated sanity tests for an entire package \n\nYaks I needed to shave:\n- move a piece of reusable code from NullPointerTester into a new DummyProxy class \n- Added a few new default values to ArbitraryInstances  (I m thinking to change the default value of numbers to 1  in a separate CL)\n\nAdded PackageSanityTests to common reflect and common testing  as dogfooding  Had to add some @Nullable and missing checkNotNull() as a result \n\nSince APST is classpath sensitive  there are a lot of top-level class fixture files in the packagesanity package and each test case corresponds to a single java_test rule  That makes the CL more daunting than it actually is \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33660554\n  
4149,     Changed AbstractInvocationHandler#equals() and hashCode() to delegate to the invocation handler  to allow customization  I needed it to create dynamic proxies that works for SerializableTester reserializeAndAssert() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33639720\n  
4150,     Release Futures withFallback to Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33473424\n  
4151,     Reconcile the cancellation semantics for Futures combine  successfulAsList  allAsList  and withFallback to be consistent with Futures transform   Now  all cancellations are back-propagated to the input futures   We also expose the interruption state in AbstractFuture with a protected method   To ensure the interruption state is correct and threadsafe  we add an additional state to AbstractFuture s inner Sync class to atomically distinguish between cancelled and interrupted \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33468640\n  
4152,     Add tests for ConcurrentSkipList Map Set  and for a TreeMap with no comparator \nThe latter requires suppressions for the same reason that our no-comparator TreeSet tests do: The first element is wrongly permitted to be inserted even if it s null \nAlso  fix up a few misnamed methods and a copy-pasted doc comment \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33468471\n  
4153,     Changed NullPointerTester to use Invokable\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33440442\n  
4154,     Added  TypeToken#method() and constructor() to return Invokable<> with types resolved;\n\nAlso changed Invokable from(Method) to return Invokable<?  Object> since now clients can start from TypeToken from() to get a really invoke()-able Invokable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33436645\n  
4155,     Assorted cleanup:\n- Fix bogus  ImmutableMap keySet  name for ImmutableMap test \n- Remove unused FeatureUtil manual GWT emulation \n- Remove one odd whitespace occurrence \n- Fix Closeables Javadoc code formatting  plus other tweaks \n- Change @link to @linkplain and Equivalances to Equivalence in Equivalence \n- Fix various Javadoc warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33430865\n  
4156,     Add ClassPath#getClassesRecursive() \n\nRemoved ClassPath#getClasses(Package) for this subtlety in java lang Package\ s javadoc:\n   Within each ClassLoader instance all classes from the same java package have the same Package object   \n\nI\ m afraid that someone aware of the Package API may get confused by the getClasses(Package) and think that it will only return the classes the share the  same  Package object  while in fact it\ s only searching by name  not Package object identity  In other words  this method has the potential to be ambiguous semantically \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33425579\n  
4157,     Graduate labs reflect Invokable and labs reflect Parameter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33397919\n  
4158,     Change Splitter#on(String) to Splitter#on(char) for single character strings\n- Results in a 10-25% performance improvement see bug for details\n\nCL generated by running the following:\n\n#!/usr/bin/perl -pi\ns Splitter\\ on\\(\\ \\\\( )\\ \\) Splitter on(\ \\\\$1\ ) g;\ns Splitter\\ on\\(\\ ( )\\ \\) Splitter on(\ $1\ ) g;\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33393713\n  
4159,     Fix small javadoc typo in Stopwatch#elapsedMillis \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33384805\n  
4160,     Add getClasses(package) to ClassPath  IO now happens at the time ClassPath from(ClassLoader) is called  rather than getClasses() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33383562\n  
4161,     Benchmark Splitter#on char vs String length==1  char wins by a bit\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33356556\n  
4162,     Added ClassPath for exploring class path from a given ClassLoader  The class path system property is what the system class loader uses  The  meat  of the code is actually copied from AbstractModulePackageInfoSource from test suite builder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33345052\n  
4163,     Trivial fallout from internal-only change \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33239275\n  
4164,     Release permutations()-based test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33236453\n  
4165,     Make ServiceManagerTest @GoogleInternal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33204393\n  
4166,     Implement ServiceManager  the new better CompositeService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33185556\n  
4167,     Add an autoIncrementStep to FakeTicker  similar to the autoIncrementStep in FakeClock\n\nfor context: This API change is discussed in    google com[ d/topic/java-libraries-discuss/0rNUmTjRz_4/discussion\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33183758\n  
4168,     Added forwarder tests for various Forwarding* classes in util/concurrent  Added ForwardingObjectTester to test any subclass of ForwardingObject  Since it has to use EasyMock partial mock  I had to place it under javatests/  Along the way  fixed a few oversights in ForwardingWrapperTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33148165\n  
4169,     Deprecate Ranges now that the majority of callers have been migrated \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33144339\n  
4170,     Sorry  forgot to add @since to the methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33141201\n  
4171,     Add Futures allAsMap and Futures successfulAsMap as analogues to  all successful AsList \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33120330\n  
4172,     Added ForwardingWrapperTester to test forwarders  It lacks guava annotations  Please advise  Thanks\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33116315\n  
4173,     Update BloomFilter to implement Predicate \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33114990\n  
4174,     Added tryAcquire() and tryAcquire(int) to match with semaphore and to simplify client code when wanting to attempt to acquire a permit with zero wait time \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33098174\n  
4175,     Migrate callers from Ranges * to Range using automated search and replace   The following commands were used:\n1) sed -i  s/\\([^a-zA-Z \\)Ranges\\ /\\1Range\\ /g \n2) [ -bin/java/com/google/devtools/javatools/imports/ImportTool --remove=com google common collect Ranges --add=com google common collect Range\n\nTested:\nreviewed submit queues\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33090428\n  
4176,     Fixed JoinerTest by adding back the old setDefault(Object) call  The previous deletion was not tested against moe  Changed the test to cover package-private methods so that moe is covered; changed Joiner to add a missing @Nullable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33083585\n  
4177,     Remove final switch from CaseFormat \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33061765\n  
4178,     Fix incorrect @SuppressWarnings annotations:\n\n@SuppressWarnings( deprecated )\n\nshould be:\n\n@SuppressWarnings( deprecation )\n\nTested:\nTAP presubmits for global presubmit queue\n[ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33053189\n  
4179,     Added null check from NullPointerTester-generated proxies \n\nIt should be reasonable for the follow method to check null through a collaborator:\n\npublic void foo(String a  RejectNull b)  \nb rejectNull(a);\n \n\ninterface RejectNull  \nvoid rejectNull(String s);\n \n\nBecause RejectNull *should* throw NPE by contract \n\nIf NPT generates this proxy  it should make sure the proxy checks nulls mandated by the method signature \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33016839\n  
4180,     Copy LimitInputStream implementation to ByteStreams \nDeprecate LimitInputStream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=33000215\n  
4181,     Add method to CaseFormat enum instead of using a switch \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32995795\n  
4182,     Fix CacheBuilderSpecTest (issue 6453130)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32994791\n  
4183,     Add enough @Nullable annotations to make Findbugs happy \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32971318\n  
4184,     Add @Nullable to methods which take a @Nullable default value \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32966990\n  
4185,     Fix remaining callers of NullOutputStream in c/g/common \nMOE insert public for c g common io NullOutputStream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32965282\n  
4186,     Remove @Beta from Queues (and all of the static factory methods) \nAdd @link tags from Lists and Sets to Queues \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32963365\n  
4187,     Swallow unchecked exceptions in immediate future listeners\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32958093\n  
4188,     Add toMap  index and uniqueIndex to FluentIterable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32953942\n  
4189,     Point from Function to Functions and from Predicate to Predicates \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32953252\n  
4190,     Some more tests for MoreExecutors\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32929661\n  
4191,     Rewrite Futures immediate*Future with simple immutable Future implementations  and change Futures immediateFailingFuture to not rethrow on Error   This speeds up the creation of immediate futures by a factor of 10  which is significant for  e g  the upcoming asynchronous cache  which uses many more immediate futures  particularly for the translation layer between CacheLoader and AsyncCacheLoader \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32923067\n  
4192,     Store the stack trace of the thread that called cancel in AbstractFuture and attach it to CancellationExceptions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32921728\n  
4193,     Add ByteStreams#limit(InputStream  long)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32916484\n  
4194,     Delegate the Ranges implementations to Range   (I don t know why I didn t do this in the first place )  Also clean up common collect code to use Range and update the docs throughout \n\n(Was cl 32690240  but lost my client)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32911950\n  
4195,     Added some tests covering some edge cases in Futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32879297\n  
4196,     Improve Funnel javadocs about using an enum \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32878801\n  
4197,     Fix a few typos in the javadocs of Queues#synchronizedQueue\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32876603\n  
4198,     Format visibility keywords \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32838713\n  
4199,     Used TearDownStack instead of TearDownTestCase for AbstractExecutionThreadServiceTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32830069\n  
4200,     Add tryParse implementation for Doubles and Floats \n\nFrom Louis:    appspot com/6354088/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32829265\n  
4201,     Make FluentIterable toImmutable* package-private and clean up more callers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32827565\n  
4202,     Deprecate FluentIterable toImmutable*  Change a few references to toImmutableList in FluentIterable javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32777184\n  
4203,     Added idempotence test to ExecutionListTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32776278\n  
4204,     Change callers of FluentIterable toImmutableSet()  toImmutableSortedSet() and toSortedImmutableList() to call toSet()  toSortedSet() and toSortedList() instead \n\nTested:\nreviewed submit queues\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32770320\n  
4205,     Fixed a race deadlock bug in AbstractServiceTest: when notifyStopped() is called after getStateHistory()  the latter takes the synchronization lock and also waiting on the latch; the former cannot count down the latch because it can t grab the synchronization lock  Also added missing tests for throwing exception from doStart()  doStop() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32768098\n  
4206,     Use object equality instead of reference equality for the Funnel in\nBloomFilter equals() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32766357\n  
4207,     Added tests for stop-while-starting and stop-before-start to AbstractExecutionThreadServiceTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32766077\n  
4208,     Add exception unit tests for AbstractIdleService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32745827\n  
4209,     Add to[Set  etc   methods to replace the toImmutable[Set  etc   methods on FluentIterable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32739379\n  
4210,     Add Files getNameWithoutExtension\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32734609\n  
4211,     Rename FluentIterable addTo to copyInto \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32731689\n  
4212,     Fix comment bug \n\nThe comment suggests that the cause of an ExecutionException is passed\nin to  mapper   but that isn t the case according to:\n   [ /#[ /java/com/google/common/util/concurrent/AbstractCheckedFuture java&l=84\n\nIt would actually be nice if the comment were true  but I don t know\nthe consequences of updating the code in AbstractFuture \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32725153\n  
4213,     Use File API for getting extension rather than simple string parsing \nAdd NullPointerTester and fixed the surprising number of casings where we weren t checkNotNull ing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32708936\n  
4214,     Adds Queues synchronizedQueue (@Beta)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32690991\n  
4215,     Further CharMatcher optimizations  eliminating more unused code and especially identifying when the negation is better to precompute than the matcher directly \n\nFrom Louis:    appspot com/6351118/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32687304\n  
4216,     Add missing c g c collect testing manual emulations \nWithdraw c g c escape manual emulations \nAdd internal tests that make it less likely that we ll miss manual emulations in the future \n(It s still pretty likely  though  since the error occurs only if someone creates the fileset and associated test but forgets to update the build rule    )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32681009\n  
4217,     Split CloseablesTest into CloseablesTest and FlushablesTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32662484\n  
4218,     Copy NullOutputStream to ByteStreams nullOutputStream() \nDeprecate NullOutputStream \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32648796\n  
4219,     Move c g c collect testing GwtPlatform to guava-gwt \nEventually it may end up in a new guava-testlib-gwt \nFor the moment  though  let s just get it out of guava-testlib so that we don t need a GWT dependency there \nThis CL also removes that dependency \n\nI ve edited the MOE config to emphasize putting GWT stuff in guava-gwt over all other priorities \nThis moves some  gwt xml files  which likewise would live in a guava-testlib-gwt area \nIt makes a special case for Testing gwt xml irrelevant  so I ve removed it  though we ll want an analogous special case in a guava-testlib-gwt future \n\nThis CL also adds missing JUnit inherits \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32638474\n  
4220,     A few small cleanups to BloomFilter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32612086\n  
4221,     The number of bits can reach Integer MAX_VALUE now  rather than Integer MAX_VALUE/64\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32540182\n  
4222,     Copy factory methods from Ranges to Range \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32544574\n  
4223,     The number of bits can reach Integer MAX_VALUE now  rather than Integer MAX_VALUE/64\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32540182\n  
4224,     Expire entries at insertion+duration instead of insertion+duration+1 to be consistent with the GWT emulation and  we hope  with common sense \nUpdate tests that rely on the current expiration behavior (as identified by global TAP) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32533539\n  
4225,     Add Maps toMap(Iterator  Function) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32512136\n  
4226,     Update Guava version to 14 0-SNAPSHOT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32500914\n  
4227,     Move ComputingMapAdapter to MapMaker \nThis seems to work around the JDK bug that causes    google com/p/guava-libraries/issues/detail?id=950\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32499454\n  
4228,     6799892: Add FinalizableReferenceQueue close method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32452934\n  
4229,     Open source FluentIterable addTo \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32438496\n  
4230,     Total rewrite of emulated CacheBuilder to emulated LocalCache  Features added include recordStats  expireAfterAccess  ticker  and removalListener \n\nThis version is updated to include support for values()  keySet()  and entries()  as well as iterators generated by these  These methods are used occasionally and the removal had led to errors in the first submission \n\nThis version has been tested on failing tests reported last submission and found to have no impact on these tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32427476\n  
4231,     More tests for ObjectArrays \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32321913\n  
4232,     Rename expectedFalsePositiveProbability to expectedFpp \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32320997\n  
4233,     Guava issue 1049: minor optimizations for CharMatcher\n\nFrom Louis:    appspot com/6353073/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32320841\n  
4234,     Automated rollback of dfc51048f549 \n\n*** Reason for rollback ***\n\nNewly unsupported operations causing failures \n\n*** Original change description ***\n\nChanges implementation of emulated CacheBuilder and instead emulated LocalCache  Features added include recordStats  expireAfterAccess  ticker  and removalListener  RefreshAfterWrite was implemented but removed due to reliance on reload() and returned futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32320187\n  
4235,     Changes implementation of emulated CacheBuilder and instead emulated LocalCache  Features added include recordStats  expireAfterAccess  ticker  and removalListener  RefreshAfterWrite was implemented but removed due to reliance on reload() and returned futures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32318049\n  
4236,     Document some possibly surprising semantics of Files copy(File  File) \n\n(Guava issues 515 and 1063 )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32279885\n  
4237,     Make Maps asMap and toMap public and @Beta \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32271388\n  
4238,     Add Maps asMap(NavigableMap  Function) to complete the set of asMap views \n\nAlso fixed views of SortedAsMapView to not allow add or addAll on their keySets and added tests for Sorted and Navigable asMap views to MapsCollectionTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32271281\n  
4239,     Minor formatting changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32270753\n  
4240,     Use normal  compile-time @GwtIncompatible stripping instead of unusual  runtime UOE throwing for getMethod calls \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32236275\n  
4241,     Make the remaining protected method in EventBus package-private \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32234236\n  
4242,     Expose  Int Long Math mean in Guava 14 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32230548\n  
4243,     Fix Findbugs warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32228105\n  
4244,     Remove Iterators skip \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32199129\n  
4245,     Remove AbstractLinkedIterator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32198902\n  
4246,     Remove NullPointerTester#ignore(Member) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32198797\n  
4247,     Add some toString tests for CharMatcher anyOf() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32185623\n  
4248,     Remove c g c base Equivalences \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32160887\n  
4249,     A few small cleanups to Reflection \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32159687\n  
4250,     Assorted cleanup:\n- Remove out-of-date CharMatcher comment \n- Merge ContiguousSetNonGwtTest into ContiguousSetTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32157893\n  
4251,     Improve ImmutableMap of(K  V) error message re: Guava issue 988 \n\nFrom Louis:    appspot com/6427050/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32156881\n  
4252,     Make comments javadocs so MOE correctly strips them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32142622\n  
4253,     Making exception more descriptive when someone tries to proxy a class\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32142551\n  
4254,     Deprecate mutator methods on immutable/unmodifiable classes in common collect   It can t possibly be correct to invoke a method that mutates a collection on an immutable object and this will help catch those errors at compile time   It also has the benefit that IDEs set up to filter deprecated methods from the auto-complete suggestions will filter out the unsupported methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32083827\n  
4255,     Add serialization tests to the Multimap test suites \nFrom Louis:    appspot com/6421047/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32082297\n  
4256,     Fix a comment on AbstractScheduledService Scheduler that implied that you could create subclasses of Scheduler (that are not subclasses of CustomScheduler)   This is impossible since Scheduler has a private constructor \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32059988\n  
4257,     Remove unused methods in c/g/c/ hash reflect /   \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32056245\n  
4258,     HashIterator fix for LocalCache\nRemove a few unused chunks of code from common cache\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32015573\n  
4259,     Fix comment to refer to InternetDomainName isValid instead of deprecated isValidLenient \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32011124\n  
4260,     Remove unused methods from c/g/common/collect\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=32009861\n  
4261,     Remove public from TypeResolver in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31969908\n  
4262,     Updating putString(String) spec and default implementation  to avoid\nforcing implementations to inefficiently deal with unpaired surrogate characters \nThis is an incompatible change for inputs with such characters \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31932872\n  
4263,     Remove unused char[  instance in CharMatcher inRange \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31924666\n  
4264,     Remove unused code \nFrom Louis:    appspot com/6343051/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31920587\n  
4265,     Made TypeResolver @Beta and added clearer document \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31858151\n  
4266,     Rephrase to stop suggesting that there are only two overloads of transform() \nAlso  publicly release a comment in the Future addListener Javadoc about addCallback  which was publicly released in Guava 10 (and already mentioned publicly elsewhere in the ListenableFuture doc) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31833262\n  
4267,     Add tests that the custom hash table implementations expand correctly \nFrom Louis:    appspot com/6351075/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31822084\n  
4268,     Decrease tasks again for get() basher  which currently takes 4x as long as any other cache test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31820210\n  
4269,     Update the handling of gwt xml files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31818898\n  
4270,     Add IntMath mean and LongMath mean  It s an efficient implementation resilient to overflow which is useful when computing midpoints \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31799895\n  
4271,     Rollback gwt xml change \n\n*** Reason for rollback ***\n\nBreaks compilation under --check_constraints=gwt  perhaps other settings?\n\n*** Original change description ***\n\nMake java_and_gwt_library support extra_module_contents  even though java_library doesn t :)\nThis lets us remove our manually maintained (and often wrong)  gwt xml files \nOccasionally we still need an extra_module_contents file  and we should someday figure out why \n(Note: Because java_and_gwt_library has access to information that plain java_library does not  it can actually be a bit smarter about what it puts in the  gwt xml automatically )\nThe net effect on the GWT modules themselves is mostl\n\n    description truncated by g4 rollback    \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31797949\n  
4272,     Fix a bug with CharStreams copy not clearing its buffer after reading \n\nGuava issue 1061:    google com/p/guava-libraries/issues/detail?id=1061\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31793143\n  
4273,     Update the handling of gwt xml files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31782922\n  
4274,     Special-case Immutable List Set  copyOf(Iterator) for 0 or 1 elements  as per Guava issue 691 \n\nFrom Louis:    appspot com/6347069/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31745579\n  
4275,     Force ArbitraryOrdering to handle nulls consistently \n\nFrom Louis:    appspot com/6355072/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31745563\n  
4276,     Add SortedSet overload for Maps asMap(SortedSet  Function) \n\nFrom Louis:    appspot com/6361045/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31720830\n  
4277,     Improve toString() for Supplier/Function implementations in Suppliers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31718621\n  
4278,     Make Suppliers compose(Function  Supplier) toString() return something useful \n\nFrom Louis:    appspot com/6350082/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31715841\n  
4279,     Ensure Cache get expands hash table appropriately\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31657582\n  
4280,     Fix tests for IntMath isPowerOfTwo and LongMath isPowerOfTwo  The existing tests copied the implementation\ncode and therefore were not really testing the code  The tests now use BigInteger \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31628328\n  
4281,     Fixed dropping of CharMatcher description when precomputing \n\nSee    google com/forum/?fromgroups#!search/guava-discuss/guava-discuss/R4vNbxB1xAs/lprChIFnaDkJ\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31609773\n  
4282,     Remove MapMaker: strongKeys()  strongValues()  and valueEquivalence() from MapMaker and friends \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31583111\n  
4283,     Strip out comments pertaining to maximumSize() and expireAfterWrite() (which are no longer public) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31579977\n  
4284,     Remove MapMaker#expiration (scheduled for deletion in July 2012) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31579076\n  
4285,     Remove Iterables#reverse\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31578998\n  
4286,     Remove the use of MoreAsserts from the AbstractServiceTest   Apparently it breaks the maven build \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31573774\n  
4287,     Add MediaType for Google  Sketchup \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31546185\n  
4288,     Introduce an immutable object to encapsulate the mutable state of AbstractService   This will allow us to perform state queries (isRunning  failureCause  state()) without grabbing a lock \n\nAlso  rewrap the file to 100 lines   It was already a little inconsistent and i own the blame on the whole file by this point anyway \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31521820\n  
4289,     Remove c g c base Stopwatch#toString(int) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31520651\n  
4290,     Change the AbstractService so that listeners are called without the lock held \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31519707\n  
4291,     Fix 2 bugs in the AbstractService implementation of listeners \n1  Ensure that the futures are updated before listeners are called consistently\n2  Fix a bug that would cause the running() callback to be invoked when the Service was transitioning from STARTING -> STOPPING directly \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31519336\n  
4292,     A few small cleanups to the murmur3 hash functions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31507627\n  
4293,     Open source a few more of the benchmarks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31487288\n  
4294,     Simplify implementation of ByteStreams hash(); add direct tests for it and getChecksum() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31456068\n  
4295,     Fix javadoc warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31406210\n  
4296,     Add @GI to failureCause overrides \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31400072\n  
4297,     Optimize GCD implementation to use fewer branches for ~25% speedup \nFrom Louis:    appspot com/6306091/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31398961\n  
4298,     Remove some email addresses from @author tags \nAdd a test to try to keep them from creeping in in the future \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31397324\n  
4299,     Optimize BigIntegerMath log10 by using the log2 to get an initial approximation of the log10 \nFrom Louis:    appspot com/6329066/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31397137\n  
4300,     Optimize  Int Long Math log10 with techniques from Hacker s Delight \nFrom Louis:    appspot com/6303085/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31396705\n  
4301,     Add Guava copyright \nOther no-op changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31368650\n  
4302,     Fix more Guava copyright headers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31366544\n  
4303,     Expose TypeResolverTest; various internal reshuffling \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31366061\n  
4304,     Add Guava copyright header to files that were missing it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31355899\n  
4305,     Add @since to Striped \nAdd @GI to Service#failureCause \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31355804\n  
4306,     Fix the formatting of the javadoc in j/c/g/c/util/concurrent/Service   Rewrap everything to 100 cols \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31314728\n  
4307,     Explicitly test that NullPointerTester uses null as a default for @Nullable parameters \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31300698\n  
4308,     Fix a deadlock in the new addListener implementation and also tweak the docs on stopAndWait which are out of sync with reality \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31289338\n  
4309,     Fix a few minor issues in cache javadocs  Some of this patched from fry \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31272683\n  
4310,     Update to latest Mozilla PSL \n\nThe net effect of this change is only to add these 16 public suffixes:\ncom tm com ug co tm edu tm\ngov sx gov tm mil tm net tm\nnet uz nom tm org tm org ug\norg uz sx tv sd wf\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31270763\n  
4311,     Delete Navigable* and Navigable*Test \nMove transformEntries and transformValues implementations into Maps \nMove synchronizedNavigable* implementations into Synchronized \nMove unmodifiableNavigable* tests into MapsTests/SetsTests \nAlso  open-source synchronizedNavigable Set Map  tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31268670\n  
4312,     Addded reference of TypeToInstanceMap to ClassToInstanceMap javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31252218\n  
4313,     Graduate Sets filter (SortedSet overload) from @Beta \nGraduate Maps filter* (SortedMap overloads) from @Beta \nGraduate Multimaps filter* from @Beta \nRelease CycleDetectingLockFactory as @Beta \nRelease UnsignedLong_CustomFieldSerializer to make UnsignedLong GWT-serializable in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31229567\n  
4314,     Add Eclipse  metadata/ folder to  gitignore \n  
4315,     Fix a minor issue in TypeToInstanceMap javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31226970\n  
4316,     VisibleForTesting Javadoc tweaks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31220800\n  
4317,     Make findbugs a provided dependency to avert dep conflicts when using findbugs 2 0 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31212790\n  
4318,     Begin migrating methods from Navigable Maps Sets  to  Maps Sets  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31212696\n  
4319,     Add @Beta to Optional#or(Supplier) and Optional#or(Optional) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31210314\n  
4320,     Release HostAndPortTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31209654\n  
4321,     Add a state transition listening mechanism to Service and implement in AbstractService \n\nThis is the first of several CLs that will change the Service interface  The basic plan is:\n1  add the listener interface (this cl)\n2  add some utility methods for doing timed waits via the listener apis \n3  migrate users of start() and stop() to void versions of those methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31186755\n  
4322,     Make HostAndPort serializable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31186303\n  
4323,     De-@Betaify the c g c collect Tables class\nLeave @Beta on newCustomTable()  transformValues()  and unmodifiableRowSortedTable() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31184139\n  
4324,     Remove @Beta from c g c base Equivalence (leave it on #equivalentTo) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31183871\n  
4325,     Fix comment reference to  toImmutableSortedList  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31183592\n  
4326,     Release RateLimiter as @Beta after cleaning up the todos a bit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31183139\n  
4327,     Allow expectedInsertions == 0 for BloomFilters \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31182172\n  
4328,     Remove @Beta from Multisets methods: containsOccurrences()  retainOccurrences()  and removeOccurrences()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31181488\n  
4329,     Release FluentIterable##toSortedImmutableList \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31181172\n  
4330,     Remove @Beta from Lists newCopyOnWriteArrayList() and Sets newCopyOnWriteArraySet()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31180601\n  
4331,     Remove @Beta from Strings common Pre Suf fix \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31180208\n  
4332,     Remove @Beta from Iterator-accepting methods in Joiner (except for the Map Entry related methods because the Iterable-accepting versions are still @Beta themselves) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31180145\n  
4333,     Implement Maps asMap(Set  Function) view \n\nFrom Louis  (   appspot com/6304066/)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31179035\n  
4334,     Migrate local MediaType constants to the class MediaType\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31178318\n  
4335,     Add caliper as a dependency \nForce build of  benchmark \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31177762\n  
4336,     Give a readable name to the thread used by a delayed shutdown\nhook \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31171327\n  
4337,     Open source lots of Caliper benchmarks!\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31147973\n  
4338,     Make protected methods of EventBus package-private  hiding the package-private EventHandler type \n\nLeaving the one protected method that didn t have EventHandler in the signature protected but @Deprecated for one release before making it package-private as well \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31147025\n  
4339,     Map *Benchmark java files into guava-tests/benchmark (they aren t buildable externally yet  but will be some day) \nOpen source a few Set-related benchmarks as a preliminary test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31143691\n  
4340,     Remove erroneous statement about inability to unregister from eventbus package Javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31129205\n  
4341,     Replace another instance of supertype-finding code in EventBus with TypeToken \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31082777\n  
4342,     Take Iterators advance out of @Beta \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31078297\n  
4343,     Changed callers of Iterators skip to call Iterators advance \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31044719\n  
4344,     Fix copyright notice  other Guava things on Striped \nFrom Louis:    appspot com/6306084/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31038311\n  
4345,     Added min  max  lexicographicalComparator tests\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31034294\n  
4346,     Comment out assertions that fail during mvn testing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31007060\n  
4347,     Mark Hashing#weightedConsistentHash tests as @GoogleInternal\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=31002683\n  
4348,     Removed debug printlines\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30996792\n  
4349,     Added min  max  lexicographical comparator tests to primitives UnsignedInts\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30995925\n  
4350,     Just a little reformatting \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30976931\n  
4351,     Attempt to improve Ordering allEqual() documentation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30975026\n  
4352,     Implement HashFunction#hashString shortcut for murmur3_32\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30974860\n  
4353,     Added Iterators advance and deprecated Iterators skip \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30972849\n  
4354,     Implement HashFunction#hashLong shortcut for murmur3_32\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30967967\n  
4355,     Add shortcut overload for Murmur3_32HashFunction#hashInt \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30962091\n  
4356,     Implement Hashing weightedConsistentHash() \nSee: [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30960525\n  
4357,     Bake the 1 0 load factor into LinkedHashMultimap  eliminating redundant fields for a savings of 8 bytes/distinct key \nFrom Louis:    appspot com/6308061/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30957194\n  
4358,     Make LinkedHashMultimap ValueSet extend ImprovedAbstractSet  tying up the last loose end from Guava issue 1013 \nFrom Louis:    appspot com/6304067/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30956797\n  
4359,     Add @Nullable annotations to computing map/cache implementations to satisfy Findbugs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30931750\n  
4360,     Make methods of Ordering no longer arranged as if by Ordering arbitrary() \n(Ok  it wasn t *that* bad ) Improve class docs a tiny bit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30928085\n  
4361,     Assorted cleanup:\n\n- Add @Nullable annotations to LinkedHashMultimap to satisfy Findbugs \n- Fix indentation in FunnelsTest \n- Remove latent references to Truth from MOE config \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30925508\n  
4362,     Optimize Ordering sortedCopy  eliminating one gratuitous copy \nFrom Louis:    appspot com/6306046/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30917998\n  
4363,     Implement UnsignedInts decode  corresponding with UnsignedLongs decode \nFrom Louis:    appspot com/6285043/\n(after which I extracted a common method on Kurt s suggestion)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30829538\n  
4364,     Reimplement LinkedHashMultimap with a custom  memory-efficient implementation \nFrom Louis:    appspot com/6250063/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30828656\n  
4365,     Changed TypeToken getTypes() rawTypes() to not rely on getGeneric*() methods  to work around the GenericSignatureFromatError \n\nAs a side bonus  classes() won t pay the cost of traversing the entire type hierarchy \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30823174\n  
4366,     More extensive testing for murmur hashing (in prep for shortcut speedups) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30798282\n  
4367,     Replace the use of AbstractSet with a new Sets ImprovedAbstractSet that\nis less susceptible to quadratic-time removeAll() calls  as in Guava\nissue 1013 \n\nFrom Louis:    appspot com/6271045/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30791718\n  
4368,     Marks the methods in Longs regarding byte array conversions as GWT compatible \nand adapts the LongsTest to run the tests in GWT mode \n\nThe only method not yet being GWT compatible was toByteArray  due to a bug in\nhow GWT handles narrowing conversions on byte casts  To fix this  copied\nthe implementation from util UnsignedLongs toByteArray  which is already used\nby GWT applications in [  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30778541\n  
4369,     I believe our snapshots should be called 13 0-SNAPSHOT now \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30703852\n  
4370,     Release Futures dereference() into Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30701037\n  
4371,     Graduate Striped out of labs\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30662139\n  
4372,     Optimize ImmutableList Set SortedSet builders   In particular  uniquify\nImmutableSet/SortedSet contents in-place  and make it so that if an\nImmutableSet/SortedSet is initialized to the correct size and has\nall unique elements  then no copying is done at all \n\nFrom Louis:    appspot com/6210074/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30647962\n  
4373,     Add  stateless and thread-safe  to the HashFunction javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30634203\n  
4374,     Cache the 32-bit and 128-bit hash functions used in Hashing#goodFastHash\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30634030\n  
4375,     Stop depending on an ImmutableSortedSet quirk in getTypes():\nImmutableSortedSet copyOf() currently assumes  for a Set input  that there is no need to deduplicate inputs \nThis is true if the given Comparator if consistent with equals (really  consistent with the original Set\ s definition of equality) \nHowever  if it\ s not  we can get a set with  duplicates  according to the Comparator \ngetTypes() depends on this behavior because it sorts by type-hierarchy depth  which is no reason to treat objects as  equal  \nAn upcoming CL will change ImmutableSortedSet copyOf() to remove this behavior \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30617067\n  
4376,     Fixed recursion in toArray for a couple ConcurentMultimap view collections \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30610815\n  
4377,     Widen presentInstances parameter type to Iterable<? extends Optional<? extends T>> \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30607561\n  
4378,     Added TypeToInstanceMap  ImmutableTypeToInstanceMap and MutableTypeToInstanceMap  mirroring ClassToInstanceMap  One major difference  is that put() and putAll() aren t supported  This is because there is no way to check isInstance() for generic types at runtime  In addition:\n1  I added ImmutableTypeToInstanceMap of() for empty map  I ve wanted similar thing for ClassToInstanceMap in the past \n2  Omitted MutableTypeToInstanceMap create()  With diamond operator coming along soon  do we still benefit from hiding default constructor and exposing static factory? For one thing  default constructor works better with reflection-based frameworks  such as ArbitraryInstances \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30580364\n  
4379,     Multimap is up next in my quest to write new classdocs for every important class we own \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30550395\n  
4380,     Adding wml media type \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30545427\n  
4381,     Fix up a few odd style nits in the UnsignedLongsTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30541742\n  
4382,     Add method to parse a prefixed unsigned long  e g  0xHEX  decimal  #HEX  and 0octal\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30539666\n  
4383,     Basically: sed  s        g \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30535233\n  
4384,     Make LongAdder and SimpleStatsCounter final \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30534531\n  
4385,     Simplify ImmutableSortedMap  reducing memory consumption and simplifying code \nFrom Louis:    appspot com/6218056/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30531807\n  
4386,     Remove a redundant RegularImmutableSortedSet workaround for comparators that are inconsistent with equals() \nThe workaround  added in CL 13880333  existed to support ImmutableSortedAsList \nHowever  it turned out that the workaround was needed for other types  too  and it was added to ImmutableSortedAsList itself (but not removed from RegularImmutableSortedSet) in CL 29041788 \nThis CL removes the redundant RegularImmutableSortedSet copy  moving its comments into the ImmutableSortedAsList copy \nAdditionally  it adds a test to demonstrate that the redundant copy  which is no longer used only by asList()  was causing problems \nOur existing tests caught a similar problem when I applied Louis s pending    appspot com/6218056/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30530740\n  
4387,     Use TypeToken in EventBus to avoid the duplicated superclass-finding logic \nFrom Louis:    appspot com/6195089/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30463039\n  
4388,     Eliminate redundant fields and code from SingletonImmutableMap \nFrom Louis:    appspot com/6211080/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30462649\n  
4389,     De-@Betaify Optional \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30422058\n  
4390,     A few small cleanups to the Murmur3 HashFunctions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30419610\n  
4391,     s ()  ()   g in  java javatests /com/google/common/   \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30381316\n  
4392,     Reduce default values per key for LinkedHashMultimap from 8 to 2 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30373088\n  
4393,     Internal shuffling in FluentIterable with some public spillover \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30372447\n  
4394,     Improved the code coverage of OrderingTest and removed an unused constructor \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30356104\n  
4395,     MOE insert public for the Equivalences class \n@Deprecate the 2 methods in Equivalences \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30352883\n  
4396,     Equivalences -> Equivalence \n\nAnd remove unused imports \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30351331\n  
4397,     Add an executor service that automatically retries tasks on failure   (A continuation of cl/24643522)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30345739\n  
4398,     Exposing an estimate of how the BF performs (without it  it s hard for the\nuser to know when the BF degenerates)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30342458\n  
4399,     Rewrite the ImmutableSortedMultiset implementation for improved efficiency and reduced memory consumption \nFrom Louis:    appspot com/6203097/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30340746\n  
4400,     De-betaify c g c annotations Beta\nDe-betaify c g c base Ascii\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30310396\n  
4401,     Fix name spelling in pom xml \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30309935\n  
4402,     Adds ContiguousSet create(Range  DiscreteDomain)   Follow-up CLs will remove Range asSet(DiscreteDomain) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30308145\n  
4403,     #intFunnel() and #longFunnel() funnels  and a PrimitiveSink --> OutputStream\nwrapper \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30307214\n  
4404,     Copy Equivalences methods to Equivalence \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30304467\n  
4405,     Move the invokeAny implementation to a static method that can be used by ListentingExecutorService that don t extend AbstractListeningExecutorService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30136643\n  
4406,     bug fix: don t decrement count and send spurious notification when refresh+get are concurrent with invalidate\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30128702\n  
4407,     Use callbacks on ListenableFutures to implement invokeAny on AbstractListeningExecutoreService rather than an ExecutorCompletionService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30127153\n  
4408,     GWT/Guava maintenance:\n- Rename com google common collect testing testing-gwt to com google common collect testing Testing  and actually use the existing Testing gwt xml file \n- Annotate classes with @GwtCompatible \n- Open-source GWT files \n- Stop stripping some GWT modules that have since become open-sourced \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30035555\n  
4409,     Exploit my years of hard-earned skill to devise a unit test for Equivalence wrap() get() \nAlmost got it right  but luckily Colin was here to help me \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30014813\n  
4410,     Add Iterable#toString implementation for Splitter#split \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30006050\n  
4411,     Assorted followups from past reviews/discussions:\n- Comment the places where we avoid Iterator allocations \n- Reintroduce assertion failure message \n- Reduce comments in Ordering allEqual \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30005462\n  
4412,     Use Joiner in Iterators#toString \nAdd tests for null element handling \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30005349\n  
4413,     Remove @GoogleInternal from FluentIterable#transformAndConcat (and add @since 13 0)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=30005337\n  
4414,     NullPointerTester hasn t thrown Exception in a while  so stop declaring that all its users throw it \n(My search for users was just plain grep  so I m sure I missed some  but this is a good start  and I m not sure it s worth the effort to seek out more  since that will take more than 30 seconds )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29954788\n  
4415,     Export files that were missing from Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29933483\n  
4416,     Many small improvements in common collect \nFrom Louis:    appspot com/6205045/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29932528\n  
4417,     Add one or two missing tests \nFrom Louis:    appspot com/6190059/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29931664\n  
4418,     Optimize BigIntegerMath binomial to use long arithmetic for as much as possible \nFrom Louis:    appspot com/6170043/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29924844\n  
4419,     Make Truth accessible to all of testlib  not just its tests  now that it s used by the collection-suite builders \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29915599\n  
4420,     Made the size of RegularImmutableMap more conservative \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29893278\n  
4421,     Fill in some missing javadoc  Only checked a small number of files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29888245\n  
4422,     Don t depend on the precise format of the failure message  only that it contains the expected string \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29887759\n  
4423,     Guava issue 988: improve error messages in ImmutableMap \nFrom Louis:    appspot com/6192047/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29885493\n  
4424,     Remove the unnecessary  bulk  operation Features from the TestSuiteBuilders \nFrom Louis:    appspot com/6196048/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29883364\n  
4425,     Optimize Ordering immutableSortedCopy \nFrom Louis:    appspot com/6202050/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29881848\n  
4426,     Remove obsolete JavaDoc referring to a sun net dependence I removed years ago \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29830593\n  
4427,     AUTHORS += Emily Soldal\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29801283\n  
4428,     Introduce MultimapTestSuiteBuilder  hoping to eventually migrate from AbstractMultimapTest \nFrom Louis:    appspot com/6123061/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29800810\n  
4429,     Switch BiMap tests all the way over to BiMapTestSuiteBuilder \nFrom Louis:    appspot com/6127058/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29799739\n  
4430,     Issue 972: Ordering allEqual() \nFrom Emily:    appspot com/6061053/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29799363\n  
4431,     Admit that the TestSuiteBuilder classes aren t *really* GWT-compatible  despite our hacks to make them appear so \nMove the derived generators into separate classes that *are* GWT-compatible \nAlso acknowledge that a bunch of suite() aren t GWT-compatible; GWT has been ignoring them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29798619\n  
4432,     Internal-only changes with some spillover \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29798181\n  
4433,     Internal-only changes with some spillover \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29790005\n  
4434,     Add an optimization for CompoundOrdering to avoid iterator allocation   On my benchmarks  for the common two-comparator case  the speedup is ~30% \nFrom Louis:    appspot com/6092047/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29762878\n  
4435,     Implement basic capacity control for immutable collection builders   We don t expose them yet  though  until the API is agreed upon \nThis will likely pay off with the in-progress immutable collection rewrites  which make much more use of each other s builders internally \nFrom Louis:    appspot com/6092044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29762640\n  
4436,     Serialization scaretext for Lists transform \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29756113\n  
4437,     Fix another non-fatal GWT compile error I introduced:\n[ERROR  Errors in  generated://FD81516CE6734FC4CAA6FA770EC8D576/com/google/common/collect/ForwardingImmutableSet_FieldSerializer java \n[ERROR  Line 12: The method deserialize(SerializationStreamReader  ForwardingImmutableSet) is undefined for the type ImmutableSet_CustomFieldSerializer\n[ERROR  Line 17: The method serialize(SerializationStreamWriter  ForwardingImmutableSet) is undefined for the type ImmutableSet_CustomFieldSerializer\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29727380\n  
4438,     Stop importing ImmutableFoo Builder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29722333\n  
4439,     Optimize DenseImmutableTable so that it doesn t rebuild rows and columns on the fly \nFrom Louis:    appspot com/6066046/\n\nPlus  actually run ImmutableTable tests under GWT (oops) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29719445\n  
4440,     More assorted cleanup:\n- reenable Multiset NullPointerTester tests\n- fix @Nullable annotations and add checkNotNull as necessary to get them to pass\n- remove email addresses from @author tags\n- update explanation of why we can t use Arrays copyOfRange\n- remove completed TODO from fuzzyEquals\n- fix out-of-date AbstractMapBasedMultiset comment\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29718341\n  
4441,     Skip gpg signing by default  which can be overridden on the command-line at release time with -Dgpg sign=false\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29698293\n  
4442,     Add HashFunction#hashFoo shortcuts for AbstractNonStreamingHashFunction \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29681822\n  
4443,     Document the purpose of the or() compilation tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29679858\n  
4444,     Fix broken comment \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29637759\n  
4445,     Export more guava-testlib tests to Guava  and move already-exported guava-testlib tests under guava-testlib \n\nAlso  remove obsolete opensource_files target  (We ve been using opensource_filegroup instead for a while now )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29631103\n  
4446,     Adding some performance remarks/warnings regarding recursive constructions\nof Iterators#concat and Sets#union\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29609623\n  
4447,     Cleanup grab bag:\n- Findbugs warnings\n- compiler warnings (cast  generic array  unchecked)\n- Javadoc warnings\n- unnecessary @Beta tags for package-private classes\n- unnecessary Platform newArray(Class  int) indirection\n- Guava copyrights\n- exception message typo\n- DerivedGenerator documentation\n- parameterized instanceof\n- import sorting in files already changed\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29598347\n  
4448,     Mark the two deprecated digesting methods as @GoogleInternal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29595646\n  
4449,     Guava issue 783: Fix handler finder w r t  subclasses and interfaces \nFrom Louis:    appspot com/5389041/\n\nAlso  open-source existing OutsideEventBusTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29570767\n  
4450,     CharMatcher space improvements (Small = same trick used for Whitespace  Medium = traditional hash table  large = what we do now) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29564154\n  
4451,     Use get() as the example method call on a synchronized Multimap \nThis is probably the most common case  so using a different method as an example was misleading \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29524021\n  
4452,     Remove reference of getGenericInterfaces() from javadoc  it s @GoogleInternal; Added mention of getTypes() and resolveType() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29506914\n  
4453,     Minor simplifications to the ArrayTable implementation \nFrom Louis:    appspot com/6057048/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29492178\n  
4454,     Delete the unnecessary DoubleUtils fastAbs  preferring the JVM-intrinsified Math abs \nFrom Louis:    appspot com/5992076/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29482263\n  
4455,     Rewrite TreeMultiset in terms of a traditional AVL tree  significantly increasing speed and reducing allocation \nFrom Louis:    appspot com/5700055/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29480735\n  
4456,     Update CharMatcher java INVISIBLE for Unicode 6 1 \nu0604 added  new char  gc = format\nu17b4  u17b5 removed  changed gc from Cf to Mn\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29327732\n  
4457,     Add public filter() example to FluentIterable docs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29275867\n  
4458,     Update poms to support properly generated OSGI metadata and signing with GPG\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29254221\n  
4459,     Work around GWT overflow problems in IntMathTest \nThis lets us stop skipping one case of testDivNonZero  and it lets us run testCheckedPow and thus have the confidence to make checkedPow @GwtCompatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29228136\n  
4460,     Fix a build issue in FRQ tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29211136\n  
4461,     Fix coverage runs by excluding FinalizableReferenceQueue ClassLoader-unloading tests from the normal suites \n(I ve confirmed that the test does still run despite the suppression  which applies only to suites )\nI ve also edited our project definition to exclude the new target from coverage runs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29201526\n  
4462,     Fix non-fatal GWT compilation errors:\n[ERROR  Errors in  generated://1DCFAC23BE2D8C9BC205377978109764/com/google/common/collect/ForwardingImmutableList_FieldSerializer java \n[ERROR  Line 12: The method deserialize(SerializationStreamReader  ForwardingImmutableList) is undefined for the type ImmutableList_CustomFieldSerializer\n[ERROR  Line 17: The method serialize(SerializationStreamWriter  ForwardingImmutableList) is undefined for the type ImmutableList_CustomFieldSerializer\nSee snapshot: /export/hda3/tmp/gwttJezSA/com google common collect ForwardingImmutableList_FieldSerializer7338663414191156255 java\n[ERROR  Errors in  generated://678D18D6E583C7FF092AA10F8A0D52A6/com/google/common/collect/ImmutableAsList_FieldSerializer java \n[ERROR  Line 12: The method deserialize(SerializationStreamReader  ImmutableAsList) is undefined for the type ImmutableList_CustomFieldSerializer\n[ERROR  Line 17: The method serialize(SerializationStreamWriter  ImmutableAsList) is undefined for the type ImmutableList_CustomFieldSerializer\nSee snapshot: /export/hda3/tmp/gwttJezSA/com google common collect ImmutableAsList_FieldSerializer2670401979529327298 java\nSneak in a little internal cleanup \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29200972\n  
4463,     Adding Converter<String  String> CaseFormat this converterTo(CaseFormat) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29167278\n  
4464,     Silence GWT serialization warnings:\n\ncom google common collect testing Helpers NullsBeforeTwo\nAnalyzing the fields of type  com google common collect testing Helpers NullsBefore  that qualify for serialization\n[WARN  Field  private final java lang String justAfterNull  will not be serialized because it is final\ncom google common collect testing Helpers NullsBeforeB\nAnalyzing the fields of type  com google common collect testing Helpers NullsBefore  that qualify for serialization\n[WARN  Field  private final java lang String justAfterNull  will not be serialized because it is final\n\nNullsBefore isn t GWT-serializable on its own (whatever that means for an abstract class)  so don t implement Serializable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29166411\n  
4465,     Open-source RangeSet/RangeMap classes so that Louis can rebase his    google com/r/wassermanlouis-guava/source/detail?r=fb106087948b2c0da9f5f6ed610d2df3ebb0240a&name=rangemap on top of them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29159225\n  
4466,     Use a binary release of Truth \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29129847\n  
4467,     Fix UnsignedLongs/UnsignedInts join method \nThe first argument wasn t treated as unsigned \n   google com/p/guava-libraries/issues/detail?id=966\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29126150\n  
4468,     Fix Splitter to handle patterns that have empty matches  like boundaries and look-behind/ahead patterns  without exploding \nFrom Louis:    appspot com/5901060/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29124245\n  
4469,     include CacheBuilderSpec example in external javadoc\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29120699\n  
4470,     Make HashCode implementations serializable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29100445\n  
4471,     Inline Itera*s#getLast into FluentIterable#last due to performance issue in GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29097188\n  
4472,     Eliminate test that uses systemNanos() but expects nano precision  which will break on platforms that only have micro precision   The test isn t really testing anything  so rather than fix it  I m removing it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29095913\n  
4473,     Deprecated NPT ignore(Member); added ignore(Method) overload as the new preferred method  No one ignores constructor in [   And the code to ignore constructor would read less meaningful \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29094202\n  
4474,     migrate from AtomicLong to LongAdder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29046868\n  
4475,     don\ t allow garbage collected values to be  copied \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29043800\n  
4476,     Improve ImmutableCollection asList()  making more asList views delegate contains() queries to the backing collection \nFrom Louis:    appspot com/5785044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29041788\n  
4477,     Fix Guava Javadoc warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29041212\n  
4478,     Fix Guava GWT module:\n- Issue 961: Release java nio charset Charset module to Guava \n- Remove bogus @GwtCompatible annotation from ForwardingDeque    and remove commented annotation from MinMaxPriorityQueue   (IIRC  we have a hack in one of our many levels of processing that just looks for the literal string  @GwtCompatible  )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29041128\n  
4479,     turn of CacheStats collection by default\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29039525\n  
4480,     Address comments left on CL 28921581 and CL 28923961 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29039515\n  
4481,     Address issue 952 on public guava: don t make spaces in parameters mandatory \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29032281\n  
4482,     Some javadoc tweaking to NullPointerTester  Please comment away  I have absolutely no confidence in my wordsmithing\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29029545\n  
4483,     add CacheBuilder recordStats\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29024502\n  
4484,     Some minor tweaks of TypeToken javadoc  While I was reading the release note  these occurred to me as calling for improvement \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=29016235\n  
4485,     Add DoubleMath fuzzyEquals and DoubleMath fuzzyCompare (Guava issue 725) \nFrom Louis:    appspot com/5924043/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28988303\n  
4486,     Make FindBugs marginally happier \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28982197\n  
4487,     Fix old pom wording that contains a reference to sub-packages that is a 2 year old woopsie \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28979425\n  
4488,     Optimize DoubleMath rounding implementations  avoiding branches and expensive floor/ceiling operations where possible \nFrom Louis:    appspot com/5976057/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28923961\n  
4489,     Guava issue 955: orderKeysBy shouldn t conflate keys that compare as equal \nFrom Louis:    appspot com/5969066/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28922962\n  
4490,     Add parseUnsignedByte  toString  and MAX_VALUE to UnsignedBytes \nFrom Louis:    appspot com/5907072/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28921581\n  
4491,     fix version numbers on Guava for non-release trunk to fit with maven version numbering standards \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28904802\n  
4492,     - fix @links to point to LoadingCache\n- internally move LoadingCache methods out of LocalManualCache\n- clarify use of weight in maximumWeight\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28862370\n  
4493,     Remove unnecessary dependency   This modules doesn t contain any tests - the tests for this module are in guava-tests  where this is more appropriately specified \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28859438\n  
4494,     Remove open-source project and code which provides a backported Java6-style ExecutorService for Java5 compatibility  with all the extra build steps involved in using it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28854629\n  
4495,     Queues was released in 11 0 but is missing from package-info \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28850827\n  
4496,     Fix unchecked warnings \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28850534\n  
4497,     @since tweaks:\n- ForwardingSet standardRemoveAll is an override of ForwardingCollection standardRemoveAll  so  as binary compatibility goes  it  inherits  @since 7 0 from its parent   Still  it\ s good document what we changed \n- ImmutableSortedMap changed to implement NavigableMap   That seems worth documenting \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28850312\n  
4498,     Add missing @since tags \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28834851\n  
4499,     Broken people using c g c base Strings in Android (1 5?)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28833864\n  
4500,     - throw InterruptedException from CacheLoader methods\n- propogate interruptions which occur during cache loading\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28832819\n  
4501,     Remove the severely outdated primitive generate scripts \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28829652\n  
4502,     Java6 cleanups for Guava 12 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28829456\n  
4503,     Document the weird problem with Optional<? extends T> along with its workaround \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28829356\n  
4504,     Fix ForwardingList documentation \n   google com/p/guava-libraries/issues/detail?id=873\nFrom Louis:    appspot com/5576046/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28826914\n  
4505,     Use SortedMapTestSuiteBuilder and NavigableMapTestSuiteBuilder more widely \nThis requires two improvements:\n- Generalize NullsBeforeB  intended for use with test elements  a    b    c   etc   to introduce NullsBeforeTwo  intended for use with test elements  one    two    three       \n- Do not require SortedMap keySet() to be a SortedSet (as the interface doesn\ t require this) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28826718\n  
4506,     Make SortedMapTestSuiteBuilder work under GWT \nThere is some restructuring and additions of trivial getters in the builders  but the only real code changes are in GwtTestSuiteGenerator (and the use in ImmutableSortedMapTestSuite) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28819226\n  
4507,     Add FluentIterable toImmutableSortedSet(Comparator)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28795758\n  
4508,     Bunch of small style cleanups/code cleanups to InetAddresses \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28795487\n  
4509,     Use murmur32 for hashing when coercing IPv6 addresses into IPv4 addresses \nAlthough murmur32 is slightly slower  it has fewer collisions (on a sample dataset) and is licensed under the MIT License \nThe hash was last changed on 2010/12/06: [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28793594\n  
4510,     Make ImmutableSortedMap implement NavigableMap \nFrom Louis:    appspot com/5606043/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28789345\n  
4511,     Make MapTestSuiteBuilder (also BiMapTestSuiteBuilder) work under GWT  and then use it there (as well as the non-GWT ImmutableSortedMapTest  where it should have been used already) \n\nThis primarily involves making more derived suites (e g   keySet()  values()  entrySet()) work under GWT \nThe GWT test suites are produced with code generation  so  in order to work under GWT  a derived suite must be recognized by GwtTestSuiteGenerator so that we know how to generate code for it \nI\ ve generalized the existing DerivedTestIteratorGenerator support to support any DerivedGenerator (each of which should have a one-arg constructor accepting its inner generator as an argument) \n\nNow that we run MapTestSuiteBuilder tests  we can remove the individual  manually generated  derived  test suites \n\nThe MapTestSuiteBuilder tests did encounter a couple problems:\n- I had to move NullsBeforeB from MultisetCollectionTest to Helpers so that it could be used more widely (for reasons that its Javadoc hopefully makes clear)   (This was a problem in the test  not the production code )\n- I had to support null queries in the GWT ImmutableSortedMap   (While I was there  I also prevented us from double-wrapping any submaps with unmodifiableSortedSet  since we know that the original map was already unmodifiable   This is a tiny optimization )  The null-query behavior was a  bug   albeit a very small one \n\nTODO(cpovirk): get the SortedMap tests running under GWT\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28784540\n  
4512,     Make KNOWN_ORDER significant for Map tests \n(There are no direct Map tests using KNOWN_ORDER  but we now pass KNOWN_ORDER on to our keySet  entrySet  and values sub-suites )\nStart using KNOWN_ORDER in various tests  including automatically in all SortedMap and SortedSet tests \nIntroduce TestStringSortedMapGenerator to save us from having to write  sort(insertionOrder  Helpers <String  String>entryComparator(Ordering natural() nullsFirst()));  as an order() implementation over and over \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28780249\n  
4513,     warn that Cache asMap get does _not_ automatically load values \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28753957\n  
4514,     Fix up erroneous git rebase?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28743194\n  
4515,     Split SortedMap tests out of NavigableMap tests in preparation for running the former under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28743199\n  
4516,     Changed NullPointerTester to test inherited methods \n\nWe only cover inherited methods from superclasses of the same package  This is\nbecause we don\ t want to step into classes the author doesn\ t own \n\nFor example  one may inherit from AbstractList  even though\nAbstractList#equals() doesn\ t use @Nullable \n\nWhile for classes of the same package  we consider moving a method from subclass\nto superclass a refactoring with no behavioral change  We don\ t want to silently\nlose coverage just because of a  extract to superclass  refactoring \n\nAlso  remove @GoogleInternal from getPackageName \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28743194\n  
4517,     Stop erroneously placing the  normal Java  version of TestPlatform under guava-gwt \n(The GWT version happens to be missing  and we\ ll need to fix that up before the tests can run externally )\nThis fixes the Guava build breakage introduced by my Collections2 CL \n  
4518,     Simplify ImmutableMultiset implementations \nFrom Louis:    appspot com/5780044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28742978\n  
4519,     retract partition and partitionWithPadding from Guava\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28741930\n  
4520,     Fix GWT behavior of  opportunistic  ImmutableList subclasses \nThe  standard  ImmutableLists were fine  but Lists charactersOf() and\nTransformedImmutableList were broken \nUnder Java  they inherited working implementations of their methods; under GWT \nthey inherited versions that forwarded to an empty  delegate  collection \nI\ ve overridden all forwarding methods in the GWT emulation in order to avoid\nthis \nI\ ve also added tests for charactersOf()  which reveal that GWT\nString/StringBuilder doesn\ t perform index checks  so I\ ve added manual checks \nTransformedImmutableList could probably stand to have some tests  too  but at\nleast it will be exercised indirectly through the asList() views implemented\natop it in Louis\ s coming CL  which is in fact what revealed these problems \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28741879\n  
4521,     specify missing version numbers\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28741770\n  
4522,     Fix up deprecation messaging in ByteStreams and Files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28728118\n  
4523,     Add private constructor (pointed out by Louis) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28717208\n  
4524,     A few final minor javadoc fixes to close external guava bugs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28717009\n  
4525,     Remove unnecessary method type parameter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28715773\n  
4526,     Adds a ForwardingDeque \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28714562\n  
4527,     Expose ImmutableSortedMultiset\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28711726\n  
4528,     Change Ascii MIN and MAX from ints to chars \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28708581\n  
4529,     Just reduce the default expectedValuesPerKey for HashMultimap from 8 to 2 \nand for ArrayListMultimap from 10 to 3 \n\nThere s much more we could and should do but these one-character changes seem\nlike pure win to me \n\n   google com/p/guava-libraries/issues/detail?id=447\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28708533\n  
4530,     ComparisonChain compare(boolean  boolean) is too confusing  especially when\nusers have to negate or reverse the parameters so as to get true to come first \nAdding compareTrueFirst and compareFalseFirst  and deprecating compare(boolean \nboolean) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28707952\n  
4531,     more carefully bound the segment count by maximum size/weight\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28665687\n  
4532,     Adds:\n-ByteStreams#hash(InputSupplier  HashFunction) -> HashCode\n-Files#hash(File  HashFunction) -> HashCode\nDeprecates:\n-ByteStreams#getDigest(InputSupplier  MessageDigest) -> byte[ \n-Files#getDigest(File  MessageDigest) -> byte[ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28662456\n  
4533,     Created compact  special-case Unicode whitespace CharMatcher \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28661107\n  
4534,     Fix typo in Javadoc of DiscreteDomain distance \nFix misleading UncheckedExecutionException Javadoc \nProvide dangerous listenInPoolThread that accepts an Executor \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28660317\n  
4535,     Fix FinalizableReferenceQueue class leak which prevented the\nClassLoader that loaded FinalizableReferenceQueue from being\ngarbage-collected subsequently  This is Guava issue\n   google com/p/guava-libraries/issues/detail?id=92\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28624233\n  
4536,     Make Collections2 orderedPermutations work under GWT again \nTo do so  make the minimal (I think) subset of common math required work under GWT \nThis requires suppressing a few cases in the divide() tests due to GWT s non-compliant int implementation (which  for example  occasionally believes that 2147483648 is a valid int) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28659665\n  
4537,     Add more null values to NullValues  and rename to ArbitraryInstances \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28658308\n  
4538,     Strip ImmutableSortedMultiset from package-info  and un-strip ForwardingNavigable* \nStrip FluentIterable getOnlyElement and append methods \nAnnotate TypeParameter as @Beta  and add @since \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28658296\n  
4539,     Fix javadoc of getRawType()  The old one wasn t accurate \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28652466\n  
4540,     Add Apache header to BloomFilterStrategies\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28651552\n  
4541,     - have Iterables return FluentIterables\n- allow FluentIterables to be subclassed\n- withdraw toImmutableSortedList from Guava (will be restored as toSortedImmutableList)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28621161\n  
4542,     Clarify the impact of having a synchronous refresh implementation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28619483\n  
4543,     Add createConstant and createConstantUtf8 static methods  This avoids a lot of the weird initiaization ordering issues and allows us to consistently use create everywhere instead of having to rely on the constructor in some places \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28617806\n  
4544,     Strip references to Google-internal Escape module from Guava \n  
4545,     Remove completely unnecessary type parameter from Iterators skip() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28598708\n  
4546,     Applied missing Apache license stuff to the files I forgot in previous round (oops)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28579696\n  
4547,     Widen the default-accepting methods of Itera*s \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28577590\n  
4548,     Re-word Beta comment to work around MOE bug that strips anything with the word [  in it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28517528\n  
4549,     Fix some typos in MediaType javadocs and error messages \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28512819\n  
4550,     Make ImmutableSortedSet implement NavigableSet \n(Under GWT  it still implements only SortedSet )\nFrom Louis:    appspot com/5590046/\n\nAlso:\nAdd suite-builder tests for ContiguousSet headSet/tailSet/subSet  and make the existing tests run the NavigableSet suite instead of just the Set suite (plus  do the same for some other ImmutableSortedSet tests) \nThese reveal that ContiguousSet has the legal but somewhat antisocial behavior of throwing IllegalArgumentException for inputs outside its  restricted range  and the probably illegal but unlikely to matter behavior of throwing IAE for subSet(x  false  x  false); change both \nAdd GWT suite-builder tests for ContiguousSet  and make the existing GWT ImmutableSortedSet tests run the SortedSet suite (plus  add some missing ALLOWS_NULL_QUERIES features to the existing ImmutableSet tests) \nTo allow those tests to cover the SortedSet methods  separate SortedSetTestSuiteBuilder out from NavigableSetTestSuiteBuilder  include splitting SetNavigationTester (and renaming MapNavigationTester  too  to keep the non-GWT glob simple) \nAlong the way  promote TestIntegerSetGenerator and its SampleElements out of ContiguousSetNonGwtTest  (I think that this may have been necessary for GWT compatibility  but I forget )\nFinally  some small cleanup:\n- Make less use of the scary ImmutableSortedSet(Comparator) constructor  and add warnings to its documentation  (A similar constructor has produced GWT bugs in ImmutableList subclasses  which I plan to look at next )\n- Make /* @Override */ methods use @Override (if possible)  or strip them with @GwtIncompatible (if not needed under GWT) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28502805\n  
4551,     Added default-value auto generation to NullPointerTester  for interfaces (and\ngot rid of the manual registration of Function  Predicate and BinaryPredicate) \n\nTo support generics correctly  I added common/reflect as dependency (which might\nbe\nthe biggest issue) \n\nAlong the way  I needed the dynamic proxy to handler equals/hashCode/toString \n\nSearched around for similar pattern and found about 30 clients that are rolling\ntheir own version:\n[ \nSo I added AbstractInvocationHandler that deals with this  Since NPT needs it  I\nwent ahead and just made it @Beta and apache and everything  If we don t think\nit s worth releasing  I can move it to the common/testing package and make it\npackage-private \n\nTested:\n[ [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28462273\n  
4552,     Un-GoogleInternal a variable used in a test \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28460268\n  
4553,     Deprecate a few more StringUtil trimming methods; several random javadoc cleanups \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28459342\n  
4554,     Some small fixes for Guava (methods called were @GI) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28457946\n  
4555,     Added support for resolving types from type variable and wildcard bounds  Useful when deriving inherited generic method signatures \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28457914\n  
4556,     Range: fairly major javadoc rewriting  Meticulous math term definitions that we no longer supply here can be found on the Guava Glossary page I just created  or on wikipedia for that matter \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28455770\n  
4557,     Make FluentIterabl#of @GoogleInternal\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28454584\n  
4558,     Dump some more blahblah into the @Beta annotation to try to clear up some persistent misconceptions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28454189\n  
4559,     Mark AtomicLongMap @GwtCompatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28453594\n  
4560,     Fix some minor javadoc typos in FluentIterable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28451125\n  
4561,     Make UnsignedLong final \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28448320\n  
4562,     Add superclass safety check in getSupertype()  added @Beta and @since to TypeToken and Reflection \nreflect needs no GWT compatibility  so there seems to be no BUILD dark magic to do?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28428778\n  
4563,     Revert: Widen the default-accepting methods of Itera*s\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28412150\n  
4564,     Widen the default-accepting methods of Itera*s\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28402326\n  
4565,     specify 1 6 as source/target for maven-compiler-plugin\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28377677\n  
4566,     don t unnesessarily constrain type of getIfPresent and getAllPresent parameters\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28374192\n  
4567,     leave from methods as Beta\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28374134\n  
4568,     Filling in coverage for last couple of uncovered branches\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28369624\n  
4569,     Use immutable sets in FluentIterableTest where possible\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28342780\n  
4570,     Remove assorted unused fields and variables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28333899\n  
4571,     fix cache links\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28332818\n  
4572,     - discuss segment behavior in concurrencyLevel\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28316785\n  
4573,     add warning to Ticker\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28316339\n  
4574,     Release FluentIterable into Guava 12 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28311090\n  
4575,     Nuke 85 lines of code in Collections2 by adopting common math  Which apparently fixed a size calculation bug that wasn t found due to a bad test that thought C(34 14) > MAX_VALUE   (?)\n\nAlso snuck a call to IntMath pow() into cartesianProduct \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28310475\n  
4576,     Adding a custom serialization option  when the space overhead of java serialization\nis significant compared to the BF size itself (i e  for small BFs)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28310115\n  
4577,     Change primitives #toArray to take Collection<? extends Number>\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28305601\n  
4578,     Add MediaType matching according to the model defined in the HTTP/1 1 Accept header \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28299737\n  
4579,     test for indexOf with two array arguments; isEmpty and other methods of BooleanArrayAsList\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28292228\n  
4580,     test for minimum when the minimum is not the first element in the array\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28246126\n  
4581,     delete methods whose Time Has Come\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28245241\n  
4582,     Formal testing of null server and client in TeredoInfo\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28244957\n  
4583,     enhance documentation\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28216272\n  
4584,     Simplify ImmutableMap  providing skeleton implementations of each view \nFrom Louis:    appspot com/5753064/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28206736\n  
4585,     Provide a default subList() implementation in ImmutableList \nFrom Louis:    appspot com/5759058/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28206673\n  
4586,     Make MediaType more lenient when parsing whitespace \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28182440\n  
4587,     Removing unused  untested non-public no-args constructor\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28138884\n  
4588,     Removing unnecessary cast\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28137851\n  
4589,     Complete several TODOs  and introduce TransformedIterator  which simplifies and reduces the overhead of package-internal iterator transformations \nFrom Louis:    appspot com/5730052/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28112037\n  
4590,     Provide failure atomicity in AbstractMultimap put \nFrom Louis:    appspot com/5728049/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28110338\n  
4591,     Simplify ImmutableList and its implementations \nFrom Louis:    appspot com/5731051/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28109145\n  
4592,     Eliminate Platform#unsafeArrayCopy\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28108805\n  
4593,     UnsignedLongs toString is suboptimal \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28107274\n  
4594,     Add c g c net MediaType#TIFF\nFix minor typo in c g c hash Hasher javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28107242\n  
4595,     Make minor simplifications to WellBehavedMap  and small optimizations to ForwardingSet \nFrom Louis:    appspot com/5719046/\n(Also  sneak in a change to make toRemove final )\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28047471\n  
4596,     - new @Beta classes for Guava 12 0\n- @Beta graduations for Guava 12 0\n- remove classes scheduled for removal in Guava 12 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28043743\n  
4597,     BloomFilter changes:\n- Add copy method \n- Add equals method \n- Modify put method to return boolean  indicating whether the underlying BloomFilter bits may have changed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27988892\n  
4598,     Roll back CL 23327883\ s very broken FeatureSpecificTestSuiteBuilder optimization \n(We don\ t clone the tests  so we run all methods against the same target class (the last to be initialized) )\nFix up newly failing tests (except for CompactIntegerListTest  for which I\ ve filed a bug) \nMost are problems with the tests themselves:\n- Test suppressions weren\ t being carried over to tests of the reserialized collections \n- Map values() collections were universally assumed to permit null queries \n- EnumSet was asserted to fail fast on concurrent modification \n- Many ConcurrentModificationException tests advanced the iterator past the end of size-zero or size-one collections \n- It\ s not possible to create an empty collection that contains null  Empty collections don\ t contain anything :)\n- (Bi)MapGenerator create is passed an Object[  containing Entry objects  not an Entry[  \n- (Bi)MapGenerator create is passed an Object[  containing Entry objects  not an Entry[  \n- StandardImplForwardingNavigableMap keySet() returned a SortedSet instead of a NavigableSet \n- StandardImplForwardingNavigableMap implemented lastEntry and descendingSet in terms of one another (using the standard* methods) \n- Tests of null SortedMultiset values fail when run against a nullsFirst() comparator because the nulls are outside the submultiset ranges tested \n- NavigableSets synchronizedNavigableSet(SafeTreeSet) does not allow null queries \n- Tables transformValues() cellSet() permits remove operations \n- collect/testing SmallTests needed their timeout increased \n- CompactIntegerListTest didn\ t specify all the mutation operations it supports \nA few are fixed by improvements to production code that arguably aren\ t strictly  bug fixes :\n- ConcurrentHashMultiset removeAll(collectionContainingNull) threw NPE \n- Maps unmodifiableNavigableMap() subSet/headSet/tailSet returned a SortedSet instead of a NavigableSet \n- NavigableMaps unmodifiableNavigableMap() keySet() returned a SortedSet instead of a NavigableSet \n- RegularContiguousSet contains/containsAll threw NPE (which the EmptyContiguousSet equivalents did not) \n- WellBehavedMap entrySet() remove(null) threw NPE instead of returning false  (The fix removes the need for Sets transform )\nA few more are real bugs:\n- TreeMultiset add(null) succeeded even for comparators that do not permit null \n- TreeMultiset remove(null) failed even for comparators that permit null \n- TreeMultiset iterators couldn\ t remove null elements \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=28001960\n  
4599,     Drop +co yu from changes file now that it s been removed from the Google domains list \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27972295\n  
4600,     Add parsing test that caught a regression in overflow detection \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27952556\n  
4601,     Update to latest Mozilla tld data file \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27943273\n  
4602,     Make startUp and shutdown non-abstract on AbstractScheduledService \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27904180\n  
4603,     - clarify CacheBuilder\ s similarity to MapMaker in the @deprecated messages\n- be more explicit about CacheBuilder Cache\ s  default  behavior\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27837348\n  
4604,     introduce Cache putAll\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27837322\n  
4605,     Guava issue 534: static builders for COWAS/COWAL \nFrom Louis:    appspot com/5273049/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27817252\n  
4606,     remove escapers from Guava (won t make it for Guava 12)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27816445\n  
4607,     Remove c g common escape usages in c g common net MediaType \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27815215\n  
4608,     For all of //java/com/google/common/    and //javatests/com/google/common/   \n-sort imports\n-remove unused imports\n\ng4 edit java/com/google/common/    javatests/com/google/common/   \n\ng4 change\n\n/home/build/[ /tools/java/remove_unused_imports py --fix -c 27791544\n\ng4 list -s 27791544  | sed  s%//depot/[ /%%  | xargs\n/home/build/[ /tools/java/sort_java_imports py\n\ng4 revert -c 27791544 -a\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27803889\n  
4609,     Extracted part of NullPointerTester and Stub into NullValues;\nAdded code to call default constructor if all else failed;\n\nSome potential incompatibility from previous version:\n1  Use ImmutableList of() in place of Collections emptyList()  ImmutableSet of() in place of Collections emptySet()  I don t anticipate issues here \n2  Use ImmutableSortedSet of() in place of new TreeSet()  mutable -> immutable \n3  Use a Comparator that always returns 0  instead of reverseOrder() which requires T extends Comparable \n\nIf this sounds reasonable  I ll send it through global TAP queue to make sure it doesn t break builds \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27791649\n  
4610,     Make MediaType fully GWT-compatible \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27783220\n  
4611,     Make Charsets GWT-compatible now that Charset is emulated \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27776341\n  
4612,     Don t specify weakValues in a flaky test where it s not required \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27770962\n  
4613,     Open-source missing  gwt xml and TestModuleEntryPoint files \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27751596\n  
4614,     add escapers back to Guava\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27739172\n  
4615,     Release MediaType into Guava as @Beta \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27598067\n  
4616,     Write tests to verify that HashFunction shortcuts are equivalent to the long forms   Then fix the legacy hashing implementations to unbreak them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27678321\n  
4617,     Add c g common base Optional#transform(Function)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27673881\n  
4618,     Expose c g common hash HashCodes and its static factory methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27671928\n  
4619,     Remove obsolete TODO from CharMatcher \nAnnotate the return type of Function#apply as @Nullable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27671585\n  
4620,     Make the shortcut methods in the new hashing API faster by using the legacy implementations \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27671418\n  
4621,     add Beta disclaimer\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27667758\n  
4622,     Add @since for Enums getField \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27632359\n  
4623,     Copy Reflection getField(Enum) to Enums getField() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27564524\n  
4624,     Randomizing goodFastHash\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27545564\n  
4625,     Rename com google common hash Sink to PrimitiveSink \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27538021\n  
4626,     Open-source GWT emulation of CacheLoader  which was unintentionally missing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27522709\n  
4627,     Restore accidentally removed Util gwt xml \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27483073\n  
4628,     eliminate trailing whitespace and tabs\n  
4629,     Refactor tests for BiMaps to use BiMapTestSuiteBuilder \nFix a bug with EnumBiMap in which null values throw the forward and backward maps out of sync \nFrom Louis:    appspot com/5642050/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27388061\n  
4630,     Add tests for ConcatenatedHashFunction \nAdd NullPointerTester test for Hashing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27382584\n  
4631,     Add SERIALIZABLE feature to TestSuiteBuilders \nFrom Louis:    appspot com/5635044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27376846\n  
4632,     Release more Queues methods: newAD  newLBD\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27350067\n  
4633,     Add testConstructors()  testStaticMethods()  testInstanceMethods() that take a\nminimalVisibility parameter\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27341632\n  
4634,     Add/document constructors for Forwarding* and their Standard* nested classes \nFix visibility of ForwardingNavigableSet StandardDescendingSet constructor so that it s usable outside the package  e g  \n\npublic static final class MySet<E> extends ForwardingNavigableSet<E>  \n@Override protected NavigableSet<E> delegate()  \nreturn delegate;\n \n\n@Override public NavigableSet<E> descendingSet()  \nreturn new StandardDescendingSet(); // StandardDescendingSet() has protected access in com google common collect ForwardingNavigableSet StandardDescendingSet\n \n \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27336831\n  
4635,     open-source AtomicLong\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27336398\n  
4636,     Add c g common base Enums#getIfPresent(MyEnum class   FOO ) -> Optional\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27314756\n  
4637,     Switching to non-power-of-2 bloom filter sizes  and making serialization more\nfuture-proof \nUnfortunately  this changes the serialized form  since hashBitsPerFunction was\nhardwired\nto the BloomFilter  and that really assumed power-of-two tables \nAlso  this fixes a nasty exponential-slowdown bug that was in the previous version of BloomFilter (that code was added to support serialization  and deleted as part of the new strategy for serialization)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27307766\n  
4638,     Implemented Maps unmodifiableNavigableMap \nFrom Louis:    appspot com/5590044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27271664\n  
4639,     Link pages to the wiki \nFrom Louis:    appspot com/5553067/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27271233\n  
4640,     Improve ForwardingNavigableMap  adding standard* methods \nRelease in Guava \nFrom Louis:    appspot com/5585045/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27260448\n  
4641,     Add documented constructor \nMove private utility method to bottom of file \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27260445\n  
4642,     Changed default sizes of ImmutableSet to be more conservative \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27245924\n  
4643,     Add empty array and enum handling to NullPointerTester; I can also clean up the  throws Exception  though is it better to do it in a separate CL?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27238145\n  
4644,     Add missing @since+@Beta for nested class \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27233385\n  
4645,     Updates math utilities to use JDK 6 methods where possible  addressing several TODOs \nFrom Louis:    appspot com/5587044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27228554\n  
4646,     Implemented Sets unmodifiableNavigableSet \nFrom Louis:    appspot com/5591044/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27228500\n  
4647,     Add legible #toString implementations for CharMatcher \nFrom Louis:    appspot com/5570067/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27203019\n  
4648,     Improve ForwardingNavigableMap  adding standard* methods \nRelease in Guava \nFrom Louis:    appspot com/5591043/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27201643\n  
4649,     Rearranging of methods  plus Javadoc changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27173884\n  
4650,     add osgi metadata\n  
4651,     Update test sizes per feedback from [ \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27164800\n  
4652,     Test suite checking for fail-fast iterators \nFrom Louis:    appspot com/5556071/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27129949\n  
4653,     Created BiMapTestSuiteBuilder \nFrom Louis:    google com/r/wassermanlouis-guava/source/detail?r=7d23827f8dc31cda03829bcadd0d0ef419a00ed4&name=bimap-testsuitebuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27127892\n  
4654,     take core cache classes out of Beta\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27122549\n  
4655,     Make Optional GWT serializable \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27120368\n  
4656,     Remove JDK5 hack now that Guava is on JDK6 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27059690\n  
4657,     allow jdk6 in Guava\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27051331\n  
4658,     - Eliminate serialization warning on TreeMultiset by marking AbstractSortedMultiset comparator as @GwtTransient:    google com/p/guava-libraries/issues/detail?id=871\n- Eliminate reference to long-gone  Note on element equivalence  in Multiset docs \n- Fix ByteStreams copy inconsistency over whether the output is closed:    google com/p/guava-libraries/issues/detail?id=757\n- Link in Partition shouldn\ t contain the space after the word \n- Mention unsigned types in package-info \n- Standardize on  input  for name of input Future parameters in transformation methods \n- Remove deprecated Futures chain for Guava 12 \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27031992\n  
4659,     Strip workarounds for past Google bugs from public release \nIn fact  stripping the allAsList/successfulAsList code is basically a bug fix  as the existing workaround allows get() to block indefinitely after the Future is done \nPast discussion:    google com[ group/java-libraries-discuss/browse_thread/thread/33a137c1707fe40b\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=27022708\n  
4660,     Added new method omitNullValues() to ToStringHelper \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26991532\n  
4661,     AbstractLinkedIterator -> AbstractSequentialIterator \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26926853\n  
4662,     Eliminate unneeded Annotations dependency \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26894404\n  
4663,     Irrelevant no-op diff created by internal-only changes \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26829506\n  
4664,     Remove a few lines of unused code\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26803682\n  
4665,     Add c g common math DoubleUtils#ensureNonNegative\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26762334\n  
4666,     In forUriString()  check the IP version before giving getByAddress()\na chance to collapse mapped addresses from IPv6 to IPv4 \n\nAlso  add a bytesToInetAddress() helper function which lets us\nremove a bunch of UnknownHostException handlers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26697119\n  
4667,     Use  null  for null entries when joining \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26695018\n  
4668,     Provide better documentation for the state transitions that are legal/illegal for a Service to make   Also change the behavior of service start() such that it will now throw exceptions when trying to start a TERMINATED or FAILED service \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26691313\n  
4669,     Deleting (again) the weird Interners#newInterner(GenericMapMaker) method: has been mostly unused  and not entirely correct\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26688481\n  
4670,     Some small test changes that I found forgotten in my client \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26686444\n  
4671,     clarify verbage regarding the cleanup of entries with reclaimed keys/values (Issue 841)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26627817\n  
4672,     add softKeys scare text\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26614390\n  
4673,     fix broken javadoc links  per issues 853 and 855\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26594437\n  
4674,     remove from Guava methods which were scheduled for deletion in release 12 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26591946\n  
4675,     Add awaitFullGc()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26591095\n  
4676,     specify that asMap never auto-loads entries\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26581537\n  
4677,     reorganize hash tests\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26573308\n  
4678,     Typo\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26568675\n  
4679,     add new patterns\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26562202\n  
4680,     properly adjust size/weight on clear calls without a removal listener\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26558016\n  
4681,     add pm\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26523300\n  
4682,     new hash tests\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26509373\n  
4683,     Fix bug in Optional#presentInstances \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26472796\n  
4684,     Using a MessageDigest per Hasher  not per MessageDigestHashFunction (making the latter thread-safe)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26416662\n  
4685,     @GoogleInternal to CycleDetectingLockFactoryTest\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26393155\n  
4686,     Mentioning the number of hash bits to algorithms where it is not quite clear from their name \n(I also add them for sha-256 and sha-512  though these are more obvious)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26389968\n  
4687,     Remove MOE stripping of public modifier from c g c base Joiner\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26365643\n  
4688,     Add leak-detection example \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26365358\n  
4689,     Use GcFinalization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26339509\n  
4690,     Make the Joiner Iterator/Iterable accepting overloads package-private (MOE public) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26321753\n  
4691,     Make the Maps/Multimaps Iterator/Iterable accepting overloads package-private (MOE public) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26321384\n  
4692,     Use GcFinalization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26310755\n  
4693,     CycleDetectingLockFactory creates ReentrantLocks and ReentrantReadWriteLocks\nthat detect potential deadlock by checking for cycles in lock acquisition\norder \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26303617\n  
4694,     This fixes to publicly filed bugs against the AbstractScheduledService:\n\n   google com/p/guava-libraries/issues/detail?id=826&sort=-id&colspec=ID%20Type%20Status%20Milestone%20Summary&num=200\n   google com/p/guava-libraries/issues/detail?num=200&colspec=ID%20Type%20Status%20Milestone%20Summary&sort=-id&id=825\n\nIt fixes some typos in the example class and adds some more documentation specifying the concurrency guarantees that the service provides \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26297114\n  
4695,     - allow a small amount of leniency in expiration timestamp ordering during concurrent reads\n- use ticker to make strong assumption about expiration\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26292370\n  
4696,     - remove transform(Future  Function) for 11 0 as promised\n- fix @since formatting\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26291224\n  
4697,     Add Iterator support to c g common base Joiner\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26290845\n  
4698,     Fixing bug in NullPointerTester  where it fails spuriously for methods with no default value for @Nullable parameters \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26289693\n  
4699,     - remove methods scheduled for deletion in 11 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26259157\n  
4700,     Fix two aspects of the AbstractScheduledService CustomScheduler implementation\n1  Give the abstract callback method a more intuitive and convenient signature which will make it easier to ensure that weird things don t happen \n2  Handle exceptions thrown from the scheduling callback   Previously if this method threw an exception the service would silently stop running   Typically without any logging or notification of any kind \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26228216\n  
4701,     Fix SingletonImmutableSet s isHashCodeFast()  and slightly reduce its memory footprint \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26227772\n  
4702,     Open source c g common hash into Guava 11 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26225631\n  
4703,     fix spacing\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26220833\n  
4704,     remove escapers from Guava for now\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26201712\n  
4705,     Fix UnsignedInteger documentation \nFrom Louis:    appspot com/5488051/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26200863\n  
4706,     Avoid generating garbage while evaluating and() and or() predicates \nExternal guava issue:    google com/p/guava-libraries/issues/detail?id=820\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26198729\n  
4707,     remove tests of absent code\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26198410\n  
4708,     Updating Javadoc and removing commented-out lines\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26197988\n  
4709,     - Cache get(K  Callable<V>) => get(K  Callable<? extends V>)\n- more clearly document how Cache methods moved to CacheLoader should be dealt with\n- explain what expireAfterAccess does and doesn t count as an access\n- recall RangeSet from Guava\n- tweak Queues javadoc\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26193165\n  
4710,     deprecate MapMaker s caching methods in favor of CacheBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26186850\n  
4711,     rename CacheBuilder refreshInterval to refreshAfterWrite\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26186574\n  
4712,     exclude base internal from javadoc\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26186322\n  
4713,     Add package-info for math \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26186233\n  
4714,     Fixing the issue of XmlWriter not escaping \\t  \\n and \\r in the\nattribute value   This change adds XmlEscapers xmlAttributeExcapte() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26174331\n  
4715,     Use tryLock to avoid expensive calls to nanoTime when possible (only if not fair) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26172551\n  
4716,     Add inverse() method to Immutable  Set List Multimap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26169224\n  
4717,     Retract tryParse overload that accepts a radix from Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26163146\n  
4718,     Eliminate the reevaluateGuards method of Monitor and tighten the contract of Monitor Guard \n\nAs Dimitris Andreou argued   reevaluateGuards()     doesn\ t seem to offer any advantage     over     use of Condition  Basically you give up implicit signaling  the main selling point of this class  and revert to manual signaling  Why not leave that scenario to Condition  and make this class simpler to use for its own sweet spot? \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26121010\n  
4719,     Remove @GuardedBy annotation from all public methods of Monitor \n\nRationale: It\ s arguably incorrect for leave  which gives up the lock  It doesn\ t make sense for the other methods either because  lock  is meaningless to users of the class  Furthermore  every one of these methods checks whether the lock is held if necessary  so there\ s not actually any danger in calling them incorrectly (they fail fast) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26114296\n  
4720,     remove spurious new method\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26108853\n  
4721,     add more missing @since tags\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26105362\n  
4722,     add GwtSerializationDependencies\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26103631\n  
4723,     add missing @since tags  per the jdiff report\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26103222\n  
4724,     Make CharEscaper escapeSlow final (as UnicodeEscaper escapeSlow already is) \nNo one overrides it \n\nAlso  make Escaper asFunction final \nI could be convinced that it isn t worth the effort  but it s hard to imagine why anyone would want to override this \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26086749\n  
4725,     Add Ints tryParse  The implementation is based off that of Android s java lang Integer#parseInt \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26080239\n  
4726,     Restore LocalCache LocalManualCache  apply get getUnchecked  to fix Guava compilation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26079466\n  
4727,     Remove Futures chain internally  though it will go out in Guava r11 before being removed in r12 \nRoll back temporary AbstractFuturesChainTest mess from 25962636 (but restore FuturesChainTest as  FuturesTransformAsyncFunctionTest  \nAlso  fix a copy-and-paste error in the AsyncFunction Futures transform Javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26078097\n  
4728,     Add c g common collect Sets#newLinkedHashSetWithExpectedSize\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26074694\n  
4729,     add new Cache/LoadingCache methods to RemovalCause javadocs\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26048028\n  
4730,     emulate CacheBuilder in GWT  gwtifying all requistie dependencies\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26046933\n  
4731,     Convert more users from to-be-deprecated Futures chain to new AsyncFunction-based Future transform \nDeprecate Futures chain \n\n- xargs perlsed  Function<(\\s*)( *) (\\s+)ListenableFuture<(\\s*)([^?  *)>>(\\s+)( *)(\\s+)=(\\s+)new(\\s+)Function<(\\s*)( *) (\\s+)ListenableFuture<([^?  *)>>   AsyncFunction<$1$2 $3$4$5>$6$7$8=$9new$10AsyncFunction<$11$12 $13$14>  < files\n- xargs perlsed  Function<(\\s*)( *) (\\s+)ListenableFuture<(\\s*)([^?  *)>>   AsyncFunction<$1$2 $3$4$5>  < files\n- xargs perlsed  \\bFutures chain  Futures transform < files\n- importtool --add=com google common util concurrent AsyncFunction $(g4 whatsout -c 26028933     java)\n- many manual fixes\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=26043722\n  
4732,     Add Multimaps filter methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25993671\n  
4733,     Tiny clarification to Queues#drain\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25965634\n  
4734,     Introduce Futures transform overloads that accept an AsyncFunction in preparation for eliminating Futures chain \nAlso:\n- Fix Javadoc example code s rowKeyFuture confusion:    google com/p/guava-libraries/issues/detail?id=788\n- Add test that the result of the preexisting Future transform is memoized when the transformation succeeds \n  
4735,     Include all source files as resources in guava-gwt jar \nThe only one currently missing was GwtSerializationDependencies  but this causes serialization problems:\n   google com/p/guava-libraries/issues/detail?id=791\n  
4736,     If  ByteStreams CharStreams  copy fails to close both input and output  it should log one exception while throwing the other \n   google com/p/guava-libraries/issues/detail?id=667\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25920059\n  
4737,     Fixed a tiny Javadoc typo  You might be asking yourself: why is he\nwasting his time with this? I    don t know \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25918269\n  
4738,     Many Javadoc fixes  including fixes for public issues:\n-    google com/p/guava-libraries/issues/detail?id=778\n-    google com/p/guava-libraries/issues/detail?id=736\n-    google com/p/guava-libraries/issues/detail?id=713\n-    google com/p/guava-libraries/issues/detail?id=710\n-    google com/p/guava-libraries/issues/detail?id=709\n-    google com/p/guava-libraries/issues/detail?id=706\n-    google com/p/guava-libraries/issues/detail?id=566\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25915349\n  
4739,     trigger refresh on Cache getIfPresent\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25908678\n  
4740,     Add c g common base Optional#presentInstances\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25881600\n\nAdd Optional#presentInstances to Optional \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25892141\n  
4741,     Make threads used by listenInPoolThread daemon  since the mere act of creating a ListenableFuture isn t expected to keep a process alive \n   google com/p/guava-libraries/issues/detail?id=726\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25885317\n  
4742,     Copy c g c collect AbstractIterator to c g c base as a package-private class \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25880322\n  
4743,     Replace try/catch/propagate with try/finally idiom \n\nThis actually fixes a serious bug: A few of those Throwable propagate calls were potentially wrapping InterruptedExceptions \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25813299\n  
4744,     Reorder some of the HTTP Headers \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25806584\n  
4745,     Test that transform* calls on a  secretly  sorted map are passed off to the SortedMap overloads \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25679905\n  
4746,     Plug a bunch of unit testing holes in common net \nAlso  remove a redundant item from the HostSpecifier Javadoc \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25677661\n  
4747,     Make SerializableTester reserialize a no-op under GWT so that test authors can use it as part of larger test methods \nWith that done  eliminate the equivalent  awful hack in RangeTest \nFurther  with bug 5599623 fixed  run OrderingTest under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25672151\n  
4748,     Add explicit <K  V> to entryOf() call  The current code works in javac but fails compilation in Eclipse compiler  It could be Eclipse s fault  But it seems easy enough to avoid the gray area  no?\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25651472\n  
4749,     Document advantages of  implicit signaling  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25642514\n  
4750,     Create PriorityQueue with internal capacity 2 instead of estimating the size from the number of inputs \nThis is simpler  and it might be faster than iterating twice \nIt might be slower if the input (a) is a Collection (so that size() is available) and (b) is larger than size 2 (so that growing the array is necessary)  but I m not too concerned \nOnly 2 of ~8 callers have a chance of passing in more than 2 inputs  anyway \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25641457\n  
4751,     Remove @Beta from QueuesTests (we never mark tests as @Beta) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25588377\n  
4752,     Making Queues#drain calls timeouts more accurate  by potentially adding a System nanoTime() call \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25588185\n  
4753,     Reference Futures get from CheckedFuture\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25577062\n  
4754,     Tests for several newDataInput readFoo methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25574201\n  
4755,     Mark the Queues methods that deal with ArrayDeque and LinkedBlockingDeque as internal only (they are JDK6 only) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25554993\n  
4756,     Clear interrupt at end of test so as not to interfere with subsequent tests \nI have vague plans to run all tests that call interrupt() in a fresh  non-main thread so that this sort of problem can t occur  but naturally I haven t gotten around to it \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25527509\n  
4757,     Use Uninterruptibles awaitUninterruptibly() instead of a hand-rolled version or an abort-on-interrupt version \nReuse DelayingIdentityLoader instead of reimplementing \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25523974\n  
4758,     Make c g c collect Queues @Beta \nRemove old TODO from Optional (unrelated change  but combined for TAP s sake) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25522897\n  
4759,     Test that finalize deletes the backing file  This required refactoring the model code to make finalize accessible from tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25515639\n  
4760,     Remove GuavaAsserts  replacing all calls with calls to Assert \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25472533\n  
4761,     Use iterator() next() in FilteredSortedSet#first\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25472467\n  
4762,     documentation enhancements to Cache  LoadingCache  and CacheBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25472243\n  
4763,     Document the relationship between Multiset and AtomicLongMap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25472109\n  
4764,     test when resetOnFinalize==true\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25434366\n  
4765,     Replace custom TestAssertionFailure with JUnit AssertionFailedError \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25397711\n  
4766,     Add Ordering min(Iterator) and Ordering max(Iterator) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25397156\n  
4767,     Add Builder#put(Entry) to ImmutableMultimap  ImmutableListMultimap  and ImmutableSetMultimap \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25396013\n  
4768,     Added filter(SortedSet) to allow for the creation of a filtered SortedSet\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25393046\n  
4769,     Add ImmutableMap Builder#put(Entry) overload \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25392198\n  
4770,     Throw an IAE if source and destination files are the same in Files#copy\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25364042\n  
4771,     Delete GuavaAsserts checkEqualsAndHashCodeMethods  replacing its one use with EqualsTester \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25351800\n  
4772,     Move SortedMaps filter* to Maps \nCopy tests for SortedMaps transform* to MapsTest \nTest the filter* methods under GWT  and make them available under GWT \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25351048\n  
4773,     Add tests for interruption while waiting \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25335633\n  
4774,     Improve initial approximation to sqrt(x) when x doubleValue() == Double POSITIVE_INFINITY (x >= 2^1024) \nLouis s:    google com/r/wassermanlouis-guava/source/detail?r=6ea966f033aead7adc3aba9f74c05b115b37f83b&name=big-sqrt\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25315505\n  
4775,     Change the implementation of AbstractFuture Sync#complete to guarantee that the future is complete before exiting  even if the current thread is not the thread actually completing the future \n\nThis guarantee helps with problems such as rpcFinished completing without the future actually being in the done() state \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25297462\n  
4776,     Javadoc improvements:\n- Emphasize that an empty SetMultimap and an empty ListMultimap are equal \n- ListenableFuture listeners can also run in the thread that cancels the future (hat tip to <   google com/114212977194801425439/posts/eFxZv6ibkM9>  which tipped me off to this by describing a related bug)    plus other minor improvements \n- ListeningExecutorService can throw RejectedExecutionException \n- Subclasses of AbstractListeningExecutorService must implement execute() and the shutdown/termination methods \nAlso  fix a comment in AbstractListeningExecutorServiceTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25284749\n  
4777,     be more accomodating of slow gc reference enqueuing\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25267574\n  
4778,     have CacheLoader reload return ListenableFuture\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25264832\n  
4779,     @Beta  @since  and hard-coded test seed\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25248940\n  
4780,     Removing MoreAsserts call\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25247052\n  
4781,     test coverage for ready and skip\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25242419\n  
4782,     Adding test for skipFully\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25242304\n  
4783,     Overrides of synchronized methods should be synchronized\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25242297\n  
4784,     Testing exceptional conditions on reset\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25242293\n  
4785,     JavaDoc grammar fix \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25242113\n  
4786,     more tightly accomodate garbage-collected keys and values\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25202456\n  
4787,     introduce AtomicLongMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25201110\n  
4788,     Replace MoreAsserts calls so that code compiles in Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25200636\n  
4789,     Test for resources toByteArray\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25194827\n  
4790,     Cleaning up JavaDoc copy-and-paste errors\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25192783\n  
4791,     Filling in test coverage on several methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25192532\n  
4792,     Adding tests for multiple ByteStreams methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25179180\n  
4793,     Expanding test coverage on several methods\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25178955\n  
4794,     Fix instances of divzero in [  \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25176483\n  
4795,     add CacheBuilder refreshInterval\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25139834\n  
4796,     Remove JAVA_WHITESPACE \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25139131\n  
4797,     deprecated/remove LoadingCache methods from Cache\n\nNEEDS_QA=false\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25134497\n  
4798,     Use RuntimeException to make things a little more convenient for\ntest authors   Forcing users to deal with InterruptedException\nand TimeoutException does not seem sufficiently useful in a\n_testing_ utility   Controversial \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25119032\n  
4799,     split LoadingCache out of Cache interface\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25099006\n  
4800,     Simplify BigIntegerMath factorial logic \nFrom Louis:    google com/r/wassermanlouis-guava/source/detail?r=4ff33ce527b87451c7ee92136d29664fb2c750e1&name=simplify-big\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25071062\n  
4801,     Fix deadlock in CompositeService when attempting to shutdown a FAILED service   Also  when shutting down services make sure all services are either TERMINATED or FAILED before notifyingStopped or notifyingFailed \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25070823\n  
4802,     Defer building of error message \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25067192\n  
4803,     Add CacheStats plus() similar to minus() \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=25033829\n  
4804,     Add AtomicDouble and friends \n\nAll derived from code originally written by Doug and friends\nfor AtomicLong and friends \n\nThis version has marginally less efficient  but more portable\nimplementation (doesn t directly use sun misc Unsafe) \n\nUpdates JSR166TestCase to get latest Doug/Martin infrastructure \n\nCurrently  AtomicDouble seems unlikely to get into upstream\njava util concurrent atomic  (so guava is likely to be its\npermanent public home) but I d like to continue to keep the\ndoor open forever \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24963153\n  
4805,     Update class docs of HostAndPort regarding immutability \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24957966\n  
4806,     add Cache getIfPresent  Cache put  and CacheBuilder build()\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24936790\n  
4807,     Bring documentation of Service  start stop () cancel() in line with reality \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24922495\n  
4808,     cleanup stats collection workarounds from MapMaker\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24891730\n  
4809,     move LocalCache into LocalCacheInternalMap  then rename LocalCacheInternalMap to LocalCache\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24848838\n  
4810,     rename CustomConcurrentHashMap to MapMakerInternalMap\nrename LocalCacheAsMap to LocalCacheInternalMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24846402\n  
4811,     Introduce Tables unmodifiable(RowSorted)Table \nFrom Louis:    appspot com/5266049/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24846124\n  
4812,     Optimize BigIntegerMath sqrt \nLouis s:    appspot com/5130047/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24844188\n  
4813,     Changing ImmutableList of(E[ ) and ImmutableSet of(E[ ) to be non-public  Callers should have been changed already to call  copyOf(E[ ) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24840447\n  
4814,     Add GWT tests for cache and labs concurrent \nThese are the last two packages that use java_and_gwt_library but not java_and_gwt_tests (excluding annotations and labs converter  both of whose GWT-compatible classes are all annotations) \nThe newly added tests discovered that Cache gwt xml contains dependencies that the package doesn t declare  and I ve removed them \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24827412\n  
4815,     add Cache getAll and CacheLoader loadAll\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24824285\n  
4816,     Betafy\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24809615\n  
4817,     Put the timeout duration into the exception detail message \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24781085\n  
4818,     BigIntegerMath factorial rewritten to be faster \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24767128\n  
4819,     Declare mergeSorted() return type as Iterable instead of UnmodifiableIterable  which is private \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24756036\n  
4820,     Move merge sorting code out of TreeBasedTable \nAdd mergeSorted() functionality to Iteratorables \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24751437\n  
4821,     rename CustomConcurrentHashMap to LocalCacheAsMap\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24749721\n  
4822,     fix a flaky test by using a FakeTicker\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24746343\n  
4823,     Remove reference to done() from documentation \nClumsily attempt to document the wart of a visible done() method that no one can call \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24720806\n  
4824,     Manually reject leading plus signs since JDK7 won t \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24713441\n  
4825,     Just noticed a few missing constructors while looking at javadocs \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24713377\n  
4826,     Trivial cleanup \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24676130\n  
4827,     add missing Apache header\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24673684\n  
4828,     Release GcFinalization \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24667108\n  
4829,     Run common testing tests under GWT\nGWT-enable a few other classes that are trivial to GWT-enable \nOpen-source the common testing tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24640713\n  
4830,     test cleanup\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24637603\n  
4831,     more gwt test standardization\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24636709\n  
4832,     Initial release of the escapers into Guava \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24623640\n  
4833,     standardize test modules\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24612598\n  
4834,     Add Optional asSet()\n\nSee    google com/p/guava-libraries/issues/detail?id=669\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24612296\n  
4835,     only read ticker once per operation\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24604473\n  
4836,     Reformatting-only CL: reflow ConcurrentHashMultiset to make it consistently\n100 characters \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24603115\n  
4837,     drop spurious  ?  in UnsignedInts toLong() javadoc\n\nalso  changed 64-bit in remainder() javadoc to 32-bit \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24598262\n  
4838,     Disallow null-returning suppliers in Optional#or\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24585583\n  
4839,     Remove Iterables#rotate \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24585036\n  
4840,     Add c g c net HttpHeaders to Guava (since 11 0) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24584184\n  
4841,     Mark Caches as final \nUpdate ImmutableTable Builder#putAll to use ImmutableTable Builder#put(Cell) \nUpdate docs on Files#simplifyPath\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24574078\n  
4842,     - allow expireAfterWrite + expireAfterAccess\n- throw AssertionError on computation code paths which musn t return null\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24573984\n  
4843,     Replace evictionQueue and expirationQueue with accessQueue and writeQueue \nAlso tightly couple accessTime with expirationQueue  and writeTime with\nwriteQueue \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24572156\n  
4844,     Add Itera bles tors #tryFind\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24555364\n  
4845,     remove lenient builder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24546639\n  
4846,     inline Callables throwing\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24545964\n  
4847,     Fix @param javadoc for UnsignedInts parseUnsignedInt() to reflect actual parameter name \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24544750\n  
4848,     doc cleanup\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24510024\n  
4849,     tweaks\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24509876\n  
4850,     add Cache get(K  Callable<V>)\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24506370\n  
4851,     only call waitForValue on loading references\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24502384\n  
4852,     Add overloaded primitive methods to ToStringHelper to avoid autoboxing\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24476666\n  
4853,     un-deprecate FinalizableReferenceQueue and friends\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24467300\n  
4854,     allow Cache asMap() get(Object) to count as an access wrt eviction\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24445289\n  
4855,     add Maginatics\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24433529\n  
4856,     hold strong references to new entries added during testing loops\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24399894\n  
4857,     call newBuilder\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24383532\n  
4858,     remove incomplete test\n  
4859,     release MultisetNavigationTester\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24382979\n  
4860,     Implement expireAfter*(0  *) in terms of maximumSize(0) \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24379350\n  
4861,     fix broken Guava tests\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24377974\n  
4862,     Fix TreeMultiset subMultiset() size() overflow condition \nFrom Louis:    appspot com/5153041/\n\nAlso  remove SortedTreeMultiset now that it s been moved to TreeMultiset  since it  too  would have needed to have been updated in this CL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24372922\n  
4863,     Add extensive tests for simplifyPath that aren\ t prefixed with /b/c \nThese tests caught the     ->    problem (though I initially ignored it    oops) and would have caught the if->while problem raised during review \nI suspect they would also have caught the existing bugs  but I haven\ t yet confirmed this \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24372607\n  
4864,     Integrate common math into common collect \nFrom Louis:    appspot com/5142053/\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24372231\n  
4865,     rename MapMakerTests to MapMakerTest for Guava s sake\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24372219\n  
4866,     Resolve     to     instead of the empty string \n\nThis changes the existing behavior of this method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24370864\n  
4867,     remove NullCache  now that we support immediate eviction\n\nTested:\nTAP\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24368352\n  
4868,     add Cache refresh\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24327805\n  
4869,     Replace old  simple  Strings repeat with more complex  but faster implementation based on binary exponentiation  Add benchmark to compare with old method \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24327769\n  
4870,     - rename ComputingCache to LocalCache\n- internally refer to computation as loading\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24327248\n  
4871,     Make IntMath @GwtCompatible so that it can be used in common collect overflow checks \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24308523\n  
4872,     I give up  I can no longer maintain the in-place algorithm  The bugs have defeated me \n\nThis cl introduces a much simpler  clearer algorithm that splits the path into pieces  and then builds a new path one piece at a time while resolving   and    along the way   Finally it does a little fixup to handle the initial slash  if any \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24306712\n  
4873,     externally remove methods scheduled for deletion in release 11 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24306560\n  
4874,     use isFinite instead of getExponent  from Louis\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24305670\n  
4875,     Implement a new Service base class for services that need to execute some functionality periodically \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24292212\n  
4876,     Replace unused generic type parameter with wildcard \nIf the Iterable is a Collection  use its isEmpty() method instead of\nconstructing an Iterator instance \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24282737\n  
4877,     A round of promotions/deletions/updates for Guava 11 0 \nTry to minimize use of MOE: magic somewhat \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24279246\n  
4878,     Rename CleanPathTest to FilesSimplifyPathTest \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24256474\n  
4879,     update since on simplifyPath to 11 0\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24251651\n  
4880,     Louis s changes to remove JDK6-isms from DoubleMath\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24246702\n  
4881,     introduce maximumWeight\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24224790\n  
4882,     Export input file for new CleanPathTest tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24216931\n  
4883,     One missing copyright  one missing @since  Should cherrypick  but not end of world if not \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24215692\n  
4884,     Doc-only changes to the InternetDomainName family clarifying validation options and fixing some references to deprecated methods \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24213290\n  
4885,     Add a method to Files that returns the file extension from a given file name \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24212884\n  
4886,     fix common math copyrights\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24212498\n  
4887,     Extensive tests for simplifyPath \nThis doesn t cover tests beginning with a character other than /  which is unfortunate  but realpath  which I used to generate the expected outputs  would resolve any    at the beginning of the input path  which isn t what we want here \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24168601\n  
4888,     forbid null return from cache lookups  and null parameter in invalidate\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24168264\n  
4889,     Add some URI resolution tests to the simplifyPath tests \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24166215\n  
4890,     Fix indentation \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24147455\n  
4891,     Release common math package \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24109421\n  
4892,     - have Cache size() return a long\n- remove Cache activeEntries\n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24109421\n  
4893,     - Fix handling of filenames that contain more than one period as reported in bug 716\n- Fix problem with simplifying paths that begin  /\n  
4894,     Clone of Louis s UnsignedLong(s) documentation CL \n-------------\nCreated by MOE:    google com/p/moe-java\nMOE_MIGRATED_REVID=24073780\n  
4895,     Eliminate most uses of non-Unicode whitespace in com google common tests \n  
4896,     Fix compile problems with Guava \n  
4897,     Link  Iterables Collections2 Lists  transform \tRefer to ForkJoinTask join from Futures getUnchecked Javadoc \tRemove an unnecessary cast \tAlso  fix a typo in the InterruptedRuntimeException deprecation instructions \n  
4898,     Fix ImmutableMultiset 1 6 0u24 compilation error \n  
4899,     allow all write operations on asMap view\n  
4900,     Drop in SortedTreeMultiset in place of TreeMultiset \n  
4901,     Update primitives package-info\n  
4902,     Make Bst framework null-compatible when the comparator is\n  
4903,     Update testers to recognize that null may be a restricted element\n  
4904,     make tests of unreleased classes GoogleInternal\n  
4905,     implement basic serializability for ComputingCache\n  
4906,     Allow nulls in GeneralRange \n  
4907,     Move SortedMaps difference to Maps\n  
4908,     Add UnsignedInts to primitives \n  
4909,     Begin adding  most common element  operations to Multisets \n  
4910,     update since to 10\n  
4911,     Provide serialization for UnsignedLong\n  
4912,     add ForwardingCache\n  
4913,     Reorganize methods between UnsignedLongs and UnsignedLong \tMake clear in the Javadoc the reasons to use each \n  
4914,     Migrate SortedMaps transform Values Entries  to Maps\n  
4915,     Implement Range isContiguousWith(Range)  which defines the conditions under which two ranges will be coalesced in RangeSet \n  
4916,     Handling paths of the form x/  /  /b (bug 705)\n  
4917,     @since tags\n  
4918,     Eliminate GWT serialization warnings for HashBasedTable/TreeBasedTable and TreeMultiset \tAs of <   appspot com/1544803>  GWT recognizes any annotation named @GwtTransient \n  
4919,     Inline BaseHolder interface into Holder and Optional  It was causing issues to\tScala users and didn t really serve any purpose anyway  This also makes it\teasier to start selectively eliminating some of the methods from Holder if we\twant to do that \n  
4920,     Improve Javadoc of ArrayTable methods cellSet() and values()\n  
4921,     Merging BlockingQueues into Queues\n  
4922,     Better SerializableTester Javadoc \tStrip reference to internal SerializationChecker from Guava \n  
4923,     Further Javadoc changes \n  
4924,     Improve @throws InterruptedException documentation for get() \n  
4925,     Add putUninterruptibly and takeUninterruptibly  and use them in the implementation of chain() \n  
4926,     Visibility changes \n  
4927,     Expose StandardXXX constructors  fixing external issue 701 \n  
4928,     Fully qualify @links so that they actually work \n  
4929,     use new sonatype parent\n  
4930,     doc cleanup\n  
4931,     javadoc cleanup\n  
4932,     deprecate throwCause\n  
4933,     remove build xml  and unneeded libs\n  
4934,     update scm urls\n  
4935,     split configuration out of execution so it will apply to other executions\n  
4936,     - add cache cleanup\n- scrub @since tags\n  
4937,     test updates\n  
4938,     remove unused xerces jar\n  
4939,     use  latest  for non-release version\n  
4940,     add support for jdiff generation\n  
4941,     copyright and warning cleanup\n  
4942,     add javadoc generation\n  
4943,     update artifact names\n  
4944,     specify plugin versions\n  
4945,     make all tests pass\n  
4946,     make more tests pass\n  
4947,     - cleanup formatting  and add missing dependencies\n- use animal-sniffer-maven-plugin to verify 1 5 compatibility\n  
4948,     manual sync\n  
4949,     delete IDEA files  and update  gitignore accordingly\n  
4950,     manual sync\n  
4951,     ignores \n  
4952,     fix build\n  
4953,     manual git sync\n  
4954,     remove unused imports \n\ngit-svn-id:    googlecode com/svn/trunk@645 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4955,     add missing dependencies  and fix a few typos\n\n\ngit-svn-id:    googlecode com/svn/trunk@644 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4956,     manual sync\n\n\ngit-svn-id:    googlecode com/svn/trunk@643 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4957,     manual sync\n\n\ngit-svn-id:    googlecode com/svn/trunk@642 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4958,     manual sync\n\n\ngit-svn-id:    googlecode com/svn/trunk@641 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4959,     massive manual sync\n\n\ngit-svn-id:    googlecode com/svn/trunk@640 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4960,     unused imports \n\ngit-svn-id:    googlecode com/svn/trunk@637 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4961,     \nA bunch of Guava javadoc tweaks and such  trying to cut down on warnings \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2952\n\n\ngit-svn-id:    googlecode com/svn/trunk@636 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4962,     \nGWT-ify UnsignedLongs \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2951\n\n\ngit-svn-id:    googlecode com/svn/trunk@635 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4963,     \nAdd the missing asymmetric ByteStreams copy()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2950\n\n\ngit-svn-id:    googlecode com/svn/trunk@634 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4964,     \nUpdate some ContiguousSet documentation to clarify some of the edge cases in the ContiguousSet -> Range conversion \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2949\n\n\ngit-svn-id:    googlecode com/svn/trunk@633 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4965,     \nReplace newly added usages of testing util EqualsTester/NullPointerTester/SerializableTester with usages of common testing  removing the former \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2948\n\n\ngit-svn-id:    googlecode com/svn/trunk@632 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4966,     \n- start throwing ExecutionError from Cache get\n- allow Throwable in UncheckedExecutionException again\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2947\n\n\ngit-svn-id:    googlecode com/svn/trunk@631 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4967,     \nDocument that simplifyPath may change the meaning of a path \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2924\n\n\ngit-svn-id:    googlecode com/svn/trunk@630 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4968,     \nRemove deprecated addNotEqualObject  replacing all newly introduced calls with one or more calls to addEqualityGroup \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2922\n\n\ngit-svn-id:    googlecode com/svn/trunk@628 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4969,     \nMake SortedLists public   It makes it much clearer what you re doing in a binary search \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2921\n\n\ngit-svn-id:    googlecode com/svn/trunk@627 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4970,     \nSwitch from testing util to common testing in preparation for the removal of the former \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2919\n\n\ngit-svn-id:    googlecode com/svn/trunk@626 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4971,     \nrollback\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2914\n\n\ngit-svn-id:    googlecode com/svn/trunk@625 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4972,     \nMake ListeningScheduledExecutorService schedule* return a ListenableFuture\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2913\n\n\ngit-svn-id:    googlecode com/svn/trunk@624 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4973,     \ndocument @throws\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2910\n\n\ngit-svn-id:    googlecode com/svn/trunk@623 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4974,     \nAnnotate UnsignedLongs with @Beta and a @since\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2909\n\n\ngit-svn-id:    googlecode com/svn/trunk@622 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4975,     \nImplement SortedMultisets unmodifiableSortedMultiset \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2908\n\n\ngit-svn-id:    googlecode com/svn/trunk@621 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4976,     \nRemove unnecessary catch and rethrow \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2907\n\n\ngit-svn-id:    googlecode com/svn/trunk@620 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4977,     \nSerializableTester reserializeAndAssert checks that original getClass() == copy getClass() \nFix EmptyContiguousSet serialization using cgdecker\ s patch (which also removes a redundant  implements Serializable  from RegularContiguousSet) \nAlso  stop using reserializeAndAssert for the few instances in which the reserialized version of an object is a different class \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2906\n\n\ngit-svn-id:    googlecode com/svn/trunk@619 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4978,     \nLink from Futures getUnchecked to Uninterruptibles getUninterruptibly \nAlso  <code> ->  @code  to fix a Javadoc problem (thanks  Louis) \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2905\n\n\ngit-svn-id:    googlecode com/svn/trunk@618 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4979,     \nMinor bugfix to CCHM where null returns weren t\ncounted as either computeSuccess or computeException - changed to count them as\ncomputeException \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2904\n\n\ngit-svn-id:    googlecode com/svn/trunk@617 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4980,     \nSuppress some deprecation warnings \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2903\n\n\ngit-svn-id:    googlecode com/svn/trunk@616 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4981,     \nStop forcing all users of the BST framework to total all nodes in each subtree; they may do that in their subclass  if they like \n\nFactor out BstAggregate into its own file  while we re at it \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2893\n\n\ngit-svn-id:    googlecode com/svn/trunk@615 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4982,     \nLong overdue updates to common/base/package-info\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2892\n\n\ngit-svn-id:    googlecode com/svn/trunk@614 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4983,     \nInstead of providing the views themselves in the  standardXXX  methods of ForwardingMap and ForwardingMultiset  provide overridable classes that represent the sensible implementations   This is much cleaner and doesn\ t require awkward  iterator supplier  workarounds \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2889\n\n\ngit-svn-id:    googlecode com/svn/trunk@613 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4984,     \nIntroduce UnsignedLongs \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2888\n\n\ngit-svn-id:    googlecode com/svn/trunk@612 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4985,     \nminor cleanup\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2887\n\n\ngit-svn-id:    googlecode com/svn/trunk@611 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4986,     \nadd common collect testing to Guava\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2879\n\n\ngit-svn-id:    googlecode com/svn/trunk@610 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4987,     \nAdd a new method: InetAddresses isMappedIPv4Address(String)\nFixes issue 536 \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2877\n\n\ngit-svn-id:    googlecode com/svn/trunk@609 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4988,     \ndistinguish between expired and collected within computation lock\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2876\n\n\ngit-svn-id:    googlecode com/svn/trunk@608 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4989,     \nBugfix: CustomConcurrentHashMap clear() could send a RemovalNotification with\na null value in the case of an in-progress computation  Added a test to check\nthis case \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2875\n\n\ngit-svn-id:    googlecode com/svn/trunk@607 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4990,     \nadd deprecation comment\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2874\n\n\ngit-svn-id:    googlecode com/svn/trunk@606 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4991,     \n- log removal listener exceptions\n- internally log removal notifications with non-null keys or values when using strong references\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2873\n\n\ngit-svn-id:    googlecode com/svn/trunk@605 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4992,     \nRework exception handling in Futures get and Futures getUnchecked \nAdd ExecutionError  and use it in Futures get  Futures getUnchecked  and Cache interface and implementations \nSpecialize UncheckedExecutionException constructors to accept only Exception  rather than Error  to encourage use of ExecutionError \nFix an unrelated typo in the MapMaker Javadoc \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2872\n\n\ngit-svn-id:    googlecode com/svn/trunk@604 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4993,     \nImplement ImmutableSortedMultiset \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2854\n\n\ngit-svn-id:    googlecode com/svn/trunk@601 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4994,     \nrelease tweaks\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2853\n\n\ngit-svn-id:    googlecode com/svn/trunk@600 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4995,     \nUse a custom serialized form for RegularContiguousSet  as in cgdecker s original patch  to avoid using ImmutableSortedSet s very  very large serialized form \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2850\n\n\ngit-svn-id:    googlecode com/svn/trunk@599 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4996,     \nAdd javadoc to DiscreteDomains methods  and rename private classes because when\nI navigate to  Longs  in my IDE this ain\ t the one I mean \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2849\n\n\ngit-svn-id:    googlecode com/svn/trunk@598 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4997,     \n- deprecate caching methods\n- remove unused cleanupExecutor\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2848\n\n\ngit-svn-id:    googlecode com/svn/trunk@597 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4998,     \nMake more classes serializable \nMerged from cgdecker s patch for Enums valueOfFunction  Equivalence Wrapper  Optional  Range (and Cut)  the DiscreteDomain implementations  and ContiguousSet (but skipped Holder)\n\nThe patch also:\n- adds equals/hashCode for Enums valueOfFunction\n- makes the DiscreteDomain constructor visible  internally and externally (possibly controversial? but the whole class is still @Beta  anyway)\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2847\n\n\ngit-svn-id:    googlecode com/svn/trunk@596 8138a162-5c33-11de-8abc-d1c337b90d21\n  
4999,     \n- remove CacheBuilder softKeys()\n- Deprecate MapMaker softKeys()\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2846\n\n\ngit-svn-id:    googlecode com/svn/trunk@595 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5000,     \nAdd Colin Decker to Guava authors \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2845\n\n\ngit-svn-id:    googlecode com/svn/trunk@594 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5001,     \nAdd c g common base Optional#or(Supplier) \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2844\n\n\ngit-svn-id:    googlecode com/svn/trunk@593 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5002,     \nAdd protected equivalentImpl() and hashImpl() to Equivalence \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2843\n\n\ngit-svn-id:    googlecode com/svn/trunk@592 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5003,     \nAdd a new version of Maps difference which takes an Equivalence to use instead\nof natural equality for comparing values in the maps \n\nAlso modified Equivalences helper class to be a bit more generic-y (and\nfriendlier to clients) \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2819\n\n\ngit-svn-id:    googlecode com/svn/trunk@591 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5004,     \nUnit test Maps newHashMapWithExpectedSize  Make the method return the minimal values that pass the test \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2818\n\n\ngit-svn-id:    googlecode com/svn/trunk@590 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5005,     \nMapJoiner support for Iterable<Entry> \nFrom cgdecker s patch  except a change in line wrapping and a reordering of methods \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2817\n\n\ngit-svn-id:    googlecode com/svn/trunk@589 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5006,     \nCall only the no-arg EqualsTester constructor  addEqualityGroup  and testEquals \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2816\n\n\ngit-svn-id:    googlecode com/svn/trunk@588 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5007,     \nRemove Holder \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2815\n\n\ngit-svn-id:    googlecode com/svn/trunk@587 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5008,     \nMerge recent changes to common testing and testing util versions of utility classes \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2814\n\n\ngit-svn-id:    googlecode com/svn/trunk@586 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5009,     \nTake @Beta off sameThreadExecutor and listeningDecorator \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2813\n\n\ngit-svn-id:    googlecode com/svn/trunk@585 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5010,     \n-Xlint:-serial\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2812\n\n\ngit-svn-id:    googlecode com/svn/trunk@584 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5011,     \nReplace EvictionListeners with RemovalListeners\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2811\n\n\ngit-svn-id:    googlecode com/svn/trunk@583 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5012,     \nAdd the ability to mutate the tip of a path to BstOperations \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2810\n\n\ngit-svn-id:    googlecode com/svn/trunk@582 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5013,     \nFix licenses and simplify a few things in BstRangeOps\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2809\n\n\ngit-svn-id:    googlecode com/svn/trunk@581 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5014,     \nfromLenient -> from in HostSpecifier \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2808\n\n\ngit-svn-id:    googlecode com/svn/trunk@580 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5015,     \nAdd note that exception mappers can throw (rather than return) a\nRuntimeException to allow use of a combination of checked and unchecked\nexceptions \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2807\n\n\ngit-svn-id:    googlecode com/svn/trunk@579 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5016,     \n- document immutablility of PatternFilenameFilter\n- PatternFilenameFilter implements FileFilter\n- FileBackedOutputStream javadoc fix\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2755\n\n\ngit-svn-id:    googlecode com/svn/trunk@577 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5017,     \nmove EquivalenceWrapper to Equivalence Wrapper\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2754\n\n\ngit-svn-id:    googlecode com/svn/trunk@576 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5018,     \nmake AbstractExecutionThreadService getServiceName protected\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2753\n\n\ngit-svn-id:    googlecode com/svn/trunk@575 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5019,     \ndocument what counts as an access with regard to expireAfterAccess\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2752\n\n\ngit-svn-id:    googlecode com/svn/trunk@574 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5020,     \nUnify BstInOrderPath nextInOrder()  prevInOrder() to one function with a BstSide argument\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2751\n\n\ngit-svn-id:    googlecode com/svn/trunk@573 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5021,     \nAdd BstAggregate to BstRangeOps  which allows us to total distinct nodes  element occurrences  or whatever within a specific range \n\nAlso  unify firstPath and lastPath into furthestPath \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2750\n\n\ngit-svn-id:    googlecode com/svn/trunk@572 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5022,     \nImplement BSTCountBasedBalancePolicies  which implements size-balancing of binary search trees \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2749\n\n\ngit-svn-id:    googlecode com/svn/trunk@571 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5023,     \nUse BstTesting defaultNullPointerTester() in all tests\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2748\n\n\ngit-svn-id:    googlecode com/svn/trunk@570 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5024,     \nImplement BSTUtilities  which provides helper methods for balance policies that insert and remove the minimum or maximum entry in a binary search tree \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2747\n\n\ngit-svn-id:    googlecode com/svn/trunk@569 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5025,     \nAdd BSTRangeOps and GeneralRange   GeneralRange is a package-private\nimplementation of an interval with any desired comparator  and BSTRangeOps\nprovides operations on ranges within binary search trees \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2746\n\n\ngit-svn-id:    googlecode com/svn/trunk@568 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5026,     \nHide flattenHierarchy() behind a MapMaker cache \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2745\n\n\ngit-svn-id:    googlecode com/svn/trunk@567 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5027,     \nRename BSTXXX to BstXXX   Also  move testing utilities (like the SimpleNode class) to new file BstTesting \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2744\n\n\ngit-svn-id:    googlecode com/svn/trunk@566 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5028,     \nSome additional release 10 tweaking \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2743\n\n\ngit-svn-id:    googlecode com/svn/trunk@565 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5029,     \nMinor FindBugs bugfix: not caching entrySet as intended \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2742\n\n\ngit-svn-id:    googlecode com/svn/trunk@564 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5030,     \nImplement BSTOperations  which does single-key query and modification operations \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2741\n\n\ngit-svn-id:    googlecode com/svn/trunk@563 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5031,     \nRemove dummy <K> type parameters \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2740\n\n\ngit-svn-id:    googlecode com/svn/trunk@562 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5032,     \n- Add a new InetAddresses toAddrString() method that produces a\ntext-formatted IP address according to RFC5952 \n- Change toUriString to use this method instead of getHostAddress()\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2739\n\n\ngit-svn-id:    googlecode com/svn/trunk@561 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5033,     \nImplement BSTMutationResult and BSTMutationRule \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2738\n\n\ngit-svn-id:    googlecode com/svn/trunk@560 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5034,     \nImplement BSTInOrderPath  which extends paths in binary search trees with\nforward and backward inorder traversal \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2737\n\n\ngit-svn-id:    googlecode com/svn/trunk@559 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5035,     \nAdd BSTPath and BSTPathFactory  which provide a generic way of manipulating paths in a binary search tree \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2736\n\n\ngit-svn-id:    googlecode com/svn/trunk@558 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5036,     \nAdd the interfaces/abstract classes BSTNodeFactory and BSTBalancePolicy  which\nare responsible for manipulating binary search tree nodes and keeping them\nbalanced  while keeping track of the data in each one \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2735\n\n\ngit-svn-id:    googlecode com/svn/trunk@557 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5037,     \nrollback\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2713\n\n\ngit-svn-id:    googlecode com/svn/trunk@556 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5038,     \nAdd the interfaces/abstract classes BSTNodeFactory and BSTBalancePolicy  which are responsible for manipulating binary search tree nodes and keeping them balanced  while keeping track of the data in each one \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2712\n\n\ngit-svn-id:    googlecode com/svn/trunk@555 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5039,     \nCreate the BSTNode class and the BSTSide enum   BSTNode is the root type of nodes in binary search trees \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2711\n\n\ngit-svn-id:    googlecode com/svn/trunk@554 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5040,     \ninline ComputingConcurrentHashMap into CustomConcurrentHashMap\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2710\n\n\ngit-svn-id:    googlecode com/svn/trunk@553 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5041,     \nSeparate i18n support from InternetDomainName \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2705\n\n\ngit-svn-id:    googlecode com/svn/trunk@552 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5042,     \nrelease Atomics\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2704\n\n\ngit-svn-id:    googlecode com/svn/trunk@551 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5043,     \nMake startAndWait/stopAndWait call Futures getUnchecked instead of performing custom exception handling \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2703\n\n\ngit-svn-id:    googlecode com/svn/trunk@550 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5044,     \nadd EventBus\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2702\n\n\ngit-svn-id:    googlecode com/svn/trunk@549 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5045,     \nWork around bug in GWT compiler (perhaps its use of the JDT?) that produces bogus  redundant cast  warnings \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2678\n\n\ngit-svn-id:    googlecode com/svn/trunk@546 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5046,     \nFix overspecified class-name tests\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2635\n\n\ngit-svn-id:    googlecode com/svn/trunk@545 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5047,     \nBeta changes for R10\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2633\n\n\ngit-svn-id:    googlecode com/svn/trunk@544 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5048,     \nMark makeUninterruptible/UninterruptibleFuture as @Deprecated\nHave the makeUninterruptible implementation delegate to getUninterruptibly\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2632\n\n\ngit-svn-id:    googlecode com/svn/trunk@543 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5049,     \nA few fixups to @Beta/@since/javadoc/etc  for Guava release 10 \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2631\n\n\ngit-svn-id:    googlecode com/svn/trunk@542 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5050,     \nDeprecate run()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2630\n\n\ngit-svn-id:    googlecode com/svn/trunk@541 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5051,     \nMake AbstractListeningExecutorService public \nAlso  make it a little more consistent with Guava style and inline the misleading newTaskFor\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2612\n\n\ngit-svn-id:    googlecode com/svn/trunk@540 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5052,     \n-Fixed bug in the Objects#simpleName helper method\n-Wrote tests in ToStringHelperTest (since simpleName is used by\ntoStringHelper)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2611\n\n\ngit-svn-id:    googlecode com/svn/trunk@539 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5053,     \nAdd factory methods to support the two remaining construction use cases for Ranges \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2610\n\n\ngit-svn-id:    googlecode com/svn/trunk@538 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5054,     \nMake AbstractFuture cancel/done and ListenableFutureTask constructors visible and @Deprecated \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2609\n\n\ngit-svn-id:    googlecode com/svn/trunk@537 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5055,     \nMake AbstractCheckedFuture extend ForwardingListenableFuture \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2608\n\n\ngit-svn-id:    googlecode com/svn/trunk@535 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5056,     \nCopy ExecutionList run to ExecutionList execute  deprecating the former and updating callers \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2607\n\n\ngit-svn-id:    googlecode com/svn/trunk@534 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5057,     \nAdd Uninterruptibles getUninterruptibly\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2581\n\n\ngit-svn-id:    googlecode com/svn/trunk@533 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5058,     \nA batch of minor tweaks to Range-related code/docs \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2580\n\n\ngit-svn-id:    googlecode com/svn/trunk@532 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5059,     Create maven metadata for tests and testlib  disable two tests missing testlib support  and add modules for them \n\ngit-svn-id:    googlecode com/svn/trunk@531 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5060,     Ignore files from within a git/svn bridge client \n\ngit-svn-id:    googlecode com/svn/trunk@530 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5061,     \nSync folders for tests and test-libraries to separate  projects  in the open-source \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2563\n\n\ngit-svn-id:    googlecode com/svn/trunk@528 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5062,     \nRemove no-arg AbstractFuture cancel  updating final caller \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2561\n\n\ngit-svn-id:    googlecode com/svn/trunk@527 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5063,     \nrollback\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2560\n\n\ngit-svn-id:    googlecode com/svn/trunk@526 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5064,     \nMake ListeningScheduledExecutorService schedule* return a ListenableFuture\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2559\n\n\ngit-svn-id:    googlecode com/svn/trunk@525 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5065,     \nPromotes ContiguousSet to part of the public Range api \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2549\n\n\ngit-svn-id:    googlecode com/svn/trunk@523 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5066,     \nRemove deprecated Optional get(T) method that has no callers \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2548\n\n\ngit-svn-id:    googlecode com/svn/trunk@522 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5067,     \nReplace various occurrences of the new constant Ints MAX_POWER_OF_TWO \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2535\n\n\ngit-svn-id:    googlecode com/svn/trunk@521 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5068,     \nImplement Multisets containsOccurrences\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2534\n\n\ngit-svn-id:    googlecode com/svn/trunk@520 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5069,     \nmake K  V the base type  and then extend to K1  V1\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2533\n\n\ngit-svn-id:    googlecode com/svn/trunk@519 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5070,     \nImplement Multisets removeOccurrences and retainOccurrences\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2511\n\n\ngit-svn-id:    googlecode com/svn/trunk@518 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5071,     \nAdd MAX_POWER_OF_TWO to Ints  Longs  and Shorts \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2510\n\n\ngit-svn-id:    googlecode com/svn/trunk@517 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5072,     \nAdd package info for common cache\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2509\n\n\ngit-svn-id:    googlecode com/svn/trunk@516 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5073,     \nSome findbugs annotating\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2492\n\n\ngit-svn-id:    googlecode com/svn/trunk@515 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5074,     \ntrim tld\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2491\n\n\ngit-svn-id:    googlecode com/svn/trunk@514 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5075,     \nBug fix in Interners#newWeakInterner \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2475\n\n\ngit-svn-id:    googlecode com/svn/trunk@513 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5076,     \nAdd Keys  Values  and Entries skeleton implementations to Multimaps \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2470\n\n\ngit-svn-id:    googlecode com/svn/trunk@512 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5077,     \nIntroduce common cache\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2437\n\n\ngit-svn-id:    googlecode com/svn/trunk@509 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5078,     \ninternal tweak\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2433\n\n\ngit-svn-id:    googlecode com/svn/trunk@508 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5079,     \nrollback\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2432\n\n\ngit-svn-id:    googlecode com/svn/trunk@507 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5080,     \ntemporary GwtCompatible\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2431\n\n\ngit-svn-id:    googlecode com/svn/trunk@506 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5081,     \nRemove collect Cache and all associated classes and references  soon to be added in common cache \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2430\n\n\ngit-svn-id:    googlecode com/svn/trunk@505 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5082,     \nAdd MapSplitter implementation to Splitter \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2429\n\n\ngit-svn-id:    googlecode com/svn/trunk@504 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5083,     \nProvide package-private tailMap(E  boolean)  etc  methods for ImmutableSortedSet and ImmutableSortedMap \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2428\n\n\ngit-svn-id:    googlecode com/svn/trunk@503 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5084,     \nUn-nest BoundType from Range  and attempt to make its javadoc  general \n(not tied to Range) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2417\n\n\ngit-svn-id:    googlecode com/svn/trunk@502 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5085,     \nMoved UncheckedExecutionException to util/concurrent \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2416\n\n\ngit-svn-id:    googlecode com/svn/trunk@501 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5086,     \nRollback \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2399\n\n\ngit-svn-id:    googlecode com/svn/trunk@499 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5087,     \nCreate EmptySortedMultiset  a trivial implementation of a subMultiset whose bounds are such that it could never have any elements \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2398\n\n\ngit-svn-id:    googlecode com/svn/trunk@498 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5088,     \nImplement AbstractSortedMultiset  a skeleton implementation of a SortedMultiset \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2397\n\n\ngit-svn-id:    googlecode com/svn/trunk@497 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5089,     \nMake use of the new Multisets ElementSet and EntrySet skeletons in common collect \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2396\n\n\ngit-svn-id:    googlecode com/svn/trunk@496 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5090,     \nTreeBasedTable row() returns a SortedMap\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2395\n\n\ngit-svn-id:    googlecode com/svn/trunk@495 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5091,     \nAdd Uninterruptibles joinUninterruptibly\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2393\n\n\ngit-svn-id:    googlecode com/svn/trunk@494 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5092,     \nAdd FutureListeners addCallback as an easier-to-use version of addListener\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2392\n\n\ngit-svn-id:    googlecode com/svn/trunk@493 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5093,     \nAssorted cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2391\n\n\ngit-svn-id:    googlecode com/svn/trunk@492 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5094,     \n@since Guava release 10\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2390\n\n\ngit-svn-id:    googlecode com/svn/trunk@491 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5095,     \nFix TestModuleEntryPoint \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2389\n\n\ngit-svn-id:    googlecode com/svn/trunk@490 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5096,     \nAdd SortedMultiset ElementSet and SortedMultiset DescendingMultiset skeleton implementations to SortedMultisets \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2364\n\n\ngit-svn-id:    googlecode com/svn/trunk@489 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5097,     \nDeprecate AbstractFuture cancel() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2363\n\n\ngit-svn-id:    googlecode com/svn/trunk@488 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5098,     \nReport problems with _changes to _names consistency during tld patterns file generation  Also  make it safe to specify a removal in _changes which isn t actually present in _names; this would cause a build error previously \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2360\n\n\ngit-svn-id:    googlecode com/svn/trunk@487 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5099,     \nChanges to SortedMultiset \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2359\n\n\ngit-svn-id:    googlecode com/svn/trunk@486 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5100,     \nRefactor ImmutableMultiset so that all of its implementation details are in RegularImmutableMultiset \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2358\n\n\ngit-svn-id:    googlecode com/svn/trunk@485 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5101,     \nStopwatch/Ticker @GwtCompatible\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2357\n\n\ngit-svn-id:    googlecode com/svn/trunk@484 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5102,     \nCall UncheckedExecutionException constructor instead of using reflection \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2356\n\n\ngit-svn-id:    googlecode com/svn/trunk@483 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5103,     \nRefactor Maps valuesImpl  entrySetImpl  and keySetImpl into skeleton abstract classes\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2355\n\n\ngit-svn-id:    googlecode com/svn/trunk@482 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5104,     \nDocument that copying a Multiset into a Multiset is efficient \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2354\n\n\ngit-svn-id:    googlecode com/svn/trunk@481 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5105,     \nAdd skeleton ElementSet and EntrySet implementations to Multisets\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2353\n\n\ngit-svn-id:    googlecode com/svn/trunk@480 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5106,     \nWarning cleanup \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2352\n\n\ngit-svn-id:    googlecode com/svn/trunk@479 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5107,     \nCorrect the Javadoc of ForwardingMultiset standardClear()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2347\n\n\ngit-svn-id:    googlecode com/svn/trunk@478 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5108,     \nMake ListenableFutureTask constructor private (and un-deprecate it) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2346\n\n\ngit-svn-id:    googlecode com/svn/trunk@477 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5109,     \nIntroduce a SortedMultiset interface   It s package-internal for now \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2338\n\n\ngit-svn-id:    googlecode com/svn/trunk@476 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5110,     \nEliminate most calls to AbstractFuture cancel() in preparation for removing the method \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2329\n\n\ngit-svn-id:    googlecode com/svn/trunk@475 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5111,     \nMake ListenableFutureTask |final| \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2328\n\n\ngit-svn-id:    googlecode com/svn/trunk@474 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5112,     \nIntroduce ListenableFutureTask create to replace the constructor  deprecating the latter \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2327\n\n\ngit-svn-id:    googlecode com/svn/trunk@473 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5113,     \nreformat\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2324\n\n\ngit-svn-id:    googlecode com/svn/trunk@472 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5114,     \nFutures get and getUnchecked \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2313\n\n\ngit-svn-id:    googlecode com/svn/trunk@471 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5115,     \nDocument the advantages of Iterables frequency() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2312\n\n\ngit-svn-id:    googlecode com/svn/trunk@470 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5116,     \nAdd a Javadoc pointer from DiscreteDomain to DiscreteDomains \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2311\n\n\ngit-svn-id:    googlecode com/svn/trunk@469 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5117,     \n- add invalidateAll\n- rename getChecked to get\n- undeprecate (but discourage) apply\n- maintain Nullable annotations in AbstractCache\n- disallow null values\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2304\n\n\ngit-svn-id:    googlecode com/svn/trunk@467 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5118,     \nreformat\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2276\n\n\ngit-svn-id:    googlecode com/svn/trunk@466 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5119,     \ndeprecate FinalizableReferenceQueue\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2275\n\n\ngit-svn-id:    googlecode com/svn/trunk@465 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5120,     \nimplement newWeakInterner using CustomInterner\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2250\n\n\ngit-svn-id:    googlecode com/svn/trunk@464 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5121,     \n- don t let Cache asMap get impact recency queue\n- add getLiveEntry  and use it in get  containsKey  and Interners\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2249\n\n\ngit-svn-id:    googlecode com/svn/trunk@463 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5122,     \nHandle multipart paths that begin with   / in simplifyPath\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2246\n\n\ngit-svn-id:    googlecode com/svn/trunk@461 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5123,     \nTearDown Javadoc clarification \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2245\n\n\ngit-svn-id:    googlecode com/svn/trunk@460 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5124,     \nsplit compute into getOrCompute/compute\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2187\n\n\ngit-svn-id:    googlecode com/svn/trunk@459 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5125,     \nAvoid storing an extra cached copy of the ToStringHelper s internal string \nAlso avoid storing the separator and instead store a boolean \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2186\n\n\ngit-svn-id:    googlecode com/svn/trunk@458 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5126,     \nFix javadoc typo in lazyTransform\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2185\n\n\ngit-svn-id:    googlecode com/svn/trunk@457 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5127,     \nAdd Futures lazyTransform\nCleanup some small javadoc inconsistencies\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2184\n\n\ngit-svn-id:    googlecode com/svn/trunk@456 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5128,     \nadd Files simplifyPath\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2183\n\n\ngit-svn-id:    googlecode com/svn/trunk@455 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5129,     \nDeprecate Futures makeChecked\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2182\n\n\ngit-svn-id:    googlecode com/svn/trunk@454 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5130,     \nIn CheckedFuture Javadoc  emphasize that it has checkedGet()  not that it has addListener()  since any ListenableFuture has the latter \nIn Futures transform/chain Javadoc  attempt to simplify the text about cancellation  and revise and move a not always accurate statement about sameThreadExecutor() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2181\n\n\ngit-svn-id:    googlecode com/svn/trunk@453 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5131,     \nAdd Callables throwing method to make it easier to construct Callables\nfor error conditions \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2176\n\n\ngit-svn-id:    googlecode com/svn/trunk@452 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5132,     \nRemove @Beta \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2175\n\n\ngit-svn-id:    googlecode com/svn/trunk@451 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5133,     \nrename MapMaker privateKey/ValueEquivalence\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2174\n\n\ngit-svn-id:    googlecode com/svn/trunk@450 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5134,     \nMinor fixes to Objects ToStringHelper \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2173\n\n\ngit-svn-id:    googlecode com/svn/trunk@449 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5135,     \n- document the difference between makeComputingMap and makeCache\n- specify expiration visibility guarantees and cleanup policy\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2172\n\n\ngit-svn-id:    googlecode com/svn/trunk@448 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5136,     \nallow null parameters wherever possible in public ConcurrentMap methods\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2171\n\n\ngit-svn-id:    googlecode com/svn/trunk@447 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5137,     \nCacheStats bugfix: createExceptionRate() was always reporting 0 because of\ninteger division \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2170\n\n\ngit-svn-id:    googlecode com/svn/trunk@446 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5138,     \nstop using FinalizableReferenceQueue\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2169\n\n\ngit-svn-id:    googlecode com/svn/trunk@445 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5139,     \nintroduce CacheStats createExceptionCount\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2146\n\n\ngit-svn-id:    googlecode com/svn/trunk@443 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5140,     \nMake ImmutableCollection Builder public \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2131\n\n\ngit-svn-id:    googlecode com/svn/trunk@442 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5141,     \nAdd a first pass to InetAddresses forString() that validates the\ncharacters  and decides which address family\ s parser to call \n\nRewrite textToNumericFormatV6 so that it allocates fewer temporary\nstrings  and correctly rejects IPv6 addresses like  0:1:2:3::4:5:6:7  \n\nAlso remove some validation from parseOctet/parseHextet  because\nthat\ s now handled by the first pass \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2130\n\n\ngit-svn-id:    googlecode com/svn/trunk@441 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5142,     \nout of Beta for Guava release 10\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2110\n\n\ngit-svn-id:    googlecode com/svn/trunk@440 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5143,     \n- move custom queue implementations out of Segment\n- update (unreleased) cleanupExecutor to use ScheduledExecutorService\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2109\n\n\ngit-svn-id:    googlecode com/svn/trunk@439 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5144,     \nAnother warnings cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2088\n\n\ngit-svn-id:    googlecode com/svn/trunk@438 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5145,     \ndocument deletion timeframe\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2087\n\n\ngit-svn-id:    googlecode com/svn/trunk@437 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5146,     \nleave a few classes/methods public but deprecated for the next release\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2037\n\n\ngit-svn-id:    googlecode com/svn/trunk@435 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5147,     \nannotate getKey and getValue as returning @Nullable\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2036\n\n\ngit-svn-id:    googlecode com/svn/trunk@434 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5148,     \nJavadoc fixes \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2035\n\n\ngit-svn-id:    googlecode com/svn/trunk@433 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5149,     \nwarnings cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2034\n\n\ngit-svn-id:    googlecode com/svn/trunk@432 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5150,     \nWarnings cleanup \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2005\n\n\ngit-svn-id:    googlecode com/svn/trunk@430 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5151,     \n- Fix strongValues key/value confusion reported on guava-discuss \n- Make HostAndPort s port field final \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=2004\n\n\ngit-svn-id:    googlecode com/svn/trunk@429 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5152,     \nrename Cache get to Cache getUnchecked\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1994\n\n\ngit-svn-id:    googlecode com/svn/trunk@428 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5153,     \nEquivalence abstract class change\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1993\n\n\ngit-svn-id:    googlecode com/svn/trunk@427 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5154,     \nrelease makeCache\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1992\n\n\ngit-svn-id:    googlecode com/svn/trunk@426 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5155,     \nBugfix: The GWT emulation of ImmutableSortedMap get(null) throws\nNullPointerException  whereas the JVM version returns null \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1991\n\n\ngit-svn-id:    googlecode com/svn/trunk@424 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5156,     \nRemove k12 ca us from the under-TLD test list to fix the build \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1990\n\n\ngit-svn-id:    googlecode com/svn/trunk@423 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5157,     \nAdding converters for primitives and Enums \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1989\n\n\ngit-svn-id:    googlecode com/svn/trunk@422 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5158,     \nImmediately cleanup partially-collected entries as they are encountered  This should only happen when FinalizableReferenceQueue falls behind \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1968\n\n\ngit-svn-id:    googlecode com/svn/trunk@421 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5159,     \nLinkedListMultimap values() and entries() methods now return Lists\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1967\n\n\ngit-svn-id:    googlecode com/svn/trunk@420 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5160,     \nauthor cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1933\n\n\ngit-svn-id:    googlecode com/svn/trunk@419 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5161,     \nexport com google common testing into guava testing\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1932\n\n\ngit-svn-id:    googlecode com/svn/trunk@418 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5162,     Add a bootstrap JVM class replacement that overcomes an incompatibility between JDK5/6   This allows us to compile in such a way that our concurrency code works in J2SE 5 and 6 \n\ngit-svn-id:    googlecode com/svn/trunk@416 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5163,     \nMove JDK5-JDK6 shim from overridebootsourcepath to guava-bootstrap/src in preparation for moving it\nto a separate Maven project \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1931\n\n\ngit-svn-id:    googlecode com/svn/trunk@415 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5164,     \ncleanup deprecation annotaitons\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1930\n\n\ngit-svn-id:    googlecode com/svn/trunk@414 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5165,     \nFix up @Beta  @since  etc \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1929\n\n\ngit-svn-id:    googlecode com/svn/trunk@413 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5166,     \nFix Javadoc error in Optional resulting from reference to  not visible  BaseHolder methods \nFix other Javadoc warnings \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1928\n\n\ngit-svn-id:    googlecode com/svn/trunk@412 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5167,     Enable source artifact generation in all builds on guava  and use that plus other resources to build the Guava-gwt artifact  Then enable the gwt artifact in the aggregate build \n\ngit-svn-id:    googlecode com/svn/trunk@411 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5168,     \nsend removal notification (REPLACED) after cloberred compute completes\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1873\n\n\ngit-svn-id:    googlecode com/svn/trunk@410 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5169,     \nforbid insertions on MapMaker makeCache asMap view\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1872\n\n\ngit-svn-id:    googlecode com/svn/trunk@409 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5170,     \ndeprecate MapEvictionListener in favor of MapMaker RemovalListener\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1871\n\n\ngit-svn-id:    googlecode com/svn/trunk@408 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5171,     \nA partial round of javadoc wordsmithing on MapMaker and a small javadoc addition to MMPQ \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1870\n\n\ngit-svn-id:    googlecode com/svn/trunk@407 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5172,     \nintroduce Stopwatch\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1869\n\n\ngit-svn-id:    googlecode com/svn/trunk@406 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5173,     \n- remove cleanupQueue  immediately remove entries rather than unsetting them\n- ignore partially-collected entries during most operations  simplifying count management\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1868\n\n\ngit-svn-id:    googlecode com/svn/trunk@405 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5174,     \n- release Cache and AbstractCache in @Beta\n- rename CacheStatsCounter to AbstractCache StatsCounter\n- rename CacheStatsCounterImpl to AbstractCache SimpleStatsCounter\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1858\n\n\ngit-svn-id:    googlecode com/svn/trunk@404 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5175,     \n- make removalNotification public\n- unit tests for removal notification\n- remove unused EvictionListeners class\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1857\n\n\ngit-svn-id:    googlecode com/svn/trunk@403 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5176,     \nintroduce CacheLoader\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1856\n\n\ngit-svn-id:    googlecode com/svn/trunk@402 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5177,     \nrelease Holder to go with Optional; misc improvements to Optional \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1848\n\n\ngit-svn-id:    googlecode com/svn/trunk@399 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5178,     \nFix race condition when run() is called concurrently  annotating the idempotence \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1837\n\n\ngit-svn-id:    googlecode com/svn/trunk@398 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5179,     \nTest reorganization \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1836\n\n\ngit-svn-id:    googlecode com/svn/trunk@397 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5180,     \nImprovements to Optional: or/or/orNull methods \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1835\n\n\ngit-svn-id:    googlecode com/svn/trunk@396 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5181,     \nAdd Functions forSupplier(Supplier) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1834\n\n\ngit-svn-id:    googlecode com/svn/trunk@395 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5182,     \nImprove AbstractFuture cancel(boolean) to actually do something \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1833\n\n\ngit-svn-id:    googlecode com/svn/trunk@394 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5183,     \nNow users can create an Interner by providing the underlying MapMaker \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1832\n\n\ngit-svn-id:    googlecode com/svn/trunk@393 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5184,     \n- Convert c g c base Ticker into an abstract class from an interface \n- Add Ticker#systemTicker \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1831\n\n\ngit-svn-id:    googlecode com/svn/trunk@392 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5185,     \nintroduce RemovalNotification for use by RemovalListener\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1830\n\n\ngit-svn-id:    googlecode com/svn/trunk@391 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5186,     \nrollback\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1778\n\n\ngit-svn-id:    googlecode com/svn/trunk@390 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5187,     \nTurn Equivalence to abstract class \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1777\n\n\ngit-svn-id:    googlecode com/svn/trunk@389 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5188,     \nFix issue 572 and issue 614\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1776\n\n\ngit-svn-id:    googlecode com/svn/trunk@388 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5189,     \n- implement stats for NullCache\n- take new expiration methods out of Beta\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1760\n\n\ngit-svn-id:    googlecode com/svn/trunk@387 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5190,     \nintroduce CacheStatsCounter/Impl  to facilitate stats counting\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1749\n\n\ngit-svn-id:    googlecode com/svn/trunk@386 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5191,     \nprocess pending cleanups during lockedCleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1748\n\n\ngit-svn-id:    googlecode com/svn/trunk@385 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5192,     \nCommented out assert\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1747\n\n\ngit-svn-id:    googlecode com/svn/trunk@384 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5193,     \nAdd more MapInterfaceTests \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1712\n\n\ngit-svn-id:    googlecode com/svn/trunk@383 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5194,     \nprepare for MapMaker removalListener\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1711\n\n\ngit-svn-id:    googlecode com/svn/trunk@382 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5195,     \nStart running the collection test suite of c g common primitives in GWT \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1688\n\n\ngit-svn-id:    googlecode com/svn/trunk@381 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5196,     \nFix GWT coverage runs for ImmutableSortedSet \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1687\n\n\ngit-svn-id:    googlecode com/svn/trunk@380 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5197,     \n- don t enqueue cleanupExeuctor work on every operation\n- pull put into ComputingSegment\n- call postWriteCleanup after every unlock\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1686\n\n\ngit-svn-id:    googlecode com/svn/trunk@379 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5198,     \nRemove deprecated AbstractListenableFuture \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1685\n\n\ngit-svn-id:    googlecode com/svn/trunk@378 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5199,     \nAdd GWT MapInterfaceTests in com google common collect \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1668\n\n\ngit-svn-id:    googlecode com/svn/trunk@376 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5200,     \nAdd missing tests in com google common base \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1667\n\n\ngit-svn-id:    googlecode com/svn/trunk@375 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5201,     \nAdd Tables transformValues() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1666\n\n\ngit-svn-id:    googlecode com/svn/trunk@374 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5202,     \nSupport GWT serialization for Uri and UriParameterMap \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1665\n\n\ngit-svn-id:    googlecode com/svn/trunk@373 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5203,     \nrollback previous change\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1664\n\n\ngit-svn-id:    googlecode com/svn/trunk@372 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5204,     \n- don t enqueue cleanupExeuctor work on every operation\n- pull put into ComputingSegment\n- call postWriteCleanup after every unlock\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1663\n\n\ngit-svn-id:    googlecode com/svn/trunk@371 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5205,     \nFix keySet() of transformed maps when the map iterator doesn t support remove() \nImproves performance of that key set \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1662\n\n\ngit-svn-id:    googlecode com/svn/trunk@370 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5206,     \nDeprecate AbstractListenableFuture in favor of AbstractFuture \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1661\n\n\ngit-svn-id:    googlecode com/svn/trunk@369 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5207,     \nMake AbstractFuture implement ListenableFuture in preparation for changing all\nAbstractListenableFuture users to AbstractFuture and removing the former \nMerge both classes  Javadoc into AbstractFuture  and tweak it some more \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1660\n\n\ngit-svn-id:    googlecode com/svn/trunk@368 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5208,     \nConsolidate c g common primitives and c g common primitives gwt\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1655\n\n\ngit-svn-id:    googlecode com/svn/trunk@367 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5209,     \nMake AbstractFuture done() package-private \nSubclasses can extend AbstractListenableFuture and call addListener() instead \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1654\n\n\ngit-svn-id:    googlecode com/svn/trunk@366 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5210,     \nRollback previous change \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1640\n\n\ngit-svn-id:    googlecode com/svn/trunk@365 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5211,     \n- remove cleanupQueue\n- immediately remove entries rather than unsetting them\n- don t enqueue cleanupExeuctor work on every operation\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1639\n\n\ngit-svn-id:    googlecode com/svn/trunk@364 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5212,     \n- test null computations\n- move ComputingMapAdapter into ComputingConcurrentHashMap\n- restore the while() loop around wait()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1638\n\n\ngit-svn-id:    googlecode com/svn/trunk@363 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5213,     \nFix Maps transformValues() when map views have iterators that don t support remove()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1637\n\n\ngit-svn-id:    googlecode com/svn/trunk@362 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5214,     \nAdd a HostAndPort Java class  Update HostSpecifier to use this class \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1630\n\n\ngit-svn-id:    googlecode com/svn/trunk@361 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5215,     \nMake makeListenable package-private \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1629\n\n\ngit-svn-id:    googlecode com/svn/trunk@360 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5216,     \nRelease Listening  Scheduled ExecutorService and MoreExecutors listeningDecorator as @Beta by using Jsr166AbstractExecutorService \nMake MoreExecutors sameThreadExecutor implement ListeningExecutorService \nAlso  revert a few Guava-fications of non-Guava @since tags \n\nGet Jsr166AbstractExecutorService to compile in Guava by:\n(1) providing a compile-time-only JSR166 version of ExecutorService\n(2) changing its newTaskFor methods to return ListenableFutureTask\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1628\n\n\ngit-svn-id:    googlecode com/svn/trunk@359 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5217,     \nAdd iterate() to CidrAddressBlock\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1627\n\n\ngit-svn-id:    googlecode com/svn/trunk@358 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5218,     \nUpgrades build xml to compile gwt test modules with\n-strict -validationOnly so that it no longer requires the entry points\nto reference all relevant classes \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1626\n\n\ngit-svn-id:    googlecode com/svn/trunk@357 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5219,     \nAllow using @GwtIncompatible on constructors \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1554\n\n\ngit-svn-id:    googlecode com/svn/trunk@353 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5220,     \n- move null computation checking out of CustomConcurrentHashMap\n- avoid indirection of ForwardingMap in ComputingMapAdapter\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1553\n\n\ngit-svn-id:    googlecode com/svn/trunk@352 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5221,     \n- call postReadCleanup during view iteration\n- don t lock for spurious read cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1541\n\n\ngit-svn-id:    googlecode com/svn/trunk@351 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5222,     \nreally fix gwt src directory reference in gwt javadoc target\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1540\n\n\ngit-svn-id:    googlecode com/svn/trunk@350 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5223,     \nfix gwt src directory reference in gwt javadoc target\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1539\n\n\ngit-svn-id:    googlecode com/svn/trunk@349 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5224,     \nalways call postReadCleanup after compute\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1533\n\n\ngit-svn-id:    googlecode com/svn/trunk@346 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5225,     \nrequire GWT 2 2 0 for its java math support and testing improvements\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1532\n\n\ngit-svn-id:    googlecode com/svn/trunk@345 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5226,     \nadopt ConcurrentHashMap s new isEmpty\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1531\n\n\ngit-svn-id:    googlecode com/svn/trunk@344 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5227,     \nnew Beta additions for r10\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1530\n\n\ngit-svn-id:    googlecode com/svn/trunk@343 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5228,     \nintroduce AbstractReferenceEntry to cleanup partial ReferenceEntry implementations\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1529\n\n\ngit-svn-id:    googlecode com/svn/trunk@342 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5229,     updated POMs for maven builds \n\ngit-svn-id:    googlecode com/svn/trunk@341 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5230,     \nadopt ConcurrentHashMap s new containsValue  without the locking\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1497\n\n\ngit-svn-id:    googlecode com/svn/trunk@339 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5231,     \nMake ExecutionList no longer extend Runnable  as it s never used that way \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1496\n\n\ngit-svn-id:    googlecode com/svn/trunk@338 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5232,     point build xml at new\nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@336 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5233,     directory reorganization in preparation for deeper maven integration\n\n\ngit-svn-id:    googlecode com/svn/trunk@328 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5234,     \nclarify description of iterators\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1473\n\n\ngit-svn-id:    googlecode com/svn/trunk@320 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5235,     \nRemove two unnecessary Platform methods  and remove an unnecessary call to another \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1463\n\n\ngit-svn-id:    googlecode com/svn/trunk@319 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5236,     \nmake removeIf() deal with lists that don t support  set()  but do support  remove()  \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1462\n\n\ngit-svn-id:    googlecode com/svn/trunk@318 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5237,     \nAdd Table \nAdd AbstractLinkedIterator \nAdd ForwardingNavigable*  but strip from public release \nStandardize on <ul> instead of our current <dl>/<ul> mix \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1447\n\n\ngit-svn-id:    googlecode com/svn/trunk@317 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5238,     \nAdd Predicates assignableFrom \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1446\n\n\ngit-svn-id:    googlecode com/svn/trunk@316 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5239,     \nmake Segment a static nested class\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1445\n\n\ngit-svn-id:    googlecode com/svn/trunk@315 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5240,     \nupdate @since syntax to specify  Guava release 0x \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1444\n\n\ngit-svn-id:    googlecode com/svn/trunk@314 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5241,     \nfix indentation\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1443\n\n\ngit-svn-id:    googlecode com/svn/trunk@313 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5242,     \nreformat to 100 columns\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1442\n\n\ngit-svn-id:    googlecode com/svn/trunk@312 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5243,     \ncomplete sync\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1360\n\n\ngit-svn-id:    googlecode com/svn/trunk@311 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5244,     \nClean up some doc in InternetDomainName \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1359\n\n\ngit-svn-id:    googlecode com/svn/trunk@310 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5245,     \nRemove unneeded Range create \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1358\n\n\ngit-svn-id:    googlecode com/svn/trunk@309 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5246,     \nrollback simplification of UninterruptibleFuture get(long  TimeUnit) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1305\n\n\ngit-svn-id:    googlecode com/svn/trunk@308 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5247,     \n- include jsr class files in gwt jar\n- add manifest annotations to jar files\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1304\n\n\ngit-svn-id:    googlecode com/svn/trunk@307 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5248,     \n(Re)Add Uninterruptibles with support for CountDownLatch await() and sleep()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1303\n\n\ngit-svn-id:    googlecode com/svn/trunk@306 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5249,     \nremove gwt-specific comment\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1302\n\n\ngit-svn-id:    googlecode com/svn/trunk@305 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5250,     \nEmulate MapMaker#concurrencyLevel \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1301\n\n\ngit-svn-id:    googlecode com/svn/trunk@304 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5251,     \nRe-source this class \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1300\n\n\ngit-svn-id:    googlecode com/svn/trunk@303 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5252,     \ndocument non-locking behavior of size/containsValue\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1299\n\n\ngit-svn-id:    googlecode com/svn/trunk@302 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5253,     \nsync new changes\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1357\n\n\ngit-svn-id:    googlecode com/svn/trunk@301 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5254,     \ndon t lock on pending computation\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1297\n\n\ngit-svn-id:    googlecode com/svn/trunk@300 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5255,     \n<p> for Javadoc paragraphs \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1296\n\n\ngit-svn-id:    googlecode com/svn/trunk@299 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5256,     bump version number\n\ngit-svn-id:    googlecode com/svn/trunk@298 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5257,     \nLeave makeListenable public for Guava \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1111\n\n\ngit-svn-id:    googlecode com/svn/trunk@286 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5258,     \nRewrite Converter Javadoc  based in part on the Javadoc of Function \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1110\n\n\ngit-svn-id:    googlecode com/svn/trunk@285 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5259,     \nDocument the reasoning behind the 127-part limit  with an RFC reference \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1109\n\n\ngit-svn-id:    googlecode com/svn/trunk@284 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5260,     \ndon t expose fromInternal\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1071\n\n\ngit-svn-id:    googlecode com/svn/trunk@282 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5261,     \nDocument that makeChecked(ListenableFuture  Function) is source-compatible back to Guava 1 (a la ImmutableList of()) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1070\n\n\ngit-svn-id:    googlecode com/svn/trunk@281 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5262,     \nflag the _new_ makeChecked as since 9\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1069\n\n\ngit-svn-id:    googlecode com/svn/trunk@280 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5263,     \nWarning / Live without warning \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1063\n\n\ngit-svn-id:    googlecode com/svn/trunk@279 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5264,     \nadd missing sinces for release 09\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1062\n\n\ngit-svn-id:    googlecode com/svn/trunk@278 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5265,     \nMake InternetDomainName respect more limits imposed by relevant RFCs:\n* At most 127 parts\n* At most 253 characters in length\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1041\n\n\ngit-svn-id:    googlecode com/svn/trunk@277 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5266,     \nFix a second case of  childless uncle  bug causing heap corruption \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1027\n\n\ngit-svn-id:    googlecode com/svn/trunk@275 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5267,     \nexplicitly target 1 5 on gwt compilations\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1011\n\n\ngit-svn-id:    googlecode com/svn/trunk@274 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5268,     \nadd CONTRIBUTORS file\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=1010\n\n\ngit-svn-id:    googlecode com/svn/trunk@273 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5269,     \nRemove @throws InterruptedRuntimeException from Service javadocs \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=983\n\n\ngit-svn-id:    googlecode com/svn/trunk@272 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5270,     \nremove Beta from stable APIs; introduce Splitter limit\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=982\n\n\ngit-svn-id:    googlecode com/svn/trunk@271 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5271,     \nDeprecate withExplicitOrder\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=981\n\n\ngit-svn-id:    googlecode com/svn/trunk@270 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5272,     \ntest tweaks\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=979\n\n\ngit-svn-id:    googlecode com/svn/trunk@269 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5273,     \n- replace removeEntry with reclaimKey/unsetKey\n- extract tryExpiredEntries\n- introduce notifyKeyReclaimed  rename valueReclaimed to notifyValueReclaimed\n- don t create notification entries for discarding queue\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=972\n\n\ngit-svn-id:    googlecode com/svn/trunk@268 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5274,     \nadd AUTHORS\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=964\n\n\ngit-svn-id:    googlecode com/svn/trunk@266 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5275,     \nonly expireEntries on reads when an expired entry is encountered\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=963\n\n\ngit-svn-id:    googlecode com/svn/trunk@265 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5276,     \n- check expiration in computation lock\n- expireEntries post-read in a tryLock\n- add recordLockedRead\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=962\n\n\ngit-svn-id:    googlecode com/svn/trunk@264 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5277,     \nfix copyrights\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=947\n\n\ngit-svn-id:    googlecode com/svn/trunk@263 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5278,     \n- Make AbstractService s Futures implement ListenableFuture by reimplementing the custom Transition class on top of AbstractListenableFuture \n- Remove asciiHtmlEscaper  replaced with Html htmlContentEscaper \n- Make Service start() and stop() return a ListenableFuture \n- Eliminate the distinction between Range and DiscreteRange and move operations that used to live in DiscreteRange into ContiguousSet \n- Preserve strict/lenient validation when deriving IDN instances from other IDN instances  No test changes yet; wanted to get feedback on the approach first \n- Add a deprecated version of Ranges integers() and Ranges longs() to temporarily fix builds \n- MapMaker:\n\t- containsValue should fail on collected key\n\t- refine expiration javadocs\n\t- structure all reads similarly  documenting more assumptions\n\t- more white-box tests\n- Use constants in UriEscapers instead of PercentEscaper  deprecating the latter \n- Make Javadoc (and occasionally FindBugs) happier \n- Rename package html files to package-info html  which are preferred as for JDK 5 (see `man javadoc`) \n- Avoid stack overflow \n- Make InternetDomainName lenient validation a little less lenient \n- Remove all usages of Ranges longs() and Ranges integers() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=946\n\n\ngit-svn-id:    googlecode com/svn/trunk@262 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5279,     \nRemove util concurrent Service \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=911\n\n\ngit-svn-id:    googlecode com/svn/trunk@261 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5280,     \nAdd new Enums class with #valueOfFunction \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=910\n\n\ngit-svn-id:    googlecode com/svn/trunk@260 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5281,     \nAdd GWT support for MapMaker#maximumSize \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=877\n\n\ngit-svn-id:    googlecode com/svn/trunk@259 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5282,     \nMove users of Service off the version in base and onto the version in util concurrent \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=873\n\n\ngit-svn-id:    googlecode com/svn/trunk@258 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5283,     \ndon t lock to calculate size and containsValue\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=872\n\n\ngit-svn-id:    googlecode com/svn/trunk@257 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5284,     \nAdd standardStartAndWait() and standardStopAndWait() to ForwardingService \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=855\n\n\ngit-svn-id:    googlecode com/svn/trunk@256 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5285,     \nAutomatic addition of @Override annotations\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=850\n\n\ngit-svn-id:    googlecode com/svn/trunk@255 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5286,     \n- Add a class javadoc @link to Charsets US_ASCII  Add constant definitions for MIN and MAX  Take out of @Beta \n- copy Ticker into common base\n- Perform stopAndWait/startAndWait uninterruptibly instead of throwing InterruptedRuntimeException \n- add MapMaker ticker(Ticker)\n- Clone Service from base to util concurrent \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=849\n\n\ngit-svn-id:    googlecode com/svn/trunk@254 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5287,     \nRemove deprecated StringUtil xmlEscape/htmlEscape  which are replaced by XmlEscapers xmlEscaper and Html htmlContentEscaper \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=817\n\n\ngit-svn-id:    googlecode com/svn/trunk@253 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5288,     \nAdd a wrap() method to Equivalences that returns objects whose equals() and hashCode() methods are implemented using and Equivalence and a value \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=816\n\n\ngit-svn-id:    googlecode com/svn/trunk@252 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5289,     \nCorrect javadoc error for Multimaps#index() and be more specific about the interation ordering of the result \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=815\n\n\ngit-svn-id:    googlecode com/svn/trunk@251 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5290,     \nRemove Futures compose\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=814\n\n\ngit-svn-id:    googlecode com/svn/trunk@250 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5291,     \nreduce lock leakage under Error conditions\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=813\n\n\ngit-svn-id:    googlecode com/svn/trunk@249 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5292,     \nRollback Ticker \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=807\n\n\ngit-svn-id:    googlecode com/svn/trunk@248 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5293,     \nadd common base Ticker\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=777\n\n\ngit-svn-id:    googlecode com/svn/trunk@247 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5294,     \ndon t create recency queue or record reads for expireAfterWrite\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=773\n\n\ngit-svn-id:    googlecode com/svn/trunk@246 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5295,     \nReduce visibility of makeListenable to package-private (for use in makeChecked only) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=754\n\n\ngit-svn-id:    googlecode com/svn/trunk@245 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5296,     \nadd MapMaker toString\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=753\n\n\ngit-svn-id:    googlecode com/svn/trunk@244 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5297,     \nadd ExpirationQueue and EvictionQueue to CustomConcurrentHashMap\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=747\n\n\ngit-svn-id:    googlecode com/svn/trunk@243 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5298,     \nMapMaker:\n- put size s unlock in a finally block\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=742\n\n\ngit-svn-id:    googlecode com/svn/trunk@242 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5299,     \nMapMaker:\n- call recordRead instead of recordWrite on failed putIfAbsent/replace\n- unset partially-collected entries as soon as they re found\n- skip partially-collected entries when copying buckets\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=714\n\n\ngit-svn-id:    googlecode com/svn/trunk@239 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5300,     \nFix typo in SimpleForwa(r)dingCheckedFuture\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=713\n\n\ngit-svn-id:    googlecode com/svn/trunk@237 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5301,     \nTweak ListenableFuture Javadoc  primarily to link to common implementations \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=712\n\n\ngit-svn-id:    googlecode com/svn/trunk@236 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5302,     \nSmall javadoc fix to InternetDomainName \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=707\n\n\ngit-svn-id:    googlecode com/svn/trunk@235 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5303,     \nhandle initialCapacity > maximumSize\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=689\n\n\ngit-svn-id:    googlecode com/svn/trunk@234 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5304,     \nCreate Futures transform  and forward Futures compose to it \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=688\n\n\ngit-svn-id:    googlecode com/svn/trunk@233 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5305,     \nFix Eclipse-compiler build breakage caused by raw-types cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=687\n\n\ngit-svn-id:    googlecode com/svn/trunk@232 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5306,     \nAllows for the maximumSize & expiration to be zero by using a light-weight map\nthat stores no data \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=686\n\n\ngit-svn-id:    googlecode com/svn/trunk@231 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5307,     \nremove antiquated comment about upper limits on expiration time\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=685\n\n\ngit-svn-id:    googlecode com/svn/trunk@230 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5308,     \nUse raw types less in common collect \n\nMapMaker:\n- call putIfAbsent instead of custom setComputedValue\n- Allows for the maximumSize & expiration to be zero by using a light-weight map that stores no data \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=675\n\n\ngit-svn-id:    googlecode com/svn/trunk@229 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5309,     \nInternally remove unused  of(E[ )  from the ImmutableSortedSet API \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=564\n\n\ngit-svn-id:    googlecode com/svn/trunk@227 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5310,     \nMapMaker: only allow computed value to be set once  this removes race condition between concurrent put and compute\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=563\n\n\ngit-svn-id:    googlecode com/svn/trunk@226 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5311,     \nMapMaker: refactor cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=562\n\n\ngit-svn-id:    googlecode com/svn/trunk@225 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5312,     \nValueFuture->SettableFuture \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=561\n\n\ngit-svn-id:    googlecode com/svn/trunk@224 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5313,     \nImprove InternetDomainName documentation on validation \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=554\n\n\ngit-svn-id:    googlecode com/svn/trunk@223 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5314,     \nMapMaker:\n- fix inline cleanup to perform locked cleanup when the lock is held!\n- correctly implement read-time cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=553\n\n\ngit-svn-id:    googlecode com/svn/trunk@222 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5315,     \nMapMaker: optimize cleanup when using the default executor by doing lock-requiring-cleanup under lock  instead of requiring a second lock to be taken\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=551\n\n\ngit-svn-id:    googlecode com/svn/trunk@221 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5316,     \nMapMaker:\n- move read-time recencyQueue draining to cleanup executor\n- replcae recencyQueueLength with readCount\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=550\n\n\ngit-svn-id:    googlecode com/svn/trunk@220 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5317,     \nMake ForwardingListenableFuture javadoc consistent\nAdd SimpleForwading*Future\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=549\n\n\ngit-svn-id:    googlecode com/svn/trunk@219 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5318,     \nMapMaker\n- invalidate entries containing partially collected keys\n- assert that expiration list is valid\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=541\n\n\ngit-svn-id:    googlecode com/svn/trunk@218 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5319,     \nWarnings cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=540\n\n\ngit-svn-id:    googlecode com/svn/trunk@217 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5320,     \nMapMaker rollback\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=539\n\n\ngit-svn-id:    googlecode com/svn/trunk@216 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5321,     \nMapMaker:\n- invalidate entries containing partially collected keys\n- assert that expiration list is valid\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=528\n\n\ngit-svn-id:    googlecode com/svn/trunk@215 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5322,     \nAssorted util concurrent tweaks  mostly Javadoc \n- @link from CheckedFuture to common implementations  since it seems that many people can t find them:    google com/a/google com/group/java-libraries-discuss/browse_thread/thread/83589a60aa3c5318\n- Warn that makeListenable(   ) addListener() and friends use a thread \n- Add examples to Futures combine \n- Rewrite the Javadoc for some methods in Futures to cram more information into the first sentence \n- Also  stop extending Assert in ListenableFutureTester in favor of static imports \n- Finally  make combine(     Iterable) more permissive  (This should be backward compatible )\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=527\n\n\ngit-svn-id:    googlecode com/svn/trunk@214 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5323,     \nAdd ForwardingCheckedFuture\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=526\n\n\ngit-svn-id:    googlecode com/svn/trunk@212 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5324,     \nMapMaker:\n- increment count at computation end instead of beginning\n- distinguish computation from partial-collection when put clobbers incomplete\nvalues\n- don t suppress notifications when computation encounters partially-collected\nvalues\n- don t remove computing entries\n- test many more edge cases\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=525\n\n\ngit-svn-id:    googlecode com/svn/trunk@210 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5325,     \nrollback cl/19492453\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=516\n\n\ngit-svn-id:    googlecode com/svn/trunk@209 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5326,     \ncleanup partially-collected entries during computation  since scheduled cleanup uses tryLock and thus may not cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=515\n\n\ngit-svn-id:    googlecode com/svn/trunk@208 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5327,     \ndon t return null value from computation; fixes race condition where value was garbage-collected between null check and return\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=514\n\n\ngit-svn-id:    googlecode com/svn/trunk@207 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5328,     \nintroduce MapMaker cleanupExecutor\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=513\n\n\ngit-svn-id:    googlecode com/svn/trunk@206 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5329,     \nMapMaker:\n- increment count at computation end instead of beginning\n- distinguish computation from partial-collection when put clobbers incomplete\nvalues\n- don t suppress notifications when computation encounters partially-collected\nvalues\n- don t remove computing entries\n- test many more edge cases\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=512\n\n\ngit-svn-id:    googlecode com/svn/trunk@205 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5330,     \nMapMaker:\n- introduce default cleanup executor (not user-visible yet)\n- don t call recordRead on invalidated entries\n- expire entries when over-writting invalid entries\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=507\n\n\ngit-svn-id:    googlecode com/svn/trunk@204 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5331,     \nRegularImmutableSet should never contain one element on the client\nside  or it will cause problem deserializing them\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=499\n\n\ngit-svn-id:    googlecode com/svn/trunk@203 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5332,     \nFix TreeBasedTable to return columns in globally sorted order \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=485\n\n\ngit-svn-id:    googlecode com/svn/trunk@202 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5333,     \nuse invalidation+cleanup for MapMaker gc-cleanup\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=473\n\n\ngit-svn-id:    googlecode com/svn/trunk@201 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5334,     \nMapMaker cleanup:\n- replace computed value reference upon completion\n- account for copied entries when clearing invalid computations\n- properly propagate computation exceptions to waiting threads\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=472\n\n\ngit-svn-id:    googlecode com/svn/trunk@200 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5335,     \nAdd examples to Futures chain() and compose() Javadoc \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=471\n\n\ngit-svn-id:    googlecode com/svn/trunk@199 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5336,     - added Equivalences pairwise()\n-\tcleanup failed MapMaker computes with invalidateValue instead of racy removeEntry\n-\tdetect recursive MapMaker computation and fail fast rather than silently deadlocking\n-\tsend MapMaker notifications after unlocking related to computaiton\n\n\ngit-svn-id:    googlecode com/svn/trunk@198 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5337,     - send removal notification in MapMaker when reclaimed keys are encountered during copies\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=424\n\n\ngit-svn-id:    googlecode com/svn/trunk@181 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5338,     - lower default MapMaker concurrency level to 4\n- remove Equivalences nullAwareEquals()\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@178 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5339,     Fixed bug/532 \nAdd warnings to README \n\nThese should be the last changes for Guava release 08 \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@160 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5340,     Restore CharMatcher SINGLE_WIDTH\nDeprecate MapMaker expiration\nMake Equivalences equals/identity null-aware  deprecate nullAwareEquals\nLists reverse out of beta\nFix some multimap javadoc problems\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@159 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5341,     Send removal notification when entries containing garbage-collected values are reused\nUse StringBuilder instead of implicit concatentation in SingletonImmutableList#toString \nMark Joiner MapJoiner as final \nJDiff update \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=339\n\n\ngit-svn-id:    googlecode com/svn/trunk@151 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5342,     \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@149 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5343,     \nAdd CharMatcher matchesAnyOf()\n\nMake HostSpecifier fromValid s thrown ParseException encapsulate the original exception \n\nIn InternetDomainName  rename from->fromLenient  and add isValidLenient \n\nUpdate error messages on MapMaker#expireAfter Read Write   Fix a bug where the expireAfterAccessNanos wasn t being substituted into error message \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=297\n\n\ngit-svn-id:    googlecode com/svn/trunk@148 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5344,     Today s code refresh \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@147 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5345,     Push of latest guava code which unfortunately includes temporarily backing out\nthe common testing stuff  which still hasn t been figured out properly in a way\nthat allows us to keep internal and external codebases synchronized   That\nstuff may or may not be available as part of release 8 after all \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@146 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5346,     Next gigantic code drop \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@143 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5347,     Next giant code dump  Most interesting stuff: MinMaxPriorityQueue \nOrdering  least greatest Of  SortedMaps \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@138 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5348,     Add expireAfterWrite() and expireAfterAccess() to MapMaker  replacing\nexpiration() (which will be deprecated for release 8) \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@137 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5349,     Batch of 18 days  worth of changes  which I should be itemizing (sorry) \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@136 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5350,     Add the most basic portion of our testing infrastructure required to make the Guava tests pass  and add a replacement for Assert * so we can have the assertions available to the tests in this core library  without forcing a dependency on JUnit or any other testing framework   The tests  themselves  of course  can remain dependent on JUnit \n\ngit-svn-id:    googlecode com/svn/trunk@135 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5351,     bump version to r08-SNAPSHOT\n\ngit-svn-id:    googlecode com/svn/trunk@134 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5352,     Accidentally removed -use and -linksource from javadoc task \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@133 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5353,     @Beta release of MapMaker maximumSize()!\n\nAdd Interners asFunction per issue 398 \n\t\nStart emulating ImmutableAsList  and make it GWT serializable \n\nAdd missing Javadoc to Maps EntryTransformer transformEntry() \n\t\nSince ConcurrentHashMap consistently invokes equals() as\n objectYouJustGaveMe equals(objectAlreadyInMap)   it was suggested we should do\nthe same with our equivalences \n\t\nVarious small doc fixes \n\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@132 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5354,     One forgotten @Beta/@since \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@128 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5355,     JDiff update\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@127 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5356,     Provide default implementations for various methods in ForwardingMap and ForwardingSortedMap \n\nSpecify in Interners javadoc that they don t consume permgen  which is one of\nthe advantages of using them (for strings) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=237923\n\n\ngit-svn-id:    googlecode com/svn/trunk@126 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5357,     \nForward get call on chained future to underlying input future \n\nProvide default implementations of many methods for ForwardingSortedSet \n\nImproved documentation and standardClear method for ForwardingMultiset \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=240546\n\n\ngit-svn-id:    googlecode com/svn/trunk@125 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5358,     \nProvide default implementations for some methods in ForwardingQueue\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=224287\n\n\ngit-svn-id:    googlecode com/svn/trunk@121 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5359,     Fix InternetDomainName case normalization (only ASCII characters are to be normalized to lowercase) \n\nIntroduce new common base Ascii class for ascii-specific functions \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@118 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5360,     \nDelegate from compose(Future  Function) to compose(ListenableFuture  Function) when applicable \n\nAdd some missing @since tags \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=216874\n\n\ngit-svn-id:    googlecode com/svn/trunk@117 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5361,     \nProvide default implementations for various methods for ForwardingMultiset \n\nFix issue 411  NPE in Equivalences nullAwareEquals() hash(null) \n\nMinor style fixes \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=216777\n\n\ngit-svn-id:    googlecode com/svn/trunk@116 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5362,     \nLists charactersOf(CharSequence)\n\nFix RegularImmutableSortedSet containsAll to handle sets with the same comparator  but different element types \n\nOrdering needed @Nullables on a few methods (issue 346) \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=219055\n\n\ngit-svn-id:    googlecode com/svn/trunk@115 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5363,     \nProvide default implementations of methods as protected methods in Forwarding Collection List Set  \n\nAdd Lists reverse() (@Beta) \n\nRework ImmutableSortedMap to be backed by an ImmutableList \n\nMinor internal style fixes \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=218295\n\n\ngit-svn-id:    googlecode com/svn/trunk@113 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5364,     \nRework RegularImmutableSortedSet to be backed by an ImmutableList instead of an array \n\nMake IDN conform more closely to the Mozilla PS algorithm  In the process  we introduce a weird disjunction in our definition  but that seems unavoidable (for now?) \n\nMake com google common base Equivalence  s  GwtCompatible \n\nMake Futures compose(Future  Function) wrap any RuntimeException/Error that occurs in an ExecutionException \nAlso  call the Function only once even if it throws \n(Futures compose(ListenableFuture  Function) already had both these behaviors )\n\nDo not cancel() when interrupted  Do restore the interrupt \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=213626\n\n\ngit-svn-id:    googlecode com/svn/trunk@112 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5365,     \nUpdate ToStringHelper to do what users expect with Class<?> objects   This addresses bug 381 \n\nAdd ImmutableList reverse() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=211340\n\n\ngit-svn-id:    googlecode com/svn/trunk@111 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5366,     \nFix an issue in Multimaps transformValues that did not reflect changes to the backing Multimap\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=202775\n\n\ngit-svn-id:    googlecode com/svn/trunk@110 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5367,     \nRecognize hosts like  www nhs uk  as valid (since they are)  This is probably not the final word on this problem \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=206002\n\n\ngit-svn-id:    googlecode com/svn/trunk@109 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5368,     \nKeep the supersource version of MakMaker in sync with the server version \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=201371\n\n\ngit-svn-id:    googlecode com/svn/trunk@108 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5369,     \nAdd missing @since tags \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=203377\n\n\ngit-svn-id:    googlecode com/svn/trunk@107 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5370,     \nAdded Multimaps transformValues and Multimaps transformEntries\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=204316\n\n\ngit-svn-id:    googlecode com/svn/trunk@106 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5371,     \nAdd getFirst() implementations to Itera*s per external bug 217\n(   google com/p/guava-libraries/issues/detail?id=217) \n\nPlus  some modest documentation clean-up \n\nR=kevinb\nDELTA=70  (68 added  0 deleted  2 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=200293\n\n\ngit-svn-id:    googlecode com/svn/trunk@105 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5372,     \n3-arg version of find()\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=201272\n\n\ngit-svn-id:    googlecode com/svn/trunk@104 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5373,     \nRemove a @since tag that was just plain false\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=200245\n\n\ngit-svn-id:    googlecode com/svn/trunk@103 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5374,     \nHandle some edge cases in createParentDirs \n\nR=kevinb\nDELTA=62  (54 added  1 deleted  7 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=201259\n\n\ngit-svn-id:    googlecode com/svn/trunk@102 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5375,     \nFix up how Immutable* copyOf() work -- they should short-circuit the copy when safe  but not when the copy takes up less memory  etc   \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=202225\n\n\ngit-svn-id:    googlecode com/svn/trunk@101 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5376,     \n(implementation detail) create UnmodifiableListIterator\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=205212\n\n\ngit-svn-id:    googlecode com/svn/trunk@100 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5377,     \nAnd then roll forward \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=205211\n\n\ngit-svn-id:    googlecode com/svn/trunk@99 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5378,     \nRoll back recent Immutable(Sorted)Set change temporarily \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=205210\n\n\ngit-svn-id:    googlecode com/svn/trunk@98 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5379,     Next batch of pent-up fixes \n\nVisible changes:\n- Add ImmutableSortedSet copyOf(Collection) which is safe for concurrent\n  modification \n- Make ImmutableSet copyOf(Collection) public \n- Various Futures javadoc improvements (also use <V> and <X> over <T> and <E>) \n- Revamp javadoc for Function  Predicate and related classes  Highlight the\n  issue about consistency with equals  as this problem has been noticed with\n  utilities like Sets filter() (issue 363) \n\nLess-visible changes:\n- Add a few missing @Nullable annoations \n- In Iterables concat impl  create an Iterator<Iterator> directly rather than via transform() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@97 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5380,     \n- Make GwtCompatible and GwtIncompatible @Documented in the open source\nversion \n- Update links to the documentations \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=197273\n\n\ngit-svn-id:    googlecode com/svn/trunk@96 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5381,     3 days of pent-up improvements:\n- Make setException(null) throw NullPointerException instead of silently \n  setting the future to succeeded (with a result value of null) \n- Remove unnecessary type parameter from transformExceptions() and its \n  implementation class \n- New ConcurrentHashMultiset factory method that takes a MapMaker  This allows \n  using soft/weak keys and expiration on the backing map \n- Turns out it s annoying to not know whether it s the key or value that was\n  null in an ImmutableMap \n- Tiny javadoc fixes  mostly concerning code snippets \n- Introduce a package-private Iterables toArray(Iterable) method as a\n  GWT-compatible alternative to the public Iterables toArray(Iterable  Class) \n  and achieve a marginally more efficient implementation of the GWT emulation\n  for ImmutableSet s Builder and copyOf methods \n- Make EnumBiMap and EnumHashBiMap GwtCompatible \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@94 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5382,     \nFix performance problem in LinkedHashMultimap removeAll(key)  as documented in    google com/p/guava-libraries/issues/detail?id=371&start=100\n\nR=kak\nDELTA=3  (2 added  0 deleted  1 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=177089\n\n\ngit-svn-id:    googlecode com/svn/trunk@93 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5383,     \nUse a simple workaround for    sun com/view_bug do?bug_id=6558557\ninstead of suppressing all over the place \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=177036\n\n\ngit-svn-id:    googlecode com/svn/trunk@92 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5384,     \nMake ImmutableEntry setValue() final   Makes it clearer that ImmutableEntry is  in fact  immutable \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=180040\n\n\ngit-svn-id:    googlecode com/svn/trunk@91 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5385,     \nMinor tweaks\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=176021\n\n\ngit-svn-id:    googlecode com/svn/trunk@90 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5386,     \nExclude CustomFieldSerializers from GWT javadoc\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=179003\n\n\ngit-svn-id:    googlecode com/svn/trunk@89 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5387,     \nAdd ImmutableSet copyOf(Collection)  following lead of ImmutableList  to make it safe with copyOf(synchronizedConcurrentList) \n\nAlso had to add ImmutableSortedSet copyOf(Collection)  to make Java overloading happy \n\nI guess another alternative  is to hide the copyOf(Collection) overload and make sure copyOf(Iterable) is safe when the iterable is actually a Collection  (But why is ImmutableList copyOf(Collection) needed?)\n\nI also added ImmutableSortedSet copyOf(Comparator  Collection)  for sake(excuse) of consistency \n\n(Ben Yu)\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=163006\n\n\ngit-svn-id:    googlecode com/svn/trunk@88 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5388,     \nReduce one temp array creation for ImmutableList of() \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=159004\n\n\ngit-svn-id:    googlecode com/svn/trunk@87 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5389,     \nIrrelevant change to outside users \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=156004\n\n\ngit-svn-id:    googlecode com/svn/trunk@86 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5390,     \nTighten up the restriction of supersource builder to require\nemulated = true to be set in the @GwtIncompatible \n\nUpdated all references to add the emulated=true spec back \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=140002\n\n\ngit-svn-id:    googlecode com/svn/trunk@85 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5391,     \nMakes the result of Futures#chain() cancellable   It will now be\nsuccessfully canceled in these cases:\n1  A thread calls cancel(boolean) directly on it and the Future is\ncurrently running \n2  The underlying input Future is cancelled \n3  The Future result of the Function is cancelled \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=134006\n\n\ngit-svn-id:    googlecode com/svn/trunk@84 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5392,     \nChange InternetDomainName to reflect reality of public suffixes which are websites by changing javadoc to specify safe and unsafe usage patterns \n\nR=jessewilson\nDELTA=51  (40 added  2 deleted  9 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=91009\n\n\ngit-svn-id:    googlecode com/svn/trunk@83 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5393,     \ndelay eviction until a new entry is created\n\nR=bmanes\nDELTA=11  (8 added  2 deleted  1 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=96006\n\n\ngit-svn-id:    googlecode com/svn/trunk@82 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5394,     \nFix our TODO comments to include username as required  usually naming\nmyself   Remove a few I don\ t think we need  and handle one (it said  use\nthis method from Maps when that class is gwt-safe )  Make moe not choke on\nunrecognized usernames  Whitelist a few usernames for non-scrubbing who\nhave agreed to it \n\nR=jlevy\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=92006\n\n\ngit-svn-id:    googlecode com/svn/trunk@81 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5395,     \nRemove the comments about List subList   GWT supports it now \n\nR=cpovirk\nDELTA=9  (0 added  9 deleted  0 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=95006\n\n\ngit-svn-id:    googlecode com/svn/trunk@80 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5396,     \nimplement maximumSize\n\nR=bmanes\nDELTA=451  (309 added  10 deleted  132 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=95005\n\n\ngit-svn-id:    googlecode com/svn/trunk@79 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5397,     \nFix the license headers and @author tags of the new sources \n\nR=cpovirk\nDELTA=104  (84 added  0 deleted  20 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=97002\n\n\ngit-svn-id:    googlecode com/svn/trunk@78 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5398,     \nMove a class to fit the existing organizational scheme in this file \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=96005\n\n\ngit-svn-id:    googlecode com/svn/trunk@77 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5399,     \nAdd fromBytes() wherever there is fromByteArray() \n\nR=martinrb\nDELTA=141  (108 added  8 deleted  25 changed)\n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=95004\n\n\ngit-svn-id:    googlecode com/svn/trunk@76 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5400,     \nGWT serialization stuff \nAdd Table classes \nMinor cleanups \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=87009\n\n\ngit-svn-id:    googlecode com/svn/trunk@74 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5401,     Performance of ImmutableMap improved  while paving the way for us to reduce its memory usage as well \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@73 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5402,     Minor code  javadoc  jdiff update \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@72 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5403,     Dump a bunch of GWT support classes out to guava \nAdd a static factory for InternetDomainName which does full RFC 3490 validation \nAdd MapMaker evictionListener() \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=80001\n\n\ngit-svn-id:    googlecode com/svn/trunk@71 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5404,     Latest code dump \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=\n\n\ngit-svn-id:    googlecode com/svn/trunk@68 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5405,     bump maven version \n\ngit-svn-id:    googlecode com/svn/trunk@66 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5406,     Final code update for r06 (@since tags) \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@61 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5407,     Getting jdiff working more completely  so that a report can always be viewed of\nthe differences between the head revision and the most recent release \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@59 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5408,     Fix bug in InetAddresses and performance problem in InternetDomainName (changed\nfrom regex to CharMatcher) \n\nThis is intended as the last code update before release 06 \n\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@58 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5409,     Code update  only minor javadoc changes \n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=42003\n\n\ngit-svn-id:    googlecode com/svn/trunk@56 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5410,     Spot-fix two corrupted characters again  MOE bug fix on the way next week \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@54 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5411,     ImmutableMultiset:\n- add of() overloads up to 6 elements\n- add copyOf(E[ )\n- deprecate of(E[ )\n\nInetAddresses:\n- partially fix bug in calculation of dotted quad values\n\nUnsignedBytes:\n- new toInt(byte) method\n\nShorts:\n- fix unfinished javadoc (oops)\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=38003\n\n\ngit-svn-id:    googlecode com/svn/trunk@53 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5412,     Spot fix for some Chinese characters that got corrupted by our experimental new\ncodebase-pushing tool \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@52 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5413,     Change on 2010/06/17 by cpovirk\n\n\tRename toStringBuilder() parameter from  object  to  self  in an attempt to discourage people from passing a String  Class literal  etc   e g  \n\tAdd a @param tag for it \n\n\nRevision created by MOE tool push_codebase \nMOE_MIGRATION=29017\n\n\ngit-svn-id:    googlecode com/svn/trunk@50 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5414,     Revision created by MOE tool push_codebase \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@49 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5415,     Turn on linksource when generating javadoc -- why didn t we do this sooner?\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@47 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5416,     Code updates  Nothing particularly noteworthy \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@44 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5417,     Updates \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@43 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5418,     Updates \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@42 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5419,     Make existence of mvn signing plugin dependent on providing a key name/id as a proper parameter \n\ngit-svn-id:    googlecode com/svn/trunk@39 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5420,     re-add a script for maven deployments\n\ngit-svn-id:    googlecode com/svn/trunk@38 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5421,     Last little fixes for release 05  will write up release notes on Monday \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@34 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5422,     remove maven parallel tree for sub-artifacts    they won t break down this way necessarily  and guava is small enough to be a single dependency   we ll just ship monolithic  per the mailing list conversation \n\ngit-svn-id:    googlecode com/svn/trunk@33 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5423,     Next code drop  r05 should be later today \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@32 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5424,     Source and javadoc update; this will likely be r05 \nNew: com google common net!\nFixed: MapMaker bug (expired entries were appearing in collection views)\n\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@31 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5425,     A few final tweaks before release 04 \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@28 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5426,     Adding tests for common base  just to start the process of exposing them \nalthough they are not yet in a compiling state (they rely on other libraries we\nneed to copy out as well) \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@27 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5427,     Bump maven pom versions to r04-SNAPSHOT (where they should be) \n\ngit-svn-id:    googlecode com/svn/trunk@26 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5428,     Big code drop in prep for cutting r04 next week \n\nBrand new MapMaker implementation (expiration works way  way better) \n\n Initial @Beta release:\n  Itera*s get(3-arg)\n  Files createParentDirs\n  ForwardingListenableFuture\n  ThreadFactoryBuilder\n \n Initial release skipping @Beta:\n  Sets powerSet\n  ForwardingBlockingQueue\n \n Exiting @Beta:\n  Charsets\n  Objects toStringHelper\n  Objects firstNonNull\n  Strings\n  Suppliers memoizeWithExpiration\n  Throwables (except 2 methods)\n  ComparisonChain\n  ByteArrayData In Out put\n   In Out putSupplier\n  ForwardingFuture\n  UncheckedTimeoutException\n\nVarious miscellaneous improvements \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@25 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5429,     add a convenient script for doing maven deployments - currently uses the default pgp key of the user deploying  which is acceptable to Sonatype \n\ngit-svn-id:    googlecode com/svn/trunk@24 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5430,     add Kevinb to the developers  section \n\ngit-svn-id:    googlecode com/svn/trunk@23 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5431,     Rename guava-complete to just guava per a conversation with kevinb regarding older naming decisions \n\ngit-svn-id:    googlecode com/svn/trunk@22 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5432,     woops   remove dummy distributionManagement which is in the parent google pom \n\ngit-svn-id:    googlecode com/svn/trunk@21 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5433,     Add maven metadata and a faux maven project hierarchy for multi-module support to build this as several smaller maven modules  as well as the monolithic jar \n\nAlso  add a README maven to talk about this in general\n\nLastly  add a note in README about needing a 1 5 JDK that includes the @Overrides patch  since we use @Overrides to override interface methods  not just concrete/abstract class methods \n\ngit-svn-id:    googlecode com/svn/trunk@20 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5434,     guava-src-r03 zip is a better name than src-r03 zip \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@14 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5435,     Final tweaks for r03 and rebuild javadoc \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@13 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5436,     Huge new source dump for source release 3  which will also become our first\nbinary release shortly \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@12 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5437,     Some fixes to java5-compatible compilation\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@11 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5438,     ARGHGH  guess I was in the wrong directory when submitting    amateurs   \n\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@9 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5439,     Copy in the Google Collections 1 0-final sources  unmodified  Next step:\nrefresh them with newer versions \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@6 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5440,     Update google collections dependency to rc3 \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@4 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5441,     very minor tweaks to make consistent with internal copies  ignore \n\n\n\ngit-svn-id:    googlecode com/svn/trunk@3 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5442,     Initial code dump: version 9 09 15\n\n\n\ngit-svn-id:    googlecode com/svn/trunk@2 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5443,     Initial directory structure \n\ngit-svn-id:    googlecode com/svn/trunk@1 8138a162-5c33-11de-8abc-d1c337b90d21\n  
5444,     48147/0002: zmathfunc: Fix bug where the exit code would be non-zero if the expression evaluted to zero \n  
5445,     48147/0001: tests: Add a unit test for zmathfunc and a regression test for workers/48146 affecting it \n  
5446,     48105: Update ctags completion with format fix\n  
5447,     48096: New ctags completion\n  
5448,     48094: apply cleanup commands of the current theme on any theme change\n\n* Rename zstyle `cleanup  on the context `:prompt-theme  to `restore \n  everywhere but in prompt_cleanup()  It is only used as a restore\n  mechanism now \n* Ensure prompt_cleanup() continues to store its command list in the\n  `cleanup  style \n* Clean up before theme switch at the end of set_prompt() \n* Prepend every use of prompt_*_setup (which might modify the shell\n  state in ways that require cleanup) with a cleanup run \n* Adjust `prompt restore  to do both parts of the newly split restore\n  mechanism  cleanup first \n  
5449,     47867: Fix RPROMPT typo in prompinit\n  
5450,     users/26509: fix for r -L\n\nfc with the -L option should ignore remote entires  rather than\nreading them and treating them as an error \n  
5451,     48073: Add fc -s as POSIX way of rerunning command without starting editor\n  
5452,     Allow more scripts without #!\n\nThis change modifies the zsh binary safety check surrounding execve() so\nit can run shell scripts having concatenated binary content  We\ re using\nthe same safety check as FreeBSD /bin/sh [1   POSIX was recently revised\nto require this behavior:\n\n     The input file may be of any type  but the initial portion of the\n     file intended to be parsed according to the shell grammar (XREF to\n     XSH 2 10 2 Shell Grammar Rules) shall consist of characters and\n     shall not contain the NUL character  The shell shall not enforce\n     any line length limits  \n\n     Earlier versions of this standard required that input files to the\n     shell be text files except that line lengths were unlimited \n     However  that was overly restrictive in relation to the fact that\n     shells can parse a script without a trailing newline  and in\n     relation to a common practice of concatenating a shell script\n     ending with an \ exit\  or \ exec $command\  with a binary data payload\n     to form a single-file self-extracting archive   [2  [3 \n\nOne example use case of such scripts  is the Cosmopolitan C Library [4 \nwhich configuse the GNU Linker to output a polyglot shell+binary format\nthat runs on Linux / Mac / Windows / FreeBSD / OpenBSD \n\n[1     com/freebsd/freebsd-src/commit/9a1cd363318b7e9e70ef6af27d1675b371c16b1a\n[2     net/view php?id=1250\n[3     net/view php?id=1226#c4394\n[4     lol/cosmopolitan/index html\n  
5453,     47830: Fix some documentation typos\n  
5454,     unposted (Daniel): add exclusion list missed in recent OpenBSD update to locale completion\n  
5455,     github #68: support section suffix completion for man pages\n\nSupport prepend and suffix values for insert-sections\nAdd values for insert-sections for zstyle completion\n  
5456,     47905: Add leading  -  to zparseopts option parsing errors\n  
5457,     47997: Disable XTRACE around user-defined completion widgets \n  
5458,     47944: update completions for NetBSD 9\n  
5459,     47943: update completions for DragonflyBSD 5 8 3\n  
5460,     47932: update completions for procps 3 3 16\n  
5461,     47931: update completions for OpenBSD base up to 6 8\n  
5462,     47930: update completions for FreeBSD base up to 12 2\n  
5463,     47929: complete newer possible values for the sort style\n  
5464,     based on github #62: return proper exit status\n  
5465,     github #66: Add more commands to _todo sh\n  
5466,     github #63: fix regression caused by 44274  with sort style -o could break _values\n  
5467,     github #72: Fix unix command lldb tab-completion\n\nThe --arguments are space (` `) separated  not equal-sign (`=`) separated \nlldb --correct c_arg --wrong=w_arg\n  
5468,     gitlab !16: Allow spaces between short options and their parameters in _transmission\n\nThis matches the summary listed in the `transmission-remote` man page and the program s actual behavior \n  
5469,     47919: use common function for completing BSD login classes\n\nalso update for options to env on FreeBSD and Dragonfly\n  
5470,     47918: new util-linux completions for nsenter and unshare\n  
5471,     unposted: Add cindex entries for some subsections\n  
5472,     47895: Remove trailing spaces from  print -ac  output lines \n  
5473,     47865: More tests for globbing in restricted directories\n  
5474,     47889: Update csh aliasing equivalences\n  
5475,     47899: Improve error message from zparseopts \n  
5476,     47883: _awk: support gawk ver 5\n  
5477,     47873: Improve completion within dynamic directory names\n  
5478,     47744: Fix vi repeats with hooks in use \n  
5479,     unposted: Etc/FAQ yo: Fix a typo in the front matter \n  
5480,     github #71: _xrandr: Complete providers\n\n * complete `xrandr --setprovideroutputsource` by calling `xrandr\n   --listproviders`\n  
5481,     users/26406: preserve caller setopts in zargs\n  
5482,     47849: do not skip tests requiring zpty on Cygwin\n  
5483,     47840: make zpty module work on Cygwin\n  
5484,     NEWS: Catch up on new features\n  
5485,     47731 (+unposted): add run-help assistant for btrfs\n\nalso fix format errors in contrib yo\n  
5486,     43946: call run-help for the command given to sudo\n  
5487,     unposted: index compprefuncs and comppostfuncs\n  
5488,     unposted: vcs_info-examples: Fix condition\n  
5489,     47716: Etc/BUGS: Add Alekxandr s vcs_info patch \n  
5490,     47704: fix scope for  private -p \n  
5491,     unposted: missed update from users/26150 commit\n  
5492,     users/26150: note failure of multios with exec\n  
5493,     47547: docs: Specify the exact kind of quoting which is assumed when parsing arithmetic expressions\n  
5494,     47560: add includes/prototypes for tests in configure\n\nOn macOS 11 0 it is now an error to use a function without prototype \n  
5495,     unposted: Fix typo  my be  for typeset\n  
5496,     users/26107: complete changed files after git diff HEAD\n  
5497,     47494  47495: Add -n option to strftime\n  
5498,     47302: Test for print -v fix\n  
5499,     47301: Fix print -v metafication\n  
5500,     Fix a race condition in zf_mkdir -p\n\nIf ~/foo does not exist and `zf_mkdir -p zf_mkdir -p` is executed\nconcurrently in multiple shells  it was possible prior to this patch\nfor the command to fail with EEXIST \n  
5501,     47468: Doc/Zsh/contrib yo: Fix typo\n  
5502,     users/26088: docs: zle -R: Clarify that it needs not be called in the normal course of things  but only when an immediate  interim redisplay is desired \n  
5503,     github #65: _nmap: Rename option flags (s/_/-/g)\n\nNmap commands that previously included an underscore (--max_rtt_timeout  --send_eth  --host_timeout  etc ) have been renamed to use a hyphen in the preferred format \n  
5504,     47395: _store_cache: Don t leak the variable $ _cache_dir  \n  
5505,     Unposted - fix comment\n  
5506,     47364: Enable extendedglob in pattern with $ (*)name/pattern/replacement \nMikael Magnusson: 47382: Completion for 47364\n  
5507,     47352 (+ extra test cases): fix %<n>K prompt expansion\n\nFixed a regression introduced by workers/30496 (5 0 3) whereby %2K would\nno longer be the equivalent of %K 2  (%K green ) in prompt expansion \n\nThat was one missing case where the is_fg flag was not passed along to\nmatch_colour() after code factorisation \n\nAdd tests for the different syntax variants  using echoti\nas a reference \n  
5508,     unposted: remove periods from completion descriptions\n\nAs per the completion-style-guide recommendations \n  
5509,     47350: new dropbox command line client completion\n  
5510,     github #64: Fix a build-time error when building against ncurses that hadn\ t been built with --enable-wgetch-events \n\nThe --enable-wgetch-events codepath is experimental (according to\nncurses-6 2/INSTALL) and off by default (according to\nncurses-6 2/configure in)   With that codepath disabled  the macro\nKEY_EVENT is not provided  which (before this commit) manifested as a\nbuild-time error:\n\n    [  245s  gcc -c -I  -I  /  /Src -I  /  /Src -I  /  /Src/Zle -I   -DHAVE_CONFIG_H -DMODULE -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector-strong -funwind-tables -fasynchronous-unwind-tables -fstack-clash-protection -Werror=return-type -flto=auto -g -fPIE -D_DEFAULT_SOURCE -D_XOPEN_SOURCE=600 -I/usr/include/ncursesw -fPIC -o curses  o curses c\n    [  246s  In file included from curses c:210:\n    [  246s  curses_keys h:93:15: error: \ KEY_EVENT\  undeclared here (not in a function); did you mean \ KEY_RESET\ ?\n    [  246s     93 |       EVENT   KEY_EVENT  \n    [  246s        |               ^~~~~~~~~\n    [  246s        |               KEY_RESET\n\ncurses_keys h is only used for setting the  kevent  output parameter of\n\ zcurses input\  (and the associated $zcurses_keycodes special variable) \nso there\ s no harm in just leaving KEY_EVENT out of it   (That codepath\ndeals gracefully with numeric values that don\ t correspond to any of the\nknown compile-time values  as that can happen whenever the build- and\nrun-time versions of ncurses don\ t provide the same set of KEY_* macros \nwith or without relation to that configure flag )\n\nReported by Martin Liska \n  
5511,     47328: remove references to old zsh org mail addresses\n  
5512,     47322: allow prefix with ssh cipher completion and add matching control for options\n  
5513,     47323: _rpmbuild: Complete file arguments after -r/-b/-t \n  
5514,     unposted: add ChangeLog entries for previous commits\n  
5515,     47307: edit-command-line: restrict editing to region if it is active\n  
5516,     47306: edit-command-line: add editor style\n  
5517,     47305: edit-command-line: when possible  set $BUFFER directly\n\nThis avoids the send-break which is both visually unappealing and might\nbreak some use cases where the user wishes to wrap edit-command-line in\nanother widget \n  
5518,     47304: _globflags: support specifying more than one flag where appropriate\n  
5519,     ChangeLog: Note that the last commit contained a minor unposted tweak \n  
5520,     47314: is-at-least false positive (5 8 0 2 / 5 8)\n\nActual behaviour:\n\n    % is-at-least 5 8 0 2 5 8 && echo yes || echo no\n    yes\n    % is-at-least 5 8 0 2 5 8 0 0 && echo yes || echo no\n    no\n\nExpected behaviour: Both commands should have printed  no  \n  
5521,     47313: docs: Document explicitly that the :P modifier returns a symlink-less path \n  
5522,     47320: Add completion for Linux tool used to adjust process OOM score\n  
5523,     47321: update completion for btrfs 5 4\n  
5524,     47319: complete more options to ImageMagick s convert command\n  
5525,     47294: updates to options in aptitude completion\n  
5526,     47293: lowercase completion descriptions for lp\n  
5527,     47308: zsh-development-guide: Document the new X-Seq autoreply bot \n  
5528,     47303: vcs_info hg: Fix changing the expansion of %g (hook_com[guards ) in the set-patch-format hook (regression from workers/40480) \n\nTo reproduce  go to a hg repository with active mq guards and configure\nvcs_info as follows:\n\n    zstyle  *  get-unapplied true\n    zstyle  :vcs_info:*set-patch-format*  hooks f\n    zstyle  *  patch-format  [%g : %G  \n    zstyle  *  nopatch-format  [%g : %G  \n    zstyle  *  formats  %m \n    +vi-f ()  \n    \thook_com[guards +=XXX\n     \n\nThe regression was first released in 5 3 1-test-2  over three years ago \n  
5529,     unposted: Update documentation for the move to new hosting \n  
5530,     47296 (+ unposted additional tests and comments):  repeat  loops: Let the repeat count use $? \n\nIt s an arithmetic expression \n  
5531,     47300: Document the EC_NODUP  EC_DUP  EC_DUPTOK triplet \n\nAll uses reviewed; no functional change \n  
5532,     unposted: Correct the order of two recent ChangeLog entries\n  
5533,     unposted: fix syntax errors in recently added completers\n  
5534,     46280: compinit: add -w to explain why compdump runs\n  
5535,     unposted: Fix the format of recent ChangeLog entries \n\nAdd the list of changed files to the last three ChangeLog\nentries by roman perepelitsa@gmail com \n  
5536,     unposted: Add missing entries to ChangeLog \n\nThe last 3 commits from <roman perepelitsa@gmail com> are missing\nfrom ChangeLog  This commit add the missing entries \n  
5537,     unposted: comments explaining how hashtable must be created\n\nSee zsh-workers 46277  46278  46279 \n  
5538,     46275: eliminate undefined behavior caused by redefinition of hashtable\n\nstruct hashtable has different set of data members in different\ntranslation units  This is undefined behavior \n  
5539,     46268: suppress a useless compiler warning around nice()\n\nFrom nice(2):\n\n    To detect an error  set errno to 0 before the call  and check\n    whether it is nonzero after nice() returns -1 \n  
5540,     46244 (cont ): Flesh out the TODO from the previous commit \n  
5541,     46244: Start to introduce a release managers keyring \n  
5542,     github #61: _parameters: Don t leak the variable $i\n  
5543,     46240: Make the expansion of manref()() in ztexi yo match its expansion in zman yo \n\nThe difference was mostly harmless in the common case  (see manref(foo)(42))  \nwhich expanded to  (see man page foo(42))  under ztexi yo  but in other\ncontexts the ztexi yo expansion was was nonsensical; for example:\n\n     the BSD manref(echo)(1) command \n\n     the string returned by the manref(getlogin)(3) system call \n\n     advisory file locking (via the manref(fcntl)(2) system call) \n\n     this is the exact opposite from manref(ls)(1)  \n\nWhile there  copyedit some uses of manref()() \n  
5544,     46183: New XFail test: external command with =(   ) on LHS of pipeline cleans up its tempfiles \n  
5545,     unposted (cf  GitHub #11): vcs_info hg: docs: Change an example to not use a hex dump incantation that may replace some bytes  values with asterisks \n\nDiscussion:    com/zsh-users/zsh/pull/11#issuecomment-457970494 et seq\n\nIncidentally  GitHub #11 is also where workers/39786 (commit\nzsh-5 2-578-g74aa45910) was first reported \n  
5546,     users/24985: Clarify documentation of the $ (n)  and $ (-)  parameter expansion flags  and add a forward compatibility hatch to the latter \n  
5547,     46204: Fix new test case for the theoretical case of having more than 100 files in the root directory \n  
5548,     unposted:  editorconfig: For Makefiles  make the indent size equal to tab width \n  
5549,     46152: zsh/system: Re-allow  0  timeout in zsystem flock\n  
5550,     46215: make the test for RM_STAR_SILENT work on wider systems\n  
5551,     46216: update for ansible 2 9\n  
5552,     46217: update options for tmux 3 1\n  
5553,     github #60: Fix completion for a zfs dataset containing spaces\n  
5554,     gitlab !15: modutils completion: Fix FHS assumption\n\nRemove calls to programs from /sbin/ with _call_program and to avoid the\nsystem complies to the FHS \nSupport modules completion for NixOS and Guix which store their kernel\nmodules not at /lib/modules \n  
5555,     46201: add guidelines for caching and use of imperative mood in descriptions\n  
5556,     46195: use showrgb command to get colours if it is available\n  
5557,     github #50: Complete hosts in  Match  directive\n  
5558,     github #53: Allow specifying directory name for _remote_files\n  
5559,     46189: Ignore exit status of final zpty_flush in comptesteval\n  
5560,     github #58: docs: Note that the zsh/regex syntax is platform-dependent \n  
5561,     46194: docs: metafaq: Remove spurious closing bracket\n  
5562,     46175/0003: Fix the RM_STAR_SILENT bug from the parent commit \n  
5563,     46175/0002: Add a regression test for 46169: the RM_STAR_SILENT logic processes the current directory rather than the root directory \n\nThe bug will be fixed in the next commit \n  
5564,     46175/0001: Add a unit test for the RM_STAR_SILENT option \n  
5565,     46174/0002: test harness: Restore indentation after the previous commit  No functional change \n  
5566,     46174/0001: test harness: Plug a symlink attack\n\nThe test harness created tempfiles with a predictable names and sourced\nthem without verifying they had been created by itself   This opened\nanyone who ran the test suite to a symlink attacks from other local\nusers on the build machine \n\nFix this by creating the file whilst NO_CLOBBER and ERR_EXIT are both in\nscope  to ensure that we ll abort unless the file really was created as\nexpected \n\nPut the existing rm(1) call in a try/always block to help it be unlinked\non test failures  thus reducing the chances of the NO_CLOBBER check\ntriggering on tempfiles created by earlier test suite runs \n\nI had first tried to fix this by using the\n \n    ()         =(:)\n \nidiom  but couldn t get that to work: it broke the %prep code of X03\nwith ZTST_verbose unset (its default value) but not with ZTST_verbose=3 \n(I tried to set the latter to debug zpty_flush )\n\nWhile there  add a needed-in-principle-but-noop-in-this-specific-case (q) \n\nIndentation will be restored in the next commit \n  
5567,     46168: Update $PWD and call chpwd hook after normalizing path\n  
5568,     unposted (cf  users/24972  users/24978): Use an ASCII hyphen/minus rather than a dash \n  
5569,     users/24971: $ (-)var  sorts on signed integers\n  
5570,     46097: Fix  assignment to invalid subscript range  error in _rm \n\nSee 46090 for details \n  
5571,     46132: docs: Use an itemized list in the documentation of the *(o) glob qualifier \n\nThis should be easier to read  both as a tutorial and as a reference \n  
5572,     46131: _git-config: Partly fix a bug whereby a \ foo ba<TAB>\  wouldn\ t be completed to \ foo bar baz\  \n\nNow it properly gets completed  but in the case of gpg openpgp program \nthe description would be shown as  unknown option name   that being the\ndescription of gpg * program via `git help -c`  which shadows the\nmore description of gpg openpgp program in $git_options \n  
5573,     46128: _git: Complete more options and diff/merge tools \n  
5574,     46129: _git-config: Fix a bug where a second trailing dot would be incorrectly offered \n  
5575,     46130: _git-config: Complete some more options \n  
5576,     46140: _git: Fix insufficiently quoted pattern\n  
5577,     46139: _git: Remove hanging whitespaces\n  
5578,     unposted (after 46068): Fix a compiler warning \n\nThe warning was:\n \n    warning: passing  const char *  to parameter of type  void * \n    discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers \n  
5579,     46072 + 46136: Add the  zle $widget -f nolast  syntax  to improve add-zle-hook-widget support for multiple hook functions \n\nSee workers/46004 for the use-case \n  
5580,     users/24959/0002: Update aliases documentation for the addition of the ALIAS_FUNC_DEF option \n  
5581,     users/24959/0001: Extend documentation of global aliases \n  
5582,     unposted: docs: Fix some markup and typos \n  
5583,     46100: Fix =subst before =(subst)\n\nThis occurs with SH file expansion ordering \n\nAdd test \n  
5584,     unposted c f  46034: workaround incompatibility with sh_file_expansion option\n  
5585,     46106: new usbconfig completion\n  
5586,     46105: new xinput completion\n  
5587,     46075: drelo: prefer ip on linux for finding network interfaces\n  
5588,     45895: ignore deduplication patterns in _sequence\n  
5589,     46068 (tweaked) (was: github #57): region_highlight: Add memo= support \n\nThis is useful when multiple plugins add region_highlight entries and\nsubsequently want to remove only their own entries   Without this\nfunctionality  recognizing one s region_highlight entries is not trivial\nbecause the  start  and  end  offsets are modified by editing of $BUFFER\nand the highlight specification may not be unique or distinctive \n\nThe tweaks are as follows:\n\n- Change zfree() to zsfree() per workers/46070 \n\n- Remove the mem c hunk  as it changed the signature of only one out of\n  two alternative definitions of zsfree()   (The definition that hunk\n  touched is the one that s not used by default )\n  
5590,     46102: test harness: Make the XPass message distinct from the Fail message \n\nThe new output is:\n\n     /Test/B02typeset ztst: starting \n    Test  /Test/B02typeset ztst was expected to fail  but passed \n    Was testing: this is the description that s after the colon on in the ztst file\n     /Test/B02typeset ztst: test XPassed \n    **************************************\n    0 successful test scripts  1 failure  0 skipped\n    **************************************\n    make[1 : *** [Makefile:190: check  Error 1\n    make: *** [Makefile:263: check  Error 2\n\nThe new function is deliberately very similar to ZTST_testfailed() just\nabove it \n  
5591,     46079: Ignore double quotes in math expressions \n\nTreat as white space \n\nThis is required for compatibility and previously had no use in zsh\nas it generated an error \n  
5592,     46091: Add code to Mercurial VCS backend to show topic if there is any \n\n Topics  is an experimental concept in Mercurial that augments the\ncurrent branching concept (called  named branches ) \n\nFor more information  see the not always up-to-date Mercurial Wiki page\n   mercurial-scm org/wiki/TopicPlan \n  
5593,     46044 (tweaked per Matthew): _units: Correct the path to the units data file on Debian with units 2 00 and newer and on FreeBSD \n  
5594,     46067: Add a unit test for workers/46060 \n  
5595,     46060: Fix spurious actions on exit status 130 or 131 \n\nEnsure process has taken a signal before looking for SIGINT or SIGQUIT \n  
5596,     45982: _zfs: add space property\n  
5597,     unposted: internal: ztst vim: Recognize empty  F:  line as well  as the test harness does \n  
5598,     46049: docs: Correct the sense of the single-letter abstract of the GLOBAL_RCS option (-d)\n  
5599,     gitlab !12: completion for mat & mat2\n  
5600,     46036: fix colouring in prompt completion\n  
5601,     users/24892: fix local declaration with recursive-files style and complete it for zstyle\n  
5602,     unposted: zstyle docs: Fix typo \n\nThis manifested as a trailing non-underlined   RE  in the rendered man page \n(I guess that was a man page directive  but I\ m not sure how the extraneous\nclosing parenthesis caused it to be rendered in the output )\n  
5603,     46026: Add CLOBBER_EMPTY option \n  
5604,     unposted: Add 45400 (vared in subshells) plus remarks on users/24904 \n  
5605,     users/24909: Don t clean up special file list too early \n\nWhen running a function  remove special files used for substitution\nafter the function has run rather than before \n  
5606,     gitlab !14 (fixup): modutils comp: Fix getting the value of kver from opt_args\n  
5607,     45932: FAQ (3 1): Update ksh compatibility answer for reserved word typeset \n  
5608,     45933: FAQ: Add  Why does my bash script report an error when I run it under zsh?  \n  
5609,     45791 (tweaked): FAQ: Explain how to binary search one s dotfiles\n  
5610,     unposted: FAQ: Update section number in links to the  The future of zsh  section \n  
5611,     unposted: Add users/24904 to Etc/BUGS (a process substitution / forking issue) \n  
5612,     typeset: Fix leaving corrupted entries in paramtab\n  
5613,     45950: Fix  make install  in out-of-tree tarball builds \n\nSee workers/45936 for the failure mode and workers/45943 for an earlier\nrevision of the patch \n  
5614,     45940: Add _kdump and _ktrace completers and supporting _ktrace_points type\n  
5615,     45939: Add _pgids type\n  
5616,     gitlab !14: modutils completion: Fix getting the value of kver from opt_args\n\nTo get the _value_ of either of the options -S  -k or --set-version \nthe (i) subscript flag is not needed \n  
5617,     45915: fix handling of hyphens in spckword()\n  
5618,     45934: _subversion: Make  svnliteadmin  completed same as  svnadmin \n\nIn FreeBSD base system svnadmin is installed as  svnliteadmin   So\nmake  svnliteadmin  completed same as  svnadmin  \n  
5619,     unposted: zyodl vim: Highlight the word  note   like ft=help does \n  
5620,     unposted: zyodl vim: Highlight yodl continuation line marker\n  
5621,     45923 (with memory leak fixed  cf  45924): zprof: Don\ t tally all anonymous functions as though they were a single function named  (anon)  \n\nBefore:\n\n    % zmodload zsh/zprof\n    % () :\n    % () :\n    % zprof\n    num  calls                time                       self            name\n    -----------------------------------------------------------------------------------\n     1)    2           0 08     0 04  100 00%      0 08     0 04  100 00%  (anon)\n\nAfter:\n\n    % zmodload zsh/zprof\n    % () :\n    % () :\n    % zprof\n    num  calls                time                       self            name\n    -----------------------------------------------------------------------------------\n     1)    1           0 04     0 04   50 45%      0 04     0 04   50 45%  (anon) [:3 \n     2)    1           0 04     0 04   49 55%      0 04     0 04   49 55%  (anon) [:2 \n  
5622,     45900: Fix issues with escaped newline in $-substitution \n  
5623,     45884 (Oliver s  edited by me): Add a few entries \n  
5624,     45862: Add test cases for 45843#1 and 45843#2  adapted from Aaron Esau and pws \n  
5625,     unposted: fix date of previous commit\n  
5626,     unposted: bump config guess and config sub\n\nProblem\n\nconfig guess and config sub are out of dated reducing cross-platform\ncompatibly \n\nSolution\n\nUpdate them \n  
5627,     unposted: remove blank line that messed up  man  formatting\n  
5628,     45831: Add _vi completer\n  
5629,     users/24843: zshcompsys(1): Point to the  format  style from the  tag-order  style \n  
5630,     unposted: Add tests for previous commit\n  
5631,     Support $ name:offset:length  with an empty offset\n  
5632,     gitlab !13: tar supports zstandard (zstd)\n\nProblem\n\nVariants of tar based on libarchive or GNU tar can support extracting\nzstd based files \n\nSolution\n\nAdd this type of to _tar_archive \n\nFrom noraj <gitlab@mg gitlab com>\n  
5633,     unposted: libarchive tar can extract zip files\n\nProblem\n\nVariants of tar based on libarchive can extract zip files but\n`tar xf <tab>` does not complete this type of file \n\nSolution\n\nAdd this type of to _tar_archive \n  
5634,     unposted: Use alternation patterns rather than brace expansion\n\n(Cf  discussion on GitLab !12 )\n  
5635,     45764: Add a regression test for 45772   Test by Roman\n  
5636,     45772: Restore locale on parameter scope end \n\nCheck if relevant parameters changes and if so restore system settings \n  
5637,     unposted: Fix typo in ChangeLog\n  
5638,     unposted: add a comment about how to add a new resource\n  
5639,     45614: update _dnf\n  
5640,     45731: _debsnap: New completion function \n  
5641,     45730: _arguments: Add the -0 flag  which makes $opt_args be populated sanely \n\nAlso  write/extend docstrings for sepjoin() and zjoin() \n  
5642,     45729: internal: Add a second parameter to zlinklist2array()  analogously to hlinklist2array() \n\nWill be used in the next commit \n  
5643,     unposted: zyodl vim: Use  conceal  for some macros that expand to a single character \n  
5644,     45737 (+ docs  and update the test from 45722): zstyle: When determining the weight (specificity) of a pattern  consider the number of components before anything else  as documented \n  
5645,     unposted: Revert unintentional move from 45722 \n  
5646,     45739: docs: Clarifications about zstyle patterns \n\n- Consistently use the term  pattern  rather than  context  or  style pattern \n- Correct statements about order of precedence of patterns\n- Give the rationale for the  rule of thumb \n  
5647,     45722: docs: Change zstyle example to a non-hierarchical one\n  
5648,     45752/0002: _gcc: Complete --output like -o \n  
5649,     45752/0001: _gcc: Add  cpp and  hpp to the ignored extensions list \n  
5650,     github #56: typo: Add a single quote that had been missing\n  
5651,     unposted: README: Give the  zsystem flock  limit in pretty-printed form as well \n  
5652,     github #54: Fix dig completion error\n  
5653,     unposted: NEWS  README: Document zsh/system changes from workers/45708\n  
5654,     unposted: zsh/system: Adjust documentation from workers/45708\n  
5655,     45708: zsh/system: Enable sub-second timeout in zsystem flock\n  
5656,     45702: compsys: Improve documentation of  insert separate -sections\n  
5657,     45684: Document - glob qualifier in error cases\n  
5658,     45661: docs: Clarify the effect of KSH_ARRAYS on the (I) subscript \n  
5659,     45660: Fix crash setting vi or emacs mode on command line \n\nDelay setting the option until the module system is set up \n  
5660,     45655: _retrieve_mac_apps: Update for recent macOS\n  
5661,     45656: Document the -o emacs segfault bug \n  
5662,     Add SHORT_REPEAT option\n  
5663,     unposted: Make test platform-independent \n\nFollow-up to the grandparent commit \n  
5664,     45542: P01privileged: Use test-directory owner for auto-determined EUID/EGID\n\nPrevents failure when the repo (or its parent) has mode 0700\n  
5665,     unposted: D02glob: Fix platform-dependent test failure\n\nworkers/45583 introduced a test failure on macOS  *BSD  and Solaris  where wc\nalways outputs leading white space\n  
5666,     45649: completion: Simplify Unison completion  No functional change \n  
5667,     45646: completion: Unison: Honour the $UNISON variable\n\nBy default Unison uses the ~/ unison directory to store its cache and\nprofiles   However  this location is configurable through the $UNISON\nenvironment variable   Quoting from the manual [1 :\n\n> If the environment variable UNISON is defined  then its value will be\n> used as the name of this directory \n\nThis patch enables users to move the  unison directory and still enjoy\nzsh completion for profiles \n\n[1     cis upenn edu/~bcpierce/unison/download/releases/stable/unison-manual html#unisondir\n  
5668,     github #46: _git-restore: Complete arguments to the --source option after a  =  sign\n  
5669,     github #46: Better restrict git-restore(1) file completions\n\nAdd support to the -S and -W options \n\nRemove the facility for completing files from the tree specified by the\n--source argument since  upon testing in git 2 26 0  that doesn t seem\nto be correct behaviour   (Note git-restore(1) says the command is\nexperimental and its semantics may change )  See discussion on the PR\nfor details \n  
5670,     45644: vcs_info git: Fix current patch s name in several cases \n  
5671,     unposted: Fix syntax error introduced in 45591 \n  
5672,     45640: Fix new test when $ PWD  s value contains symlinks \n  
5673,     45627: vcs_info git: Under git-am(1) conflicts  pass to the gen-applied-string hook information on already-applied patches \n\nThe hook already receives information about the current (topmost\napplied) patch and  if the get-unapplied style is set  about future\n(unapplied) patches \n\nTested in the Functions/VCS_Info/test-repo-git-rebase-apply scenario \nafter manually converting the rebase to a «git am»   (Specifically \nI ran:\n    mkdir d\n    git rebase --abort\n    git format-patch rebase_from_this  HEAD -o d\n    git checkout rebase_onto_this\n    git am d/*\n )\n  
5674,     45625: vcs_info svn: Detect the  working copy format is too new  error \n  
5675,     45626: vcs_info: Deduplicate calling the set-branch-format hook \n  
5676,     45624: vcs_info: Set $rrn in all backends \n  
5677,     45623: _quilt: Add subcommand descriptions\n  
5678,     45622: _quilt: Categorize subcommands\n  
5679,     45584  45620: zsh/rlimits: Skip the tests for this module when it wasn t compiled in \n  
5680,     45591 (Cf  45587  45620): In the test suite  centralize testing that compiled modules can be loaded successfully \n\nHave V01zmodload ztst check that all modules enabled in config modules\nload successfully   With this change  the test files for individual\nmodules may assume that if  zmodload  fails that must be because the\nmodule hadn t been compiled in  and mark themselves as skipped in that\ncase \n  
5681,     45616: Remove token from count argument to repeat\n  
5682,     45583/0008: Extend tests to prove that what remains of xsymlinks() handles symlink loops gracefully \n  
5683,     45583/0007: Remove code that is now unreachable \n  
5684,     45583/0006: Don t use xsymlinks() in  whence -s  \n  
5685,     45583/0005: Add a test for bin_whence s symlinks resolution \n  
5686,     45583/0004: Fix segfault on resolving symlink loops\n  
5687,     45583/0003: chrealpath: Let caller decide how the return value should be allocated \n  
5688,     45583/0002: chrealpath: Make symlink resolution optional \n  
5689,     45583/0001: Add tests for the segfault on resolving a symlink loop bug (workers/45282) \n\nThis is workers/45377  extended \n  
5690,     45590/0002 (in part): zsh/rlimits: Test that ulimit letters are unique \n  
5691,     45601: fix another status in new function -T test\n  
5692,     github #51: Fix configure for cross build \n\nIn order to detect equivalence b/w various rlimit values  use compile\ntests instead of run tests  This enables configure script to run in\ncross-build environment without any side effects \n\nFrom NetBSD/pkgsrc:\n   netbsd org/bsdweb cgi/pkgsrc/shells/zsh/patches/\n  
5693,     45601: Fix status in new functions -T test\n  
5694,     45563: %z can be used for zlong in warnings and errors\n  
5695,     45583/0009: Add end-of-options guard support to  function -T  \n  
5696,     45583/0008: Add the  function -T  syntax \n\nConfig/version mk was bumped in the previous commit \n  
5697,     45583/0007: WC_FUNCDEF: Add a placeholder element \n  
5698,     45583/0006: internal: Add some comments for orientation  No functional change \n  
5699,     45583/0005: internal: Document the WC_FUNCDEF data layout for anonymous functions with arguments (follow-up to 29492)\n  
5700,     45583/0004: internal: Add some comments around wordcodes  No functional change \n  
5701,     45583/0003: internal: Add some comments around Eccstr  No functional change \n  
5702,     45583/0002: internal: Reduce some variables  visibility  No functional change \n  
5703,     45583/0001: internal: Remove a redundant assignment \n\nThe value is overwritten five lines below  without being read in the interim \n  
5704,     unposted: Deconfuse $EDITOR s balanced braces mode   No functional change \n  
5705,     unposted: $ (Z) : Convert documentation to a description block \n  
5706,     unposted: internal: ztst vim: Make sure syntax elements are only hidden if they re followed by something visible\n  
5707,     unposted: Specify tabs for Makefiles \n  
5708,     45572: _sshfs: Complete some more options\n  
5709,     45536: fix handling of 8bit character under C-locale\n\ncorrectly escape unprintable 8bit character by using \\M-\n  
5710,     45541: internal: vcs_info git: Add a test case repository for rebase-apply situations\n  
5711,     45539: vcs_info git: In non-interactive rebases  obtain applied patches  names \n  
5712,     45540: vcs_info git: In non-interactive rebases  compute patch names for unapplied patches \n  
5713,     45543: vcs_info quilt: Allow quiltcommand to be a function \n\nBefore this commit  it could only be an external command \n  
5714,     45547: vcs_info git: In interactive rebases  process gen-unapplied-string arguments like gen-applied-string arguments are processed \n\nI consider this a bugfix  since it s unexpected for -applied and\n-unapplied to differ about this \n  
5715,     45546: vcs_info git: In interactive rebases  properly support the full form of the  exec  verb \n\nThe code before this commit happened to have done the right thing:\n exec  lines were handled by the catchall forward compatibility case \nwhich happened to have had virtually the same effect as the correct\ncase   However  that was merely an accidental result   This patch makes\nthe code do the right thing deliberately  rather than by accident \n  
5716,     45545: vcs_info git: In interactive rebases  ignore comment lines \n  
5717,     unposted: _git: Fix copy/paste error in earlier commit that broke `git stash drop`\n\nThis was broken by workers/44923 (8aa84bd5fc44)\n  
5718,     45535: _lz4: Order compression levels numerically\n  
5719,     45534: _hdiutil: Update image-file extensions  image/disk formats  &c \n  
5720,     45531: _sh: Complete options more accurately\n\nCommitting without handling of +x option variants (line 10) pending resolution\nof workers/45422\n  
5721,     45537 (tweaked): E02xtrace: Fix inconsistent function-name encoding in preserves-xtrace test\n\nTweaked per workers/45550  needs workers/45536 to be effective\n  
5722,     unposted:  editorconfig: Specify spaces rather than tabs for zsh scripts \n\nAlso specify indent level for vcs_info \n  
5723,     45470: C02cond: Simplify  -N cond  test\n\nThis fixes an (intermittent?) issue with the test on macOS+APFS  and hopefully\nmakes it simpler and faster in general\n  
5724,     45424: completion: Add **/sbin to PATH when completing commands like sudo\n\n* Update _command_names to add **/sbin to PATH when not otherwise overridden\n  and _comp_priv_prefix is set  This ensures that  on systems where\n  unprivileged users don t have **/sbin in their PATHs  we can still complete\n  those commands when they try to run them with e g  sudo\n\n* Update functions for privilege-gaining commands to use the aforementioned\n  mechanism\n\n* Fix some other minor issues in _pfexec and _doas\n\nChanges from the posted diff:\n\n* Fix a minor redundancy in _doas\n\n* Add _c_p_p=(    ) hack to _su\n  
5725,     45524: Add completion for dscverify(1) from Debian s devscripts \n  
5726,     45518 + unposted tweak (change single quotes to double quotes): Fix V01zmotload ztst test failures when zsh/parameter is dynamically linked (which is the default) \n  
5727,     Merge remote-tracking branch  origin/5 9 \n\n* origin/5 9:\n  unposted: Move a new incompatibility notice \n  unposted: Fix trailing whitespace in test expectations \n  45342: Add tests for interaction between autoloadable parameters and module loading \n  45313: _git: Support completion from outside of a worktree when --git-dir/--work-tree are specified on the command line\n  45304: Do execute the always block even when the try/always block itself is the last command \n  45292: D02glob: Add regression test for macOS stat(2) misbehaviour\n  45291: A glob with a trailing slash will now match unreadable/unexecutable directories \n  45288: _git: Complete bisect/new as well as bisect/bad \n  45246: Make --disable-multibyte warn  since the test suite fails in that configuration \n  45213: Make --enable-gdbm default to false  rather than default to true with an unavoidable warning \n  unposted (follow-up to 45131): Extra testing by Mikael\n  45137: zformat: Allow the specifying minimum width and a dot with an empty maximum width \n  45138: Add zformat unit tests \n  45131: Make a function that redefines itself preserve its tracedness \n  
5728,     unposted: Move a new incompatibility notice \n\nThe change in question was (deliberately) not merged to master before the 5 8\nrelease   Therefore  it is a  post 5 8  change  even though it was written\nwhen 5 7 1 was the latest release \n  
5729,     Merge remote-tracking branch \ origin/master\  into 5 9\n\n* Test/D02glob ztst:\n  On the  unreadable directories can be globbed (users/24619  users/24626) \n  test  resolve conflicts by removing the Cygwin-only skip that has been added\n  in master  since the test is passing on this branch   This effectively reverts\n  workers/45492   See discussion starting in workers/45504 \n\n* origin/master:\n  unposted: Remove \ sgi\   as that OpenBSD port has been discontinued \n  45509: fix typos in B01cd ztst\n  45490 (+45495 and a test): refactor rlimits c\n  github #49: Fix typo: longson should be loongson\n  users/24710: Fix job control problem with sudo \n  45492: skip test added by users/24633 on Cygwin\n  45488: COMP_WORDS for bash need  $@ -style quoting\n  45487: Missing mod_export declarations for AIX\n  45447: Complete vcs_info_hookadd and vcs_info_hookdel  Expose _vcs_info_hooks as a top-level helper function \n  45463: test: kill: Document why we use SIGURG\n  45453: builtins: kill: Do not signal current process group when pid is empty\n  45452: builtins: kill: Add `kill \ \ ` regression test with explicit sigspec\n  45451: builtins: kill: Add basic test suite\n  github #48/0002: vcs_info git: properly detect bare repositories\n  github #48/0001: vcs_info git: avoid warnings in bare repositories\n  unposted: Post-release version bump\n  unposted: Release 5 8\n  CVE-2019-20044: Update change log for preceding commits\n  Update NEWS/README\n  Add unsetopt/PRIVILEGED tests\n  Clean up error-message white space\n  Improve PRIVILEGED fixes (again)\n  Improve PRIVILEGED fixes\n  Drop privileges securely\n  unposted: V01zmodload: Fix failing test from workers/45385\n  45423: _su: Improve arg handling  shell look-ups\n  unposted: _zip: Recognise \ --\ \n  45385: Add a test for \ zmodload -Fa\  preemptively disabling ( blacklisting ?) features \n  unposted: Test release: 5 7 1-test-3\n  zsh/system: Fix infinite loop in sysread\n  _diff_options: Restore -w completion lost in workers/43351\n  unposted: Fix ChangeLog typo \n  45368: Add tests for workers/45367\ s issue about double slashes in \ cd -P\  and /home/daniel/in/zsh \n  45373: Fix ERR_EXIT bug in else branch of if \n  45372: Record a symlink loop bug involving :P\n  45365: _git: Fix __git_recent_branches for the case when a commit has an empty message\n  45343: Queue signals around arithmetic evaluations\n  45344: Document where third-party completion functions should be installed \n  45345: internal: ztst vim: Fix highlighting of zsh comments in test payload\n  unposted: internal: Add some comments and fix indentation   No functional change \n  45340: internal: Document the difference between paramtab and realparamtab \n  45332: _git: add completion for git-version\n  _brace_parameter: add missing \\\n\nConflicts:\n\tChangeLog\n\tTest/D02glob ztst\n\tTest/V01zmodload ztst\n  
5730,     unposted: Fix trailing whitespace in test expectations \n  
5731,     unposted: Remove  sgi   as that OpenBSD port has been discontinued \n\nSee    openbsd org/sgi html and discussion on github PR #49 \n  
5732,     45509: fix typos in B01cd ztst\n  
5733,     45490 (+45495 and a test): refactor rlimits c\n\nUse a table of known resouces instead of generating rlimits h by\nrlimits awk \n  
5734,     github #49: Fix typo: longson should be loongson\n  
5735,     users/24710: Fix job control problem with sudo \n\nIf we use kill to test for continued existence of a process group \nwe should check on failure that the error is ESRCH  as EPERM\nindicates the group still has memebers but running privileged\nso should be left alone \n  
5736,     45492: skip test added by users/24633 on Cygwin\n  
5737,     45488: COMP_WORDS for bash need  $@ -style quoting\n  
5738,     45487: Missing mod_export declarations for AIX\n  
5739,     45447: Complete vcs_info_hookadd and vcs_info_hookdel  Expose _vcs_info_hooks as a top-level helper function \n  
5740,     45463: test: kill: Document why we use SIGURG\n\nSee discussion in workers/45460 \n  
5741,     45453: builtins: kill: Do not signal current process group when pid is empty\n\nThe following case was encountered in the wild:\n\n    % zsh; echo  $? \n    % trap \ exit 5\  TERM\n    % kill \ \ \n    5\n\nThis behaviour seems more likely to be the result of bugs in programs\n(e g  `kill -9  $unsetvar ) rather than being desirable\nbehaviour to me   It also seems unintentional judging by the code and\ndocumentation  since it comes about as a result of the fact that:\n\n- `isanum` returns true for empty strings (since an empty string\n  technically only consists of digits and minuses   );\n- `atoi`  when passed a pointer to an invalid number  returns 0;\n- `kill(0  signal)` sends the signal in question to all processes in the\n  current process group \n\nThere are (at least) two ways to solve this issue:\n\n1  Add special handling to `kill` to avoid this case  See this patch[0 \n   for a version that does that \n2  Change how isanum behaves  Since the only two call sites that use it\n   both seem like they should handle the case where the input char array\n   is empty  that seems like a reasonable overall change to me [1 \n\nAfter this patch:\n\n    % trap \ exit 5\  TERM\n    % kill \ \ \n    kill: illegal pid:\n\nThe regression test for `kill` without a sigspec is also included in\nthis commit  as previously it\ s not possible to test it trivially as it\nwould still kill the test runner in expected-to-fail mode; see\ndiscussion in workers/45449 \n\n0: workers/45426:    zsh org/mla/workers/2020/msg00251 html\n1: The other call site using isanum() is the fg builtin  but in that\n   case we just fail later since we can\ t find any job named \ \   so no\n   big deal either way  It\ s the kill case which is more concerning \n  
5742,     45452: builtins: kill: Add `kill   ` regression test with explicit sigspec\n\nThe version without a sigspec can t be added yet because it would still\nkill the test runner even in expected-to-fail mode; see workers/45449\nfor discussion  For the same reason  we use a signal which is non-fatal\nby default and unlikely to be sent by someone else  SIGURG  to do the\nexpected-to-fail case prior to the fix \n  
5743,     45451: builtins: kill: Add basic test suite\n\nThis is not totally comprehensive  but at least it s a start for the\ncore functionality  In the next commits  we ll also use this base to add\nsome regression tests \n  
5744,     github #48/0002: vcs_info git: properly detect bare repositories\n\nWe currently detect Git repositories by finding the top level of the\nworking tree  and if we fail to detect it  assume that we re not in a\nrepository   However  there s a case we don t consider: a bare\nrepository \n\nLet s detect if the user is in a bare repository by checking if gitdir\nis set  and if so  using that if there is no working tree   We now\ndetect bare Git repositories with vcs_info  as expected \n  
5745,     github #48/0001: vcs_info git: avoid warnings in bare repositories\n\nGit 2 25 introduced a change to how git rev-parse --show-toplevel\nbehaves   Traditionally  it succeeded with no output if the user was\nin a bare repository   Now it dies  printing an error to standard error \nConsequently  when the user is in a bare repository with a newer Git \nvcs_info prints noisily to standard error \n\nWhile this is functionally harmless  it is annoying for the shell to\nprint messages from Git every time the prompt is printed  so let s\nsilence the error message \n  
5746,     unposted: Post-release version bump\n  
5747,     unposted: Release 5 8\n  
5748,     CVE-2019-20044: Update change log for preceding commits\n  
5749,     Update NEWS/README\n  
5750,     Add unsetopt/PRIVILEGED tests\n  
5751,     Clean up error-message white space\n  
5752,     Improve PRIVILEGED fixes (again)\n\n* Pass RGID instead of passwd GID to initgroups()\n\n* Clean up #ifdefs  avoid unnecessary checks\n\n* Flatten conditions\n  
5753,     Improve PRIVILEGED fixes\n\n- Fix retval handling in bin_setopt()\n\n- Don t skip_setuid / skip_setgid   It s not our place to optimize away noops\n  (that might not even _be_ noops; they might change the saved uid…) \n\n- Remove HAVE_* guard checks around functions that are used unguarded elsewhere \n\n- Use bsd-setres_id c from OpenSSH to provide setresuid() / setresgid()\n  everywhere  and thus simplify the ifdef soup   Fix some preëxisting\n  bugs in the macro definitions of setuid() (do we still need that one?) \n\n- Fix zwarning() format codes for variadic arguments type safety\n\n- Restored a comment from HEAD\n\n- Fix failure modes around initgroups()\n\n- Compared privilege restoration code with OpenSSH s permanently_drop_uid() and\n  updated as needed\n\n- Add E01 PRIVILEGED sanity checks\n  
5754,     Drop privileges securely\n  
5755,     unposted: V01zmodload: Fix failing test from workers/45385\n  
5756,     45423: _su: Improve arg handling  shell look-ups\n\nDifferences from ML post:\n\n* Properly fix escaping issue with $usr (needs unescaped first)\n\n* Make $shell emptiness check easier to read (per feedback)\n  
5757,     unposted: _zip: Recognise  -- \n  
5758,     45385: Add a test for \ zmodload -Fa\  preemptively disabling ( blacklisting ?) features \n  
5759,     unposted: Test release: 5 7 1-test-3\n  
5760,     zsh/system: Fix infinite loop in sysread\n  
5761,     _diff_options: Restore -w completion lost in workers/43351\n  
5762,     unposted: Fix ChangeLog typo \n  
5763,     45368: Add tests for workers/45367 s issue about double slashes in  cd -P  and /home/daniel/in/zsh \n  
5764,     45373: Fix ERR_EXIT bug in else branch of if \n\nThe flags need resetting for this branch otherwise e g  command\nsubstitution with non-zero status doesn t cause exit \n  
5765,     45372: Record a symlink loop bug involving :P\n  
5766,     45365: _git: Fix __git_recent_branches for the case when a commit has an empty message\n  
5767,     45343: Queue signals around arithmetic evaluations\n\nThe queueing added in execarith() in 45083 is reverted since the callee\ndoes this now \n  
5768,     45344: Document where third-party completion functions should be installed \n  
5769,     45342: Add tests for interaction between autoloadable parameters and module loading \n  
5770,     45345: internal: ztst vim: Fix highlighting of zsh comments in test payload\n  
5771,     unposted: internal: Add some comments and fix indentation   No functional change \n  
5772,     45340: internal: Document the difference between paramtab and realparamtab \n  
5773,     45332: _git: add completion for git-version\n\nSigned-off-by: Eitan Adler <lists@eitanadler com>\n  
5774,     _brace_parameter: add missing \\\n  
5775,     45313: _git: Support completion from outside of a worktree when --git-dir/--work-tree are specified on the command line\n\nRevised version of workers/41523 \n  
5776,     45304: Do execute the always block even when the try/always block itself is the last command \n\nFixes the test added in the previous commit (workers/45305) \n  
5777,     Merge branch  master  into 5 9\n\n* master:\n  45305: Add an XFail test: The exec-last-command optimization is applied to try/always \n  45307: zstyle docs: Unoverload a placeholder variable name \n  45306: zstyle docs: Introduce the first synopsis in the same way as all others: with an item()() \n  unposted: docs: Fix a cross-reference \n  
5778,     45305: Add an XFail test: The exec-last-command optimization is applied to try/always \n  
5779,     45307: zstyle docs: Unoverload a placeholder variable name \n\nUse  pattern  to refer to things matched against contexts and  metapattern \nto refer to things matched against patterns \n  
5780,     45306: zstyle docs: Introduce the first synopsis in the same way as all others: with an item()() \n  
5781,     unposted: docs: Fix a cross-reference \n  
5782,     45292: D02glob: Add regression test for macOS stat(2) misbehaviour\n\nOn macOS  a privileged stat(2) call can erroneously treat files as\ndirectories  which can produce unexpected glob results  This was reported at\nworkers/42891  A side-effect of the change from workers/45291 is that it seems\nto work around this issue  at least in the obvious cases\n  
5783,     45291: A glob with a trailing slash will now match unreadable/unexecutable directories \n  
5784,     Merge remote-tracking branch \ origin/master\  into 5 9\n\nRight now  as we\ re preparing to tag the 5 8 release  the 5 9 branch is\nmaintained as a topic branch off master \n\n* origin/master:\n  45287: zshexpn: Describe parameter elision and add some introductory prose\n  45302: bin_umask(): Queue signals around umask() \n  users/24656: docs: Add an example of setting and querying zstyles\n  users/24659: Cross-ref doc for matchers \n  45296: D02glob: Clean up after test from users/24633\n  45290: New helper script for listing XFail tests \n  users/24633: Add an xfail test for users/24619 \n  unposted: additional typo fix\n  45280: _git: add -local variants\n  users/24628 (fixed): More doc for selectw-word-style widgets \n  45266: Fix losetup completion  broken in da085b7a20729401c725f91ae930200d0deda64f (41720) \n  unposted: Fix punctuation \n  use /dev/fd on Cygwin for process substitution\n  unposted: Two additional typo fixes \n  Fix typos reported by codespell in shell code\n  Fix typos reported by codespell in Src/\n  45269: Fix misspellings in completions and elsewhere \n  45261: _gcc: Detect clang-as-gcc\n  unposted: internal: Remove Vim modeline that interferes with ztst vim \n  unposted: internal: ztst vim: Use :syn-sync to work around (#x) and  `\\\\\\\\\\\\\\\\`  confusing the highlighting \n  unposted: internal: zyodl vim: Support glob qualifiers in example()\ s\n  unposted: internal: zyodl vim: Support yodl comments \n  github #44: Allow completion for picocom to list symlinks to character devices\n  45245: _gcc: add some clang specific warnings\n  45231: _rsync: When completing remote modules  ignore more of the motd \n  unposted: _tac: Eliminate superfluous variable\n  45226: _man: Improve completion of file paths\n  45184: Clarify documentation of %-sequences understood by compadd -[Xx \n  45239: Remove \ appendhistory\  from zsh-newuser-install\n  45218: add more options to swaks completion\n  45196: fix completion after make -C  allowing for -C being used multiple times\n  unposted (after 45183): Fix yodl error:  contrib yo:4457: No macro: back(   )  \n  45181: Fix workers/45164: $ (S)%%  will now consider the empty string as a potential match \n  45183: Improve documentation examples\n  unposted: Add some tests for $ (S)   including a regression test for workers/45164 \n  45169/0002 (tweaked for trailing newlines): Add an expected-to-fail test for workers/44007 \n  45169/0001: In the test suite  allow test cases to be marked as expected to fail \n  users/24582 + users/24583: Add regression tests for the previous commit \n  24581: Fix array assignments in shell word splitting and completion \n  45160: zshexpn: Expand documentation of (S)\n  45150 + 45152: zshexpn: Use a more minimal example in the documentation of (#b) \n  unposted: internal: Vim ztst support: Add an ftplugin in addition to the syntax highlighter \n  45130: _multi_parts: Always pass -f to compadd if given by caller\n  unposted: zerrmsg(): Fix macro guard missed in previous commit\n  unposted: ChangeLog for last commit\n  internal: Allow %L in zerrmsg() in non-debug builds  too \n  
5785,     45288: _git: Complete bisect/new as well as bisect/bad \n\nAlso  complete the bisect/old-$commithash ref names \n  
5786,     45287: zshexpn: Describe parameter elision and add some introductory prose\n  
5787,     45302: bin_umask(): Queue signals around umask() \n\nOtherwise  a signal handler might create files while the temporary umask\nis in effect \n  
5788,     users/24656: docs: Add an example of setting and querying zstyles\n  
5789,     users/24659: Cross-ref doc for matchers \n  
5790,     45296: D02glob: Clean up after test from users/24633\n  
5791,     45290: New helper script for listing XFail tests \n  
5792,     users/24633: Add an xfail test for users/24619 \n  
5793,     unposted: additional typo fix\n  
5794,     45280: _git: add -local variants\n\nTechnically all timezone formats support the  -local  suffix but it is\nnot meaningful for all of them  As such just list out the specific\nformats which it does \n\nAlso adjust the \ default\  description\n  
5795,     users/24628 (fixed): More doc for selectw-word-style widgets \n\nAdd example of how to add a new binding for a widget that fixes\na particular word behaviour using styles \n  
5796,     45266: Fix losetup completion  broken in da085b7a20729401c725f91ae930200d0deda64f (41720) \n  
5797,     unposted: Fix punctuation \n  
5798,     use /dev/fd on Cygwin for process substitution\n  
5799,     unposted: Two additional typo fixes \n  
5800,     Fix typos reported by codespell in shell code\n  
5801,     Fix typos reported by codespell in Src/\n  
5802,     45269: Fix misspellings in completions and elsewhere \n  
5803,     45261: _gcc: Detect clang-as-gcc\n  
5804,     unposted: internal: Remove Vim modeline that interferes with ztst vim \n\nAs an alternative  one can use:\n\n    autocmd BufRead BufNewFile **/* ztst setfiletype zsh\n\n(But see Util/ztst-syntax vim and Util/ztst-ftplugin vim for an alternative )\n  
5805,     unposted: internal: ztst vim: Use :syn-sync to work around (#x) and  `\\\\\\\\\\\\\\\\`  confusing the highlighting \n  
5806,     unposted: internal: zyodl vim: Support glob qualifiers in example() s\n  
5807,     unposted: internal: zyodl vim: Support yodl comments \n  
5808,     github #44: Allow completion for picocom to list symlinks to character devices\n  
5809,     45245: _gcc: add some clang specific warnings\n  
5810,     45246: Make --disable-multibyte warn  since the test suite fails in that configuration \n  
5811,     45213: Make --enable-gdbm default to false  rather than default to true with an unavoidable warning \n  
5812,     45231: _rsync: When completing remote modules  ignore more of the motd \n\nWe cannot use the --no-motd option because it inhibits the modules\nlisting \n\nWe cannot look for a blank line because there will not be a blank line\nif the  motd file  does not end with a newline \n\nLooking for tabs is an improvement   Any tabs in the motd will still\ncause extraneous matches  but there\ s nothing we can do about that \n\nWhile here  show the modules in the order listed \n  
5813,     unposted: _tac: Eliminate superfluous variable\n  
5814,     45226: _man: Improve completion of file paths\n  
5815,     45184: Clarify documentation of %-sequences understood by compadd -[Xx \n  
5816,     45239: Remove  appendhistory  from zsh-newuser-install\n\nIt is on by default  and new users are unlikely to want to change it \n  
5817,     45218: add more options to swaks completion\n  
5818,     45196: fix completion after make -C  allowing for -C being used multiple times\n  
5819,     unposted (after 45183): Fix yodl error:  contrib yo:4457: No macro: back(   )  \n  
5820,     45181: Fix workers/45164: $ (S)%%  will now consider the empty string as a potential match \n  
5821,     45183: Improve documentation examples\n  
5822,     unposted: Add some tests for $ (S)   including a regression test for workers/45164 \n  
5823,     45169/0002 (tweaked for trailing newlines): Add an expected-to-fail test for workers/44007 \n  
5824,     45169/0001: In the test suite  allow test cases to be marked as expected to fail \n\nSee next commit for a use-case \n  
5825,     users/24582 + users/24583: Add regression tests for the previous commit \n  
5826,     24581: Fix array assignments in shell word splitting and completion \n\nAssignments after the first were not recognised as such as without\nthe full parser the state didn t return to command position \nFix this in bufferwords() and the completion miniparser \n  
5827,     45160: zshexpn: Expand documentation of (S)\n  
5828,     45150 + 45152: zshexpn: Use a more minimal example in the documentation of (#b) \n  
5829,     unposted: internal: Vim ztst support: Add an ftplugin in addition to the syntax highlighter \n  
5830,     45130: _multi_parts: Always pass -f to compadd if given by caller\n  
5831,     unposted: zerrmsg(): Fix macro guard missed in previous commit\n  
5832,     unposted: ChangeLog for last commit\n  
5833,     internal: Allow %L in zerrmsg() in non-debug builds  too \n\nThis will let error messages include long integers \n  
5834,     unposted (follow-up to 45131): Extra testing by Mikael\n  
5835,     45137: zformat: Allow the specifying minimum width and a dot with an empty maximum width \n\nBefore this commit  format specs such as  %5 s  would be printed\nliterally   Now  they are treated as equivalent to  %5s  \n\nThe     character is not allowed to be used in specs  so there is no\nincompatibility \n  
5836,     45138: Add zformat unit tests \n  
5837,     45131: Make a function that redefines itself preserve its tracedness \n\nThis makes it easy to apply local tracing ( functions -T ) to autoloadable\nfunctions that redefines themselves when first loaded \n  
5838,     unposted: _stdbuf: Fix mismatch between the long options on the one hand  and the short options and descriptions on the other hand \n  
5839,     unposted: Fix broken build: 45109 (!) broke Test/Y01completion ztst \n  
5840,     45110: zshmisc(1): Fix markup of  try-list  and  always-list  \n  
5841,     45111: zshmisc(1): Clarify the documentation of  return  and  exit  in conjunction with try/always\n\nHaving reviewed 20076  20084  21734  and 21735  my understanding is that\nthe original intention was:\n\n- A  return  in a function does run always-list\n- An  exit  outside a function does not run always-list\n- A  return  outside a function is treated as an  exit \n\nAll of which are the case today   The remaining case  of  exit  used\ninside a function  was not specified by the referenced -workers@ posts;\ndoes  as implemented  run the always-list; and furthermore  based in\n21734 it s fair to assume that the original documentation was assuming\nthat  exit  would be used outside of any function  just like it assumed\n return  would be used inside a function \n\nTherefore  have the documentation specify only the behaviour of  exit \noutside any function  and leave the behaviour of  exit  inside\na function unspecified   Anyone who relied on the documentation of  exit \nas documented until this commit would have run into the\ndocumentation/implementation discrepancy described in 45075 \n  
5842,     45112: zshmodules: Explicitly document the return values of the  zstyle  getters -s  -b  and -a \n  
5843,     45113: vcs_info docs: Clarify documentation of the %p/%u/%a patch-format expandos \n  
5844,     45114: vcs_info quilt: Improve support for svn-style patch headers \n\nAdditional lines between the |-separated header line and the actual\nlog message  as generated by  svn log -v  and  svn log -g   are now\nsupported \n\nThis change affects you if you have quilt patches with  svn log -style\ninformation in their headers  regardless of whether you use quilt\nstandalone  quilt over svn  or quilt over some other VCS \n  
5845,     45115: vcs_info examples: Make the quilt-patch-dir example friendlier \n\n- Document that no code at all is necessary for Pareto correctness\n\n- Remove a recommendation to rely on implementation details ($ rrn );\n  instead  rely only on $ context   which is a documented API \n  
5846,     45116: vcs_info examples: Add an example of showing Git environment variables \n  
5847,     45107: ztst vim: Highlight some more special variables\n  
5848,     45108: ztst vim: Conceal the  >  or  ?  on pattern expected output / expected errput lines \n\nThis aligns the expectations given by  *>  and  >  lines \n  
5849,     45109: Add Vim highlighting file for Test/* ztst files \n  
5850,     unposted: Test release: 5 7 1-test-2\n  
5851,     45101: Adjust white space\n  
5852,     45101: Document new dev/test versioning scheme  clarify other release steps\n\nAlso clarified the purpose of dev/test releases as suggested in workers/45104 \n\nNote that the old versioning scheme remains in effect until after 5 8 final\nhas been released \n  
5853,     unposted: Group related tests   No functional change \n  
5854,     unposted: Etc/BUGS: Add two bugs discussed on -workers@ this week\n  
5855,     45055: Clarify _files documentation\n  
5856,     45083: Add signal protection to execarith() \n\nOtherwise we could get re-entrancy in memory functions when\nsetting variables \n  
5857,     45076: internal: Simplify handling of try_tryflag  No functional change \n\ntry_tryflag isn t assigned anywhere  other than at initialization and by these\nlines  so we don t need to save and restore the value \n  
5858,     45066: internal: Document forklevel  locallevel  and exit_pending \n  
5859,     45065: Make  make -s  print nothing when it does nothing \n  
5860,     45064: Fix the mktemp() warning  in debug builds only \n\nOn Linux  linking to mktemp() generates the following warning:\n \n    utils o: In function `gettempname :\n     /Src/utils c:2229: warning: the use of `mktemp  is dangerous  better use `mkstemp  or `mkdtemp \n\nThe warning cannot be disabled \n\nWork around that by using mkstemp() instead  and massage its output so\nit behaves like mktemp()   See the new comment for further details \n  
5861,     45073: regex-replace docs: Simplify grammar (avoid a double negative  state defaults first) \n  
5862,     45058: internal: Add symbolic names to possible values of zexit()\ s  from_where  parameter  No functional change \n  
5863,     Add ChangeLog entry for last commit \n  
5864,     unposted: Update comment to reflect variable rename in 41012 (= zsh-5 3 1-182-gd7110d8f0) \n  
5865,     unposted: Fix ChangeLog typo\n  
5866,     Missed out ChangeLog from previous commit \n  
5867,     44698  45000: Baptiste BEAUPLAT: Completion for sbuild\n  
5868,     github #36: Add completion file for GNU Stow\n  
5869,     45035: be explicit about the need for a # in colours specified as hex triplets\n  
5870,     45025: fix re-entrancy problem with memory management in readoutput() \n\nThis could cause a signal received during $(   ) to corrupt memory \n  
5871,     unposted: Update change log for 5 7 1-test-1\n\n(This change-log update was made after the actual release)\n  
5872,     unposted: Test release: 5 7 1-test-1\n  
5873,     45009: POSIX_CD needs to suppress some forms of option \n\nOtherwise forms of argument allowed by POSIX are interpreted as\noptions instead \n  
5874,     45001: Fix zero-length matches with $    %    \n\nAs the shortest match is preferred  zero-length matches beat any other \n  
5875,     45004: Fix typos in comments\n  
5876,     45003: Fix more documentation typos\n  
5877,     44997: GLOB_COMPLETE fix for compctl file completion \n\nDashes could cause problems in directory prefixes \n  
5878,     44976: fixup describe-key-briefly for visual mode\n  
5879,     44970: _brace_parameter: Update the description of S flag\n  
5880,     44981: Fix some typos in the documentation \n  
5881,     Revert  44904: _subversion: Complete multiple comma-separated arguments to --show-item=<TAB>  \n\nThis reverts commit b06117ad21ce8be928e64700f34f7610d45c738a \n\nReverted upstream in r1870750 \n  
5882,     44960: vcs_info cvs: Fix infinite loop when /CVS exists \n  
5883,     44961: vcs_info svn: Fix infinite loop when / svn exists \n  
5884,     44962: vcs_info: Document internal function and variable\n  
5885,     44964: zshmisc(1): Document APPEND_CREATE under the append redirection operators  >> and >>! \n  
5886,     44969: completion-style-guide: Mention defaults and superfluous descriptions\n  
5887,     unposted (cf  44967): _alsa-utils: Fix minor syntax error in arg spec\n  
5888,     unposted: vcs_info: Add an example of using $functions to find hooks by name \n  
5889,     unposted: another place to complete selinux contexts that was missed in 44781\n  
5890,     44968: cleanup and update objdump and readelf completions\n  
5891,     44967: Completion for aplay from alsa-utils\n  
5892,     unposted: zstyle: Add a unit test and some comments \n  
5893,     unposted: _sqlite: Fix syntax error\n  
5894,     44958: vcs_info quilt: Avoid forks\n  
5895,     44945: vcs_info git: Optimize detection by running fewer external commands \n  
5896,     44948: _subversion: Make _svn_controlled offer everything rather than nothing \n  
5897,     44947: _subversion: Complete the  auth    changelist    patch    resolve   and  x-unshelve  subcommands \n  
5898,     44946: _subversion: Make _svn_conflicts not offer all files in the directory \n  
5899,     44912: more quoting fixes in _expand\n\nDon t set done_quote=1 if the glob result is empty \n  
5900,     44923: update options for git 2 24\n  
5901,     44896: use opt_args to find base directory and use it for $(CURDIR)\n  
5902,     users/24451: zgetcwd: Add a guard against returning an empty string \n  
5903,     unposted: Add smoke test for :P history modifier \n  
5904,     users/24445: Add :P modifier to history code \n\nThis was in the glob qualifier and variable code but got missed out\nof the separate history modifier function \n  
5905,     unposted (salsa debian org MR!1): _ip: Complete the -brief option\n  
5906,     44904: _subversion: Complete multiple comma-separated arguments to --show-item=<TAB> \n\nUpstream revision: r1869578 (for 1 14 0)\n  
5907,     unposted: _values: Use the formal parameter s name in the docstring \n  
5908,     44897: _subversion: Complete --show-item=changelist\n  
5909,     44895: complete options for state change notifications and other improvements\n  
5910,     44882: add completion of -save-stats flag\n  
5911,     unposted: fix missing local declarations in _sequence\n  
5912,     github #41: Extend _dbus with dbus-launch completion\n  
5913,     unposted: tweak to check for openzfs rather than Solaris\n  
5914,     github #40: Teddy Heinen: adjust zfs completion to use acltype on linux instead of aclmode\n  
5915,     44864: Avoid inifinite loop in tty init \nIf we can t grab the terminal in interactive mode  give\nup after 100 goes   This is a completely arbitrary choice;\nwe simply don t know what in the system could change the\nresult of looping further \n  
5916,     44865: Try harder to link in curses module\n  
5917,     unposted: fix indentation (whitespace-only change)\n\nIndentatin in moveto was broken by 3eea35d0 (my bad)  making it\ndifficult to read  This commit reverts it to what it used ot be \nWhile at it  fix indentation in a few other places in the same\nfile \n  
5918,     44846: _dates: Fix regression caused by workers/44274\n  
5919,     c f  44831: remove completion functions for long dead projects\n  
5920,     c f  44831: remove completion functions included in upstream projects\n  
5921,     44849: completion updates for changes in OpenBSD 6 6\n  
5922,     44841: Better checking of errors from  nice \n  
5923,     44812: _subversion: Fix syntax error in 44726/0001\n  
5924,     44809: _typeset: Complete  functions -c \n  
5925,     unposted: Add missed ChangeLog entry for workers/44784\n  
5926,     44767: _description: Ignore -J\n  
5927,     44681 (tweaked): _composer: Eliminate questionable eval  fix quoting issue\n  
5928,     unposted: functions -c: Fix typo\n  
5929,     bug fix: infinite loop when tty disappears\n\nWhen TTY disappears and there is at least one fd watcher  raw_getbyte() can\nenter an infinite loop where it keeps calling poll() over and over again \n\nTo reproduce  open a terminal  start zsh and type this:\n\n  rm -f /tmp/fifo\n  mkfifo /tmp/fifo\n  exec 3<>/tmp/fifo\n  do-nothing()   \n  zle -F 3 do-nothing\n\nThen make TTY disappear  For example  kill the parent with `kill -9 $PPID`\nand close the terminal window if it s still there  Observe that zsh is\nconsiming 100% CPU  Note that do-nothing() never gets called \n\nThis patch makes the poll() loop in raw_getbyte() terminate when TTY is\nsignalling POLLHUP  This makes the behavior consistent with the case where\nTTY disappears while no fd watchers are installed \n  
5930,     44797: _git-config: Complete unknown options from  git help -c  \n  
5931,     44800: complete tmux formats\n  
5932,     44799: new pv completion\n  
5933,     44798: completion option update\n  
5934,     44783  44791: mark some repeatable options with * in the _arguments specs\n  
5935,     44788: handle newer rpm commands like rpmkeys  rpmsign and update options\n  
5936,     44782: new completions for avahi and pkgin\n  
5937,     gitlab !9: Rudimentary seafile client completion\n  
5938,     gitlab !11: luarocks: Fix/improve logic of cache validation\n\nAlso: Remove unnecessary quoting of helper function calls \n  
5939,     44781: add completion of SELinux contexts\n  
5940,     44780: add completion to getent for the utmpx key on FreeBSD\n  
5941,     44779: completion for new git switch and git restore commands\n  
5942,     unposted (see 44772): quote the string argument to zle -U\n  
5943,     44768: _tar: improve completion of long options\n  
5944,     github #38: fix completion text for git update-index --chmod\n  
5945,     44722: _make: use --always-make instead of  PHONY for GNU make\n\nUsing   PHONY  might actually execute (phony) targets then  while\n --always-make  triggers processing of all targets  respecting `-n`\n(`--dry-run`) \n(This can be seen with `make -nsp  PHONY` in\n   com/neomake/neomake/tree/76b110d49a  where it actually\ncauses infinite processing then)\n\n  PHONY  was used since the beginning here (37012f06a [1 ) \n\nAs for bmake (which also uses ` PHONY`): there does not appear to be a\nsimilar option for it \nWhile it might work better there (i e  not causing targets to be run) \nit causes an error at least when testing it quickly - which indicates\nthat it behaves as if using any other non-existing (or special) target\nthere maybe:\n\n> bmake: don\ t know how to make  PHONY  Stop\n\nThis was added in ecc0a5ece [2  (workers-39654) \n\nSince it uses `-s -f  $file  -V ALLTARGETS` with `bmake` before to get\ntargets explicitly  there might not be a reason for calling `bmake` with\n`-nsdg1Fstdout …  PHONY` additionally in the first place?!\n\n1:    com/danielshahaf/zsh/commit/37012f06a\n2:    com/danielshahaf/zsh/commit/ecc0a5ece\n  
5946,     44726/0002: _subversion: Update --show-item= completion to 1 12 0 \n  
5947,     44726/0001: _subversion: Use  svn help -v  to show global options  experimental options  and experimental subcommands (upstream issue SVN-4828  to be released in Subversion 1 13 0)\n  
5948,     github #37: Make it easier to understand what  fc -e  does \n  
5949,     44714: Take account of CDABLE_VARS while checking spelling\n  
5950,     44710: support RLIMIT_UMTXP on FreeBSD\n  
5951,     44709: incluce sys/capability h only if HAVE_CAP_GET_PROC is defined\n  
5952,     44712: Prefer any variety of ncurses to other terminal libraries \n\nWe rely on its features to provide modules where it is available \n  
5953,     44614: apt list option completion\n  
5954,     44633: complete ansible-vault actions like create  edit  etc \n  
5955,     44587: completion option updates\n  
5956,     44675: _find: Fix return status\n  
5957,     unposted: NEWS: Mention `functions -c`\n  
5958,     44664: Fix problem with temporary assignment \n foo=bar builtin  inside a function lost any variable from\nenclosing scope \n  
5959,     Copy functions using functions -c old new \nDocumentation and test \n  
5960,     44635: Don t apply STAT_NOPRINT to backgrounded jobs\n  
5961,     44637: = doesn t need quoting in awk regexp \nKnown to cause warnings in gawk 5 \n  
5962,     24102: _user_admin subuids and subgids\n  
5963,     44582: Fix foregoing commit to use DPUTS() better\n  
5964,     44566: make sure Zle doesn t crash if history entry not found\n  
5965,     44356: complete ansible callback plugins for the relevant environment variable s value\n  
5966,     44551: update for new git changes\n  
5967,     44523: Add ZTST_handler capability \n\nDefaults to runtests zsh but can be something else for alternative\ntest management \n  
5968,     44509: Prevent crash with modified path / PATH combination \n\nCrash came from  fn()   typeset -U path=($path); unset PATH;    \n\nNote PATH unset is global as only path was made local \n  
5969,     44305: Fix zsh_directory_name_generic\n\nLongest\tprefix matching was broken if there were suffixes indicating\nfurther handling \n  
5970,     unposted: FAQ updates \n\nTypo from previous change; also update old notes on\nmultibyte support \n  
5971,     43755: Fix state management for repeat uses to avoid clobbering command line when NOT a repeat\n  
5972,     44502: Quote function name for  autoload -X \n  
5973,     44495: Mention coproc under $!\n  
5974,     users/24030 (minor tweak): note on *  bla hbl ahb  \n\nThis is an expansion  not a form of pattern match   Describe\nthe problem and what to do instead \n  
5975,     44480: Don t automatically close externally visible file descroptors \n\nThese are descriptors marked FDT_EXTERNAL \n\nMake all sysopen ed file descriptors FDT_EXTERNAL \n\nMake =(   ) call closem() consistent with other substitutions \n\nDocument file descriptors are left open \n  
5976,     44469: correct error on missing option argument\n  
5977,     44446: Fix here document with file descriptor declarator \n\nAdd unit test \n  
5978,     44443: POSIX allows exporting readonly variables\n  
5979,     44435: Handling digita arguments for :h and :t \n\nPick number of leading or trailing path components to substitute \nActive in history  brace parameters  glob qualifiers \n\nAdd tests for all three environments \n  
5980,     fix multiple bugs in countprompt\n\n1  Height off by one in the presence of meta characters at the end of the line \n\nThe following prompt has height 2 but countprompt used to return 3 \n\n    PROMPT= $ (pl $COLUMNS  - ) %f $\ \\n\ \n\nYou can observe the effects of the bug with esc-x followed by reset-prompt \n\n2  Width off by one when a line is broken in the middle of a wide character \n\nAssuming COLUMNS=79  the following prompt has width 2 but countprompt used to return 0 \n\n    PROMPT= $ (pl 40  \\u3050 )   zsh -df\n\nPress ctrl-r or type ls<tab> to observe the effects of the bug \n\n3  Width off by 1-7 when a line is broken in the middle of a tab \n\nAssuming COLUMNS=79  the following prompt has width 1 but countprompt used to return 0 \n\n    PROMPT= $ (pl 10  \\t )   zsh -df\n\nPress Ctrl-R or type ls<TAB> to observe the effects of the bug \n  
5981,     Missed previous ChangeLog entry\n  
5982,     44409: update config guess and config sub to 2019-05-28\n  
5983,     44387  edited: describe some problems with restricted mode\n  
5984,     44389: update _iostat and _vmstat for BSD\n\ncommon parts are separated into _bsd_disks and _fbsd_device_types\n  
5985,     44361: Initialise variables in pattern matching \nThese are used recursively and it s a bit obscure if there\nare case where the value can leak \n  
5986,     fix cursor position with ZLE_RPROMPT_INDENT=0\n  
5987,     44364: refer to zsh base manual page in zsh all\n  
5988,     unposted: remove spurious reference to nonexistent completion function\n  
5989,     44349: completion option updates\n  
5990,     44345: fix wordcode traversal where ! without a following command could result in a crash\n  
5991,     44307: allow for atoi() returning a negative number\n  
5992,     44308: update Linux modutils completion\n  
5993,     44284: combination of -T and -p to typeset crashed the shell \n  
5994,     44290: job number exceeding int range and wrapping to a negative number crashed the shell\n  
5995,     44291: printf with argument specifier out of range for an int crashed the shell\n  
5996,     44296:  typeset Q=  X   crashed the shell \n  
5997,     44259: Ensure we can set signals to default even if ignored \n\nPreviously the shell didn t take account of signals marked as\n\nignored on entry  which was inconsistent with other behaviour \n  
5998,     unposted: Fix bad encoding in previous Y01 test patch\n  
5999,     44279: completion updates for Dragonfly 5 4  FreeBSD 12 and OpenBSD 6 5\n  
6000,     unposted: Add compset tests related to workers/44275\n\n(Provided off-list by Oliver)\n  
6001,     44275: Fix compset -p/-s multibyte inconsistency and documentation\n  
6002,     44274: allow finer control of completion match soring with compadd s -o option\n  
6003,     gitlab !6: Rudimentary rclone completion\n  
6004,     gitlab !7: Minor fixes to _lp and _gv completion\n  
6005,     gitlab !8: Support completion of installed lua rocks  versions\n  
6006,     gitlab !4: Add pandoc completion\n  
6007,     gitlab !3: Transmission remote completion\n  
6008,     github #33: Add completion file for myrepos (mr)\n  
6009,     github #35: fix _arguments spec for gem push completion\n  
6010,     44267: sort: Restore option to ignore backslashes\n\nFix regression introduced by workers/41242\n  
6011,     44271: Fix breaks propagated from until or return \n\nIf the until or return test caused continuation but there was\na pending return  breaks didn t get cancelled causing enclosing\nscope to skip commands \n  
6012,     44251: Completion: Fix various wording issues\n  
6013,     44250: Completion: Fix use of -A and -S options to _arguments\n  
6014,     44249: Completion: Handle zsh/files built-ins in _mv and _rmdir\n  
6015,     44234: _ssh: Update for OpenSSH 8 0\n  
6016,     44284: Mark SIGQUIT as ignore if ignored on entry to shell \n\nThis prevents us from re-enabling it after a fork if it is being\nignored \n  
6017,     44254: Handle error case in zgetdir() \n\nWhen retrieving path to current directory by looking for / \nensure we have actually reached / by comparing inode \nIf the current directory became invalid on some OSes including\nLinux the parent directory is valid but is the same as the\ncurrent one \n  
6018,     unposted: _pick_variant: Use $ (P) ::= rather than eval\n  
6019,     44242: Completion: Use _pick_variant -b to detect builtins\n  
6020,     43288: fix line-broken prompts\n\nWithout re-breaking the case where a newline character lands in column 0 \n  
6021,     unposted: NEWS: Document recent feature additions\n\nDocument new features and major changes introduced in 44100  44135  44155 \n44198  44200  &al \n  
6022,     44198: Add cd_silent option to suppress all cd output\n  
6023,     44168 (tweaked to remove change to errflag): Fix interrupt handling of zle -F \n\nIf interrupted by irrelevant interrupt (EINTR only is set)  don t set\nthe local error flag  just retry \n  
6024,     44214: <(   ) substitutions shouldn t grab the terminal\n  
6025,     44215: Maintain LASTWIDGET across reset-prompt \nThis avoids side effects of asynchronous notifications \n  
6026,     44202: Rewrite to use memmove() for possibly overlapping copy\n  
6027,     44210: add _findmnt and update _lsblk\n  
6028,     44202 (tweaked): _normal: Add -P to reset precommands\n  
6029,     44201: _command_name: Check for external forcing precommand\n  
6030,     44200 (tweaked): Completion: Append to precommands in _normal\n  
6031,     44199: _normal: Use zparseopts\n  
6032,     44158: Completion: Add _postgresql\n\nAdjusted to fix minor copy/paste error in __pgsql_cfg_params\n  
6033,     44160 (tweaked): Completion: Add _deb_files  match * ddeb\n\nAdd new helper function for generating Debian package/control files  use it\nwhere applicable\n\nAdjusted only for minor white-space corruption in original patch\n  
6034,     44176: warn only if off_t is longer than long\n  
6035,     44162 (tweaked): Avoid format-overflow warning in zftp c\n  
6036,     44164: Avoid stringop-truncation warning\n  
6037,     unposted: _chmod: Adjust _guard pattern\n\nPer off-list feedback from Daniel  use a more context-specific pattern\n  
6038,     unposted: _chmod: Use _guard for mode operand\n  
6039,     44156 (tweaked): zsh/system: Add note about potential flock side-effects\n\n(Minor adjustments to wording and formatting)\n  
6040,     44153: rm: Accept -R as equivalent to -r\n  
6041,     44149: _mkdir  _stat: Use _pick_variant -b\n  
6042,     44144: _builtin: Append  builtin  to precommands\n  
6043,     44155: _pick_variant: Update builtin check\n  
6044,     44147: add/update completions for procps-ng\n\nNew completions for free  pmap  slabtop  tload  Update _top \n  
6045,     44111: _git: Use `git rev-list` for log messages\n\nThis side-steps issues related to `git log` respecting settings like\nlog showSignature\n  
6046,     Update doc from previous commit \n\nMake it clear it s commands whose names begin with a /\nthat aren t hashed   Obviously commands whose paths\nbegin with a / are OK  duh \n  
6047,     44132: don t hash commands beginning with /\n  
6048,     44142: Fix hist_reduce_spaces bug \n\nWhen there were as an unstripped comment on the line the\npointer for stripping spaces could be bogus   Don t do\nany editing in that case \n  
6049,     44135: Add chmod builtin\n  
6050,     44135: _chmod: Reformat to minimize next diff  No functional change \n  
6051,     44118: use libtirpc if RPC is not in glibc\n  
6052,     44122: turn int into long to avoid overflow\n  
6053,     44100: zparseopts: Add -F option  completion  tests; improve documentation\n\n* Enable zparseopts to perform basic usage validation (aborting on an\n  unrecognised option-like parameter)\n\n* Officially document the resolution of ambiguous option specs\n  
6054,     44101: _vim: better support for nvim\n  
6055,     unposted: _zftp: Use  post  pattern matching\n\n_zftp s use of `#compdef -p`  combined with inaccurate sub-command matching in\nthe function  was causing it to clobber the completion for other commands \nnotably zf_mkdir from zsh/files  To avoid this  use -P instead\n  
6056,     44099: Completion: Add _trash\n  
6057,     unposted: ztst zsh: fix a typo\n  
6058,     44087: _getconf: Complete options  config variables on more systems\n  
6059,     44090 (re: 44085): _remote_files: Don t set QUOTING_STYLE\n\nThe syntax was incompatible with some shells  and it s probably not a big\nenough concern to work around it\n  
6060,     44085: _remote_files: Prevent ls/alias settings from mangling file listings\n  
6061,     44080: Completion: Fix several option-description typos\n  
6062,     unposted: _less: Fix typo\n\nReported here:    reddit com/r/zsh/comments/au98zv/_/\n  
6063,     44077: completion: Fix GNU _pick_variant patterns  partially fix `getent -s`\n  
6064,     44076: _column: Support Debian  add missing options  adjust wording\n\nTweaked per off-list discussion with Daniel: We agreed that it would be\nbest to side-step the wording disagreement between the BSD and\nutil-linux implementations by using our own description for -x  which\nwas borrowed from the one for `print -ca`\n  
6065,     44067: Make history read safer on interrupt \n\nRecord if a read was interrupted and if so process it in full\nnext time a read is needed \n  
6066,     c f  44062: Back off clearflag change to ZLE line init \n\nThis causes problems with failed ZLE reads that printed a message\nin the display area  in particular ignoreEOF warnings \n\nIt appears it s not needed for the overall effect of the fixes in\nzsh-workers/40302  commit 34656ec2 \n  
6067,     gitlab !5: Add new abcde completion \n  
6068,     github #31: Add new demangle style  rust and dlang\n  
6069,     unposted: Post-release version bump\n  
6070,     unposted: Release 5 7 1\n  
6071,     44034: _date_formats: Complete %9 /%N  adjust wording\n  
6072,     44033: Add completion for dos2unix/unix2dos\n  
6073,     44030: prompt: Return error for unrecognised colour name\n  
6074,     github #32: Fix a typo in the git tag completion \n  
6075,     unposted: Update release instructions\n  
6076,     44020: VCS_INFO_detect_p4: Fix infinite recursion\n  
6077,     unposted: Post-release version bump\n  
6078,     unposted: Release 5 7\n  
6079,     44012: X04zlehighlight: Fix spurious test failures on OpenBSD\n  
6080,     44011: Only use fg_start_code for non-truecolor\n\nThe sequence for truecolor uses a different prefix from palette colors\n  
6081,     44001: _brace_parameter: Complete (q+)\n  
6082,     43990: _opkg: Support gain-privileges\n  
6083,     users/23829: add and coument file-split-chars style\n  
6084,     unposted: Update for 5 6 2-test-3\n  
6085,     43974: _git: Always offer -F/-m for `git tag`\n  
6086,     43970: Update NEWS for previously unmentioned features in 5  4 5 6 \n\nAlso clarify release documentation and fix a typo mentioned in workers/43971\n  
6087,     43969: untokenize Dash for compctl with GLOB_SUBST set\n  
6088,     unposted: Add missing change-log entries for 37302 and 37303\n\ne40a14c5e (workers/37302) and dc8c39eff (workers/37303) were committed without\nchange-log entries\n\nNote also that the commit message for e40a14c5e erroneously referred to\nworkers/37202\n  
6089,     43960: Add full completion for exec and setsid\n  
6090,     43959: Add completion for strongSwan  &al \n\nAlso update _urls to complete unix:// URIs as for file://\n  
6091,     43962: Fix X04 test module_path\n  
6092,     users/23809: ZLE_HIGHLIGHT extensions \nAllow non-termcap use of colours > 7 \nAdd tests \n  
6093,     43945 (tweaked to remove test failure  noted in test):\nFix exit statuses from wait for POSIX_BUILTINS mode \nAlso add tests \n  
6094,     43944: apply NO_UNSET consistently to arithmeitc\n  
6095,     unposted: test for 43938\n  
6096,     43914 (tweaked): Add completion for Composer\n\nTweaks: Adjusted spelling  fixed minor idiomatic issues\n  
6097,     43930: Improve _multi_parts performance\n  
6098,     unposted (per 43938): Avoid segfault when unmetafying empty string\n  
6099,     43953: Fix rounding/truncation error in %  time-format specifier\n\nAlso fixes an issue where %  couldn t be used more than once in a format\nstring without strange results\n\nTweaked very slightly per workers/43954\n  
6100,     43935: Reject too-large nanosecond values given to strftime\n\n    and  in so doing  fix an error in the tests on 32-bit machines \n\nThe value for the new too-large test is changed slightly from the patch posted\nto the ML to make it test for the right thing on 32-bit machines as well \n  
6101,     43928: _alternative: Evaluate (   ) action syntax as with _arguments\n  
6102,     43921: $ \\var  should be an error\n  
6103,     unposted: updates for 5 6 2-test-2\n  
6104,     unposted  c f  43913: emulate -L zsh in edit-command-line\n\nOtherwise bad effects observed with GLOB_SUBST set \n  
6105,     43897: Add/update various completion functions\n\n* Update tail to support -q/-v on NetBSD\n* Add several new functions (with one change needed to _hosts compdefs)\n  
6106,     43895: _watch: Complete for procps/-ng watch\n  
6107,     43904 (plus tweak): zshmisc(1): document term being optional if `in word  is omitted\n\nIn code such as:\n\n> hobbes% ()   for arg do print -r $arg; done;   1 2 3\n> 1\n> 2\n> 3\n\nthe implicit positional parameters added when the `in word     \nlist is omitted also implicitly append the separator term  making\nthe above code valid  albeit seemingly violating the syntax listed\nin the documentation \n\nThis is related to the various forms of alternative syntax and is\nthe intended behavior of the parsing code  so correct the minor\ncontradiction in the for loop documentation \n  
6108,     unposted: _dig: Fix _arguments syntax error\n  
6109,     43879: vcs_info git: Fix fatal error in VCS_INFO_git_getbranch in corner case\n\nBefore this commit  the following use-case:\n\n    git checkout foo^\n    git show foo | git am\n\nwould result in a fatal error  with vcs_info_msg_N_ not set:\n\n    VCS_INFO_git_getbranch:18: no such file or directory:  git/rebase-apply/onto\n\nNow they are set correctly  and HEAD s commit hash is used \n  
6110,     43871: _files: Support `-F  (pat    ) ` as with _path_files\n  
6111,     43861: make  (#  completion safer by checking for  ) \n  
6112,     43860: Complete glob flags at start of word \n  
6113,     43854: Set tok to LEXERR on generic parse error \n\nNeeded by main loop which detects an error this way \n  
6114,     43837 plus test from Daniel: Empty string in nested subst \n\nSkip Nularg or there is a bogus character at the start \n  
6115,     43829: nearcolor c: use double instead of float\n  
6116,     43830: _cu: Complete /dev/cu *\n  
6117,     unposted: _zcat: support macOS\n  
6118,     43823: remove unnecessary metafy() in stattimeprint()\n  
6119,     43620: More care documenting command substitution including $(<   )\n  
6120,     43809: Suppress npm update checks during completion\n  
6121,     unposted (cf  43800): Update strftime completion\n  
6122,     43800: Add nanosecond support to strftime built-in\n  
6123,     43819: expand adb completion to also cover options to adb backup\n  
6124,     43818: complete math functions for other modules besides zsh/mathfunc\n  
6125,     43816: various completion option updates\n  
6126,     43817: update options in btrfs completion through to btrfs 4 17 1\n  
6127,     43813: for powerd add units  default values and allow option arguments in the same word as the option\n  
6128,     43812: allow repeats of gcc s -Wsuggest-attribute option\n  
6129,     43790: failed mailstat could leak memory\n  
6130,     43789: possible use after free clearing up math func from module\n  
6131,     43723: file descriptor could leak on fork error\n  
6132,     43793: computil could overrun buffer\n  
6133,     43791: File descriptor could be closed twice in clone\n  
6134,     43779 (tweaked): add parentheses to fix expression with cprecedences option set\n  
6135,     43805: make nearcolor module use the default colour rather than black as a fallback\n  
6136,     43804: also need to be able to turn colour attributes back into hex triples for region_highlight variable\n  
6137,     unposted: add usual copyright header to nearcolor module sources\n  
6138,     43784: clarify descriptions on options related to match sorting\n  
6139,     unposted (c f  Bart: 43739): use a correct description for the @ parameter expansion flag\n  
6140,     43788: clarify zpty -w -n with no string argument\n  
6141,     43761: update five completion functions for darwin\n  
6142,     43760: add documentation for true colour changes and nearcolor module\n  
6143,     43759: add support for true colour terminals\n  
6144,     43747: new module to map colours from hex triplets to the nearest matching colour\n  
6145,     43752: Fix _expand quoting \nQuoting was not applied properly if globbing failed or was not applied \n  
6146,     43748: fix completion for ack 3beta\n  
6147,     github #29: Add completion support for Gits --color-moved option and color settings\n\n--color-moved was added in Git 2 15 \n  
6148,     43746: _ping: update for BSD and Darwin\n  
6149,     43744: _sysctl: support procps-ng  NetBSD\n\nwith several updates for other OS\n  
6150,     43726: Add tests for semicolon in the middle of a sublist not terminating it \n  
6151,     43723: _mkdir: fix builtin mkdir and support darwin\n  
6152,     43722: _ed  _env  _sort: support darwin\n\nuse the same completions as freebsd\n  
6153,     43721: _diff3: detect GNU variant correctly\n  
6154,     43718: Use singular completion group descriptions\n  
6155,     43714: complete lp fit-to-page option\n  
6156,     43695: minor but simple optmiisation to use existing string length\n  
6157,     43713: Improve init d command completion\n  
6158,     43694: More detail on multios \n\nMention how opening files in multios differs from cat \n  
6159,     43697: match uppercase filename extensions in zathura completion\n  
6160,     43698: update options for git 2 19 1\n  
6161,     43692: Generate man pages in the build dir  rather than the source dir \n\nThe following files are still generated in the source dir (in\nout-of-tree builds):\n\n    Doc/Zsh/manmodmenu yo\n    Doc/Zsh/modlist yo\n    Doc/Zsh/modmenu yo\n    Doc/version yo\n    Doc/zsh idx\n    Doc/zsh texi\n    META-FAQ\n  
6162,     43672: Document result of redirecting from a non-existent file\n  
6163,     unposted: internals: Document sepjoin() \n  
6164,     43685: add-zle-hook-widget: Support running under NO_UNSET ( set -u ) \n  
6165,     43674: Split more PM_ flags for variables and functions \n\nThis avoids using sign bit \n\nAlso bump dev version because of wordcode incompatibility \n  
6166,     43602: Clarify behaviour of `compdef -p`\n  
6167,     unposted: another couple of tests for previous commit \n\nThis tests different code paths as the -c command option exits\nin a different fashion from code executed from a script \n  
6168,     43669: ensure explicit exit status is used over implicit\n  
6169,     Missed ChangeLog from previous commit\n  
6170,     43660: extend 43653 when final exit is implicit \n\nCombine logic for case after committed to exit (shell_exiting) with\ncase where exit occurred in a function we nee to unwind (exit_pending) \n\nAdd sarky note for future generations to be confused at \n  
6171,     43656: special tied arrays don t have tieddata\n  
6172,     unposted: addition to previous trap test suggested by Mikael\n  
6173,     43653: explicit exit from EXIT trap overrides exit status\n  
6174,     43623: Fix Completion iptables -t raw security\n  
6175,     43620 (tweaked): vcs_info git: Reverse the order patches are passed to gen-unapplied-string in \n\nThis is an incompatible change; see README for details \n\nTweaks (relative to posted version): tweaked README  removed scalpel (debug print) \n  
6176,     43617: vcs_info git: During a non-interactive rebase of a detached head  computer the %b expando correctly \n\nBefore this commit  the value of %b was the hash of the commit from the\n source  side of the rebase  from  git/rebase-apply/orig-head and\n git/rebase-apply/original-commit   This broke the invariant that\n%b expands to a git-rev-parse(1) expression resolving to what %r\nexpands to \n\nUse  git/rebase-apply/onto instead as  empirically  it contains the\ncorrect value \n  
6177,     43619: vcs_info git: In non-interactive rebases  always set $hook_com[git_patches_applied  to a string of the form  foo bar   never just  foo  \n  
6178,     43618: vcs_info: Don t redefine helper functions on every execution of the autoloadable outer function \n\nThis allows enabling tracing of the helper functions without fned ing\nthe outer function \n  
6179,     unposted: doc tweak for helpfiles\n  
6180,     43616: Various parameter setting and display fixes \n\nMostly to do with typeset -p and tied variables and their interaction \n\nSome general tied variable fixes \n  
6181,     43587: vcs_info git: In  git rebase -i   when computing subjects of applied-patches  handle an edge case where the subject is not available \n  
6182,     43588: vcs_info git: Make sure applied-patches is of the form  $hash $subject  --- that is  has a space and a non-empty second argument --- even with future \ git rebase -i\  verbs \n\nUse of \ ?\  is consistent with these precedents:\n\nBackends/VCS_INFO_get_data_git:220:            printf -v  git_patches_applied[$p     %04d ?   $p \nBackends/VCS_INFO_get_data_git:242:                git_patches_applied+=( ? $subject )\nBackends/VCS_INFO_get_data_git:244:                git_patches_applied+=( ? )\nVCS_INFO_quilt:160:            applied[$i +=  ? \nVCS_INFO_quilt:168:            unapplied[$i +=  ? \n  
6183,     43586: vcs_info git: Reformat to minimise next diff  No functional change \n  
6184,     43585: vcs_info svn: Recognize working copies in need of an upgrade \n  
6185,     unposted: minor FAQ typos\n  
6186,     43589: Further improved subjob reporting \n\nShow subjob status instead of user-visible superjob any time\nthe subjob still has associated processes \n  
6187,     unposted: Indicate which use-case each branch handles \n  
6188,     unposted: Fix typo\n  
6189,     43531: Completion: Fix some false positives in the logic for  are these two candidates completions equivalent  \n  
6190,     43570: Start documenting jobs c  in particular superjobs \n  
6191,     43563: zshzle: Clarify sentence in introduction \n  
6192,     43564: improve job control report about stopped subjob\n  
6193,     53542 (tweaked): further output about  which  output\n  
6194,     43528: zshbuiltins(1): Document \ which\ \ s  not found is not an error  behaviour \n  
6195,     43554 (tweaked): Fix zathura completion ignoring multiple plugin directories \n  
6196,     43544: Fix zathura filename completion derived from * so plugin name \n  
6197,     43489: Add error checking on a new write() call \n\nSilences a compiler warning (write(2) is declared with warn_unused_result\nin current Debian Unstable) \n  
6198,     43543: Further improvements to fg/bg of superjob/subjob \n\nAttempt to keep STAT_STOPPED correct for superjob  rendering additional\n stopped = 1  unnecessary \n\nWait for subjob before superjob \n  
6199,     unposted: Add a test for 43546 \n  
6200,     43546:  typeset -p  should show -U flag\n  
6201,     users/23642: Revert _files change from workers/42984\n\nSee also users/23635\n  
6202,     43535: Fixes for bg / fg handling of superjobs \n\nBe more consistent about marking both superjob and subjob as\nrunning when sending SIGCONT \n\nSend SIGCONT to superjob / subjob combination any time it is put\nin foreground  even if thought running  since subjob may invisibly\nhave suspended \n\nWhen waiting for superjob  wait for subjob  too \n  
6203,     43493: Have V07pcre fail if PCRE was enabled by configure (config modules) but failed to load for any reason \n  
6204,     43527  tweaked: describe which output behaviour in FAQ \n  
6205,     gitlab !2: _toilet: detect  flf files as well as  tlf ones\n  
6206,     43511: Initialiase alias entry on input stack \n\nThis didn t happen if neither history nor alias expansion was in use \n  
6207,     43502: Search XDG_DATA_DIRS in _setxkbmap completion\n  
6208,     43464: complete options for the valgrind drd tool and update them for helgrind\n  
6209,     unposted: Fix typo in ChangeLog \n  
6210,     unposted: Fix trivial formatting error in docs\n  
6211,     43464: Another attachtty() fix \n\nIf list_pipe_job triggered more than once we need to know\nthe most recent process group leader  so record that\nboth if the attach happened in the main shell on in\nentersubsh() \n\nAlso don t pass back proocess group for ESUB_ASYNC subshells \n  
6212,     unposted: ChangeLog entry for previous commit \n\n(I d meant to post it  but slipped )\n  
6213,     _svn: Allow hyphens in command name aliases \n\nUsed by svn 1 11 0-rc1 \n  
6214,     unposted: Post-release version bump \n  
6215,     43457: Release 5 6 2\n  
6216,     43466: Make path(5) test more generic \n\nOnly test non-zero status as OS error codes and messages vary \n  
6217,     unposted: _svn: Complete --accept=recommended  new in 1 10 0 \n  
6218,     43447: Generate tar xz artifacts only \n  
6219,     43443: _git: When completing worktrees  show the ref and hash of each worktree \n  
6220,     43442: _git: Break out a helper function \n  
6221,     Fix windowsize when reattaching to terminal on process exit\n  
6222,     43446: More entersubsh() / addproc() wiring \n\nFix additional races by passing back use of list_pipe_job\nfrom subshell \n  
6223,     GitHub #28: Add missing math h include for builtins\n\nmath h is required for isnan/isinf\n  
6224,     43426: disable job control tests involving suspension \n\nThese are provoking races on OpenSUSE \n  
6225,     unposted: creating-a-release txt: Add another step \n  
6226,     unposted: Post-release version bump \n  
6227,     unposted: Patch release: 5 6 1\n  
6228,     43409: Fix process group setting in main shell \n\nA newly forked subshell now reports back the process group it\nwill be using for the main shell to record \n\nThis prevents an error where the shell incorrectly thought an\nexiting process owned the terminal and so grabbed it back \nputting the foreground process into the background \n  
6229,     43404 (after 43392): Fix  make install  in out-of-tree builds\n  
6230,     43392: dist: Generate doc/help/* and doc/help txt in builddir rather than srcdir \n\nFixes creating tarballs in out-of-tree builds \n\nWhile here  remove the instruction to build zsh before building\na tarball  since that s unneeded \n  
6231,     43366: _compdef: Change and add sources for completed completion function names \n\nUse $ (v)_comps  instead of going through $fpath again   Use\n$ functions  as well to find more legitimate matches  such as various\n__git_foo() helpers defined in $ ^fpath /_git \n  
6232,     43372: Add completion for e2label\n  
6233,     43375 with fix from 43390: fix #! tests \n\nDon t assume path to sh and echo  instead work it out \n  
6234,     unposted (cf 43373): Add two caveats: no local modifications  and need to build in-tree \n  
6235,     43370: New maintainer-facing documentation \n  
6236,     unposted: Post-release version bump \n  
6237,     unposted: Release 5 6 \n  
6238,     CVE-2018-0502  CVE-2018-13259: Fix two security issues in shebang line parsing \n\nSee NEWS for more information \n\nPatch by Anthony Sottile and Buck Evan \n  
6239,     43367: Add maintainer targets  tarxz-src  and  targz-src  \n  
6240,     mention Inf/NaN floating point changes in NEWS file\n  
6241,     unposted: Makefile in: further to 43358 use same patchlevel form for the release file\n  
6242,     43333: Generate FAQ html in the builddir  rather than in the srcdir  and add it to the default target of the Etc/ subdirectory \n\nThis fixes `make targz-doc` in out-of-tree builds \n  
6243,     Don t handle ZLE functions for single key \n\nFor read -k and read -q where we use ZLE  we just want a single\nkey and not full ZLE processing   So don t handle timed\nZLE functions when preforming the read \n  
6244,     43358: enforce consistent patchlevel form\n  
6245,     43357: isinf/isnan can be macros so need custom configure tests\n  
6246,     unposted: git describe s --long and --abbrev options are not mutually exclusive\n  
6247,     43359: further review of git remote set-url completion\n  
6248,     42810: git remote set-url completion\n  
6249,     43350: _zsh: support --emulate\n  
6250,     43349: new completion for eog\n  
6251,     43351: handle the new diff implementation in the pre-release version of FreeBSD 12\n  
6252,     43346: various completion option updates\n  
6253,     43348: _hg: check for both -r and --rev\n  
6254,     43347: _hg: use revsets for suggestions for hg merge\n  
6255,     43345: don t modify global variable in _umountable\n  
6256,     unposted: correct completion argument order for dkms\n  
6257,     unposted: completion for argument to strings -s was missing\n  
6258,     unposted: complete also for bsdtar\n  
6259,     unposted: fix typo in svccfg completion function call\n  
6260,     Test release: 5 5 1-test-2 \n  
6261,     unposted: Fix FAQ build  broken by 43184 \n  
6262,     unposted: Test release: 5 5 1-test-1 \n  
6263,     43331: _diff3: Enhance positional argument descriptions (thanks  Oliver) \n  
6264,     43313 (log message tweaked): vcs_info git: For the branch name  try to find a symbolic name before falling back to a raw commit hash \n\nAsk git-describe(1) and git-name-rev(1) to compute a gitrevisions(7)\nname in terms of a branch or tag that contains (= is a descendant of \nis younger than) HEAD \n\nIn this repository  the output changes from  9567bfe     to\n master~1  or  remotes/origin/HEAD~1   This would also happen\nduring bisects  e g    bisect/bad~22  \n  
6265,     43314: vcs_info git: Flatten a nested if \n\nNo functional change \n  
6266,     43330: complete more options to cu\n  
6267,     43329: new diff3 completion\n  
6268,     43328: new zeal completion\n  
6269,     unposted: Fix --ascii typo in _man\n  
6270,     43325: _hg: suggest merge tools for -t/--tool\n  
6271,     43326: _hg: add completion of -S/--subrepos to many commands\n  
6272,     github #27: add --folder-uri to completion for Visual Studio Code\n  
6273,     43301: add some functions from zsh-completions project\n  
6274,     unposted: docs: Fix duplicated words in _combination \n  
6275,     43294: Add ZLE_RECURSIVE parameter \n  
6276,     43302: Fix _du -B spec\n  
6277,     unposted: _make: Allow pasted arguments for GNU make s -j option \n  
6278,     43275: Add log2 to match func\n  
6279,     unposted (PR #26): __git_files: fix double quotation of star\n\nThis fixes the double quote introduced by aa160fc8  so that the end result of\nthe parameter expansion is $pref followed by \\* (a quoted star)  meaning\n`git ls-files` gets a literal star  not an expanded list of matching files  as\nwas intended in commit cc7437bf \n\nFixes completion of `git add   /<TAB>` \n  
6280,     43264: fix $ +assoc[nonexistent   with KSH_ARRAYS\n  
6281,     43261: Fix unary minus with base \n\nApply unary minus to a complete lexical constant rather than the\nfirst component that comes along \n  
6282,     43254: remove hg -w completion  add hg -S\n  
6283,     43252: fix various hg options for completion\n  
6284,     43250: add hg forget  phase  summary completion\n  
6285,     43251: fix some return values of _hg functions\n  
6286,     43253: hg --style deprecated in favour of --template\n  
6287,     43227: fix memory leaks in term cap info  c\n  
6288,     43207: Improve _bind_addresses  _php\n\nMinor change from the patch as posted to the ML: _php now calls _bind_addresses\nwith -K  since it can t actually listen on a link-local address \n  
6289,     43219 (except term cap info  c): fix several memory leaks\n  
6290,     43225: Recalculate ZLE timeout \n\nNeeded when looping owing to having handled a special fd \n  
6291,     43184: Remove reference to ftp_sites yo\n  
6292,     43185: Use [ suffix for associative arrays; add + to remove-chars\n  
6293,     43203: Add completion for lua\n  
6294,     43200: Add completion for ip6tables*\n  
6295,     43196: Add completion for nginx\n  
6296,     43192: _pgrep: simplify completions of list of IDs\n  
6297,     43186: Add completion for cronie/dcron/Vixie crontab\n\nMinor change from the patch as posted to the ML: BusyBox variant detection has\nbeen expanded to cover dcron (which BusyBox s crontab is forked from) \n  
6298,     43183: fix  _ttys -o  and use it in _gdb/_pgrep\n  
6299,     43189: _install: similar fix as 43187 for option -f\n  
6300,     43187: Fix completion error about  m  option of  install  command\n  
6301,     43182: _lldb: complete process name after option -n\n  
6302,     43166: new zathura completion\n  
6303,     43177: _grep: support bzgrep  and add a few options for macOS\n  
6304,     Remove ftp_sites yo from Makefile in\n  
6305,     Update distro docs to remove dead links\n  
6306,     43176: Add note on compatibility to start of manual \n\nDefault mode is not POSIX \n  
6307,     43172: document escaping colon in zformat -a\n  
6308,     43164: _gcc: fix  args=  to  args+=   and update a few options\n  
6309,     43155: _gcc: escape  :  in action for -std\n  
6310,     43156  43157: Need to allow for extra space in gethere() \n\nThe point can now increment twice per iteration \n  
6311,     users/23531: Error exit/return fixes \n\nFix regression with trap on left hand side of pipe \n\nFix forced return from shell structure within nested function \n\nFix tests exiting too early \n\nAdd new test case \n  
6312,     42995: Only complete active connections for nmcli connection down\n  
6313,     43046: Add mupdf completer\n  
6314,     43106: Add ldap completer\n  
6315,     43105: Improve pgrep/pkill completion\n\nContains minor changes to signal completion compared to the patch as originally\nposted\n  
6316,     43134: don t complete SIG in front of numeric signals\n  
6317,     43108  43121: _killall: complete various options\n  
6318,     43059: _gpg: Use explicit UIDs for state = public keys \n\nUse the `--with-colons` option and parse the output according to the\nformat specified in the documentation \n  
6319,     43107: add an option to _ttys to complete only open ttys\n\nUse the option in _ps and _watch-snoop\n  
6320,     23519: Use tag remote-files for remote files\n  
6321,     42746: _vim: handle special values for -u/-U\n\nThis is based on state=verbosity from the same file \n  
6322,     43096: _vim: remove duplicate flag\n  
6323,     43091: In the (u) glob qualifier  expand and correct  unknown user  error messages \n  
6324,     43084: Variable warning suppression enhancements \n\nAdd vared -g option along the lines of typeset -g \n\nSet reply safely in zsh_directory_name_cdr \n  
6325,     43080: _sys_calls: analyze recent syscall h properly\n  
6326,     43079  43086: new utility to complete names of running processes\n\nAnd new completions for dtruss  fs_usage and sc_usage \n  
6327,     unposted: Fix mistyped variable name in _opkg\n  
6328,     43081: Add networksetup completion\n  
6329,     43088: Fix wajig sub-command completion\n  
6330,     43074: Completion for additional linker options for clang and sanitizers for gcc\n  
6331,     43078: add completion for the sed expression\n  
6332,     43073: various completion option updates\n  
6333,     43075: Support nanosecond-precision time formatting\n\n* Teach ztrftime() %9  and %N for nanoseconds\n* Update prompt expansion to pass sub-second times for time formatting\n* Update zsh/stat to pass sub-second times for atime/mtime/ctime\n\nPatch heavily based on Oliver s earlier work @ workers/24059\n  
6334,     43077: Fix shift builtin status \n\nIf the math evaulation to get the shift count failed the status\nwasn t passed back from the builtin \n  
6335,     43061: Improve open (macOS) completion\n  
6336,     43060: Expand stat completion\n  
6337,     43047: Add completion for hostname\n  
6338,     43047: Make _bind_addresses always return local IPs\n  
6339,     unposted: V01zmodload ztst needs update for parameter module fix\n  
6340,     433029: Testing signal return type is no longer needed\n  
6341,     43006: complete modified files after `git stash --`\n  
6342,     users/23484: be consistent on matcher specs for git branches to fix issue with partial matching\n  
6343,     43048: add sanitizers  standards aliases and fix -flto\n  
6344,     43043: Improve comm/sed completion\n  
6345,     43039: Mark functions_source (et al ) for auto-loading\n  
6346,     43030: Replace VCS_INFO_realpath() by :P\n  
6347,     43031: Add note to style guide about quoting\n  
6348,     43031: Add note to style guide about variant syntax\n  
6349,     unposted: Fix inconsistent white space in change log\n  
6350,     unposted: Fix typo in change log\n  
6351,     43024: Improve _man section-name matching\n  
6352,     42981: Add ed completer\n  
6353,     users/23472: Add $sysparams[procsubstpid  to zsh/system\n  
6354,     43008: Improve code to remove privileges \n\nRemove warnings of unused values as we always check the finally\nresult later \n\nPut segid before setuid as the setgid could fail if UID\nno longer privileged \n  
6355,     42992: Fix minor escaping bug in _bash\n  
6356,     42992: Use _call_program to fetch argument possibilities\n  
6357,     unposted: Change  Mac OS X  reference to  macOS \n\nI ve left other references (see _growisofs and _hdiutil) alone  since they all\nappear in the context of legacy features \n  
6358,     42983: Address misc  feedback re: _man\n  
6359,     42984: Fix argument pass-through to compadd\n  
6360,     42978: fix small but irritating bug in pbcopy completion\n  
6361,     42977: Complete options to major man variants  otherwise improve especially section matching\n  
6362,     42968: add  -c  for _shutdown completion on FreeBSD 12-current\n  
6363,     42965: add full completion for bash and update shell list in _sh\n  
6364,     42964: Update list of fbsd architectures\n  
6365,     42918: fix file completion for jq\n  
6366,     42918: adapt detection of GNU variant of ldd to work on Ubuntu\n  
6367,     42947: new luarocks completion\n  
6368,     42948: new opkg completion\n  
6369,     42931: completion for several utilities especially for checksums across a variety of systems\n  
6370,     users/23434: initialise UNDO_LIMIT_NO so that an initial undo doesn t clear the whole edit buffer\n  
6371,     42935: FreeBSD does not support -v for arp\n  
6372,     42937: add -M and -m options\n  
6373,     43943: update samba completion with long options\n  
6374,     42938: name argument to math_func is not unused\n  
6375,     42939: pm argument to set_registers is not unused\n  
6376,     42929 (tweaked): additional default bindings in zed \n\nAdd to both zed and zed-vicmd keymaps \n  
6377,     42826: remove link to now-spam website\n  
6378,     42919: new shuf and uptime completions\n  
6379,     42922: new tac completion\n  
6380,     42881: update options in ghostscript completion and query more matches directly from it\n  
6381,     42920: new dkms completion\n  
6382,     42888: Update installation notes \n\nMachine-specific part empty pending reports \n  
6383,     42870: another improvement of  compset -q \n\nzlemetall need not count the  x  added at the cursor in set_comp_sep()\n  
6384,     42865: update config guess and config sub \n\nCopied unmodified from latest GNU distribution \n  
6385,     42862: Remove AC_PROG_TRADITIONAL from configure ac \n\nWe don t support machines that ancient any more \n  
6386,     42863: configure ac update to latest autoconf conventions\n  
6387,     42809: slightly improve  compset -q \n  
6388,     42806: fix shutdown completion where options were lost due to args= assignment where args+= was needed\n  
6389,     42803: handle Linux and the the BSDs in netstat completion\n  
6390,     42790: make [[:blank:   match non-ASCII blanks\n  
6391,     42784: complete -s and -x options to the functions builtin\n  
6392,     42793: Always define FDT_PROC_SUBST even if not needed \n\nThis avoids proliferating #ifdef s \n  
6393,     42785: Allow redefining math function to work silently \n\nPreviously it failed with an error message that the function\nwas already defined   This is inconsistent with most other\naspects of shell usage \n  
6394,     42297: (e) subscript flag needs extra work with scalars\n  
6395,     42234: Stephane: don t kill a process if not running \n\nThis could happen when kiiling a job   The processs might be reused \n  
6396,     42488: test cases for 42369 and address some issues in the code\n  
6397,     Nelson H  F  Beebe: 19597 (rebased 42369): return Inf  NaN etc from floating point operations instead of errors to allow non-stop IEEE 754 arithmetic\n  
6398,     42760: move stack variable outside while loop scope as it is accessed in the while condition\n  
6399,     unposted: remove mysterious excrescence in ChangeLog\n  
6400,     42185: safety when removing separators in completion\n  
6401,     42101 (tweaked): assigning shell status to array was broken\n  
6402,     42752: enhance git external alias completion\n\nIf alias expands to !cmd-name  complete as a normal command\nline after cmd-name \n  
6403,     42751: Protect shell status in ZLE timed function handler \n\nOtherwise status from sched and other asynchronous functions\ncould escape back to the main shell \n  
6404,     42740: Teach _systat about the  zarc  screen\n  
6405,     42732: Add several more entries to ifconfig\n  
6406,     42743: update vorbis-tools completion and include vorbiscomment with the rest\n  
6407,     unposted (branch fork_early): Fork early for pipelines \n\nIf executing a command not at the end of a pipeline  and\nnot optimised in the calling code  we can fork before\n prefork  substitutions  at the same point as\nfor background commands \n\nMove fork before our preliminary scan of arguments to find\na command: in the cases of early fork\nwe don\ t need this information before forking \n\nEnsure we _exit if forked in execcmd_exec() \n\nRationalise use of forks and pipes \n\nEnsure we _exit instead of returning from execcmd_exec() if we\nhave forked   Before the optimisation code after the fork always ran\nto the check at the end  but that code is overkill for the logic\nbetween the early fork and the existing one \n\nRemove old workaround to fork in caller of execcmd for current shell\nconstructs as no longer needed with early fork below \n\nClose input of newly created pipe on fork (destined for RHS of pipe\nwhich we never execute): this replaces a workaround from\nzsh-workers/32171  commit 9887fc3d7b \n\nSet last1 on early fork as needed by some instances of shell\nconstructs on LHS of pipeline to know they are exiting \n  
6408,     42730: Complete the options for rmdir\n  
6409,     42729: update df completion for [DFNO BSD\n  
6410,     42676: deal with system specific arguments in dd completion\n  
6411,     42728: update options in libtiff tools completion and add handling for tiff2pdf\n  
6412,     47201: fix 42355 for multiple backslashes\n  
6413,     c f  42726: Back off fg and bg tests \nThis is too hard to make robust   Problems include\n- Reading input in different places causes lines to appear and disappear\n- There is no easy way to sequence the asynchronous operations\n  following bg \n- Response to job control of user commands on some OSes (MacOS \n  for example) is unpredicatble \n  
6414,     42722: Replace ed with dc in fg/bg tests \n\nThis should be even simpler \n\nAlso more fix ups for failed pattern diffs \n  
6415,     unposted: Correct process substitution buffer size in the PATH_DEV_FD codepath \n  
6416,     42714: Add fg and bg tests \n\nUse ed to get minimal user interaction without needing\nadvanced terminal handling \n\nImprove test output of failures of pattern differences \n  
6417,     42708: fix for process substitution \n\nDon t close associated file descriptors in the closem()\ntidy up function as they should remain visible to external\nprocesses   Override if about to exit \n\nUnit test for the failing case: note this relies on the\nexistence of /proc/self/fd or equivalent \n  
6418,     42705: Another safety fix for pgrp reclaiming \n\nOnly do this if killpg(dead_pid  0) returns -1  indicating\nthe pgprp doesn t exist any more  else there is a race\nif other proceses have started using it \n  
6419,     Allow short loops with  while \n  
6420,     42684 (with extra comments): Fork early if in bg \n\nIn execcmd the case of running the last command in a pipeline\nasynchronously for the purpose of & and &! is easy to work out \nand we can avoid side effects and unnecessary execution time in\nthe parent shell by forking earlier \n  
6421,     42686: Fix previous pgrp patch \n\nWe shouldn t do any fix ups unless the process has actually\nexited \n  
6422,     42630: Improve process group handling in pipelines \n\nIf process group leader exits  allow a newly forked process to become\nprocess leader   If a foreground job  reattach the shell to the\nterminal until that happens \n\nUnblock signals when reading output for command subsitution so that\nwe can do this reattaching immediately \n  
6423,     unposted: update version to 5 5 1-dev-0\n  
6424,     unposted: Update for release 5 5 1 \n  
6425,     42659: various completion option updates\n  
6426,     42658: allow compact form of option arguments to diffstat\n  
6427,     42643  42644: new cksum completion\n  
6428,     42642 (tweaked for Solaris): OpenBSD chown does not support -f and dragonfly has -x\n  
6429,     42650: fix 42156 for zero-sized terminals\n\nAlso fix harmless no-op typo from hand-applying 42636 for previous commit \n  
6430,     42636: fix GLOB_DOTS for !(RM_STAR_SILENT)\n\nAlso fix paste-o in older log entry\n  
6431,     42631: _pgrep: pkill: fix completion of signals\n\nThis adds the signals after arguments are filtered according to\n$optchars \n  
6432,     42624 (plus test): avoid freeing memory that s still needed\n\nThis was occurring in a multiple function definition where a\nfunction name is duplicated \n  
6433,     42623: Add some extra quotes to previous commit\n  
6434,     42618: support signal names from multiple include files \n\nNeeded for glibc starting with 2 25 \n  
6435,     unposted: update dev version to 5 5-dev-0\n  
6436,     42613: typo fix in _ss\n  
6437,     unposted: release zsh-5 5\n  
6438,     c f  42499: tera torn: update twisted completion stub for new twist command\n  
6439,     42605: properly free the vi registers hash\n  
6440,     42601: tidy up code for set -A/+A to not increment a NULL pointer and to be more efficient\n  
6441,     42607  CVE-2018-1100: check bounds on buffer in mail checking\n  
6442,     42600: error paths for _values leaked the exclusion list array\n  
6443,     42597: plug memory leak found by coverity\n  
6444,     42595: remove dead code flagged by coverity\n  
6445,     42602: Update _gcc as of GCC 7 3 0 for generic options and x86\n  
6446,     42604: new completions for OpenBSD s signify and vmctl\n  
6447,     github #24: Add completion script for Visual Studio Code\n  
6448,     42590: fix detection of OSTYPE in _fmt\n  
6449,     42585: improve completion for libarchive-based tar\n\nOffer all compressed archives if no compression flag is specified\nbecause libarchive can automaticaly recoginize them \ncf  42574 (Eitan Adler) \n  
6450,     42591: complete * changes and * dsc files alongside * deb\n  
6451,     42584: complete options for ssh-keyscan and update options for ssh-copy-id\n  
6452,     42583: new column completion\n  
6453,     42582: updates to options in completions for OpenBSD 6 3\n  
6454,     42575: fix to not complete options in the argument to another option\n  
6455,     42578: _shutdown: add support for macOS\n  
6456,     42577: fix macOS support in _strings\n  
6457,     unposted: 5 4 2-test-2\n  
6458,     42581(?): Fix ZLE inline history expansion \n\nSeen with magic-space \n\nIf there s a parse error in command subtitution we need to complete\nreading history to ensure the command line buffer is finished \n  
6459,     42572: various completion option updates\n  
6460,     42571: new completion for FreeBSD jail command\n  
6461,     42568: new shutdown completion\n  
6462,     42569: improve lsof completion after -i and -s options\n  
6463,     42567: new completion for xmlstarlet\n  
6464,     42570: new completion for drill and factor out DNS type completion\n  
6465,     42560: silence sign-compare compiler warnings\n  
6466,     42566: new strings completion\n  
6467,     42564: _adb: Various improvements\n\n    Show product as description by default\n    Add zstyle for naming devices via serial number\n    Add --user to uninstall\n    and other improvements\n  
6468,     42548: new pwgen completion\n  
6469,     42549: also handle the yumdb command in yum completion\n  
6470,     42550: new completion for ruby s gem\n  
6471,     42539: prevent overflow of PATH_MAX-sized buffer in spelling correction\n  
6472,     42538: Temporarily set umask for here document \nDone while signals are queued \n  
6473,     42480: optimize $#var for single-byte character sets\n  
6474,     42505 (corrected): prepare for 5 5 release\n  
6475,     42520: don t use an empty but existing option cache in netcat completion\n  
6476,     42521 based on 42049 (SATOH Fumiyasu): fix finding of includes in make completion\n\nmake always includes relative to the current directory rather than\nrelative to the including Makefile \n  
6477,     42519  CVE-2018-1083: check bounds on PATH_MAX-sized buffer used for file completion candidates\n  
6478,     42518  CVE-2018-1071: check bounds when copying path in hashcmd()\n  
6479,     unposted: add  static  to a file-local variable\n  
6480,     42501: avoid out of bound pointer (as 42487)\n  
6481,     42491 based on 42000 (Andrei Shevchuk): factor ssh host completion for use for mosh and git\n  
6482,     42497 (tweaked c f  42498): make completion after apt install work on local  deb files\n  
6483,     42191: new completion for otool (macOS)\n  
6484,     42487: Fix pointer problems in compctl \n\nPointing off the front of a string caused warnings with\ngcc 7 3 0 and is somewhat murky C anyway \n  
6485,     42469: necessary repairs to 42465 found by  make check \n  
6486,     42465: Pass up error status from readoutput() \n\nThis improves the consistency of error reporting from $(   ) constructs \n  
6487,     42453: Fix race in look up of status for wait \n\nBackground jobs that had just exited could still be in\nthe table when the process had already finished and the\nstatus was recorded  causing the wrong status to be reported \n  
6488,     github #22: Add newer C++ standard options to gcc completion\n  
6489,     github #23: new kdeconnect-cli completion\n  
6490,     42365: Use  zwc file if timestamp identical to source \n\nThis can happen if the files are bundled together \n  
6491,     42411: Assume current C librarires handle free(NULL)\n  
6492,     23180: Fix expand-or-complete with ~[     \n\nThe square brackets shouldn t be treated as wildcards \n  
6493,     42401: workaround for gcc -foptimize-strlen oddit \n\nUse realloc(NULL     ) instead of malloc in zsh-mem calloc() \n  
6494,     users/23169: only expand ~[     under the same circumstances as other ~forms\n  
6495,     42399: document echo and behaviour of - and --\n  
6496,     42364: _git: fix __git_ignore_line to ignore the current word\n\nBefore this patch  git branch -d master<tab>  would result in\n no matches found   while  master  itself should get completed here \n\nThe  (bQ)  (added in 527badc23  via 38129?!) does not seem to be necessary\nanymore: with files  f\\[a-z\\ o  and  foo    git add f[a-z o <tab> \noffers  f\\[a-z\\ o   but not  foo  \n  
6497,     42362: protect REPORTTIME logic from bad status\n  
6498,     ChangeLog typos \n  
6499,     Document REPORTMEMORY is in Kb  not Mb\n  
6500,     42355: Fix use of backslashes on here doc input \n\nHandling of white space in particular was confusing and inconsistent\nwith other shells \n  
6501,     42324: _git: handle mutually exclusive options\n\nCurrently `git show --stat -p` is not considered a valid completion and\nprevents further completions like `--no-abbrev` \n\nIt is a valid use case however to use `--stat` with `-p` (and there is a\nsynonym `--patch-with-stat` for it even) \n\nThis patch changes `__git_setup_diff_options` to only handle mutually\nexclusive arguments reported by Git (as a fatal error) in a special way \n  
6502,     42327: _make: complete _files\n\nThe use case is completing files that are actual targets  generated\nusing $(wildcard …) \n\nQ: Could this be made to only complete files if make targets and vars\nare empty?\n  
6503,     unposted: _subversion: Support subcommands with hyphens in their names  such as  shelf-list (shelves)  from upstream 1 10 development versions \n  
6504,     42333: git 2 16 0 no longer accepts an empty string as a pathspec element so replace empty strings with a dot\n  
6505,     42330: ln -L and -P are POSIX  but not supported by Darwin or NetBSD\n  
6506,     42336: force single column output when getting filenames with adb ls command\n  
6507,     42343: complete --config-option to svn more than once\n  
6508,     Fix confusing change log entry for foregoing commit \n  
6509,     42332: Special case unsigned printf formats \nFor constants we can avoid a conversion to signed by examining\nthe expression before passing to math eval \n  
6510,     Add ChangeLog entry for previous commit\n  
6511,     42323: _git: move  local  statement out of loop\n\nFixup for 99cf61fd4 \n  
6512,     42322 (tweaked): Fix interactive_comments history with just a coment \n\nDon t discard the line from the history merely because it produced\nno synactic words \n  
6513,     42313: avoid null-pointer deref when using $ (PA)     on an empty array result\n  
6514,     42317: completion option updates for commands that have had recent updates\n  
6515,     42299: correct optional argument\n  
6516,     42309: A few small updates for OpenBSD\n  
6517,     42305: CVS should be git\n  
6518,     Fix overlapping commits\n  
6519,     42243: Free stuff properly in zsh/pcre module\n  
6520,     41924: (wi) subscript flag interaction\n  
6521,     ChangeLog for abd00402 / 41839\n  
6522,     41839: force IFS to default for  read \n  
6523,     42294: disable REPORTTIME in completion\n  
6524,     42285: off by one fix in multiple prompts\n  
6525,     42136: empty string check in %~ / %C prompt expansions\n  
6526,     42043: ZSH_DEBUG_CMD should not WARN_CREATE_GLOBAL\n  
6527,     Fix last commit s ChangeLog \n  
6528,     unposted: Follow-up to previous: Clarify that $ histchars[1   may be backslash-escaped even when it isn t  !  \n  
6529,     42261: docs: Expand documentation of $histchars[1   Joint with Matthew Martin \n  
6530,     42242: add [DFNO BSD to the mix in ldconfig completion\n  
6531,     42245: Abort last word on interactve comment \n\nLast recorded word should be the previous one \n  
6532,     42231: new completion functions for simple utilities belonging to the  Darwin  and  Linux  groups \n  
6533,     42230: update screen completion to 4 06 01\n  
6534,     42229: update completion of GNU programs for coreutils 8 29 / gawk 4 2 0\n  
6535,     42223: new completions for sublime text and some basic Unix utilities\n  
6536,     42221: update enscript completion for GNU enscript 1 6 6\n  
6537,     42222: _object_files: recognize  dylib (macOS)\n  
6538,     42164: fix digits in format escapes in completion listings\n  
6539,     Avoid crash copying empty hash table \n\nVisible with typeset -p \n  
6540,     42188: Close flock descriptor in failure cases\n  
6541,     42214: use less general names on new functions for completing file flags and modes\n  
6542,     github #21: update nmcli completions to be compatible with recent version 1 8 4\n  
6543,     42210: factor out completion of file modes and flags and handle _comp_priv_prefix for chflags\n  
6544,     42209: take account of numeric options such as -4 instead of -t4\n  
6545,     42209: fix option descriptions for non-GNU variants of tr\n  
6546,     42208: fix use of cache variables in yp completion\n  
6547,     42207: support g prefixes for GNU variants on systems like macOS+Homebrew\n  
6548,     42117: use anonymous function rather than define one in user namespace\n  
6549,     42171: prevent parameters of various parameters from becoming global\n  
6550,     42183: _objdump: support LLVM variant\n  
6551,     42186: _apt: Fix completion of target_release names  e g    apt install zsh/<TAB>  \n\nWhen local-apt-repository is installed   apt-cache policy  contains\n \n     100 /var/lib/dpkg/status\n         release a=now\n     500 file:/var/lib/local-apt-repository  / Packages\n         release o=local-apt-repository c=\n \nwhich was matched by the pattern being patched \n  
6552,     unposted: vcs_info: Add docstrings to the internal functions VCS_INFO_formats and VCS_INFO_set \n  
6553,     42175 + 42177 + 42178: avoid localized output from external commands\n\n_call_program and  _arguments --  will call _comp_locale before\ncalling external command for easier analysis of the output \nThis is disabled by passing an option  -l  \n  
6554,     42176: _tar: update long options\n  
6555,     42156: new CHECK_RUNNING_JOBS option demanded by bash groupies\n\nAlso new job options \n\nAlso suppress debug error if rows or columns are reported as zero as\nthis is normal without a physical terminal \n  
6556,     dana: various OpenSSH completion improvements\n  
6557,     33395: Improvments for function managment \n\nFunctions defined inside other fucntions needs file line number\nadding   Particularly useful for anonymous fucntions \n\nAdd flag to indicate a function is anonymous   Done up to now\nby comparing the name to a pointer but this is more consistent \n  
6558,     dana: 42145: Fix additional completion cases with option arguments \n  
6559,     42146: type -w += global aliases\n\nFollow-up to 36403  which did the same for suffix aliases \n  
6560,     42138: _git-revert: Complete recent commits first \n  
6561,     users/13148 (and workers/42060): Abort the command line when replying\n [n  No  to the RM_STAR_SILENT prompt \n\nPatch by Stephane  rebased by Mikael \n  
6562,     * 42143: fix a pattern in _object_files\n  
6563,     42412: fix a bug in 42116\n\nAlso fix a few widgets which were calling wrong function when negative\nnumeric argument was given \n  
6564,     42116: multibyte support for ZLE vi-mode word motion\n  
6565,     42123 (tweaked): take account of Dash in function names \n\nNeeded when comparing word code function name with autoload request \n\nAdd test \n  
6566,     add millisecond and microsecond options to TIMEFMT variable\n  
6567,     42113: BSD complation updates \n\nRemove use of pkg_* for FreeBSD \n\nAdd BSD architecture utilities \n  
6568,     42110: Fix redirections between variable assignments at start of line\n  
6569,     unposted: fix dana s name in ChangeLog\n  
6570,     42065: new getopts tests\n  
6571,     42063: getopts errors now report  +  in front of option where appropriate\n  
6572,     42031 + 42048: Make [[ -o invalidoption    a normal(ish) false value  rather than a syntax error \n  
6573,     stat() for glob qualifiers lost information in corner case\n  
6574,     42037: COMP_POINT for bash completion was miscalculated \n  
6575,     42019: update options in git completion to 2 15\n\nalso improve format completion for git tag and for-each-ref\n  
6576,     gitlab #1: update options for sqlite 3 21 0\n  
6577,     Specify system python in dnf completion\n\nThe python executable in the python_exec variable was the python[2|3 \nexecutable found in $PATH  When the python[2|3  executable was not the\nsystem installed version the completion command raised an `ImportError`\nas the  dnf  module was not found \n\nThis commit just completely specifies the python version to be the\nsystem version `/usr/bin/python[2|3 `  allowing completion within a\npython dev environment \n  
6578,     github #19: Fix minor typo in INC_APPEND_HISTORY documentation\n  
6579,     42004: fix parentheses in documentation\n  
6580,     unposted: _sshfs: Make the -o option repeatable  accept  --  \n  
6581,     41983: fix exclusion of long options with (-) on a normal argument\n  
6582,     41969: _sort: Clarify option description \n  
6583,     41971: correctly break out of certain tag loops when there are matches\n  
6584,     41866: No error unsetting nonexistent function for POSIXBUILTINS\n  
6585,     41965: complete new functions -W and zmodload -s options\n  
6586,     41963: update completion for gnutls 3 6 1\n  
6587,     41939: docs: Move aliases corner case to the dangerous bends section  (after 41482)\n  
6588,     41960: add missing local declarations for MATCH  MBEGIN and MEND\n  
6589,     41961: new ansible completion\n  
6590,     41958: update util-linux completions to 2 31; new hexdump completion\n  
6591,     41957: update git completion for git 2 14 3\n  
6592,     41927: complete  typeset -p \ s optional argument for multi-line output\n  
6593,     41952: Use HGPLAIN instead of HGRCPATH in VCS_INFO_get_data_hg\n\nFixes prompt indicator in case if the repository requires a non-default\nfeature  With HGRCPATH  it results in:\n\nabort: repository requires features unknown to this Mercurial:    \n(see    org/wiki/MissingRequirement for more information)\n\nWhich  in turn  results in  default  getting reported regardless of what\nis the current state of the repo \n  
6594,     41943: Completion: add --clean for vim\n\nVim since patchlevel 8 0 0716 includes the --clean argument for starting\nin a clean mode (only loading defaults vim and in non-cp mode) \n  
6595,     41902: $ (z)     continues parsing on unmatched quote when CSH_JUNKIE_QUOTES is set\n\nTests for 41902 and 41873\n  
6596,     unposted: Document  typeset -p \ s optional argument in the inline synopsis \n  
6597,     41907: further deborphan update\n  
6598,     41904: new deborphan and updated xrandr completions\n  
6599,     41899: handle multi-word values of $VISUAL et al   and line counting of buffer for emacs startup\n  
6600,     41873: temporarily disable effects of $ (Z:n:)     for parsing $(   ) within the parameter value\n\nAlso fix minor typo in commit b3fa5c52 ChangeLog \n  
6601,     41833 + 41838: _jq: New completion \n  
6602,     41877: Separate out SH_FILE_EXPANSION loop from parameter substitution \n\nParameter substitution can add nodes that need to be rescanned by\nit  but not by file expansion  so the two don t play well together \n  
6603,     41825/0002: _stat: Complete -x options to zsh/stat s  zstat  \n  
6604,     41825/0001: _stat: Only complete  stat  if it s provided by the zsh/stat builtin \n  
6605,     41855: completion option updates for OpenBSD 6 2 and handle macOS in rm completion\n  
6606,     41854: also complete options for ping on Solaris  Mac OS  NetBSD and OpenBSD and for ping6\n  
6607,     41853: update options for texinfo 6 5 and complete also for the pinfo info reader\n  
6608,     41849: handle both unexpand and expand in a single function\n\nThey have some commonalities and using _unexpand dodges around\nthe clash with the _expand completer \n  
6609,     41831: fix compset usage in ogg123 completion and tweak where compset -p is a better choice than -P\n  
6610,     41835: handle multibyte characters with compset -p and -s\n  
6611,     unposted: rename _expand command completion to avoid clash with completer\n  
6612,     41842: aliasing documentation update\n  
6613,     41828  41830: skip SHFILEEXPANSION for new nodes added by stringsubst() in prefork()\n  
6614,     41827: correct sense of description for $    :?     expansion\n  
6615,     41826: dana: fix inaccuracies in completion description wording for parameter expansion flags\n  
6616,     41824: fix to not complete rest args from an _arguments set alongside the argument to and option in a separate set\n  
6617,     41823: new completions for some GNU coreutils utilities\n  
6618,     unposted: zsh/stat docs: Rephrase to avoid ambiguity due to the ambiguous relative precedence of the  other than  and  and  operators \n  
6619,     41808: _git-cherry-pick: Typo fixes\n  
6620,     41802 (minor tweaks): use heap during shell function call \n\nReplaces stack for more efficient memory management \n\nAlso fix debug message when FUNCNEST is increased \n  
6621,     41787 (plus minor tweaks): use $FUNCSTACK for function nesting depth \n\nInitialised from existing configuration value \n  
6622,     Add typeset -p1  like typeset -p with newlines\n  
6623,     41789: Don t save fd if -1 \n\nWe try to move an fd which isn t opend but it will feel \nThis needs handling specially in the new code for marking\nsaved fd s \n  
6624,     41773: Array index assignment tests for KSH_ARRAYS\n  
6625,     41772: fix bug in handling of long options with _arguments  -A option\n  
6626,     41762: fix for completion in assignment to associative array element\n  
6627,     41767: preserve nonzero exit status on interrupt\n  
6628,     41764 (test tweaked): allow [key +=value when modifying arrays\n  
6629,     41761: Ensure status from interrupt is propagated by builtin\n  
6630,     41747: Don t create hash entry if just checking existence \n\nPass a flag in indicating this case \n  
6631,     41755: Followup to last: minor clarification to docs \n  
6632,     Updates for ksh array element syntax \n\nMove detection of key/value pairs down into prefork() \n\nDetect normal array assignment and [key =val array assignemnt\nseparately   Mark key / value pairs with Marker and pass up flag   Deal\nwith marked triads specially later on \n  
6633,     update mtr completion through mtr 0 92\n  
6634,     update options in tune2fs completion through e2fsprogs 1 43 6\n  
6635,     41732: bring tmux completion in line with tmux 2 5 - removing completion of mode tables\n  
6636,     unposted (cf  41672): checkrmall: Record the 41672 bug in a TODO \n  
6637,     unposted (cf  41707): internal: Document the count==0 case of checkrmall() \n  
6638,     41736: NO_INTERACTIVE_COMMENTS in $(   )\n  
6639,     41731: reformat and expand doc for 41698 \n\nAlso add missing x-seq reference for 41705 in ChangeLog \n  
6640,     41729: update options for gnutls completion plus cleanup and rearrange the function\n  
6641,     41728: new completion for flac and update options in metaflac completion\n  
6642,     41727: run tidy -xml-config to get HTML options for completion\n  
6643,     41723: one more case of 41627 in  while  loops \n  
6644,     41726: add + and = to option specs taking arguments and update options to 1 7 5\n  
6645,     update completion of options for util-linux 2 30 1\n  
6646,     41725: assorted minor updates to completion functions\n  
6647,     41724: update ethtool completion for new options\n  
6648,     41711: new dconf completion\n  
6649,     41710: new smartctl completion\n  
6650,     41709: update options in Linux sysstat completions\n  
6651,     unposted: nodref -> noderef\n  
6652,     More [key =value tweaks\n\nSome rephrasings \n\nUpdate typeset -p for associative arrays to use new syntax \n  
6653,     unposted: typo in doc just committed\n  
6654,     First go at var=([key =value) syntax \n\nWorks for both normal and typeset case  also var+=   \n\nStill to do: allow to be mixed with straight array assignment \nimprove typeset -p  implement [key +=value \n  
6655,     41688: builtin wait for all jobs should ignore STAT_NOPRINT\n  
6656,     41679: slight clarification on exec of builtins\n  
6657,     unposted: YODL compatibility fix for --emulate\n  
6658,     unposted: internal: Document zreaddir() \n  
6659,     41666: zpty compatibility for OpenBSD\n  
6660,     41668: New --emulate option on invocation \n\nThis sets the shell emulation mode similarly to ARGV0=    which\ndoesn t work from other shells \n\nNote that this gives more comprehensive emulation than running\nemulate within the shell \n  
6661,     41662: exec -a arguments weren t sanitised\n  
6662,     41661: Need to remove tokens before using bufferwords() for (z)\n  
6663,     41628 (plus 41645 by Oliver): _ps: update options\n\nalso do not reset compstate[insert \n  
6664,     41641: Some math operations shouldn t be lvalues \n\nThis includes pre- and post- increment and decrement   Simply\nmark all values after operations as rvalues \n  
6665,     41633: Fix problem backgrounding function definitions \n\nOwing to being marked as simple sublists the instruction to\nbackground was ignored   This applied to anonymous functions \n  
6666,     41621: _mkdir: Honour the  command  and  builtin  precommand modifiers \n  
6667,     41620 (tweaked per 41622): _mkdir: Don t offer a linux-specific option in the  zsh  variant \n  
6668,     41637: add explicit objdump completion\n  
6669,     41623: Update FAQ yo for Yodl 3\n  
6670,     Make mbegin  mend  match local in zed \n\nNeeded for zstyle -m \n  
6671,     Fix problem with ERR_RETURN \n\nIt wasn t suppressed properly in the code following an if\nin some circumstances  in particular in initialsation scripts\nand also in a nested function where the caller had suppressed\nit \n  
6672,     41567: _tmux: Complete detached sessions first for attach-session \n  
6673,     41566: _tmux: Complete only attached sessions for detach-session \n  
6674,     41564: _tmux: Complete environment variables and their values for set-environment and show-environment \n\nAlso  teach show-environment not to offer --options after positional\narguments \n  
6675,     41557: _tmux: show-environment  set-environment: Make -g -t mutually exclusive \n\ntmux does not error out on the combination  but it does ignore one of\nthe two when both are specified \n  
6676,     41558: _tmux: Complete option names for show-options and show-window-options \n  
6677,     41608 (plus tests): restore ERR_EXIT before function \n\nThere was an exception to the usual ERR_EXIT pattern that causes\nproblems when executing a function in an else branch   It seems\nthe exception is no longer needed as the regression tests pass\nwithout it \n  
6678,     41618: Added some arguments autocompletion to _todo sh \n  
6679,     41617: complete new tracepath options\n  
6680,     41616: update completion options to entr 3 8\n  
6681,     unposted: add missing #autoload directive\n  
6682,     unposted: Post-release version bump \n  
6683,     unposted: 5 4 2\n  
6684,     unposted: Fix changelog typo introduced by the previous commit \n  
6685,     41599: info updates for 5 4 2\n  
6686,     41602 (tweaked): Improve wording in gpg completion \n  
6687,     41601: handle system differences in arp completion and add function for route\n  
6688,     41600: fix quoting of songs for mpc completion\n\nalso avoid sending errors to stderr and update completion of options\nand subcommands\n  
6689,     41598: new who and w completions\n  
6690,     41590 modified as 41595: make ERR_RETURN more logical \n\nIt now operates separately at each function depth \n\nTo keep ERR_EXIT global  make the noerrexit variable usd bit flags \n\nExtend tests \n  
6691,     41565: vcs_info patch2subject: Support `svn log -r N --diff` output \n  
6692,     41568: complete vmstat options on NetBSD and Solaris and add some exclusion lists\n  
6693,     41563: fix completion description alignment with _regex_words\n  
6694,     41562: correct completed word\n  
6695,     41561: update dhclient completion\n\nhandle Free/OpenBSD implementations and bring options up-to-date\nfor the ISC implementation\n  
6696,     41560: cleanup chsh completion for different platforms\n  
6697,     users/22834: fix irritating bug in file glob for Linux kernel modules\n  
6698,     users/22834: allow completion after -c and a few other new ip options\n  
6699,     41556: complete BPF (libpcap) filters\n  
6700,     41552: complete only branches after git worktree add --detach\n\nthe --detach is superfluous for other commits\n  
6701,     posted but has not shown up: fix fd problem in subshell \n\nRecord fd s that have been saved in fdtable and if the shell\nforks close them as they will never be restored \n  
6702,     41542: Fix pcre logic for extracting matched parentheses \n\nWhen we went off the end of the array but measured the length\nimplicitly  we got lucky before   After 41308 we were looking up lengths\nin stale memory \n\nRename some variables  clean up the logic  be easier to understand \n\nAdd tests \n  
6703,     41527 (tweaked for heap memory): fix [[ -<cond>    from  modules\n  
6704,     unposted: fix README typo\n  
6705,     41504: make empty strings work in case patterns with no leading parenthesis\n  
6706,     unposted: update to 5 4 1-dev-0\n  
6707,     unposted: update to 5 4 1\n  
6708,     Revert  41499 (with one further tweak): POSIX_STRINGS behaviour  \n\nThis reverts commit 2eacbef91913fe967335812900d43cf2edfa54d9 \n\nConflicts:\n\tChangeLog\n  
6709,     41510: update doc for $ZSH_PATCHLEVEL\n  
6710,     41481: _df: Complete mounted device and mount points \n\nThis splits umount\ s  udevordir  completion from _mount to a new file \nwithout changing it \n  
6711,     41486: _tmux: Correct completions of new-window  split-window  respawn-window  respawn-pane \n\nThis follows up to 41467 which patched new-session \n  
6712,     unposted: Post-release version number bump to 5 4-dev-0 \n  
6713,     unposted: version 5 4\n  
6714,     41499 (with one further tweak): POSIX_STRINGS behaviour \n\nIgnore a terminating delimiter when splitting as separators\ndespite being called separators are terminators \n  
6715,     41500: document  -  to end zparseopts options\n  
6716,     41493: fix to not print hash into terminal and update options for git 2 14\n  
6717,     41492: update some options in completions\n  
6718,     41485: test for previous fix\n  
6719,     41484: Make $ (q+)     quote backsleshes \n  
6720,     41479: _xz: Complete compressed  rather than uncompressed  files after -d \n  
6721,     41475: _git: Complete files after  reset  when there are no commits  when the  verbose  style is set \n  
6722,     41470: Another note on new effect of POSIX_BUILTINS\n\nexec now won t find precommand modifiers after it with the\noption set   This may need further attention \n  
6723,     41472: missed ChangeLog entry from commit 43e55a9b\n  
6724,     41474: Fix pbuilder s --distribution --architecture completion \n  
6725,     unpostes: test release 5 3 1-test-2\n  
6726,     unposted: _git: Fix style lookup for  max-verbose  \n  
6727,     41472: introduce cleanup hooks default and restore special themes  and update documentation\n  
6728,     unposted: update distribution docs for 5 4 release \n  
6729,     41467: Correct completion of  tmux new <TAB>  \n\nReference: window_pane_spawn() in tmux 2 5 \n\nAlso  document _cmdstring and _precommand \n  
6730,     41471 (tweaked): _svn: Complete propvals in  propset  \n  
6731,     41458: _subversion: Don t cache an empty commands list when svn is not available at the first invocation of _svn \n  
6732,     41464  41466: With POSIX_BUILTINS  exec only executes sexternal commands \n\nDocument the default behaviour and add a test \n  
6733,     unposted: correct typo in _xclip\n  
6734,     41461: complete list of zsh manual pages in manual introcution\n  
6735,     Further clarification about processing of expansions\n  
6736,     41429: Try to improve description of how stages of expansion fit together \n  
6737,     41432: use option grouping in xz completion\n  
6738,     41431: update options in assorted completions\n  
6739,     41414: fix for commas used in exclusion lists\n\nalso missing escape for _gcc and --no-index option for git diff\n  
6740,     41419: update for git 2 13 2\n  
6741,     41420:       wasn\ t check for brace expansion properly\n  
6742,     41409: complete  django startproject \n  
6743,     unposted: update dev version due to wordcode changes\n  
6744,     41402: Delay has_tokens() in ecstrcode as may not be needed\n  
6745,     41402: Add hasher to ecstrcode to reduce string comparisons\n  
6746,     Delay processing  disown  for superjob \n\nThis is a job forked from the current shell when a job partly\nrunning from the current shell was suspended   When all associated\nprocesses started from the main shell are finished the job is\ncontinued and at this point the disown can complete \n  
6747,     Avoid invalid access with isearch in completion list\n  
6748,     41375: GDBM interface bug fixes\n  
6749,     41386: when backgrounding a STAT_CURSH job  remove the flag \n\nThis typical applies to a STAT_SUPERJOB   It prevents it from\ngetting copied interrupts as a foreground process \n  
6750,     22760: fix partial string length reports with NO_MULTIBYTE\n  
6751,     41368: Add missing unqueue_signals() to compctl \n  
6752,     41345: Use consistent prompt variables in prompt themese \n\nSome more sanity may be needed in this area but this apsect seems\nuncontroversial \n  
6753,     41342: check for Yodl version 4\n  
6754,     41339: Unquote treeish argument for git checkout completion\n  
6755,     41308 (tweaked): behaviour of PCRE with NUL bytes\n  
6756,     41319: dupstring a possibly readonly string before modifying\n  
6757,     unposted: Credit to Sebastian\n  
6758,     41322: reduce number of changes in signal queuing/blocking state during shingetline() to improve read speed\n  
6759,     41317: use heap allocation in getoutputfile() to plug memory leak\n\nHeap is usable ever since addfilelist() of workers/31528 (commit 3c573222) \n  
6760,     41242: zstrbcmp(   ) removed in favor of zstrcmp(     SORTIT_IGNORING_BACKSLASHES)\n\nThis should make sorting consistent in completion listings vs  elsewhere \n  
6761,     41265: quote the inserted file names as necessary\n  
6762,     unposted: fix typo in url-quote-magic\n  
6763,     41275: Leave stdin open when executing widgets\n  
6764,     41284: Fix NULL dereference in cd \n\nThis happened in sh compatiblity mode if HOME was not set\nand cd was used with no argument \n  
6765,     41244: Add zmodload -s option \n\nDoesn t complain if module is unavailable  but prints more\nobscure errors \n\nUse existing low-level silent flag by passing through\nintermediate module loading hierarchy \n  
6766,     unposted: Add to Etc/BUGS 41184 41203 41254 about STTY and about modules \n  
6767,     41239: Save and restore default history event on context stack \n\nThis ensures that the default event set by an expansion in ZLE\ndoesn t propagate to the command line expansion \n  
6768,     41232: Use page up/down keys in zed keymap \n\nFind with terminfo where available \n  
6769,     41225: sethparam() should not attempt to change special\tparameters into hashes\n  
6770,     41191: Check for immortal thingies when checking for specific thingies\n  
6771,     41177: _nm: add support for macOS and OpenBSD\n  
6772,     41164: Don t free a history entry if it s curline \n\nThis replaces 41113 / 94014ff65b with a simple local change for the\nimmediate problem   It s not entirely clear if this reflects wider\nchanges in the structure of the history code \n  
6773,     41151: propagate flags when creating new parameter\n  
6774,     41153: finish module setup only after all error conditions have been checked\n  
6775,     unposted: clarify ZLS_COLORS pattern matching contexts\n  
6776,     41159: handle  Include  and  HostName  lines in ~/ ssh/config\n\nAdded 2>/dev/null to conceal file access errors \n  
6777,     41146: careul in GDBM freeing strings with embedded nulls\n  
6778,     40898: fix GDBM error handling\n  
6779,     41142: Ensure close-on-exec is passed to moved file descriptor\n  
6780,     41087: Update kvno completion to MIT krb 1 14\n  
6781,     41086: Update librt completions\n  
6782,     41085: Update OpenStack completions\n  
6783,     41128: typo in compsys documentation\n  
6784,     users/22707: Document extra use of accept-exact-dirs\n\nIt allows completion after magically appearing directories that\ndont t show up in the parent directory by supressing searching\nof the parent directory if the subdirectory is directly found\nto exist \n  
6785,     41113 (tweaked): Save current line linkage to history ring \n\nWhen saving history state save whether the current history line\nis linked into the ring and remove it  and restore as appropriate\nlater   This avoids surprises where the history ring is freed\nand incorrectly frees the current state in curline  which has\na different allocation strategy \n\nOriginal patch tweaked to make restoring more logical \n  
6786,     41090: Replace iswprint() if unicode9 is enabled \n\nIf wcwidth() or iswprint() is broken  force enable unicode9 \n  
6787,     41096: Don t assume null termination copying string \n\nAt this point the string may contain embedded nulls or not have\na null termination at all \n\nAlso  as we always have the length memcpy() is more efficient \n  
6788,     unposted: Adding comments to test changed line number in output\n  
6789,     40181: Fix buffer overrun in xsymlinks \n\nThere was no check for copying to the internal xbuf2 for a\npreliminary test \n  
6790,     41078: Empty psvar could cause bad dereference in prompt expansion\n  
6791,     41095: Use 2>&- in completion to avoide restricted shell problem \n  
6792,     40173: Off-by-one error checking for  varid  \n\nThis caused a single unprintable character in braces before a\nredirection to be treated as an indentifier \n  
6793,     users/22688: Allow mixing redirs and arguments after anon functions \n\nThese are parsed differently from the case of normal functions which\ncan t take normal arguments at that point \n  
6794,     Fix combination of HERE document and |& \n\nA missing flag setting up the HERE document mean that the size\nof the wordcode needed to append the 2>&1 was counted incorrectly \nso the resulting wordcode was garbled \n\nAdd test \n  
6795,     41038: Document recent  backwards-compatible precommand modifiers changes \n  
6796,     41043: Close pipes in shell when disowning background job \n\nThis was missing in the case of &   causing a file descriptor leak \n  
6797,     unposted: Use typeset -g in insert-unicode-char\n\nAvoid warning from WARN_NESTED_VAR if set \n  
6798,     41020: Fix  command -p ;  -p  was incorrectly left in command arguments\n\nAlso add tests for known precommand modifier issues \n  
6799,     41012: Fix premature exit from nested function in EXIT trap \n\nAlso add check so we don t delay an exit if we were already in\nan EXIT trap for the main shell  as we should in that case leave\nimmediately \n  
6800,     41016: Test that quoted precommand modifiers now work\n  
6801,     unposted: fix syntax on line end\n  
6802,     40965: fix for missing local declarations of expl\n  
6803,     41008: Handle expansions for precommand modifiers\n  
6804,     41006: _ls: new optiosns and a few fixes\n  
6805,     40943: __git_recent_commits: prefer recent commit objects\n\nWithout this  commit to be amended  shows up before  recent commit object\nname  with `git commit --fixup`  but the recent commit objects are the\nmost useful here \n  
6806,     40995: Don t disable alias expansion when finding command substitution limits\n\nThis is needed in some unusual cases in order to identify the exit\ncondition without encountering a parse error \n  
6807,     40994: unmeta_one() need not count Meta\n  
6808,     40990: Fix crash with bogus path in sh emaulation \n\nWhen startying in sh emulation don t link PATH-style parameters\nto array equivalents   To allow this to function  don t check\nfor the linkage when exporting the colon-separated parameter \n  
6809,     40973: _remote_files: Fix completion of remote files that start with a hyphen/minus \n  
6810,     40977:  emulate  disallows  --help  and  --version \n  
6811,     40935: User names need metafying \n\nOn some systems they can contain 8-bit characters and on all systems\nthis is logically correct anyway \n  
6812,     40940: untokenize names of condition features before attempting to look up the definition from a module \n\nNecessary because of 40760 (tokenization of  -  as Dash) \n  
6813,     users/22653: options yo: Clarify REMATCH_PCRE semantics \n\nPresently  if the option is set but the module is unavailable  using  =~  sets\nerrflag \n  
6814,     40933: Ensure we get job text in sourced files \n\nThis was turned off explicitly as it was assumed not to be needed \nbut it is when code in a sourced file is suspended \n\nWe ll need to see if this makes start up inefficient \n  
6815,     40932: Parameter subscripts need to count parentheses \nOtherwise they can terminate in the middle of an expression \n  
6816,     40929 (replaces 40598): paramsubst() should always return scalar when PREFORK_SINGLE was passed in from prefork()\n\nPrevious commit (74fe4d09) consumed too much of the input linked list \nleading to later expansions being skipped   This commit converts from\narray to string sooner  but may thereby alter rc_expand_param and array\nelement uniqueness behavior \n  
6817,     unposted: minor formatting: var() instead of tt() \n  
6818,     * 40782: avoid dependency on zsh/regex module\n  
6819,     Fix typo breaking kld completion\n  
6820,     40909: Stress test for parameter substitution\n  
6821,     40906: Add note on use of (k) parameter subst flag \n\nKSH_ARRAYS generlly requires [*  or [@  to operate on the whole\narray and this is true here \n  
6822,     40878: additional stgit squash command completeion\n  
6823,     40892: subcommand matching for ip help\n  
6824,     40891: fix more zero-length matches \n\nThis time at the end of the trial string \n  
6825,     22601: Fix for parameter substitution pattern matches \n\nIt was not possible to math against a zero-length string in\nsome cases \n  
6826,     40875: Update REC_EXACT description  suggested by Martin Krafft\n  
6827,     Improve comment at top of GDBM test\n  
6828,     unposted (after 40859): Fix yodl warning:\n\n    makeinfo  /zsh texi\n     /zsh texi:36246: Next field of node `vcs_info Examples  not pointed to (perhaps incorrect sectioning?) \n     /zsh texi:36419: This node (Prompt Themes) has the bad Prev \n\nSeen with yodl 3 00 00 but not with 3 04 00 \n  
6829,     40859: vcs_info docs: Use proper internal links through texinfo nodes \n\nChanges:\n\n- Add texinode()\ s\n- Replace \ see foo\  with \ see noderef(foo)\ \n\nDrive-by changes:\n\n- Fix one reference to a nonexistent  Styles  section\n- (minor) Fix whitespace around  once \n  
6830,     unposted: vcs_info quilt: Fix documentation markup typo \n  
6831,     40855: _dmidecode: Fix _arguments syntax error \n  
6832,     40843: update options for ruby 2 4 0p0\n  
6833,     40842: update completions for coreutils and similar utilities  also improving BSD and Solaris support\n  
6834,     40818: _git-checkout: When completing local heads  prefer recently-checked-out ones  (after 38592)\n  
6835,     40817: __git_recent_branches: Retrieve less data  but faster \n\nBy replacing the --grep-reflog=needle argument with a $ (M)   :#needle  filter \nwe retrieve less data from the reflog  and consequently run (on my test cases)\n16% to 40% faster   The trade-off is that we retrieve less data: instead of\nretrieving the 1000 most recent  checkout  operations  we retrieve the most\nrecent 1000 operations  which would include fewer than 1000 checkout operations \n\nAlso change [[:xdigit:   to [0-9a-f  since it s faster  however  the absolute\ngain from this is minor compared to the cost of  git reflog  \n  
6836,     40822: vcs_info quilt: Document the   quilt-foo  zstyle context element  (Compare users/20807 )\n  
6837,     40837: for pgrep completion  add -w on Linux\n  
6838,     40816: Document interaction of  print -P  and  print -f  \n  
6839,     40820: add a few tests of strftime  related to 40681\n  
6840,     40832: fix $x:P when PWD=/\n  
6841,     unposted (github pull request #15): fix a small typo in `ip` corrections file\n  
6842,     40824: grep completion handling of option deviations between different systems\n  
6843,     40823: update option completion for sshfs 2 8\n  
6844,     40819: Fix IS_DASH test in BRACE_CCL handling\n  
6845,     unposted: declare file local variables as static\n  
6846,     unposted: silence warnings on Cygwin\n\nOn Cygwin  h_name in struct hostent is  const char* \n  
6847,     40808: fix typos where (x y) should have been (x y) in _arguments syntax\n  
6848,     40801: re-fix completion of mount points with spaces in the name\n\nTurns out that work of art removed by 33963 was necessary after all\n  
6849,     40803  40804  40805  40806: Parameter test additions \n\nPotentially dodgy string for $ (z)     splitting from Sebastian \n\nCheck that $- and $ -  produce plausible results \n  
6850,     40796: MAGIC_EQUAL_SUBST not needed with parsed assignment \n\nIf typeset family builtins are recognised as keywords then the value\nis handled as a separate expansion and we don t need the old\nmagic behaviour  even if the option is set \n  
6851,     40799: fix $- expansion partly broken by 40760\n  
6852,     40763: count wide characters and Cmatcher pointers more sanely in cfp_matcher_pats()  and count characters in pattern_match() the same way to stay in sync\n\nMight not fix wide-char matching in completion matcher-lists but should\navoid wild pointer crash\n  
6853,     40745 + 40753: Fix  unset ZLE_RPROMPT_INDENT  not restoring the default behaviour \n\nTo reproduce:\n\n    RPS1=foo\n    ZLE_RPROMPT_INDENT=42\n    unset ZLE_RPROMPT_INDENT\n  
6854,     40744: Document the SHORT_LOOPS  function  syntax \n\nIt s already mentioned in passing in zshoptions(1) \n  
6855,     40706: Fix ordering dependence in gdbm test\n  
6856,     40760: Always tokenize unquoted - to Dash \n\nThis fixes use of pattern match character ranges in unusual contexts \n\nAttempt to detect a tokenized - in cases where we don t care \n  
6857,     40780: Don t use =~ for simple prefix match\n  
6858,     40726: add  zcurses resize  for sane terminal size change\n  
6859,     40781: optimize array assignment  similar to 39995 for string assignment\n  
6860,     40654: exit cleanly from special POSIXBUILTINS in subshells\n\nThis patch overloads the zsh_subshell counter which is meant for $ZSH_SUBSHELL  but no one has suggested a working alternate test \n  
6861,     unposted (via github): complete -Dproperty=/path_complete for ant\n  
6862,     unposted (via github): Add newer C++ standard options to _gcc\n  
6863,     unposted: complete  tiled  layout for tmux\n  
6864,     unposted: fix completion argument to xz --format\n  
6865,     40715: update completion of git options for git 2 12 0\n  
6866,     40597: be flexible about order of options to _values\n  
6867,     40170: Fix up error resetting in curses module \n\nUpdate comment to remove confusion   The comment was based on\nincorrecto expectations  and the problems referred to seem to be fixed \n  
6868,     40173: No error on failure to load zsh/db/gdbm in test \n\nThis is a soft error causing the test to be skipped  with a report\nto that effect \n  
6869,     40702: new KEYS_QUEUED_COUNT ZLE variable\n  
6870,     40681: strftime builtin should return 1 if ztrftime() returns -1\n  
6871,     40622 with typos fixed: functions -Ms \n\nThis adds the capability for mathematical functions based on shell\nfunctions to have a string argument   Module functions have had\nthis for a long time \n  
6872,     40562: gdbm tests omitted from previous commit\n  
6873,     40641: docs: patterns: Add  |  to the overview  Clarify that it short-circuits \n  
6874,     40650: redo 40508 and 40626 with comments explaining what is actually going on\n  
6875,     Revert 40626 which broke tests \n  
6876,     40640: the (A) parameter flag forces array result even if assignment syntax is not used\n  
6877,     unposted: Port 40617 to the completion \n  
6878,     40626: Make $options re-settable \n\nFollow-up to 40508 \n\nReported-by: James McGlashan\n  
6879,     unposted (cf  40617): clarify description of $ (A)name=value  and $ (AA)name=value \n  
6880,     40624: conditionally handle WIFCONTINUED to properly set SP_RUNNING process status\n  
6881,     40604: revert to the old method if getutent() is not available\n  
6882,     Julien Nicoulaud: 40586: discard stderr\n  
6883,     use  diff -a  in case special characters were written to the test output\n  
6884,     40598: paramsubst() should always return scalar when PREFORK_SINGLE was passed\n  
6885,     40565 (tweaked): test cases for assigning array to scalar with various combinations of SHWORDSPLIT and IFS\n  
6886,     40593: SHWORDSPLIT + unset IFS should cause default splitting of $@\n  
6887,     40576 (tweaked): entersubsh():  unblock any signals that were blocked for trap handling\n\nAlso small improvement to loop that resets trap handlers\n  
6888,     update gphoto2 completion for new options up to gphoto2 2 5 11\n  
6889,     40568: REMATCH_PCRE is not enabled by default  fix doc \n  
6890,     40558  40562: General improvements to zsh/db/gdbm module\n  
6891,     40524: do not free a null array\n  
6892,     40539: typo in MIPS branch of argument selection\n  
6893,     40537: Document previous change to autoload\n  
6894,     40536: Prepend directory to $fpath \n\nUsed if parent function is autoloaded by absolute path so\nas to find functions in the same suite without shell code\nmodification \n  
6895,     40512: new entr completion\n  
6896,     unposted: using a colon in the tag name for lsusb completion was not such a good idea\n  
6897,     40510: vcs_info: Update the $psvar episode with  % -unescaping  (Follow-up to 40492 )\n  
6898,     40492: vcs_info: Escape  %  signs in payloads \n\nTest case: a patch whose subject is  %Sfoo%sbar    ( S  and  s  are\nexpandos both in prompts and in the  formats  style )\n  
6899,     unposted: _svn: Fix  --show-revs  completion \n  
6900,     40508: Make $functions re-settable \n  
6901,     40507: Remove extraneous null creating GDBM records\n  
6902,     40494: _git: Use slashes matchspec for references (as already used for branch names) \n  
6903,     40493/0002: _git-checkout: Reorder default completions \n\nThe unprefixed name of a remote branch is used to create a new local\nremote-tracking branch; that is presumed to be a rarer operation than\neither switching among local branches or reverting to the index version\nof a modified file \n\nBetween the remaining two  put modified files before tree-ishes because\nthere are generally few of the former and many of the latter \n  
6904,     40493/0001: _git-checkout: No functional change \n\nThis makes the next diff smaller \n  
6905,     40434: Jan Matejek: patchutils completion update\n  
6906,     unposted: vcs_info git: Fix typo in manual \n  
6907,     40480: vcs_info set-patch-format: Eliminate the remaining code duplication \n  
6908,     40479: vcs_info set-patch-format: Prepare for more code sharing between the callers \n\nThis changes hook invocation order in the hg backend \n  
6909,     40481: vcs_info hg: Pass arguments to the set-patch-format hook \n  
6910,     40478: vcs_info set-patch-format: Guard against empty variable elision \n  
6911,     40476: vcs_info $backend_misc: Document at the right point  provide in quilt  standalone  mode \n  
6912,     40486: Don t warn on creation of MATCH etc  in regex \n\nThis because they are created implicitly rather than by explicit\nuser request  so the warning may not be useful \n  
6913,     40483 (cf  Eric Freese: 40482): Remove zpty exit hook from forked processes\n  
6914,     40460: WARN_NESTED_VAR: Don t warn when assigning to a slice of an existing array\n  
6915,     40470: make the test work also with ASCII collation\n\na few OSs (macOS and some versions of BSDs) use ASCII collation even if\nUTF-8 locale is in use\n  
6916,     40466: Update dependencies for config h in / autoheader \n\nNeeds to happen after autoconf \n  
6917,     40469: change strategy from 40453 to use patcompile(PAT_HEAPDUP) instead of signal queueing \n  
6918,     40465: update methods to output $PWD in tests \n\nUse method from B01cd tst which resolves symbolic links and\nmatches against parameter in output \n  
6919,     40450  40451: Swifth language completion \n\nAlso resolve whether this is the openstack  swift  command \n  
6920,     40453: signal handler safety for callers of patcompile(PAT_STATIC)  which is not re-entrant \n  
6921,     40439: PAT_HEAPDUP definition just for clarity\n  
6922,     40440: Add $functions_source hash to zsh/parameter \n\nThis allows you to find out where a function was loaded from \n  
6923,     40200: Updated Perforce completion\n  
6924,     40425: HAVE_* tests for getutxent etc \n\nNot yet 100% clear where the #if s go  depends on how various\nsystems implement the old or new formats \n  
6925,     40423: WARN_NESTED_VARS  conversion the other way\n  
6926,     40422: More WARN_NESTED_VAR cases \n\nConverting type when using a calling scope was broken in the\noriginal patch \n  
6927,     40413: WARN_NESTED_VAR subscripted variable fix \n\nNo warning needed on paramter that s created temporarily to\nhelp assignment \n  
6928,     40403/0004: vcs_info set-patch-format helper: Part #4 \n\nThis also fixes the %a ($ hook_com[all-n  ) expando in the hg backend:\nbefore this change  it counted only unapplied changes \n  
6929,     40403/0003: vcs_info set-patch-format helper: Part #3 \n  
6930,     40403/0002: vcs_info set-patch-format helper: Part #2 \n\nNot all callers reset $ hook_com   but those that don t  immediately\noverwrite it a few lines later \n  
6931,     40403/0001: vcs_info set-patch-format helper: Part #1 \n  
6932,     40401: vcs_info git: Fix the %c patch-format expando \n\nBefore this change  $ git_unapplied_s  was unused and the %c\n($ hook_com[unapplied  ) expando evaluated to the number of digits in\nthe string returned by the gen-unapplied-string hook (or to the number\nof digits in the number of unapplied patches  when there was no such\nhook) \n  
6933,     40396: vcs_info quilt: More documentation of  %Q  and  use-quilt  \n  
6934,     40392: vcs_info patch2subject: Support `git show` output \n  
6935,     posted: Make D07 recognize more spellings of pl_PL UTF-8\n\nFreeBSD and probably others use this spelling in locale -a output  while\nglibc uses the utf8 spelling \n  
6936,     40404: Only quote command in whence output with -v \n  
6937,     40391: Add WARN_NESTED_VAR option and functions -W \n\nThese are companions to WARN_CREATED_GLOBAL  warning when a variable\nfrom an enclosing scope is altered \n  
6938,     unposted: Etc/BUGS: Record users/20807 vcs_info quilt issue \n  
6939,     43080: a few more tests for autoload with absolute path\n  
6940,     40375: autoload with explicit path mustn t trash already loaded function \n\nAlso remove unnecessary dupstring() on already duplicated string\nwhen expanding =cmd \n  
6941,     unposted:  autooad ~     also completes file\n  
6942,     40369: code should have been committed with 0a2d92f98\n  
6943,     40372: turn off POSIX_IDENTIFIERS option in completion\n  
6944,     40369: quote command paths in whence -v\n  
6945,     40353 with tweaks to whence -v: extend directory cache use \n\nNow used for all autoloaded functions after load  including those\nwhere the file was found along fpath  reducing duplication of\ndirectory names \n  
6946,     40362: Fix setting of parameter values in compvalues\n  
6947,     40355: _mpc: improve playlist completion\n  
6948,     40345: update lsusb completion\n  
6949,     40344: new lsblk completion\n  
6950,     unposted: one missing *name = NULL\n  
6951,     40342: Add directory name cache for autoload file paths \n\nThis renders  autoload /blah/blah/*  as efficient as use of\nfpath \n  
6952,     40335: More care with autoload function path \n\nIf doing  autoload -X   the path present might actually be location\nof file containing the function with the autoload -X   Add\nan explicit flag to say it\ s a directory for autoload \n  
6953,     40333: Fix the watch interface for utmpx\n  
6954,     40332: completion for new autoload features\n  
6955,     40321: _arguments option groups\n  
6956,     unposted: more care with shell function filename \n\nWhen updating shfunc structure to change filename we should be\ncareful to free whatever s there already  we may now be the\ndirectory in which to find the function definition   After loading\nthe field contains the full name of the file \n  
6957,     Add features associated with autoloading a function using an absolute\npath \n\n-d defaults to normal fpath\n\n-r remembers the path without actually loading   May be combined with -d \n\n-R does the same but it s an error if not found\n\n-X can now take a directory path: this is used to output not yet loaded\nfunctions that have an associated path \n  
6958,     40305: fix some problems redisplaying command line after interrupt \n\nBack off previous fix as this only covered some subset of problems \n\nRemaining problems happend after reset-prompt in TRAPINT \n\nOne was in complist and is fixed by not attempting to list after\nan error or interrupt \n\nThe other was owing to not resetting clearflag when ZLE\nwas re-entered \n  
6959,     40306 with doc tweaks: Change behaviour expanding alias in () function definition \n\nNow an error unless the () is part of the same error as the name \nAdd ALIAS_FUNC_DEF option to allow it again \n  
6960,     40303: _bts: Add more subcommands \n\nSince  done  is deprecated  stop offering it but do complete after it \n  
6961,     40318 (in part): Document echo \\c behaviour \n  
6962,     40302: New _swaks completion (common options only) \n  
6963,     unposted: LICENCE: Update year to $now (2017) \n  
6964,     40285: Be more careful with pattern allocation in history isearch \n\nIf there are ZLE hooks to be called  they may use patterns  in\nwhich case it s not safe to allocate the isearch pattern in the\nstatic buffer \n  
6965,     40270 (after 39995): Add cross-reference for robustness \n  
6966,     40264: _man: Complete all sections after  -a  \n\nFollowup to 37634 \n  
6967,     users/22320: Etc/BUGS: Add 40240  label 40106 \n  
6968,     40269: handle option exclusion within current word for clumped options\n\nThis replaces the change made in 13999 with an alternative approach \n  
6969,     40227: handle _arguments sets and rest arguments starting with a dash\n\nThis is a new approach to the problem first covered by 39611: checking\nto see if an option-like argument belongs to one of the other sets \n  
6970,     40226: tidy up some of the _arguments set code\n\nRemove old code for applying explicit exclusions between sets which\nfixes some odd behaviour  Some struct members were unused  Also added\nsome comments and test cases \n  
6971,     users/22319: $ ary1:^ary2  should not change isarr state of expansion of ary1\n\nUnless ary1 is made from a scalar  semantics of (@) in double quotes is lost \n  
6972,     40248: suppress errors from zshaddhistoryhook\n\nand do not call it if no history entry will be written\n  
6973,     40265: Fix problems with pure string in patterns with Meta \n\nCopy instead of relying on jiggery pokery with memory reallocation \n\nProblem was triggering with string ending with Dash converted to - \n  
6974,     40260: zero new space allocated in prompt buffer\n  
6975,     40231: Optimise setarrvalue() \n  
6976,     40232: Remove SH_USE_BSD_ECHO autoconf test \n\nIt is unused; doesn\ t make sense in  build on one box  install on many \ncontext; and its presence causes the downstream packages that install\nconfig h to be non-reproducible \n  
6977,     unposted (see users/22287): _comp_options needs to disable ERR_RETURN\n  
6978,     Oliver: 40118: alternate fix replacing 40115\n\nThis commit reverts 40115 (commit 3594f55f) thus restoring 38579  then\napplies 40118: Relocate BUFFER/CURSOR reset to work around  fc -p  issue\n  
6979,     40162: _arguments support for a match spec in combination with sets\n  
6980,     unposted: Post-release version bump to 5 3 1-dev-0 \n  
6981,     unposted: Release 5 3 1\n  
6982,     40210: Add support modern FreeBSD and drop support for FreeBSD < 5\n  
6983,     40209: Fix typo in chflags completion\n  
6984,     40149: vcs_info git: Avoid a fork \n  
6985,     40203: Resolve  printf --  question from grandparent commit (thanks Chet) \n  
6986,     40198: output of B02typeset differs when (( UID == 0 )) so do not attempt to redo that test in that case\n  
6987,     40179: fix handling of  printf -  and  printf -- \n\nunposted: regression test for 40179 / 37467\n  
6988,     unposted: update version to 5 3-dev-0 \n\nAvoid installed version trashing 5 3 release \n  
6989,     unposted: Release 5 3\n  
6990,     40134: silence spurious compiler warnings \n  
6991,     40139: tests: Convert comments to diagnostics; test backslashes  (after 40129)\n  
6992,     users/22182: Propagate 22161 docs patch to completion descriptions \n  
6993,     40137: document _external_pwds\n  
6994,     unposted: 5 2-test-3\n  
6995,     Document (E) parameter flag better \n\nIt produces 1 more than any other use of an index for the\nend of a match  helpfully \n  
6996,     40117: Revert a hunk of 40035 that changed semantics incorrectly \n  
6997,     unposted: minor D07 typos\n  
6998,     40138: Move regex multibyte test \n\nPut it last as it has an additional dependency \n\nOutput a failure message indicating this \n  
6999,     40126: zed (fned): When editing a new function  escape its name \n\nExample:\n\n    % unfunction \\(\n    % fned \\(\n  
7000,     40130: mention some changes since 5 2\n  
7001,     40129: revert 39611  add code comments and test cases for _arguments\n  
7002,     40119: correct typo in comment\n  
7003,     40114: complete :/ with other parameter operators\n  
7004,     40115: revert 38579 due to bug restoring BUFFER after history search\n\nThis reverts commit 20948d088994dc7b26a26b94926432985fa6863e \n  
7005,     40110: attempt to fix test failures on Solaris\n\nB02typeset: ignore strerror text in test output  it differs by OS\n\nC02cond: discard stderr when looking for a path to the  mount  command\n  
7006,     40107: _mount  _fusermount: fix quoting\n  
7007,     unposted: 5 2-test-2\n  
7008,     40102: Use subdirectory for test I/O files\n  
7009,     40100: ERR_EXIT and ERR_RETURN test for anonymous functions \n\nShould trigger on non-zero status at end of function even if\nbehaviour is suppressed by code inside the function at the point\nthe status is set \n  
7010,     Additional case for ERR_RETURN and ERR_EXIT \n\nDon t trigger just because status is non-zero at end of\ncurrent shell group \n  
7011,     Extra case for ERR_RETURN and ERR_EXIT \n\nDon t trigger just because status is non-zero at end of\ncomplex shell construct as this may be a case we ve already\nsuppressed \n  
7012,     unposted: vcs_info git: Handle rebase-apply sequences with >=10000 patches \n\nReview-by: Frank Terbeck\n  
7013,     40074: vcs_info git: rfc822-unfold rebase-apply patch subjects when msg-clean is unavailable \n\nExample (in this repository):\n\n    git -c merge merge-changelog driver=/bin/false rebase --onto=1955cce^^  1955cce^ 1955cce\n  
7014,     40088: atttempt to make interactive param test more robust\n  
7015,     unposted: regression test for 40071\n  
7016,     40071: change Dash back to  -  before evaluating named directory expansions\n  
7017,     40068: Abort execution when setuid/setgid fail \n\nThe incumbent code would print an error message and continue execution\nwith the previous uid/gid values  not even setting lastval:\n\n    % UID=42 id -u; echo $?\n    zsh: failed to change user ID: operation not permitted\n    1000\n    0\n    %\n  
7018,     40067: internal: Document  cmatcher   parse_cmatcher()   comptoend   unsetparam_pm()  and getindex() \n  
7019,     unposted: ChangeLog typo\n  
7020,     Get subject of current patch in rebase-apply mode\n  
7021,     unposted: 5 2-test-1\n  
7022,     40066: updates for 5 3 release\n  
7023,     40055: update git completion for git 2 11 0\n  
7024,     40053: exclude current directory of active zsh from _external_pwds ompletion matches\n  
7025,     unposted: vcs_info: Break out VCS_INFO_quilt-patch2subject into VCS_INFO_patch2subject\n\n    so other places can use it; compare 40030 in the 39990 thread \n  
7026,     unposted: fix previous commit\n  
7027,     40024: Update _path_files since quoting requirements changed in 39412\n  
7028,     40050: prepend /**/ to global functions and #ifdefs\n  
7029,     40049: NEWS about Unicode 9 (40037)\n  
7030,     40043: fix computil c indentation (cosmetic)\n  
7031,     40036: _bts: Complete removal syntaxes correctly \n\nThe incumbent pattern matched the minus in  bts tag 42 - <TAB>  (and other \nsimilar subcommands) \n  
7032,     40034: clear badcshglob when ignoring errors\n  
7033,     40032: consistency in handling of subscript slices outside the bounds of an array parameter\n\nunposted: README: example describing 40032\n  
7034,     40037: Unicode 9 character width support \n\nEnable with --enable-unicode9 \n  
7035,     40035: Cosmetic fixes for comments and documentation \n\nMostly fixes to doubled words \n  
7036,     40026: Fix for completion after redirection \n\nThis could get confused about where we were in the command\nline word array e g  after the > of  !>      Also take more care\nif does confused  with debug output  Also neaten up one\nobscure test \n  
7037,     unposted: Complete the $foo[(f)  flag \n  
7038,     unposted: _git-config: Fix user email completion to complete only bare email addresses \n  
7039,     40011: Make $_comp_priv_prefix only declared when required  and use that to have chgrp offer all groups under doas  ssh  etc as well \n  
7040,     40010: builtins: Say  bad option: +x   not  bad option: -x   when +x was passed \n  
7041,     40009: alias -L: Emit aliases that begin with a plus sign correctly \n  
7042,     39757 plus test: Fix completion under parenthetical directory names  broken in 39412\n  
7043,     40013: process zsh-specific time format extensions correctly\n  
7044,     unposted: set new vichange flag for surround widget\n  
7045,     40020: new cscope completion\n  
7046,     40018 + 40019: Add missing commands to Debian apt completion\n\nUpstream ref\n   com/Debian/apt/commit/5aba18968d87500232244760101ab2954c106581\n  
7047,     unposted: fix typo (=+ to +=)\n  
7048,     40004: fix cache mechanism  complete groups and other minor improvements\n  
7049,     unposted: fix to compile on Solaris where curses h has a #define for reg to register\n  
7050,     40003: include  0- 9 vi buffers in the registers associative array\n  
7051,     40005: call _date_formats from _date\n\nalso update both files for darwin etc \n  
7052,     39982: $SPROMPT: Don t accept a spelling correction at space/tab \n\nThe patch also downscopes a couple of local variables  with no\nfunctional change \n  
7053,     unposted: clear ERRFLAG_ERROR before invoking immortal widget (cf  39934)\n\nUpdates commit cbb9ca3d\n  
7054,     unposted: add test case for partial completion matching of options with arguments\n  
7055,     unposted: fix printf -v to an array without format string reuse\n  
7056,     39993: Tests for 39981 \n  
7057,     39981: Make compstate[to_end  skip suffix and hidden suffix  but not ignored suffix \n\nMotivated by 39930 \n  
7058,     unposted: Credit Sebastian for 39992 \n  
7059,     39986  39989: improve handling of vi-repeat-change\n\nSave previous vi change and throw away a new change that fails \nAdd zle -f vichange to allow shell widget to be a single change \nFix repeat of command where numeric arguments were multiplied \n  
7060,     39974: complete shared libraries for -e and -s options to ssh-add\n  
7061,     39900: Add TERMINFO_DIRS special like TERMINFO \n\nAlthough this is a colon-separated array there is no tied array \n  
7062,     39995 (from 39977): Optimise string parameter assignment \n\nIf setter is the standard one and string length is unchnaged we can\ncopy into place \n  
7063,     39978: more accurate doc for finding job by string\n  
7064,     39992: setarrvalue: Allocate a correctly-sized array \n\nNo memory was lost; the array was allocated with room for one (char *) element\nmore than was required \n  
7065,     unposted (after 39952): Restore C89 compatibility \n  
7066,     39985: Document the [nyae  answers to the spelling correction prompt  $SPROMPT \n  
7067,     39916 + 39930 + tweak: _git: Complete options and values for -c \n\nThe  $@  in the option-names call is added in order to propagate the new (-S =) arguments \n\nThis bifurcates _git-config() in order to provide completion for\n\n    % git -c <TAB>\n    % git -c foo=<TAB>\n  
7068,     39958: Add extra byte to PATH_MAX allocations \n\nThis ensures we ve got enough space for a null  although this\nisn t always needed \n  
7069,     39921: __git_recent_branches: Remove erroneous parsing of partial ref names as tags \n\nIn the reflog  partial ref names in the  from  field always represent names of\nheads   (That is not true for the  to  field )  The parsing of tag names was\nadded in commit 39102 (317c96b64f43688a6be08a8b1c93b6ab4eed662c) for equivalence\nwith the then-previous implementation which used `git log $partial_ref_name` \nThe equivalence was correct  however  the then-previous implementation was not \nsince it would consider $partial_ref_name as a refs/tags/ name if a refs/heads/\nname did not exist \n  
7070,     39922: __git_recent_branches: Fix an  assertion  failure when two branches (refs) point to the same commit \n  
7071,     39917: Complete setsid(1) as a precommand\n  
7072,     39915: whence: Honor PATH_DIRS option for arguments that start with   /  or    /  \n\nWhile here  add some docstrings \n  
7073,     39962: bind vi case conversion widgets\n\nu/U in visual mode and g~ from normal mode\n  
7074,     39959: when repeating vi changes advance through the numbered killring registers\n\nAlso fix numeric arguments with vi-repeat-change: and argument passed\nto the repeat replaces that previously saved with the change \n  
7075,     39952: add registers special parameter to provide access to the vi register buffers from a zle widget function\n  
7076,     39945: allow further tab presses to move on to menu completion even when compstate[insert  is emptied\n  
7077,     39943: no need to compute arrlen() in arrdup_max() when max == 0 \n  
7078,     39949: Special case for  -  in directory names \n\nIt can be sh-tokenized to Dash to allow for appearing in ranges\nafter substitution  so needs to be turned back to  -  in that case \n  
7079,     39947: Additional test for array subscripts \n\nThis checks out-of-range multiple subscripts with and without\nthe (@) flag \n  
7080,     39937: fix a problem introduced by 39886 \n\n$a[i j  should become an empty array if i>j \n  
7081,     39906: More multibyte optimisations for US-ASCII \n\nThis treats characters 0 to 0x7f as single byte US-ASCII along\nthe lines we already do in other places in the code \n  
7082,     unposted: comment in zlecallhook() points to redrawhook() just in case\n  
7083,     39934: if a widget execution fails  try to execute a corresponding immortal widget instead \n  
7084,     39933: more of zlecallhook() in redrawhook()\n\nadd commentary on some of the differences\n  
7085,     39929: clarify execute  -last -named-cmd\n  
7086,     unposted:  Addenda to list of module hooks\n  
7087,     unposted: add list of standard module hooks with corresponding macro names\n  
7088,     39920: extend yum completion\n\nadding the following yum commands:\n * update-to (just what update expands)\n * upgrade-to (just what update expands)\n * history (the actual tricky one)\n * help (printing the available commands)\n * load-transaction (_files)\n * load-ts (_files)\n * check (just what the man page suggested)\n * reinstall (just what erase does - suggest installed packages)\n * downgrade (just what erase does - suggest installed packages)\n * repolist (just what the man page suggested)\n * distribution-synchronization (just what erase does - suggest installed packages)\n * distro-sync (just what erase does - suggest installed packages)\n\nA few history commands don t get expanded \nTaken from the man page of yum 3 2 29 \nReindented file \n  
7089,     39893: use arrdup_max() to show explicitly the difference in two code branches\n\nno functional change\n  
7090,     39874/0002 plus size=0 handling: zshcalloc: Remove code duplication  No functional change \n  
7091,     39874/0001: setarrvalue: Remove needless initialization \n  
7092,     39901: No EXIT trap on LHS of pipeline \n\nThere is a special case if the LHS is a shell construct \nAdd unit tests for both cases \n  
7093,     39890: typo corrections in completion functions\n  
7094,     39888: update tmux completion for tmux 2 3\n  
7095,     39884: fix history-beginning-search-menu for history lines containing a pipe character\n  
7096,     39882: mention $ name:/pattern/replacement  in the itemized synopsis with the related forms; clarify doc \n  
7097,     39887: no need to conditionalise assignment of strlen()\n  
7098,     39886 based on 39877: Optimise arrdup to arrdup_max \n\nOnly duplicate as much of the array as is needed \n  
7099,     39875: add dupstring_glen to avoid redundant strlen calls\n  
7100,     39853: _subversion: Accept long options in the  --foo=bar  syntax \n  
7101,     39871: cut down number of strlen()s in getstrvalue()\n  
7102,     39870: ensure exit trap can always run\n  
7103,     39857: add support for darwin  with improvements on linux etc \n  
7104,     unposted: follow up to 39867: don t need test against zero\n  
7105,     39869: can transfer ownership of core of array when assigning\n  
7106,     39867  tweaked: Use cast to unsigned char to test character \n\nWe want the unsigned variant to be <= 0x7f   Use the normal STOUC()\nmacro and turn this into a single test \n  
7107,     39856: module completion improvements \n\nFollow symbolic links when finding \n\nUse _multi_parts for paths when completing modules \n  
7108,     39855: new completion for jot command\n  
7109,     zsh-users/22083: attempt to explain what a word is in parameter substitution \n  
7110,     39840: _cpio: Declare variable s type correctly \n  
7111,     unposted: ChangeLog typo\n  
7112,     39728: define _GNU_SOURCE on Cygwin\n  
7113,     39849: _tmux: Remove set-remain-on exit\n\nThis was removed recently  since it was superseded by hooks \n  
7114,     39848: _tmux: Update options to latest tmux\n  
7115,     39847: Update helper function name pattern\n\nIn 580698bc71  Oliver updated a whole bunch of options in a number of\ncompletions  While at it  he also changed a bit of coding style  to\nbetter adhere to Etc/zsh-development-guide — among those changes is to\nconvert  function foobar()    function definitions to  foobar()    \n\nThis broke Util/check-tmux-state so that it couldn\ t detect any\nsupported tmux sub-commands within _tmux anymore  This updates the\nregular expression that is used in the script to match and list these\nfunction definitions \n  
7116,     Thomas Bereknyei  Mic92: 39831: find  getent  by the usual command search  not just /usr/bin/\n\nAlso tweak the replacement getent to handle /etc/hosts format \n  
7117,     unposted:  tests for 39839  39844\n  
7118,     39844: fix  while  condition as per 39839 (commit 2c56c7e5)\n  
7119,     39839: fix  return  from  if  condition\n  
7120,     39838: another missing unqueue_signals()\n  
7121,     39829: when compstate[insert  is emptied by the completion function and AUTO_MENU is set  start menu completion on the second tab press rather than the third\n  
7122,     39834: when print used with -v and -l  include a final newline\n\nAlso complete print -S option and make further use of the\nnew printf to an array feature in other completion functions \n  
7123,     39389: when printf -v is used with an array use separate elements each time the format is reused\n  
7124,     users/22080: bracketed-paste: Third time\ s a charm \n\nvi-set-buffer: Eliminate the sole use of the term  register  \n  
7125,     39825: optimise mb_metastrlenend() for 7-bit character \n\nAs the shell relies intimately on US-ASCII as a subset we can\nskip the multibyte functions if we are dealing with a complete\n7-bit character \n  
7126,     39818: _awk: add nawk to the list of commands\n  
7127,     39824: test case for 39811 (commit ae4c035c)\n  
7128,     unposted: comment explaining key buffer handling \n\nDescribe putting back the tail end of the key buffer into\nthe input \n  
7129,     39806: internal: Document zle s vichgbuf \n  
7130,     39805: internal: Document some compadd internals \n  
7131,     39804: internal: Document matchspec flags \n  
7132,     39803: internal: Document bin_compadd() \n  
7133,     39802: internal: Document and simplify multiquote() \n\nThe code simplifications take advantage of the fact that all callers\npass either 0 or 1 for  ign  \n\nThe tildequote() text is from workers/39271 \n  
7134,     users/22063: bracketed-paste: Document ability to specify a vi register  (after users/22036)\n  
7135,     unposted: fix typo that was causing handling of  --  argument to fail\n  
7136,     39820: vi-repeat handles multi-key bindings\n  
7137,     39813: fix keybuflen after ungetting extra keys from the end of keybuf in getkeymapcmd() \n  
7138,     39822: _git: remove  -A \ -*\   with _arguments for some commands\n\nWith e g  `git rebase origin/master` you can have options like\n`--no-autosquash` after the argument \n\nI have tried the commands where this patch removes `-A` \nCommands like `git fetch-pack` that do not support options after\narguments are left unchanged \n  
7139,     39815: Read input to end on parse error in $(   ) inside a string \n\nThis allows $ (z)  to output the whole string  although we can t do\nword splitting from the error onwards \n  
7140,     39811: vi-repeat-change must not be the  motion  of vi-change  lest it infinitely repeat itself\n  
7141,     39797: obsolete the helper functions fixed by the previous two changes\n\nReplacing them with the new $ var:P  modifier \n\nPrevious deltas may be useful for backport to zsh 5 2 and before \n  
7142,     39731: _awk: add support for gawk ver 3 and 4\n  
7143,     39787: Add a regression test for 39412 \n  
7144,     39795: preserve  cd -  behavior around directory shuffling in _canonical_paths_pwd\n  
7145,     39792: improve handling of relative paths in _canonical_paths_add_paths\n  
7146,     39786: vcs_info (hg): Use native hexdump implementation instead of external command \n\nFixes issue whereby the external command would print  *  for repeated\noctets \n\nIncludes comment change  cf 39790 \n  
7147,     39777: $() is a valid empty command substitution\n  
7148,     39758: revise 39704 for array and hash parameters; more POSIXBUITINS tweaks for\nexport\n\n39704 was commit 0f5e670  forgot to reference article number in that log \n\n typeset -p  outputs  typeset  for array and hash parameters  even when\nexported  because those types can be marked export but are never pushed\nto the enviroment \n\nFor POSIXBUILTINS   export var  does not implicitly set $var  and its\nexport state is preserved when assigned (but not when explicitly unset) \n  
7149,     unposted: add  --  to zle widget call for conventional sanity\n  
7150,     _git-cherry-pick: Complete argv[2  et seq \n  
7151,     unposted: handle empty pastes and  zle bracketed-paste variablename  form \n  
7152,     users/22036: bracketed-paste: Document cutbuffer behaviour; clarify \n  
7153,     unposted: Minor documentation fixes (markup  grammar  etc) \n  
7154,     39739: Complete negative integers for -n/-c in the GNU variant   (after 39479)\n  
7155,     unposted: mention former behavior of typeset for comparison\n  
7156,     39725: more metafication of patterns \n  
7157,     39723: metafy string passed to pattern in complist \n\nAlso additional safety tokenizing a string with Meta characters \n  
7158,      typeset -p  uses  export  commands or the  -g  option for parameters that are not local to the current scope\n  
7159,     39706: _tilde_files: Offer named directories  Document \n  
7160,     39708: Document _email_addresses \n  
7161,     39707: Document _dir_list \n  
7162,     39715: Handle multibyte characters in complist listing\n  
7163,     39710 (cf  Alex George: 39709): handle the %o format in the  all-expansions  tag\n\nAlso allow a single unique match to appear in the  expansions  tag of _expand in the same way as _user_expand (users/21955 commit 18200dc0)\n  
7164,     39688: Skip out of P_EXACTLY pattern loop if P_PURES \n\nIf it s really a pure string  there s only one exact match   We could\noverwrite the next pointer; usually this didn t matter because\nwe d hit a termination  but if we reallocated we might be looking\nat garbage \n  
7165,     39683: Update scan pointers after possible alloc \n\nProblem could cause next scan index to point into an invalid block\nwhen handling meta characters \n  
7166,     39680: correctly handle case of popping last arena\n\nThis mattered only when compiling with --enable-stack-allocation because\notherwise the heap was never completely empty \n  
7167,     39678: metafication of printf %q argument and result\n  
7168,     39590: zle: Call zle-line-pre-redraw after inserting a completion result\n\nThis is necessary to make sure redrawhook() is called while\ncycling results in menu completion \n  
7169,     39654: (based on patch by Baptiste Daroussin) Better support bmake  FreeBSD s default make(1) implementation \n\nDon t pass gmake options to bmake \n\nAdd bmake-speciic codepath for completing targets and parsing the makefile \n  
7170,     39657: _zstyle: Complete the -g  -s -b -a  -t -T  -m options \n  
7171,     39657: _zstyle: When completing a style for an unrecognised context  complete all known styles \n\nPreviously  vcs_info styles weren t completed \n  
7172,     39657: Make a helper function global \n  
7173,     39500: compdescribe: perform on-screen-width computation using the  nice  length  since the matches are rendered by nice*() functions by compadd\n\nRemove two  ###  question comments relative to the patch posted  since the\nanswer to them is (clearly) negative \n  
7174,     39624: remove space before compdef that prevents yafc completion function being used plus other tweaks\n  
7175,     39623: new evince completion\n  
7176,     39625: case needs to reset lastval if no pattern matched\n  
7177,     39622: add test cases for recent _arguments fixes  exclusion lists and -A/-S\n  
7178,     39611: with _arguments sets completion stopped if one of the rest arguments starts with a dash\n  
7179,     39533: add the new -L option  sort options and add some exclusions\n  
7180,     36108: command -[vV  assumed -p\n  
7181,     39599: Don\ t reset status before  case  execution\n  
7182,     39522: add-zsh-hook/add-zle-hook-widget: Promise append semantics \n\nThe sentence about  as widgets  is removed since there is a whole paragraph\nabout that later on \n  
7183,     39489: _path_files: Interpret -P as literally  rather than as a pattern \n\nFollow-up to the last commit \n  
7184,     39479 + 39481 minus _path_files hunk (see 39489): Completion: audit  compset -P  calls to use shortest match where applicable  plus random drive-by tweaks \n\nFound by grepping for patterns that can match needles of various lengths:\n\n    :grep  compset -[PS  *[\\#^*()\\|<>?~\\   Completion/\n  
7185,     39579: Fix string calculation for parameter quoting \n\nWhere there was no closing quote the size or position of the null\ncould be wrongly calculated \n  
7186,     39578: Test more ERR_RETURN cases with  &&  and functions\n  
7187,     39571: Fix ERR_EXIT bug with && and function \n\n foo && bar  inside a function could cause the code outside\nthe function not to perform ERR_EXIT or ERR_RETURN when needed \n  
7188,     39568:  ! <complex-command>  suppresses ERR_EXIT\n  
7189,     39566: missed ChangeLog\n  
7190,     39566: Improve usefulness of command_not_found_handler \n\nDon t behave as if command not found if return status is non-zero\n\nas this may simply be the return status of the replacement command \nLet the function report a command not found instead \n  
7191,     39561: missing unqueue_signals() when ZSH_HEAP_DEBUG\n  
7192,     39550: reset signal queue in recursiveedit()\n  
7193,     39548: DEBUG for queueing_enabled\n  
7194,     39547: handle zero delta in calc_timeout()\n  
7195,     39545: Add some missing unqueue_signals() \n\nAll of these are added simply to fit existing logic in other branches \n  
7196,     39521: Refactor start of execcmd() \nBy splitting into _analyse and _exec execpline2() has easier\naccess to the state at the start of execution   Use this\nto ensure we fork if this is a builtin with no arguments \n  
7197,     39540:  ! command  should suppress ERR_EXIT and ERR_RETURN\n  
7198,     39495: add-zle-hook-widget: Add end-of-options guard to hook invocation \n\nCurrently  the only special widget that takes arguments is zle-keymap-select \n  
7199,     39480: _reportbug: Complete absolute filenames  too \n  
7200,     unposted: update or remove references to typeset behavior obsoleted by 35586 \n  
7201,     39509: in the event the current directory has been removed  use chasedots semantics for  cd     \n  
7202,     39519: restore missing PM_EXPORT flags \n\nThis was missing when exporting using USE_SET_UNSET_ENV coce variant \n  
7203,     39517: back off 39502 (WC_ASSIGN causes fork in pipe) \n\nThis isn t a robust fix as WC_ASSIGNs simply precede the main wordcode \n  
7204,     39498: use PRIVILEGED option to decide on problematic parameter imports\n  
7205,     Call the pre-redraw hook if there is text in the buffer on init\n  
7206,     39514: pass on --git-dir when calling git to get completion matches\n  
7207,     39513: new doas completion\n  
7208,     39464: fix where lack of $state check caused unwanted filename completion for fmadm\n  
7209,     39507: TMPSUFFIX for =(   )\n  
7210,     39470: failure to open a supposedly unique temp file name should result in an error\n\nAlso band-aid for signal-related race conditions in temp file name generation\n  
7211,     39502: Fork for assignment in LHS of pipeline \n\n  foo=bar | stuff\n\nleft the value of foo set to bar as we didn t realise we needed to\nfork \n  
7212,     unposted: Update findcmd() in Zle \n\nUnfinished business from previous patch \n  
7213,     34943: Fixes for  command  with multiple options \n\nThese need to combine properly  and alos  command -p  with either\n-v or -V needs to search for builtins and then using the default\nsystem path \n  
7214,     unposted: change  \\0  to NULL to silence spurious compile warning \n\nparams c:830:13: warning: expression which evaluates to zero treated as a null\n      pointer constant of type  char *  [-Wnon-literal-null-conversion \n    *envp =  \\0 ;\n  
7215,     39463: an additional test for default system path\n  
7216,     39460: Don t import PS4 if running as root \n\nThere was an exploit in bash using SHELLOPTS to turn on xtrace \nhowever this can t happen in zsh  so this is simply a precaution \n  
7217,     unposted: remove extra close-paren from d6a6b4ff\n  
7218,     39453: new openstack completions\n  
7219,     39369 (tweaked cf 39371): when calling an internal widget  set bindk because some widgets use it to determine how they should act\n  
7220,     39437: use list_pipe_pid in assignment for clarity\n  
7221,     39448: reset REPLY in select on user action\n  
7222,     39436: Pass on status of SIGINT better \n\nSet lastval to 128 + SIGINT on interrupt \n\nDon t execute builtin if already interrupted at that point \n  
7223,     39435: Further fix for pgrp of funny pipelines \n\nDon t set gleader of SUBJOB at the point of creation if the\nSUPERJOB has no processes yet \n  
7224,     39423: _zed: Support the  --  end-of-options mark \n\nThis matters for fned ing vcs_info hooks \n  
7225,     39423: vcs_info git: Produce nicer applied-string messages for \ exec\  actions \n\nThis changes the behaviour on  unknown  git-rebase actions (those other\nthan pick/reword/edit/fixup/squash/execute) \n  
7226,     39412: Fix directory completion when $PWD:h contains parentheses  which are interpreted as globbing metacharacters \n  
7227,     39410: Fix unintentional history modifiers \n  
7228,     unposted: _gpg: Correct typo\n\nReceived via github (pull request #9) \n  
7229,     unposted: add missing final colon in zstyle context lookup\n  
7230,     users/21955: add missing final colon in zstyle context lookup; allow a single unique match to appear in  expansions  tag\n  
7231,     39370: complete -w and -K options to zle following the widget name and numeric base to integer\n  
7232,     39407: cleanup minor issues in cpupower completion; updated through to version 4 8\n  
7233,     39385: _bts: Complete more argument types for  cache  and  show  \n  
7234,     39383: compadd: Restrict previous patch to the case where $PREFIX includes characters both from the -P prefix and from the (unprefixed) candidate completion word \n  
7235,     39372: compadd: Match -P prefix all-or-nothing rather than greedily \n  
7236,     39381: handle save/restore of variable values when  typeset -related reserved words are prefixed by an assignment\n  
7237,     bracketed-paste-url-magic: Handle magnet links too  and allow for schemes without //\n  
7238,     39374: _apt: Complete package versions in the  packagename=<version>  syntax \n  
7239,     39356 (tweaked  c f  Bart 39358): Etc/BUGS: Remove fixed items  add  compset -q  item from workers/39306 \n\nThe first removed hunk is fixed by ZLE_RPROMPT_INDENT \n\nThe next two removed hunks work (on my system  anyway) with current master \n  
7240,     39362: another race with pipeline handling \n\nWhen forking the shell to control the right hand side  the\nforked subshell now always starts its own process group  to\navoid getting a spurious additional SIGSTOP \n  
7241,     39359: Fix remaining race with orphaned subjob \n\nWhen shell is forked to run right hand side of pipieline it should\nuse its own PID as process group if the left hand side of the\npipeline has already exited \n  
7242,     39331: Reparent subjob on fork with exited superjob \n\nFixes case of\n  v()     vim -   always   true    \n  ls | v\n  ^Z\n  fg\n\nTentative fix: still a race at exit where zsh forked by ^Z\nis stopped when restarted \n  
7243,     unposted: _postfix: Correct quoting in _call_program invocations \n\nFixes completion when the command name ( postconf ) or the argument to\nthe -c option ( /etc/postfix ) are quoted on the command line  as in\n\n    % postconf -c  /etc/postfix      <TAB>\n  
7244,     39312 (tweaked): _postfix (postconf): Complete only applicable parameters for -X and -# \n\nUnposted tweak: change the tag and description in the _describe call \n  
7245,     39310/0010: internals: match_str: Simplify expression \n\nIn the first hunk we actually know that ind==0 since sfx==0  but keep it identical\nto the last hunk \n\nAlso add a comment (unrelated) \n  
7246,     39310/0009: internals: match_str: Downscope local variable  t  \n\nRemove needless initialization (it is written to again before it is ever read) \n\nNote there was another  t  variable at the end of the function that shadowed\nthe int  t  \n  
7247,     39310/0008: internals: match_str: Document several local variables \n  
7248,     39310/0007: internals: match_str: Rename and constify local variables  oll    olw  \n  
7249,     39310/0006: internals: match_str: Downscope local variable  bpc  \n  
7250,     39310/0005: internals: match_str: Constify some local variables \n  
7251,     39310/0004: internals: match_str: Document  savl  \n  
7252,     39310/0003: internals: match_str: Document  savw   Avoid magic number \n\nAll callees checked to ensure that they only check that parameter for nonzeroness \n  
7253,     39310/0002: internals: match_str: Simplify by removing  zoff  \n\n zoff  was only used within  if (sfx)  blocks  in which case it was initialized\nto  alen   so simply s/zoff/alen/g    alen  is not const but it first changes\non line 794  after the last use of  zoff  \n  
7254,     39310/0001: internals: match_str: Document some local variables  See 39123 \n  
7255,     39311: _tmux-capture-pane: Tweak specifications of -S/-E and description strings \n  
7256,     39333: include name of command used to gain priviliges in context for command and gain-priviliges styles\n  
7257,     39332: support ksh s [[ -v varname    condition for checking if variables are set\n  
7258,     unposted: remove duplicated assignment\n  
7259,     unposted: small documentation tweaks\n  
7260,     zsh-users/21903: Fix $    ?     in interactive shell \n\nOn failure should abort back to top level  but we reset the error\nflag around commands   Add a hard error flag that s only reset at top level \n  
7261,     unposted: _libvirt: Add another noglob  (Follow-up to 39199)\n  
7262,     39199: _libvirt: Support libvirt URLs that contain a literal question mark under noglob \n\nE g  \n\n    % noglob virsh -c qemu:///system? start <TAB>\n\nConflicts with 39261 resolved \n  
7263,     unposted: _git: Permit multiple -c options \n  
7264,     39307: update options up to vim 8\n  
7265,     39299: better Freebsd support in _external_pwds using procstat\n  
7266,     39292: Distinguish  =  and  ==  tests in output \n\nThis is both in xtrace output and shell code rebuilt from\ninternal structures \n  
7267,     39305: Fix error handling after parse for here document \n\nKeep the error status the same as before  but also retain\nthe interrupt status if that was non-zero \n  
7268,     39295: allow -- to appear in the command line passed as an argument\n  
7269,     39287: add  tif as a valid extension for TIFF files\n  
7270,     unposted: reference use of widgets to effect editor changes from a sched command\n  
7271,     39297: more of 39284  it s painful to add texi nodes in yodl\n\nAlso fix some inconsequential ChangeLog typos \n  
7272,     missed this\n  
7273,     39255: = in conditions is not going anywhere\n  
7274,     39268:  zsystem flock -t 0      tries only once to flock and immediately returns success or failure\n  
7275,     39284: Added Completion System Variables as a menu item\n  
7276,     39261 (tweaked cf  Daniel: 39275): don t unconditionally elevate privileges with sudo in completion functions\n\nA new gain-privileges style enables it and a _comp_priv_prefix array\nadded for tracking how to match privileges for the current command\n  
7277,     39252: internal: quotestring: Drop the  e  parameter  which no caller uses \n  
7278,     unposted: Add tests for $ (q)  being aware of the EQUALS option \n  
7279,     39236 (plus typo fix): docs: Tweak _arguments $opt_args documentation added in 39173 \n  
7280,     39222: test math functions in modules \n\nUse zsh/system \n  
7281,     39194: _man (Solaris): Ignore man-index  Support multiple sections in the -s flag s argument \n  
7282,     unposted: fix to use ;| style fall-throughs in the case statement\n  
7283,     39209: Update options\n  
7284,     39208: Update flags\n  
7285,     39223: Introduce addflags function to reduce redundancy\n  
7286,     39193 (cf  Yoshio Hanawa: 39192): don t pass options from after -- on to compadd\n  
7287,     39185: Only set word begin for completion word if not alias \n\nThis is consistent with other ZLE code in lex c and fixes a crash\nin some completions involving aliases  e g  if uncompleted quotes \n  
7288,     39221: update rm completion for BSD\n  
7289,     39218: Fix module feature enables with math functions \n\nIf they were present parameters were miscounted \n  
7290,     39217: fix error name generation with GCC \n\nAdapt the same trick as in zsh mdd to ensure we don t get\npreprocessor lines in the output \n  
7291,     38153: change the way long options are examined for  =  signs to more accurately identify options that take arguments\n\nNote in workers/39135:\nThe pattern in 266/268 appears to match the \ =\  sign even though it\ s in the\nsecond colon-separated field  where it doesn\ t denote a mandatory argument \nI\ m guessing the pattern match on lines 266/268 should be fixed    \n\nThis commit alters those patterns in what is hoped to be the desired way \n  
7292,     39174: _ssh: Fix completion of ProxyCommand option \n\nThe incumbent code would discard the first word of the value of the\nProxyCommand option   Stop doing so   With that removed the remaining\ntwo lines were equivalent to _cmdstring  so just call it directly \n  
7293,     39173: _arguments: Escape colons and backslashes in $opt_args unambiguously \n  
7294,     39171: _libvirt: Apply $opt_args-unescaping \n\nThis causes the value of $conn_opt in the code not to have a backslash\nin front of the colon \n  
7295,     unposted: _libvirt: Escape $words elements to avoid their interpretation as a pattern against $_cache_virsh_cmds \n  
7296,     unposted: Fix leakage of $word (after 39179) \n  
7297,     39181: Add PM_SINGLE and use for compstate \n\nThis flags that compstate (or any other special) can only have\na single instance and an attempt to create a new one is an error \nGiven the very fiddly semantics of compstate any other usage\nseems pointless \n\nNo investigation yet of other variables that could use this \n\nNote it s still possible to hide such variables; only instances\nthat keep the special nature are affected \n  
7298,     39179 (plus tweak): More _libvirt (virsh) completion tweaks\n  
7299,     39167: Make $ENV handling more like POSIX\n  
7300,     unposted: internals: Document zshcompwid(1) parameter implementations \n  
7301,     39158: cleanup following review comments of _libvirt function\n  
7302,     39165: update options to correspond to latest versions of software in various functions\n  
7303,     unposted: _postfix_queue_id: Unbreak completion of short queue ids of held/active messages  broken in 39108 \n  
7304,     39154: _files: -/ with list-dirs-first resulted in a bad pattern  thus aborting completion partway \n  
7305,     39118: (almost) complete virsh completions\n  
7306,     39141: Use zsh instead of sh in SHLVL test \n\nThis removes ambiguous behaviour of sh which may or may not\nincrement SHLVL \n  
7307,     39125: More care needed decrementing SHLVL on exec \n\nNot needed in subshell \n  
7308,     39131: return on error needs to be at the outer scope \n  
7309,     39122: __git_recent_branches: Silence warning on an edge case \n\n(The warning was correct; there is no functional change  though )\n  
7310,     39108 (tweaked): _postfix: Support $enable_long_queue_ids \n\nNote that this not only adds a second compadd invocation but also adds a space\nto the first compadd invocation  to prevent the start of a new-style queue id\nfrom matching as an old-style queue id \n  
7311,     39110: _postfix: Complete  postconf  \n  
7312,     39107: _postfix: Complete  postqueue   Also minor tweaks to  postsuper  \n  
7313,     39109: _postfix: Use mailq to obtain queue id s \n\n mailq  is usually in */bin (as opposed to */sbin) and so is more likely\nto be in $PATH \n  
7314,     39115: repair forced joining when (@) and (j) are used together\n  
7315,     39112: _x_utils: Use state_descr\n  
7316,     39105: _hashed_absolute_command_paths: Make the display string the basename \n\nThis makes better use of terminal real estate \n  
7317,     39103: _typed-in_absolute_command_paths: Better handle non-empty arguments that don t start with a slash \n  
7318,     39070: umount: Complete /f/b<TAB> → /foo/bar (for absolute path arguments only  for now)\n  
7319,     39104: do not hash relative paths in findcmd()\n  
7320,     39102: __git_recent_branches: Optimise \n\nThis improves performance from 0 6s to 0 04s (+93%) on one of Daniel Hahler s repositories \n  
7321,     39094: _git-config: When an option is unknown  complete its value to the set value \n  
7322,     39087: fix  conditionally uninitialized  variables\n  
7323,     39086: declare file local variables as  static \n  
7324,     unposted (c f  Mikael: 39078): fix for git blame terms\n  
7325,     unposted: _git-config: sendemail smtpserver: Correct tags \n  
7326,     39046 + 39061: New :P history modifier \n  
7327,     39064: use scalbn() instead of scalb() (mathfunc c)\n  
7328,     39074: _ip-neighbour: Fix typo in  lladdr  \n  
7329,     39072: minor tweaks\n  
7330,     39071: update completion functions for changes in Solaris 11 3\n  
7331,     39067: update options to correspond to latest versions of software in various functions\n  
7332,     unposted: _canonical_paths: Port docstring changes from 39044 \n  
7333,     39044 (in part  see thread): Document _canonical_paths in the manual  too \n\nThis mostly copy-pastes the source code comments and adds markup  however  the\npositional arguments are now annotated optional  and a  )  was added \n  
7334,     39039: fix documentation of transpose-words\n  
7335,     39040: Completion/…/_git: fix missing backslashes in 39036\n  
7336,     39036: update git completion for new options up to git 2 9 2\n  
7337,     39026: pattern specified with _arguments  -A option shouldn t be checked against words after the cursor\n  
7338,     39035: $ (A)name=word  should expand as an array even when there is only one element \n  
7339,     39031: Ensure variables in transpose-words are initialised\n  
7340,     39029: document transpose-words change\n  
7341,     38983: Make transpose-words handle numeric arguments sensibly\n  
7342,     39028: more join/split cases fixed and tested \n  
7343,     39019 (cf  PWS 39013): add test cases for more join/split combinations\n\nAccidentally omitted from previous commit \n  
7344,     39019 (cf  PWS 39013): fix SHWORDSPLIT regression introduced by workers/29313\n\nAlso add test cases for more join/split combinations\n  
7345,     39014: Use special OpenBSD interface to get correct rand() behavior\n  
7346,     unposted: fix typo in comment\n  
7347,     unposted: fix formatting in module discussion; add mention of widgets and keymaps for modules \n  
7348,     workers/38995 (in part): compfiles: Add reverse-engineered documentation breadcrumbs \n  
7349,     38996: _man: Support _correct_word \n\nSince compfiles is undocumented  avoid its use altogether  replacing it by\na construct that blackbox analysis suggests to be equivalent \n\nThe compfiles call being removed effected the following change (when\ncompleting «man -S 8:1 getc<TAB>»):\n\n    BEFORE THE CALL:\n        typeset -a pages=( /home/daniel/prefix/zsh/share/man/man1/\n                           /usr/share/man/man8/\n                           /usr/share/man/man1/ )\n    AFTER THE CALL:\n        typeset -a pages=(  /home/daniel/prefix/zsh/share/man/man1/getc*(8|1)* \n                            /usr/share/man/man8/getc*(8|1)* \n                            /usr/share/man/man1/getc*(8|1)*  )\n\nThis patch effects the same transformation (modulo doubling the final slash) \n\nAny -M parameter will be passed to compadd \n  
7350,     38994: _man: Fix two bugs when completing manpage filenames in separate-sections mode \n\n- No longer glob all files (the (-g)-less _path_files was virtually always called \n  by at least one of the multiple calls to _man_pages) \n\n- Actually separate sections (by propagating $expl) \n  
7351,     38993: _man: Drop (b): it s incorrect when $sect contains  |  \n  
7352,     38991: Make  whence -v autoloaded-function  shows the defining filename \n\nThis may also fix a problem whereby the %x prompt escape evaluated to\na function name rather than a filename  since %x is also backed by\nscriptfilename \n  
7353,     38990: _debbugs_bugnumber: Track bts s data dir migration \n  
7354,     unposted: fix format in zle yo\n  
7355,     38989: minor completion updates for FreeBSD\n  
7356,     38986: new gsettings completion\n  
7357,     38981: _man: Followup to 37634: unbreak OpenBSD  man 3p  and Linux $MANSECT \n\nThe breakage was reported in 38516 \n  
7358,     38982: move cpupower completion to correct folder\n  
7359,     38976: new cpupower completion\n  
7360,     38971: Start using the new arrlen_ge() / arrlen_le() helpers \n  
7361,     38973: Optimize indexing array parameters \n\n% ()   for 1 in $prefix/zsh/bin/zsh Src/zsh; do $1 -f -c  a=(  1  1000000  ); repeat 3 time ( repeat 300 : $a[1   ) ; done  \n( repeat 300; do; : $a[1 ; done; )  1 68s user 0 01s system 98% cpu 1 718 total\n( repeat 300; do; : $a[1 ; done; )  1 69s user 0 01s system 99% cpu 1 710 total\n( repeat 300; do; : $a[1 ; done; )  1 69s user 0 01s system 99% cpu 1 714 total\n\n( repeat 300; do; : $a[1 ; done; )  0 00s user 0 01s system 72% cpu 0 022 total\n( repeat 300; do; : $a[1 ; done; )  0 00s user 0 01s system 72% cpu 0 022 total\n( repeat 300; do; : $a[1 ; done; )  0 01s user 0 01s system 69% cpu 0 023 total\n  
7362,     38964: _git-config: Complete option names present in the config file \n\nThis patch lets\n \n    git config x y z value\n    git config <TAB>\n \ncomplete  x y z   even if x y z isn t hardcoded into _git-config \n  
7363,     38963: _git-config: Run gettable-options earlier and in all codepaths \n\nNo change to completions; this is preparation for the next commit \n  
7364,     38961: _git-config: No functional change: rename $git_options_static to $git_options in preparation for the after-next commit \n  
7365,     unposted: _git: Clean up superfluous and missing backslashes \n  
7366,     38967: _hosts: Don t complete wildcard entries from ~/ ssh/known_hosts \n  
7367,     38966: _svnadmin: Complete positional arguments for  hotcopy    setlog    setrevprop    delrevprop  \n  
7368,     38965: _svnadmin: Complete  freeze  as a precommand \n  
7369,     38962: _git-config: Document more line noise \n  
7370,     38959: Document 38956 (_widgets) \n  
7371,     unposted: _svnadmin: Tweak state description \n  
7372,     38927: zle-line-pre-redraw: Set $WIDGET like other special widgets do \n  
7373,     unposted: Avoid $0 for POSIX_ARGZERO compatibility \n  
7374,     38957: make use of updates to match-words-by-style and better support completion of word-style styles for zstyle\n  
7375,     38956: factor out zle widget completion into its own function\n  
7376,     unposted: fix vi-pipe for visual mode: don t need to force line mode\n  
7377,     38953: Fix some issues with match-words-by-style \n\nAdd keyword retrieval of words   Improve test for start of\nword in subwords for use in delete-whole-word   If line after\ncursor is empty  white space is treated as ws-after-cursor \n  
7378,     users/21793: Remove raw integers as glob qualifiers \n\nThere was an ancient undocumented feature that these were treated\nas a file mode to  or  with that of the file under test   The\nonly documented way of doing this has always been the  f  qualifier \nso removed the effect of raw integers to make errors more obvious \n  
7379,     unposted: Prefix function s name to its error messages \n  
7380,     unposted (after 38939): _git-rebase: Unbreak \n  
7381,     38914 (tweaked): _pkg-config: Add options  complete * pc files for positional arguments \n  
7382,     38945: Additional notes on :a behaviour\n  
7383,     38943: update texinfo options and improve completion of Info files  nodes and menu items\n  
7384,     38939: add missing git options\n\nIn particular those for GPG signing a push\n  
7385,     38936: fix vi-pipe function for option compatibility\n  
7386,     38929: new vim style text object using match-words-by-style mechanism\n  
7387,     38935: update tcpdump completion for Free and Open BSD\n  
7388,     unposted: _git-grep: Stop leaking the parameter $i \n  
7389,     unposted: _deb_packages: Minor optimization \n  
7390,     38913: _pkg-config: Complete variables for --variable \n  
7391,     38911: _arguments: Clarify documentation of  -s -w  switch\n  
7392,     38923: zwaitjob() continues waiting for children that may have ignored the interrupt signal  even if the current shell has been interrupted \n  
7393,     users/21779: Clarify documentation of the  :a  word modifier \n  
7394,     38890: _add-zle-hook-widget: New completion \n  
7395,     38904: fix return status in _normal and functions erroneously using it for default completion\n  
7396,     38894: completion for virt-admin and libvirt client/server IDs/names\n  
7397,     38901: _schroot: Add -r/--run-session\n  
7398,     38853: use strchr()\n  
7399,     users/21777: Clarify documentation of the  :A  word modifier \n  
7400,     38862: strptime(3) requires _XOPEN_SOURCE on Cygwin\n  
7401,     38879: Unmetafy file names for glob sort \n\nTest using Polish UTF-8 collation sequence that w known to\ncause the problems \n  
7402,     _print: add -v\n  
7403,     Relocate add-zle-hook-widget  everything else in Functions/Zle is a widget \n  
7404,     38866: update add-zle-hook-widget doc for 38850  bug fixes\n\nEdge case handling  wrap in anonymous function for kshautoload management \n  
7405,     users/21752: Extend zsh/zleparameter s $widgets  parameter s documentation \n  
7406,     unposted (cf  users/21737):: _git-subtree: Record technical debt in comment \n  
7407,     users/21750 (after users/21551): _git-subtree: Tweak -m -P completions\n  
7408,     38868: update completions for new options on FreeBSD\n  
7409,     38867: update strace completion\n\nAlso factor out completion for system calls and new functions for\ntruss and ltrace \n  
7410,     38837 (tweaked c f  38826): new virsh completion\n  
7411,     38845: reset region_active before entering zle\n\nIt was done on exit but before zle-line-finish \nAlso reword documentation on region to better cover vi mode \n  
7412,     38850: Simplify indexing scheme to store hooks in the order they are added\n\nAlso  better handling of edge cases and of autoloading/sourcing file\n  
7413,     38833: separate iostat completion from _sysstat\n  
7414,     38812: a few new completions and update some command options\n  
7415,     38810: fix cursor positioning and repeated invocations when widgets used from emacs mode\n  
7416,     38809: fix tracking of colour attributes and restore them when turning bold off\n  
7417,     unposted: fix duplicated words\n  
7418,     38796: Fix subword matching on last character of subword \n  
7419,     38780: include variants containing non alphanumeric symbols in completion\n  
7420,     users/21551 (tweaked per users/21560): new git subtree completion\n  
7421,     38728: Tests: Add tests for the  :a  and  :A  modifiers \n  
7422,     38783: zcalc tweaks for RPN mode \n\nMake it more straightforward to exchange variables with stack \n  
7423,     38770: vi upper/lowercase widgets and shell widget example that reads a vi movement\n  
7424,     38752: add comments to explain use of stdout instead of stderr for the which builtin\n  
7425,     38760: _git-config: Stop trying to execute the empty string command name upon completing values for an unknown option \n\nFor example:\n\n% git config x y z <TAB>\n+_git-config:834> case x y z (alias *)\n+_git-config:834> case x y z (remotes *)\n+_git-config:860> local z=$ \\C-@ \n+_git-config:861> declare -a parts\n+_git-config:862> parts=(    )\n+_git-config:863> ((  1 < 2  ))\n+_git-config:863> [[ x y z == [^  ## * [^  ##   \n+_git-config:864> parts=(    )\n+_git-config:866> ((  1 > 0  ))\n+_git-config:867> case  (-\\>*)\n+_git-config:867> case  (*)\n+_git-config:1197> declare -a action\n+_git-config:1198> _description values expl   \n+_git-config:1199> eval  action=() \n+(eval):1> action=( )\n+_git-config:1200>    -J values\n_git-config:1200: permission denied:\n+_git-config:1206> return ret\n  
7426,     unposted: _git-config: Document some line noise \n  
7427,     unposted: _git-config: Fix syntax error in  tag sort  completion \n  
7428,     38652: test harness: Emit unified diffs instead of context diffs\n  
7429,     38749: fixes for case at start of a line and for ksharrays\n  
7430,     unposted: remove flag unneded from previous fix\n  
7431,     38746: Fix suffix alias expansion recursion \n\nThis was problematic if the expansion landed you back in\ncommand position \n\nDelay marking the alias as out of use until the text that\ncaused the expansion is finished \n  
7432,     38714: add x: syntax to match specs to make it possible to disable match specs hardcoded in completion functions\n  
7433,     38735: support verbose style to allow clearer but less compact descriptions for time specifiers\n  
7434,     38733: completion for xfreerdp\n  
7435,     38737: clean up zcalc variables \n\nUndocumented variables now start with  _  \n  
7436,     38736: various RPN mode enhancements for zcalc\n  
7437,     38734: fix final case clauses terminating with ;&\n  
7438,     38692: IFS can t be changed in restricted mode\n  
7439,     38715: add-zle-hook-widget: assorted ksharrays fixes; assign an index to any hook that is added without one  to preserve append ordering\n  
7440,     unposted: when ksharrays is set  braces are required for all parameter expansions with colon-modifiers\n  
7441,     unposted: zed needs localoptions noksharrays\n  
7442,     38713: don t add calendar matches when not immediately entering menu selection\n  
7443,     38707: strip suffix for glob qualifier completion\n  
7444,     38703: support su options on macOS\n  
7445,     38693: Add RPN mode to zcalc\n  
7446,     unposted: fix pareentheses in man for getrusage()\n  
7447,     38684: fix format in contrib yo\n  
7448,     38676  38680: Completion for pidof and localedef \n  
7449,     unposted: remove unused parameter\n  
7450,     users/21632: Use of REPORTMEMORY variable\n\nIf the child s resisdent set size in megabytes exceeds this  print\nout the resource (TIMEFMT) string   Document you need to add memory\nusage to this by hand \n  
7451,     38653 + 38657:  functions -T  tracing: recurse into anonymous functions \n  
7452,     38651: _git: Escape parameter arguments to _call_program \n\nFixes  git cat-file blob HEAD^:<TAB>  and a few other cases \n  
7453,     38665: _git: config option completion: Quote properly \n  
7454,     38670: New function for managing ZLE special widgets  modeled after Functions/Misc/add-zsh-hook \n  
7455,     38579: simplify saving and restoring of state\n  
7456,     38641: allow for values which resemble compadd options\n  
7457,     38639: fix username completion after -  update options and get user shell with getent\n  
7458,     38632: remove trailing space on #compdef line for compinit parsing\n  
7459,     38624: _git: Optimize the last commit s __git_recent_branches__names as suggested by Matthew \n  
7460,     38592 (plus tweak): _git: New recent branches completion  unused  (Joint with Nils Luxton)\n  
7461,     38630: fix infinite loop of  hash = \n  
7462,     38610: vcs_info quilt: Extract a patch subject  2 0 \n  
7463,     38609: vcs_info quilt: Factor out a helper function  No functional change \n  
7464,     38622: consistent handling of  --  in  kill  builtin\n  
7465,     38547: Completion/compdump: only autoload functions when they exist in fpath\n  
7466,     unposted (cf  38612): remove overeager DPUTS()\n  
7467,     38593: _describe: Make documentation more greppable \n\nMake the running text refer to the parameters using their names given in\nthe signature   This enables the reader to search for the name given in\nthe signature \n  
7468,     38599: skip the  no such named directory  warning when NO_EXEC is in effect\n  
7469,     users/21609: do not treat tilde-expansions as quoted when inside command substitutions\n  
7470,     38587: Fix iconvconfig completion --output handling\n  
7471,     unposted: internal: Document modify() \n  
7472,     38586: Metafication problem with $functions\n\nIf treated as a complete associative array or scanned (retrieving\nindividual values was not affected)  it incorrectly unmetafied\nthe value so multibyte characters got confused \n\nAdd test \n  
7473,     38577: _signals: Don t complete SIGEXIT from _kill \n  
7474,     38576: _git: Also detect _git-$ thirdparty  functions in $fpath that are symlinks \n  
7475,     unposted: ChangeLog: fix formatting\n  
7476,     38567  38440: Marko Myllynen: completion for locale(1) and iconvconfig(8)\n  
7477,     38540: fix undo problem by not moving the current change when only undoing a history line change\n  
7478,     21603: Make read_poll more interruptible \n\nIf we interrupted the first read we still did the fallback read \nThis is wrong \n  
7479,     38515: _subsript twwaks\n\nNeed -- after print; also optimise array add\n  
7480,     38514: remove unnecessary ls in completion\n  
7481,     38513: cast time to long long for printing where possible\n  
7482,     38482: complete available packages for apt list \n  
7483,     38468: wb we values in gotword() needed assignment in additional case to avoid core dump\n\nBug introduced by 38248 \n\nAlso fix ChangeLog entry for 38248 to correctly reference Src/lex c\n  
7484,     38463: use immortal widgets in  safe keymap\n  
7485,     unposted: Commit forgotten part of users/21256 \n  
7486,     38453: _apt: Complete $ package /$ release  for  source  and  build-dep   too \n  
7487,     38452: _apt: Complete releases by codename ( jessie    sid   etc) \n  
7488,     38451: _apt: Complete  apt-get download  \n  
7489,     38458: mention the option -i of _multi_parts\n  
7490,     38432: avoid nonstandard setenv() on __APPLE__\n  
7491,     38445: subsequent tests rely on a file touched by the -N test  so it must always be touched\n\n(Bart) Minor tweak to SECONDS loop to make total of sleeps be 60 seconds\n  
7492,     unposted: update documentary comments to remove references to self-insert-unmeta \n  
7493,     38420: _baudrates: Make style lookups fit better with the rest of compsys\n\nTo quote Oliver Kiddle:\n> The original concept with styles was that style s could have fairly\n> generic names because the context allows you to select the detailed\n> context  So perhaps consider allowing this to work as  for example:\n>   zstyle  :completion:*:*:screen:*:baud-rates  max-value 9600\n  
7494,     38425: _cu: Remove old -d option of _baudrates\n  
7495,     38421: _baudrates: Fit better into the general completion framework\n\nThis should work better in concert with other helpers and builtins of\nthe completion system by accepting arguments that would be handed to\ncompadd \n  
7496,     38424: Use _baudrates helper instead of _baudrate\n  
7497,     38426: _baudrates: Use 2 space indentation\n\nAs per the completion-style-guide \n  
7498,     38422: _baudrate -> _baudrates\n\nOliver notes that helper functions usually have plural names by\nconvention \n  
7499,     38401: _deb_packages: New completion for source packages \n  
7500,     unposted: Doc/Zsh/builtins yo: Fix typo\n\nFound by Debian s lintian tool \n  
7501,     38402: Complete  eatmydata  \n  
7502,     38399: _bts: Complete debbugs bug numbers from `bts cache` \n  
7503,     38393: _git: Fix typo in completion of  --minimal \n\nSigned-off-by: Russell Currey <ruscur@russell cc>\n  
7504,     38375 (tweaked per 38384): try harder to detect noatime filesystems \n  
7505,     38388: Refactor baud rate completion\n\nThis adds a new helper function _baudrate and uses it in place of\nprivate solutions in various existing completions \n  
7506,     unposted: _querybts: Fix positional arguments  description \n  
7507,     unposted: _compadd: Fix typo \n  
7508,     unposted: ChangeLog: Add missed entries \n  
7509,     unposted: typo in redirect doc\n  
7510,     38381: Add completion for picocom utility\n  
7511,     _git: Complete fetchy refspecs correctly \n  
7512,     _git: Bifurcate __git_ref_specs \n\nNo functional change  except for completion of  git bundle  and  git config\nbranch * merge ; this is a required groundwork for future patches \n  
7513,     _git: Fix an apparent typo in __git_heads() \n\nI couldn t reproduce different behaviour with and without this patch  although\nthe called command s output differs \n  
7514,     _git: Offer alternatives properly \n  
7515,     _git-bundle: Complete required file argument to  git bundle  correctly \n  
7516,     unposted: silence spurious compiler warning\n  
7517,     38358:  fgrep --  for noatime check in case a mount point is named  - \n  
7518,     38356: allow integers as curses colours\n  
7519,     39354: zcurses fix for colour management\n\nAlter internal return \tcode so as not to mask curses error code \n  
7520,     38350 (cf  Glenn Smith: 38348): Remove-all warning should warn about the root directory as well\n  
7521,     38316: _git-rebase: Complete any committish for the second argument\n  
7522,     38291: Change names of ISEARCH_* parameters to ISEARCHMATCH_*\n  
7523,     Mikael Berthe: 38307: PCRE segfault when parenthesized group matches nothing\n\nunposted: regression test for 38307\n  
7524,     38306: in printf formats  treat a missing precision as zero rather than as unlimited\n  
7525,     38289:  builtin enable  in $_comp_setup to avoid accidentally invoking external command of the same name\n  
7526,     38219: remove redundant left square bracket\n  
7527,     38287: fix position for the end of a visual selection range for the cursor on an empty last line in the buffer\n  
7528,     38286: cursor correction following yank-pop is only applicable to vi command mode\n  
7529,     37847: update du arguments up to GNU du 8 25\n  
7530,     m0viefreak: 38264: improve doc for 38145\n  
7531,     For help listing  capture the fallback to compctl in case there is one defined\n  
7532,     38255: _git: Fix argument pastedness \n\nFound by searching for /-\\w\\> *:/ \n\nThis covers short options only  from the top of file through _git-tag() \n  
7533,     38248: fix word position calculation when completing on or just before a redirection operator\n\nThe completion result is still in need of some repair; e g   if the first\nthing on the line is the redirection  completion before it is not taken\nto be in command position  and in this and other cases a necessary space\nis not inserted between the completed word and the redirection \n  
7534,     38229: fix cursor placement calculation when completing in empty double quotes\n  
7535,     38241: ungetkeycmd() needs to unmetafy key string \n\nUse the new function to simplify memory management in prefix handling \n\nThird time lucky \n  
7536,     38236: Order of redirections is important \n  
7537,     Dmitry Marakasov: 38162: accept G for gigabytes in limit command\n\nfrom github pull request - some formatting edited\n  
7538,     38191: additional re-entrancy checks in reexpandprompt()\n\nDo not free global pointers until after promptexpand() in case they are\nreferenced from signal handlers  and check for window size changes during\npromptexpand() \n  
7539,     38188: signal re-entrancy  maybe\n\nCrams several globals into a struct so they can be saved/restored as one \nand then tries pushing the signal queue management down into patmatch()\nfrom pattryrefs() \n  
7540,     38142: signal re-entrancy  maybe\n  
7541,     Remove unnecessary file\n  
7542,     38182: _git: Invoke reflog completion from the \ complete commit objects\  codepath \n\nThe reflog will only be used if the user has typed as  @  by hand \n  
7543,     38181: _git reflog: Complete  @ N   instead of  HEAD@ N   \n\nThe «HEAD@     » syntax is no longer completed  since it s not easily possible\nto support both syntaxes (workers/34768) \n  
7544,     38180: _git: Improve reflog completion \n\nCurrently  only used by «git reflog delete <TAB>» \n  
7545,     38145: ZLE parameters for isearch and completion suffixes\n  
7546,     38187: _adb: Just check current dir instead of recursively\n\nThanks to LambdaComplex in IRC for help with troubleshooting \n  
7547,     38186: _adb: fix remote file completion + various fixes\n  
7548,     unposted: Document run-help-* helper functions \n  
7549,     38179: _adb: Fix completion by mostly reverting 35531\n  
7550,     38161: _tmux: Use a colon to terminate options to _arguments itself\n\nIn users/21384 it was reported that\n\n  % tmux new-session -<tab>\n\n   does not offer -A as a candidate for completion even though the\noption is listed in the involved helper function _tmux-new-session() \n\n-A is actually an option the _arguments function uses itself  The\ndocumentation states:\n\n    To avoid ambiguity  all options to _arguments itself may\n    be separated from the spec forms by a single colon \n\nThis commit changes each _arguments call to include the optional\ncolon  so problems like this are prevented now and hopefully in\nthe future \n  
7551,     38155: docs: compsys: Clarify documentation of the  filter  style \n  
7552,     38151: _git: fix tag name of remote branches\n  
7553,     38148: _git: reflog: complete references next to commands\n\n git reflog show  is the default subcommand  so\n\n  git reflog <tab>\n\nshould complete subcommands and references \n  
7554,     38135: internal: bin_compadd: Add a few comments \n  
7555,     38129: _git: Fix __git_ignore_line s treatment of shell and pattern metacaracters \n\nBuilds upon a patch by Jun T \n\nAlso upgrade/fix __git_pattern_escape \n  
7556,     38128: _git: Fix completion of diffs against the index when treeish isn t shell-safe\n\nThis affects  git diff --cached -- <TAB>  and  git reset $treeish <TAB>  \n  
7557,     38123 (after 38074): _git reset $treeish: complete only staged files\n  
7558,     unposted: ChangeLog: credit Martijn Dekker for workers/38039 (POSIXy  set +o )\n  
7559,     38120: _git: Document the internal helper function __git_ignore_line \n  
7560,     38114: Fix hang using ^Z with command subst \n\nIn subshells started to perform substitutions disable signals\nthat require interactive handling \n  
7561,     unposted: update  gitignore for 38108\n  
7562,     38108: enable to create both zsh_ a4 us  pdf\n\nDefault paper size is taken from LC_PAPER \nStop to check for pdfetex (obsolete and redundant) \n  
7563,     38074: _git reset HEAD: complete only staged files\n  
7564,     38043: allow any completion widget to cycle matches for menu completion to fix reverse menu completion\n  
7565,     38111: Remove redundant return values in parsing \n\nReturn values from par_list() and par_list1() are no longer used \n  
7566,     users/21352: ensure $   doesn t get elided \n\nAssign nulstring to it if empty   Test for all forms of quotation\nmarks \n  
7567,     38094: Fix POSIX EXIT traps defined in function \n\nThese aren t local  so set the local level to 0; else they can get\noverridden incorrectly \n  
7568,     38106: if   then if   else should be a parse error \n  
7569,     38086: shuffle init code to localize a global  add $ZSH_ARGZERO  refine $ZSH_SCRIPT\n\n(also a couple of ChangeLog typos corrected -- Bart)\n  
7570,     38084: Use previously located pcre-config for libs\n  
7571,     38048: fix  zle redisplay  when called while a listing is below the prompt\n  
7572,     38039: POSIXy behavior for  set +o \n  
7573,     38020: fix problems with $SECONDS \n\nFractions of a second were not handled correctly \n  
7574,     38024: Improve POSIX and native EXIT traps compatibility \n\nAllow a nested function trap to leave save and restore a POSIX\ntrap \n\nStill fails if the POSIX trap was defined in a function \n  
7575,     unposted: Fix typos in ChangeLog \n  
7576,     unposted: developer documentation: Clarify the term  variant  \n  
7577,     38001: clear-screen re-expands prompts\n  
7578,     37988: $0 becomes read-only under POSIXARGZERO\n  
7579,     37999: Sticky behaviour of EXIT traps \n\nThey now have POSIX or non-POSIX behaviour based on the setting\nof POSIX_TRAPS where the trap was defined  rather than where the\ntrap would (or would not) be executed \n\nTweaks possible \n  
7580,     users/21256 + workers/37965: New math functions min()  max()  sum()  provided by a new autoloadable function  zmathfunc  \n  
7581,     37975: Completion/Unix/Command/_php: remove _arguments  -A option\n  
7582,     37898: fix typo in completer menu\n  
7583,     37898: complete gcc linker options\n  
7584,     37972: Redirect stderr to /dev/null in cases where $ ~param  might generate errors\n  
7585,     37971: fix potential issues when interacting with user-defined widgets\n\nCf  users/21284: Eric Freese\n  
7586,     37961: fix crash on bad memory access\n\nIn interactive menuselection  use of  compadd -x  (e g  the  warnings \nzstyle) may have replaced the completion list  so skip highlighting of\nthe current selection until a subsequent keystroke has regenerated the\noriginal listing\n  
7587,     37927: recreate local keymaps as necessary in case the user has deleted them\n  
7588,     37913: add additional completers and _zpool improvement\n  
7589,     37946: make rm * warnings more informative \n\nNow count files that would be deleted up to 100 \n  
7590,     Missed ChangeLog entry for 37895\n  
7591,     37893: document typeset -U behaviour for PATH-style variables\n  
7592,     37914: reparse associative array subscripts in  unset  so keys with  [  or     may be backslash-escaped\n\nAlso fix erroneous test case this revealed \n  
7593,     37924: Completion: _git: Complete files for  check-ignore \n\nAlso  don t leak the parameter  ret ; the leak was theoretical because\nthe caller immediately wrote to that parameter \n  
7594,     37923: Completion: _bts: Fix quoting of $DEBEMAIL \n  
7595,     37922: zyodl vim: Add alternative installation instructions \n  
7596,     37896: zshbuiltins: Document argv behaviour of  source  without arguments\n  
7597,     unposted: ChangeLog: Move the 37678 entry to the correct location (and author) \n  
7598,     37895: $ZSH_SCRIPT is POSIX $0 but always availble\n  
7599,     unposted: complist module docs: Fix parameter name in an example \n\nSubmitted via GitHub (   com/zsh-users/zsh/pull/6) \n  
7600,     unposted: Follow-up to 37833: extend description of 37804 in README \n  
7601,     37874: remove unused function argument\n  
7602,     37868: add  static  to file local variables\n  
7603,     37859: NULL-terminate cond_binary_ops static array \n  
7604,     37845: Forward-reference typeset instances where no parameter is created  and remove the obsolete statement about array assignments separated from typeset command on -p \n  
7605,     37844: reorder typeset introduction to keep related concepts together \n  
7606,     37831: typeset: Document exit status difference from parameter assignment statements\n  
7607,     37838: use UNUSED() consistently\n  
7608,     37833: Document 37804 in README \n  
7609,     37797: StartupFiles/zshrc += run-help\n  
7610,     37752: More tests for the previous patch \n  
7611,     37700: Teach $ (z)  the  repeat WORD SUBLIST  syntax \n  
7612,     unposted: _init_d: Report failure to caller \n  
7613,     37814: run-help-ip: use an absolute path for the shebang \n  
7614,     37804 (plus 37816): first word following  repeat  should be evaluated as math\n  
7615,     37819: zshaddhistory hook works for any history file write  even upon keyboard interrupt\n  
7616,     37810: repair handling of backslashes and of names starting with  + / : / =  in zparseopts option specs\n  
7617,     37802: Clarify zparseopts description   (This file inadvertently ommitted\nfrom previous commit )\n  
7618,     37802: Clarify zparseopts documention   zparseopts  X::  specifier should also look for the optional argument in the word after  -X  \n  
7619,     37788: _subscript - fix completion of associative array keys\n  
7620,     37785: skip autoload parameters for  typeset -p \n  
7621,     37780: Care printing error if nothing to print \n  
7622,     Jun T : 37759: save more function pointers from realparamtab when hacking in their replacements\n\nRestoring from the original external symbols fails for some dynamic link schemes (e g  64bit Cygwin) \n  
7623,     37765: Use FS_FUNC on fucstack to find autoload -X target \n\nThis is better than scriptname which can be updated due to e g \nintervening  eval  \n  
7624,     37776: Set errflag before calls to zwarning() \n\nThis avoids an attempt to call zerr() or zerrnam() recusrively \n  
7625,     37725: Completion: _init_d: add OpenBSD bits\n  
7626,     37703: Completion: git: Also complete sendmail commands for send-email s configuration  (after 37666)\n  
7627,     37722: test builtin should return status 2 on syntax error\n  
7628,     37705: don t turn - to Dash after start of brace parameter\n  
7629,     unposted: increment version to 5 2-dev-1\n  
7630,     37666: Completion: git:  send-email --smtp-server=  takes absolute path to sendmail \n  
7631,     37665: Completion: New helper _absolute_command_paths \n  
7632,     37664: docs: Document the completion function _command_names \n  
7633,     37682: when SH_GLOB is set  do not parse bare parentheses in arguments as a pattern grouping \n  
7634,     37693: turn Dash into  -  in glob qualifiers\n  
7635,     37689: ! and ^ need to be tokenised in character sets\n  
7636,     37678: Now possible to quote  -  in pattern range\n  
7637,     37646: bit missed out of previous readonly commit \n\nI mean  the commit about readonly   Commits aren t readonly  this is git \n  
7638,     37634: _man: Support subsection names such as  3p  \n  
7639,     37634: _man: Disentangle a local variable that had two distinct semantics  No functional change\n  
7640,     37663: New bibtex completion (very minimal) \n  
7641,     unposted: docs: zshzle(1): Trivial clarification to $CONTEXT \n  
7642,     37646: Return non-zero status from typeset assigning readonly\n  
7643,     37643: Reset interrupt on key input in menu selection \n\nWe don t need to propagate the interrupt further as the interrupt\ncauses the key to be empty  which will exit the widget   We\nneed to reset the condition as zrefresh() is now more sensitive\nto errors since 36416 / 32f5d3d8 \n  
7644,     37512: overeager WARN_CREATE_GLOBAL with strftime\n  
7645,     unposted: Extend docstring of callhookfunc() \n  
7646,     unposted: Fix typo in comment \n  
7647,     37612: vcs_info git: Set $git_patches_unapplied correctly for  rebase-apply  case \n\nThis manifested  e g   in  git am  of a single patch that had a conflict \n  
7648,     Belated ChangeLog entry for 37489  back-dated to the correct sequence \n  
7649,     37570: give truth to the doc assertion transpose-words-match is a drop-in replacement for transpose-words\n  
7650,     37567: use (Z:n:) to split the buffer into words so line breaks are treated as whitespace\n  
7651,     37590: Invoke zle-line-pre-redraw during isearch \n  
7652,     37591:  alias -L : skip with a warning aliases with  =  in their LHS\n  
7653,     37550: _cu: Support Linux line-device names; fail gracefully on OSes matching no known line-device name pattern \n  
7654,     37551: Include the builtin\ s name in a  bad option  error message \n\nExample: «zsh -fc \ zle -z\ » now prepends  zle:  to the error message \n  
7655,     37534: completion for OpenBSD s cu  fw_update and rcctl utils\n  
7656,     Jun T : 37515: multibyte handling as per 35448 \n  
7657,     unposted: Src/builtin c: refine READ_MSTREAM to avoid unsequenced evaluation\n  
7658,     37513: fix typos; improve error cleanup and correct for signed/unsigned compiler warning\n  
7659,     37504: refactor code using/simulating memstream to capture output for  print -v \n  
7660,     37503: detect incompatible  print  options  fix metafication and possible memory leak  miscellaneous cosmetics\n  
7661,     37501 (+ revise test): correct byte counts when simulating memstream via temp file\n  
7662,     37489  tweaked: with POSIX_IDENTIFIERS create math var as scalar\n  
7663,     37497: handle NUL bytes in  printf -v  \n  
7664,     37493: readonly + POSIX_BUILTINS == typeset -gr\n  
7665,     37483: save and possibly restore cshnullglob failure state around each evaluation of an (e:   :) glob qualifier \n  
7666,     37473: check for cshnullglob in command position \n  
7667,     37469: do NOT allow semicolons in place of line breaks in conditionals\n  
7668,     unposted: enable WARN_CREATE_GLOBAL for print -v\n  
7669,     37468: allow line breaks in more places in [[       \n  
7670,     37467: add  print -v var  /  printf -v var \n  
7671,     37453 (with Bart  started by Baptiste Daroussin  37315): try to improve detection of noatime filesystem\n  
7672,     users/21114: new dig completion\n  
7673,     37460: make sure the default keymap is emacs before using that keymap to test bindings\n  
7674,     unposted: NEWS: Document how to disable paste highlighting \n\nThis updates the 5 2 entry  note that 5 2 has been released already \n  
7675,     37456: Have zle_highlight=(none) disable paste highlighting\n\nBefore this change  zle_highlight=(paste:none) worked \nbut zle_highlight=(none) didn t \n  
7676,     37451: vcs_info: Declare  msgs  in early context\n\nThe parameter *is* being declared with the redefinition of the\nfunction  but not in its initial form  which gets you a warning\nabout the parameter being defined globally  This fixes it \n  
7677,     37438: C/D/C/_aptitude: Also parse -h output of aptitude 0 7 5 and later\n  
7678,     Add changelog entry for previous commit\n  
7679,     Add missing apt purge and autoremove subcommands\n  
7680,     37435 (+ fix typo): allow execution of empty files as  sh  scripts\n  
7681,     37434: POSIXBUILTINS  command  should prevent shell exit on errors from special builtins\n  
7682,     37345: VCS_INFO functions break with setopt no_unset\n\nWith setopt no_unset in my config file  vcs_info fails with:\nVCS_INFO_maxexports:7: vcs: parameter not set\n  
7683,     users/21082 (expanded): a more complete sorting of version strings that are not in the form of zsh version numbers; additional explanatory comment\n  
7684,     unposted (cf  37387): emulate turns off WARN_CREATE_GLOBAL\n  
7685,     users/21068: use emacs keymap in vared by default\n  
7686,     36650: Add zle-line-pre-redraw hook for highlighting\n  
7687,     unposted (after users/20873): Theoretical fix: don t parse print/echo escape sequences in $zle_bracketed_paste \n  
7688,     37257 (in part): Add array assignment tests \n  
7689,     37411: more bindkey tests\n  
7690,     37405: Fix self-insert binding for multibyte sequences \n\nThis makes it work even if the self-insert applies to a sequence longer\nthan an initial byte  including the case of a complete binding to a full\ncharacter sequence \n  
7691,     37401: pattern error caused too much activity in _list_files for some styles\n  
7692,     37400: typo gave unwanted error message in zsh_directory_name_generic\n  
7693,     unposted: missed ChangeLog entry\n  
7694,     37397: Optimised update to dnf completion\n  
7695,     37386: localise mbegin  mend  match in URL magic\n  
7696,     37383: add completion type for object files\n  
7697,     37260: add opus to mplayer audio completions\n  
7698,     users/20873: disable bracketed paste while running external editor from zle\n  
7699,     37378: New bindkey tests \n\nAlso fix Meta bug on pattern match in zpty -r \n  
7700,     37364:  test  and  [  handling of parentheses \n\nIf three arguments  need to prefer binary operators if possible \n\nNeed to look for full string for parentheses \n  
7701,     37348: Tests and fix for $ (q+)     \n\nNeeds dupstring() for empty string case \n  
7702,     37347: Remove incorrect local for msgs in VCS info\n  
7703,     users/21071: Fix binding of multibyte sequences \n\nThere was a problem if the first byte was already bound to\nself-insert \n  
7704,     37344: restore old printable quoting  add $ (q+)     \n\nThe \\C- form is only used inside quotedzputs() \n\n$ (q+)     outputs a quotedzputs() representation \n  
7705,     37331: Use a single chracter to represent an MB_INCOMPLETE \n\nThis is as it is likely to appear as a single character in output\neven if it has multiple octets \n  
7706,     37337: Delay freeing widget until not in use \n  
7707,     unposted: fix ChangeLog for previous change\n  
7708,     37335: fix tests after 34314\n  
7709,     37310: effect of disabling typeset reserved word\n  
7710,     37326: comment only: multibyte string lenght/width counting\n  
7711,     37314: upgrade quotedzputs() for non-printable output \n\nUse nicechar with $     quoting; upgrade nicechar() etc  to\nuse suitable output \n  
7712,     37150: _git: Autocomplete    for commit ranges\n\nThis patch makes three changes:\n\n- Enable \ git diff o/m<TAB>\  to complete to \ origin/master  \  with the\n       being autoremovable \n\n  This is implemented by the first hunk   That hunk is a functional\n  subset of Oliver\ s users/20705  however  the latter hasn\ t been\n  committed \n\n- Make typing  ^  remove the       in light of the syntax  foo^  bar  \n\n- Make typing     _not_ remove the      but simply append it  since\n   foo   bar  is a valid and useful syntax \n  
7713,     36957: _git: Apply matchspecs to filename completion such as  git log f/b<TAB>  →  foo/bar txt s\n\nThis patch makes  git log S/e<TAB>  expand to Src/exec c   The incumbent\ncode would run  git ls-tree S/  and find no matches \n  
7714,     37305: typeset -p can now output arrays on one line\n  
7715,     37303: test WARN_CREATE_GLOBAL negative cases \n  
7716,     37202: suppress WARN_CREATE_GLOBAL warnings after a fork\n  
7717,     unposted: fix init_io() calls in previous change\n  
7718,     37294: Add ZSH_EXECUTION_STRING \n\nThis shows the argument to shell option -c \n  
7719,     37253: Constify two local variables \n  
7720,     unposted: Remove uneeded executability bits \n  
7721,     37296: Avoid needless calloc() \n  
7722,     37295: kill-word-match: Join kills\n  
7723,     unposted: Update internal version to 5 2-dev-0 \n\nAlso add entry for 5 2 release in ChangeLog \n  
7724,     unposted: zsh 5 2\n  
7725,     37256: _debchange (_dch): Update completion \n  
7726,     37252: vcs_info git: Compute %b correctly with  rebase --onto  of detached heads  (Follow-up to 36725 )\n  
7727,     37254: No functional change: change code layout in preparation for 37253 \n  
7728,     37250: No functional change: rename local variables \n  
7729,     unposted: 5 1 1-test-3\n  
7730,     unposted (after 37243): Explain the breadcrumb by adding a comment \n  
7731,     Fix conflicts in ChangeLog\n  
7732,     37243: too many problems with inserting a line into B02  instead add a placeholder and substitute for it \n\nunposted: %cleanup block is not called when %prep sets ZTST_unimplemented \nso avoid leaving a mess\n  
7733,     unposted: ZCALCPROMPT created globally in zcalc\n  
7734,     37214:  prompt walters : Don t export PS1\n  
7735,     37163: Remove curl completion\n  
7736,     37215: _regex_words: Don t add mismatched parentheses\n\nI ran into this in the wild¹  it manifested as the following error message:\n\n    zregexparse:4: not enough regex arguments\n\n¹    tasktools org/browse/TW-1729\n  
7737,     37229: non-local assignment to a parameter name whose outermost declaration is private  is an error rather than a silent no-op \n\nAlso fix %prep sed expression for Solaris \n  
7738,     Comment should say export is equivalent to typeset -xg\n  
7739,     37225: fix test for typeset with zsh/param/private\n  
7740,     37224: delete obsolete comment\n  
7741,     37100: update for sysctl completion\n  
7742,     unposted: 5 1 1-test-2\n  
7743,     37208: check for restricted parameter before changing from unset to set\n\nAlso  return NULL from setnparam() on failure to retrieve value (avoids\nnull-pointer dereference); add some expository comments\n  
7744,     37208: re-run the  typeset  tests with the private module loaded\n  
7745,     37208: assignment in a nested scope should not change private parameters in the outer scope from unset to set\n\nBug remains that the attempt does not generate a warning\n  
7746,     37206: fix $ (t)param  for  typeset -H param \n  
7747,     37205: update documentary comment\n  
7748,     unposted:  20974 -> users/20974 because pedantic\n  
7749,     37203: WARN_CREATE_GLOBAL test in wrong place for associative array\n  
7750,     37201: change quoting to handle group names with spaces\n  
7751,     37192: silence WARN_CREATE_GLOBAL in prompt themes\n  
7752,     37191: fix strftime() expansion issue with %p and %P \n\nIn some locales the output from this can validly be empty  so\nwe need to treat them specially \n  
7753,     37188: New hash builtin test\n  
7754,     37187: infinite loop in  hash -m \n  
7755,     37186: a couple more WARN_CREATE_GLOBAL fixes\n  
7756,     37181: consistent use of zmodload and corresponding ZTST_unimplemented or ZTST_skip\n  
7757,     unposted: Make 5 1 1-test-1 in preparation for 5 2\n  
7758,     unposted: document order of entries for $history and $historywords\n  
7759,     37161: Disable the heuristic setting RPROMPT_INDENT to 0\n  
7760,     37170: suppress global create warning in function\n  
7761,     37168: No WARN_CREATE_GLOBAL on special parameters\n  
7762,     20974: Bug with scalar assignment to special array in typeset\n  
7763,     37164: _tmux: Complete external commands\n  
7764,     37149: _git: Complete  bisect/bad  ref\n  
7765,     37159: Update to NEWS and README\n  
7766,     unposted: describe separators between values in array assignment\n  
7767,     37145: suppress alias expansion in skipcomm()\n\nThus defer parsing aliases in $(   ) et al  into the subshell\n  
7768,     37140: note that <<(   ) is < <(   )\n  
7769,     37129: _git: Complete  commit -p \n  
7770,     37128: work around alias expansion trashing subscript parsing\n  
7771,     37127: document indexing of $signals\n  
7772,     zed: Add -- to the `functions\  builtin calls\n\nReported on IRC:\n\n% autoload zed; zed -f --  -zgen-prezto-load \nzed:83: bad option: -g\n-zgen-prezto-load()  \n \n  
7773,     _sockstat: minor improvements\n\nallow -p  -P and -f s argument to be completed in the same word \n\nComplete -P s argument using /etc/protocols again  while allowing a\ncomma delimited list of protocols \n  
7774,     37119: further  Rules  clarifications\n  
7775,     37115: update for changes in $ (P)     evaluation \n  
7776,     unposted: Make $EDITOR s jump-to-matching-brace happy \n  
7777,     37031: _git-merge: Exclude ancestors of HEAD from recent commit completion\n\nAs done for _git-cherry-pick in a428c6b62cb2 (36328 + 36340) \n  
7778,     37025: vcs_info git: Add a cherry-pick patch-format\n  
7779,     unposted: a few cosmetic format fixes in docs\n  
7780,     37090: correctly handle blank lines in yodl macro example()\n  
7781,     37096: Another $$ (P)     tweak \n\nMake a top level (P) work with nested ones  i e  $ (P)$ (P)        \n  
7782,     37094: Further tweaks to parameter name references \n\nSafety in array test \n\nMake nested references work \n\nAdd parameter tests \n  
7783,     37092: make nested $ (P)name  properly refer to parameter on return\n  
7784,     missed log entry\n  
7785,     37091: clear lastline and lastlinesz when freeing\n  
7786,     37084: add implementation check to zsh/parm/private test\n  
7787,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
7788,     Jun T  proofreading\n  
7789,     37085: fix doc: DEBUG_BEFORE_CMD is set by default\n  
7790,     37081: new module zsh/param/private for private-scoped parameters in functions\n  
7791,     37080: use paramtab abstraction more consistently  add explanatory comments\n  
7792,     37079: better description of  optstr  field in struct builtin as used in BUILTIN() macro\n  
7793,     37074: extend previous fix to over whitespace at end\n  
7794,     37073: another SH_WORD_SPLIT problem \n\nIn cases like x$ :- y  the space was simply removed instead of\nbeing used for splitting \n  
7795,     37062: tentative mechanism for git commit descriptions \nMechanism for forcing completion system into verbose mode is subject\nto change \n  
7796,     35303: remove Completion/Unix/Command/_systemd\n\nsystemd s upstream version seems to be maintained well  and e g  on Arch\nLinux the version from Zsh gets removed in favour of it \n  
7797,     37038: add -l option to emulate to list options in emulations\n  
7798,     37029: update options and new tr completion\n  
7799,     37028: new scl completion\n  
7800,     36993: zed: fix argument parsing\n  
7801,     unposted (cf  36998 36999): undo 36956 / restore 34451 with expanded comment about the flip-flopping\n  
7802,     37032: Temporarily revert 36959 \n  
7803,     37027: allow subword context to discriminate between words\n  
7804,     unposted: Typo in ChangeLog\n  
7805,     unposted (after 37018): Fix typo in error message \n  
7806,     37022: add GLOB_STAR_SHORT option to abbreviate ** and ***\n  
7807,     37018: Make WARNCREATEGLOBAL more consistent \n\nWd don t need separate math handling any more  and can make it\noutput the function name in all cases \n  
7808,     missed ChangeLog entry\n  
7809,     unposted: ignore  orig files\n  
7810,     37014: Improved internal parameter setting \n\nEnhance WARNCREATEGLOBAL to work in many more cases \n\nDon t create REPLY as an integer if it didn t previously exist\nas one  even if the value to be set is integral  as this is likely to\nmess up later uses of REPLY \n  
7811,     36983 + 36990: new completions for head and tail\n  
7812,     36994: declare local REPLY for use with  zle  read-command ; use  self-insert instead of  self-insert-unmeta\n  
7813,     unposted:  fix typo quite -> queue\n  
7814,     36982: Fix bug with (#cN) patterns and remove redundant description \n\nWe need to restore the current count of matches when returning to\nmatch at the point where we previously matched \n  
7815,     36977: note about difficulties of pattern repetitions\n  
7816,     36974: fix some functions with empty argument lists\n  
7817,     36906: quite_signals() in ZSH_MEM realloc()\n  
7818,     36968: use addmodulefd() to tell the shell about the descriptor of the dbm file\n  
7819,     36956: revert 34451  mmap() is too slow on MacOS\n  
7820,     users/20825: fix crash when complex completion hooks \n\nget_undo_current_change() needs protecting against execution in\ncompletion environment \n  
7821,     36962: _git: Fix completion of RHS of refspecs \n\nBefore this patch   git push $remote :<TAB>  completed branch names (as though\nby `git branch -a`)  instead of completing remote branch names sans the\n$ remote / prefix \n  
7822,     36964: _git: Complete remotes branch names with slashes correctly \n\nFor example   git push remote HEAD:foo/bar  creates such branches \n  
7823,     36960: _git: Enable slash matcher for more branch and tag completions  include  git branch <TAB>  and  git tag <TAB>  \n  
7824,     36959: _git: Offer @~$n as completion of recent commits \n\nSuggested-by: Oliver Kiddle (users/20705)\n  
7825,     36958: _git: Fix recent commit completion descriptions \n\nThe uniquifiers  HEAD~$n  were incorrect when a recent commit was the second\nparent of a merge commit   Detect that case and print something correct\ninstead \n  
7826,     unposted: _git: Fix \ commit object name\  completion messages \n\nOffer the  this alternative is still valid  but I don\ t know to offer\ncompletions for it  for hash completion but not for recent object completion;\nthe former is protected by a _guard and the latter incorrectly appeared also in\ncases such as \ git log a/b<TAB>\  which were not the start of a gitrevisions(7)\nexpression \n  
7827,     36911:  -optarg  should not match optspec  -opt= \n\nRemove the requirement that -xy= should come before -x= in the\nlist of optspecs passed to _arguments \n  
7828,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n\nConflicts:\n\tChangeLog\n  
7829,     36943: restore scan for reclaimable blocks in freeheap()\n\nThat scan had been removed by 36834  but testing showed memory usage\nclimbing too high in cases where a new arena was always added at the\nend of the heap list \n  
7830,     unposted: _beep completion: Actually hook it for the  beep  command \n  
7831,     36913 + 36945: vcs_info quilt: Pass patch subject lines to gen-applied-string\n\nThe format used is  $ patchname  $ subject    which is analogous to the git backend \n  
7832,     36912: vcs_info quilt: Tolerate being in child of  pc s parent\n\nWithout this  gen-applied-string would only be set when  pc is a child of cwd \nnot when it is a child of an ancestor of cwd \n  
7833,     unposted: small typo again\n  
7834,     unposted: small typo\n  
7835,     36944: extend fd management to zsocket\n  
7836,     36941: Mark file descripors in ztcp as used \n\nAllow such file descriptors to be either internal and closed on exec\nor external and so managed explicitly by module \n  
7837,     unposted: vcs_info docs: Typo fix \n  
7838,     unposted: strdup should be ztrdup\n  
7839,     36909: in getargs()  sanity-check the offsets for start and end of the requested words  in case of overflow\n  
7840,     36871: move initial call to  zle  bracketed-paste-magic  to occur earlier in the function\n\nJust in case any later initialization might have side-effects \n  
7841,     36900: _git: stash names completion: Display log messages\n\nThe  $@  argument to compadd is removed because (I think) it contains a -J \nwhich conflicts with the -V \n\nJoint with Daniel Hahler \n  
7842,     36642: complete jail/unjail zfs subcommands on freebsd\n  
7843,     36646: handle solaris/openzfs differences; only use -t share on solaris\n  
7844,     36889: completion of system specific sockstat options\n  
7845,     36869: use permissions to limit files completed for ssh identity files\n  
7846,     36888: vcs_info: Prevent warn_create_global warning with  -preinit-  state\n\nThis is related to 33405  Turns out that not all other calls to\nVCS_INFO_set are okay: With recent zsh versions the early call to that\nfunction with the  -preinit-  argument causes a warning like this:\n\n  VCS_INFO_set:9: math parameter maxexports created globally\n                  in function VCS_INFO_set\n\nThis fixes it \n  
7847,     36864: new objdump completion and tweak to nm completion\n  
7848,     36853: replace pushheap/popheap by NEWHEAPS/OLDHEAPS in doshfunc() to optimize memory management\n\nIncludes re-indentation that was not done in the posted patch \n  
7849,     36856: cdr -p/-P to prune directory list\n  
7850,     One crucial assignment accidentally lost from 36834 when merging 36836 \n  
7851,     36841: factor out and update the patterns that filter  uninteresting  functions out of the $funcstack display\n  
7852,     36836: zhalloc() avoids re-scanning all heaps when the last known heap with free space does not have enough space\n\nThis is the second of two performance optimizations for situations where\nall heap arenas in the list are mostly full \n  
7853,     36834: freeheap preserves last allocated heap\n\nThis is the first of two optimizations to improve heap performance when\nthere are a large number of mostly-filled heap arenas \n  
7854,     36832: vcs_info: Remove dependency on  seq \n\nThe  seq  utility is usually available on GNU systems only  This\nexchanges calls to seq with pure zsh features  Also: Less forks are\ngood \n  
7855,     36830: vcs_info: Silence an error message with new git versions\n\nMikael informs me on IRC  that in new versions of git (he used 2 6 1)\nwhere the  am  subcommand is now a builtin  a file that is used by the\ngit backend of vcs_info (namely  git/rebase-apply/msg-clean) is not\navailable anymore  leading to an annoying error message:\n\n  VCS_INFO_get_data_git:232: no such file or directory:  git/rebase-apply/msg-clean\n\nThis patch checks for the availabiliy of the file before using it \nand adjusts the value of the dependant values accordingly \n  
7856,     36780: Fix crash in ksh mode with -n and $HOME \n\nIf home variable is NULL ensure HOME is unset \n  
7857,     36773: limit CORRECT / CORRECT_ALL to directory names in cases where it is obvious that a directory is expected\n  
7858,     unposted: back out 36707  add test case for 36766\n  
7859,     36766: fix incorrect reset of noerrexit during  if  conditions\n  
7860,     36760: more care with already unmetafied pattern trial strings\n  
7861,     36754: Functions/TCP: Tweak some usage output in the tcp_* functions\n  
7862,     unposted: define zle_usable before using it (reported in 36741)\n  
7863,     36732: _zsh now complets script args; also support -s  -b\n  
7864,     unposted: zle_thingy: return a value in bin_zle_flags\n  
7865,     unposted: bracketed-paste-url-magic: actually do what the comment says\n  
7866,     36737: Ensure we don t dreference unterminated zero-length string\n  
7867,     36735: add ~/ zcalcrc handling to zcalc\n  
7868,     36729: fix some typos in distro docs\n  
7869,     36722: allow git range to complete after ^ \n\nTake account of backslash quoting \n  
7870,     Merge branch  master  of    code sf net/p/zsh/code\n  
7871,     users/20672: missing  do  in gettext2() for  select \n  
7872,     36707: distinguish ERR_RETURN value of retflag so that execif() can ignore it in the test sublist\n  
7873,     remove sentence fragment\n  
7874,     36692: bracketed-paste-url-magic: simpler alternative for handling pasted urls\n  
7875,     36709: zle -f from inside widget to set flags and make yank start/end zle params writable\n  
7876,     36725: vcs_info git: Compute %b correctly when  git am -ing onto detached heads \n\nBefore this patch  $gitbranch would be set to empty  which caused\nVCS_INFO_get_data_git to early out with a failure status¹  consequently\n$vcs_info_msg_0_ would be empty \n\n¹ via the \ if [[ -z   \  block around line 170 \n  
7877,     36725: vcs_info git: Compute %b correctly when rebasing detached heads \n\nThis sets the %b expando to the hash of the before-the-merge HEAD  rather\nthan to the literal string  detached HEAD    That hash is already available\nvia the gen-applied-string hook \n  
7878,     36725: vcs_info git: Compute %b correctly when merging to detached heads \n\nThe %b expando should be the hash prior to the merge   The hash of the merge\nresult is available as the %i expando and via the gen-applied-string hook \n  
7879,     36697: handle options of _arguments correctly\n  
7880,     36693: arithmetic rounds towards zero  document\n  
7881,     36711: Allocate unmetafied pattern trial string on the heap\n  
7882,     unposted:  fix typo in comment \n  
7883,     36700: unmetafy early for parameter match\n  
7884,     36682: expand pattern interface to optimise unmetafication\n  
7885,     unposted: Test for 36669\n  
7886,     36601: vcs_info: handle missing  git/rebase-apply/ next msg-clean \n\nWhen pressing Ctrl-C after `git am`  only `last` exists in\n` git/rebase-apply/`  which is empty \n\nThis patch fixes it to fall back to  no patch applied  then \n  
7887,     36669: fix $ (z)     of an an incomplete math expression by restoring  ((  at the front of the token\n  
7888,     unposted: Update link to my ChangeLog generator script \non account of patching it to handle commas properly (thanks Mikael) \n  
7889,     unposted: Fix broken case condition and  qualifer  typo\n  
7890,     36651: WARN_CREATE_GLOBAL += math expressions\n\nWithout this   ()   (( x=42 ))    and  ()   for (( i=0; … ))    wouldn t warn\nabout $x and $i  respectively  being created global \n  
7891,     36653: OpenBSD s usermod has no -a flag\n  
7892,     36663: replace obsolete  autobins  commentary with  autofeatures \n  
7893,     36661: replace obsolete  autobins  setting with  autofeatures \n  
7894,     36631: separate _zsh from _sh\n\nDo all the completion for zsh by _arguments\n  
7895,     36641: fix multibyte handling in incremental search during menu selection\n  
7896,     unposted (see 36633): _hg: Enable --option=value syntax and disable  -xy Xarg Yarg  syntax\n\nThis simply removes the  -w  argument to _arguments and changes\n -x+ --foo  to  -x+ --foo=  throughout the file \n  
7897,     unposted: zle: Document the C helper function processcmd() \n\nAlso  tweak the docstring of zlelineasstring() \n  
7898,     36626: _hg: completion for  hg bookmarks \n  
7899,     36630: new function zsh_directory_name_generic\n  
7900,     36623: document bracketed-paste-magic and url-quote-magic; add cross-reference to vim text object widgets\n  
7901,     36603: glob: fix dirfd leak during Y shortcut qualifier\n  
7902,     unposted: _hg: Declare $expl as an array\n  
7903,     36613: _hg: extend completion for hg push to support branch and bookmark\n  
7904,     36604: fix getopts+shift calculation\n  
7905,     unposted: Followup to 36586: Change C99 comment syntax to the C89 syntax \n  
7906,     36571: Completion for zsocket and updated losetup s completion\n  
7907,     unposted: replace multi-byte curly-quotes with plain quotes in ChangeLog entry\n  
7908,     36587: use +LINE:COLUMN to place the cursor when invoking emacs variants  for emacsclient\n  
7909,     36586: fix completion match right anchor\n  
7910,     36538: fix description of b and B completion match anchors\n  
7911,     36578: option in a set has key  set-opt  in $opt_args\n  
7912,     36580: don t copy empty buffer in compmatch \n\nAlso check if length is non-zero when buffer is empty \n  
7913,     36577: supplement 36559 to using LONG_MAX for 64-bit long\n  
7914,     36576: _tmux: Fix tmux homepage URI\n  
7915,     36575: _tmux: ‘lock-server’ option is gone in tmux git\n  
7916,     36556: complete two or more options for zsh\n  
7917,     unposted: typo in 36559\n  
7918,     36574: new completion for the lldb debbuger\n  
7919,     cf  users/20606: zcompile prepares scripts for sourcing  not for execution\n  
7920,     36566: check for regular file before lseek()\n  
7921,     36562: sanitize $PWD on import  per POSIX\n  
7922,     36559: test earlier for overflow in pattern range\n  
7923,     unposted: fix typo in test\n  
7924,     cf  36554: remove unnecessary pointer dereference\n  
7925,     cf  users/20586: clean up cross-references to the  Autoloading Functions  doc\n  
7926,     36552 plus test: fix Nularg string in quotestring(QT_DOLLARS)\n  
7927,     unposted: docs: Typo fixes\n  
7928,     unposted (see 36526): Update changelog for 36443 \n  
7929,     36525: revert only the selfinsert() bit of 36496\n\nselfinsert() may be called with incomplete wide character processing from\nplaces other than getkeymapcmd()\n  
7930,     36523: Completion/…/_gphoto2: Replace --delete-files with --delete-file\n  
7931,     unposted: revert 36483 as multibyte is now handled by  zle  read-command ; adapt to new default behavior of zle_highlight for paste\n  
7932,     36522: unmetafy the argument of  zle -U \n  
7933,     36509: allocate hash table nodes with zshcalloc() to avoid garbage flag values\n  
7934,     36491: Multibyte support for parameter expansion flags B E N\n  
7935,     36443: Set zle_highlight=(paste:standout) by default \n  
7936,     36443: Revert  35834: strip a final newline from pasted text: inserting is hard to tell apart from accepting it \n\nThis reverts commit f17eb26a34af69a2238a3d8b46079445e09c096e \n\nConflicts:\n\tChangeLog\n\tSrc/Zle/zle_misc c\n  
7937,     Read full multibyte string early for self-insert\n  
7938,     unposted: update internal build string to 5 1 1-dev-0\n  
7939,     unposted: version 5 1 1\n  
7940,     36489: fix curses bug with hash table for colours\n  
7941,     36483: handle incomplete multibyte characters in bracketed-paste-magi\n  
7942,     Update news for 5 1 1 with minor features just added \n  
7943,     36445: Expose yankb  yanke  ZLE_YANK to widgets \n  
7944,     36478: Add [[:INCOMPLETE:   and [[:INVALID:   pattern tests \n  
7945,     36470: Auxiliary to 36468  return an empty buffer from zleread() if a widget exits\n  
7946,     36468: Fix infinite loop exiting from Zle widget \n\nIf the exit was while we were waiting to complete a lexical expression\nwe might not exit from the loop \n  
7947,     36460: Discard benign error when no one is reading from pipe\n  
7948,     36422: add missing unmeta()\n  
7949,     36437: Document interaction of $region_highlight and $zle_highlight \n  
7950,     unposted: ZLE_STATE: fix obvious documentation typo \n  
7951,     36441: _git: Fixed typo in --author-date-order description\n  
7952,     unposted: make 5 1-test-1 with updates for 5 1 1\n  
7953,     unposted: typo in comment\n  
7954,     unposted: Minor documentation tweaks \n  
7955,     36410: vcs_info git: Present merge heads as patches\n\nThis shows  during \ git merge\   the revision hashes of the  remote  head\n(the one that will become second parent of the commit) in the %m expando \n\nReview-by: Frank Terbeck\n  
7956,     unposted: typo in change log\n  
7957,     36421: fix breakage in pattern change in 36415\n  
7958,     36417: fix/update top level texinfo menu\n  
7959,     36415: remap bytes from invalid multibyte characters \n\nThese now go to 0xdc00 + index   If wchar_t is a Unicode code point \nthis is by construction an invalid character within the Unicode range \nIf it isn t  we would hope the result was no worse than the current\nfudge \n  
7960,     36416: ^C in getzlequery() just aborts query \n\nAlso logical but possibly invisible fix for error propagated\nback from listing interface \n  
7961,     36403: type -w += suffix alias\n\nThis makes  type -w  distinguish suffix aliases from regular aliases \nlike bare  type  already does \n\nUse-case: detecting programmatically whether the command word is indeed\na valid command word (see <   com/zsh-users/zsh-syntax-highlighting/issues/126>)\n  
7962,     Add ChangeLog entry for tests from previous commit\n  
7963,     36393: process queued signals during dotrap()\n  
7964,     36378: skip directories when looking for files to autoload\n  
7965,     unposted: fix egregious typo\n  
7966,     36399: Shell code text with multiple here documents wasn t shown properly \n  
7967,     36347: Fix appending empty array to associations\n  
7968,     36380: Avoid gcc case syntax\n  
7969,     36376: handle signals during read1char() so it is possible to interrupt correct/correctall prompts\n  
7970,     36365: magic-space could delete the reset of the line \n\nIf we got a LEXERR  which didn t necessarily mean an actual error \njust something the rather nasty ctxtlex() got confused by  we\ndidn t scan the reset of the line \n  
7971,     unposted: Update internal version to 5 1-dev-0 \n\nAvoids installation clash of develpment build with 5 1 release \n  
7972,     36353: _git: Unbreak after previous \n  
7973,     36328 + 36340: _git-cherry-pick: Complete other branches only\n  
7974,     36338: Replace  5 0 9  with  5 1  in source comments\n  
7975,     Relase zsh 5 1\n  
7976,     36321: _debcheckout: New completion \n  
7977,     36306: _subversion: Complete --show-item values\n  
7978,     users/20475: document cdr stores unique entry of most recent use\n  
7979,     users/20466 plus comment: change test for skipping strftime extensions \n\nThis test is known to fail on Solaris  but seems to work in other\ncommon implementations   Hence there seems no point in having the\nrelease fall over on this test   Needs further investigation later \n  
7980,     36314: Avoid using short_loops syntax in distributed files\n  
7981,     36302: attr: Fix compilation with libcap 2 24\n  
7982,     unposted: _subversion: Avoid SHORT_LOOPS\n  
7983,     36304: _git-cat-file: Fix regression in 36237\n\nThis broke  git cat-file blob origin:Etc/<TAB>  \n  
7984,     cf  Axel Beckert 36292: discard even more extraneous stderr in  hang  test\n  
7985,     36288: refine 36825  slightly different test for redirect context\n  
7986,     36285: update 36025  context cannot be command and redirect at the same time  redirect wins\n  
7987,     36282: discard stderr of  hang  test\n  
7988,     unposted: update to 5 0 8-test-3\n  
7989,     36277: _git: Updated for git-clone 2 4 5 \n  
7990,     unposted: replace version 5 0 9 with 5 1 in FAQ\n  
7991,     Merge branch  master  of    code sf net/p/zsh/code\n  
7992,     users/20455: do not use posix_openpt() on OpenBSD\n  
7993,     36274: clear virangeflag when getvirange() has an error (the next keystroke is not a motion/selection) \n  
7994,     36273: teach endofline() and endoflinehist() about invicmdmode() cursor placement \n  
7995,     36266: preserve emulation and setopt context for init and finish functions  handle vi modes\n  
7996,     36256: local options should remain in effect for  emulate -L  even if additional option settings are applied\n  
7997,     unposted: fix up for 5 0 8-test-2\n  
7998,     Test for 36265  no alias expansion after  function \n  
7999,     36265 plus FAQ: fix alias expansion after  function \n\nOwing to interesting historical parsing  names after the first\nwere treated as command words so had non-global aliases expanded \nAdd an FAQ note that use of the function keyword works around\nother alias problems\n  
8000,     36264: glob and pattern variable pathbuf is metafied \n\nDocument this and unmetafy it when passing to system calls  including\nlchdir() which is a system-level interface \n  
8001,     unposted: update version from 5 0 8 to 5 1 in descriptive text\n  
8002,     36262: Replace fix for missing unmeta in chdir() \n\nIt was needed in the argument to one of a pair of lchdir()s rather\nthan within zchdir() \n\nAdd tests for the case of a character with 0x83 within it \n  
8003,     36250: ChangeLog tweaked further\n  
8004,     36250: add notes on bracketed paste mode to README\n\nNext version will be 5 1 rather than 5 0 9 \n  
8005,     36243: fix a few problems of  _pids -m pattern \n  
8006,     36247: __git_objects: Complete HEAD: /foo correctly in worktree subdir\n  
8007,     36237: __git_objects: Complete HEAD:foo correctly in worktree subdir\n  
8008,     36236: _git-log: Complete multiple revspecs\n\ne g   git log origin/master origin/foo origin/bar\n  
8009,     36236: _git-log: complete  git rm d files\n  
8010,     36148: _git-log: Complete flags after positional argument\n  
8011,     36241: Test for ztrftime fix  36227 / f8164fb6 \n\nCheck that embedded null characters get passed correctly through\nthe strftime module builtin \n  
8012,     36208: _subversion: Complete a few more option switches\n\nThe while (( idx )) form should guarantee that these switches are only\nadded if the  svn  binary supports them   (One of these switches isn t\npresent in svn 1 8 or earlier )\n  
8013,     unposted: typo in ChangeLog\n  
8014,     36232: Unmeta needed in chdir() in zchdir()\n  
8015,     36227: attempt to fix metafication problem with ztrftime \n\nfmt is treated as metafied on entry; use returned length to ensure\nwe metafy or output the correct length if there are embedded nulls \n  
8016,     Revert  36222: unmetafy output from strftime \n\nThis reverts commit 8141a3d850b1b9777a13d0107c262853734214b4 \n  
8017,     36222: unmetafy output from strftime\n  
8018,     36218: use unmetafied file name for mkdir system call\n  
8019,     36216: Missed message number\n  
8020,     36216: Simpler handling of UNDO_LIMIT_NO\n  
8021,     36212: save and restore HISTNO along with other editor state  for sanity of  zle undo \n  
8022,     36209: vcs_info: avoid grep error message when file is missing\n\nWhen running git rebase -m and a conflict occurs  the git-rebase-todo\nfile is not present   This leads to an error from grep every time the\nshell prompt is printed when vcs_info is enabled   Avoid this message by\nchecking if the file exists before trying to grep it \n  
8023,     unposted: _sshfs: Fix completion of options with values\n\nThe  =  to the left of the  :  was interpreted as a literal part of the option\nname  resulting in double equal signs \n  
8024,     36158: _sshfs: Fix completion of and after -o\n\nThe  action  part of the -o spec didn\ t escape colons \n  
8025,     36109: bracketed-paste: change quoting style\n  
8026,     36186: FAQ (3 24): Update for bracketed paste\n  
8027,     36172: _imagemagick: Use $formats a bit more correctly\n  
8028,     unposted (cf  36200): back out _expand backslash handling change from 34961 \n  
8029,     unposted: use of $f in zmv\n  
8030,     36165: simplify file-patterns default to a single pattern\n  
8031,     unposted: mention bracketed-paste-magic in url-quote-magic comments\n  
8032,     Reorder commit-log entries for international date line \n  
8033,     Merge branch  master  of git://git code sf net/p/zsh/code\n  
8034,     36195  36196: wrapper of bracketed-paste for compatibilty with url-quote-magic and other self-insert wrapper widgets\n  
8035,     36183: _ssh: update to 7 0\n  
8036,     36177: _setopt: complete printexitvalue both ways\n  
8037,     36180: avoid infinite job stop/continue loop on  wait PID  for a background job\n  
8038,     36091: _ncftp: search XDG_DATA_HOME for bookmarks saved by lftp\n  
8039,     Revert 36118\n\nThis works already except if list-dirs-first is set  and that\nis being fixed separately \n  
8040,     36146: avoid mix of -/ and -g with _files as that just overrides user preferences\n  
8041,     unposted: fix minor typos\n  
8042,     unposted: _subversion: Complete property names for propdel\n\nPreviously  filenames would be completed \n  
8043,     36131: make use of undo limits; call mkundoent() when $UNDO_CHANGE_NO is referenced for a clear change number marking the current state\n  
8044,     36113: ip(8) may add suffixes which is not good for completion matches\n  
8045,     Wieland Hoffmann: 36123: protect against word splitting in __git_is_committish_range\n  
8046,     36106: fix const parameter to bindkey\n  
8047,     36127: assorted minor completion function changes\n  
8048,     36125: don t set history context in get-line\n  
8049,     35834: strip a final newline from pasted text: inserting is hard to tell apart from accepting it\n  
8050,     36119: _strftime: Add completion for zsh/datetime s strftime builtin\n  
8051,     36120: _sort: Fix syntax error\n  
8052,     36118: _imagemagick: complete all files if image files didn t match\n  
8053,     36117: _wget: complete headers for --header and add --no-use-server-timestamps\n  
8054,     36116: _git: various fixes\n\nAdd = to git checkout --conflict= completion\nfix transposed [-\ngit push remote argument is not optional\ncan use shorter syntax for a check\n  
8055,     36078: vcs_info: Adjust documentation for no longer exporting\n  
8056,     36077: vcs_info: stop exporting everything\n  
8057,     36108: list of major changes so far since 5 0 8\n  
8058,     36104: change order of child_block() and dont_queue_signals() to resolve yet another race condition\n  
8059,     36092: return the zpty master file descriptor in $REPLY for use with  zle -F  etc \n  
8060,     36090: keep signals queued for preprompt()\n  
8061,     36096: special   mark in vi mode\n  
8062,     36044: deactivate-region widget for escape in visual mode\n  
8063,     35952: bind escape in vi mode so it is a full key sequence and later keys aren t dropped\n  
8064,     36067: fix typo and format in the documentation\n  
8065,     unposted: replace multi-byte curly-quotes with plain quotes in ChangeLog entry\n  
8066,     36084: use zrealloc() consistently\n  
8067,     36079: do not allow update_job() and its helpers to run the signal queue while we are processing a job exit \n  
8068,     36083: set array value when consistently retying scalar and array\n  
8069,     Don t rely on implicit value when saving background process status\n  
8070,     36075: Disable ‘local’ keyword in script to make data retrieval work\n  
8071,     36069: _tmux: Fix \\ooo display in completion list\n  
8072,     36070: _tmux: Update bell-action and prefix options\n  
8073,     36060: _tmux: Update TODO\n  
8074,     36061: _tmux: Add support for new window options\n  
8075,     36055: _tmux: Add support for new server options\n  
8076,     36059: _tmux: Add new session options\n  
8077,     36051: _tmux: Remove support for old options\n  
8078,     36047: _tmux: Fix options with changed scope\n  
8079,     36064: _tmux: Add new command aliases\n  
8080,     36052: _tmux: Remove old sub-commands and their aliases\n  
8081,     36056: Add helper script to check state of _tmux completion\n  
8082,     36049: _tmux: options => session_options\n  
8083,     36054: _tmux:  local -x  serves no purpose\n  
8084,     36057: _tmux: Replay all arguments when dispatching to new _tmux()\n  
8085,     36058: _tmux: No need to unset local variables\n  
8086,     36050: _tmux: Don t unset  set empty in local scope\n  
8087,     36063: _tmux: Remove dead code\n  
8088,     36062: _tmux: Add support for new sub-commands\n  
8089,     36048: _tmux: Update options for supported commands\n\nThis also adds a little TODO on top about what is missing \n  
8090,     36046: _tmux: Update command line options\n\nNew: -C and -V\nRemoved: -q (tmux still excepts it for backward compatibility  but it\n         does nothing)\n  
8091,     36045: make effect of failures in wait test clearer\n  
8092,     not quite posted: check for error return before EINTR\n  
8093,     36039: Restart socket commands on EINTR\n  
8094,     35885: document closing fd s opened with sysopen\n  
8095,     36033: a few more queue_signals() to protect global state changes\n  
8096,     36026: zero freed pointers in zftp cleanup_() in case the module is re-loaded after unloading\n  
8097,     36022 fix bug that some loop constructs could not be interrupted  revise signal queueing\n\nThere are two underlying ideas here:  (1) Keeping signals queued around\nanything that s doing memory management (including push/pop of the heap)\nhas become crucial   (2) Anytime the shell is going to run a command  be\nit buitin or external  it must be both safe and necessary to process any\nqueued signals  so that the apparent order of signal arrival and command\nexecution is preserved \n  
8098,     unposted: add tests for outputting traps specified via aliases\n  
8099,     Fix retying variables in opposite order \nNow gives an error \nAdd test \n  
8100,     36025: Fix completion aftoer  foo=bar; setopt   \n\nDone by catching a case that doesn\ t seem to be handled otherwise \nso there\ s some hope it doesn\ t screw up too much \n  
8101,     36008: trap: Fix listing of traps created under non-alias non-canonical signal spelling\n  
8102,     35954: Doc: sysopen -u is not optional\n  
8103,     35929: protect FDT_PROC_SUBST by #ifdef\n  
8104,     35928:  %-m  should work even if not supported by strftime(3)\n\nAlso clarify document \n  
8105,     35991: _ssh: add ssh option FingerprintHash\n\nSigned-off-by: Christian Hesse <mail@eworm de>\n  
8106,     unposted: _ssh: use the -q option for the = suffix\n\nThis way  you can press = to start completing the values instead of\nthe space  backspace  tab dance\n  
8107,     35989: _ssh: update to 6 9\n  
8108,     35973: new systat and vmstat completions\n  
8109,     35972: allow for Directive=Value format in  ssh/config\n  
8110,     35986: add ssh option UpdateHostKeys\n  
8111,     unposted (c f  Bart: 35902): use - after zle -U in case $key is -\n  
8112,     unposted: Typo fix \n  
8113,     35970: completion: fix typos in _git and _brace_parameter\n  
8114,     35957: fix _make-expandVars()\n\nAlso use variables set in the command line and environment \n  
8115,     35963: simplify condition found by coverity to include tautology\n  
8116,     35960 (tweaked): complete correct options for OpenBSD s find\n  
8117,     35953: fix handling of command substitution in math context\n  
8118,     35947: update discussion of module wrappers  some examples\n  
8119,     Merge branch  master  of git://git code sf net/p/zsh/code\n  
8120,     35937: wait for process IDs instead of job numbers in parallel mode\n  
8121,     _arguments docs: Divide into subsections\n  
8122,     _arguments docs: Bring all option descriptions to one place\n  
8123,     35274: completion: Add FreeBSD s watch(1)\n\nReview-by: Oliver Kiddle\n  
8124,     35901: complete full names as removing later components was broken for aliases and unwanted in any case\n  
8125,     faster method of generating list of python modules\n  
8126,     add RPS2 handling to  prompt bart   update help text  clean up indentation whitespace\n  
8127,     35910: Don t add to raw lex buffer if lex stopped \n\nThis was causing a segmentation violation in completion when parsing\nan incomplete math expression  e g   echo $((3*4)<TAB>  \n  
8128,     35809: fix $((   )) completion by _expand widget \n\nThis changes internal quoting of the form still including tokens\nnot to add unnecessary internal backslashes \n  
8129,     35908: fix $((   )) completion in expand-or-complete widget\n  
8130,     35896: index zle_highlight\n  
8131,     35882: read-command has ZLE_NOTCOMMAND\n  
8132,     35810: FAQ += edit-command-line\n  
8133,     35809: zyodl vim: Fix nested parentheses\n  
8134,     35807: edit-command-line: Fix for non-7bit-data (after 35769)\n\nBug reported and fix suggested by Mikael \n  
8135,     35865: document %^ prompt expansion\n  
8136,     35864: add sysopen  sysseek and systell to system module\n  
8137,     35879: fix for subcommands that don t have a second subcommand\n  
8138,     35883: Don t attempt to back up over history if expanding alias\n  
8139,     35873: add original test for process substitution deadlock from 35847\n  
8140,     35872: protect against NULL pointers in unmeta\n  
8141,     35849: close fd s from process substitution after fork\n\nLeaving these hanging in parent could cause deadlock: test added \n  
8142,     35854: ensure history character unget doesn t recurse infinitely\n  
8143,     35793: avoid undefined behaviour shifting signed number\n  
8144,     35753: allow for numbers after the ( in ternary expressions and fix backslash quoting\n  
8145,     35867: new patchutils (interdiff etc) completion\n  
8146,     35866: complete also for pigz and allow for NetBSD gzip\n  
8147,     35824: allow highlighting of just pasted text and put text from bracketed paste in cut buffers\n  
8148,     35815: fix for lack of startup output from newer nslookup\n  
8149,     35814: POSTEDIT needs to be unmetafied\n  
8150,     35939: fix select polling in ztcp and zsocket\n  
8151,     users/20324: add (D) flag for tilde-fied completion listing\n\nAlso move some more recent code so an old comment is connected to the\ncorrect bit of older code\n  
8152,     fix another test for 35581\n  
8153,     35826: add getsparam_u() to return unmetafied string  use it for a number of references to non-special params\n  
8154,     35823: fix handling of MARK and CURSOR  clean up documentary comment\n  
8155,     35581  35582: output array assignments with spaces inside the parens\n  
8156,     35805: tests for 35799\n  
8157,     35799: with NO_EXEC  parse parameter subscript expressions\n  
8158,     unposted: _ps1234: Fix ternary test char completion\n  
8159,     35789: (tweaked c f  Bart: 35791): duplicate glob qualifier handling from _path_files so it is called once and not for each file pattern\n  
8160,     35790: zyodl vim: Be compatible with Vim 6 \n  
8161,     35775: New zsh-specific yodl vim syntax highlighting \n\nTo try this  see the instructions at the top of Util/zyodl vim (in the comment) \n\n* Util/zyodl vim: New syntax highlighting file \n* Doc/Zsh/ vimrc: New file  hooks up zyodl vim for automatic loading \n* Etc/zsh-development-guide: Namedrop zyodl vim for discoverability \n  
8162,     35769: edit-command-line: Go to the right byte offset\n  
8163,     35737: (tweaked c f  Peter: 35759): use new undo limit for minibuffer and beep when limit is reached\n  
8164,     35756: use the actual colours in the completion list for terminal colours\n  
8165,     35774: fix double formatting of date explanation message\n  
8166,     35779: completion: _git-config: remove extraneous  local expl \n\nIt is defined at the beginning of the function already  and results in\nthe output of `expl=\ \ ` when completing after `git config\nbranch local pushremote ` etc \n  
8167,     unposted: Typo\n  
8168,     unposted: notes on ZTST_unimplemented and ZTST_skip \n  
8169,     35761: Make sure to skip alternate format extension test properly\n  
8170,     unposted: another ZTST_skip\n  
8171,     35760: Add ZTST_skip to test system\n  
8172,     35708: add UNDO_LIMIT_NO\n  
8173,     unposted: Make V09 set a known timezone\n  
8174,     35751: Fix ERR_RETURN and ERR_EXIT in  else \n  
8175,     35745: ztrftime: Pass everything unhandled to the system strftime()\n  
8176,     35748: fixes to prompt spec completion where it contains date formats\n  
8177,     35749: (c f  Jun T: 35732): fix exclusion list for flags/modifiers\n  
8178,     35729: new compadd completion\n  
8179,     35727: support OpenBSD for diff options\n  
8180,     35700: complete OS specific date format specifiers and put % in a prefix\n  
8181,     35718: new calendar style date completion\n  
8182,     unposted: remove compiler error in completion code\n  
8183,     unposted: alphabetize $ (b)     flag\n  
8184,     35709: explain :s/// modifier contexts \n  
8185,     35694: fix handling of history modifiers applied across all elements of an array parameter value\n  
8186,     35704: compadd -E 0 should imply -J and -2\n  
8187,     35697: _ps1234  _date_formats: Complete strftime formats for %D  \n  
8188,     35696: _ps1234: complete colors for %F  and %K \n  
8189,     35441: Make devs  ChangeLog generator scripts discoverable\n  
8190,     35692: cfp_matcher_range used wrong raw character\n  
8191,     35688: Improved attempt to turn case wordcode into text \n  
8192,     Turning case parsed as multiple alternatives back into text \n\nAlso add test \n  
8193,     35681: fix day of month initialisation\n  
8194,     35674: make an undo event for initial buffer contents\n  
8195,     35673: Improve _zargs\n  
8196,     35665: better handling for command line completion match handling\n  
8197,     35663: zpool completion fix needed after completion change\n  
8198,     35668: Improved fix for command/proc subst starting in alias \n\nUse input flag to suppress the unwanted backtracking \n\nAdd test for the extra case covered \n  
8199,     35667: fix command substitution that starts but doesn t finish in alias\n  
8200,     unposted: fix formatting typo in options list \n  
8201,     35655: APPEND_CREATE option for POSIX copmatible NO_CLOBBER\n  
8202,     35660: prompt_adam1_setup: avoid perl  fix help\n  
8203,     35637: remove the now unused module hook for reverse-menu-complete\n  
8204,     35627: make reverse-menu-complete start with the last match in\nmenu selection\n  
8205,     35623: fix menu-selection where initial selection\nwould not be displayed without scrolling\n  
8206,     35643: Redirections after typeset assignments were broken \n  
8207,     35642: signal queueing in zcontext_save_partial()\n  
8208,     35635: a bit more consistency about making elements local\n  
8209,     35634: handle failure of gettempname() in namedpipe()\n  
8210,     Don t require MULTI_FUNCDEF in _main_complete \nAlthough it gets set there  _main_complete is parsed to the end first \n  
8211,     35623: All is_array assignments should be treated as having a value \n  
8212,     35626: update POSIX_CD to note that it is on in ksh and sh emulations\n  
8213,     35615: fix completion after tyepset\n  
8214,     35613: Handle array slices in typeset\n  
8215,     typeset silent on repeated typeset x=()\n  
8216,     35604: create empty arrays in typeset with array=()\n  
8217,     35550: fix backspace in interactive menu-select\n  
8218,     35514: [[:foo:   tests in completion should be more specific\n  
8219,     35590: tweak and test text output from typeset\n  
8220,     various posts: Implement assignment parsing for typeset \n\nTypeset assignments now work like raw assignments except\nfor no  +=  and no GLOB_ASSIGN \n\nDocumented in typeset builtin doc and mentioned in release notes \n\nTests to ensure basic sanity \n\nEnabled by default  can be turned off by  disable -r  with typeset\nfamily of commands \n  
8221,     35573: turn off POSIX_BUILTINS in completion \n\nThis is now needed to get suitable OPTIND behaviour \n  
8222,     unposted: add missing (void) argument list to bracketedestring()\n  
8223,     35568: use symlinks in /proc/$$/path on Solaris and procstat on FreeBSD\n  
8224,     35529: fix filename completion after java -jar\n  
8225,     33566: regex module fix for unmatched parentheses\n  
8226,     35558: narrow-to-region: Use unique parameter names for new feature\n  
8227,     35554: Document narrow-to-region -l and -r \n  
8228,     35545: enhance narrow-to-region to return LBUFFER and RBUFFER\n  
8229,     35531: fallback on file completion\n  
8230,     35527: use list-separator style in cases where separator was hardcoded\n  
8231,     35528: allow for IPREFIX\n  
8232,     35474  35492: support the bracketed paste mode of newer terminal emulators\n  
8233,     35487  35496: don t reinstate previous incremental search string\nwhen search direction changes\n  
8234,     35510: use consistent formatting for git subcommands\n  
8235,     35504: complete % placeholders for git log --format\n  
8236,     35521: sort matches numerically and use pfiles on Solaris\n  
8237,     35490: silence errors and avoid blank match due to missing local\n  
8238,     35476: Allow setting $0 when POSIX_ARGZERO is not set\n  
8239,     35493: erase $_ when the command line is an assignment\n  
8240,     35482: be consistent about how argzero is allocated\n  
8241,     _gdb: Allow  core  to occur anywhere in a coredump filename\n  
8242,     35469: test UNDO_CHANGE_NO to determine whether to start over or use the next history event\n  
8243,     35467: complete files for non-GNU du\n  
8244,     Add non-metafied character length handling \n\nUse this in regex module and add test using $ \\ua0  \n\nRename mb_metacharinit() to mb_charinit() as it does not involve\nmetafied characters \n  
8245,     35442: document MULTIBYTE is always on by default when available\n  
8246,     35418: fix usage synopsis for _describe to be clear that a single\ndescription is used\n  
8247,     35416: Turn on MULTIBYTE in all emulations \n\nThis now includes sh \n  
8248,     35216: _git-checkout: do not call __git_commits twice\n\nThis makes `branch_arg` empty by default  to be used only for\n__git_remote_branch_names \n\n`branches::__git_revisions` was used here  but that s the same as\ntree_ish_arg= tree-ishs::__git_tree_ishs  - both call __git_commits \n\nOnly tree_ish_arg will call __git-commits now \n  
8249,     35412: fix for - flag when formating strings with printf\n  
8250,     35163: move  show-ambiguity  style to _setup so that more precise context can be applied\n  
8251,     35350: extend  fc -I  to cover listing of  internal  history events only\n  
8252,     35386: expand tabs where useful in builtins outputing function \n\nAlso add to zed -f \n\nOption is -x <numm> \n  
8253,     35360 (replacing 35357): fix for configuring zpty on FreeBSD without\npty ko loaded\n  
8254,     35374: tab expansion with double width characters\n  
8255,     35369: better GLOB_ASSIGN testing\n  
8256,     GLOB_ASSIGN should only affect scalar assignments\n  
8257,     users/20243: turn off GLOB_ASSIGN in completion system \n  
8258,     35270: _describe: Document a known issue described in 35229\n(which is the same thread as 35127 and 34768)\n  
8259,     35271: New completion: beep \n\nThe new completion is mostly boilerplate except for the handling of\n$words/$CURRENT to support specifying the arguments multiple times\nseparated by -n \n  
8260,     unposted: Typo fix\n  
8261,     35359: Improved math parsing and errors \n\nCheck for bogus trailing  )  at end of top-level parse \n\nExtend some math error messages to indicate they are math errors \n  
8262,     35357: FreeBSD needs HAVE_POSIX_OPENPT for zpty\n  
8263,     35353: print -x and print -X expand tabs\n  
8264,     35356: factor out completion of tty devices\n  
8265,     Adrien Vergé: 35352: completion for new Redhat package manager\n  
8266,     unposted: Update version to 5 0 8-dev-0 for new developments\n  
8267,     unposted: release 5 0 8\n  
8268,     35343: Avoid $#name length handling for POSIX_IDENTIFIERS\n  
8269,     users/20238: add  fc -L  to operate only on the local shell history\n\nAlso avoid invoking the editor on empty results \n  
8270,     35234: better zfget completion with paths\n  
8271,     35311: typo in zfuput behaviour\n  
8272,     35310 (plus undo 35268 (git 899613f)): fix quoting of cached arrays\n\nAlso add file name reference to ChangeLog entry from rev 899613f \n  
8273,     35326: $#- was misparsed as $ #- \n  
8274,     20237: fix typo in foregoing commit\n  
8275,     2037: $ functions[foo   shouldn\ t be unmetafied \n\nWhen passed back from the parameter-specific  get  handler it\ s\nstill in the shell\ s internals  so remains metafied \n\nThis caused mayhem with UTF-8 characters in function bodies \n  
8276,     35098: completion: git: provide --amend also with  message  group\n\nEspecially during a git rebase  you would use `git commit -m foo\n--amend` \n  
8277,     35315: replace inappropriate uses of _path_commands\n  
8278,     35318: POSIX_BUILTINS behaviour for getopts \n\nIt needs to keep OPTIND  as well as the index within the\nstring pointed to by OPTIND  global in this case \n  
8279,     35306:  test -z \\(  failed due to parse confusion\n  
8280,     Update to 5 0 7-dev-4\n  
8281,     35293: fix zstyle lookup with _php: use trailing colon\n  
8282,     35286: fix zstyle lookups with _baz and _tla\n\nAdd trailing colons to context being used with `zstyle -s` \n  
8283,     35285: _cdr: fix zstyle lookup for recent-dirs-insert\n\nThe string was quoted incorrectly and missed the final  :  \n  
8284,     35299: Improve effect of zfdir -r\n  
8285,     35289: fix typos in the description of emulate\n\nbased on 34981 by Han Pingtian\n  
8286,     c f  35268: revert completion cache optimisation for now\n  
8287,     35295: Try harder with zftp directory listing\n  
8288,     35292: yum install complets local files\n  
8289,     35127#1: Fix _describe/compdescribe problem with unsorted groups\n  
8290,     Tweak test for function level of exit \n\nSometimes local level jumps so we need an inequality instead\nof an equality \n  
8291,     35255: if available  use texi2any instead of texi2html\n  
8292,     ChangeLog: for previous commit; fix date for older one\n  
8293,     35261: completion: git: __git_recent_commits: local ret\n\nWithout this  `ret` will be set to 1 with `git diff --ex<tab>` and\nresult in duplicate entries:\n\n   % git diff --ex<tab>\n    -- option --\n   --exit-code    -- report exit code 1 if differences  0 otherwise\n   --exit-code  -- report exit code 1 if differences  0 otherwise\n   --ext-diff     -- allow external diff helper to be executed\n   --ext-diff   -- allow external diff helper to be executed\n   --no-ext-diff  -- disallow external diff helper to be executed\n    -- recent commit object name --\n  
8294,     35250: Fix case documentation (SH_GLOB)\n  
8295,     35248: treat fully parenthised zsh patterns as complete case patterns again\n  
8296,     35231: make mkevnstr() safe for NULL value\n  
8297,     35232: matching parentheses\n  
8298,     35224: completion: git: Add fast-export --signed-tags=warn-strip\n  
8299,     35217: add missing changelog entry; use  -O expl  with _alternative\n  
8300,     35217: completion: git: send-email: complete (recent) commits\n\nThis adds `__git_commit_objects_prefer_recent` as alternative for\ngit-send-email s completion \n  
8301,     __git_commit_objects: do not use _guard  but only a pattern\n\nWith using `_guard` there like it s been done  the completion could not\nbe selected  probably because of the call to `_message` therein \n\nThis changes it to use only the logic/check from `_guard` that we want\nhere \n  
8302,     Completion/Unix/Command/_git: remove -2 with __git_recent_commits\n\nRemove  -2  for _describe in __git_recent_commits \n\nThis fixes the duplicate entries issue  because __git_recent_commits\ngets called twice for _git-checkout (for __git_revisions and\n__git_tree_ishs):\n\n1  __git_commit_objects_prefer_recent _alternative __git_commits\n   __git_revisions _alternative _git-checkout\n2  __git_commit_objects_prefer_recent _alternative __git_commits\n   __git_tree_ishs _alternative _git-checkout\n  
8303,     35204: fix broken __git_recent_commits from previous commit\n\nThis fixes 1e7bb4a: newlines need to be kept (from the  %d  part) \n  
8304,     35164: fix __git_commit_objects/__git_recent_commits\n\n$pipestatus for `: foo` is 0 always \n\nWithout this   git checkout  in a non-git directory would complete     \nbut not result in a note/error about not being in a git dir \n  
8305,     users/20222: completion: git: Add matchspec for heads\n\nAllows  git checkout o/m<TAB>  to complete  origin/master  \n\nMoreover   /x<TAB>  would complete  foo/bar/xyzzy/baz   since the matchspec\nuses not  *  but  **  \n  
8306,     35193: Add  unalias -a  \n  
8307,     35187: unbalanced parentheses in _vim\n  
8308,     35184: Additional case fix for 35168 \n\nLexical analysis flags got screwed up after a  |   so we\ndidn\ t parse patterns properly  in particular those with parentheses \n  
8309,     35168: Improve parsing of case patterns \n\n |  is now found properly by looking for words that come\nfrom the lexical analyser  rather than hacking a pattern\nreturned in one dollop \n\nUpdate some completion functions that need extra quoting\nas a result \n\nAdd test for new parsing \n\nUpdate version number to 5 0 8-dev-3 because of wordcode\nincompatibility \n  
8310,     35105: completion: git: add distance_from_head to __git_recent_commits\n\nThis adds the  HEAD~15  gitrevisions(7) identifier of the commit to the\ndescription  which also uniquifies  isn\ t redundant  and may be easier\nto type \n\nRef: zsh-workers/34820 (   zsh org/mla/workers/2015/msg00744 html)\n  
8311,     35106: completion: git: unique name for __git_recent_commits\n\nThis helps to distinguish it from __git_commit_objects \n  
8312,     35103: completion: git: add %cr to commit objects (all and recent)\n  
8313,     35104: completion: git: __git_commit_objects: query 1000 commits\n\nAlso  `--all` and `--reflog` is used to get all commits \n\nIt adds the _guard in front  so only non-empty values will come here \nAlso  __git_commit_objects_prefer_recent will only call it  if there are\nno matching recent commits \n  
8314,     35101: completion: git: add __git_commit_objects_prefer_recent\n\nThis is used with __git_commits then  and is meant to only call\n__git_recent_commits  if there are matches \n  
8315,     35100: __git_recent_commits: massage \  ->*\  from heads\n\nHandle   -> master  origin/master  in decorated git-log output  and add\nit as separate entries \n  
8316,     35126: add missing ChangeLog entry for previous commit\n  
8317,     completion: git: add missing return to __git_recent_commits\n  
8318,     35161: completion: git: Fix typo in 35061\n  
8319,     35155: cmdpop() could be called erroneously on error\n  
8320,     users/20219: fix completion for git options\n  
8321,     35154: NEWS on arithmetic evaluation changes\n  
8322,     35153: nested math substitution\n  
8323,     35151: improved check for parameter q and b flags\n  
8324,     35131: allow  [   to match empty character set \n\nThis only works if there\ s no further     in the pattern \nsince if there is the first     has to match a literal character \n  
8325,     35139: complete the new (b) parameter flag\n  
8326,     Øystein Walle: 34841 (tweaked): allow grouping of thousands in printf format string\n  
8327,     unposted: include  distfiles for new directory\n  
8328,     35062: __git_setup_revision_options includes __git_setup_diff_options\n  
8329,     35061: add __git_setup_diff_stage_options and use it with _git-diff-files and _git-diff explicitly\n  
8330,     35016: introduce new pretty formats %g[sdD  for reflog information\n  
8331,     35110: don t implicitly initialize restricted integers to zero\n  
8332,     35092: fix for numeric arguments from vi operator pending mode\n  
8333,     35093: new zle widgets for Vim-style text objects\n  
8334,     35114: zformat -a multibyte char widths\n  
8335,     35107: new ip options to complete\n  
8336,     users/20203: nested functions in always blocks when exit pending\n  
8337,     unposted: include doc tweek to expn yo from 35071\n\nexpn yo is now essentially the same as commit 6269db8\n  
8338,     35086: reapply a hunk from 35067 for expn yo\n\nthe hunk has been mistakenly reverted by 35075\n  
8339,     35060 + 35072: completion: git: split __git_heads into local and remote\n\nIt is useful to have this distinction visually \n\nThis also uses `--format=%(refname:short)` directly with `git\nfor-each-ref` \n  
8340,     35075: improve manual format\n\nalso fixed a ChangeLog entry for 35034 (2015-05-06)\n  
8341,     35049: allow jail completion to include jid 0 for the host and to\ncomplete jails by any parameter\n  
8342,     35078: Add backslash quoting to parameter (b) flag from 35067 \n  
8343,     35067: Add (b) parameter flag for pattern char backslashing \n\nDoc tweak from Daniel in 35071 \n\nIncludes test \n  
8344,     Don t treat NUL as a combining character\n  
8345,     35066: Minor completion fix for pasted arguments\n  
8346,     35064: rename ISPRINT to ZISPRINT to avoid conflict\n  
8347,     35059: fix  document  test readonly -p \n\nDon t output specials as can t be reconstructed \n\nOutput arrays in a useful order \n  
8348,     35056: turn off PROMPT_SP for interactive test\n  
8349,     35057: make URL clickable (again)\n\nThis should have been included in 34850 \n  
8350,     35054: readonly -p + POSIXBUILTINS fix \n\nNow displays unset variables marekd readonly\n  
8351,     35052: new BSD completions\n  
8352,     35046: unwind cmdstack when erroring out of lexing a parameter expansion in braces\n  
8353,     c f  35041: typo in zle yo\n  
8354,     35034: improve manual format up to Chapter18\n  
8355,     Update for 5 0 7-dev-2 \n\nIncludes updates to FAQ yo for newer YODL \n  
8356,     35032: Handle SIGCONT for process better \n\nUpdate job status as well as process status \n  
8357,     unposted: fix descriptions in previous -zcalc commit (cosmetic)\n  
8358,     35033: trivial zcalc completion\n  
8359,     35029: improvements to newline handling for vi-mode word movement\n  
8360,     Fix two bugs in typeset_setbase\n  
8361,     NEWS update\n  
8362,     35011: update completions for some common Unix commands \nin particular improving FreeBSD support\n  
8363,     35009: updates for 5 0 8\n  
8364,     35008: clarify description of  exec  and  return \n  
8365,     35007: Note in doc about scope of ZLE parameters\n  
8366,     34992: POSIX fix for readonly variables \n\nWith POSIXBUILTINS  variables can be marked readonly if unset \nAlso  variables can t have the readonly flag removed \n  
8367,     34989: AUTO_CD needs to call cd -- \n\nOtherwise directories looking like options do the wrong thing \n  
8368,      34980: expanding make variables was broken\n  
8369,     34980: in completion match new Makefile assignment forms\n  
8370,     34979: Preserve job text when doing shell job fix \n\nThis handles list_pipe_text in execlist() along with other\nvariables that are saved and restored and  in the special\ncase of source  cleared \n  
8371,     34977: more reliable test if preprocessor is GNU\n  
8372,     34966:  whence -v  for a function reports whether the function is autoloaded or its source file when known\n  
8373,     34965: consistent use of zalloc/zrealloc/zfree\n  
8374,     34961: avoid _message because it aborts completer list too early\n  
8375,     34961: unquote history words when command line has a quote\n  
8376,     34961: properly handle the case of finding no files when searching $fpath and $_compdir\n  
8377,     34961: minor wording clarification\n  
8378,     34961: $TZ is implicitly local in builtin strftime (originally workers/34602 from workers/34596)\n  
8379,     34961: clean up declarations of quote() and quotebreak()\n  
8380,     34961: sysparams[pid  and sysparams[ppid  added to variables index\n  
8381,     34961: replace a couple of free() with zfree() for consistency\n  
8382,     34961: add backslash to alias expansion matching (related to workers/32186)\n  
8383,     34961: test for breadth-first glob with (Y1) qualifier (originally workers/32726)\n  
8384,     34955: save and restore list_pipe_job with its friends\n\nThis is needed to stop source() messing up job control \n  
8385,     34940: _fc: fix typo breaking completion for history\n  
8386,     Revert  34926: _fc: Remove a spurious 2 \n\nThis reverts commit dd623b44032b11509ccc2e6f8c307d2f7bd2d722 \n  
8387,     34926: _fc: Remove a spurious 2\n  
8388,     34921: handle error in recursive par_event() \n\nHere documents in an interrupted list caused bad juju \n  
8389,     34920: info on git pull\n  
8390,     34919: update interrupt parse error for ZLE cases \n\nCovers both send-break and push-input \n  
8391,     34899: completion: _vim: add nvim to #compdef\n\nnvim is used by NeoVim and is fairly compatible \n  
8392,     34905: no parse error after keyboard interrupt \n\nHandled generally  though only showing up in special nested\ncases \n\nAlso fix ZLE so it doesn t cancel the interrupt flag when\nnot actually returning from a local keymap \n  
8393,     34902: Doc: Explain the numeric argument and be consistent about what we call it\n  
8394,     34901: Test for the previous commit\n  
8395,     34900: assignment before an  exec  \n\nWithout POSXIBUILTIN: restore after  so we only get side effects \n\nWith POSXIBUILTIN: keep set variable\n  
8396,     unposted: rewrite Nularg math handling to be like other cases\n  
8397,     34892 (slightly tweaked): math evaluation fix\n\nAn empty expression resulting from substitution includes a\nNularg  which needs handling the same as an empty string \n  
8398,     34887: Fix POSIX_BUILTINS with assignment \n\nIn the form\n  var=val command special-builtin-or-func\nthe var is restored after execution  unlike the case where  command \nis absent \n\nClear up case in code that handles this \n\nAdd tests \n  
8399,     users/20159: completion: zstyle: Add  show-ambiguity \n  
8400,     34886: completion: git: Complete rebase --exec argument\n  
8401,     34885: completion: git: Sort  commit object  completions most recent first\n  
8402,     34885: completion: git: Fix another instance of the 34671 bug fixed in 34814\n  
8403,     34880: POSIX_TRAPS doc\n  
8404,     34875: CSH_JUNKIE_HISTORY doc\n  
8405,     users/20078: HIST_BEEP doc\n  
8406,     34874: completion for cabal\n  
8407,     34748: completion: git: update list of builtintools\n  
8408,     34850: make URLs in html/pdf docs clickable\n  
8409,     34851: fix thinko from 34093 that short-circuited some  whence -m  searches\n  
8410,     34837: avoid loss of original file path when applying colon-modifiers in glob qualifiers\n  
8411,     34840: minor format fixes in prompt yo\n  
8412,     34836: fix description of  %-0<<  in prompt yo\n  
8413,     34814: completion: git: Fix bug introduced by 236da69\n\nBased on a patch by Daniel Hahler <git@thequod de> \n  
8414,     34822: correction to GLOB_SUBST doc\n  
8415,     users/20058: improve device completion in ip completion \n\nWe were too eager to regard strings already on the command line\nas possible devices \n  
8416,     34817: Catch some errors earlier when reading history \n\nMostly for the case of an interrupt \n\nDon t try to process words when we know something s gone wrong \n\nAlso abort history reading earlier on an interrupt \n  
8417,     34792: langinfo: Fix pointer type\n  
8418,     34762: completion: git: add short option for  --dir-diff  (_git-difftool)\n  
8419,     34781: add implicit space after alias expansion of tokens that form words without spacing\n\nfixes crash when using completion immediately following such an alias\n  
8420,     34804: refine POSIX_ALIAS change to preserve old behavior of [[    conditionals\n  
8421,     34788: refine errflag handling in cmd_or_math()\n  
8422,     34785: fix typo in SHINSTDIN doc\n  
8423,     34787: Add more history tests\n  
8424,     34784: fix old bug with history word selection\n  
8425,     34779: tests for 34776\n  
8426,     34769: incorrect doc of process time calculation\n  
8427,     34776: improve suppression of alias expansions from history \n\nNow uses the mechanism in use for other forms of suppression of\nsections of input \n  
8428,     34774: fix %prep and use read from a no-op pipe to force wait for the timeout\n  
8429,     34772: add new test suite file for history; fix  read  usage in comptest\n  
8430,     34759: improve implementation of last commit\n  
8431,     34758: fix yet more history / command subst interaction \n\nIn general we need to wind back over the history text input\ninside command substitution because there s no level of\nthe input mechanism between history and the lexer \n  
8432,     users/20034: adjust PREFIX and SUFFIX for unambiguous_cursor on second completion attempt with GLOB_COMPLETE\n  
8433,     34753: work around NFS problem in tests \n\nUse tmp directory if it helps us check file time comparisons \nIf it doesn t we re no worse off than we were \n  
8434,     34752: another fix for history expansion in cmd subst\n  
8435,     34742: history expansion inside command substitution failed \n\nNeeds the case of alias expansion separating out \n  
8436,     34739: git completion: Fix regression in ce80a92\n\nThis restores the message when completing a commit object name that\nisn t one of the most recent 20 commits   e g    git checkout deadbeef<TAB>  \n  
8437,     unposted:  update NEWS to reference aliasing changes \n\nAlso apologize for copy-paste spooge in the preceding commit log \n  
8438,     34734: further aliasing adjustments and doc\n\nrestrict token aliasing (34641) to global aliases; tighten up POSIX_ALIASES to better match spec; update Aliasing doc to cover this and clarify older behavior\n\n2015-03-18  Peter Stephenson  <p stephenson@samsung com>\n\n\t* 34723: configure ac: turn off fixed site function directory if\n  
8439,     34723: disable fixed site function dir if user disable site function dir\n  
8440,     unposted: update NEWS some more\n  
8441,     34725: update NEWS for site function configuration \n\nIt might be overridden if the installer explicitly sets it up\ndifferently \n  
8442,     34721: new glob qualifier functions before  after\n  
8443,     34671 plus tweaks: Add -1 -2 -J -V -x to _describe  use them to sort  git --fixup  hash completions\n  
8444,     34671: git completion: only offer recent commits  tags/heads for --fixup\n  
8445,     34712: clarify words that may be aliased\n  
8446,     Fix ~ and (Q) order in _zattr\n  
8447,     users/19985: improve doc of subscripting substrings further\n  
8448,     34673: vcs_info git: Fix error message when rebase hasn t started\n  
8449,     34693: sudo completion: Don t false positive  sudo -e  detection\n  
8450,     34693: _strace: Fix variable leakage of $sys_calls\n  
8451,     Fix ChangeLog\n\n( git commit --amend  and  git commit --amend -a  are too similar )\n  
8452,     34638 with tweaks: git completion: complete commit hashes and --fixup\n  
8453,     34643: clarify documentation for print and bindkey\n  
8454,     34653: move aborted vared lines to ZLE_VARED_ABORTED\n  
8455,     34657: document the effect of substring subscripting better\n  
8456,     34654: Improved rpm -q --whatprovides completion\n  
8457,     34651: Avoid core dump if no lexical token\n  
8458,     New completion for add-zsh-hook\n  
8459,     Missing test for alias fix\n  
8460,     34636: replace broken isprint() on Mac OS X\n  
8461,     34641: make it possible to alias tokens\n  
8462,     34640: clarify documentation for _guard function\n  
8463,     34637: New mixerctl completion for BSD\n  
8464,     users/19934: document %D      for WATCHFMT\n  
8465,     34634: avoid infinite recursion on (/)# extendedglob\n  
8466,     34588: Complete  usermod -a \n  
8467,     34623: free history more often if  remetafying \n  
8468,     34615 + 34619: Remeta one frame earlier\n  
8469,     34606: fix up nested arithmetic substitution\n\nArithmetic within a parameter substitution is a special\ncase that needs fixing with the introduction of the new\nInparmath token \n\nAdd test \n  
8470,     34604: Work around problem with changes in Meta characters \n\nIf reading in a file that contains characters that should be\nmetafied but are not  fix up on the fly   Only need when using\nHIST_LEX_WORDS \n  
8471,     34597: Revise strftime description to correctly explain timezone handling and note signed int rollover\n  
8472,     34590: queue_signals() around more scopes that manipulate global state\n  
8473,     34587: ensure multibyte characters don t overflow \n\nThey could start incorporating tokens  with bad karma \n\nAdd test \n  
8474,     34568: use META_HEAPDUP when passing dlerror() string to metafy()\n  
8475,     unposted: Seems it s 2015\n  
8476,     34573: Safer failure to handle command substitution\n  
8477,     34570: Another nasty command / math substituion thing \n\nMark arithmetic substitutions with tokens to make sure the substitution\ngo knows what to do   Before it was guessing by counting the\nparentheses at the end \n  
8478,     Fix up memory allocation for previous patch\n  
8479,     34560: Fix $(( that s actually a multiline cmd subst \n  
8480,     34558: preexec doc fix \n\nIt was wrongly claming the first parameter was empty if the line was\nremoved from the history \n  
8481,     34530: PRINT_EXIT_VALUE with anonymous functions \n\nSimpler fix  avoiding structural changes \n  
8482,     34551: Avoid adding an extra  /  to the target path in cd_try_chdir() when the current directory is  / \n  
8483,     34543: Prevent crash on garbage bytes inside $(   )\n\nGarbage input (nul bytes  etc ) can cause the $(   ) parser to become\nconfused during look-ahead and attempt to back up the input too far \nThis commit catches the error but does not fix the underlying cause \n  
8484,     Fix typo from 28487\n  
8485,     34546: further $_ with anon function fix \n\nAlso add tests \n  
8486,     34519: $_ for arguments of anonymous function\n  
8487,     34476: change _store_cache assignment format\n\nAvoids potentially expensive lexical analysis of the array values \n  
8488,     34514: Back out 34485  an alternate solution needs to be worked out \n\n(Tweaked to keep the unrelated hunk of the E01 test )\n  
8489,     users/19850: add pattern support to watch variable\n  
8490,     34490: Fix leak on print -zf/-sf error\n  
8491,     34488: Fix use-after-free for print -zf and print -sf\n  
8492,     34485: More rationalisation for anonymous functions \n\nDon\ t attempt to treat as  simple  case as there are too many\nhidden problems \n\nPull out some post-execution functions to a common case in\nexeccmd() \n  
8493,     34466: Fix double unmeta in rm verification\n  
8494,     34468: completion: git: stash: handle \ save\  being the default\n\n git stash  should complete arguments for  git stash save   but without\nthe message part \n  
8495,     34467: completion: git: minor doc fixes\n\nI am not sure about the deprecation of user-commands  but from other\nplaces in the doc and commit history this deprecation was meant to be\nreverted?!\n  
8496,     34470: completion: adb: add  sideload  command\n\nbtw: there is another compdef available for `adb` from\nzsh-users/zsh-completion; see\n   com/zsh-users/zsh-completions/issues/291 \n  
8497,     34469: git completion: add  stash  from refs/stash to __git_heads\n  
8498,     34464: Update mtr completion to mtr 0 82\n  
8499,     34456: lopts should be initialized as an array\n\notherwise an empty element remains in lopts  which causes\na trouble when _arguments --  *:  is called \n  
8500,     users/19825: Clear statement about POSIX compatibility\n\nRight of start of manual where we already refer to ksh \n  
8501,     unposted: fix formatting of  --  \n  
8502,     users/19800: more help for $HISTORY_IGNORE\n  
8503,     34451: use mmap() also on Mac OS X\n\nLet MAP_ANONYMOUS be an alias to MAP_ANON if the former is not\ndefined \n  
8504,     34455: Further gdbm parameter fixes \n\nFix memory leak with name of parameter \n\nUnset old parameter before opening db as it might close an existing\ndb \n  
8505,     34447: fix assignment of key-value array to ztie d parameter \n\nAdd gdbmhashsetfn() for this purpose   Erases and reorganizes the database\nbefore bulk assign \n  
8506,     34444: git completion: minor improvements\n\n-  git rebase : complete arguments in the same word as the option\n\n-  git commit : provide message for --fixup/--squash\n  
8507,     34446: add  ztie -r  and  zuntie -u   update documentation\n  
8508,     34411: _hg completion: Complete bookmark names for -r\n\nWhile there  simplify `hg tags` parsing \n  
8509,     34439: unset variable about to be tied\n  
8510,     34435: Update emulate completion \n\nAdd new feature to run command in emulation \n\nFactor out handling of quoted command string to new function \n  
8511,     34430: parameter fixes for gdbm tied hash \n\nProbably fix the issue with correct parameter hiding or not hiding \n\nA little extra safety checking \n\nPossibly fixed a memory leak with untying \n  
8512,     unposted: fix other typeset doc errors\n  
8513,     34421: clean up typeset documentation\n\nAlso remove duplicated ChangeLog entry for 34365 \n  
8514,     34415: cache list of all python modules\n  
8515,     34423: fix a typo in _ruby\n  
8516,     Missing change log entry\n  
8517,     34419: vcs_info documentation: Fix wording\n\nAs suggested by Daniel Shahaf \n  
8518,     34412: complete all groups for chown under sudo\n  
8519,     34403: refine 34399 to avoid settyinfo() when the input descriptor is not a TTY\n  
8520,     34387: Avoid loading the main zsh binary as a module\n  
8521,     34382: Handle NULL return from dlerror() more gracefully\n  
8522,     Unsetting gdbm tied variable basically works \n\nAllows variables in nested scope \n\nHowever  explicitly untying a variable doesn t properly expose\nthe scope above \n  
8523,     34399: fix polltty thinko from 34365\n\nAlso add missing ChangeLog entry for 34365 \n  
8524,     34389: fix parsing of  >!  when read from histfile with HIST_LEX_WORDS\n  
8525,     34365: History lockfile backoff: randomised time \n\nTime doubles on each lock failure \n\nzsleep() provides microsecond resolution for sleep; uses nanosleep() if\navailable  else select via means of existing tty poll function \n  
8526,     34350  34353: document zsh/db/gdbm module  clean up a few things in the code\n\nStill core dumps at this revision if the tied parameter is forced to be a local and is not untied before end of scope \n  
8527,     34369: document error and warning codes\n  
8528,     34383: ztrdup() should be dupstring() in new cd code\n  
8529,     34373  34374: update completion of builtin commands  modifiers \nparameter and globbing flags\n  
8530,     34381: vcs_info: Documentation update\n\nThis adds documentation for more hooks and styles available in\nvcs_info:\n\n  - patch-format\n  - nopatch-format\n  - get-unapplied\n  - pre-addon-quilt\n  - set-patch-format\n  
8531,     unposted: Forgot X-Seq: numbers with Daniel s last few patches\n  
8532,     _zstyle vcs_info completion: Add missing styles\n  
8533,     _zstyle vcs_info: Unbreak branchformat completion\n\nThe failure mode was:\n\n    % zstyle \ :vcs_info:*\  branchformat  foobar%<TAB>\n    _values:compvalues:10: no multi-letter values with empty separator allowed\n  
8534,     vcs_info hg: Support inactive bookmarks\n\n(Similar to git detached heads)\n  
8535,     34335: fix bugs in _yum_all_pkgs\n  
8536,     34331: better handling of NULL in cd \n\nProblem was return from symbolic link expander in weird cases\nwhere there file system isn t behaving itself properly \n  
8537,     34344: fix 34338  pcre builtins need loading too\n  
8538,     34338: check pcre-match feature availability\n\nIt is possible for the module to be linked/loadable but have no features \n  
8539,     PATCH: 34333: vcs_info quilt: fix unapplied detection in subdir\n\nWhen patches are applied  let quilt use  pc without forcing the\npatch directory  this will fix the unapplied detection when being in\nsubdir \nWhen no patches are applied  use zstyle quilt-patch-dir then\nQUILT_PATCHES then  patches  for path to search for patches \n\nNote: prefer setting quilt-patch-dir rather than QUILT_PATCHES for\nabsolute path because when patches are applied  quilt unapplied will\nnot return the correct list (i e  the whole list rather that the one\nspecified by  pc/ quilt_series) \n  
8540,     34327: fix cache identifier used in _cache_invalid\n  
8541,     34329: add -S option to which and where\n  
8542,     users/19756: test for case of closing fd with no error message\n  
8543,     users/19751: remove error on failure to close file descriptor by number \n\nKeep it when closing file descriptor stored in a variable  i e \nexplicitly opened by the user \n  
8544,     34322: bug with interface to parsestr() etc \n\nWas showing up in places like $ (e)     where command substitution\ncould reallocate the token string  but actually there was never any\nguarantee that the lexer wouldn t do that  so this was always\na bit iffy \n  
8545,     Fix X-Seq\n  
8546,     34319: fix alias expansion in history for command substitution\n  
8547,     Changelog entry to previous commit by Wieland Hoffmann\n  
8548,     _git: Change one --validate to --no-validate\n\nAs the description of that argument says  it s used to *not* perform\nsanity checks \n  
8549,     unposted: another dubious comment in hist c fixed\n  
8550,     unposted: improve comment on hist_in_word() \n\nCommit f2a2f28f7 was a bit less clear about how hist_in_word()\nwas used than it could be \n  
8551,     32413: turn off history word marking in cmd subst\n  
8552,     34304: improve use of new cmd subst in completion\n  
8553,     34290: note FORCE_FLOAT option change\n  
8554,     34280: more widespread use of FORCE_FLOAT \n\nAdd the case of variables read for use in arithmetic expressions \n  
8555,     34287: preprocessor for signal name generation \n\nSome gcc header files are difficult for the signames2 awk\nscript to process  so if the preprocessor is gcc give the\noption -P to strip out the unwanted additions \n  
8556,     unposted: fix error in README\n  
8557,     34283: test X02 also needs zpty and shouldn t run on Cygwin\n  
8558,     34275: assume zpty can t be used for testing Cygwin\n  
8559,     34273: use  enough  colons in each completion style pattern example\n  
8560,     unposted: add Src/zsh exe to  gitignore\n  
8561,     34260 relax interface name restrictions in ip completion\n  
8562,     34259: variable declarations in ip completion\n  
8563,     Propagate float/integer type in arithmetic assignment \n\nAdd test \n\nMention this and also floating point mod change in README \n  
8564,     34253: warn in zcalc doc about integer arithmetic \n\nC f  warning in arithmetic doc in 34194 \n  
8565,     34247: regression test for 34230 \n  
8566,     34230: call fmod() for modulo with floats\n  
8567,     34234: use structures for normal and raw lexical buffer state\n  
8568,     34233: function execution trick needed for _qdbus\n  
8569,     unposted (cf  34218): : remove -m from zmodload calls\n  
8570,     test for alias expansion in command substitution\n  
8571,     34220: new $(   ) handling needs to back up over alias expansion\n  
8572,     unposted: update copyright for new Src/context c\n  
8573,     34195: new qdbus completion\n  
8574,     unposted: add missing ml ref\n  
8575,     34914: explanation of effect of integer promotion\n  
8576,     34213: in previous patch  do not change usepm if it is already set\n  
8577,     34212: do not change unset-ness of special parameters when exporting them\n  
8578,     34202: safe tempfile creation part 3 -- use zf_ln instead of mv\n  
8579,     users/19721: clarify context vs  style in compsys configuration\n  
8580,     select: Fix leak of 256 bytes on every loop when zle is not used\n\nReproduce by\nyes | head -n 1000000 | zsh -c  select foo in a b c; do done; sleep 30; echo \n\nFound by Coverity (Issue 439082) \n  
8581,     hist: remove wrong NULL terminator\n\nThis actually writes a NULL to some arbitrary location in the caller function s stack  Found by Coverity (Issue 1255746) \n  
8582,     Rearrange context saving \n\nVariables are now associated with the module that declares them  being\ninitialised and saved/restored there   However  as many variables are\nused for communication between modules  many of them are set in multiple\nplaces  so the assignment is ambiguous \n  
8583,     34182: doc: to add zf_\\* builtins use zmodload -m -F\n  
8584,     30568: Add tetriscurses contrib function  port of tetris to zcurses\n  
8585,     Fix a typo in bin_print error message\n  
8586,     Fix command substitutions to parse contents as they are read in \n\nDo this by refactoring misnamed lexsave()/lexrestore() to allow\ncontinuity of history and input \n\nAdd test \n  
8587,     34154/34155: reorder bin_print() to avoid leaking the output descriptor when incorrect/incompatible options were passed\n  
8588,     34144: allocate origline by ztrdup()  not by dupstring()\n\nIf origline is allocated in heap  it will have been freed\nwhen menuselect() is called directly as a widget \n  
8589,     unposted: Convert spaces to tabs in ChangeLog\n  
8590,     34122: module: allow NULL third argument as intended\n\nFound by Coverity \n  
8591,     34138: wcs_nicechar: only deref widthp if it was given\n  
8592,     34120: compctl  jobs: Check contents instead of array\n\ntext is an array in the struct  and can never be null \n\nFound by Coverity (Issue 1255780) \n  
8593,     34108: Don t leak ifs stuff\n\nFound by Coverity (Issue 1255785) \n  
8594,     34107: getsubsargs: free ptr1 before returning\n\nFound by Coverity (Issue 439073) \n  
8595,     34134: anon funcs: don t leak shf and related data\n\nFound by Coverity (Issue 439076) \n  
8596,     34112: typeset: fix leak of oldval\n\nFound by Coverity (Issue 1255803) \n  
8597,     34106: hist: use zhtricat instead of tricat\n\nFound by Coverity (Issue 1255769) \n  
8598,     34113: whence: use dupstring to not leak memory\n\nAll other assignments to buf use the heap  and it s never freed  Found\nby Coverity (Issue 1255786) \n  
8599,     34119: complist: Fix leak of string in clnicezputs\n\nFound by Coverity (Issue 1255808) \n  
8600,     34105: subst: remove dead code\n\nFound by Coverity (Issue 1255810) \n  
8601,     34121: compresult: Remove unneeded NULL check\n\nThe variable is set to  if NULL at the start of the function  and derefed\non the previous line  Found by Coverity (Issue 1255843) \n  
8602,     34104: compctl: Remove pointless check\n\ncc has already been derefed a bunch of times leading up to here  Found\nby Coverity (Issue 1255841) \n  
8603,     34115: compcore: Fix size argument to zfree\n\nFound by Coverity (Issue 1255852)  has no impact unless using\n--enable-zsh-mem  and even then it is minimal \n  
8604,     34117: zle: size_t is unsigned  use int instead\n\nThe function wctomb returns an int according to my manpage  and we\nfurthermore check if it is negative  and then return it  and the function\nsignature is int  so declaring it as an int seems to make more sense \n  
8605,     34116: computil: Check for NULL before passing to strlen\n\nThe rest of this function appears to be very careful about checking these \nthen forgets in this one spot  Found by Coverity (Issue 1255805) \n  
8606,     34118: Don t crash when writing out history if HOST is unset\n\nFound by Coverity (Issue 1255793) \n  
8607,     34114: emulate: Handle aborting from mixed -L/-c correctly\n\nSomehow Coverity found this (Issue 1255797  Failure to restore non-local value) \n  
8608,     34103: fix ancient double-quote handling thinko in subst_parse_str()\n\nThis doesn t seem to have mattered  but must in some obscure cases\n  
8609,     34093:  whence  should always return nonzero when it finds that nothing matches its arguments\n  
8610,     34042: _git: Respect tags for subcommand completion \n\nIt is now possible to use the tag-order style to stagger the overwhelming\n git <TAB>  subcommand listing   For example:\n\n    zstyle  :completion::complete:git:argument-1:  tag-order \\\n        main-porcelain-commands user-commands third-party-commands \\\n        ancillary-manipulator-commands ancillary-interrogator-commands \\\n        plumbing-manipulator-commands plumbing-interrogator-commands \\\n        aliases\n  
8611,     34053: complete additional Linux kernel module compression\n  
8612,     34092: fix miscount of symlink resolution for      \n\nThis caused problems with expanding a path with      in  whence -S  \n  
8613,     34091: typo with  whence -s  expansions\n  
8614,     users/19682: document recommended use of whence\n  
8615,     users/19671: remove confusion with whence -a \n\nIf the argument is a full path don t try to search the path for it \n  
8616,     users/19667: whence -S shows intermediate steps in symlink expansion\n  
8617,     34077: further tests for return status from  for  loops\n  
8618,     33963: remove work of art in _mount\n  
8619,     34070: fix starting position for memset() from 34005 \n  
8620,     34068: create tempfiles without forking  and safe temp directory creation\n  
8621,     34067: safe tempfile creation  part 1\n  
8622,     34064: assignment before command replaces array with export even when KSH_ARRAYS\n  
8623,     34065: following an  if  condition  do not test lastval for ERR_EXIT until a new command is run\n\nIncludes unposted regression tests \n  
8624,     33977: don t complete widgets as first argument to bindkey\n  
8625,     34015: disallow strange environment variable names \n\nThese are ones with the top bit set in any character \nDon t import them  and don t export them \n  
8626,     34005: region_highlights memory fix\n\nZero uninitialised part of memory when reallocing\n  
8627,     34002: zshcalloc() in init_keymaps()\n  
8628,     33992: do not attempt attachtty() for process group zero (which is possible in a linux pid namespace)\n  
8629,     34008: metafy the environment on arrival in the shell\n  
8630,     34006: unmetafy anything put into the environment\n  
8631,     33999: remove docker completion \n\nVersions supplied with docker is authoritative  so version in zsh\nis just a potential hazard to the unwary \n  
8632,     33981: more care with region_highlights management\n  
8633,     33978: avoid infinite loop in interactive mode\n\nUpdate command line when accept-and-hold is called in the\ninteractive mode of menu select \n  
8634,     zsh-users/19551: history documentation \n\nNote in a couple of places that history file reading and writing\nis only done in interactive shells \n  
8635,     33984: bin_dirs() should use zputs() to print metafied directory names\n  
8636,     33982: minimal support for pid namespaces by recognizing that GETPGRP() may return 0\n  
8637,     33976: fix overlapping strcpy()\n  
8638,     users/19530: Handle commented lines in /etc/filesystems\n  
8639,     unposted: Add missing -f arg to zsh in D04parameter ztst\n  
8640,     33958: update sudo completion for newer options\n  
8641,     33956: document key binding changes and remove ^X binding\n  
8642,     33846: additional default vi-mode key bindings\n  
8643,     33950: ignore KEYTIMEOUT for vi operators\n  
8644,     33876: etc : Separate errors and keyboards interrupts\n\nCombination of 12 commits from interrupt_abort branch \n\nBasic strategy is to introduce bits to errflag and to set and\nreset them separately \n\nRemove interrupt status on return to main keymap \n\nTurn off ERRFLAG_INT for always block \n\nRestore bit thereafter: we probably need a new variable in order\nto allow user interrupts to be reset in the always block \n\nAdd TRY_BLOCK_INTERRUPT\n\nThis works the same as TRY_BLOCK_ERROR  but for a SIGINT  too \n\nEnsure propagation of SIGINT from exited job \n\nIf received by foreground job  shell uses ERRFLAG_INT  not\nERRFLAG_ERROR  to set the new state \n\nReset errflag before precmd()\n\nAdd always block in _main_completion to fix ZLS_COLORS\n\nEnsures we get the right state of $ZLS_COLORS at the end of _main_complete\neven if there\ s an interrupt   However  the  right state  is a bit messy\nas it depends on styles \n  
8645,     Parse  Gentoo  as being GNU libc\n  
8646,     33940: handle backslash-meta correctly in lexer\n  
8647,     33932: revise boundary check in unmeta()\n  
8648,     33924: allow vi line/characterwise mode to be forced\n  
8649,     33927: nm completion improvements\n\nComplete  elf files \n\nAllow directory searches \n  
8650,     33843: minor optimisation for recursive-files \n\nExpand the recursive path only the first time we need it \n  
8651,     33912: fix filename default case\n\nversion-of-od argument list manipulation clobbered the default spec\n  
8652,     33901: fix warning message reference to funcstack (updates 33859)\n  
8653,     33894: boundary conditions in unmeta()  unmetafy()\n\nCheck that we aren t running off the end of the string when converting the\nnext byte after a Meta byte   This is just defensive programming in case\nof bad metafied strings coming through from gettokstr()  some repairs\nthere are likely still needed \n  
8654,     33854: errors end recursion through scanner()\n\nMakes **/ more easily interruptible\n  
8655,     33883: documentation for (*) glob qualifier\n  
8656,     33829: unbind ESC~ as a more reliable workaround\n  
8657,     33882: Complete CXXFLAGS as CFLAGS too\n  
8658,     33861: update lsof completion for new options\n  
8659,     33860: minor fixes to vi mode changes\n  
8660,     33845: save correct cursor position with push-line from vi command mode\n  
8661,     33866: addendum to completion trap fix\n\nWe need the multifuncdef option on for the trap function definitions to\nwork   It is by default by this wasn t enforced for the completion\nfunctions \n  
8662,     33859: Fix traps in completion\n\nWe need to use a function-style trap in order for the effect of the\ninterrupt to propagate back correctly \n  
8663,     33841: explain array append a bit better\n  
8664,     Unposted: minor change:  scalar or integer  to  scalar  to include floats \n  
8665,     33689: make cp --reflink s argument optional\n  
8666,     33830: META-FAQ updates \n\nDon t mention CVS \n\nUse correct sourceforge URL \n  
8667,     33823: overwrite mode shouldn t replace newlines\n  
8668,     33820: detect support for realpath() with a NULL\nargument and fixes to the use of it\n  
8669,     33800: remove old workaround for ancient systems to\nconsume typeahead before setting up the terminal\n  
8670,     33818: fix types passed to sizeof detected by coverity as being wrong\n  
8671,     33816  33819: GLOB_ASSIGN changes integer and floating type variables to string scalars\n  
8672,     unposted: fix compiler set-but-not-used warning \n  
8673,     33139: add doc example to glob broken symbolic links \n  
8674,     33815: Fix word transposition bug \n\nWith a one-character word the wrong two words could be transposed \n  
8675,     33805: rewrite zshparams intro  tweak formatting\n\nI noticed that there was no explanation of the terms  variable  or\n environment  anywhere \n  
8676,     33804: hide values of large arrays in typeset output\n\nDeclare arrays used internally by completion with the -H attribute \n  
8677,     unposted: test binary input using 0b\n  
8678,     33793: add 0b binary interpretation to integer constants\n  
8679,     33769: workaround for KEYTIMEOUT to work from test\ncases on Darwin and FreeBSD\n  
8680,     33770: avoid calling identical FIONREAD ioctl twice in succession\n  
8681,     users/19365: completer for current directory of other shell processes\n  
8682,     33791: fatal errors in an  always  construct yield nonzero status\n\nFatal errors in the try-block part of an  always  construct cause the\nentire construct to have nonzero status  even when TRY_BLOCK_ERROR is\nused to suppress the error \n  
8683,     33746: read -q doc refers to -t\n  
8684,     33785: Fix leaks of desthost in ztcp\n\nFound by coverity \n  
8685,     33775: error opening file in $(<   ) is not fatal\n  
8686,     33743: use posix_openpt in zpty if it is available\n  
8687,     33729:  git remote add  should complete local repositories\n  
8688,     33740: doc for output of hideval parameter flag\n  
8689,     33740: FAQ: another way of avoiding MULTIOs effects on pipes\n  
8690,     33763 (cf  Baptiste Daroussin 33747): fix nested item list in generated zshmodules 1\n  
8691,     33750: handle function autoloads for DEBUG_BEFORE_CMD\n\ngettext2() lacked a case for the WC_AUTOFN word code  tripping a dputs()\non TRAPDEBUG the first time each autoloaded function was run \n  
8692,     add menu reference to Text Objects\n  
8693,     33712: add --auto-remove option\n  
8694,     33738: account for a selection in vi-replace-chars\n  
8695,     33730: vim style text objects for selecting words\n  
8696,     33728: Complete bzr shelve subcommand  
8697,     unposted but c f  33723: typo in FAQ\n\nsed argument had unterminated substitution \n  
8698,     users/19404: Login shells may not be interactive\n\nUpdate the FAQ to point this out after years of neglect   
8699,     33679: Note on patter s in case statements\n\nThey work exactly like groups in other patterns  despite contrary\nindications   
8700,     unposted: reindent large block\n  
8701,     33704: keybindings  documentation  tests and minor\nfixes for vim style visual selection changes\n  
8702,     33636: add support for a linewise visual selection mode\n  
8703,     33635: adapt region to function as vim style visual selection mode\n  
8704,     33700: new widget for put in vim style visual selection mode\n  
8705,     33699: support short delays in zle tests where we\nneed KEYTIMEOUT to elapse\n  
8706,     33633: support vim style text objects\n  
8707,     33632: use viopp and visual local keymaps if they exist\n  
8708,     33697: new vim style vi-backward-word-end widgets\n  
8709,     33696: simple up/down line widgets that don t go through history lines\n  
8710,     33695: fix various vi-indent problems and vi-swap-case on a blank line\n  
8711,     19371 plus tweak: run-help helper for ip\n  
8712,     Marc Finet: problems with working directory rationalisation \n\nEnsure the length of the directory is kept up to date \n\nAbort following symlinks as soon as there s an error \n  
8713,     33686: set PS1 before pattern-matching for it\n\nIf run as a privleged user  the default PS1 does not contain  %   so\ndon\ t use the default PS1 when expecting to match  %  in the output \n  
8714,     33656: different algorithm for  whence -am  to produce results more consistent with  whence -m \n\nThis uses the scanmatchtable routine to collect the names that match the\ninput pattern  then uses the original -a path search loop to generate\nthe output  to avoid duplicating test conditions and output formats \n  
8715,     33669: allow an empty line to be yanked with yy\n\nThis  by allocating 1 byte instead of 0 for the empty buffer \n  
8716,     AUTO_CD behaviour depends on SHIN_STDIN  document\n  
8717,     33599: workaround zpty issue that causes vi test\ncases to fail on MacOS and FreeBSD\n  
8718,     33640: look in /boot/modules instead of /modules for third-party modules\n  
8719,     33643: elaborate documentation of the PRIVILEGED option\n  
8720,     33639: fix bug with vi operators on a blank line\nand with backward bracket matching\n  
8721,     33659: use --dump-options to get most of the gpg options to complete\n  
8722,     33655: remove overlap of node flags\n  
8723,     Handle -a option to whence in combination with -m \n  
8724,     33648: _gpg completes for gpg2 as well\n  
8725,     33624: keep region active when widget fails\n  
8726,     33607: Fix some minor problems in zattr module\n\nRemove the listattr call in zgetattr  it only caused no error to be output\nwhen trying to retrieve an xattr from a file with no xattrs  When a file\nhad xattrs  it would just add an extra syscall for no good reason \n\nAlways set an array parameter in zlistattr  this makes the returned value\nmuch easier to use; in fact the _zattr completer didn t account for this\nand zlistattr foo <tab> on a file with only one attribute did not work \n\nAlmost all of the patch is only reindent  the only modification that s\nnot a pure deletions is:\n -        ret = 1 + (attr_len > val_len || attr_len < 0);\n +        ret = 1 + ((val_len > 0 && attr_len > val_len) || attr_len < 0);\nwhich makes sure we return the correct error in the new path due to the\nremoved listattr call  (If val_len is -1 due to no attribute existing \nit doesn t mean the user should retry the call because the attribute\ngrew in size) \n  
8727,     33614 (based on RedHat BZ-978613): signal safety when updating global state in execshfunc()\n  
8728,     33604: fix change merging for vi mode where a change has just been undone\n  
8729,     33596: make local keymap keybinding hide global keymap\nbinding that is a prefix of the local binding\n  
8730,     33593: support numeric argument to vi-join\n  
8731,     33575: reset vi change start position if text is inserted\nbefore it or on history movement\n  
8732,     Treat exec from subshell as if forked\n\nThis removes weird behaviour when optimising the last command \nIn particular SHLVL is correct from a subshell executed as the last\ncommand   
8733,     unposted: quash compiler warning\n  
8734,     correct cursor position in test\n  
8735,     unposted: Add / project to  gitignore for use by GitEye  
8736,     33582: don t include tcp mdh in zftp c \n\nIt s a private module definition header that doesn t need\nto be exposed \n  
8737,     Take more care with errors from setuid() \n\nThis is to ensure the user is aware of errors unsetting the\nPRIVELEGED option \n  
8738,     33570  33576: make killring/yank-pop work in vi mode after\nvi-put-before and vi-put-after\n  
8739,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
8740,     33566: quash null pointer constant compiler warning\n  
8741,     33563: Completion/Base/Core/_main_complete  Src/Zle/complist c: fix thinko in status message for INT/QUIT signals; check errflag in output loops\n\nTwo semi-related patches for keyboard interrupt handling in completion \nmost importantly so that unexpectedly long completion listings can be\ninterrupted \n  
8742,     33528: take notice of last column position when using vi-yank\nand an upward cursor movement\n  
8743,     33562: Fix thinko in previous commit\n  
8744,     33561: The time builtin forgot to unmetafy TIMEFMT\n  
8745,     33564: care with monitor option in test\n  
8746,     33542: test logic for waiting for already exited processes\n  
8747,     33531 with additions: retain status of exited background jobs \n\nAdd linked list of unwaited-for background jobs \nTruncate at value of _SC_CHILD_MAX discarding oldest \nRemove old lastpid_status mechanism for latest exited process only \nSlightly tighten safety of permanently allocated linked lists so\nthat this doesn t compromise signal handling \n  
8748,     33526: fix completion path prefix handling when NO_CASE_GLOB is in effect\n  
8749,     33480  slightly tweaked: fix for $  completion \nImproves case where completing after the $  but before any\nclosing quote  or if the closing quote is absent \nNo other change --- we still don t attempt to exand the quotes if\nwe re inside them \n  
8750,     33485: fix a missing ;; case terminator\n  
8751,     33520: correct cursor positioning following a vi mode yank operation\n  
8752,     unposted: specify 8 char indent for ChangeLog in  editorconfig\n  
8753,     33519: last character in the buffer can be cut  changed or yanked using vi-forward-char\n  
8754,     33518: add support for  _ vi buffer and arguments to vi-set-buffer from a zle widget\n  
8755,     33514: even  with a named vi buffer  we should update the default buffer\n  
8756,     33513: vi mode deletions should replace cut buffer not append to it\n  
8757,     33512: add support for  0 vi buffer and yank to it\n  
8758,     33515: suppress parser error messages in comp_match()\n  
8759,     33493: use correct command name in error messages about  ulimit  failure; restore internal copy of limits if setrlimit() fails  so the error won\ t repeat\n  
8760,     33486: new completion function\n  
8761,     33485: fixes for zstyle context handling\n  
8762,     33481: resolve completion clashes and tidy-up SUSE/Mandriva related functions\n  
8763,     see 33475: allow  cpp files to be completed as gcc input\n  
8764,     33455: update GNU global option completion\n  
8765,     33467: correct return status on functions and numerous other minor fixes\n  
8766,     33459: test for variable substitution in variable splitting\n  
8767,     33438: use the new way of splitting strings with a dynamic separator\nfrom 33423 and quote separators where needed\n  
8768,     33445: fix handling of -s when combined with -i at shell invocation\n\nFixes a long-standing (25+ years) bug where using -i -s together did have\nthe documented effect of disabling command line script files but also had\nthe side-effect of invoking ZLE  thereby ignoring the redirected input \n  
8769,     33423: expand $ (p)     to allow $ (ps $param )    \n  
8770,     Tests for workers/33429\n  
8771,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
8772,     33429: disallow non-integer values for HISTSIZE and SAVEHIST of  fc -p   and fix crash on zero values for same\n  
8773,     33424: use common function for completing Debian architectures\n  
8774,     33420: complete -R/-m options and fix feature completion\n  
8775,     33375: new sv completion\n  
8776,     33396: new xxd completion\n  
8777,     33397: new xautolock completion\n  
8778,     33403: be conservative about redirecting _call_program stderr  the caller may have already done so\n  
8779,     33405: vcs_info: Make sure maxexports is set when VCS_INFO_set is called\n\nReported-by: From: Marco Hinz <mh codebro@gmail com>\n  
8780,     33391: vcs_info git: fix applied patch detection on git am\n\ngit-am also uses  git/rebase-apply for patch list but\nthe file original-commit does not exist (as no commit exist) \nThis patch handles both git rebase and git am  Also:\n - get the first line (rather than the first char) when the message\n   contains only one line;\n - remove unused function (ironically that should have been used here) \n  
8781,     Update version number to 5 0 7-dev-0 to avoid installation clashes with 5 0 7\n  
8782,     unposted: ChangeLog entry for 33365\n  
8783,     unposted: 5 0 7\n  
8784,     33365: avoid buffer overflow for very long fds in >& fd syntax\n  
8785,     unposted (discussed offline): update README for integer import vulnerability\n  
8786,     33354: when backgrounding a pipeline  close all pipe descriptors in the parent\n\nAdd test for both this and 33345+33346\n  
8787,     33346: another bit of the 33345 repair\n  
8788,     33345: fix anonymous function complex command handling \nLongstanding problem caused simple anonymous function incorrectly to\nreset the overall  complext  state  causing wordcode to be diverted\ninto execsimple()  which caused a crash \ cos ist wasn\ t simple \n  
8789,     unposted: comments in previous commit were reversed\n  
8790,     33343: Variant anonymous function synax with arguments \nDon t expand arguments as if in command position  Test \n  
8791,     Fix some typos in the documentation\n  
8792,     Make 5 0 6-dev-1\n  
8793,     33323: fix bug in removing math functions and complete -M option to functions\n  
8794,     remove  major  from README\n  
8795,     Update source distribution information for 5 0 7 \n  
8796,     33332: test safer numeric import from environment\n  
8797,     33320 (cf  PWS 33311): revert 33069  fix lexing of bangchar during completion\n\nadd typtab_flags bits (replaces specialcomma boolean) to record any unusual handling of typtab entries; signal safety; make bangchar non-special during completion lexing of the command line \n  
8798,     tiny typo\n  
8799,     33325: fix ksh autoloads with redirections on function definitions\n  
8800,     33315: fix pattern to match freebsd10 and later\n  
8801,     33319: fix parens in example from 33312\n  
8802,     33284: Completion/Unix/Command/_*magick: Add JPEG 2000 file extensions\n  
8803,     33312: document redirections applied to function definitions\n  
8804,     33298: make lexrestore() more signal-safe\n  
8805,     33294: $functions[func_with_redir  plus extra tests\n  
8806,     Fix some compiler warnings in Zle\n  
8807,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
8808,     33286: handle redirections for multiply named functions\n  
8809,     33285: apply function definition redirections at execution\n  
8810,     33277: Fix VCS_INFO_reposub s command expansion\n\nReported-by: Marco Hinz <mh codebro@gmail com>\n  
8811,     users/19183: improve unlikely error case with fdopen in history code\n  
8812,     33276: safer import of numerical variables from environment\n  
8813,     33268: interactive shells treat SIGPIPE like SIGHUP if and only if SHTTY is disconnected\n  
8814,     33256: fix prompttrunc() counting of %  %  spans\n  
8815,     33242: tokens following if  for  repeat  while aren t in command position\n  
8816,     33252: complete more notmuch subcommands\n  
8817,     33212: improve log entry\n  
8818,     users/19143: fix depth glob search with trailing slashes\n  
8819,     unposted: tweak last change to NEWS a bit\n  
8820,     33238: correct return values\n  
8821,     33224: complete directory as second btrfs argument\n  
8822,     33223: discard stderr except when _complete_debug is in progress \n  
8823,     33180: _git: add missing --3way option\n  
8824,     33177: _git: fix typo in git-apply\n  
8825,     33178: _git: updates for Git 2 1 0\n\nThis incorporates changes mentioned in the release notes since 2 0 0 \n  
8826,     33176: _git: Add missing --list to git-tag\n  
8827,     33179: _git: updates for Git 2 0 0\n\nThis incorporates changes mentioned in the release notes since 1 9 0 \n  
8828,     unposted: more NEWS tweaks while I m there \n  
8829,     unposted: mention numeric output with underscore separators\n  
8830,     unposted: mention /usr/local/share/zsh/site-functions default in NEWS\n  
8831,     33221 (including 33173 from Anthony Heading): _perforce tweak \nComplete directories when handling unmaintained files for add \nRationalise code and comments around this \n  
8832,     unposted: add dvipdf to _dvi command list\n  
8833,     33218: complete m4a files for mplayer\n  
8834,     33198: new augeas completion\n  
8835,     users/19113: reorganised cryptsetup completion function\n  
8836,     33217: vcs_info: use `--ignore-submodules=dirty` with diff/diff-index\n\nThis will detect changes to submodules from the superproject\ s\nperspective  e g  after `git rm submodule` \n\n>From GIT-DIFF-INDEX(1)/GIT-DIFF(1):\n\n    Using  dirty  ignores all changes to the work tree of submodules \n    only changes to the commits stored in the superproject are shown\n    (this was the behavior until 1 7 0) \n  
8837,     33208: improve report on paths at end of configuration\n  
8838,     33214 (modified further): test prefixes for site fpath better\n  
8839,     33213: try to get fixed fpath dir right this time\n  
8840,     33212: try to put /usr/local/share/zsh/site-functions in default fpath\n  
8841,     33209: allow dummy zsh texi if yodl not available \nRemoves catastrophic make failure so rest of make can finish \n  
8842,     33206: fix compdescribe doc\n  
8843,     33205: keep array of completions and array of display strings in sync when filtering for matches\n  
8844,     users/19097: remove $functypetrace in favour of ref to $zsheval_context\n  
8845,     33184: vcs_info git: consider patches for rebase\n\nSince a rebase contains a list of patches to re-apply  re-use the\nfacility for stgit to have the same mechanism \nThe patch list given to the gen- un  applied-string hooks is an array\nwith the sha1 and the subject of the commit  On rebase merge  the\napplied patches prior to current contains only a number and  ?  \n  
8846,     33188: vcs_info git: set rrn before using it\n\nThis would fix handling get-revision  check-for-changes or\ncheck-for-staged-changes when set per repository \n  
8847,     33137: _path_files: complete # to introduce a glob flag\n  
8848,     33136: P glob qual appends words when negated\n  
8849,     33150: completion git: fix send-email --confirm values\n  
8850,     33145: vcs_info git: fix applied-string name\n\nDocumentation and hg backend use applied-string  patch-string does not\nappear anywhere \n  
8851,     33148: vcs_info quilt: refactor standalone detection\n\nSince VCS_INFO_bydir_detect always uses the\nvcs_comm[detect_need_file   it should be cleared when querying\nit without file \n  
8852,     33147: vcs_info git: detect revert or cherry-pick with multiple commits\n\nWhen revert or cherry-pick involve many commits the  git/sequencer\ndirectory holds context for the action and no CHERRY_PICK_HEAD exist \n  
8853,     33151: completion git: support aliases when \\n exist\n\nThe git completion for aliases (i e  completing with aliased verb)\nwas broken whem some \\n exist in aliases \n  
8854,     33149: vcs_info examples: fix typo\n  
8855,     33143: POSIX_ARGZERO more closely matches bash et al \n  
8856,     Add $functypestack special parameter in zsh/parameter\n  
8857,     33132: use ip on Linux to get interface names\n  
8858,     users/19059 based on users/19058: remove ineffiency with multiple * matches\n  
8859,     33122: typo from 32891 caused incorrect matches for pcre_match -n\n  
8860,     clarify $ (~j | )array  example\n  
8861,     33118: record original param unset state when treating empty the same as unset \nto avoid incorrect NO_UNSET errors\n  
8862,     33116: followup to 32580 to prevent double-locking with shared or incremental history\n  
8863,     33061: More useful setopt / unsetopt completion\n  
8864,     33110: document use of $IFS[0  for variable padding\n  
8865,     33108: stgit --patch completion\n  
8866,     33091: improve documentation for ttyctl\n  
8867,     33100: check $fd more rigorously in  exec  fd <&- \n  
8868,     33088: indentation in $PS4\n  
8869,     33081: suppress unnecessary error message\n  
8870,     Further tweaking of the descriptor leak regression test that sometimes hangs\n  
8871,     33077: SHTTY = -1 when closing it in closem()\n  
8872,     33070: add %(e  ) based on %e\n  
8873,     33069: remove internal quoting before lookup when expanding aliases in an unquoted word\n  
8874,     33057: %e in prompts shows evaluation / execution depth\n  
8875,     Update notes on use of  distfiles\n  
8876,     unposted: update version to 5 0 6-dev-0 for new commits post release\n  
8877,     Release 5 0 6\n  
8878,     unposted: 5 0 5-dev-3\n  
8879,     un-transpose help text for git merge - -no  -verify\n  
8880,     33047: use git to simplify massively source distribution file selection\n  
8881,     Fix merge\n  
8882,     unposted:  gitignore generated FAQ* html files\n  
8883,     33046: new completion for  chsh \n  
8884,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
8885,     33042: $? and $pipestatus report 128+signal number for stopped jobs\n  
8886,     33038: Fix  ^@  a  hanging\n  
8887,     Update  distfiles for _docker\n  
8888,     33032: new completion for docker\n  
8889,     Increase size of xbuf2 in xsymlinks to make gcc FORTIFY_SOURCE=2 happy \n  
8890,     timeout the final  read  in hung shell regression\n  
8891,     33012: add an error return value (-1) to xsymlinks()\n  
8892,     32998: completion function updates\n  
8893,     32997: new utility function for separated lists\n  
8894,     33002: tcp_expect -P pm tags matches with a string\n  
8895,     32925: complete process groups  partly as a way to suppress insertion of ambiguous PID prefix\n  
8896,     32893: move use of _call_program inside the _tags loop to allow processes to be separated\n  
8897,     unposted: 5 0 5-dev-2\n  
8898,     unposted: Indent entries in NEWS for changes since 5 0 0 for consistency\n  
8899,     32985: Add NEWS entry for array zipping operators \n  
8900,     32975  32984: texi2html conf location inconsistent in makefile\n  
8901,     Missed ChangeLog commit for OpenSUSE rename \n  
8902,     A couple of minor typo fixes \n  
8903,     unposted: updates for 5 0 5-dev-1 and subsequent 5 0 6 release\n  
8904,     unposted: Fix typo in Doc/Zsh/expn yo\n  
8905,     mention 32971 in NEWS  clarify RPROMPT behavior in docs\n  
8906,     32971: negative argument with %(l  ) and with %<< or %>> calculates space available before right margin\n  
8907,     Rename _SuSEconfig to _SUSEconfig\n  
8908,     32958: bitwise logic fix\n  
8909,     32954: Missed the doc change \n  
8910,     32954 plus new test: [[     =    (#q   )    shouldn t force a glob \nThe (#q   ) expression should simply be removed to leave a normal pattern\nas before\n  
8911,     unposted: remove unused variables\n  
8912,     unposted: Fix formatting error in ChangeLog\n  
8913,     32949 (wip 32928  32937): Add :^ syntax for zipping two arrays\n  
8914,     32944: read -qs is handled correctly by current code\n  
8915,     user/19006: document position of RC_EXPAND_PARAM in parameter subst\n  
8916,     32932: add hmkarray() and use to fix leak\n  
8917,     32931: with NO_NOMATCH  a subscript glob qualifier on a not-matching pattern returns the original pattern\n  
8918,     missed updates to calls to ztrftime()\n  
8919,     %P at start of TCP function system prompt causes %-style prompt subst\n  
8920,     32918: add %  to ztrftime for use in prompts\n  
8921,     32593: update --vga option in _qemu\n  
8922,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
8923,     unposted: Fix copy and paste error in the current changelog entry s date\n  
8924,     32911: Expand bpython completion to bpython2 and bpython3\n  
8925,     32816: Add completion for bpython and variants\n  
8926,     32817: Add completion for moosic\n  
8927,     32910: quiet update of timestamp files\n  
8928,     32853: redefine VARARR() to use heap rather than stack allocation\n\nenable old behavior via  configure --with-stack-allocation \n  
8929,     unposted (see 32892):  fc -I  is an error\n  
8930,     32903: new empty (unset) elements in the special parameter hash tables are special themselves\n  
8931,     unposted: replace-argument can take negative prefix to count from end\n  
8932,     users/18981: improved tmux function completion\n  
8933,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
8934,     Resolve conflict with origin/master\n  
8935,     Resolve conflict with origin/master\n  
8936,     32898 (credit Jun T ): fix offset_start initialization bug in 32891\n  
8937,     32895: Match more shared library names \n  
8938,     force retention of whitespace in  fc  item prototype\n  
8939,     32891: CASE_MATCH for =~ when using pcre; fix pcre_match with empty string\n  
8940,     32882 (cf  Augie Fackler 32879): correct reload of backslash-continuation lines from history  fix bad history write of events ending with backslashes\n  
8941,     32863: missed ChangeLog entry\n  
8942,     32849: new completion for Linux ss (netstat alternative)\n  
8943,     32848: fix words array before using _normal for script arguments\n  
8944,     32866: new replace-argument ZLE function \nAlso a couple of read-from-minibuffer fixes: don t pass numeric\nargument to recursive edit  and hide the minibuffer edit from\nthe undo history \n  
8945,     32863: completion for mpc insert command\n  
8946,     32837: improved installation location support for help directories\n  
8947,     Attempt to improve doc for assignment\n  
8948,     32814: Add some more recent dpkg options\n\nExpands dpkg completion by adding the --add-architecture \n--remove-architecture  and --print-foreign-architectures options \n\nInitially submitted to Debian at\n   debian org/cgi-bin/bugreport cgi?bug=681518#13\n  
8949,     32815: aptitude completion missing resolver options\n\nExpand aptitude completion by two boolean options\n\nInitially submitted to Debian at    debian org/702760\n  
8950,     32818: gzip completion: --rsyncable option is missing\n\nDebian\ s gzip version has a --rsyncable option (see  gzip --help \noutput  the man page not being currently up to date)  It should be\nsupported by  /usr/share/zsh/functions/Completion/Unix/_gzip  \n\nInitially submitted to Debian at    debian org/702000\n  
8951,     32819: Update for axi-cache completion\n\nAdd some subcommands and to disable file name completion\nfor the subcommands info and help \n\nInitially submitted to Debian at    debian org/729921\n  
8952,     32821: Update _gcc as of GCC 4 8 3 for generic options and x86\n  
8953,     32833: complete Python and Ruby arguments as for Perl\n  
8954,     32823: complete file instead of Perl script after -\n  
8955,     32812: put contents at start of manual\n  
8956,     32799: resource NTHR not well handled on NetBSD\n  
8957,     32789: --enable-zsh-valgrind allows analysis of heap allocation\n  
8958,     32781: source behaves like   w r t  path search\n  
8959,     32779: fix a typo in options yo\n  
8960,     32768 with further modifications: LOCAL_LOOPS option \n  
8961,     32666: shell emulation doc addition\n  
8962,     32767: another spot to tweak bracechardots()\n  
8963,     32766: bracechardots() agrees with xpandbraces() about what constitutes a  C1  C2  pattern  thus preventing crash\n  
8964,     32765: fix build when not MULTIBYTE_SUPPORT\n  
8965,     fix my own merge conflict with grammar changes\n  
8966,     32755: move incorrectly placed line in grammar yo\n  
8967,     32737  32736 (32741)  32735  32734  32733  32732 (32739): Strict compilation\nfixes\n\n\tSrc/utils c: properly ifdef declarations\n\tSrc/zsh_system h: memmove() should return its dest argument\n\tSrc/signals c: define ret before use\n\tSrc/mem c: remove unused pointers\n\tSrc/prototypes h: use size_t in bcopy()\n\tSrc/compat c: fix const declaration inconsistency\n  
8968,     32719: minor doc issues\n  
8969,     32715: doc formatting fixes\n  
8970,     32682 with tweaks: Add INC_APPEND_HISTORY_TIME \nRevert INC_APPEND_HISTORY behaviour \n  
8971,     19939: hg committable files\n  
8972,     32723: add braces around some if/else branches\n  
8973,     32716: properly test iconv return values for error conditions\n  
8974,     32711: run  continue  test in a new shell\n  
8975,     32708: glob qualifier (Y) implies (oN)\n\nplus incidental patch to avoid adding a meaningless bitvalue to sort-order flags\n  
8976,     32694: the number of matches to find is the suffix argument of (Y) qualifier\n  
8977,     32681: formatting issue in zle doc\n  
8978,     unposted: restore cond_match() in case used in add-on module\n  
8979,     Numbers transcribed in last commit message:  article ID should be 32656 \n  
8980,     36526: when __APPLE__ is defined at compile  normalize Unicode filenames in zreaddir()\n  
8981,     Fix merge conflict\n  
8982,     users/18870: fix glob scanner insert counting check \nWas causing problems with globs in paths with (Y) glob qualifier\n  
8983,     32662: vcs_info git: Fix stagedstr for empty repos\n\nIn empty repositories  HEAD is an unresolvable symbolic ref   Start computing\nstagedstr/unstagedstr in that case; for the former  use a different method\nthan the non-empty-repository case \n  
8984,     32653: complete files with the   phar  extension as well as   php \n\nAlso respect the suffixes zstyle to change the extensions\n  
8985,     32634: add POSIX_ARGZERO option\n  
8986,     users/18857: add (Y) glob qualifier to generate only one match per pattern\n  
8987,     32640: (#q) in [[        forces globbing\n  
8988,     32624: use correct scaling factor (clock ticks) for times\n  
8989,     users/18860: man -M overrides manpath\n  
8990,     unposted: use DIGBUFSIZE for pipestatus numeric buffer\n  
8991,     32620: Typo fix after commit eb4c70d\n  
8992,     32621: vcs_info svn:  Fix set-branch-format  when in subdirs\n\nThe previous code would fail to detect the wcroot with Subversion 1 7+\nwhen cwd is at least two levels below the root (i e     /  / svn exists\nand   / svn doesn t)  and would then pass to the hook the revision and\nbasename of cwd rather than of the wcroot \n  
8993,     32619: vcs_info svn: Use the revision of cwd\n\nPreviously  the value of the wc root would be used   In Subversion \nit makes more sense to use the revision of cwd  since all commands\n(e g    svn ci    svnversion ) operate only on cwd and below  not on\nwcroot and below \n  
8994,     32616: bad printf arguments for limits\n  
8995,     users/18827 plus tweaks to original comments: hg bookmarks extraction improvement\n  
8996,     32609: [[ $var    behaves as [[ -n $var    for bash/ksh compatibility\n\nAlso restore ksh [ -t   compatibility when POSIX_BUILTINS is not set  and\nallow operators defined by modules to be called with no arguments  although\nthis affects only runtime interpretation  not parsing \n  
8997,     32603: fix documentation of status after try / always\n  
8998,     32600: in _arguments   -  is not an option letter after another  - \n  
8999,     32597: vcs_info git: Describe detached heads symbolically \n\nThis makes %b expand to a refname rather than a sha1 when HEAD is detached but\nhappens to match some ref (branch  tag  etc)   The resulting output will\ntypically contain a slash (e g    tags/v1 0 2    heads/mybranch )  which helps\ndistinguish it from the output in the  HEAD is a symbolic ref  case \n  
9000,     32592: add CORRECT_IGNORE_FILE variable\n  
9001,     Fix merge conflict\n  
9002,     32580: avoid indefinite wait in lockhistfile() by checking for lock file time stamp in the future\n\nAlso change behavior of HIST_FCNTL_LOCK to use only fcntl() locking  rather\nthan applying both kinds of lock \n  
9003,     32562: updates for bzr completion\n  
9004,     32558: _XOPEN_SOURCE_EXTENDED now OK on OpenBSD\n  
9005,     32569: lastval ($?) should not be reset between word list substitution and loop body execution in for/select\n\nRemove one other redundant and therefore confusing assignment to lastval \n  
9006,     32568: consistency in handling of errflag condition during substitutions\n\nAffects for/select word lists  function definition name position  and\nanonymous function argument lists \n  
9007,     32552 (updated by 32560): fix segfault when using process substitution in anonymous function argument list\n\nAlso disallow process substitution in function name position \n  
9008,     32546: better handling of ignored files with _path_files -W prefixes\n  
9009,     32540: in doexpandhist()  discard saved line position data rather than restoring from it (updates 32531) \n  
9010,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
9011,     addition to 32527: also update  distfiles\n  
9012,     32527: zcalc-auto-insert key binding for use in zcalc\n  
9013,     Fix email address\n  
9014,     unposted: fix typo\n  
9015,     32531: fix memory leaks detected by valgrind\n  
9016,     32533: add completion for  apt-mark \n  
9017,     32532: completion for  apt  command\n  
9018,     complete zfs     -o multiple times\n  
9019,     32521: document that LOGNAME comes from getlogin()\n  
9020,     32528: vcs_info: Document  post-backend  hook and bzr  check-for-changes  support \n  
9021,     32528: vcs_info: Add check-for-staged-changes\n  
9022,     32505: improved Solaris compatibility for pgrep completion\n  
9023,     m0viefreak: users/18655 18657 18660: assorted auto-removable suffix fixes\n\nSrc/Zle/compresult c  Src/Zle/zle_misc c  Src/Zle/zle_refresh c: fix\nauto-removable suffix highlighting\n\nCompletion/Unix/Command/_git: fix compadd for auto-removable suffix in\n_git_commit_ranges and _git_stash\n  
9024,     32502: fix typo in argument list for git completio\n  
9025,     Merge branch  master  of    code sf net/p/zsh/code\n  
9026,     users/18644: bindkey -s doc should have forward reference \nIndicate there is documentation for the argument strings \n  
9027,     32500: handle interrupts during pattern matching\n  
9028,     unposted: in Perforce path completion complete depots after //\n  
9029,     32497: avoid using comptesteval in the middle of a series of tests\n\nThe change in control required for sourcing the command file can confuse\nthe simulated interactive input\n  
9030,     32494: Yodl hack to fix indents in manual page output\n  
9031,     32493: some man page formatting fixes\n  
9032,     Merge branch  master  of ssh://git code sf net/p/zsh/code\n  
9033,     Fix zypper commands completion [zypper <TAB>  \n\nSigned-off-by: Mariusz Fik <fisiu@opensuse org>\n  
9034,     Fix zypper commands completion [zypper <TAB>  \n\nSigned-off-by: Mariusz Fik <fisiu@opensuse org>\n  
9035,     unposted: document effect of 32479 on POSIX_TRAPS\n  
9036,     32482: fix character translation issue with some versions of Yodl\n  
9037,     32479: POSIXTRAPS and implicit return values \nWith POSIXTRAPS never propagate implicit return value \nIn any case if not forcing a return value don t use lastval\nfrom within the trap  use the one from the surrounding code \n  
9038,     32471: tidy up pgrep completion\n  
9039,     32471: handle BSD process management in pgrep completion\n  
9040,     32472: new pgrep completion options\n  
9041,     32480: Fix crash in vi mode with too few previous changes\n  
9042,     32468: save/restore match/mbegin/mend when doing pattern lookups against zstyle contexts\n  
9043,     Merge branch  master  of git://git code sf net/p/zsh/code\n  
9044,     users/18550: matcher-list documentation clarifications\n  
9045,     32289: Doc: Add zsh version to footer in HTML documentation \n  
9046,     32441: add completer for file extensions\n  
9047,     32450: make get-line widget set the history number that was saved with the line\n  
9048,     32448: fix seg fault if $WIDGET is accessed after recursive-edit is interrupted\n  
9049,     32439: add new show-ambiguity style\n  
9050,     32436: allow = to be used in ZLS_COLORS patterns if it is quoted or inside parentheses\n  
9051,     32453: fix zcalc default base handling\n  
9052,     32412 / 32415: New giga- and terabyte units for glob qualifiers\n  
9053,     Fix merge conflict\n  
9054,     users 18531 plus doc etc : new expand-absolute-path widget\n  
9055,     32435: improved quoting for ignore-line completion style\n  
9056,     unposted: fix typo in documentation\n  
9057,     unposted: duplicate local statement was printing variable value\n  
9058,     users/18498: observe add-space style in _expand_alias so suffix can be disabled\n  
9059,     users/18485: add    as an auto-removable suffix in git revision ranges\n  
9060,     Fix outdated npm completion\n  
9061,     32642: improve bzr completion with directory path\n  
9062,     32427: avoid busy loop on closed descriptors for  zle -F  handlers\n\nAlso assure the handlers are called on error conditions and document the\nextra argument that is passed in the error case \n  
9063,     32414: improved error message for missing delimiters \nFor glob qualifiers  u  and  g  \n  
9064,     new forms of completion for btrfs\n  
9065,     updated subcommand completion for btrfs\n  
9066,     minor typo in btrfs completion\n  
9067,     remove hard tabs from btrfs completion\n  
9068,     prefer col -bx to colcrt in helpfiles\n  
9069,     remove old example from helpfiles:\ncode is integrated with distribution\n  
9070,     use env to find perl for helpfiles\n  
9071,     update zshcontrib for latest helpfiles\n  
9072,     32398: _git: completion updates up to latest git v1 9 0\n\n- cherry-pick: allow commit ranges to be specified\n- push: option is called --set-upstream and not --set-upstream-to\n- status: offer -b --branch when --porcelain or -z are given\n  --porcelain and -z don t show the branch info by default  so it\n  is needed to offer --branch for those options  too \n- checkout: add  --detach  option\n- checkout: offer  -l  option when  --orphan  was given\n- show-ref: update wording of --head and --heads according to man-page\n- config: update default value for color ui\n  color-bool was changed to accept a default value as $parts[5 \n- add support for  cygstart  as a valid builtin browser on cygwin\n- rebase: add suuport for --autostash and config autostash\n- update builtin browser list\n- grep: add -- no  textconv\n- check-ignore: add --no-index\n- update-ref: add --stdin -z\n- add -C\n- pull: add support for --rebase=preserve\n- config: add support for http *  options\n- blame: -L can be given multiple times\n- config: add support for http savecookies\n- push: add support for --force-with-lease\n- diff: --diff-filter: allow lower-case variants (all-but     specs)\n- config: add support for  fetch prune  and  remote * prune \n- check-ignore: -z: update message  check-attr: add -z\n- config: add diff orderfile\n- revision options: add --exclude\n- revision options: add --ignore-missing\n- revision options: add --bisect\n- rev-parse: add --stuck-long\n- merge-base: add --fork-point\n- config: implement submodule * update completion\n- send-email: add --smtp-ssl-cert-path and config options\n  
9073,     32397: _git: fix __git_submodules to only use the actual name of the submodule\n\nThe output of  submodule status  is\n\nXsha1 name (describe)\n\nX being one of - + U [space \n\nWe are only interested in the name part and not the whole line \n\nFix the parameter expansions accordingly \n  
9074,     32395: _git: diff: refactor and fix wrong completions\n\nBefore this  there were several cases where the completion\nwould offer the wrong things:\n\n$ git diff branch -- <tab>\n\nwould try to complete  changed in workdir files   but needs to\ncomplete all  tree files in HEAD  \n\n$ git diff --cached -- file1 file2 <tab>\nwould try to complete  changed in workdir files  but needs to\ncomplete  changed in index files  \n\n   \n\nAfter this change all possible combinations are taken into\naccount and completion should work properly \n  
9075,     32396: _git: fix __git_committish_range_ first last  and __git_is_committish_range\n\n- Ranges with 3 dots would always fail  because the non-greedy\n  expansion  %  ( |)* in __git_committish_range_first would only\n  remove      and never three dots   a   b  would end up in  a   \n  Use $ $ 1%  * %   instead \n- Use a similar approach for __git_committish_range_last \n- Wrap them in another expansion to replace empty results with  HEAD  \n  Git man-page states omitted range ending are being replaced with\n  HEAD  This rule has to be followed to make completions like\n   git log foo   -- <tab>  work properly \n- Add an additional check to make sure none of the extracted first/last\n  parts contain additional      in invalied ranges such as  a  b  c  \n  This gets rid of the  TODO:  and ideally saves a few unneded\n  calls to git rev-parse \n  
9076,     unposted: document interactions of  fc -R  etc  with  fc -l  and $HISTCMD\n  
9077,     32388: zparseopts -K preserves individual associative array elements\n  
9078,     32389 (with Jun Takimoto): additional PTY and keybinding adjustments\n  
9079,     32361: don t reset lastline before completion\n  
9080,     Fix character transposition typo\n  
9081,     32377: change keybindings and PTY control for vi-mode tests to make them more reliable\n  
9082,     32365: another stab at the heuristic for initializing rprompt_indent\n  
9083,     32356: fix a typo\n  
9084,     18406: New completion for system_profiler\n  
9085,     32355: document and test vi mode undo changes\n  
9086,     32342: fix overstrike for vi mode and use varying vi commands at line start\n  
9087,     32334 (modified so KEEPSUFFIX is unchanged for vi-cmd-mode; based on\nJun T: 32324  32330)  32347  Jun T: 32344  32349:\nadd split-undo zle widget for configurable breaks in undo sequence\n  
9088,     Minor indexing changes to generate more consistent page layouts\n  
9089,     32341: heuristic initialization of ZLE_RPROMPT_INDENT\n  
9090,     Fix leading whitespace in a comment\n  
9091,     32340: improve error messages for  read -c  /  read -l \n  
9092,     32338: create empty help txt so lack of helpfiles does not break the build\n  
9093,     32337: change initialization of some special parameters for emulation compatibility\n  
9094,     32314: merge undo events corresponding to vi change in the vi-cmd-mode widget so undo from insert mode is useful again\n  
9095,     32322: display a message when completion is interrupted from the keyboard\n  
9096,     32300: new od completion\n  
9097,     32316: complete new ssh key type\n  
9098,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
9099,     32303: simplistic completion after $x:\n  
9100,     32308: Improve initialising of vi change \nBetter handling when entering viins on entry to editor \nSlightly changed since post to use vi command a \n  
9101,     users/18368: compromise to restore partial path completion inadvertently removed by 31159\n  
9102,     unposted: update 31983 to suppress stdout from cmp  too \nGets rid of unnecessary messages building patchlevel h \n  
9103,     use LPAR() instead of parens in sqrt example\n  
9104,     32299: add use of underscores on arithmetic output for spacing\n  
9105,     unposted: reformulate 32285 to lift the fheap->sp test out of the loop  improve commentary\n  
9106,     32294: prevent buffer overflow when scanning very long directory paths for symbolic links\n  
9107,     users/18335: avoid passing to  functions  those typeset options that it does not accept\n  
9108,     32285: restart the fheap search in freeheap if the current fheap arena is about to be discarded; fixes crash\n  
9109,     32283:  fix crash in menu selection when number of terminal lines is small\n  
9110,     32271: fix matcher-list example\n  
9111,     32267: use explicit path to modinfo for completion\n  
9112,     32264: vcs_info  hg: Support detecting repos using ShareExtension\n  
9113,     32265: better handling of large package lists \n  
9114,     32257: updated zypper completion\n  
9115,     32255: complet for python under some pythonN M names\n  
9116,     32246: option  shift -p  pops arguments from end of array\n  
9117,     32245: complete more mpc arguments\n  
9118,     users/18298 (tidied up): add  <char>  <char>  expansion\n  
9119,     32238: suppress error output completing after ip\nMissing ChangeLog entry \n  
9120,     32238: suppress error output completing after ip\n  
9121,     unposted: update version to 5 0 5-dev-0\n  
9122,     unposted: update version to 5 0 5\nAlso correct typo in compsys yo for texinfo \n  
9123,     unposted but c f  32231: $line from _arguments doesn t include command\n  
9124,     32231: _chmod was confused by options before the mode\n  
9125,     32229: LICENCE should refer to Gnu *General* Public License\n  
9126,     unposted: update another README reference to 5 0 5\n  
9127,     users/18271 plus further tweaks: FAQ entry for pattern exclusions\n  
9128,     unposted: update source documentation for 5 0 5\n  
9129,     32261: completion updates for Solaris 11  Update 1\n  
9130,     32196: copy-prev-shell-word needs a lexer flag\n  
9131,     32210: completion for the sysstat suite\n  
9132,     32208: always reset pathchecked when the path array is modified\n  
9133,     32205: skip cdpath search when prefix begins with    / \n  
9134,     Note problem when compiling with GCC on OS X 10 9 1 \n  
9135,     32190: quote _path_files -W path when completing relative to   /\n  
9136,     32186: fix bad backreference; handle glob patterns with backslashed quotes\n  
9137,     unposted:  move path assignment from comptest to Y01completion ztst\n  
9138,     32183: regression tests for 32182 and 31611\n  
9139,     32182: re-enable command completion after a separator\n  
9140,     32178: fix another acquire_pgrp() infinite loop\n  
9141,     32176: plug additional deadlock-inducing pipe descriptor leaks\n  
9142,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
9143,     32172: regression test for 32171\n  
9144,     unposted: update version to 5 0 4-dev-0 to avoid clash with release\n  
9145,     32171: close pipe descriptor in parent when left side is a shell construct to\nprevent deadlock\n\nAlso clean up ChangeLog entry that attributed 32119 to 32114\n  
9146,     unposted: release 5 0 4  more files updated\n  
9147,     unposted: release 5 0 4  more files updated\n  
9148,     unposted: release 5 0 4\n  
9149,     32157: fix extra line feed after prompt  and erased character in completion listing  when ZLE_RPROMPT_INDENT=0\n  
9150,     32150: fix file reference in executable ownership test\n  
9151,     32143: Fix --enable-custom-patchlevel name in INSTALL\n  
9152,     32137: set pseudo-terminal speed to prevent padding characters\n  
9153,     32131: avoid infinite loop reading pty on platforms that do not buffer output after child exit\n  
9154,     32136: fix problem with kshglob \nNon-pattern characters that could be followed by  (  to introduce\na ksh glob but weren\ t caused failures \n  
9155,     add ZLE_RPROMPT_INDENT to NEWS\n  
9156,     32114: ZLE_PROMPT_INDENT allows you to move rprompt flush right\n  
9157,     users/18219: compadd -Q for builtins  aliases  and reserved words\n  
9158,     unposted: increment version to 5 0 3-dev-0\n  
9159,     unposted: release 5 0 3\n  
9160,     32105: support combinations of man or nroff with colcrt or col \n  
9161,     32103: parse host:port format in ssh known_hosts files \n  
9162,     32099: change pointer declaration to avoid arithmetic on (void *) \n  
9163,     users/18210: document  print -D  better\n  
9164,     32093: describe the dependency issues fixed by the doc bundle\n  
9165,     32056: Handle completion for different versions of iconv\n  
9166,     32091: WARN_CREATE_GLOBAL false positive \nIn cases like ()   foo=bar =true;  \n  
9167,     32089: tweak to detect Subversion repository\n  
9168,     Unposted (see 32085):  Another nonessential setopt\n  
9169,     32080: Suppress error output from nonessential setopt\n  
9170,     unposted: 5 0 2-test-3\n  
9171,     32069: completion for  git submodule update --remote \n  
9172,     32066: fix %r and %S in vcs_info formats when a repository subdirectory is accessed via a symlink\n\n31985 Clemens Hammacher and 32064 Hong Xu\n  
9173,     32061: Fix  use of uninitialized memory  in metafy\n  
9174,     unposted: fix ChangeLog reference to last test version\n  
9175,     unposted  see 32054: Rationalise character encoding \nShell functions are strictly ASCII for maximum portability \n\nOther files within the distribution may contain UTF-8 characters \n\nException for test files: where they need single character input\nwith the top bit set  ISO-8859-X is used (X doesn t matter as\nwe don t need the Euro) \n  
9176,     unposted  see 32050  32051: remove non-ASCII characters in functions\n  
9177,     Merge branch  master  of ssh://git code sf net/p/zsh/code\n  
9178,     unposted: Prepare 5 0 2-test-2 \n  
9179,     unposted: Prepare 5 0 3-test-2 \n  
9180,     32045 (adjusted by 32047): use makefile dependencies to determine whether to\nrebuild helpfiles\n  
9181,     32031 plus missed _run_help: get helpfiles install path corect in functions\n  
9182,     32030: need to revert empty glob qualifier change \nIt failed on an empty expansion that (N) was supposed to remove \nAdd test for this case \n  
9183,     32023: better interrupt handling at RM_STAR_WAIT\n  
9184,     32008: complete     and  :  for run-help  clean Doc/help in make\n  
9185,     Fix merge of ChangeLog\n  
9186,     follow up to 31959: I patched the files to the wrong place \n  
9187,     31995: Han Pingtian: glob qualifiers cannot follow an empty pattern  so a leading paren means grouping\n  
9188,     32001: fix crash on $ :*  and $ :| \n  
9189,     Another missed bit of 31988 \n  
9190,     One missed hunk from 31988 \n  
9191,     Martin Vaeth: 31988 (plus missing semicolon): remove LC_CTYPE heuristics  assure clean environment  force LANG=C\n  
9192,     31984: new df completion\n  
9193,     31983: suppress warning from cmp when genering patchlevel h \nThe warning doesn t indicate a problem  so isn t useful \n  
9194,     31982: detection of floating point constants was problematic \nRemove the cause and fix the original problem with floating point\nnumbers with leading zeros (users/17445) a different way \n  
9195,     31977: It s OK to autoload a feature that s loaded \nSimply check that the feature is from the same module that s requested \n  
9196,     31971: locale fix for helpfiles\n  
9197,     31959 tweak: put this back again\n  
9198,     Merge remote commit\n  
9199,     31959: missed files\n  
9200,     31966: skip introductory paragraphs when processing  man zshbuiltins  \n  
9201,     Fix merge conflict amending ChangeLog \n  
9202,     31959 (plus tweak to  gitignore): make help files during installation\n  
9203,     31959 (plus tweak to  gitignore): make help files during installation\n  
9204,     31961: rationalise fd watching to use structure\n  
9205,     unposted: update some incorrect version numbers in ChangeLog\n  
9206,     unposted: refer to zle -Fw in NEWS\n  
9207,     31940: zcalc -e uses arguments as input\n  
9208,     31937: zle -Fw uses widget semantics for file descriptor handler\n  
9209,     unposted: updates for 4 0 2-test-1 \nUpdate references to 4 0 2 to 4 0 3 \nAdditional mod_export declarations \nAdditions to  distfiles \n  
9210,     31936: Rationalise limits for threads\n  
9211,     31935: further updates to limits for BSD\n  
9212,     31930 / 31934: New limits from BSD \nAvoid clash of uses for ulimit -k \n  
9213,     31929: Src/jobs c: fix DPUTS3() test condition from 31906 \n  
9214,     Mention HISTORY_IGNORE\n  
9215,     31922: zlecharasstring missed flip of bit 5 after Meta\n  
9216,     31919: fix deadlock when a shell builtin with a multio redirection is used on the left side of a pipeline\n\nMake sure stdin/out/err file descriptors are closed for the multio copy\nprocess  which means not re-using those descriptors after they are closed\nand marked FDT_UNUSED in fdtable[    For completeness  initialize their\nfdtable[  state to FDT_EXTERNAL \n  
9217,     Some syntax adjustments in _expand_word_and_keep   Add a working URL \n  
9218,     31912: in closemn()  distinguish closing for >&- from closing for a real redirect\n\nFixes knock-on multios bug introduced by workers/20666 way back in 2005 \n  
9219,     31909: new cat completion\n  
9220,     Merge overlapping ChangeLog entries\n  
9221,     31906: fix race-condition interaction of $pipestatus with job control\n\nprintjob() should not reference oldjobtab for job numbers unless it is being called from bin_fg()   printjob() also must not attempt to update pipestats when called from bin_fg()   acquire_pgrp() should not loop infintely if the shell is not interactive   Update the $pipestatus stress test so that it also exercises the oldjobtab repair \n  
9222,     31902: rationalise use of gamma function \nMake zsh/mathfunc consistent across systems and use tgamma() where\navailable\n  
9223,     31890 + 31891: Add NEWS for new features since 5 0 2\n  
9224,     31885: fix PIPEFAIL when the last command executes in the current shell\n  
9225,     31889: tests for disable -p\n  
9226,     31877: fix behaviour of disable -p with parentheses\n  
9227,     31888: Add another test for pipestatus \nThis one was reliably failing before the fix  see zsh-workers-31870\n  
9228,     31882: Insulate completion widget against environment \nPrevents change in pipestatus leaking back out \n  
9229,     31884: Make new pipestatus test implementation proof \nIt seems uniq s vary in the number of spaces they output \n  
9230,     31879 plus misc :  improve $pipestatus handling and add a test for it\n  
9231,     31873: Document conventions for command options in builtins\n  
9232,     Merge branch  master  of git://git code sf net/p/zsh/code\n\nConflicts:\n\tChangeLog\n  
9233,     31865: _git: Make --batch(-check) accept an argument\n\nAlso reword the explanation slightly to make it more compact since more\nexplanation is needed \n  
9234,     31864: _git: Add two sub-comamnds introduced in v1 8 4\n\nAdd _git-check-ignore() and _git-check-mailmap()\n  
9235,     31866: _git: Reword --heads to match new meaning\n  
9236,     31862: _git: Add status short and status branch\n  
9237,     31863: _git: Add new arguments introduced in Git v1 8 4\n  
9238,     31861: _git: Add git-clean -i/--interactive support\n\n - Add -i and --interactive to _git-clean()\n - Add column clean configuration variable\n  
9239,     31855: _git: revert: add  -e --edit \n  
9240,     31856: _git: fix a few  undocumented  options\n\ncommit: \ --null\  is documented\nrelink: \ -h --help\  are never documented for subcommands but always exist\nverify-tag: \ -v --verbose\  are documented with updated description\ndiff: \ --cumulative\  is deprecated -> remove\n  
9241,     31858: _git: fix wrong default value\n  
9242,     31857: _git: Remove unsupported -q option from diff options\n  
9243,     31859: _git: re-order the last two git-blame arguments\n\nThe proper syntax is git blame [<commit>  <file> where <commit> is optional \n  
9244,     31854: _git: Make git-show accept diff arguments\n  
9245,     31853: _git: Add missing column * config variables\n  
9246,     31869: reduce WINCH-twaddling in shingetline()\n  
9247,     Fix merge conflict\n  
9248,     Use VERBOSE option in execstring()\n  
9249,     31849: document effect of KSH_ZERO_SUBSCRIPT on the argv special array\n  
9250,     31846: fix NOEXEC option in execsimple() optimisation\n  
9251,     31840:  read  needs IFS unset to avoid stripping whitespace in makefiles\n  
9252,     31832: make execrestore() more signal-safe \n  
9253,     31823: add HISTORY_IGNORE parameter\n\nHISTORY_IGNORE defines a pattern to exclude matching lines in the internal\nhistory from the HISTFILE at write time \n  
9254,     31830: New feature for zshaddhistory hooks \nIf the first non-zero return status is 2  save the line on the\ninternal history list  but don t write it out \n  
9255,     Users/18033: Documentation for exit and ERR_EXIT \nNotes about interaction with asynchronous jobs such as process\nsubstitution and multios \n  
9256,     31872: zshaddhistory hook example needs options \nOnly works with INCAPPENDHISTORY or SHAREHISTORY set \n  
9257,     Fix trivial typo in zshaddhistory doc \n  
9258,     Merge branch  master  of git://git code sf net/p/zsh/code\n  
9259,     31818: fix completion for zsh in _sh  and document the _arguments behavior that made the fix necessary\n\nTo avoid side effects  reposition the _arguments call in _sh for the zsh\nspecial case  Document the side effects so avoided  and clean up the\n_arguments documentation a bit along the way \n  
9260,     Update ChangeLog with previous commits\n  
9261,     31806: _enable _disable: Workaround special characters in alias and function names breaking _arguments syntax\n  
9262,     31805: Update _enable and _disable for -p  fix related typo in docs\n  
9263,     31805: Add $patchars and $dis_patchars to zsh/parameter module\n  
9264,     31815: another fix for INCAPPENDHISTORY change \nWe need to save immediately if something is pushed on the history stack\nto ensure we use the right file before popping \n  
9265,     Merge branch  master  of git://git code sf net/p/zsh/code\n  
9266,     31810: tests for simple XTRACE output from conditions\n  
9267,     31809: Make whitespace clear in trace output for patterns \n  
9268,     31801: missing local declaration for variables in completion\n  
9269,     31797: to match documentation  avoid expanding history when there is neither a\nword nor an event designator\n\nThere are still a few cases where expansion is attempted even though the\ndocumentation indicates it will not be  but in most of those cases the\nexpansion will fail   The now-fixed case would fall back to default\nexpansion of the previous command \n  
9270,     unposted:  fix typo\n  
9271,     31794: further refinement to INCAPPENDHISTORY change \nWith SHAREHISTORY we should make sure the code behaves as it always\ndid  because it takes care about locking a file once for reading\nand writing \n  
9272,     31793: Fix problem with non-interactive history \nModify 31789 so it doesn t try to save history from hbegin()\nin that case \n  
9273,     Add new options for rsync 3 1 0 \n  
9274,     users:18023: Add PIPEFAIL option\n  
9275,     31789: Save history for INCAPPENDHISTORY later \nThis improves the timing recorded in the history \n  
9276,     31784: better line width calculation for completion listings\n\nWhen deciding whether there is enough horizontal space to show completion\ndescriptions for each match in a listing  treat the separator as part of\nthe description rather than as part of the match  and account for lines\nthat have already wrapped due to very long matches \n  
9277,     31781:  compdescribe -i  clears the completion list column padding width\n  
9278,     31772: queue_signals() to prevent re-entry into endparamscope() \n  
9279,     31770: memmove() instead of memcpy() for overlapping regions \n  
9280,     31765: If zle starts in viins mark as insertion \nThis allows undo to work on everything entered \n  
9281,     31764: Dewreakify havoc caused by pattern disables on glob qualifiers \nDon t use the zpc_specials array before it s defined  it s rude \n  
9282,     31754: _git: git rm: make git rm --cached work as intended\n\nWhile limiting the completion to __git_changed-in-index_files\nmakes perfect sense for  git diff   it is wrong to use for\n git rm   because it prevents it from completing files present in\nHEAD  Giving --cached to git rm is supposed to\n just remove it from the index  keep the working tree copy \nand is in no way related to the file needing to be\nmodified in the index in the first place \n  
9283,     31752: _git: change completion text for consistency\n  
9284,     31753: _git: correct some  undocumented  options\n\ndiff options:\n  --cumulative is deprecated --> remove\n  -G / -S: reword -S to emphase the difference to -G\n\nrevision options:\n  --abbrev: reword  to emphase the --abbrev-commit requirement\n  
9285,     31751: _git: remove TODOs of actually documented options\n\nNo functional changes \n  
9286,     31749: _git: fix some typos in description texts\n  
9287,     31748: _git: support completing remote branches without <remote>/ prefix\n\nthis is used in git 1 8 s\ngit checkout <branch>\nas a shorthand for\ngit checkout -b <branch> --track <remote>/<branch>\nin case <branch> exists on exactly one remote and is not a local branch\n  
9288,     31746: _git: reword _git-config TODO\n\nSupport for merge drivers  filter drivers  and diff drivers is\nmissing \n  
9289,     31750: _git: add new configuration options to match latest git v1 8 3\n  
9290,     31747: _git: completion updates to match latest git v1 8 3 part 2\n  
9291,     31755: _git: completion updates to match latest git v1 8 3\n  
9292,     31745: _git: correctly use __git_guard_number in some cases\n\nThe space is relevant to make the help text work as intended \n  
9293,     31744: _git: make git submodule <cmd> completion work\n\nThe -A parameter in the main completion stopped completion\nin the subcommands from working  Remove it \n  
9294,     31743: _git: fix usage of ->int: for some entries in _git-config\n  
9295,     31741: _git: fix a wrong variable in __git_config_values\n\nThis probably was a copy/paste mistake \n  
9296,     unposted: improve an error message \n  
9297,     31737: same loop counter fix in get_cadef as get_cvdef \n  
9298,     31735: fix off-by-one in completion utility cache code \nWas causing crashes in complex completions  particularly with taskwarrior\n  
9299,     31726: _git: add few more arguments for cherry-pick and revert\n\nSigned-off-by: Luka Perkov <luka@openwrt org>\n  
9300,     31723: _systemd: add more system commands\n\nWhile at it move suspend command so the order of the\nsytem commands equals the one in the systemd help \n\nSigned-off-by: Luka Perkov <luka@openwrt org>\n  
9301,     31714: handle      properly when $PWD or the path prefix traverses a symbolic link \n  
9302,     conflict resolution\n  
9303,     31711: add execute-never style for MIME function system \nAllows alien file systems to be marked as not having executable fiels\n  
9304,     31708: _git: add --fixup and --squash options to commit\n\nSigned-off-by: Luka Perkov <luka@openwrt org>\n  
9305,     31702: check for git rebase -i for autosquash\n  
9306,     31706: standardize handling of  test ! <x> <y> <z> \n  
9307,     31658: fix manual entry about getting lines from mapfile\n  
9308,     31696: In  test  No One Can Hear If You Shriek \nTreat ! as a string in  test ! -a      and  test ! -o      \n  
9309,     users/17955: new  disown  style for MIME handlers \nMakes handlers put into the background run without job control \n  
9310,     based on 31641  31642: completion for more make variants\n  
9311,     31672: Add test that was failing and fix zpty set-up race\n  
9312,     Update ChangeLog entry with mailing list reference \n  
9313,     31665: zpty should attach terminal on slave \nAlso add test \n  
9314,     31637: be more selective about retry of lchdir() in cd_do_chdir()\n\nChange of directory should not be retried relative to the current directory\nwhen it has already failed along some path that does not refer to the\ncurrent directory \n  
9315,     31650: use zlong for mailcheck parameters to ensure range\n  
9316,     31648: fix timing errors in mailcheck\n  
9317,     31644: Fix insertion of multibyte characters into editor line \nThis was broken for a string that came from outside ZLE in the case\nwhere the editing buffer wasn t metafied  i e  not in completion \n  
9318,     users/17908: Keep history line in sync between ZLE and shell \nUpdate ZLE version if history is read  pushed or popped with ZLE active\n  
9319,     31634: run-help compat with alias to noglob/nocorrect\n\nGiven `alias fetch= noglob fetch `  without this change `run-help fetch`\nrecurses to invoke itself on the noglob command  bringing up the help\nfor noglob   Similarly for nocorrect   Thus the user would have to quit\nout of the pager  then avoid quitting out of the loop  so that they can\ngo into the second iteration and see the help for the second instance\nfound by `whence -a`  which happens to be the target of the alias \nWith common pagers  that s thus  q    not-q    Somewhat frustrating \n\nWithout this change  `alias foo= noglob bar ` where `foo` is not\notherwise a command would _never_ show the help for `bar`  since it only\nshowed the help for `noglob` and there was no second line of whence\noutput to trigger the second pass \n\nWith this change  aliases to `noglob|nocorrect` of a command somewhat\nignore the presence of that precommand modifier; if a command is aliased\nto `noglob $itself`  then the result is that the first line of whence\noutput is shown  no pager is used  the user can immediately see a prompt\nto continue and press something other-than-q to see the help for the\ncommand \n\nIf given `alias foo= noglob bar ` then `run-help foo` will immediately\nshow the help for bar \n\nThis behaviour was chosen to be consistent with the existing alias\nsupport  but just working better with the precommand modifier \n  
9320,     31631: Use cygwin_conv_path if available \nPrefer it to cygwin_conv_to_posix_path \n  
9321,     suppress stderr when listing java classes to complete\n  
9322,     31611: attempt to fix crash completing redirection in do loop\n  
9323,     mplayer supports  ts (transport stream) files\n  
9324,     17591: fix error message for invalid fd in print -u\n  
9325,     31592: improve documentary for handling of named directories \nMinor changes of phrasing \n  
9326,     31756: further make completion improvements \nake care of mutually exclusive options \nAdd _description using $state_descr \nAdd completions for --debug=flag \nFix typo (pointed out by Daniel Shahaf) \n  
9327,     31574: alternative fix for bad fd if no FD_CLOEXEC \nRemove dump records more consistently in that case \n  
9328,     31572: Completion/Debian/Command/_linda: Deleted\n  
9329,     31571: Completion/Unix/Command/_vcsh: Update\n  
9330,     31750: fix for HISTREDUCEBLANKS option \nDon t truncate line after marked words if there s more\nnon-white-space text  which is probably comments \n  
9331,     unposted: fix previous commit: ihwend -> hwend\n  
9332,     31559: Fix history line problem with aliases and comments\n  
9333,     31558: name of qemu executable changed in completion \n  
9334,     31549: Fix third problem with file descriptor management \nReplace ad-hoc subsh_close file descriptor for pipe management with the new\njob-based addfilelist() mechanism \n  
9335,     31545: Use of FD_CLOEXEC to remove possibility of fd reuse \nFile descriptors of mmap d dump files are closed if and only if\nan exec is performed \n  
9336,     c f  31531: complete xcf files for image manipulation packages\n  
9337,     31536 with additions: Fix hang in previous process substitution fix \nClose applicable file descriptors when waiting for a job \n  
9338,     31528: use job table to record file descriptors associated with process subst\n  
9339,     31525: Fix some options in _make\n  
9340,     Update make completion with gnu options\n  
9341,     users/17856: rewrite _make to use _arguments \nNo new option handling yet  but this should make it easier to add \n  
9342,     31503: zmv improvements for user-specified programs \n-p splits words of commands passed to it \n-P is like -p for when the program doesn t understand the -- convention\n  
9343,     31500: Completion/Debian/Command/_dput: dput-ng completion support from Sebastian Ramacher \n  
9344,     31499: dcut completion from Sebastian Ramacher \n  
9345,     mail went through\n  
9346,     31xxx: Completion/Debian/Command/_dak: complete files for subcommands that are not explicitly specified \n  
9347,     31483: Call zrefresh() before unqueue()ing signals\n\nNot doing so causes problems for example with this  zshrc\n\nzle -N zle-line-init foo\nzle -N set-local-history bar\nfoo()   zle set-local-history -n 1  \nbar()   zle reset-prompt  \n  
9348,     31485: vcs_info  git: Avoid error messages for `guilt\  users\n\nGuilt uses the same internal directory for keeping state as stgit  but\nit doesn\ t use the same files (not surprisingly)  This caused error\nmessages due to missing files \n\nThis fixes that by making the  stgit-active?  test stricter \n\nReported-by: Axel Beckert <abe@debian org>\n  
9349,     Orphaned ChangeLog notes that should have been committed earlier\n  
9350,     31465: fix basic completion and globbing uses of disabled patterns\n  
9351,     31444: Basic code for enable/disable -p\n  
9352,     31474: create patchlevel h correctly when using a separate build tree\n  
9353,     move comment to individual line in  editorconfig\n  
9354,     31459: fix alignment of zsh entry in info menu\n  
9355,     31205: Do not display  (eval)  as a tag context\n  
9356,     31466: Cause git and cvs to ignore one another  in case anyone wants to\nimport this tree into a CVS repository \n  
9357,     31441: use array to decide which forms of pattern are enabled\n  
9358,     31436: document KSH_GLOB doesn t support recursive directories\n  
9359,     31433: zcat -f doesn t need suffix  gz\n  
9360,     31422: better heuristic for timestamps in age function\n  
9361,     31405: weasel words about PRINT_EXIT_STATUS option \n  
9362,     31419: Add time zone and year to string formatted time output from zstat\n  
9363,     31418: improve documentation for  age  function\n  
9364,     Omitted ChangeLog entry for previous commit\n  
9365,     Fix merge\n  
9366,     31417: age function needs protection against file names starting  - \n  
9367,     upon  read  of a short line  assign all variables passed as arguments \n\nIt was noted that (print 1 2 | read one two three four) assigned values\nonly to $one and $two except in the case where EOF was reached \n  
9368,     Improve Perforce jobs completion to limit\npotentially huge output using jobview by default;\nfix quoting of arguments passed on to eval within _call_program \n  
9369,     Add  ogv to mplayer completion\n  
9370,     Unused function attribute fix for clang compilation\n  
9371,     31376: Make sure every execve() is prefixed by winch_unblock()\n\nThis was suggested by Bart Schaefer in 31375 \n  
9372,     Revert  31372: Do not block SIGWINCH for child processes \n\nThis reverts commit f8ab02ad5f4226e46ab54e681a3e0404fdc1a9a6 \n\nAs Bart suggested in 31375 \n  
9373,     31372: Do not block SIGWINCH for child processes\n\nSomething similar may also be needed in the zpty and clone modules \n  
9374,     31371: _brctl: update brctl subcommands\n\nAdd hairpin and showstp  These are available since at least\nbridge-utils 1 5 \n  
9375,     31369: set locale for completion if locale command is not usable\n  
9376,     31361: handle negative optno ( no  prefix used)\nwhen storing options with parseopts_insert() for sticky contexts\n  
9377,     31353: fix handling of floating point in ternary\n  
9378,     31350: block SIGWINCH nearly all the time  except\nwhen about to calculate prompts or do synchronous read  so\nsyscalls are not interrupted by window size changes \n  
9379,     31350: block SIGWINCH nearly all the time  except\nwhen about to calculate prompts or do synchronous read  so\nsyscalls are not interrupted by window size changes \n  
9380,     31357: _cp: add support for Mac OS X\n\nIf not GNU nor darwin  assume POSIX \n  
9381,     31356: typo in new _comp_locale noted by Bart\n  
9382,     31355: _comp_locale tries to sanitise locales but keep CTYPE;\nuse this for subversion completion \n  
9383,     31288: _git: fix shortlog completer\n\nCurrently  __git-shortlog () says that  git shortlog  can only accept\ncommits as arguments (probably because the official documentation says\nthis)   This is entirely untrue: shortlog can accept\ncommit-range-or-file  just like log can   Fix the completer by copying\nout segments from the __git-log () function \n\nSigned-off-by: Ramkumar Ramachandra <artagnon@gmail com>\n  
9384,     31289: _git: branch * pushremote  remote pushdefault\n\nThe configuration variables branch * pushremote and remote pushdefault\nare relatively new  and are currently not completed by ZSH   Fix this \n\nSigned-off-by: Ramkumar Ramachandra <artagnon@gmail com>\n  
9385,     31286: _git: add a couple of browsers\n\nAdd google-chrome/chromium to the list of builtinbrowsers in\n__git_browsers () \n\nSigned-off-by: Ramkumar Ramachandra <artagnon@gmail com>\n  
9386,     31159: git: Pass prefix filter to ls-files even if it matches no files\n\nWhen a branch or tag name is completed with zsh in a large git repo  the\ncompletion is slow if the given prefix doesn t match a file or directory in\nthe current working directory  Testing with linux git  which contains release\ntags like v3 9 and a directory virt/:\n\n  git log v<tab>\n\ntakes about 0 5 seconds  while\n\n  git log v3<tab>\n\ntakes about 25 seconds \n\n(Timed using zsh 4 3 17  on a fairly slow cpu  zsh from git appears to be\nquite a bit faster  but the difference between completing v and v3 is still\nlarge )\n\nThe difference between the two is that v<tab> passes the result of v* to git\nls-files while v3<tab> determines that v3* matches no files  and passes an\nempty prefix to git ls-files  So git ls-files lists all files in the repo\nand passes that on to _multi_parts \n\nMaking git do the expansion of the * after the prefix lets git ls-files v3*\nreturn an empty list  making _multi_parts job easier \n\nThis does not affect the behavior of git log <tab>  but improves the\nperformance of partial tag and branch tab-completion in the common case where\nfile names and tag/branch names don t overlap \n  
9387,     31272:  Avoid double free  get_compctl should not free its arguments \n  
9388,     31281: _du: add support for Mac OS X\n  
9389,     Daniel Friesel: 31265: improved option handling for devtodo \n  
9390,     unposted: make git ignore PDF and PS versions of intro file\n  
9391,     31263 (but changed * to - for consitency):\nsuppress texinfo warning by giving item an argument\n  
9392,     31261: updates needed with latest texinfo\n  
9393,     users/17754: failing to retie an array\nand colon-separated scalar shouldn t be a fatal error\n  
9394,     31246: make a separate patch level header for releases\n  
9395,     unposted: fix some  distfiles which mention files that have gone\n  
9396,     unposted: fix a typo in docs\n  
9397,     31234: use an  always  block instead of  trap  to clean up various function\noverrides\n  
9398,     31222: Stop  up down -line-or-beginning-search from triggering warn_create_global\n\nThis is a followup to 30995 taking Peter s suggestions from 30997 into\naccount \n  
9399,     31221: Handle zero defined aliases better\n  
9400,     31175: Add documentation for the new -i and -f options of vared\n  
9401,     31172: Let vared define custom init and finish hooks\n\nUsing this  you can do things like this in a more straight-forward\nmanner:\n\nfoo-init()   CURSOR=0;  \nzle -N foo-init\nfoo=$ Some longer\\nbuffer with\\nmultiple lines  \n\nvared -i foo-init foo\n  
9402,     31174: zle: Make sure state changes are refreshed after init hook\n\nIf `zrefresh  is not called _after_ the zle-line-init hook  any changes\nmade to the editor s state (be it changes to $CURSOR or $BUFFER or\ncalled widgets like `clear-screen ) will only be picked up after the\nfirst character is typed into the editor \n  
9403,     31203: add new etags completion \n  
9404,     Add ChangeLog entry for previous commit\n  
9405,     Generate patch level using `git describe`\n\nGenerate the patch level using `git describe` rather than relying on the\nCVS $Revision$   Need to use the `--tags` option  since currently there\nare no annotated tags   The `--long` option should be used so that the\noutput will always be in the  tag-commits-hash  format rather than just\nnaming a tag when that would fully describe the current commit \n\nSince changes to the patchlevel could now be caused by changes to any\nfile  force the rule to be called every time that `make` is run   Only\nupdate the file when there are actually changes to prevent unnecessary\nrebuilding of other build products (currently just `params o` and\n`zsh`) \n  
9406,     Jun  T: typo in vi-goto-mark\n  
9407,     31182: _awk: Allow sticked arguments\n  
9408,     Han Pingtian: 31167 (with tweak): limit use of colons for recognising\nremote path in ssh completion\n  
9409,     31158: following a wildcard with a repetition produces a bad pattern error\n  
9410,     improved math context completion: functions\n  
9411,     31155: minor extra zcalc features and documentation\n  
9412,     31154: make zcalc understand continuation lines with a backslash\n  
9413,     31151: Pavol Juhas: complete (C etc) tags better\nwhen file system is not case sensitive \n  
9414,     31140: avoid crash when hitting recursion limit\n  
9415,     unposted: adjust another mention of psvar\n  
9416,     based on 31144 etc : all entries of psvar can now be shown in prompts\n  
9417,     31141: Tighten NO_CLOBBER restrictions on  fd  syntax\nto apply only if $fd is exactly an fd and nothing else \n  
9418,     31136: vcs_info: just set parameters instead of passing over a pipe\n  
9419,     30639: Add support for showing the current action is cherry-pick to vcs_info git backend\n  
9420,     30490: _java: -keystore takes a file argument  so complete files\n  
9421,     30496: Parse argument to %F and %K as prompt sequences\n  
9422,     users/17666: zcalc -f sets FORCE_FLOAT\n  
9423,     users/17665: add FORCE_FLOAT option\n  
9424,     31077: update for new options in GNU sort\n  
9425,     c f  31071: remove duplicate _osc and rename _ps to avoid name clash\n  
9426,     31061:  functions  completion takes account of options already\non the command line\n  
9427,     31061:  functions  completion takes account of options already\non the command line\n  
9428,     31060: +  before a flag for  functions  or\n autoload  should suppress display of function body \n  
9429,     31058: add completion of options from newer versions of some commands\n  
9430,     31055: missing $ in compaudit search of /proc file system\n  
9431,     unposted:  Insert a blank line before vindex() to properly format the\nparagraph that follows it \n  
9432,     31041: add support for testing line editor widgets from the test suite\n  
9433,     remove duplication in git guidelines\n  
9434,     Morita Sho: 31038: add location of terminfo entries on Debian\n  
9435,     31037: return to previous position with vi-goto-mark using `` or   \n  
9436,     Wieland Hoffmann: 31030: improve mplayer completion label\n  
9437,     Wieland Hoffmann: 31029: correct directory in README\n  
9438,     Han Pingtian: 31027: remove the -g s from globs in file completion\n  
9439,     Eric P Mangold: 31016: updated twisted completion using internally\ngenerated function\n  
9440,     31015: compaudit fix to allow executable owner to own completion files\n  
9441,     Fix _prove completer commit (was html)\n  
9442,     Jesper Nygårds: 31012: gradle completion update\n  
9443,     Dmitry Roshchin: 31008: updates for openSUSE completions\n  
9444,     31000: fix typo in example\n  
9445,     users/17608: use function to modify currrent command line argument\n  
9446,     30993: fix parameter modifier crash with :wq on empty string\n  
9447,     30987: only call xrandr when necessary and use _call_program\n  
9448,     30960: Alexey Bezhan: compatibility issue with django completion\n  
9449,     30958: Jeremy Mates: new prove completion\n  
9450,     unposted: tweak 30949 to fix buffer pointer\n  
9451,     30949: restore  read -q  behavior lost by 27188\n  
9452,     30946: Robert Kovacsics: use xrandr command to generate completions\n  
9453,     340941: bashcompinit: scalars giving bash completion status should be exported\n  
9454,     users/17524: misc  parameter flag clarifications\n  
9455,     unposted: update version to 5 0 2-dev-0 to avoid clash with release\n  
9456,     release 5 0 2\n  
9457,     this prevent process-based features from working in their arguments\n  
9458,     Release 5 0 1\n  
9459,     30877: document git workflow\n  
9460,     30914: mkinstalldirs: default mode for installation directories is 755\n  
9461,     30906: more Etc/zsh-development-guide tinkering\n  
9462,     30901: Etc/zsh-development-guide: document git usage\n  
9463,     Missing  distfiles entries\n  
9464,     add missing mod_export\n  
9465,     unposted: update for 5 0 0-test-1\n  
9466,     unposted: update for 5 0 0-test-1\n  
9467,     30876: fix obscure failures to propagate non-zero status\nfrom optimised simple commands within lists\n  
9468,     users/17445: fix handling of leading zeroes in floating point\n  
9469,     30811: new completion for btrfs and complete btrfs and ext4 mount options\nand new linux mount flags\n  
9470,     30803: Vin Shelton: missing menu entry in grammar yo\n  
9471,     users/17042: don\ t stomp the environment in  jobs -Z  unless we\ ve first\ncopied it to new memory \n  
9472,     30802: add new command switches\n  
9473,     30801: fix font completion for newer fontconfig & update urxvt completion\n  
9474,     30789: Add CONTINUE_ON_ERROR for old behaviour \nNew behaviour is for scripts to exit on error instead of returning\nto top level and executing the next command \n  
9475,     Michal Halenka: 30800: fix arpping option\n  
9476,     30795: new xz completion and comple --fast and --best for bzip2\n  
9477,     30794: update completions for new options\n  
9478,     30793: account for eglibc in _pick_variant patterns\n  
9479,     30786: do not enter interactive history editing or command execution if\n fc  is called from a ZLE widget \n  
9480,     30783: We don\ t want leading  = s to be active when\ntokenising strings that aren\ t going to be treated as command line\narguments\n  
9481,     30780: document that set -o failures are hard but setopt failures are soft\n  
9482,     Benjamin R  Haskell: 30737: make custom completions for git aliases easier\n  
9483,     users/17382: complete URLs for vim and make _remote_files more\nconsistent with _files\n  
9484,     30735: array substitutions aren t simple:\nprevent crash on process substitution therein\n  
9485,     Roman Kaminski: 30738: bzr send command\n  
9486,     Greg Bouzakis: 30741: add suspend command to systemd completion\n  
9487,     unposted: further parameter splitting clarifications\n  
9488,     30740: add example of process substitution using anonymous function\n  
9489,     c f  users/17330: fix reference to splitting rule in parameter expn rules\n  
9490,     30726: make shell options passed to emulate stick along with the emulation\n  
9491,     30724: shell code optimisd to use execsimple() doesn t have a valid thisjob\n  
9492,     users/17318: only increment the undo variable return value for the\nfirst request in a row\n  
9493,     users/17314: ensure an undo change number\nuniquely specifies a point in editing history by incrementing\nthe value returned by the variable \n  
9494,     fix trivial typo with  functions +T \n  
9495,     typo\n  
9496,     30722: fix some cases where emulations or options were not propagated properly\nfrom the emulate command\n  
9497,     30718: emulate command evaluations should apply sticky emulation\nto autoloads  too\n  
9498,     add evince  zathura  dwb to command lists of basic completions\n  
9499,     complete files and -t and -f options for xclip\n  
9500,     30716: make IGNORECLOSEBRACES an emulation option\n  
9501,     30715: use enum lextok for variables containing lexical tokens\n  
9502,     additional split change fixes\n  
9503,     users/17305: fix doc of ordering of word splitting\nimprove (z) and (Z) doc\n  
9504,     users/17310: we can t treat < after [ as a normal character \nDocument problem and test for case that needs to work \n  
9505,     users/17304: angle brackets aren t associated with special parsing\ninside square brackets\n  
9506,     Aaron Schrab: 30712:  editorconfig: multi-editor specification of\nediting formats \n  
9507,     Aaron Schrab: 30711: improved _bind_addresses completionfor IPv6 \n  
9508,     Aaron Schrab: 30710: perldoc completion updates\n  
9509,     Baptiste Daroussin: 30703: VCS_INFO_detect_fossil: Fix fossil detection on unix\n  
9510,     Seth House: 30701: Misc/vcs_info-examples: Added an hg hook example to restore the 40-char hash\n  
9511,     Seth House: 30702: contrib yo  VCS_INFO_get_data_hg: Removed --debug flag from the hg vcs_info backend\n  
9512,     30697: new completion definition for dbus-send and dbus-monitor\n  
9513,     30692: allow autoload +X -m to work\nchange to _path_files to make it load in that fashion\n  
9514,     30687 with typo corrected: don t REPORTTIME if zleactive\n  
9515,     Александр Балезин: 30667: add addrlabl subcommand \n  
9516,     NEWS: unposted: further update\n  
9517,     typo\n  
9518,     update ChangeLog for NEWS commit\n  
9519,     30647  30649: allow underscores in numeric constants\n  
9520,     30664: Jun T : fix some Yodl version issues\n  
9521,     Didn t mean to check this in\n  
9522,     users/17236: r and other fc output didn t metafy when listing to a file\nother than stdout\n  
9523,     30656: prevent SIGFPE in division by -1 by multiplying instead\n  
9524,     Jun T : 30658: complete more uniq options\n  
9525,     Silas Silva: users/17223: lp page-ranges option \n  
9526,     users/12713: returning REPLY to _user_expand sets description for expansion\n  
9527,     Oliver (olipro): 30643: ipset completion update\n  
9528,     John Stahara: 30641: bindkey -N error report is misleading\nwhen copying keymap \n  
9529,     Jun T : 30640: MacOS doesn t define __STDC_ISO_10646__ but we need\nthe replacement wcwidth function anyway\n  
9530,     Aaron Schrab: 30636: telnet-ssl option completion\n  
9531,     Aaron Schrab: 30637: -b telnet option completion\n  
9532,     Aaron Schrab: 30638: IPv4 and IPv6 telnet option completion\n  
9533,     users/17211: new recursive-files style\n  
9534,     30633:  functions -T  only traces marked function  not called functions\n  
9535,     Stepan Koltsov: 30634: use (q-) quoting\nfor zmv output for clarity \n  
9536,     Stepan Koltsov: 30632: new _clay completion\n  
9537,     30632: gcc completion enhancements for clang etc \n  
9538,     30629 plus unposted formatting changes:\nsupport socket buffer size limit properly in ulimit;\nimprove consistency of output and documentation and tweak formatting appropriately\n  
9539,     30627: support RLIMIT_NTHR as on NetBSD\n  
9540,     Stepan Koltsov: vcs_info: %a to output number of all patches in (no)?patch-format styles\n  
9541,     Hiramatsu Yoshifumi: 30621 patch-ac (from NetBSD pkgsrc)backported to configure ac: compilation on interix  also\nchange linker flags for NetBSD \n  
9542,     Hiramatsu Yoshifumi: 30621 patch-ab (from NetBSD pkgsrc):compilation on\n__INTERIX\n  
9543,     30169: repeat  typeset -T  with same two first arguments is not an error\n  
9544,     30617: rationalise replacement tgoto() prototype\n  
9545,     add 5 0 0 release note\n  
9546,     delete ChangeLog-5 0  add  distfiles and ChangeLog entries\n  
9547,     ChangeLog-5 0 should be ChangeLog-4 3  Bart says\n  
9548,     unposted: move changes up to 5 0 0 into subdirectory\n  
9549,     Michal Halenika: 30608: _ip syntax fix\n  
9550,     Jesse Weinstein: 30607: Doc/Makefile in: fix ancient Codl\ndependendency problems\n  
9551,     Aaron Scrab: 30604: make repeating vi skip character useful by ignoring\ncharacter just matched\n  
9552,     Aaron Schrab: 30603: repeating vi skip characters command caused bad position\n  
9553,     cat_in_136: 17200: new lha and nkf completions\n  
9554,     YAMAMOTO Takashi: 30599: don t use replacement wcwidth if not ISO-10646\n  
9555,     30590: Work around problem turning intro ms into PDF\n  
9556,     Renumber as 5 0 0-dev-0\n  
9557,     Doc/Zsh/ftp_sites yo: remove unavailable sites\n  
9558,     Remove unavailable sites\n  
9559,     update to 5 0 0 release\n  
9560,     users/17051: explicit IFS for  read  in compinit\n  
9561,     add _mosh to  distfiles\n  
9562,     4 3 17-test-2\n  
9563,     Bart: 30560: unset ordinary array element by setting to null\n  
9564,     Danek: 30562: Solaris completion updates\n  
9565,     30540: typeset flag handling with SECONDS\n  
9566,     unposted: belated commit of version number updated\n  
9567,     30530 30533: fix problems with COLUMNS or LINES < 1  and related issues\n  
9568,     Danek (plus  distfiles): 30520: updated Solaris 11 copmletion\n  
9569,     30518: attempt to supply tgoto() prototype when missing only \nFor Solaris 10 and earlier \n  
9570,     30519 plus correction from Danek: try to modernise MACHINES\n  
9571,     Dima Kogan: 30515: fix globbing problem with large files:\nfailure owing to bad cast with large integers\n  
9572,     users/17134: avoid bad math error\n  
9573,     ChangeLog for 30513\n  
9574,     30513: zsh/regex metafy fixes for widechar\n  
9575,     30509: updates for 5 0 0\n  
9576,     Danek: 30510: bad indentation in params yo\n  
9577,     30503: rudimentary completion for mosh \n  
9578,     Jeremy Mates: 30505: Allow multiple --header= in _wget\n  
9579,     unposted: add : to ChangeLog entry\n  
9580,     30497: xsltproc option completion issue\n  
9581,     users/17132: skip-whitespace-first style for compatibility with bash etc \nin widgets using forward-word-match\n  
9582,     Foudil Brétel: _systemctl -> _systemd plus enhancements\n  
9583,     unposted: Add x-seq: number of last commit to ChangeLog (30488)\n  
9584,     Juliano Ravasi: VCS_INFO_get_data_git: Fix initialisation of `$stgit_unapplied \n  
9585,     Jun T : 30483: improved completion on MacOS\n  
9586,     Danek: 30485: trailing garbage after signal number not recognised in kill\n  
9587,     c f 30482 (Peter Jaros): typo in description \n  
9588,     30474: add ssh -O cancel completion\n  
9589,     30473: update _strace completion\n  
9590,     ChangeLog: forgot to mention who reported 30468\n  
9591,     30466: Add prompt format and printf format completion \n  
9592,     30468: prompt_fade_setup: add missing $\n  
9593,     Describe differences in -i/-I/-l/-L/-n options from xargs to zargs \n  
9594,     30469: Src/builtin c: allow reverse listing of history using\nfc -r  but don t allow reverse execution of commands at all \n  
9595,     unposted: clarify that zargs is different from xargs\n  
9596,     unposted  c f  30465: add index entries and cross-references\nfor match  mbegin  mend  MATCH  MBEGIN  MEND\n  
9597,     unposted: fix trailing spaces from previous commit\n  
9598,     30425 (fixed): Add localhistory/globalhistory to $ZLE_STATE as set by the set-local-history zle widget\n  
9599,     30461  30462 (tweaked): add missing local for match  mbegin and mend\n  
9600,     users/17046: don t count too many elements when splitting quoted parameter\nsubstitution on null parameter\n  
9601,     30456: Completion/Unix/Command/_getconf: Use new array syntax \n  
9602,     30455: remove max array length test\n  
9603,     30444: add NEWS entry for 30431\n  
9604,     30430: fix some errors and outdatedness in intro ms\n  
9605,     30429: avoid error in _init_d when service doesn t exist\n  
9606,     unposted: add test for valid identifier to 30431\n  
9607,     30439: $    :*     with nonexistent or non-array after *\nshould return no results\n  
9608,     30431 with typo in _typeset fix:\nadd $    :|     and $    :*     operators  as documented\n  
9609,     30433: double backslash is not line continuation \n  
9610,     30427: fix syntax error from previous commit\n  
9611,     30412: document set-local-history\n  
9612,     Michael Proko: 30414: more flexible configuration file finding for _mdadm\n  
9613,     30413: (q-) parameter flag should quote null string\n(q-q) etc  should be treated as errors\n  
9614,     unposted: more NEWS tweaks\n  
9615,     unposted: more NEWS tweaks\n  
9616,     unposted: incporate Bart s NEWS suggestions from 30408\n  
9617,     unposted: incporate Bart s NEWS suggestions from 30408\n  
9618,     30410 plus one other case: avoid divide-by-zero errors\nin TIMEFMT interpretation\n  
9619,     30402: turn intro ms into intro pdf for doc distribution\n  
9620,     30406: NEWS: typo fixes\n  
9621,     update Etc/ distfiles for moved NEWS-4 3\n  
9622,     Christian Neukirchen: 30398  30399: TIMEFMT documentation\n  
9623,     30400 plus extra tweaks: update NEWS for 5 0\n  
9624,     30391: tweak to ignore DISABLED flag in new hash-based arrayuniq()\n  
9625,     fix UTF-8\n  
9626,     30388  30389 (Stephane): zargs: handle zero-length arguments \n  
9627,     30383  users/16991 (Vaclav)  users/17000: Improve speed of arrayuniq() by\nimplementing a hash seive algorithm; add test to exercise it \n  
9628,     users/16944: more locals needed in url-quote-magic\n  
9629,     doc the Functions/Zle/split-shell-arguments commit\n  
9630,     add some braces to avoid compiler warnings\n  
9631,     unposted: add missing parenthesis\n  
9632,     users/16932: implement $UNDO_CHANGE_NO and argument to undo widget\n  
9633,     30378: new gradle completion\n  
9634,     30368: _tmux: complete arguments to unambiguous partial subcommands\n  
9635,     30372: _tmux: redirect errors to /dev/null\n  
9636,     30371: _ssh: you can specify -i multiple times\n  
9637,     30367: Doc/Zsh/contrib yo: vcs_info  mention settings used for patch-format/nopatch-format \n  
9638,     30366: Misc/vcs_info-examples: Fix outdated quilt examples \n  
9639,     30354: Luka Perkov: quilt completion update\n  
9640,     30351 + 30352: metafy strings on import into zsh variables\n  
9641,     users/16865: note that -eq is less convient than ((     ==     ))\n  
9642,     30320:  emulate  accepts invocation-time flags; other small doc tweaks \n  
9643,     Alexey: 30322: Completion/Unix/Command/_xmlsoft: accept more\nfile types \n  
9644,     unposted: fix a typo in _git from previous commit (reolved)\n  
9645,     30317: complete git merge --ff-only\n  
9646,     30316: complete  pdf for evince and epdfview \n  
9647,     30314: add completion for ssh-copy-id \n  
9648,     30307 plus tweak suggsted by Wayne: use %lld for zlong when long long\n  
9649,     30303: emulate inside function marked for execution tracing enables xtrace\n  
9650,     Several previously uncommitted patches or patches based on list discussion;\nsee 30272  30184  30090  users/16715  users/16697 \n  
9651,     unposted (users/16697): use a better output file name when the DISPLAY\nvariable refers to a socket file (MacOS); fix problem with writing the\noutput file when the user overrides the default value of TERM \n  
9652,     unposted (30090): add -h (help) and -L (list extant hooks) options \n  
9653,     30184: use a HASH_EXECUTABLES_ONLY test that matches the test used by\nexec c:iscom() during path search \n  
9654,     unposted (users/16715): document HASH_LIST_ALL effects on correction \n  
9655,     30272 (tweaked): most failures of fork() cause non-interactive shells to\nexit nonzero; bad options to  exec  cause exit under POSIX_BUILTINS \n  
9656,     30276: Src/glob c: Use zlong rather than int when calculating brace expansions of the form  1  9  \n  
9657,     30299:  $*  was split with SHWORDSPLIT if IFS was empty or unset\n  
9658,     Get the date right  even more\n  
9659,     30270: don t need errors when testing to see if mtime test will work\n  
9660,     update to 4 3 17-dev-0 and fix year\n  
9661,     unposted: 4 3 17\n  
9662,     30242: Tests for $    =     in POSIX emulation\n  
9663,     30238 plus small tweaks: document the fork behaviour on suspending complex\nbuiltins\n  
9664,     30242: use PREFORK_SINGLE for $    =     in POSIX emulation\n  
9665,     Fix post number for 30203\n  
9666,     unposted: 4 3 16\n  
9667,     unposted: 4 3 16\n  
9668,     30231  30232: updates for 4 3 16\n  
9669,     30198: fix environ style lookup to be done in conventional manner\n  
9670,     fix dpkg-deb completion broken by 30199 (spotted by Mikael)\n  
9671,     users/16760: make reply local in url-quote-magic for the benefit of styles\n  
9672,     30214: emulate bash s \\$ prompt behavior \n  
9673,     30214: prompt_redhat_setup: Fix quoting in `redhat  prompt \n  
9674,     30181  plus rename of PF_* flags to PREFORK_*:\nPass sh-wordsplitting instructions to paramsubst() using flags \navoiding side effects of explicitly setting and unsetting the\nSHWORDSPLIT option \n  
9675,     30206: Fix ldd completion\n  
9676,     30199: add (- ) to many completion _files globs\n  
9677,     30197: complete subversion changelists\n  
9678,     30177: completion for fontconfig fonts\n  
9679,     30193: remnulargs() after poking into string in case length changes\n  
9680,     fix typo in ChangeLog\n  
9681,     Timothy Redaelli: file name manipulations\nin history can return NULL if HAVE_CANONICALIZE_FILE_NAME\n  
9682,     Holger Macht via Ismail: 30185: openSUSE directory missed from\nmodule definition\n  
9683,     30127: forbid fc from executing history lines in reverse\n  
9684,     Mariusz Glebocki: 30179: suppress stderr for listing services\n  
9685,     A Costa: unposted: grammar yo  ChangeLog-3 1: Fix typo to  definition \n  
9686,     seiler via Ismail: 30174: osc completion update\n  
9687,     Felipe: 30158: compgen test not useful with current bashcompinit\n  
9688,     Richard Hartmann: 30140: whitespace fix in mplayer completion\n  
9689,     Felipe Contreras: 31031 to 30137: various bashcompinit improvements\n  
9690,     Ben: 30118: sqlite completion\n  
9691,     Ben: 30117: new xclip completion\n  
9692,     30114: VCS_INFO_check_com: Remove a superfluous stat()\n  
9693,     missed log entry for 30110\n  
9694,     30111: Src/exec c: Fix segfaults with exec options \n  
9695,     Richard Hartmann: 30110: new vcsh Completion\n  
9696,     Stepan Koltsov: 30105: fix stgit delete completion\n  
9697,     typo\n  
9698,     users/16711: try to take account of PATH_DIRS option in command completion\n  
9699,     30101: add HASH_EXECUTABLES_ONLY option\n  
9700,     30098: missed commit log entry\n  
9701,     30098: Jun T : alternative to 30079: don t setlocale() in setlang() if LC_ALL set\n  
9702,     unposted: fix uninitialised variable warning in pcre\n  
9703,     30087: Christian Höltje: remove any hooks with prompt theme\n  
9704,     30084: `zle -T tc func  for zle testing of termcap output\n  
9705,     30081: make _main_complete independent of IGNORE_CLOSE_BRACES option\n  
9706,     30079: Src/params c: Restore `LC_ALL  when setting `LANG  \n  
9707,     30084: missing zsfree(argzero)\n  
9708,     queue_signals() to prevent adjustwinsize() loop on FreeBSD\n  
9709,     30048: C02cond ztst: Avoid [[ -N        on file-systems mounted `noatime \n  
9710,     30046: VCS_INFO_get_data_svn: Fix support for subversion version 1 7\n  
9711,     30069: replace empty parens with LPAR()RPAR() in an example \n  
9712,     30041: fix bash-style offsets for positional parameters when scalars\n  
9713,     T C  Hollingsworth: 30036: new systemctl argument completion\n  
9714,     30033: silence valgrind warnings\n  
9715,     unposted: update version to 4 3 15-dev-0 to avoid clash with 4 3 15 install\n  
9716,     unposted: release 4 3 15\n  
9717,     Simon Olofsson: fix matching of subversion help text\n  
9718,     29783: _update-alternatives: Add more options \n  
9719,     30021: _globquals: Add d flag  show what unit the digits are entered in \n  
9720,     30019: _tar: fix parsing of argument to -C \n  
9721,     29998: _git: fix a typo (--rerbose) \n  
9722,     30012 and 30020: $state_descr and prompt_preview_theme\n  
9723,     30020: prevent prompt_opts and zle_highlight from leaking out of\nprompt_preview_theme\n  
9724,     30012: add $state_descr\n  
9725,     30000 plus some comments: Better POSIXJOBs behaviour \nDon t restore default SIGTTOU etc  behaviour if still doing job control \nOnly carry on doing job control in subshell if it s a real\n(   ) subshell\n  
9726,     discussed in 29984: use m+7 for files more than a week old\n  
9727,     29991: allow explicit  d  for days in time qualifiers\n  
9728,     29961: _ssh: extend option completion \n  
9729,     29962: Actually return ret in _ssh \n  
9730,     Fix ChangeLog --- last entry was added in the middle instead of the top\n  
9731,     GI: 29977: caching and function definition fixes for _modutils\n  
9732,     Fix some zsh-users article references that have transposed or off-by-one\ndigits \n  
9733,     29918: Completion: Add new _remote_files() helper and use it to reduce code duplication \n  
9734,     29917: Completion/Unix/Command/_ssh: Tabs to spaces \n  
9735,     29409: Add xprop and xlsatoms completions \n  
9736,     unposted: remove duplicated  the  in compsys yo \n  
9737,     unposted: add NO_ignoreclosebraces to options for completion\n  
9738,     users/16614: update config guess and config sub from automake 1 11 1\n  
9739,     unposted: fix typo in ChangeLog\n  
9740,     29876: Update getent completion \n  
9741,     29955++: IGNORE_CLOSE_BRACES option\n  
9742,     29928: belated commit to fix OpenBSD redirection test\n  
9743,     Update version to 4 3 14-dev-0\n  
9744,     29952: fix cut n paste error in nanosecond timestamp support\n  
9745,     unposted: 4 3 14\n  
9746,     unposted: Fix typo in ChangeLog (memoryx) \n  
9747,     29940: metafy() added null termination even if buffer was not modifiable\n  
9748,     29934: Stef van Vlierberghe: uninitialised memory after lexer realloc\n  
9749,     unposted: fix documentation for  *  test output syntax\n  
9750,     unposted: fix documentation for  *  test output syntax\n  
9751,     unposted: fix documentation for  *  test output syntax\n  
9752,     unposted: fix documentation for  *  test output syntax\n  
9753,     29924: add ability to match test output using patterns\n  
9754,     complete directories in _nm\n  
9755,     29923: work around test problem with invalid file descriptor message\n  
9756,     Release 4 3 13\n  
9757,     Ismail Dönmez: 29920: NO_EXEC problem with arithmetic substitution\n  
9758,     unposted: 4 3 12-test-3\n  
9759,     29916: Completion/Unix/Command/_git: Prevent clash with _remote_files() in _ssh \n  
9760,     29915: new nm completion\n  
9761,     Ignacy Gawędzki: 29912: add  --  to ls in ssh completion\n  
9762,     Foudil Brétel: 29911: systemctl completion updates\n  
9763,     gi1242: users/16587: _lp tidy up\n  
9764,     Missed file \n  
9765,     29908: make MIME functions handle stacked suffixes\n  
9766,     29907: Jun T : remove declaration of unused variable\n  
9767,     users/16581: skip correction shortcut based on command table search when\nthe word is not in command position; on rejected command correction \nreset incremental path hashing \n  
9768,     g1242: printing completion improvements\n  
9769,     Akinori MUSHA: 29900: Backends/VCS_INFO_detect_svn: Adjust detection to support subversion 1 7 \n  
9770,     Haakon Riiser: 29895  29897: _ffmpeg  _nmcli\n  
9771,     29893: Completion/Unix/Command/_ssh: Update (mostly) for 5 9 \n  
9772,     29894: display and use previous replacement in replace-string\n  
9773,     29892: fix regular expression replacements in replace-string\nimprove variable save and restore in read-from-minibuffer\n  
9774,     29891: make zle -lL with arguments work\n  
9775,     Jun T: 29883: cast resource types to types they should be anyway\n  
9776,     users/16547: quote p4 arguments with colons in from _describe\n  
9777,     29879: metafy dlerror message to avoid corruption\n  
9778,     29867: pcre/ZTST_unimplemented change from Bart\n  
9779,     29844  29845: remove bogus\nerror on closing fd s 0 to 9; update test\n  
9780,     29865: don t compile pcre if no pcre-config\n  
9781,     29859: compadd handles its own options\n  
9782,     Jérémie Roquet: c f  users/16541:\nshould be  filename generation   not  file generation  in cond doc\n  
9783,     Foudil Brétel: 29842: major update to systemctl completion\n  
9784,     29838: metafy/unmetafy strings for PCRE matching (UTF-8 fixes)\n  
9785,     users/16492: OpenIndiana issue\n  
9786,     29823: Completion/Unix/Command/_perl: Update for 5 14 1 \n  
9787,     Suraj N  Kurapati: vcs_info-examples: Mention different ways to handle remote branch names in `vi-git-remotebranch()  \n  
9788,     update and tigy up for 4 3 12-test-2\n  
9789,     small _perforce documentation update\n  
9790,     29820: _pick_variant -b to match builtin\n  
9791,     29815: include mod_langinfo in documentation\n  
9792,     29799: swap order of RESET_PROMPT / REFRESH in adjustwinsize() \n  
9793,     unposted: cross-reference zmodload from the modules intro doc \n29769: follow-up 29677 to handle the case where thisjob == -1 \n  
9794,     Daniel Friesel: 29796: complete  webm in mplayer: typo\n  
9795,     Daniel Friesel: 29796: complete  webm in mplayer\n  
9796,     Luka Perkov: 29788: improved quilt completion\n  
9797,     users/16375: initialise nrefs on each loop in match tests\n  
9798,     29764  29765: fix various problems with _pgrep \n  
9799,     29776: fix case of double quotes in double-quote-style\nparsing where end character is something else\n  
9800,     29773: Marco Hinz: some perl modules weren t completed\n  
9801,     29762: bts completion tag update from Ansgar Burchardt \n  
9802,     29760: fix references to _i_ulwdirs\n  
9803,     unposted: Perforce completion for 2010 2 release\n  
9804,     29757: Doc/Zsh/compsys yo: Remove superfluous brace \n  
9805,     29756: Doc/Zsh/params yo: DIRSTACKSIZE is unlimited by default \n  
9806,     29755: add -O stop to to _ssh \n  
9807,     29733: Jonathan: add apt-get changelog completion \n  
9808,     29741: _zattr: add ret=0 and fix filename globbing \n  
9809,     29740: _wget: add --content-disposition \n  
9810,     29739: _rsync: redefine _rsync()  -e takes cuddled args\n  
9811,     29738: _ssh: Add PreferredAuthentications completion \n  
9812,     29736: mention when zstyle -t returns 1 \n  
9813,     users/16302: pattern matching for plain files was broken by 29444\n  
9814,     unposted: fix missing attribution in changelog\n  
9815,     29745: Completion/X/Command/_mplayer: fix -ss completion \n  
9816,     29744: don t mess up non  -A  cases in read -E fix\n  
9817,     users/16291: prompt_bart_preexec uses history text in the non- fg  case\nto avoid alias expansion \n  
9818,     29722  29706: fix two things in _mplayer \n  
9819,     29731: fix read -AE  test that and read -Ae\n  
9820,     users/16289: don t delete temporary files on disown \nDocument \n  
9821,     Belatedly add move-line-in-buffer \n  
9822,     29711: Avoid expensive  getent group  unless directories are group writable \n  
9823,     29707: Completion/Unix/Command/_ln: New _ln completer\n  
9824,     29705: add correct number of slashes when completing //TRANSLIT \n  
9825,     unposted: move _schedtool to correct dir\n  
9826,     29694: avoid overwriting current history word when not expanding an alias\nor history event in-place \n  
9827,     Use preexec hook to replace  fg  et al  with the jobtext of the resumed job \n  
9828,     users/16251: use preexec hook in prompt_bart_setup to capture jobtext \n29694: Avoid overwriting current history word when not expanding an alias\nor history event \n  
9829,     29703: crash when failing to parse process substitutions\n  
9830,     users/16253  users/16255: a nulstring should be split like an empty string\n  
9831,     Anthony R Fletcher: users/16260: new systemctl completion\n  
9832,     29698: Completion/Unix/Command/_git: Complete diff options for git log\n  
9833,     29690: new _twidge and _cryptsetup completers from Daniel Friesel \n  
9834,     29683: add -O forward to _ssh \n  
9835,     29682: new _schedtool completer\n  
9836,     29681: use [  to dereference region_highlights\n  
9837,     29650: Don t lose time info after a suspend+restore \n  
9838,     unposted: use pm->node nam to get names for parameters in errors\n  
9839,     29504: note when (#cN M) can t be used in place of # or ## \n  
9840,     29388  29680: clarify note about e:string: quoting \n  
9841,     29677: Do not allow external processes in a pipeline to become suspended\nwhen the end of the pipe is controlled by a builtin in the current shell\nwhich cannot itself become suspended \n  
9842,     unposted: fix capitalized word in the middle of a sentence\n  
9843,     unposted: fix a typo in a comment \n  
9844,     28852: Use syntax that doesn t depend on SHORT_LOOPS being set \n  
9845,     unposted: ChangeLog: put two spaces between name and email  remove non-initial tabs\n  
9846,     29673: Clarify what  other  in the ignore-line style does\n  
9847,     missed ChangeLog\n  
9848,     fix datetime autofeatures\n  
9849,     fix tests using zsh/datetime that I broke\n  
9850,     29674: add $epochtime to datetime\n  
9851,     29674: add $epochtime to datetime\n  
9852,     unposted: fix two typos in 29661\n  
9853,     29663: add $EPOCHREALTIME to zsh/datetime\n  
9854,     29654:  wait  should resume stopped jobs identified by process ID as well\nas by job number; temporary (?) workaround for pipelines getting lost if\nTSTP is delivered when a shell builtin is the tail of the pipe \n  
9855,     29661: Improved documentation for  var >    redirections\n  
9856,     29643: set incompfunc to zero when executing hook or trap function\n  
9857,     29644: work around _describe bug  plus cosmetic tweaks\n  
9858,     29633: more care with anonymous and other functions\n  
9859,     29635: Improve _complete_debug syntax and handling of fd s\n  
9860,     Luka Perkov: 29624: _quilt: Improve `push  and `pop  completion \n  
9861,     29626: arguments to anonymous functions shouldn t be parsed as command words\n  
9862,     29602 etc  etc : description of filename extension\n  
9863,     29561: missed file\n  
9864,     29618: Fix some syntax to not depend on SHORT_LOOPS being set \n  
9865,     29561: Allow closing of fd s not recorded by the shell\n  
9866,     29596: fix syntax to work with ksh_arrays\n  
9867,     * 29582  29589: Update handling of third-party Git commands\n  
9868,     unposted: Completion/Unix/Command/_git: Use _files  not _path_files \n  
9869,     unposted: Completion/Unix/Command/_git: Adjust some TODO items \n  
9870,     unposted: Completion/Unix/Command/_git: Update git-add completion to not\ncomplete already given file arguments and also to not list file completions if\nan option is being completed \n  
9871,     unposted: Completion/Unix/Command/_git: Fix bug in git-add completion that\nprevented -f option from being used correctly \n  
9872,     unposted: Completion/Unix/Command/_git: Move _gitk and _tig to correct\nlocation \n  
9873,     29272: Completion/Unix/Command/_git: Use return values correctly accross all\ncompletion functions \n  
9874,     29555: fix problem using open fd beyond max_zsh_fd\n  
9875,     users/16131: skip reading empty history file\n  
9876,     Matthieu Baerts: 29547: bzr: cdiff subcommand \n  
9877,     29542: fix crash in hbegin()  remove bad test\n29543: fix backslash-newline within words with histlexwords\n  
9878,     Eric Moors: 29531: Android debugger completion\n  
9879,     Removing superfluous word from ChangeLog entry\n  
9880,     unposted: contrib yo: Fix typo  paramter  to  Caught by debian\ s lintian \n  
9881,     Omitted log entry\n  
9882,     29530: $    ?     shouldn t cause an error with NO_EXEC option\n  
9883,     Daniel Bolton: 29529: _aptitude: Complete format specifiers with the `-F  option \n  
9884,     29523: _git-buildpackage: Use  #desc:  line for _git third-party add-on completion description \n  
9885,     29521: _git: Add `user-commands  support again \n  
9886,     29519: _git: Pick up addon completions from $fpath \n  
9887,     29527: _git: Make file-completion fallback optional \n  
9888,     29518: _git: Fall back to file completion for unknown sub-commands \n  
9889,     29526: vcs_info: Set `max-exports  early after certain `start-up  hooks \n  
9890,     Sebastian Ramacher: 29513: _apt: Add markauto and unmarkauto sub-commands \n  
9891,     Mikael Muszynski: complete  m4v files for mplayer\n  
9892,     Axel Beckert: 29506: use form SINGLE_LINE_ZLE in manual\n  
9893,     29503: Missing popheap() on failed autoload\n  
9894,     update version to 4 3 12-dev-1 because of wordcode changes\n  
9895,     unposted: clean up completion descriptions as per Etc/completion-style-guide\n  
9896,     Luka Perkov: 29493: handle apvlv\n  
9897,     29492: add argument handling to anonymous functions\n  
9898,     unposted: Remove additional for loop noticed by Mikael\n  
9899,     29491: remove some variables set but not used\n  
9900,     29490: add RLIMIT_RTTIME\n  
9901,     Michel Dos Reis: 29482: handle  gz kernel modules\n  
9902,     29483: add --servername completion to _vim\n  
9903,     29481: always return a matching job in findproc() but scan the whole list\nto prefer running jobs\n  
9904,     unposted: document change to brace parameter completion context in 29452/29459\n  
9905,     29472: findproc() needs at least to also return\tstopped jobs \n  
9906,     fix attribution\n  
9907,     29472: findproc() needs at least to also return stopped jobs \n  
9908,     Jeremy Sylvestre: 29468: add some ligatures and symbols to composed characters\n  
9909,     29462: fix warning\n  
9910,     29444: when _path_files is called with a pattern to match directories  do\nnot descend into subdirectories for fake-files unless some are defined\n  
9911,     fix whitespace in Functions/Zle/move-line-in-buffer\n  
9912,     29459: Further fixes for parameter flag completion \nplus drive-by fix for double-quoted parameter completion with flags\n  
9913,     29452: allow completion of parameter flags\n  
9914,     29451: $ ##stuff  removes stuff from the head of $#\n  
9915,     29422: fix g:: test failing in some locales\n  
9916,     29448: complete symlinks to files in _initctl too\n  
9917,     29438: complete dynamic directory names in command position\n  
9918,     29413:  print -S  for saving to history with lexical word split\n  
9919,     29434: contrib yo: Use PLUS() to avoid a + being silently dropped \n  
9920,     29412: _tmux: Disable sub-command completions if tmux is not found in `$path  \n  
9921,     Valentin Haenel: 29431: Hook example for signaling untracked files in git repositories\n  
9922,     users/16064: example widget for line motion inside multiline buffers\nwithout navigating history\n  
9923,     29416: Fix (mis-)uses of var() in vcs_info documentation \n  
9924,     unposted: update version to avoid confusion with release\n  
9925,     Jan Pobrislo: 29411: vcs_info: Major bzr backend update \n  
9926,     29410: skip autoload persistence test when zsh/example is not available \n  
9927,     users/16057: add _tree\n  
9928,     unposted: releaset 4 3 12\n  
9929,     unposted: Completion/Unix/Command/_git: Update git-branch completion to deal\nwith -r and -d correctly \n  
9930,     histlexwords splitting of  ;;  in case\n  
9931,     29385: document when local-directories is used instead of directories\n  
9932,     29387: add completion for at and friends\n  
9933,     29392: remove use-perl style docs\n  
9934,     29334: complete with _arguments -- for zsh\n  
9935,     29384: Add _comp_caller_options\n  
9936,     28364: document another special highlight\n  
9937,     29382: apply 29374 to zccmd_input too \n  
9938,     29329: fix undefined behaviour in math c\n  
9939,     unposted: document PROMPT_EOL_MARK can be empty\n  
9940,     29376: redefine _initctl too\n  
9941,     29365: redefine _make() in _make \n  
9942,     29331: note g:: flag in NEWS\n  
9943,     unposted: expand CONTRIBUTORS\n  
9944,     29374: exit ZLE immediately if exit pending when keypress expected\n  
9945,     changelog\n  
9946,     Bernhard Tittelbach: 29371: completion for initctl etc \n  
9947,     Transposed digits typo \n  
9948,     29367: update tests redirection of stderr \n  
9949,     29367  29368: avoid redirecting the xtrace of simple commands along with\ntheir standard error \n  
9950,     Belated commit: unposted tweak to description of the -l / LOGIN option \n  
9951,     29364: partial fix for make completion in dirs with spaces \n  
9952,     29335: update valgrind --tool= completion hack \n  
9953,     29338: fix pattern in _main_complete for insert-tab \n  
9954,     reorder ChangeLog\n  
9955,     29351: casts needed to pass integers through stdarg\n  
9956,     minor typo\n  
9957,     unposted: 4 3 11-dev-4\n  
9958,     29341  corrected: go programming language\n  
9959,     unposted: quote a -e with tt()  fix some of my changelog entries \n  
9960,     29328: Another missing backslash in _git  remove some not needed backslashes in array definitions \n  
9961,     29224: Support negative LEN in $ VAR:OFFSET:LEN  like bash \n  
9962,     29261: Add g:: flag \n  
9963,     29307  29308 + replies: Fix some doubled words in docs and comments \n  
9964,     29315: add a missing backslash \n  
9965,     unposted: Minor clarification in doc for -l option\n  
9966,     29312  users/16032: add  zparseopts -M \n  
9967,     29313: better sh emulation with SHWORDPLIT and empty $IFS\n  
9968,     29312  users/16032: add  zparseopts -M \n  
9969,     29306: typo fix from Laurent Fousse \n  
9970,     Nikolai Weibull: 29166: _git: Speed improvements for file completion \n  
9971,     29273: Completion/Unix/Command/_git: Fix __git_guard_number\n  
9972,     29278: Completion/Unix/Type/_path_files: fix use of the $skips\n  
9973,     29271: document _alternative -O name \n  
9974,     29282: hide prototypes for ZSH_HEAP_DEBUG with #ifdef s\n  
9975,     29276: always typedef Heapid for use by auto-generated header files \n  
9976,     29268: extra dupstring() for value to be used in completion match group\n  
9977,     fix typo (heap debug  not hash debug)\n  
9978,     29267: add -enable-zsh-debug and use for debugging completion matcher groups\n  
9979,     Danek: 29254: fix some compiler warnings\n  
9980,     Jérémie Roquet: 29258: mark a couple more functions for export \n  
9981,     unposted (late commit): updates for 4 3 11-dev-3\n  
9982,     29245: _xset: pass -O instead of -o to _describe \n  
9983,     Nikolai Weibull: 29124: Fix -l option in _git \n  
9984,     29205: don t sort processes in _pids\n  
9985,     29208: make vimatchbracket more useful in emacs mode\n  
9986,     29206: fix formatting\n  
9987,     29217: main shell now depends on zshcurses h and zshterm h\n  
9988,     rename system h to zsh_system h\n  
9989,     29214: use -I rather than explicit path to find headers\n  
9990,     29191 (Danek) and 29203 (with fixes): make TERMINFO variable special \n  
9991,     29195: Separate nameddir hash to avoid clash of\n bool  type on Solaris\n  
9992,     29193: badly placed variable declaration\n  
9993,     29165: use term h globally if needed at all \n  
9994,     users/15986: handle EINTR in zccmd_input\n  
9995,     29187: add a missing backslash \n  
9996,     29175: optimize freeheap\n  
9997,     unposted: Add missing word ( style ) spotted by Bart \n  
9998,     29170: vcs_info: Clarify check-for-changes style behaviour with the mercurial backend \n  
9999,     29163: update latest version claimed to 4 3 12\n  
10000,     29140: hide the  words  special variable so that it may be used as an\nordinary variable by bash completions \n  
10001,     Rocky Bernstein: 29135 (plus tweaks): compgen -W in bash completion\n  
10002,     unposted: some NEWS for next release\n  
10003,     Haakon: 29137: handling of flags in _ffmpeg\n  
10004,     29134: change termcap prototypes locally for AIX\n  
10005,     29129: reading of end of fd array\n  
10006,     Haakon: more ffmpeg tweaks\n  
10007,     tidy up\n  
10008,     Haakon Riiser: 29100: clean up of _ffmpeg\n  
10009,     29114: use same FTP sites list in FAQ and META-FAQ \n  
10010,     İsmail Dönmez: 29020: new openSUSE completions\n  
10011,     29107: replace overlapping strcpy with memmove\n  
10012,     _make: add _make- prefix to helper functions\n  
10013,     Use  const  qualifier in termcap prototypes \n  
10014,     unposted: Revert change from 28896  which did more evil than good \n  
10015,     Simon Ruderich: 29041: _git: Add completion for `tig  \n  
10016,     Felipe Contreras: 29028: _git: Add useful completion for `gitk  \n  
10017,     Jun T : 29031: increment global minfo state when inserting characters\non the line during interactive menu selection \n  
10018,     remove stray conflict marker\n  
10019,     29025: Test/A01grammar ztst: in select test  assert LINES=3 to print list\n  
10020,     unposted: INSTALL: Clarify at which point directories from --enable-additional-fpath are added to $fpath \n  
10021,     29027: _screen: support  /dev/ttyUSB0 [baud  -style arguments \n  
10022,     Valentin Haenel: 29019: Fix git stash completion (apply and pop subcommands) \n  
10023,     Set version to 4 3 11-dev-2\n  
10024,     Don t complete p4 reopen to same change \n  
10025,     29008  29012: Add `--enable-additional-fpath  option to add arbitrary directories to the default `$fpath  \n  
10026,     Simon Ruderich: 29004: update archive list\n  
10027,     Fix compiler warning due to state doff duplication \n  
10028,     Simon Ruderich: 28927: Fix  git tag -v  completion \n  
10029,     28998: use correct return status in _make\n  
10030,     28997: make --enable-libc-musl explicit\n  
10031,     gi1242+zsh: 28991: fix _svn caching policy\n  
10032,     Valentin Ochs: 28990: more changes needed for signals \n  
10033,     Valentin Ochs: 28990: more changes needed for signals \n  
10034,     Valentin Ochs: 28989: define _POSIX_C_SOURCE\nwhen testing for sigset_t in configure (needed for musl) \n  
10035,     users/15953: handle EINTR when using read -k or -q with -u or -p\n  
10036,     users/15945: various _yum corrections and updates\n  
10037,     28977: fix copying of uninitialized memory when trying to\nspell-correct a really long string \n  
10038,     Stef van Vlierberghe: 28965 (as posted in 28967):\nfindproc() should not return processes not marked as SP_RUNNING\n  
10039,     28959: Make the nvcsformats style be used if vcs_info is disabled \n  
10040,     28961: Add `no-vcs  hook \n  
10041,     28960: Add functions to add/remove static hooks \n  
10042,     28958: Support registering hooks independent of the context \n  
10043,     Add new vcs_info backend files to corresponding ` distfiles  file \n  
10044,     Mike Meyer: 28956  28957: Add fossil support to vcs_info \n  
10045,     Fix typo in _vim\n  
10046,     Mikael: 28948: compdef -e overrides interpretation of argument as service\n  
10047,     28926: No newline after the last line in listlist() when printing the list\nin a single column \n  
10048,     Mikael: 28941: fix $CURSOR access when metafied\n  
10049,     28936: $ #$  and $ #?  also didn t work\n  
10050,     Johan Sundström: 28890: New _npm completion \n  
10051,     Nikolai Weibull: 28913: Fix typo which broke `send-email  completion \n  
10052,     Nikolai Weibull: 28911: Only show modified files for git-checkout without tree \n  
10053,     Nikolai Weibull: 28914: Typo fix in `cvsexportcommit  description\n  
10054,     28896: unset `monitor  option while the widget is running to avoid accidential data loss \n  
10055,     Mikael: users/15875: fix _gpg to use _arguments return status\n  
10056,     Greg Klanderman: 28887: fix quoting in defs array\n  
10057,     28889: $ ##  should return the length of $#\n  
10058,     fix completion funny with dynamic directories\n  
10059,     users/15864: turn zsh_directory_name into a hook\n  
10060,     28886: Fix region_highlight dynamic updates for $PREDISPLAY\n  
10061,     Greg Klanderman: 28846: adapt prefix-needed zstyle to handle the\ncompletion function naming convention of a leading underscore \n  
10062,     28866: with POSIX_BUILTINS  command  prefix resets specialness\n  
10063,     Adrian: 28857: Functions/Prompts/prompt_bigfade_setup: use %d instead of $PWD\n  
10064,     28853: Fix typo: preceed -> precede\n  
10065,     28805: move stray text about the sched builtin away from the set builtin \n  
10066,     Baptiste: 28819: FreeBSD completion tweaks\n  
10067,     28823: make it an error to tie the same scalar to two different arrays\n  
10068,     Frank  28812 as modified in 28813:\nfix allocation of wide array in wcs_ztrdup()\n  
10069,     Nikolai Weibull s latest version \n  
10070,     28799: lexical analyser didn t stop early enough with completion words\n  
10071,     28795 plus typos noticed by Mikael: careful with forked shells\n  
10072,     28791: exit on errors with special builtins with POSIXBUILTINS\n  
10073,     28783: allow parentheses to be special in more places with SH_GLOB\n  
10074,     28784: exit on exec redirection error with POISX_BUILTINS\n  
10075,     28776: Let vcs_info detect very old mercurial repositories \n  
10076,     28773: add zle-history-line-set widget\n  
10077,     28772: Update regions in region highlight dynamically\n  
10078,     28761: file completion for sccs\n  
10079,     28762: fix coproc file desriptor closing\n  
10080,     28758: make `colors  function work with non-default option sets\n  
10081,     28750 plus extra comments:\ncase of completeinword file handling where we are completing\nafter the first component of a path instead of a middle component\nof a path\n  
10082,     28671: better cursor positioning after undo\n  
10083,     users/15738: better cursor positioning in modify-current-argument\n  
10084,     Lennart Weller: 28739: Fix svn detection in vcs_info\n  
10085,     Tweak so as not to fib about send-invisible return status \n  
10086,     Doc for send-invisible\n  
10087,     users/15759 (send-invisible)  users/15770 (HASH_DIRS)  28710 (_deb_packages)\n  
10088,     28710 use fgrep -v to diff package lists\n  
10089,     users/15770 HASH_DIRS tracks INTERACTIVE\n  
10090,     users/15759 for send-invisible\n  
10091,     28648: notmuch completion by Ingmar Vanhassel \n  
10092,     28647: gi1242+zsh@gmail com: more vnc completion options\n  
10093,     28646: gi1242+zsh@gmail com: new matlab completion\n  
10094,     28638: add $usergroups parameter\n  
10095,     Mikael: 28637: $ foo:0:  caused crash\n  
10096,     Atom Smasher: users/15715: new _zargs completion\n  
10097,     Use the -L option with yodl 3 x \n  
10098,     28631: gi1242+zsh@gmail com (as in 28633): completion updates\n  
10099,     28630: Ricky Zhou: fix crash with isident()\n28634: add test\n  
10100,     unposted: fix typo in pattern\n  
10101,     c f  28628: some extra notes on traps\n  
10102,     unposted: fix return types in 28617\n  
10103,     28611: remove unused special behaviour for vi mark 26\n  
10104,     28626: summarize differences between two types of trap\n  
10105,     28617: NO_EXEC option was doing too much work in\nparameter subscripting  parameter assignment  and globbing\n  
10106,     make prep depencies: missed ChangeLog entry\n  
10107,      gi1242+zsh@gmail com: 28594:\nVarious new and improved completions\n  
10108,     28590: make read return status non-zero on error\n  
10109,     Mikael: 28585: don t set ret=0 on failure in _mkdir\n  
10110,     unposted: fix argument type for write_loop()\n  
10111,     28588: fix textual display after =~ test\n  
10112,     28574: Ben: use bs format in ri\n  
10113,     28579: propagate failure status from _arguments in _du so that _complete\nwill try other completions \n  
10114,     28578: fix handling of numeric escapes that expand to  %  in printf\nformat strings  so they are not treated as format introducers \n  
10115,     28568: buffer overflow examining paths\n  
10116,     28557: Alexey: update\n  
10117,     28548: match psmisc in any case \n  
10118,     users/15662: array slice assignment with one index positive and one negative \n  
10119,     users/15663: some incomplete array assignment tests\n  
10120,     unposted: update version to 4 3 11-dev-1\n  
10121,     unposted: restore unintentionally removed  PHONY entries\n  
10122,     unposted: release 4 3 11\n  
10123,     unposted: release 4 3 11\n  
10124,     Paul 28538 / me 28540 / couple of unposted casts:\nuse char * for pointer arithmetic rather than void *\n  
10125,     28537: fix word splitting on  ((  when it was nested subshells rather than\narithmetic\n  
10126,     Completion/X/Utility/_x_arguments compdef line  Src/Makefile in  prep  \n  
10127,     27862: handle X11 versions greater than X11R6 in the compdef line\n  
10128,      prep  target depends on Makemod\n  
10129,     uncommitted: fix properly\n  
10130,     Mikael: 28583: typo\n  
10131,     Štěpán Němec: 28533: typos\n  
10132,     Mikael: users/15653: zle_highlight=(none) turns off suffix highlighting\nunposted: note suffix highlighting in NEWS\n  
10133,     Mikael: 28531: typos\n  
10134,     unposted: add notes to NEWS on (Z) parameter flag\n  
10135,     unposted: update for 4 3 10-test-3\n  
10136,     28530: replace (z+opts+) flag with (Z:opts:)  add reserved (_:flags:) \n  
10137,     unposted: another neatening of lexflags use in ZLE\n  
10138,     lexsave/lexrestore lexflags\nadd new LEXFLAGS_ZLE\n  
10139,     28528: Rearrange zleparse to lexflags\nAdd (z+n+)\n  
10140,     28526: remove bogus newline with stripped comment zplitting\n  
10141,     28510: add (z+c+) and (z+C+) parameter flags\n  
10142,     unposted: remove users/15622 _pick_variant change\n  
10143,     Mikael: 28480: allow PROMPT_EOL_MARK to be an empty string\n  
10144,     users/15621: compdef -p/-P <pat>=<service>\nusers/15622: use service with _pick_variant\n  
10145,     Mikael: 28487: fix docs to refer to current directory\nrather than $PWD\n  
10146,     28486: $compstate[parameter  needs untokenizing\n  
10147,     Mikael: 28484: GNU du completion\n  
10148,     unposted: NEWS: mention  START  END  STEP  enhancement \n  
10149,     28474  28478: extended  START  END  STEP  syntax\n  
10150,     typo\n  
10151,     28476: new set of tests for brace expansion\n  
10152,     28475: test that starting background job resets status\n  
10153,     28469: fix memory leak in anonymous function\n  
10154,     Add completion for help subcommand to _git \n  
10155,     28468: allow man page completion for files when / is present\n  
10156,     unposted: update and tidy NEWS\n  
10157,     workers/28461: flush stderr in PRINT_EXIT_VALUE handling\nusers/15583: update sticky-note\n  
10158,     users/15583: update with zstyles and for ease of use in zle-line-init \n  
10159,     28461: flush stderr in PRINT_EXIT_VALUE handling \n  
10160,     28559: flush shell output in PROMPT_SP handling\n  
10161,     Use newer PROMPT_SP behavior for hasxn terms too \n  
10162,     Sebastian Stark: users/15581: MacOS has  bundle DLL files \n  
10163,     Overwrite PROMPT_SP string if it should remain invisible \neven with an upcoming newline \n  
10164,     users/15580: fix MIME handler completion on fallthrough\n  
10165,     28434: make $ NAME:OFFSET  always use zero-offset\n  
10166,     28424: missed\n  
10167,     28424: new POSIX_STRINGS option\n  
10168,     28425: remove null arguments and untokenize\n  
10169,     28419: Doc/Zsh/expn yo  Src/subst c  Test/D04parameter ztst:\nKSH_ARRAY $ *:0:1  gives $0  etc \n  
10170,     28418: add $ NAME:OFFSET:LENGTH  substitution\n  
10171,     28377: document more alias problems\n  
10172,     28411: complete submodule and annex as subcommands; complete files when the subcommand is unknown \n  
10173,     28401: git-buildpackage completion from Felipe Sateler \n  
10174,     Mikael: 28389: empty section in java CLASSPATH\n  
10175,     28384: improve error message on assignment to a field of a read-only hash \nCVS ----------------------------------------------------------------------\n  
10176,     unposted: typo plus rephrase of alias quoting bit\n  
10177,     28375: clarify how to quote aliases from expansion\n  
10178,     28363: fix insert bug refreshing zle with wide characteter\n  
10179,     28360: NO_UNSET option should check parameters with trailing options\n  
10180,     not quite posted: screen: complete sessions after -S\n  
10181,     not quite posted  exactly: improvement to previous _man change\n  
10182,     Silas Silva: completion support for man -M\n  
10183,     Jérôme Pouiller: 28351: new help functions\n  
10184,     Mikael: 28356: don t increment old display line too far when refreshing\n  
10185,     unposted but c f  28353: omit sunsite dk from FTP list\n  
10186,     28345: make $ (D)     return a fully usable command line argument\n  
10187,     unposted: fix cross-references in doc for parameter substitution rules\n  
10188,     Mikael: 28343: fix setfacl completion\n  
10189,     Document the 28338 commit   Oops \n  
10190,     28339: backslash-newline history without HIST_LEX_WORDS\n28340: assignment to range of scalar variable with multibyte characters\n  
10191,     28332: backslash-newline with HIST_LEX_WORDS\n  
10192,     28338: keep =~ from inverting sense of subsequent tests (after &&/||)\n  
10193,     Ben: 28330: acroread completion for -openInNewInstance\n  
10194,     Ben: 28329: acroread completion for version 9 similar to 7 and 8\n  
10195,     28327: fix pseudolexical word splitting with RC_QUOTES\n  
10196,     28326: Fix numbering\n  
10197,     not yet posted: fix some more HIST_LEX_WORDS anomalies\n  
10198,     28319: (z) splitting oddities\n  
10199,     28285: zle-isearch-update and zle-isearch-exit\n  
10200,     unposted: note HIST_LEX_WORDS in NEWS\n  
10201,     Add missing file reference in recent entry \n  
10202,     28308/28310: HIST_LEX_WORDS  check for quick history read\n  
10203,     28309: fix infinite loop padding with extra wide characters\n  
10204,     Mikael: 28301: fix missing item line in doc\n  
10205,     28307: support new styles esp  vcs_info ones and allow quoted contexts again\n  
10206,     28295 plus tweak: use lexer to split words from history file\n  
10207,     unposted: update address of HTML manual\n  
10208,     28282: new function zlecallhook()\nfix arguments to zle-keymap-select\n  
10209,     28268: I/O to a terminated (or never created) coprocess emits a\n no coprocess  diagnostic  instead of either nothing or  bad file number  \n  
10210,     Baptiste: 28264: remove the need for sed from _ffmpeg\n  
10211,     28261: Julius Plenz: separate the options to _arguments \n  
10212,     28259: Finally fix some ancient problems with here-documents\n  
10213,     28258: fix undefined variable in traps\n  
10214,     unposted: add POSIX_TRAPS to NEWS\n  
10215,     Mikael: 28252: remove unnecessary loop causing errors\n  
10216,     unposted: note exit trap runs before exit hook\n  
10217,     28250: POSIX_TRAPS option\n  
10218,     28253: document -h argument to atribute commands\n  
10219,     unposted: safety on regexp errors in replace-string-again\n  
10220,     unposted: news for 4 3 11: another typo\n  
10221,     unposted: news for 4 3 11: another typo\n  
10222,     28244 with typo corrected: news for 4 3 11\n  
10223,     28237: new parameter ZLE_LINE_ABORTED\n28241: don t list  safe with bindkey -lL\n  
10224,     unposted: small typo in bindkey -lL documentation\n  
10225,     28229: can list individual keymaps\n  
10226,     28227: improved documentation on keymaps\n28226: improve bindkey -lL for aliased keymaps\n  
10227,     users/15350: explain rounding rules for size glob qualifier\n  
10228,     28188: better doc for limitations in overlap key maps\n  
10229,     28220 plus some comments: fix  HELLO=$HELLO shellfunc \n  
10230,     28202: unmetafy line for reversemenucomplete\n  
10231,     Mikael: 28190: fix reference to wrong manual page\n  
10232,     unposted: update Perforce completion for 2010 1\n  
10233,     28179  users/15314  users/15310  users/15200:\nvarious job and process control fixes\n  
10234,     28186: replace (   |   ) pattern-match with a loop over the alternatives to\navoid issues with pattern-quoting each alternative \n  
10235,     Mikael Magnusson: 28181: Remove a stray `)\  that caused a   RE  string to be output\n  
10236,     missed this\n  
10237,     unposted: more todo sh commands\n  
10238,     28172: mark processes as not stopped if sent SIGCONT\n  
10239,     28167: reset more variables on invalidating completion list\n  
10240,     28160  28164: fix redisplay problem after display reset\n  
10241,     28122 (Frank) / 28139: add ZLE_STATE\n  
10242,     unposted: tweak newline placement \n  
10243,     unposted: yet another update to _todo sh\n  
10244,     unposted: further update to _todo sh\nalso I forgot to commit the previous one\n  
10245,     28137: zsh-mime-handler typo: $argv[0  should be $argv[1 \n  
10246,     Simon Ruderich: 28136: typo in README\n  
10247,     users/15232: _path_files for paths  again\n  
10248,     28131: update MACHINES entry for Cygwin\n  
10249,     28131: update MACHINES entry for Cygwin\n  
10250,     Holger Macht: 28130: new osc completion\n  
10251,     Seth House: 28114: vcs_info  git: Fix revision lookup with packed repositories \n  
10252,     Seth House: 28115: Another git example vcs_info hook \n  
10253,     Daiki Ueno: 28112: fix character width assignment\n  
10254,     users/15219: PRINTEXITVALUE if terminated by signal\n  
10255,     always print job status if non-zero status and PRINTEXITSVALUE\n  
10256,     users/15217: use top-level status when redrawing prompt\n  
10257,     Mikael Magnusson: 28110: Fix yodl warning \n  
10258,     <hamer@hamer org ua>: 28104: fix completion crash due to NULL pointer \nActually commit the code \n  
10259,     <hamer@hamer org ua>: 28104: fix completion crash due to NULL pointer\n  
10260,     users/15204: in zfinit check for compctl before using\n  
10261,     c f  users/15202: use  autoload -Uz  consistently\n  
10262,     c f  users/15202: use  autoload -Uz  consistently\n  
10263,     28102: use lstat() when checking ignore-parents\n  
10264,     28101: Fix window completion for tmux version 1 3 and newer\n  
10265,     Update version to 4 3 10-dev-2\n  
10266,     28000: make the branch arg for  git log  optional \n  
10267,     28096: don t add $OLDPWD to recent dirs as we weren t there\n  
10268,     28081: cdr tweaks\n  
10269,     28092: let _getconf find more configuration variables\n  
10270,     28095: Fix two hard-coded invocations of the  git  command \n  
10271,     Seth House: 28084  28083: cleanups and new examples \n  
10272,     28093  based on Michel Lespinasse: 28090: Fix a problem with `check-for-changes  and freshly initialised repositories \n  
10273,     28073: allow #! scripts to search path if interpreter not found\n  
10274,     28078: update _xmlsoft\n  
10275,     Michael Hwang: 28075: add gpg-zip completion and other improvements to _gpg\n  
10276,      Jörg Sommer: 28063: suppress warning messages in rubber completion\n  
10277,     28068: contrib texinfo declaration messed up\n  
10278,     users/15165: Fix a warning about a missing macro in `contrib yo \n  
10279,     28065 plus unposted zsh mdd:\nadd cdr and related functions and docs\n  
10280,     28062: make the filename even longer\n  
10281,     28061: transpose filename halves  describe action better\n  
10282,     28060: xmlsoft --nodtdattr completion thanks to Vincent Lefevre \n  
10283,     27998: add recommended zshrc option \n  
10284,     28056: add option descriptions to _lynx\n  
10285,     28055: add some missing options to _vim\n  
10286,     28047: attempt to make locking with fc command more useful\n  
10287,     28052: remove duplicated completion of the cvs version subcommand\n  
10288,     unposted: fix typos in INSTALL and README\n  
10289,     28051: update elinks completion for version 0 12pre5\n  
10290,     Fix a date in ChangeLog \n  
10291,     Holger Weiss: Doc/Zsh/compsys yo: Fix a typo \n  
10292,     Holger Weiss: Completion/Unix/Command/_git: various fixes and enhancements \n  
10293,     28042: transpose-lines widget\n  
10294,     28038: improved handling of recurring events in calendar system\n  
10295,     unposted: extra note on ZSH_EVAL_CONTEXT\n  
10296,     28037: improved error messages for module autoloads\nof math functions and builtins\n  
10297,     28010: use getcwd() as fallback for zgetcwd()\n  
10298,     28010: use getcwd() as fallback\n  
10299,     Mikael: 28027: typo\n  
10300,     28026: use  zsh_directory_name c  for completion of dynamic directory names\n  
10301,     28025: (D) parameter flag\n  
10302,     Haakon Riiser: 28009: new ffmpeg completion\n  
10303,     28006: make zgetcwd() fall back to pwd \nonly use     if setting pwd\n  
10304,     unposted: fix typo in _urpmi parameter name\n  
10305,     Alexey: 27999: fix error message\n  
10306,     Simon Ruderich: 28002: fix bad _feh update commit\n  
10307,     unposted: fix incorrectly capitalized completion descriptions\n  
10308,     27983: colours could be output twice\n  
10309,     27994: better error for failed parameter autoload\n  
10310,     Holger Weiss: 27977: _git shouldn t return 0 if there are no matches \n  
10311,     27990: don t use return value from setupterm()\nto decide if module booted OK\n  
10312,     Daniel Friesel: 27982: feh completion update\n  
10313,     Mikael: 27981: complete (e) in subscript\n  
10314,     Mikael: 27980: completion typo\n  
10315,     27965  27966: Improve $ (q)    : newline appears as $ \\n; \n  
10316,     27976: more parameter substitution order description\n  
10317,     Seth House: 27971: vcs_info: Fix a bug that caused the mercurial backend to always return `default  as the branch name \n  
10318,     users/15078: completion for zsh-mime-handler\n  
10319,     27964: add back missing enditem() \n  
10320,     Simon Ruderich: 27953: vcs_info: changed default formats and actionformats \n  
10321,     Simon Ruderich: 27954: vcs_info: more minor documentation fixes \n  
10322,     unposted: fix typo in previous commit\n  
10323,     27951: Add $ZSH_EVAL_CONTEXT and $zsh_eval_contxt\n  
10324,     c f  27950: strip bogus whitespace from tests\n  
10325,     Seth House  Simon Ruderich and myself: 27948: various vcs_info changes\n\nHere s a diff-stat:\n\n Doc/Zsh/contrib yo                                |  506 ++++++++++++++-------\n Functions/VCS_Info/ distfiles                     |    1 +\n Functions/VCS_Info/Backends/VCS_INFO_detect_hg    |   14 +-\n Functions/VCS_Info/Backends/VCS_INFO_get_data_git |   35 +-\n Functions/VCS_Info/Backends/VCS_INFO_get_data_hg  |  295 +++++++++----\n Functions/VCS_Info/VCS_INFO_formats               |   26 +-\n Functions/VCS_Info/VCS_INFO_hook                  |   10 +-\n Functions/VCS_Info/VCS_INFO_quilt                 |  190 ++++++++\n Functions/VCS_Info/vcs_info                       |   30 +-\n Misc/ distfiles                                   |    1 +\n Misc/vcs_info-examples                            |  496 ++++++++++++++++++++\n 11 files changed  1303 insertions(+)  301 deletions(-)\n\nThe major changes are vast improvements for the mercurial (hg) backend\n(which was done almost entirely by Seth); improved documentation (mostly\ndone by Simon and again Seth); quilt support (as an addon and stand\nalone  see the manual for details); a number of new hooks and a fair\nshare of bugfixes \n  
10326,     users/15031: another file completion quoting fix \nuseful if path-completion is false or accept-exact-dirs is true\n  
10327,     27947: some cases where we should execute EXIT traps\n  
10328,     * 27813: Simon Ruderich: Completion/Unix/Command/_git: Complete some generic symbolic references as heads \n  
10329,     Bernd Zeimetz: 27931: completion for bts affects \n  
10330,     Mikael: 27929 + doc: global aliases shouldn t trigger HIST_IGNORE_SPACE\n  
10331,     27926: fix completion suffix when inserting last word\n  
10332,     27911: no completion colouring with old lists when turned off\n  
10333,     27908: Functions/VCS_Info/vcs_info: Avoid locale related problems\n  
10334,     unposted: update to _kfmclient\nunposted: update to _perforce for Perforce 2009 2\n  
10335,     fix previous commit\n  
10336,     27914: find usb ids in /usr/share/misc \n  
10337,     27912: presume that pci ids is uncompressed now \n  
10338,     users/15028 modified to unquote in one place:\nwith path-completion false or accept-exact-dirs true we need\nto unquote the string before sticking it in the current path\n  
10339,     27889: Force more use of GLOB_SUBST in parameters if ~ is used\n  
10340,      Akinori MUSHA: 27892: update service & init completion for FreeBSD\n  
10341,     unposted: update NEWS with path-completion style\n  
10342,     27798: Alexey I  Froloff: Completion/Unix/Command/_git: support for the `--interactive\  option of  git commit  \n  
10343,     unposted: add kindex entry for path-completion style\n  
10344,     unposted: slightly rephrase path-completion doc\n  
10345,     users/15011: add path-completion style\n  
10346,     unposted: calendar system updates:\nallow file locking to fall back; don t need dcop for kdialog\n  
10347,     27876: completion for axi-cache (from apt-xapian-index) \n  
10348,     Simon Ruderich: 27856 (tweaked): Git availability\n  
10349,     27865: fix problem with glob_subst in parameter subsitution\n  
10350,     Ben: 27589: improved -redirect\n  
10351,     27847: completion for uzbl \n  
10352,     27843: fix description of extended history format\n  
10353,     rationalise widths of non-printing characters to zero \n  
10354,     unposted: change new test in A02alias ztst to use cat\n  
10355,     27827: fix infinite loop in recursive alias at end of parsed string\n  
10356,     27823: fix memory access in 27822\n  
10357,     27823: fix memory access in 27822\n  
10358,     27812: display invalid bytes in multibyte characters specially\n  
10359,     Fix ZLE access to pushed history line\n  
10360,     FAQ update\n  
10361,     update calendar to run calendar_show in current shell\n  
10362,     Use // instead of :gs in parameter substitution\n  
10363,     unposted: fix new test in A01grammar ztst\n  
10364,     27804: don t hang in isearch if invalid character found\n  
10365,     unposted: calendar -s was broken by file locking change\n  
10366,     unposted: document that age functions uses zstat  not stat\n  
10367,     NEWS: PATH_SCRIPT\n  
10368,     27793 and follow ups: add PATH_SCRIPT option to find script using $PATH\n  
10369,     Mikael: 27797: delimit arguments to compadd in _expand_alias\n  
10370,     Alexey: 27789: use _arguments in _sudo\n  
10371,     27780: effect of backslashes in :s changed in _files\n  
10372,     27785: IFS doesn t have a null in it in POSIX\nunposted: note & needs quoting in :s in glob qualifier\n  
10373,     Simon Ruderich: 27779: Fix mistakes in vcs_info s documentation \n  
10374,     unposted: fix calendar bug updating repeating events\nallow calendar_edit to take arguments for editor\n  
10375,     Michael Hwang: 27773: document how linked lists are joined together\n  
10376,     Michael Hwang: 27773: document how linked lists are joined together\n  
10377,     _git: support for user-specific sub commands\n  
10378,     Frank: 27768: shut up cd some more\n  
10379,     27762: omit ssh known_hosts entries with port numbers from host completion \n  
10380,     users/14905 + 14906: problems with :s in parameter expansion\n  
10381,     users/14902: another go at strftime\n  
10382,     users/14900: ULONG_MAX is a valid return value from strotoul()\n  
10383,     users/14897: extra test in strftime builtin for time conversion\n  
10384,     27756: add OS file locking to calendar\nadd errflag test to loop over fcntl()\n  
10385,     users/14891: say that condition arguments don t do globbing\n  
10386,     27755: add  zsystem supports  to zsh/system\n  
10387,     27754 plus NEWS change: add  zsystem flock \n  
10388,     unposted: add debug code to zclose()\n  
10389,     27721: rationalise initialisation of file descriptors\n  
10390,     27721: rationalise initialisation of file descriptors\n  
10391,     27744: completion for pbuilder \n  
10392,     27731: Frank: turn off WARN_CREATE_GLOBAL in VCS_INFO\n  
10393,     Michael Prokop: 27725: apt --no-install-recommends \n  
10394,     Jonathan Beckman: 27728: _mplayer fix\n  
10395,     27722: bad error reporting and checking in conditions\n  
10396,     27723: eval shouldn t modify non-zero return statuses\n  
10397,     Frank: 27717: option terminators in VCS Info\n  
10398,     fix typo in compsys yo\n  
10399,     27715: fixes for current StGIT version\n  
10400,     unposted: update  distfiles\n  
10401,     Frank Terbeck  Seth House: 27712  22713  27714:\nVCS Info hooks and Mercurial improvements\n  
10402,     Frank Terbeck  Seth House: 27712  22713  27714:\nVCS Info hooks and Mercurial improvements\n  
10403,     Frank Terbeck  Seth House: 27712  22713  27714:\nVCS Info hooks and Mercurial improvements\n  
10404,     27710: update FAQ on advanced character sets\n  
10405,     unposted: FAQ dates\n  
10406,     27708: remove distracting initial semicolons in job outpt\n  
10407,     unposted: initially clear list for P glob qualifier\n  
10408,     Mikael: 27707: glob qualifiers with argument completion\n  
10409,     Frank: 27705: git notes completion\n  
10410,     Frank: 27702: git notes completion\n  
10411,     unposted: add P to list of glob qualifiers to complete\n  
10412,     unposted: typo in formatting doc for last patch\n  
10413,     27694: add P glob qualifier for prepending\n  
10414,     Frank: 27696: another tmux completion update\n  
10415,     Missed this  too\n  
10416,     27693: Missed this \n  
10417,     Geoff: 27693: rename underscore to avoid name clash\n  
10418,     unposted: a couple of typeset -g s and a comment\n  
10419,     27665: Frank: tmux completion\n  
10420,     27658: work around globbing problems in zip completion\n  
10421,     27658: work around globbing problems in zip completion\n  
10422,     Frank: 27679: better logic in VCS_INFO_get_data_git\n  
10423,     27675: Michael Hwang: fix crash in hash builtin\n  
10424,     27661: Ben: typo in manual page references\n  
10425,     27648  267650/1  unposted README change:\nTurn off repeat and turn on ulimit in emulation modes\n  
10426,     Mikael: 27647: _cp update\n  
10427,     unposted: minor doc tweak for regexp-replace\n  
10428,     Andrei  27644  ish: check for #! without a fork\n  
10429,     unposted: FAQ notes on zsh-nt sourceforge net \nterminal application mode horror\n  
10430,     unposted: FAQ notes on zsh-nt sourceforge net \nterminal application mode horror\n  
10431,     Mikael: 27642: missing glob qualifier completion\n  
10432,     users/14752: add #! line to zed\nallow script run with -i to exit on return\n  
10433,     Julien Jehannet: users/14751: typo in variable name in zed\n  
10434,     27638  based on Frank Terbeck  27633: SOURCETRACE option\n  
10435,     27617: graphicsmagick completion based on _imagemagick \n  
10436,     users/14732: Test X:/ rather than X: in Cygwin\n  
10437,     users/14723: invalid converted characters should never match valid ones\n  
10438,     27611: cache parameter values in math eval so subscripts are eval d once\n  
10439,     27608: fix memory for mbegin  mend & regexp test\n  
10440,     unposted: return status 1 if no replacement\n  
10441,     avoid Yodl error in cond yo\n  
10442,     Frank: 27606: tmux -d\n  
10443,     unposted: clarify documentation for 27604\n  
10444,     27604: substitution using regular expressions\n  
10445,     27600: extend =~ syntax to set positional variables for matches\n  
10446,     Frank: 27599: fix formatting documentation for VCS_Info \n  
10447,     Mikael: 27597: accepting zstyle completion unnecessarily hard \n  
10448,     Joakim Rosqvist: 27591 as modified in 27594:\nKEYBOARD_HACK variable\n  
10449,     missed ChangeLog entry\n  
10450,     Frank Terbeck: 27586: more tmux completion support \n  
10451,     27577: sergio: (%) is not needed in zcalc prompt since PROMPTPERCENT is obeyed\n  
10452,     27579: allow ssh -S argument to follow immediately the option letter \n  
10453,     27578: allow ionice -c and -n arguments to immediately follow the option letters \n  
10454,     27566: add ulimit -c hard and immediate return on argument error\n  
10455,     27565: sanity check numeric arguments to ulimit\n  
10456,     Jesse Weinstein: 27553: improve doc phrasing\n  
10457,     27559: espeak language codes and voice names \n  
10458,     Jesse Weinstein: 27558: completion for espeak \n  
10459,     27556: sanitize more variables in lexsave()\navoiding crashes in inner loops\n  
10460,     Chris Lamb: 27545: runserver_plus and files completion for django \n  
10461,     Add symlink-based hist-file locking \n  
10462,     Greg: 27529: ULR schemas in subversion completion\n  
10463,     Check the return value of all pipe()  read()  and write() calls \nGets rid of all the remaining  ignoring return value  compiler\nwarnings  and makes some read/write operations safer by ensuring\nthat an EINTR is handled \n  
10464,     Get rid of some  ignoring return value  compiler warnings\nand provide read_loop() and write_loop() functions \n  
10465,     unposted: new run-help-p4\n  
10466,     27492 based on Jörg Sommer: 27473: fix run-help alias problem \n  
10467,     27518: suggest some more configure argument patterns\n  
10468,     unposted: add --exclude-dir grep option\n  
10469,     Alexey I  Froloff: 27470: _git update\n  
10470,     Fixed --human-readable options and arg-acceptance of -f \n  
10471,     Michael Prokop: 27504: fix typo with dput --delayed \n  
10472,     27503: fix crash with hook functions\n  
10473,     27494: reportbug --paranoid  --no-paranoid  --body  and --body-file \n  
10474,     27479: prevent completions split across backslash-newline\nfrom causing too much mayhem\n  
10475,     Mikael: 27453: highlighting for removable completion suffixes\n27466: document it\n  
10476,     Frank: 27450: another tmux completion update\n  
10477,     Frank Terbeck: 27458: set-option -w completion \n  
10478,     Ingmar Vanhassel: 27457: add hilite as a precommand \n  
10479,     Ingmar Vanhassel: 27456: complete  tar lzma   tbz   txz \n  
10480,     27448: mild understanding of xz-compressed tarballs \n  
10481,     27446: Frank: tmux completion update\n27447: document change for waiting for $!\n  
10482,     27442 plus tweak: wait returns status for $! even if exited\n  
10483,     Alexey: 27445: ruby completion argument\n  
10484,     27441: add  sa  for suffix alias completion highlighting\n  
10485,     Richard Hartmann: 27440: typos in module warnings\n  
10486,     Baptiste Daroussin: 27431: _make: fix for FreeBSD\n  
10487,     27430: extend make variable value completion\n  
10488,     27429: _make: restore variable value completion\nmake indentation more standard\n  
10489,     Michael Hwang <michael a hwang@gmail com>: 27428:\nimproved _make\n  
10490,     Alexey: users/14588: ztodo function and completion\n  
10491,     Alexey: users/14588: ztodo function and completion\n  
10492,     27415: Src/Zle/computil c: comparguments  *::     descriptions could step\non sequentially earlier descriptions when completing for a word other than\nthe last word on the command line \n  
10493,     27415: Src/Zle/computil c: fix comparguments  *::     descriptions \n  
10494,     27417: fix completion after gpg --verify-files \n  
10495,     unposted: change bracket colors default to yellow when in an ssh session \n  
10496,     Greg: 27416: repository path enhancement\n  
10497,     unposted: improvement to whole-path Perforce completion\n  
10498,     Greg Klanderman: 27409: subversion and URL paths\n  
10499,     c f  27408: remove _mercurial and put back some 2> /dev/null\n  
10500,     Frank Terbeck: 27407: tmux switch-client completion\n  
10501,     Benjamin R  Haskell: 27399: argument problem in env completion\n  
10502,     Benjamin R  Haskell: users/14565: argument problem in env completion\n  
10503,     Baptiste Daroussin: 27379  27381: BSD completions\n  
10504,     Greg K: Replace 27377 with 27391 \n  
10505,     users/14548: Src/Modules/termcap c: prevent libtermcap from exiting on an\nunknown terminal type\n  
10506,     Alexey Froloff: 27367: Completion/Unix/Command/_ri: update for Ruby 1 9\nand later\n  
10507,     users/14548: Src/Modules/termcap c: prevent libtermcap from exiting\nAlexey Froloff: 27367: Completion/Unix/Command/_ri: update for Ruby 1 9\n  
10508,     Frank Terbeck: 27364: Completion/Unix/Command/_tmux: fix cut n paste error\n  
10509,     Frank Terbeck: 27364: Completion/Unix/Command/_tmux: fix cut n paste error\nin descriptions\n  
10510,     Greg Klanderman: 27377 (slightly tweaked): Completion/Unix/Command/_rm: fix\nignored (duplicate) file names\n27368  27369: FEATURES: replace an incorrect example\n  
10511,     Greg Klanderman: 27377 (slightly tweaked): fix ignored (duplicate) file names\n  
10512,     27368  27369: replace one incorrect example with two correct ones\n  
10513,     Mikael: 27362: some more attr fixes\n  
10514,     Frank Terbeck: 27359: completion for tmux 1 1 \n  
10515,     Frank Terbeck: 27359: completion for tmux 1 1 \n  
10516,     27357: fix compiler warnings in attr module\n27358: fix error if $0 altered in sourced file\n  
10517,     Frank Terbeck: 27353: more VCS_Info sanity checks\n  
10518,     Jun T : 27351: zdelattr missed first argument\n  
10519,     Mikael: 27347: enhance extended attribute support\n  
10520,     Mikael: 27337: fix bug searching for / when\nscanning symlinks in cd\n  
10521,     unposted: brief calendar display\n  
10522,     unposted: Functions/Calendar/calendar: brief display failed on single lines\n  
10523,     unposted: update config guess and config sub to 2009-06-10 and 2009-06-11 versions respectively \n  
10524,     27315: update for mpc 0 17 \n  
10525,     27314: update list of mpc search types \n  
10526,     unposted: more local variables needed\n  
10527,     unposted  c f  27313: mailing list and website moved\n  
10528,     Mikael: 27312: valgrind option changes\n  
10529,     Frank Terbeck: 27309: VCS_INFO doc\nHolger Weiss: 27310: typo in matcher doc\nJesse Weinstein: 27310: redundant diff option\n  
10530,     27308  based on 27305 from Edgar Merino:\nsearch for init scripts in other locations\n  
10531,     Lionel Flandrin: 27307: enhanced Mecurial VCS_INFO support\n  
10532,     Apple opensource patches suggested by Jun T  in 27300\n  
10533,     Jun T : 27296: bad preprocessing of Mac OS Snow Leopard headers \n  
10534,     Jun T : 27292: fix length in socket call\n  
10535,     27286: Made movefd() return the targetfd on success   Added\na little more error checking in the callers of movefd() \n  
10536,     27284: better use of movefd()\n  
10537,     27283: failure to dup fd caused mayhem\n  
10538,     users/14411: Src/hashtable c: only hash stat-able executable regular\nfiles as commands\n  
10539,     Darel Henman: users/14412: fix confusion in getopts documentation\n  
10540,     27281: Holger Weiss: fix example of global history substitution\n  
10541,     Mikael: 27279: doc tweaks\n  
10542,     Baptiste Daroussin: 27277:Improve csup completion \n  
10543,     users/14387 (tweaked): alternative zsh syntax is not going to be removed\n  
10544,     Greg Klanderman: 27262: prefixes incorrect with accept-exact-dirs\n  
10545,     Baptiste Daroussin: 27271: remove awk dependence\n  
10546,     27270: zfcd_match: remove awk dependence\n  
10547,     Baptiste Daroussin: 27268:\nremove Perl dependency from pick-web-browser\n  
10548,     Baptiste Daroussin: 27267 plus 27269 plus doc:\nremove perl dependency\n  
10549,     Greg Klanderman: 27259 / 27260: missing ChangeLog entry\n  
10550,     Greg Klanderman: 27259 / 27260: unset parameter in file prefix\n  
10551,     Greg Klanderman: 27255: some consistency fixes\n  
10552,     27236: use $CPPFLAGS with $CPP in configure ac\n  
10553,     Holger Weiss: 57248: fix anchoring for vi searches\n  
10554,     27247: zmv checking for **/ was wrong\n  
10555,     27244: Daniel Friesel: new feh completion\n  
10556,     27243: reverse indexing of arrays with beginning index out of range returned\nwrong value\n  
10557,     27240: fix fix for lexing in test builtin\n  
10558,     27233: improved _values handling of optional arguments\nmount -o loop= argument is optional\n  
10559,     27228: clear function for zsh-newuser-install\n  
10560,     27219: _files -F <array> wasn t correctly handled\n  
10561,     27218: don t unquote $line generated in comparguments for _arguments\n  
10562,     27217: fix typo in assignment in new user script\n  
10563,     27216: set chwords to NULL when freed\n  
10564,     users/14307: end of command line in completion with variant zsh syntax\n  
10565,     Andrew Psaltis: 27212: Slackware supports extra tar formats in pkgtool\n  
10566,     27211: handle Cygwin device files & drives specially in compfiles\n  
10567,     27209: fix breakage from 27208 \n  
10568,     Mikael Magnusson: 27204: remove stray curly brace \n  
10569,     27208: try to do the right thing when applying file-sort to extant glob qualifiers \n  
10570,     27203: treat aptitude build-depends just as aptitude build-dep \n  
10571,     27202: unbreak _GNU_SOURCE on Debian GNU/kFreeBSD \n  
10572,     users/14267: files added by ignore-line should be quoted\n  
10573,     27188: improve read -q by using read -k code\n  
10574,     27181: extend POSIX_CD to handle target directory printing behaviour\n  
10575,     27178: FAQ---quoting function names to stop expansion is always(ish) safe\n  
10576,     27178: FAQ---quoting function names to stop expansion is always safe\n  
10577,     27159: restore pre-23067 behavior of SIGINT outside a  wait   so that\nforeground jobs that handle or ignore interrupts are not orphaned \n  
10578,     27167: add POSIX_CD option to test     after CDPATH\n  
10579,     27160: tweaks to reportbug completion  thanks to Vincent Lefevre \n  
10580,     27128: complete tex files for latexmk \n  
10581,     users/14240: assignment before a function definition is an error\n  
10582,     Eric Blake: 27151: cd handling with initial // for Cygwin\n  
10583,     Andy Spencer: 27148: ignore build directories when searching for\nkernel modules in modutil completion\n  
10584,     27134: Close SHTTY on exec \n27135: POSIX_JOBS leaves MONITOR on in subshell and doesn t save\nparent job table \n  
10585,     27131: allow MONITOR in subshell by not closing SHTTY\n  
10586,     27129: fix status at start of function  command subst  etc \n  
10587,     27127: Vincent Bernat: handle bts fixed and bts notfixed \n  
10588,     27126: a few more contexts where executing empty lists gives status zero\n  
10589,     27125: handle nested use of colour code buffer allocation\n  
10590,     27106: reset status on command that expands to empty\n27122: add POSIX_JOBS option\n  
10591,     27119: job output to stdout if non-interactive\nno automated jobs notifications\n  
10592,     27112: allow jobbing output if not interactive\n  
10593,     Eric Blake: 27109: don t attachtty() if not interactive\n  
10594,     Eric Blake: 27109: don t attachtty() if not interactive\n  
10595,     Eric Blake: 27109: don t attachtty() if not interactive\n  
10596,     27110: Only turn on MONITOR if set explicitly or INTERACTIVE\n  
10597,     27100: Allow MONITOR option in non-interactive shells for testing \n  
10598,     27092: missing then-clause for if wasn t an error\n  
10599,     Brendan Cully: 27088: new Mercurial completion\n  
10600,     27087: change return codes from failed    \n  
10601,     Nicolas Pouillard: 27028: new darcs completion\n  
10602,     27085: add accept-search handling to scrollist keymap\n  
10603,     27083: non-zero status on failures to find or execute file in    \n  
10604,     27080: it wasnt possible to exit menu selection cleanly\n  
10605,     27079: save lexical context in test builtin\n  
10606,     unposted: support lzma compression of man pages used in Mandriva\n  
10607,     27061: Nicolas Lalevée: importing files into ant\n  
10608,     Greg Klanderman: 27057: %e and %f time formats were swapped\n  
10609,     Frank Terbeck: users/14207: make variable local\n  
10610,     Frank Terbeck: 27049  27050  27051  27052: VCS_INFO improvements\n  
10611,     27048: avoid multiline prints which break CSH_JUNKIE_QUOTES \n  
10612,     27305: fix GNU man option handling in run-help\n  
10613,     27304: add $ (q-)    flag\n  
10614,     Baptiste Daroussin: 27033: FreeBSD portaudit and mount completion\n  
10615,     Baptiste Daroussin: 27030: update _file_systems for FreeBSD\n  
10616,     Baptiste Daroussin: 27029: new pfctl completion\n  
10617,     Colin Watson: 27027: completion for bzr switch \n  
10618,     Akinori MUSHA: private communication: fix typo in _subversion\n  
10619,     update version recorded in archive to 4 3 10-dev-1\n  
10620,     Tweak find to prune a  git dir   This allows a  git/cvs dir to exist\nwith a cvs checkout in it \n  
10621,     release 4 3 10\n  
10622,     Jesse W: 27024: allow overriding TEXI2HTML \n  
10623,     27025: define _GNU_SOURCE on the Hurd \n  
10624,     27021: fix length of saved glob flags in pattern matching\n  
10625,     Jun T : 27010: _date in Darwin\n  
10626,     26998: use --htmldir  restore zsh default if unchanged from configure default\n  
10627,     Ingmar Vanhassel: 26990: tidy up more HTML files\n  
10628,     Michael Hwang: 26986: formatting\n  
10629,     Julien Langer: 26978: stgit patch name completion\n  
10630,     26982: Julien Langer: support stgit in VCS_Info\n  
10631,     26970: Greg Klanderman: _subversion: fix caching \n  
10632,     26939: clean up xmms2 jump completion \n  
10633,     Patrick Schoenfeld: 26977: complete  t files for perl \n  
10634,     26975: compilation issues in bin_print()\n  
10635,     users/14143 plus tweak in padding code:\nuse default IFS if IFS is unset\n  
10636,     26973: zmathfuncdef enhancements\n  
10637,     4 3 9-dev-5\n  
10638,     Greg Klanderman: 26972: fix problem ni 26964 \n  
10639,     Greg Klanderman: 26964 (modified): PROMPT_EOL_MARK\n  
10640,     Paul Ackersviller: 26962: updated HP-UX dynamic linking\n  
10641,     Paul Ackersviller: 26959: delay before removing test modules\nusers/14118: fix test and assignment in prompt_special_chars\n  
10642,     26958: Fix reallocation problem in prompts\n  
10643,     26957: Fix some memory problems with read builtin\nunposted: fix a WARN_CREATE_GLOBAL warning\n  
10644,     26956: tidy up some zle variables for module unloading\nnote issue found on HP-UX\n  
10645,     unposted: fix _getfacl\n  
10646,     26950: warn on failed attempt to change user or group ID\n26593: print warning but dont fail test if simple Unicode conversion fails\n  
10647,     update _sudo\n  
10648,     26984: ensure zle window sizes are reset with video data\n  
10649,     26954: read should pass through invalid multibyte characters\n  
10650,     26937: have `git log` complete files after branch/range \n  
10651,     martin f  krafft: 26922: extend xmms2 completion\n  
10652,     users/14076 + workers/26906: Completion/Unix/Command/_ssh: fix autoremoval\nof some suffixes \n  
10653,     26895: restrict multibyte sorting test to western European charcters\n  
10654,     26900: Ben Haskell: ssh -Y  -x and -X are mutually exclusive\n  
10655,     26899: Ingmar Vanhassel: complete ssh -Y\n  
10656,     26898: Ingmar Vanhassel: dont link libbind if not needed\n  
10657,     Paul Ackersviller: 26883: naming of UTF8 locales on HPUX\n  
10658,     unposted: back off 26862\n  
10659,     unposted: some  distfiles\n  
10660,     unposted: update to 4 3 9-dev-3\n  
10661,     26876 with updated documentation: add ZLE_ REMOVE SPACE _SUFFIX_CHARS\n  
10662,     26879: complete apt-get purge as a subcommand\n  
10663,     26877: handle apt-get purge \n  
10664,     c f  26867: remove extraneous  $  \n  
10665,     Greg: 26862: remove unnecessary print\n  
10666,     26861 from Greg plus 26863: global parameters in _read_comp\n  
10667,     26858: use zsh instead of sh in exec -l test\n  
10668,     26853 + typo fix: package docs\n  
10669,     26852: make terminfo mdd test agree with one in terminfo c\n  
10670,     Kalle Olavi Niemitalo: 26850: fix breakage in git write-tree and git send-pack \n  
10671,     users/14033 as modified by users/14037 and added doc: allow colon quoting\nin matches in _describe\n  
10672,     Modify  gitignore to match  cvsignore change \n  
10673,     users/14041: bind : by default to execute-named-cmd in vicmd mode\n  
10674,     unposted: change version to 4 3 9-dev-2\n  
10675,     Jesse W: 26840: texi2html instructions\n  
10676,     unposted: _mdmadm -> _mdadm\n  
10677,     26839: add --node-files option to texi2html\n  
10678,     Alexey I  Froloff: 26830: stripping of manual page suffixes in completion\n  
10679,     Evgenii Terechkov: 26831: filter out redundant information in _screen\n  
10680,     26829: Alexey I  Froloff: _rsync miscounts fields\n  
10681,     Tomasz Pala: users/14030 14031 14032: Linux completion updates\n  
10682,     Bart: 26822: infinite loop in variable completion looking for subscript\n  
10683,     Bart: 26822: infinite loop in variable completion looking for subscript\n  
10684,     Frank Terbeck: 26816 to 26820: VCS_Info updates\n  
10685,     26806 (doc tweaked): Add CORRECT_IGNORE variable\n  
10686,     Simon Ruderich: 26800: Completion/Unix/Command/_git: fixes for  git add  completion \n  
10687,     26801: add completion for calendar function\nadd tracking of precommand modifiers that are in effect\n  
10688,     26797: yet more changes to posix_aliases information\n  
10689,     26795: further warning in POSIX_ALIASES\n  
10690,     26783: new _user_expand completer\n  
10691,     Jon Strait: 26778  26781: extra options for PCRE matching\n  
10692,     Michael Hwang: 26776: improved column alignment with print -c -P\n  
10693,     26774: cd to $HOME on failure in preference to /\n  
10694,     26772: better error handling and fix runaway chdir on failed cd\n  
10695,     26769: fix finger trouble in 26767\n  
10696,     26748: c modifier to add command path\n  
10697,     26767: fix file descriptor leak in 26763\n  
10698,     26763: fix problem on failed cd -s to relative path\n  
10699,     tidy up from 26625\n  
10700,     Bart: 26761: typo in realpath() check\n  
10701,     Mikael: 26759: missing here-document terminator\n  
10702,     26756: handle completion following :s modifier\n  
10703,     26754: tweak zgetdir() and test for realpath()\n  
10704,     26752: fix   / removal and metafication in :a and :A modifers\n  
10705,     Frank Terbeck: 26751: suppress WARN_CREATE_GLOBAL warning\n  
10706,     Frank Terbeck: 26751: suppress WARN_CREATE_GLOBAL warning\n  
10707,     26746: tweak history modifier completion\n  
10708,     A few more  gitignore improvements \n  
10709,     26744: completion of history modifiers in normal command line arguments\n  
10710,     users/13937  users/13939: configure ac  Src/jobs c: check for\nand if available use setproctitle() for  jobs -Z  \n  
10711,     Michael Hwang: 26731 with cosmetic changes: add  a  and  A  modifiers\n26736: document the above\n  
10712,     26735: Check some function return values for failures   Gets rid of\nsome compiler warnings  and improves error handling/notification \n  
10713,     users/13910: spawnjob() should output to tty\n  
10714,     26699: dependencies for config modules\n  
10715,     Adding  gitignore for the mirrored git repo \n  
10716,     26713: Completion/Zsh/Type/_globflags: add #autoload\n  
10717,     26713: add #autoload\n  
10718,     users/13902: make isearch return status useful\nadd LASTABORTEDSEARCH variable\n  
10719,     26723: centralise test for matching glob qualifiers in file completion\n  
10720,     users/13903 fix vi search prompt and repeat\n  
10721,     update LICENCE year to 2009\n  
10722,     print message if we give up trying to crate a lock file with hard links\n  
10723,     26705: multibyte characters with Meta in $ (%)foo  etc \n  
10724,     26072: lexsave()/lexrestore() to fix bug with sourcing from  funny  places\n  
10725,     derf@sievert tabularazor org: 26701: new devtodo completion\n  
10726,     26697: test for Linux- and Mac-style xattr functions\n  
10727,     unposted: fix definition of _perforce_whole_path in 26690\n  
10728,     add whole-path style to _perforce completer\n  
10729,     unposted: add POSIX_ALIASES and POSIX_IDENTIFIERS to FAQ\n  
10730,     26686: problem storing long $_ using VARARR()\n  
10731,     26683: add some notes on LC_CTYPE\n  
10732,     fix the cap c patch\n  
10733,     26680: still more metafy() stuff in cap\n  
10734,     26677: cap module needs some unmetafy() calls\n  
10735,     26676: redirect POSIX_ALIASES readers to reserved word doc\n  
10736,     26675: add POSIX_ALIASES option\n  
10737,     26671: various minor attribute tidy ups\n  
10738,     Mikael Magnusson: 26670: add zsh/attr module\n  
10739,     Jun T : 26667: parentheses in doc causing problems\n  
10740,     26665: Src/utils c: fix one incorrect test in 26614 \n  
10741,     Lionel Flandrin: 26625: inopportune interrupt wrecked terminal set up\n  
10742,     26614 + 26615: history -t <fmt> plus ztrftime  -  format modifier\n  
10743,     Frank Blendinger: 26656: improved gnupod completion \n  
10744,     Chris Lamb: 26655: complete custom Django management commands \n  
10745,     Daniel Friesel: 26636: complete  flac files for mplayer \n  
10746,     26609: _path_files: better (?) fix for globcomplete \nunposted: _pick_variant: explicit rather than implicit success return \n  
10747,     26622: improve comments within $(   ) and add test\n  
10748,     26617 c f  Tomáš Smetana  26610: comments weren t handled in $(   )\n  
10749,     Frank Terbeck: 26612: VCS INFO documentation fix\n  
10750,     26606: fix doubled -s in path completion in some cases\n  
10751,     26602: history substitution buffer could overflow with no test\n  
10752,     c f  26586: rename yylex to zshlex and yytext to zshlextext\n  
10753,     Mikael Magnusson: 26596: new git options \n  
10754,     26593: complete multiple files for lintian \n  
10755,     26588: don t expand aliases in run-help\n  
10756,     26584: use bind/netdb h where appropriate\n  
10757,     26583: use HOOK_FUNCTIONS more widely\n  
10758,     Jörg Sommer: 26582\n  
10759,     26580: Mikael: typo \n  
10760,     26580: Mikael: typo \n  
10761,     26579: fix hook function documentation\n  
10762,     unposted:  cvsignore patchlevel h\n  
10763,     Arkadiusz Miskiewicz <arekm@maven pl>: 26573:\nforce compdump overwrite\n  
10764,     Danek Duvall:  26571:  Additions for Solaris\n  
10765,     Richard Hartmann: 26558: modify option description on invocation again\n  
10766,     26565: fix breakage in 26482 \n  
10767,     26560: document autoload -z/-k (finally)\n  
10768,     26546  26556: sticky emulation for functions defined in emulate     -c    \nenvironments  plus documentation\n  
10769,     unposted: slightly hacky change to  age   currently undocumented\n  
10770,     Richard Hartmann: 26550: document unchangeable options better\n  
10771,     Frank Terbeck: 26549: VCS_Info improvements: check for changes in git\n  
10772,     Richard Hartmann: 26547: index NOoptions without underscore\n  
10773,     26545: new  emulate  test\n  
10774,     26544: complete pdf files as well as ps \n  
10775,     Greg Klanderman: 26538: sanitise options in _read_comp\n  
10776,     26535: Richard Hartmann: typo in recent path\n26536: Richard Hartmann: option index entries for  NO  options\n  
10777,     26530: emulate -c restores all options on return\n  
10778,     Allan Caffee <allan caffee@gmail com>: 26532:\nindex options under names without underscore  too\n  
10779,     unposted (late ChangeLog commit): description of highlighting in zle\n  
10780,     unposted: typo in previous patch spotted by Mikael\n  
10781,     26517: fix naming of prompt expansion section in Unix manual\n  
10782,     unposted: fix release number in last checkin\n  
10783,     26513: README: note      completion bug\n  
10784,     TBD: documentation of highlighting\n  
10785,     26504: document that local_options does not restore everything\n  
10786,     26494: completion for pydoc \n  
10787,     Ingmar Vanhassel: 26474: add  git describe --tags  completion and fix typos \n  
10788,     Ingmar Vanhassel: 26473: complete  git commit --cleanup=  and  git commit --allow-empty  \n  
10789,     Ingmar Vanhassel: 26472: complete  git add --intent-to-add  \n  
10790,     Ingmar Vanhassel: 26471: update  git rebase  completion \n  
10791,     Ingmar Vanhassel: 26470: update  git svn  completion \n  
10792,     26485: _path_files with accept-exact-dirs could get path order wrong\n  
10793,     Ingmar Vanhassel: 26469: complete  git clone --verbose  \n  
10794,     Ingmar Vanhassel: 26468:  git stage  is now a synonym for  git add   git diff: --staged is a synonym for --cached \n  
10795,     Ingmar Vanhassel: 26467: add  git remote rename  completion \n  
10796,     Jörg Sommer: 26453: complete modinfo -k \n  
10797,     Jörg Sommer: 26452: drop completion of modinfo -f \n  
10798,     Jörg Sommer: 26451: use globbing to find available modules  now that modprobe -l is deprecated \n  
10799,     26483: Completion/Unix/Command/_getfacl  Completion/Unix/Command/_setfacl: handle SGI s acl programs as well as Cygwin s \n  
10800,     ARGH\n  
10801,     unposted: move _getfacl and _setfacl from Completion/Cygwin/Command to\nCompletion/Unix/Command \n  
10802,     unposted: move _getfacl and _setfacl from Completion/Cygwin/Command to Completion/Unix/Command \n  
10803,     26482: complete patch -U  --unified-reject-files  --global-reject-file \n  
10804,     26466: suffix in certain matcher modes mishandled pattern\n  
10805,     26463: Greg Klanderman: add zle-line-finish widget\n26464: Greg Klanderman: fix insert-ids=single for menu completion\n26465: Greg Klanderman: command keymap for execution\n  
10806,     26448: add glob sort operators oe and o+\n  
10807,     Greg Klanderman: 26439: Doc/Zsh/mod_system yo: convert to subsystems\n  
10808,     26425: allow  emulate sh -c command  to eval command under sh emulation\n  
10809,     26413: update ant completion for version 1 7 1\n  
10810,     26411: update Cygwin completion functions\n  
10811,     26407: patch to handle aptitude build-dep  from Sven Joachim \n  
10812,     26405: completion for xmms2  from Louis-David Mitterand \n  
10813,     unposted: Fix some typos in the development guide\n  
10814,     26373: initialise variable in menu completion in attempt to prevent crash\n  
10815,     26372: update antiword completion for version 0 37\n  
10816,     26366: add  isearch  keymap and  accept-search  functino\n  
10817,     Doug Kearns: 26365: new python 3 0 options\n  
10818,     26362:  avoid calling regfree() on uninitialized regex_t \n  
10819,     Fixed a few compiler warnings \n  
10820,     26361: update rake completion for version 0 8 3\n  
10821,     fix Doug s changelog date\n  
10822,     26360: add --work-tree option to git completion\n  
10823,     26315: define ZSH_PATCHLEVEL to  unknown  if not found\n  
10824,     26313: --enable-custom-patchlevel\nunposted: WARN_CREATE_GLOBAL in tcp_log\n  
10825,     Phil Pennock: 26312: Document no  variables altered on failed match\n  
10826,     26304: Mikael Magnusson: change tense in link warning\n  
10827,     26393: turn off text attributes in refresh when deleting text\n  
10828,     Back off 26270 (accept-and-menu-complete) \nWas causing memory corruption\n  
10829,     26301: make zpty -r exit more cleanly on bad reads\nadd option -m to make zpty -r return status 1 if pattern failed to match\nuse this option in comptest\n  
10830,     26300: dont use  echo -n  for $ZSH_PATCHLEVEL\n  
10831,     fix doc for 26272\n  
10832,     fix doc for 26272\n  
10833,     unposted: tweak doc for 26270\n  
10834,     26270: allow accept-and-menu-complete work with _vallues as well\n  
10835,     unposted: fix error using dollar Revision dollar\n  
10836,     262727: add $ZSH_PATCHLEVEL from ChangeLog revision\n  
10837,     unposted: add Revision to ChangeLog for patchlevel\n  
10838,     unposted: add _rebootin completion from Mandriva RPM\n  
10839,     Benjamin R  Haskell: 26265: fix some composed characters\n  
10840,     26260: fix crash failing to assigns scalar to special hash\n  
10841,     unposted: fix yodl problem with 26229\n  
10842,     26249: remove arbitrary string length limit in unmeta()\n  
10843,     Richard Hartmann: 26170 parts 1 and 2:  bz2 compressed PS files\n  
10844,     26247: fix compilation with -Werror=format-security\n  
10845,     Richard Hartmann: 26229: note zstat link following behaviour\n  
10846,     Frank Terbeck: 26215: VCS_Info disable-patterns style\n  
10847,     Greg Klanderman: 26159: fix appending of kills\n  
10848,     26202: show zshmodules(1) for echotc  echoti  sched  zprof  zpty  zsocket  zstyle  and ztcp builtins as well \n  
10849,     26185: fix two places where path to global zshenv was specified statically \n  
10850,     clean up test temporary files\n  
10851,     Richard Hartmann: 26175: updates for vim completion \n  
10852,     Richard Hartmann: 26155: quote use of   for a command in text\n  
10853,     26141: word-split EDITOR/VISUAL so users can have multi-argument commands in those variables \n  
10854,     Frank Terbeck: 26125: add  command  style to VCS_INFO\n  
10855,     26121: add -B <lines> option to calendar\n  
10856,     users/13566: note you cant unset array elements\n  
10857,     26110: option to allow vared to open to an alternative terminal\n  
10858,     Richard Hartmann: 26114: add color options \n  
10859,     Benjamin R  Haskell: users/13544: typo in composing characters\n  
10860,     26116: didn t get updated properly for combining characters\n  
10861,     Richard Hartmann: 26105: add okular\n  
10862,     Frank Terbeck: 26104: eliminate WARN_CREATE_GLOBAL warnings\n  
10863,     26103: use FIFOs rather than FD files for process substititution on Cygwin\n  
10864,     26095: compilation error if TIOCGWINSZ not defined\n  
10865,     26090: another cond test for Cygwin needs removing\n  
10866,     Brendan Cully: 26057: mercurial completion updates \n  
10867,     26091: crash at end of history line if history not in use\n  
10868,     13482: Frank Terbeck: fix some prompt docs for vcs info\n  
10869,     users/13477: call _files instead of _path_files to correctly handle\ncycling through choices \n  
10870,     users/13464: allow MIME suffixes to match upper case variants\n26075: fix repeated calendar events so that the next event is always in the\nfuture\n  
10871,     26065: update version number because of syntax change\n  
10872,     François Revol: some BeOS fixes\n  
10873,     26061: fix clash between process subst and numeric glob\n26062: additional compmatch change  missed from 26047\n  
10874,     26056  < <(   )more_stuff  etc  are errors\n  
10875,     26055: ensure process substitution is handled before parameter and command\n  
10876,     26053: handle --help output like  --[fetch all \n  
10877,     26047: convert lower levels of completion matching to use\nmultibyte strings and wide characters\n  
10878,     26046: return an error if session s fd is unusable \n  
10879,     Phil (unposted): README: another typo\n  
10880,     26042 with some fixes from 26043 (Mikael):\nallow <(   ) and >(   ) to occur in the middle of strings\nand =(   ) to have extra text following\n  
10881,     26030: fix memory leak in vared\n  
10882,     26028: close temporary file when aborting fc\n  
10883,     26029: test for redirection with no preceding whitespace\n  
10884,     26029: test for redirection with no preceding whitespace\n  
10885,     26024: don t leave ref count incremented when aborting bindkey with an error\n  
10886,     26027: free pprogc before it goes out of scope in makecomplistflags \n  
10887,     26025: prefer handling user input to zle -F file descriptor\n  
10888,     26023: skeletal completion for tg (topgit) \n  
10889,     26022: fix on Solaris where /proc/$$/fd exists but doesn t contain symlinks\n  
10890,     add completion of globbing flags\n  
10891,     26021: tweak for glob qualifier completion\n  
10892,     unposted: revert 26014 \n  
10893,     26016: treat  bzr co  as an alias of  bzr checkout ; patch from Ryo IGARASHI \n  
10894,     26014: don t allocate and leak a patprog if it s not going to be used \n  
10895,     26013: don t ztrdup the other buffer returned by inet_ntoa   cf  25987 \n  
10896,      typeset -g <var>  should be silent even without TYPESET_SILENT\n  
10897,     26006: remove dependence on system error message\n  
10898,     unposted: update to 4 3 9-dev-0\n  
10899,     unposted: missing  distfiles entry; release 4 3 9\n  
10900,     25989: fix crash in matching\n  
10901,     25988: declare temporary cache array as local  thanks to problem noticed by Kazuhiro NISHIYAMA \n  
10902,     25987: don t ztrdup the buffer returned by inet_ntoa \n  
10903,     25985: don t try to disable signal traps if getsignum returns -1 \n  
10904,     25983: Fix bug in hash builtin with empty hash entry name\n  
10905,     25975: bad tests for pattern match when building up a completion line string\n  
10906,     25972: leaked and uninitialised memory found by valgrind\n  
10907,     25971: fix options handling for builtins that handle their own\n  
10908,     25969: two bugs with metafication plus a test for one\n  
10909,     25963: Interrupt at spell check prompt output garbage\n  
10910,     25961: remove opening parenthesis from case\n  
10911,     4 3 9\n  
10912,     25958: make it possible to get docs for startup files correct\n  
10913,     25950 should use xyes  too\n  
10914,     unposted: add _tcpsys\n  
10915,     25950: need configure x$dynamic trick in two more places\n  
10916,     users/13418: protect against have_strcodes lying\n  
10917,     25949: remove dead code in getvisrchstr \n  
10918,     25945: matching bug in path hierarchy completion\n  
10919,     Mikael: users/13412: typo\n  
10920,     c f  users/13411: update archved version number to 4 3 8-dev-0\n  
10921,     unposted: single-letter typo\n  
10922,     unposted: belatedly sort out some distfiles\n  
10923,     update to 4 3 8\n  
10924,     25940: delay !multi memory allocation until after possibility to error out and return without freeing \n  
10925,     25938 (Mikael) + probably 25939  too: typo in _path_files\n  
10926,     25937: builtins with no options should still ignore --\n  
10927,     Release 4 3 7\n  
10928,     25934: handle bts subscribe  unsubscribe  and fix owner   Patches from Ansgar Burchardt \n  
10929,     unposted: region_highlight wrongly capitalised in NEWS\n  
10930,     unposted: update version claimed in README to 4 3 7\n  
10931,     Mikael: 25933: typos\n  
10932,     25931: Test for prompt code reentrancy\nusers/13400: clarify some ksh-like editing issues\n  
10933,     25930: dynamic directory expansion memory handling was screwy\n  
10934,     users/13375: trivial rewrite to ternary expression\n  
10935,     25927: include the ignored prefix/suffix in the hidden prefix/suffix\nonly for compadd -U \n  
10936,     25926: free val only after it may be passed to strlen (as in 25656) \n  
10937,     unposted: 4 3 6-dev-2\n  
10938,     25912: fix another metafication bug in completion\nand remove lies about matchers\n  
10939,     25911: see if we can work around multibyte problems in file system\n  
10940,     25910: avoid dangling file handle in bin_print \n  
10941,     Rocky: 25907: Makefile needs  exe to run zsh on Cygwin\n  
10942,     25905: fix and test doubled-hash radix output\n  
10943,     Phil Pennock: 25854: fix Devel module completion for  perl -d:  \n  
10944,     25883 (quoting in _multi_parts) and 25887 (-U in _path_files) \n  
10945,     Jörg Sommer: 25883: quote tmp1 strings before joining them into a pattern \n  
10946,     25887: fix brace completion oddity by using compadd -U more selectively \n  
10947,     25898: avoid dereference of p after it is freed in getmathfunc \n  
10948,     25897: remove small bit of dead code in cfp_opt_pats \n  
10949,     25896: remove small bit of dead code in execbuiltin \n  
10950,     Jörg Sommer: 25882: run ssh with -oBatchMode=yes \n  
10951,     25893: rescind advice to use m: [:lower:  = [:upper:   matcher for now\n  
10952,     25860: avoid possible NULL dereferencing in bld_parts \n  
10953,     unposted  c f  25848: attempt to sanitize comptest environment\n  
10954,     unposted  c f  25848: attempt to sanitize comptest environment\n  
10955,     25859: avoid possible NULL dereferencing if RC_QUOTES is set \n  
10956,     Mikael Magnusson: 25856: typo fixes \n  
10957,     Mikael Magnusson: 25855: typo fixes \n  
10958,     25845: fix pattern but with backslashed and metafied charaters\n  
10959,     25845: fix pattern but with backslashed and metafied charaters\n  
10960,     Marc Chantreux: 25816: promiscuous ip links\n  
10961,     Fixed a signed/unsigned compiler warning \n  
10962,     users/13323: new test wasnt robust about ignoring /etc/zshenv\n  
10963,     users/13321: allow --disable-gdbm\n  
10964,     unposted: protect () in doc from macro expansion\n  
10965,     unposted: update CONTRIBUTORS\n  
10966,     25837: add NEWS about new debugging features\n  
10967,     unposted: silence some warnings when WARN_CREATE_GLOBAL is set\n  
10968,     unposted: 4 3 6-dev-1\n  
10969,     test needs -f flag to zsh\n  
10970,     Fix trailing backslash in example \n  
10971,     Several belated commits and one timely one:\n   * 25814: Functions/Misc/run-help\n   * unposted (?): Functions/Prompts/promptinit\n   * 25140: Src/exec c\n   * 25029: Completion/Unix/Command/_sudo  Doc/Zsh/compsys yo\n  
10972,     25029: :  environ  style to allow a different search path when completing\nas a different user \n  
10973,     25140: improve error handling/reporting for here-document temp files \n  
10974,     Quote expansion of prompt_opts in prompt() because zsh emulation is by\nnecessity not enforced there \n  
10975,     25814: quote arguments to  eval  \n  
10976,     25833: remove zparseopts line obsoleted by 25824 \n  
10977,     Jörg Sommer: 25824: make it possible to use abbreviated paths for tree files \n  
10978,     25831: fix empty return values from subscript matches with RC_EXPAND_PARAM\n  
10979,     25818: missed changelog entry\n  
10980,     Nikolai Weibull: 25828: new rm completion\nunposted: note some new features in NEWS\n  
10981,     25823: bring up zshcontrib man page if run-help is run on run-help and run-help is a function \n  
10982,     Jörg Sommer: 25819: improve module parameter completion \n\nFirst  do not embedd the = in the parameter by define it a\nparameter‐value separator; -S = \n\nSecond  look for already given parameters in all words; -w \n\nThird  use the curcontext variable; -C \n\nForth  distinct between boolean and non‐boolean parameters  i e  do not\nappend a = to the end  And include the type of the parameter in the help\nmessage  This information is only given in the full output of modinfo \nnot in the narrowed output with --field \n  
10983,     Jörg Sommer: 25822: declare val_args as local array \n  
10984,     Jörg Sommer: 25821: return 0 if a modules parameter was completed \n  
10985,     25820: add the option --field of modinfo \n  
10986,     25818: compinstall data loss typo fix from Morita Sho \n  
10987,     25817: make  fc -l  more careful to list all recent history\n  
10988,     25808: handle bts claim and unclaim subcommands \n  
10989,     unposted: yet another correction for 25702 misapplication\n  
10990,     unposted: off-by-one error looking for dynamic directory name in completion\n  
10991,     25791: force return from eval-style DEBUG trap lost status\n  
10992,     25778: Frank Terbeck: use builtin cd\n  
10993,     25777: argument to gdbmsetfn()\nunposted: recognise ~[ in completion after : and =\n  
10994,     25775: fix logical problem with function line numbering inside eval-style traps\n  
10995,     25774: fix in 25772 was applied too widely\n  
10996,     25733: stub function for dynamic directory name completion\n  
10997,     25772: crash with bad associative array pattern search\n  
10998,     25771: shell function context for substitution functions\n  
10999,     users/13295  tweaked: dont reset line numbers when parsing strings  sometimes\n  
11000,     unposted: VCS_Info p4 backend should restrict changes to #have\n  
11001,     25764: completion for Django  from Chris Lamb \n  
11002,     25761: Mikael Magnusson: newline in getquery()\n  
11003,     25760: add (~) flag\n  
11004,     25755/25756: Jörg Sommer: improved handling of module arguments\n25759: fix dynamic named directory crash  static named directory consistency\n  
11005,     Mikael Magnusson: 25617: complete -t <tags> \n  
11006,     25744: dynamic named directories and further doshfunc() simplification\n  
11007,     25684: make %x and %I consistent with eval line numbering\n  
11008,     users/13288: Src/parse c: don t report parse errors on aborted lines\n  
11009,     Rocky: 25734: typo\n25739: warn about GPL in binary if libgdm is linked\n  
11010,     25737: remove dead code in ca_parse_line \n  
11011,     25736: one more zsfree missing from 25667 \n  
11012,     unposted: brown paper bag patch management of 25718 \n  
11013,     25733: add revision number to Perforce vcs_info backend\nadd abbreviation to list of backends\n  
11014,     25732: make vcs_info p4 backend use server if style use-server is set\n  
11015,     Rocky Bernstein: 25727: allow fc non-interactively\nAdd sanity test for empty history\n  
11016,     25728: spelling fix \n  
11017,     Jörg Sommer: 25717: fixups for 25702 \n  
11018,     25723: align combining character when popped from input stack\n  
11019,     25721: revert another mistake of 25701 \n  
11020,     Jörg Sommer: 25718: add completion of option --reverse \n  
11021,     25720: remove misleading vcs_info bit about PROMPT_SUBST \n  
11022,     25715: Frank Terbeck: vcs_info now works immediately\n  
11023,     25710: various minor consistency tweaks for VCS_Info\n  
11024,     25713: ensure that vcs_info functions immediately after autoloading \n  
11025,     Rocky Bernstein: 25696: fix crash on empty history \n  
11026,     unposted: update  distfiles \n  
11027,     Jörg Sommer: 25702: completions for chrt and ionice commands \n  
11028,     correct overzealousness in 25701\n  
11029,     25701: fix memory leak in loadautofn \n  
11030,     25697: drop git code and switch to vcs_info \n  
11031,     25693: Frank Terbeck: another doc glitch\n  
11032,     users/13262: Frank Terbeck: another formatting fix\n  
11033,     users/13252 and elsewhere: Frank Terbeck plus tweaks:\nadd VCS_Info function system\n  
11034,     c f  users/13251: update mapfile doc again\n  
11035,     25690: fix insert-last-word on multibyte characters with Meta\n  
11036,     25684: respect trap line number rules\n  
11037,     users/13239: add some comments to mapfile doc\n  
11038,     25682: terminate history line before passing to zshaddhistory hook\n  
11039,     25677: add %x and %I prompt escapes for shell source code debugging\ntidy up interface to doshfunc()\n  
11040,     25672: remove unnecessary Nularg when prompt expanding\nto avoid problem with glitch space\n  
11041,     25671: non existing variable in typeset -p should cause status 1\n  
11042,     25667: free mstr before returning from errors \n  
11043,     25666: free memory allocated for an xor if the argument number is invalid \n  
11044,     25662: declare -p should never create arguments\n  
11045,     25656: free val only after it may be passed to strlen() \n  
11046,     25655: remove completion for --remove-sent-files option \n  
11047,     25654: fix return bug and add --color \n  
11048,     25632: xRaich[o ²x: Src/mem c: munmap() argument was wrong \n  
11049,     unposted: typo in ChangeLog\n  
11050,     25651: make getpermtext() output indentation more logical\n  
11051,     25643: keep DEBUG and ZERR traps in subshells\n  
11052,     25641: add emulation option (NO_)MULTI_FUNC_DEF\n  
11053,     Frank Terbeck: 25640: another alias handling fix \n  
11054,     25639: free ptr2 if hsubl is NULL \n  
11055,     25638: remove unnecessary ternary expression in match_str \n  
11056,     25637: dereference prog after the NULL check \n  
11057,     25636: free s before returning with an error condition \n  
11058,     25634: free t before returning if both t and errflag are set \n  
11059,     Frank Terbeck: 25624: clean up git alias parsing \n  
11060,     25627: add $ZSH_SUBSHELL\n  
11061,     25615: $ZSH_DEBUG_CMD for use in DEBUG traps\n  
11062,     25608: NO_cshjunkiesquote in completion\n  
11063,     25611  25613: protect against two possible NULL dereferences \n  
11064,     25612: remove dead code \n  
11065,     25610: remove dead code \n  
11066,     25609: initialize sz variable \n  
11067,     25603: format error in compsys yo\n  
11068,     Jörg Sommer <joerg@alea gnuu de>: 25598/25599:\nauto-remove automatically added = in alias completion\n  
11069,     25595: fix line numbers with EVAL_LINENO \ntry to fix oddities with funcstack and sourced files \nsimplify use of caller element of funcstack\n  
11070,     25600: fix incorrect pattern introduced by 25059 \n  
11071,     Mikael Magnusson: 25594:  git clean  cleanup \n  
11072,     Mikael Magnusson: 25591:  git remote rm  completion \n  
11073,     Mikael Magnusson: 25590: update  git add  completion \n  
11074,     Frank Terbeck: 25588: add --no-pager option to git completion \n  
11075,     25587: fix a==(stuff) and associated stuff \n  
11076,     25585: fix git command completion when there are arguments after the cursor position \n  
11077,     Frank Terbeck: 25583: more git alias fixes \n  
11078,     25582: attempt to make  pws non-canonical hack  respect file types\n  
11079,     Jörg Sommer: 25572: completer module parameters\n  
11080,     25571: when parsing use line numbers for the start of a token  not the end\nadd test and move debug trap tests to new file\n  
11081,     Frank Terbeck: 25561: fix quoting with aliases \n  
11082,     Mikael Magnusson: 25564: suppress error output in __git_is_treeish \n  
11083,     25570: line numbers of complex sublists were wrong  plus test\nmake lineno zlong in another place\n  
11084,     users/13169: really restore emulation mode after  emulate -L \n  
11085,     25569: David Le Bourgeois and pws: _ant completion fix\n  
11086,     25568: Frank Terbeck & pws: invalid continue and break arguments\nalso tests for control commands\n  
11087,     users/13162: strip ~ suffix from modules\n  
11088,     25553: add aoss to compdef line \n  
11089,     Frank Terbeck: 25551: remove a stray period from a description \n  
11090,     Mikael Magnusson: 25539: more  git clone  fixes \n  
11091,     Frank Terbeck: 25538: add missing backslash \n  
11092,     Frank Terbeck: 25537: add --abort to options for  git am  \n  
11093,     25532: problem skipping assignments etc  with setopt ERREXIT\n  
11094,     25521: get merge strategies from git merge in case the administrator has added custom strategies \n  
11095,     25508: set file name if function came from dump file\n  
11096,     Alexey I  Froloff: 25459: add list-dirs-first style \nAlso doc \n  
11097,     Mikael Magnusson: 25499: add function to validate tree-ishs \n  
11098,     25495: always complete cached files after git checkout -- \n  
11099,     25493: allow -q to be used in all git checkout contexts \n  
11100,     25491: patch to improve  git checkout  completion  from Mikael Magnusson \n  
11101,     25490: make zties dynamic so there can be more than one gdbm handle in use at a time \n  
11102,     25489: remove cruft for  git octopus/octupus  \n  
11103,     25488: patch to complete things after  git bisect start   Mikael Magnusson \n  
11104,     25487: whitespace changes from Mikael Magnusson \n  
11105,     25486: patch to allow --shared to be completed without --local with git clone \n  
11106,     25485: patch to allow --abbrev to be completed before -v with git branch  from Mikael Magnusson \n  
11107,     25480: add more quotes to the three _call_program invocations with git for-each-ref \n  
11108,     Mikael Magnusson: 25473: add missing parenthesis \n  
11109,     unposted: additional git branch options \n  
11110,     25475: determine heads  tags  and branches through git for-each-ref instead of git tag and git branch \n  
11111,     25469: assorted changes cherry-picked from Mikael Magnusson \n  
11112,     25465: patch from Mikael Magnusson to add more git-add and git-checkout options \n  
11113,     unposted: another typo fix \n  
11114,     25464: patch from Mikael Magnusson to add --graph \n  
11115,     25463: patch to add git completion for --base/-1  --ours/-2 and --theirs/-3  from Mikael Magnusson \n  
11116,     25462: patch to add some -s -w to _arguments and new options for revert  from Mikael Magnusson \n  
11117,     25461: patch to add HEAD as a completion for heads  from Mikael Magnusson \n  
11118,     25460: patch to add the --branches/tags/remotes for rev-list to _git from Mikael Magnusson \n  
11119,     25457: improvements for git diff and git log \n  
11120,     Mikael Magnusson: 25456: fix typo of  before  \n  
11121,     Frank Terbeck: 24455: Completion/Unix/Command/_git: handle git stashes \n  
11122,     25452: redirect stderr from look to /dev/null \n  
11123,     unposted: test changed needed by foregoing patch\n  
11124,     25448: add $funcfiletrace to show absolute line number for caller\n  
11125,     25443 (tweaked): allow $functrace to show sourced files\n  
11126,     25435: Baptiste Daroussin <baptiste daroussin@gmail com>:\n\nnew and improved BSD completions\nunposted: fix Solaris completion  distfiles\n  
11127,     unposted: fix test failure in previous commit\n  
11128,     25247 with further modifications: add $funcsourcetrace\n  
11129,     unposted: prvent command(s) from looking like a Yodl macro\n  
11130,     unposted: prvent zshaddhistory() from looking like a Yodl macro\n  
11131,     25429: Rocky Bernstein: dont assume PS4 is set to the default\n  
11132,     25424: Completion/Debian/Command/_lintian: completion for lintian-info \n  
11133,     25423: completion for grep-excuses \n  
11134,     25422: apt-show-versions completion fix \n  
11135,     25409: missed ChangeLog entry\n  
11136,     25418: set PROMPT_SUBST for all Bourne-style shells\n  
11137,     25415: Make DEBUG_BEFORE_CMD the default \nReuse ERR_EXIT in DEBUG traps \nClean up trapreturn code \n  
11138,     25409: fix eval s use of lastval\n  
11139,     25405: return status from anonymous functions was not handled\n  
11140,     25400: Rockys test for second part of trapreturn bug\n  
11141,     unposted: two-word clarification of ZLS_COLORS usage \n  
11142,     25389: rearrange precedence of ZLS_COLORS alternatives \n  
11143,     25392: test for 25367\n  
11144,     25385: fix another bug with trapreturn trampling on status\n  
11145,     users/13095: no _XOPEN_SOURCE_EXTENDED on AIX\n  
11146,     25384: fix problem with incorrect autoloads of zsh/zle\n  
11147,     users/13093: HashNode changes for AIX\n  
11148,     25373: trashzleptr() -> zleentry(ZLE_CMD_TRASH)\n  
11149,     fix problems with trapreturn  in particular in source inside trap\n  
11150,     TCP functions: fix some variable handling problems \nalso standardise indentation\nadd-zsh-hook: fix check for existence of hook function in existing hook\n  
11151,     25364: fix k flag in hash subscript\n  
11152,     25345  25347: neaten interface from main shell to zle\n  
11153,     cross-reference to DEBUG_BEFORE_CMD option\n  
11154,     users/13077: Max Mikhanosha: restore follow after sort in _path_files\n  
11155,     25346: fix some variables in compdump\n  
11156,     users/13072: add follow option to file-sort\n  
11157,     following discussion  change fc error message\n  
11158,     25338: disallow usage of current history line in fc\n  
11159,     25236: missing changelog entry\n  
11160,     25330: fix description of zcurses  position  (was documented as  location ) \n  
11161,     25329: build the curses module if we ve got any usable curses header  not just curses h \n  
11162,     25328: fix --recv-keys and --send-keys to complete key IDs instead of uid email addresses \n  
11163,     25236: don t recalculate prompt if not redisplaying\n  
11164,     25324: Danek Duvall: some Solaris and more general completions\n  
11165,     25322: fix printing of keys \n  
11166,     25321: delete gdbm node when corresponding hash entry is unset \n  
11167,     25320: fix read and write of elements by key \n  
11168,     25319: fix zuntie  add -f option to ztie \n  
11169,     25318: allow parameter to be tied to a gdbm database \n  
11170,     25304: Richard Hartmann: dont go beyond 80 columns in new user script\n  
11171,     25272: add zshaddhistory hook\n  
11172,     users/13036:     is a valid character in a user name\n  
11173,     25278: rename sections in compwid yo to avoid confusion\n  
11174,     Phil Pennock: 25275: use restrictive permissions on cache files\nput zstat in example zshrc\n  
11175,     25276: use autoload -z for zsh-autoload functions\n  
11176,     unposted: fix warn_create_global warnings in copy-earlier-word\n  
11177,     25267: ambiguous pattern matching fix: missing log\n25269: Frank Terbeck: typo\n  
11178,     25267: fix problem with menu on ambiguous completion without matching\n  
11179,     25266: always use EXTENDED_GLOB for patterns in ZLS_COLORS\n  
11180,     25262: suspicious error checking in braceless function definition\n  
11181,     25259: improve getquery() handling of unhandled characters\n  
11182,     25258(?): donʼt\tuse -M option with -U in _path_files\n  
11183,     unlocalised variable\n  
11184,     25255: add anonymous function capability\n  
11185,     25243: patch from Chris Lamb to add --same-as for xrandr\n  
11186,     25244: add subword-range style\n  
11187,     users/12985  users/12986  users/12988: Tomasz Pala:\nsome new and updated completions\n  
11188,     users/12987: add subword capability to word-style\n  
11189,     25242: Mikael V prompt test for contents of psvar\n  
11190,     25237: TCP function system: make tcp_on_open return status significant\n  
11191,     25236: zsh-mime-setup -l arguments\n  
11192,     25231: fix approximation of absolute paths in root directory\n  
11193,     25214  tweaked: add warning about exponentiation precedence\n  
11194,     25167: patch from Petr Salinger to define _GNU_SOURCE (for /dev/ptmx) when glibc is being used on non-linux platforms \n  
11195,     Bart: 25164: typo\n  
11196,     29159: expand documentation for correspondence classes with [:   : \n  
11197,     zcalc completion idiosyncracies with :!\n  
11198,     zcalc completion idiosyncracies with :!\n  
11199,     improved zcalc escapes and completion\n  
11200,     move _strace to be Linux-specific\n  
11201,     users/12911: Tomasz Pala: completion for strace\n  
11202,     25149: add C_PRECEDENCES option to make arithmetic have C/Perl precedence\n  
11203,     25145: make sure XTRACE output is redirected with stderr\n  
11204,     Mikael: missing descendants\n  
11205,     Mikael: 25146: export pattern_match_equivalence()\n  
11206,     unposted addition to 25144 for tests\n  
11207,     Mikael: 25143: spelling corrections\n25144: report supported bases\n25139: fix number\n  
11208,     unposted: silence compiler in pattern_match_restrict()\n  
11209,     25138(? mailing list stuck): rewrite of completion matching \nWill one day use multibyte/wide characters  doesn t yet \n  
11210,     unposted: fix typo in _rpm\n  
11211,     unposted: missing  distfiles entries\n  
11212,     unposted: another typo in _path_files\n  
11213,     25130 with typos fixed: use compad -U in _path_files to fix problem\nwith spelling correction of path prefixes\n  
11214,     25132: zstyle completion updates\n  
11215,     25131: typo with b:zstat loading zstat\n  
11216,     users/12858: missing doc for accept-exact-dirs\n  
11217,     25127: note --disable-lfs/--disable-largefile incompatibility\n  
11218,     25126: reformatting for 25124\n  
11219,     25124: work with --(disable|enable)-largefile instead of --(disable|enable)-lfs  since the latter is no longer functional \n  
11220,     25122: use AC_SYS_LARGEFILE for better LFS detection \n  
11221,     Tomasz Pala <gotar@polanet pl>: users/12884:\nnew completions for iftop and tcpdump\n  
11222,     unposted: more NEWS\nusers/12870: document that modifiers in glob qualifiers activate\nglobal globbing behaviour\n  
11223,     25104; 25111 (Jun T): better completion for multiple versoins of locate\n  
11224,     25077: consolidation of GNUpod script completion from Omari Norman in 25075 \n  
11225,     unposted: add prompt_pws_setup to  distfiles\n  
11226,     unposted: Completion/compinit: typo in 25068\n  
11227,     users/12858: add accept-exact-dirs style\n  
11228,     unposted: fix unwanted output from new typeset in compinit\n  
11229,     25068: Fix some completion warnings with WARN_CREATE_GLOBAL\n  
11230,     25063: minor tweaks to Bart s prompt\n  
11231,     25054: typo in prompt doc\n  
11232,     25095: thorough modernization of prompt theme system\n  
11233,     25095: thorough modernization of prompt theme system\n  
11234,     25057: better debug error on memory failure\n  
11235,     25055: remove unnecessary debug test\n  
11236,     25052: update docs for use of colour highlighting\n  
11237,     update contributors to main shell\n  
11238,     25051: add colour sequences to formatting strings in completion\n  
11239,     25040: zpty should display context information more like eval\n  
11240,     unposted: handle p4 sizes and license completion\n  
11241,     unposted: handle p4 protects completion\n  
11242,     25025: check radix for integer constants is between 2 and 36 inclusive\n  
11243,     25018: Omari Norman: completion for awk  join  sort\n  
11244,     25006  25009: fix  or  orphaned symlink highlighting\nfix ordering of statd versus extension and pattern highlight tests\n  
11245,     25006  25009: fix  or  orphaned symlink highlighting\nfix ordering of statd versus extension and pattern highlight tests\n  
11246,     25002: only ZLE should update attributes resulting from prompt expansion\n  
11247,     24996: improve xtrace output for patterns\n  
11248,     users/12848: return  break  continue in always block override try block\n  
11249,     24994: fix problem with up/down-line-or-search  perhaps\n  
11250,     24990: Stephane Chazelas: fix various little quirks in zmv\n  
11251,     unposted: fix uninitialised variable\n  
11252,     users/12846: not so many Windows ports  these days\n  
11253,     24986: prompt escapes for colours\n  
11254,     unposted: bad argument to zmodload -F error message\n  
11255,     24980: zmodload -mF\n  
11256,     24972: Phil Pennock: zf_* variants of zsh/files builtins plus extra options\n  
11257,     unposted: typo in ChangeLog\n  
11258,     Oliver: 24962: update prompt_oliver_setup with default highlighting\n  
11259,     24959: crash with ^D in compctl\n  
11260,     24957: better sanity checking of colour ranges\nalways use termcap for numeric ranges where available\n  
11261,     24911: missed REGION_ACTIVE documentation  somehow\n  
11262,     24953:  default  zle_highlight; fix allocation bug in colour sequences\n  
11263,     24951: implement ZLS_COLORS ln=target\n  
11264,     24947: complete -safe-mode for firefox \n  
11265,     24938: tweak Free BSD XOPEN test\n  
11266,     24937: finally(?) fix free BSD XOPEN test\n  
11267,     24932: try to fix up code that regularizes attributes after right prompt\n  
11268,     24927: Phil Pennock: limit XOPEN workaround to FreeBSD 6\n  
11269,     Only call close(flock_fd) if flock_fd is >= 0 \n  
11270,     Locking simplification and signed/unsigned fixes \n  
11271,     Mikael Magnusson: 24911 (slightly tweaked):\nREGION_ACTIVE zle parameter\n  
11272,     24904 + 24916: be more careful definined _XOPEN_SOURCE_EXTENDED on BSD systems\n  
11273,     24915: some more fix-ups for combining characters\n  
11274,     users/12812: fix hang with confusion over process numbers\n  
11275,     24900: add backward-kill-word behaviour to isearch\ndocument isearch commands better\n  
11276,     24899: make colour escape sequences configurable\nallow ANSI colour names\n  
11277,     Matt Wozniski: typo\n  
11278,     oops\n  
11279,     24894: enable colouring of highlighted text in editor\n  
11280,     24893: duplicate statusline to avoid crashes when constant\n  
11281,     unposted: reset search line on anchored pattern isearch\n  
11282,     unposted: more tweaks for failed isearch pattern matches\n  
11283,     24890: Matt Wozniski: reset skip_pos on backtracking in isearch\n  
11284,     24887: geoff: typo\n  
11285,     24886: fix endless loop in string isearch\n  
11286,     24822: highlighting of isearch matches\nunposted: not in NEWS that COMBINING_CHARS is not on by default\n  
11287,     unposted: typo\n  
11288,     unposted: fix position of cursor on forward pattern searching\n  
11289,     24881: only feep once on an invalid pattern\n  
11290,     feeping on a failed match could be mistimed\n  
11291,     24879: unpleasantness at the pattern search line duplication test club\n  
11292,     24878: add incremental pattern searches\n  
11293,     24876: Jun T : don t install manual pages if empty\n  
11294,     24872: revert to original patch\n  
11295,     Jun T  24872 + 24873: capitalization with combining characters\n  
11296,     24869: Marc Chantreux: make default readnullcmd configurable\n  
11297,     unposted: Jun T : fix backkill() calculation of charaters to kill\n  
11298,     unposted: fix overwrite without MULTIBYTE_SUPPORT\n  
11299,     24867: _XOPEN_SOURCE -> _XOPEN_SOURCE_EXTENDED\n  
11300,     24865: bad character adjustment in vireplacechars()\n  
11301,     24864: Jun  T: typos in alternative wcwidth() \n  
11302,     24862: _XOPEN_SOURCE needed for wcwidth()\n  
11303,     24861 (with tweaks): logic to use alternative wcwidth() if needed;\nslightly improve test for overwriting with combining characters \n  
11304,     24860: better overwrite mode\n  
11305,     24859: combining chars: overwriting and vi replace and append\n  
11306,     24856: add IS_COMBINING() and IS_BASECHAR() and widen tests\n  
11307,     24855: tests for combining char alignment should only be on metafied line\n  
11308,     unposted: missing assignment in new backwardmetafiedchar()\n  
11309,     24853: bits missed from patch\n  
11310,     24853: use metafied strings for inner loops over history\n  
11311,     24852: more combining chars fallout\n  
11312,     24852: more combining chars fallout\n  
11313,     users/12798: document passing NULL flags to builtin definition\n  
11314,     William Scott: users/12793: extra chflags\n  
11315,     24851: support colour codes for from current GNU ls\n  
11316,     Fixed some compiler warnings about signed/unsigned issues \n  
11317,     24839: fix misuse of variable in backwardkillword\n  
11318,     fix ChangeLog typo\n  
11319,     fix vi-replace-chars\n  
11320,     article numbers now that the mailing list is unstuck\n  
11321,     24825: fix internal word-boundary widgets\n  
11322,     24818: add HIST_FCNTL_LOCK \nunposted: update NEWS with new features\n  
11323,     248??: some fixes and updates for git 1 5 5 \n  
11324,     24821: update notes in FAQ on combining characters \nfix up cursor on exit from user-defined widget\n  
11325,     24819: fix transposing characters and sneaky combination generation\n  
11326,     24816: some places where we need cursor alignment with combining characters\n  
11327,     24814:  suspicious handling of temporary history buffer\n  
11328,     24811: update introductory multibyte documentation\n  
11329,     24810: ensure combining character alignment on unmetafication\n  
11330,     24808: initial support for combining characters in zle\n  
11331,     Miek Gieben: users/12781: zmv Usage message\n  
11332,     24807: Frank Terbeck: Completion system needs no_ignore_braces\n  
11333,     unposted: move zlefind() and zlecmp() into zle_hist c\n  
11334,     24806: more assoc subscript completion + typos\n  
11335,     24804: fix quoting of assoc array subscripts in completion\n  
11336,     Markus Waldeck: 24799: complete  spx files for ogg123 \n  
11337,     restore read-from-minibuffer save/restore\n  
11338,     24793: Ismail: typo\n  
11339,     24792: try to be safer about turning off attributes when refreshing\n  
11340,     24790: YODL items need closing parentheses on next line\n  
11341,     24789: completion for stg subcommands \n  
11342,     24788: $ (m)#     returns string print width\n  
11343,     24787: reset region_highlight when finished editing command line\n  
11344,     typo\n  
11345,     24786: handle read -t properly in zle via getbyte()\n  
11346,     24782: initial go at highlighting of characters in zle command lines\n  
11347,     unposted  see users/12758: [(w)     does work with (r) and (R)\n  
11348,     users/12754: document [(w)     only works on forward indexing\n  
11349,     unposted: update version to 4 3 6-dev-0\n  
11350,     24781: enhance word-context to use next or previous word\n  
11351,     README: minor tweaks\n  
11352,     unposted: release 4 3 6\n  
11353,     unposted: other minor typos\n  
11354,     unposted: spotted by Ismail: typo\n  
11355,     unposted: 4 3 5-dev-4\n  
11356,     unposted: use kdialog in calendar_show if appropriate\n  
11357,     24708: Misc/globtests  Src/pattern c  Test/D02glob ztst:\nfix backtracking problem in (#c) pattern\n  
11358,     24777: bug clearing up after menu selection\n  
11359,     24776: clarify compinit message when compaudit fails\n  
11360,     24775: improve _cd option handling\n  
11361,     24775: improve _cd option handling\n  
11362,     users/12739: fix multiple arguments to --with-term-lib\n  
11363,     24768: add -q option to cd  chdir  pushd  popd\nuse in _canonical_paths\nadd 4 3 6 release note with this and other stuff\n  
11364,     24759: dont unfunction if no function; sanitize helper functions\n  
11365,     24757: canonicalize paths some more\n  
11366,     unposted: fix alias test in 24736 properly\n  
11367,     unposted: 4 3 5-dev-3\n  
11368,     25735: use zstat to get canonical name for symbolic links\n  
11369,     24741: loading zstat builtin was misdocumented\n  
11370,     24736: a couple more tests failing on Solaris\n  
11371,     Add zstat to the functions index \n  
11372,     unposted: 4 3 5-dev-2\n  
11373,     22281: wait shouldn t return immediately on signal unless trapped\n  
11374,     fix optimisation of string matching with multibyte mode\n24732: attempt to provide adequate space for sched ztrftime string with\nmultibyte characters\n  
11375,     24730: use --no-color when calling git commands that might output color codes \n  
11376,     24728: complete for aptitude why and why-not \n  
11377,     unposted: further documentation tweak for the (R) and (I) subscript flags \n  
11378,     Tweak documentation \n  
11379,     24717  24718  24719: a 0 subscript is neither valid nor equivalent to 1\nany longer  so the (i) subscript flag on an empty array needs to yield 1 \n  
11380,     unposted: fix some  distfiles and  cvsignore stuff\n  
11381,     unposted: 4 3 5-dev-1\n  
11382,     Functions/Misc/zkbd: add -h to local declaration in is-this-a-function test \nUse $DISPLAY when we have one instead of only $VENDOR-$OSTYPE as file name\nsuffix   Add some knowledge of the MULTIBYTE option and its effects \n  
11383,     24712: handling of backticks being requoted for double quotes\n  
11384,     24711: fix re-presentation of here-documents munged internally\nto here-strings\n  
11385,     24705: rationalise curses and term headers even more\n  
11386,     24704: completion for BSD calendar \n  
11387,     24703: Src/Zle/zle_main c: clear trashedzle when first starting\nthe editor in zleread()  so that reexpandprompt() from the first\nzrefresh() won t expand the prompt an extra time \n  
11388,     unposted: make test for added space in 24699 safer\n  
11389,     24702: fix 24701\n  
11390,     24701: use $service instead of $words[1  so completion will work if git is an alias to a wrapper \n  
11391,     24699: bug with $ (Q)     on initial  > \nbug with $ (z)     on string with unterminated  ( \n  
11392,     users/12699: don t complete normal arguments where we re completing the\nrequired argument to an option in the word following the option\n  
11393,     Richard Hartmann: 24631: gpg completion update\n  
11394,     24696: turn off MULTIBYTE by default in sh emulation\n  
11395,     History file-handling improvments \n  
11396,     Fixed two compiler warnings about comparing signed/unsigned \n  
11397,     unposted: improved handling of perforce @label and @date\n  
11398,     24673: another attempt to sort characters the same way on multiple UTF-8\nimplementations\n  
11399,     24662: River Tarnell: strtoul() compat when not in system library\n  
11400,     24653  24659: Completion/Unix/Type/_path_commands: use a helper function\nto call  whatis  portably  and use compadd -O to pre-filter matches before\nreading $_command_descriptions \n  
11401,     overeagnerness to spot integers in cd after - and +\n  
11402,     24650: use zstyle -t instead of -T since extra-verbose isn t meant to default to yes \n  
11403,     24632: fix remote ssh filename quoting \n  
11404,     24672: fix(?) crash resizing window during menu-select\n  
11405,     24626: only process command descriptions if extra-verbose style is set \n  
11406,     24622: add completion for  git bisect skip  and  git bisect run  \n  
11407,     24618: avoid problems with sorting of UTF-8 characters by using sort\n  
11408,     24617: add     to the yodl include path for when files are passed as   /  /Doc/* yo \n  
11409,     24611: fix $ +array[      for empty range\n  
11410,     24609: try to be safe about using libiconv\n  
11411,     24600: yet another typo\n24602: fix test when not run\n  
11412,     another fatfinger: change comparison to asignment\n  
11413,     pws fatfingered the last change in utils c\n  
11414,     24596: use  US-ASCII  as charset if nl_langinfo(CODESET) returns    or  646 \n  
11415,     24592: make types of charset conversion failure more explicit\n  
11416,     24588: tweak glob qualifier completion\n24590: turn down error reporting when unquoting\n  
11417,     24585: completion for glob qualifiers plus\nbug fix for _alternative\n  
11418,     unposted: new p4 change option -u\n  
11419,     24578: stop completing --print-gnu-build-architecture  which was dropped in 2005 \n  
11420,     24576: replace shebang lines \n  
11421,     users/12632: bug unexporting special after being set for funccall\n  
11422,     24572: add style reformat-date to calendar\n  
11423,     24570: don t attempt to pre-filter $commands on $PREFIX  just let compadd\ndeal with it \n  
11424,     24572: add style reformat-date to calendar\n  
11425,     unposted: Functions/Misc/xtermctl: update uses of  read  to take advantage\nof users/12600 \n  
11426,     users/12600: Src/builtin c: reorder handling of -s/-d/-t options\n  
11427,     zsh-users/12600: reorder handling of -s/-d/-t options so that terminal\ninput modes are set before attempting a read-poll   Also display any\nprompt before read-polling   Unposted: remove trailing whitespace from\nall lines that had it \n  
11428,     24566: fix prompts with glitch spaces a bit more\n  
11429,     24556: %G in prompt for glitch characters\n  
11430,     24554: reduce accumulated memory listing in completion listing\nmake file static be used as such instead of as a pretend parameter\n  
11431,     24551: Free heap memory after every ZLE command\n  
11432,     users/12547: [0  -> [1  in completion arrays\n  
11433,     24545: new acroread options\n  
11434,     24542: fix RC_QUOTES completion if opening quote not at start of string\n  
11435,     unposted: remove shebang line \n  
11436,     unposted: remove shebang line \n  
11437,     24536: tweaks to 24529  spelling fix \n  
11438,     Mikael Magnusson: 24529: remaining fixes from 24526 \n  
11439,     24533 (tweaked): offer _complete _ignored as default for completers style\n  
11440,     24528: revert 24429 \n  
11441,     24527: a subset of the fixes from Mikael Magnusson in 24526 \n  
11442,     24524: increment version to 4 3 5-dev-0\n  
11443,     24513  24514  24515  24516  24517  24518  24519  24520  24521: typo fixes from A  Costa \n  
11444,     users/12527: add release note for 4 3 5\n  
11445,     4 3 5\n  
11446,     24506: make ZSH_VERSIONSUFFIX propagate to somewhere useful \n  
11447,     Christopher Key: fix for subversion help output\n  
11448,     24498: tweak to grep config h instead of config status for dynamic config\n  
11449,     24496: more Yodl parenthesis protection\n  
11450,     24483: minor sectioning fixes in doc\n24485: note on includes for term h\n  
11451,     users/12498: missing section marker in doc\n  
11452,     4 3 4-dev-8\n  
11453,     24460: make zpty -rt more consistent by polling before every byte\n  
11454,     24464: remove trailing whitespace \n  
11455,     24442: compensate for some breakage introduced by 24396 \n  
11456,     24441: compensate for some breakage introduced by 24396 \n  
11457,     24437: compensate for some breakage introduced by 24396 \n  
11458,     24434: handle unprintable and zero-width wide characters\nby displaying as hex\n  
11459,     24429: use ZSH_VERSIONSUFFIX instead of ZSH_EXTRAVERSION \n  
11460,     Frank Terbeck: 24413: handle completion when git aliases are used \n  
11461,     Mikael Magnusson: 24396: don t pass -r to git ls-files for performance reasons  compensate for lack of recursion \n  
11462,     Silence a compiler warning \n  
11463,     users/12461: fix quoting of mount points for umount\n  
11464,     users/12461: fix quoting of mount points for umount\n  
11465,     users/12453: X11 window control for xterm-compatible emulators\n  
11466,     24408: use contents of ZSH_EXTRAVERSION environment variable for version suffix \n  
11467,     24406: use deep copy of Cline structure to avoid recursion problem\n  
11468,     unposted: complete a few minor new p4 options\n  
11469,     24402: complete more than one input file \n  
11470,     24388: tidy up error if MH not available\n  
11471,     Fix introductory comment and add -i to the #! line \n  
11472,     24387: update --force-* options for dpkg completion \n  
11473,     Add Functions/Misc/sticky-note  tweak Functions/Misc/run-help \n  
11474,     users/12426: post-it notes for zsh\n  
11475,     24364: local assignment to HELPDIR with a default location \n  
11476,     N J Mann: users/12420: completion for cvs commit -f\n  
11477,     users/12412: check for extra arguments in test and [\n  
11478,     24384 plus extra check: care with scanprog\n  
11479,     unposted: 4 3 4-dev-7\n  
11480,     24371: bug refreshing large scrolling history entry\n  
11481,     Chris Lamb: 24365: completion for vim-addons \n  
11482,     24362: problem redrawing line with multibyte character first\n  
11483,     24360: fix misspelling of --separate-dirs \n  
11484,     24356: regex =~ test wasnt handled by gettext()\n  
11485,     24349: add comment about HELPDIR to assist replacement in Debian build \n  
11486,     24345: add --no-utf8-comment and --list \n  
11487,     Based on 24334: Documentation for run-help improvements \n  
11488,     24324: do not set ftim when re-entering the history mechanism for string\nsubstitution \n  
11489,     24332  24333: Improvements to run-help suggested by J Sommer \n  
11490,     24330: add some missing options from xpdf 3 02 \n  
11491,     24323: for performance reasons  procure release names via apt-cache policy instead of apt-cache dump \n  
11492,     Silenced a signed/unsigned compiler warning \n  
11493,     undo 24318\n  
11494,     24318: drop leading spaces from direntry to cope with new makeinfo behavior \n  
11495,     24316: count skipped tests differently from successes and failures \n  
11496,     unposted: 4 3 4-dev-6\n  
11497,     24305: update release docs in preparation for 4 3 5\n  
11498,     24301: missed a case for lower-casing options\n  
11499,     24298: Tonguc Yumruk: emulate -L consistency\n  
11500,     24289 plus Ismail s suggestion 24290: count test scripts succeeded and failed\n  
11501,     24279: allow terminal changes after zle -I to be acquired by main shell\n  
11502,     unposted: suppress harmless warning\n  
11503,     24275: fixes for multibyte characters on Solaris\n  
11504,     unposted: minor typo\n  
11505,     unposted: 4 3 4-dev-5\n  
11506,     Wayne: 24273: curses macros dont return a value\n  
11507,     24271: handle parse failures in command substitution better\n  
11508,     24268: handle backslashed = in mailbox completion\n  
11509,     Typo in 24264 \n  
11510,     24264: restrict effect of 24234 to parameter substitution code and document\n  
11511,     Improved --whole-file description \n  
11512,     24252: dont define _XOPEN_SOURCE_EXTENDED for curses on OpenBSD\n  
11513,     24251: attempt to fix sitem() YODL macro in ztexi yo\n  
11514,     24242: unify top lines as #!/bin/zsh (followed by options) \n  
11515,     Peter: 24235: handle underscores\n  
11516,     24241: explain the effect of time glob modifiers better\n  
11517,     24240: make vared check for trailing garbage earlier\n  
11518,     24239: _subscript added too many backslashes\n  
11519,     24236: another case where cond -N test can fail\n  
11520,     24234: apply typeset parameter flags consistently\n  
11521,     users/12325: implement OSI rules for test & [  add more doc warnings\n  
11522,     users/12305: option output not well documented\n-c and SHIN_STDIN inconsistent with manual\n  
11523,     unposted: update\n  
11524,     users/12307: Expand delay in [[ -N        test to 2 seconds\n  
11525,     24210: set -o should abort on failure\n  
11526,     unposted: 4 3 4-dev-4\n  
11527,     Vincent Lefevre: 24192: make GNU make completion support -include\n  
11528,     24150: Exit status of null command should be exit status of last cmdsubst \n  
11529,     24197: interface to ztrftime() for insufficient memory was broken\n  
11530,     24188: completion for GNU id \n  
11531,     24187: completion for members \n  
11532,     24174: Oliver s deuglification of 24169 \n  
11533,     unposted: add explanatory comment for blocking around fork()\n  
11534,     24179: use queue_signals() for 24170\n24180: back off strerror_r() patch  except for use of temporary var\n  
11535,     Guillaume Chazarain: 24170: block interrupts around fork()\n  
11536,     24173: fix thinko in 24171\n  
11537,     unposted: argh\n  
11538,     24172: check ncurses h  ncurses/ncurses h  and ncursesw/ncurses h for curses keys \n  
11539,     24171: define USE_TERMINFO_MODULE when ncurses h  ncurses/ncurses h  or ncursesw/ncurses h is present \n  
11540,     24169: use print in command substitution to avoid a literal non-ASCII character in the German translation of args for cut completion \n  
11541,     24160: build terminfo module if ncursesw is present but curses h is not \n  
11542,     unposted: typo in  ip addr replace  completion\n  
11543,     24147\n  
11544,     24148: attempt to use strerror_r() to make errors in signal handle safer\n  
11545,     document the distfiles business\n  
11546,     24140: spelling fix and removal of redundant  config  subcommand as proposed by Wayne \n  
11547,     24135: consistently complete subcommands with minus signs instead of underscores \n  
11548,     arno: 24134: extra find completion options\n  
11549,     24130: belated ChangeLog entry for calendar_parse change:\nprevious commit abstracted calendar_parse from calendar and used\nit in calendar_add to help with recurrences\n  
11550,     Kohsuke Kawaguchi: 24129: when completing ant targets \nskip those beginning - that cant be invoked from the command line\n  
11551,     Test for matcher fix in 24127\n  
11552,     24127: bug in matcher specs with left anchor and partial words\n  
11553,     One more rsync 3 0 0 option \n  
11554,     Mustafa Oezkan: 24126: additional mount completion options\n  
11555,     Ryan F: users/12154: MacOS X group completion\n  
11556,     unposted: changes for 4 3 4-dev-3\n  
11557,     24120: termcap string memory allocation was screwy\n  
11558,     c f  12248: zshcalsys 1 missing from dist\n  
11559,     24118: only link against libnsl if we have NIS and need it for yp_all  or if we need it for getpwnam \n  
11560,     Markus Waldeck: 24117: completion for uname \n  
11561,     24113: createparamtable() was still messing with\nthe internals of the environment even when USE_SET_UNSET_ENV \n  
11562,     24098: Fix my botch with 23924  rework out new prompts and\ntheir lengths before use in resetvideo() \n  
11563,     unposted: fix typo in git psvar assignment \n  
11564,     Sean Finney: 24115: offer tags as well as heads where refspecs are valid \n  
11565,     24114: make colon suffix removable after the first part of refspecs \n  
11566,     arno : 24111: complete -lsbin and -lsman options to dlocate \n  
11567,     24110: change ncurses includes again\n  
11568,     24108 plus YAT: fix tests for ncurses headers even more\n  
11569,     24107: extra search for ncurses headers but dont use if library isnt ncurses\n  
11570,     ????? & 24104: attempt to fix error message on Tru64 Unix\n24103: fix zsh texi dependency on version\n24104: dont search for ncurses library if no ncurses h\n  
11571,     add some mod_export tags where needed\n  
11572,     unposted: prepare for 4 3 4-dev-2\n  
11573,     users/12230: fix problem setting killring to zero size\n  
11574,     From Eric Mangold: update _twisted completion\n  
11575,     Nikolai Weibull: 24075: completion of values for --preserve and --no-preserve \n  
11576,     24093: floating point precision\n  
11577,     24089 plus tweak: fix curses on older systems\n  
11578,     Vin Shelton: 24088: error with no multibyte\n  
11579,     Nikolai Weibull: 24046: improve completion for Solaris and GNU strips \n  
11580,     24083: add zcurses querychar\n  
11581,     24082: delete-whole-word-match failed on whitespace\n  
11582,     24081: fix xtrace\n  
11583,     Mikael Magnusson  24076; 24081: cancel argument processing after widget\ncalls with general arguments\n  
11584,     Another _rsync update \n  
11585,     Adding missed single-letter options for --acls and --xattrs \n  
11586,     users/12198: make menu-select documentation clearer\n  
11587,     typo in mouse args in 24073\n  
11588,     typo in parameter setting 24073\n  
11589,     typo in parameter setting 24073\n  
11590,     24073 (plus tweak): zcurses mouse handling\n  
11591,     24070: some \\u fixes in getkeystring()\n  
11592,     24069: add zcurses_keycodes\n  
11593,     24068: attempt to make `printf  %g\\n  -0 output  -0 \n  
11594,     Changes for _rsync \n  
11595,     Added new options for upcoming 3 0 0 release \n  
11596,     fallout from 24050: add curses_keys h to  cvsignore\nadd high res timestamps to NEWS\n  
11597,     24050: handle nanosecond resolution timestamps on systems that support them\n  
11598,     24048: fix home directory expansion with NIS on Solaris\n  
11599,     Frank Benkstein: 24047: fix compdef for more than three commands using the\nsame service\n  
11600,     24045: fix memory leak where old value of an environment variable isn t freed\n  
11601,     24043: remove an erroneous emulate\n  
11602,     24043: remove one  emulate  that was too many\n  
11603,     Fix uninitialized-var compiler warning \n  
11604,     Fixed the use of an uninitialized  x  in spckword() if shout is NULL \n  
11605,     24039: cope with FreeBSD cut in addition to GNU cut \n  
11606,     24038: add  zcurses bg \n  
11607,     users/12149:  @  with splitting in double quotes retains empty fields\n  
11608,     adapted 24030: work around Solaris cancelling curses key timeout\n  
11609,     Markus Waldeck: 24032 (tweaked): completion for cut \n  
11610,     fix crash when colo[u r is not available in curses\n  
11611,     Remove broken curses debug\n  
11612,     add zcurses timeout\n  
11613,     24027: subwindows   touch   optimized refresh\n  
11614,     24026: default colors in zcurses\n  
11615,     unposted: document zcurses position properly\n  
11616,     unposted: document zcurses position properly\n  
11617,     24025: new zcurses  clear  and  location  subcommands\nzcurses window  stdscr \nvarious minor zcurses tweaks\n  
11618,     24025: new zcurses  clear  and  location  subcommands\nzcurses window  stdscr \nvarious minor zcurses tweaks\n  
11619,     zcurses input: oops\n  
11620,     24024: add zcurses input with keypad handling\n  
11621,     24022: completion for dpkg-repack by Dr  Markus Waldeck  tweaked a bit \n  
11622,     c f  users/12110: another tweak to $SECONDS doc\n  
11623,     c f  users/12109: tweak to $SECONDS doc\n  
11624,     users/12100: default to a case-insensitive matcher with NO_CASE_GLOB\n  
11625,     24018: add zcurses scroll\n  
11626,     24017: fold zcurses color into attr\nadd some zcurses parameters\na bit of tidying\n  
11627,     24016: compilation with curses and not ncurses\n  
11628,     24012: rename  endwin    c   and  s  to  endwin    char   and  string  respectively \n  
11629,     24011: various tweaks to zcurses commands including rearrangement to dispatching\n  
11630,     24010: fix max arguments for  zcurses border  to 1 \n  
11631,     users/12087: fix globbing problem on Cygwin\n  
11632,     users/12087: fix globbing problem on Cygwin\n  
11633,     24007: prompt allocation and use of  shout \n  
11634,     24006: (F) glob qualifier should unmetafy\n  
11635,     24005: enforce min/max arguments on zcurses commands \n  
11636,     24004: align documentation with UI changes in 24002 \n  
11637,     24002: change all the subcommands from option letters to words \n  
11638,     24001: fix up zcurses -C\n  
11639,     Mikael Magnusson: 23999: improvements for git show  git rev-parse  et al \n  
11640,     23997: don t delete color pair hash on module unload unless it s been previously initialized \n  
11641,     23994: tweaks for 23993 \n  
11642,     Mikael Magnusson: 23993: improved completion for git show \n  
11643,     23924: Improve synchronising of character attributes with other\noutput routines\n  
11644,     Mikael Magnusson: 23991: fix typo in __git_blobs() \n  
11645,     Mikael Magnusson: 23988: fix git-svn commands completion \n  
11646,     23989: add broken zcurses -C to set window colors \n  
11647,     23986: zmv example for turning spaces into underscores\n  
11648,     23978: zcurses -s with wide characters: use waddwstr()\n  
11649,     23982: documentation for zcurses -A \n  
11650,     23981: add zcurses -A to set window attributes \n  
11651,     23970: zcurses -i/-e  fix leak  add zcurses -r with no argument\n23968 (Vin Shelton): yodl fix\n  
11652,     23965: add missing bracket in completion for git svnimport \n  
11653,     23964: call endwin() in curses module cleanup \n  
11654,     23962: store windows in a linked list instead of a static array  and use strings as window identifiers instead of integers \n  
11655,     23958: change target window to be the first argument of zcurses -a \n  
11656,     23957: minor fixes \n  
11657,     unposted: update for zsh/curses module and documentation \n  
11658,     23954: documentation for zsh/curses module \n  
11659,     unposted and users/12008: Functions/Prompts/prompt_bart_setup \nFunctions/Prompts/promptinit: make sure localtraps is unset before assigning\nto functions[TRAPWINCH    emulate zsh to avoid setopts conflicts   Run precmd\nand preexec only if they are defined as functions \n  
11660,     unposted: make sure localtraps is unset before setting TRAPWINCH \n  
11661,     zsh-users/12008:  Assert zsh emulation to avoid setopt problems; don t try\nto run precmd or preexec if they don t exist \n  
11662,     23952: work with non-wide curses as well \n  
11663,     23947: remove apm battery status and add git branch detection \n  
11664,     unposted: quote name of aclocal function \n  
11665,     23945: autoconf include file for budding out-of-tree module support \n  
11666,     23943 (tweaked): search ncursesw and document this\n  
11667,     23927: don t define struct timezone if ZSH_OOT_MODULE is defined \n  
11668,     23934: cleveren _expand_alias for  foo  ->  foo blah  expansions\n  
11669,     23923: fold all other curses windowing builtins into zcurses \n  
11670,     23919: have new zcurses builtin replace 4 separate builtins \n  
11671,     23900: missed ChangeLog entry\n  
11672,     arno: 23910: spaces in cases in init script\n  
11673,     23911: curses windowing module \n  
11674,     Mikael Magnusson: 23907: add --cached option to git-diff completion \n  
11675,     23908: add missing backslash in _git-svn \n  
11676,     Mikael Magnusson: 23906: add missing backslash in _git-svn \n  
11677,     unposted  c f  users/11935: quoting of arguments to unalias\n  
11678,     23905: remove useless gitdir assignment and scope array locally in new __git_changed_files function \n  
11679,     Mikael Magnusson: 23903: complete both modified and added files for git commit \n  
11680,     23900: Better handling of NO_EQUALS in old completion\n  
11681,     Fix ChangeLog corruption\n  
11682,     improve configuration handling of termcap/curses\n  
11683,     23883: improve precmd documentation\nDaniel Qarras: users/11915:  version quoting in _module completion\n  
11684,     Nikolai Weibull: 23889: fix -o completion in git cvsimport \n  
11685,     Nikolai Weibull: 23888: complete branch names and cached files after git log \n  
11686,     Nikolai Weibull: 23879: complete only cached files after git log \n  
11687,     Jesse Weinstein: 23878: completion for ranlib \n  
11688,     23875: complete heads  tags  and files after git log \n  
11689,     23874: only declare revision_arguments parameter once \n  
11690,     Nikolai Weibull: 23871: fix __cdrdao-drivers typo \n  
11691,     23872: complete git config in subcommand position \n  
11692,     23870: completion for git mergetool \n  
11693,     23868: completion for svn-buildpackage \n  
11694,     23867: completion for dpkg-buildpackage \n  
11695,     23863: completion for lsusb \n  
11696,     23863: remove all global variables \n  
11697,     23862: declare author_conversion_file_arg_spec local \n  
11698,     23860: complete patch names  omitting the  dpatch extension \n  
11699,     23854: complete colon-separated path after -P  other minor tweaks \n  
11700,     Julien BLACHE: 23852: completion for dpatch-edit-patch \n  
11701,     Pierre Habouzit: 23851: use ad-hoc functions to list git branches and tags \n  
11702,     23850: complete for GNU md5sum instead \n  
11703,     Jesse Weinstein: 23848: completion for md5sum \n  
11704,     23838: have git verify-tag complete tags instead of hash IDs \n  
11705,     23846: merge in additional changes from Nikolai Weibull s repo \n  
11706,     23814: fixes for Darwin \n  
11707,     23841: complete tag hashes for git verify-tag \n  
11708,     users/11883: return at top level caused following precommand functions\nto return immediately\n  
11709,     23834: complete tex files for xetex and xelatex \n  
11710,     Mikael Magnusson: 23832: fix git merge -m completion \n  
11711,     23831: fix handling of merge strategy option \n  
11712,     23829: merge in the remaining git completion changes from Nikolai Weibull s repository \n  
11713,     23828: merge in lots of git completion changes from Nikolai Weibull s repository \n  
11714,     23827: allow all arguments to options to either immediately follow the option letter or be the next word \n  
11715,     23824: merge in git rerere completion from Nikolai Weibull s repository \n  
11716,     23823: merge in git rev-parse completion from Nikolai Weibull s repository \n  
11717,     23822: merge in git rm completion fixes from Nikolai Weibull s repository \n  
11718,     users/11852: _expand_alias removed quotes from aliases incorrectly\n  
11719,     correct article number now that the mailing list is no longer sluggish\n  
11720,     2381x: set vipenultsrchstr to NULL after freeing it to avoid vi-mode history search segfaults \n  
11721,     users/11818: allow non-numeric keys for job status parameters\n  
11722,     unposted: fix recurring calendar event format in calendar\n  
11723,     users/11807: fix some job display bugs\n  
11724,     23812: fix core dump on ( command & ) from 23460\n  
11725,     23810: completion for lighty- enable disable -mod\n  
11726,     23809: expand $      in completion word\n  
11727,     23808: debugging for wcs_nicechar()\n  
11728,     23807: fix interactive completion mode\n  
11729,     updates for dev version\n  
11730,     23795: improve $ (Q)     with $    \n  
11731,     unposted: calendar_show: error in subscripts\n  
11732,     23794: fix crash completing on  foo$  (quotes significant)\n  
11733,     23792: test and documentation for improved backslash quoting\n  
11734,     23791: use VARARR for MB_CUR_MAX\nusers/11791: remove mysterious comment around emulate -L zsh in\nincremental-complete-word\n  
11735,     23788: add -h option to chown symlinks rather than targets  and change default behavior to do the opposite \n  
11736,     23785: add missing backslash in _arguments list in git-send-email \n  
11737,     23785: add missing backslash in _arguments list \n  
11738,     unposted: calendar_scandate needs to find the first time on the line\n  
11739,     users/11790: avoid nounset\n  
11740,     23784: Use $ \\     for quoting unparseable characters\n  
11741,     23783: use _path_commands \n  
11742,     23782: commands with descriptions \n  
11743,     23781: base host completion on output of `dput -H` \n  
11744,     23780: add -e  -H  and optional host argument \n  
11745,     23778: document KSH_TYPESET behaviour in typeset manual entry\n  
11746,     23775: restore completion of devicename=filename pairs after -Z and -M \n  
11747,     23764: allow hidden continuations in calendar entries\nallow UIDs to help with updates\n  
11748,     Roy Marples: 23762: need to suppress [     quoting in case in configure\n  
11749,     Roy Marples: 23726: need to suppress [     quoting in case in configure\n  
11750,     23761: calendar -b shows brief output\n  
11751,     23759: a few improvements to pick-web-browser\n  
11752,     23757: suppress correction of command words followed by ()\n  
11753,     23751: complete module files too\n  
11754,     23748: better completion for growisofs and mkisofs \n  
11755,     23749: completion for cdrdao \n  
11756,     23746: partial completion for growisofs \n  
11757,     23745: partial completion for genisoimage \n  
11758,     23738: additional git diff args \n  
11759,     23739: merge in git diff completion fixes from Nikolai Weibull s repository \n  
11760,     23736: status for file save wasn t initialised\n  
11761,     update some  distfiles\n  
11762,     23733: zmodload -LaF didn t include unloaded modules\n  
11763,     23732: three broken tests\n  
11764,     23730: improve preprocessor and regression tests for 23725\n  
11765,     23726: test for adding and removing environment variables\n  
11766,     23725: use setenv()/unsetenv() for environment memory management\n  
11767,     23720: handle arguments to dvips -P as part of the same word \n  
11768,     23718: don t use _arguments -s \n  
11769,     23714: handle dvips -G  -R  -u  -U  -v  -V  -y  and -z \n  
11770,     add (#cN M) globbing flag\n  
11771,     23712: handle dvips -j \n  
11772,     23702: fix installing executable scripts\n23703: getenv() should be zgetenv()\n  
11773,     attempt to remove executable permission  part 3\n  
11774,     attempt to remove executable permission  part 2\n  
11775,     unposted: force file to be non-executable\n  
11776,     23697: use -rdynamic where it seems to be available  not based on the value of $host \n  
11777,     23696: x=x; x[-10 =y did bad things\n  
11778,     23694: fix =~\n  
11779,     23693: _match completion tried to match the quoted form of filenames\n  
11780,     23691: declare local parameter scope for _arguments state \n  
11781,     Renato Botelho <rbgarga@gmail com>: 23685: new FreeBSD completions\n  
11782,     23686: respect TIN_HOMEDIR environment variable \n  
11783,     23682: module field renaming missed from 23665\n  
11784,     23680: tests for 23671\n  
11785,     23671: command not found handler\n  
11786,     23674: merge in git clone completion fixes from Nikolai Weibull s repository \n  
11787,     revert that\n  
11788,     23670: use getaddrinfo() and getnameinfo() instead of get*by* functions \n  
11789,     23666: redirect stderr from apt-cache --generate pkgnames to /dev/null \n  
11790,     23665: autoloading of module features and related tweaks\n  
11791,     23664: handle bts cache and cleancache subcommands \n  
11792,     23660: fix numerical sorting of parameters + tests + documentation\n  
11793,     23658: ChangeLog entry missed out\n  
11794,     unposted: improved calendar_lockfiles configuration\n  
11795,     bad use of indices in _combination\n  
11796,     23655: merge in git instaweb completion from Nikolai Weibull s repository \n  
11797,     23654: add completion for reprepro \n  
11798,     23653: add completion for apt-get autoremove \n  
11799,     unposted: force latest version of files from vendor to main branch\n  
11800,     unposted: force latest version of files from vendor to main branch\n  
11801,     unposted: force latest aclocal m4 from vendor to the main branch\n  
11802,     23645: use == instead of = \n  
11803,     23644: merge in git remote completion from Nikolai Weibull s repository \n  
11804,     23639: merge in git quiltimport completion from Nikolai Weibull s repository \n  
11805,     23639: merge in git merge-tree completion from Nikolai Weibull s repository \n  
11806,     23629: change references to  beta  to  dev  or  development  \n  
11807,     Tomasz Pala: users/11599: _ip improvements\n  
11808,     23628: merge in from Nikolai Weibull s repository completion for git mktree \n  
11809,     23627: merge in from Nikolai Weibull s repository fixes for git hash-object  index-pack  merge-index \n  
11810,     23611: new completions for ldd and LD_DEBUG on Solaris and Linux\n  
11811,     23610: merge in from Nikolai Weibull s repository git describe as well as fixes for diff-index  diff-files  and diff-stages \n  
11812,     fix typo of  23607 \n  
11813,     23609: merge in git clean completion from Nikolai Weibull s repository \n  
11814,     23670: rationalise some linked list functions\n  
11815,     23606: make all module feature autoloads pass through one function\n  
11816,     23595: merge in git archive completion from Nikolai Weibull s repository \n  
11817,     23594: merge in git grep completion from Nikolai Weibull s repository \n  
11818,     23593: merge in git annotate completion from Nikolai Weibull s repository \n  
11819,     23587: completion for xrandr \n  
11820,     23586: completion for dmidecode \n  
11821,     23585: handle errno properly in history save errors\n  
11822,     23581: handle errors writing history file better\n  
11823,     23580: rudimentary completion for guilt \n  
11824,     23578: make standard features autoloadable \nuse feature notation for  mdd autoloads\n  
11825,     23567: missed out ChangeLog entry\n  
11826,     23575: AIX needs features_() and enables_()\n  
11827,     23571 + unposted; AIX compilation fixes\n  
11828,     23569: make  bts show  behave the same as  bts bugs  \n  
11829,     23567: new _complete_help_generic zle non-completion widget\n  
11830,     23568: complete iwconfig modu \n  
11831,     not 23562 but should have been: test correction\n  
11832,     not 23562 but should have been: test correction\n  
11833,     23562: add KSH_ZERO_SUBSCRIPT option and leave off by default\n  
11834,     unposted: stop multibyte test files from cluttering up directory\n  
11835,     users/11575: improved documentation for _all_matches\n  
11836,     23553: bit missed out\n  
11837,     23553: bit missed out\n  
11838,     23553: bit missed out\n  
11839,     23553: bit missed out\n  
11840,     23553: bit missed out\n  
11841,     users/11568: use UTF-8 characters in some prompt themes\n  
11842,     23561: merge in relevant changes from Nikolai Weibull s repo to more appropriately complete after  git add  \n  
11843,     23560: improve $zsh_scheduled_events to make it easier to parse\n  
11844,     23557: complete filenames after  git reset <revision>  \n  
11845,     23556: completion for rrdtool \n  
11846,     23554: add $zsh_scheduled_events\n  
11847,     unposted: remove RCS $Id$ comments \n  
11848,     Remove conversion comment \n  
11849,     23553: unsubscripted array inside math eval behaves more rationally\n  
11850,     23552: unnecessary sched debugging warning\n  
11851,     23543: work around problem with     in _perforce\n  
11852,     unposted: update install-sh from automake 1 10\n  
11853,     unposted: update mkinstalldirs from automake 1 10\n  
11854,     23537: make style list a hash table\n  
11855,     23535: autoload saliases and dis_saliases from zsh/parameter\n  
11856,     23529: quote completion dump to prevent global alias expansion\n  
11857,     unposted: more _units tweaks\n  
11858,     unposted: more _units tweaks\n  
11859,     unposted: more _units tweaks\n  
11860,     Mikael and Phil: 23521  23522: extra locations for units data\n  
11861,     23519: completion for units\n  
11862,     23519: completion for units\n  
11863,     23518: MIME styles find-file-in-path and file-path \n  
11864,     23511: error if here document too large\n  
11865,     unposted: more uses of zstat\n  
11866,     23495: fix fall out from (R) change in completion system\n  
11867,     users/11366 (belated commit):  update documentation for $ var:-word  and\nrelated expressions \n  
11868,     unposted: clean up properly on failure to add autoloadable builtin\n  
11869,     23488: tidy up module interface and documentation\n  
11870,     23486: use  fd  syntax to get fd s for tests\n  
11871,     23485: feature completion and autoloading\n  
11872,     23482: more typos\n  
11873,     Phil Pennock: 23480: typo\nAlso typo in mod_stat yo\n  
11874,     see 23479: add initial features support for modules\n  
11875,     see 23479: add initial features support for modules\n  
11876,     23478: crash in reverse-menu-complete if no completion\n  
11877,     23475: call $service instead of  cdrecord   in case we are using wodim \n  
11878,     fix error name searching on Linux\n  
11879,     John Buddery: 23461: fix race setting up input multios\n  
11880,     23460: fix problem with ( stuff ) >multio1 >multio2\n  
11881,     Phil Pennock: 23450: $widgets crashed shell on undefined widget\n  
11882,     23447: improve documentation for zsh/newuser\n  
11883,     23446: fix typo producing wrong values for alias parameters\n  
11884,     Unposted  see discussion around 23431: MacOS multibyte issues\n  
11885,     23440: Make $param[(R)value  substitute the empty string on failure\n  
11886,     23444: handle multibyte characters in print -c/-C\n  
11887,     23443: mark --nofork and -f as redundant \n  
11888,     23442: update for vim 7 1 \n  
11889,     23439: complete sessions for -dr  -dR  -Dr  -DR  -dx  and -Dx \n  
11890,     11484: allow zmv to rename to equivalent but differently named files\n  
11891,     23438 (tweaked): improve _printers to use lpstat\n  
11892,     23438 (tweaked): improve _printers to use lpstat\n  
11893,     23437: typo noted by Wayne\n  
11894,     23435: Nikloai Weibull: bug testing end of string for sorting when ignoring\nbackslashes\n  
11895,     23436: consistency with null strings in local variables\nunposted: Phil Pennock: POSIX RE s are extended\n  
11896,     use _configure for config status\n  
11897,     23433: fix shift for ZMAXTIMEOUT\n  
11898,     23409: disable prompt_sp output after ^D was seen and message printed\n  
11899,     Peter A  Castro: 23408: zftp account handling was broken\n  
11900,     Phil Pennock + tweaks: 23398 + more tweaks: exec compatibility options\n  
11901,     unposted: regex fix-ups: missing doc file plus pointer fixes\n  
11902,     23375: Phil Pennock: =~  zsh/regex etc  etc \n  
11903,     unposted: typo in widget name in contrib doc\n  
11904,     Guillaume Chazarain: 23364: fix race in POSIX signal blocking\nby using local variables\n  
11905,     23363: fake-files now allows patterns\n  
11906,     23339: make malloc(0) allocate a byte\n  
11907,     23337: fix unmetafication for stat() of files in compctl\n  
11908,     Phil Pennock: 23326: compilation without ICONV broken\n  
11909,     unposted: fix error message for short ZWC file\n  
11910,     23313: fix test for incorrect version in ZWC file\n  
11911,     parse c\n  
11912,     23312: fix versioning and initialisation of word code headers\n  
11913,     23308: sanity for tindent in text output\n  
11914,     Christoph Bauer: 23309ish: extra #define for hpux\n  
11915,     Christoph Bauer: 23309ish: extra #define for hpux\n  
11916,     23303: use _guard \n  
11917,     23302: complete properties after svn propget and propedit \n  
11918,     23301: fix semicolon mistyped as a colon \n  
11919,     unposted: set version to 4 3 4-dev-0\n  
11920,     users/11419: zle copy-region-as-kill <string>\nadds text to the kill ring\n  
11921,     unposted: meant to add add-zsh-hook a while ago\n  
11922,     release 4 3 4\n  
11923,     Made changelog better \n  
11924,     users/11421: smart-insert-last-word fix \n  
11925,     users/11424: don t embed a comment inside a math expression \n  
11926,     users/11421: %    %  was broken in completion listings\n  
11927,     Christoph Bauer: users/11416: bad use of VARARR()\n  
11928,     update LICENCE to 2007\n  
11929,     update year to 2007\n  
11930,     unposted: prepare for release of 4 3 3\n  
11931,     23278: fix NUMERICGLOBSORT  broken by multibyte fixes\n  
11932,     users/11398: vi-goto-mark broken by multibyte support\n  
11933,     users/11398: vi-goto-mark broken by multibyte support\n  
11934,     23275: change order of arguments to _arguments so that options will actually be completed \n  
11935,     23273: fix bad patterns in reverse array subscripting\n  
11936,     post 23271 _sqsh puncuation\n  
11937,     23271: Pete Hollobon: completion for sqsh\n  
11938,     23270: fix strptime() on Solaris\n  
11939,     23264: don t add the -pcre-match operator unless the pcre functions are available \n  
11940,     23258: fix debugging added in 23248\n  
11941,     23257: buffer too short for multibyte $ (#)     evalution\n  
11942,     23255: fix 23253 better \n  
11943,     23253: Erik Johansson: remove double quotes causing zcompile to choke \n  
11944,     23252: complete for  aptitude unhold  \n  
11945,     unposted: better fix for complist line wrap from 23248\n  
11946,     23248: Completion listing problem with lines nearly screen width\nIf compiled with debug send dputs() output to $ZSH_DEBUG_LOG if defined \n  
11947,     unposted: update  distfiles\n  
11948,     23246: fix completions of redirections that occur before the command word\n  
11949,     23241: Daniel Qarras: fix for _module \n  
11950,     unposted: uninitialized variable in 23238\n  
11951,     23238: jobs didn t get deleted if they weren t printed\n  
11952,     unposted: more random calendar system fixes and improvements\n  
11953,     users/11333: fix users-hosts for ssh when user matched\n  
11954,     23236: Daniel Qarras: enhancements for _module \n  
11955,     unposted: nitpicked version of zmodload doc tweak\n  
11956,     23232: minor tweaks to zmodload\n  
11957,     22894 which was supposedly committed 2007-02-25 but somehow didn t make it:\nfix muttrc path expansion in search for aliaes \n  
11958,     23228: calendar tweaks  including summer time adjustment\n  
11959,     23226: handle  nice -n<-> \n  
11960,     fix output of prompt in single line ZLE\n  
11961,     23221: Martin Koeppe: don t use XTABS if not defined\n  
11962,     Fix lower casing of option names in some locales \n  
11963,     23215: completion for  module  \n  
11964,     23214: complete files after svn commit --file \n  
11965,     Fix for comm completion \n  
11966,     23206: completion for hg \n  
11967,     23205: fix misspelling of  effect  \n  
11968,     23203: acroread -version to get version (from Zvi)\nFix previous methods as fallback\n  
11969,     23198: improve _values -s\nunposted: document _regex_words -t\n  
11970,     23196: tweak apt-cache madison and --installed \n  
11971,     unposted: another _ip typo\n  
11972,     unposted: another _ip typo\n  
11973,     Small fix to 23177: compute *widthp and *swidep after nicechar() \n  
11974,     fix typo\n  
11975,     23190: tweak _net_interfaces for Linux\n  
11976,     unposted: tweak ip route show abbreviations\n  
11977,     Log a few belated commits \n  
11978,     unposted: tweak for possible multibyte characters \n  
11979,     unposted (based on users/10881 10884): add auto-previous zstyle  update\nsmart-insert-last-word to use auto-suffix-retain   always  block  etc \n  
11980,     23176: apply the (X) parameter flag to the (#) flag; fix comment typo \n  
11981,     23186: _ip completion and regex handling additions\n  
11982,     23185: qemu completion improvements \n  
11983,     changelog typo\n  
11984,     23183: Completion/Unix/Command/_qemu: completion for qemu \n  
11985,     23183 complete comma-separated list of directories/modules for --added-modules \n  
11986,     unposted: document some limitations of utils c\n  
11987,     23182: _arguments problem with --with-foo[=BAR  specifiers\n  
11988,     23178: update for modern versions of make-kpkg \n  
11989,     23177: better formatting of unprintable multibyte characters under 256\n  
11990,     23169 (tweaked): report error on failure to dup for multios\n  
11991,     23172: typo displaying multiline explanation strings\n  
11992,     23168: fix error message for failed bind\n  
11993,     23165: fix problems with bases: error if over 36 and don t interpret octal\n  
11994,     23164: Silence popd when PUSHD_SILENT is set \n  
11995,     fix metafication of $ (#)x \n  
11996,     unposted: document BAUD change in README\n  
11997,     23159 plus minor doc tweaks: leave BAUD parameter unset by default\n  
11998,     23153: restore old ztrcmp() and add comment about why\n  
11999,     23152: make ztrcmp() respect MULTIBYTE\nmake sorting of printed hash tables more consistent\n  
12000,     unposted: uninitialised variable could result from 23144\n  
12001,     23151: partial completion for mtn (monotone) command \n  
12002,     23150: completion for cdbs-edit-patch \n  
12003,     23144: Felix Eckhofer <felix@tribut de>: NULL pointer in complist c\n  
12004,     23143: make =-expansion with metacharacters more consistent\n  
12005,     unposted: we could add checksched() twice to the timed event list\n  
12006,     23142: calendar enhancements: relative times  recurring events\n  
12007,     23141: don t zrfresh() after printjob() that didn t print\n  
12008,     23140: handle syntax for iputils variant as well as whichever arping for which we had already been completing \n  
12009,     23138: further tweak to backslashes in $     \n  
12010,     23136: handle Bnulls now added in $     \n  
12011,     Fixed a few problems revealed by compiler warnings \n  
12012,     Mark an arg as UNUSED() \n  
12013,     Silenced a compiler warning by making an int unsigned \n  
12014,     Fixed the error checking of mbrtowc() since its return vlaue can never\nbe < 0 -- it returns MB_INVALID  (size_t)-1  which is a positive value \n  
12015,     unposted: sched deleted timed function twice\n  
12016,     23131: new tests for command substitution\n  
12017,     23126  modified: bug in zle history inside $( and $((\n  
12018,     23122: bug with new sort stuff\n  
12019,     23119: lower case in sorting properly\n  
12020,     unposted; typo\n  
12021,     23118: improve sorting to make it work with locales\n  
12022,     23117: strip out erroneous commas \n  
12023,     23116: strip out erroneous commas \n  
12024,     23115:  ;|  at end of case clause causes later patterns to be tested\n  
12025,     unposted: typo in calendar_scandate doc\n  
12026,     unposted: typo in calendar_scandate doc\n  
12027,     23114: $ foo:s/bar/rod  broken\n  
12028,     users/11113: improve _todo sh\n  
12029,     23107  23109: suppress parallel makes \n  
12030,     23104: fix line numbers for DEBUGBEFORECMD\ntidy up some wordcode definitions\n  
12031,     23101: various combinations of ZERR with function returns were feature-ridden\n  
12032,     users/11111: add DEBUG_BEFORE_CMD option\n  
12033,     23098: printf multibyte character widths\n  
12034,     23097: splitting of $      strings in completion\n  
12035,     23091: *roff problems noticed by doclifter\n  
12036,     20390: prefer ncurses to curses\n  
12037,     23089: relax playlist glob pattern to work with newer versions \n  
12038,     23088: printf formats and arguments need different octal escape sequences\n  
12039,     23086: printf should handle octal escapes in the \\0NNN form\n  
12040,     22817: update for modern options  add completion of releases \n  
12041,     23080: fix -c and -g (both were mistakenly -b) \n  
12042,     23071: signed characters with no multibyte support\n  
12043,     23070: Fix [[ -N file    test failure on NFS\n  
12044,     document OS may handle negative or zero PID in kill\n  
12045,     23054  part: error message for  kill -  with nothing after the - was confusing\n  
12046,     23060: make everything in Doc makes info\n  
12047,     23057  23058  23059: completions from arno\n  
12048,     users/11083: functions for handling shell arguments in ZLE\n  
12049,     23052: multibyte characters in typeset -L/R/Z padding\n  
12050,     23051: $ (Q)     of RCQUOTE expression failed with DEBUG active\n  
12051,     users/11079: 1(2##)\n  
12052,     Unposted  see 23042: add some missing backslashes at the ends of lines \n  
12053,     unposted: improve CUTBUFFER and killring documentation\n23044: print -c and print -C didn t handle unmetafied input\n  
12054,     improved firefox support\n  
12055,     23039: handle iceweasel as firefox \n  
12056,     23036: three more fixes for completion using $     \n  
12057,     23028: use texi2pdf where available\n  
12058,     Vin Shelton: 23027: typo in calsys yo\nunposted: missing autoload in calendar_add  improve age date shortcuts\n  
12059,     Incomplete improvements for $      in completion\n  
12060,     unposted: fix calendar stuff\n  
12061,     c f  23023: typo\n  
12062,     c f  23023: new calendar function system \n  
12063,     23022: don t allow WORDCHARS to be exported to tests\n  
12064,     unposted: update Perforce completion to 2006 2\n  
12065,     23018: parse out section headings from darcs --help \n  
12066,     23008: failure to output error message could alter exit status\n  
12067,     23005: completion for toilet \n  
12068,     users/10989: add fake-always pattern that overrides ignored-patterns\n  
12069,     users/10981: needs glob_subst for config file\n  
12070,     users/10979: ssh completion uses config file from -F if present\n  
12071,     22998: add -s to _arguments\n  
12072,     unposted: update config guess and config sub to 2006-07-02 versions \n  
12073,     22997: fix $    ?     exit and traps\n  
12074,     22992: make $? available in exit traps/hooks\n22993: slightly more effective _make variable fix\n  
12075,     22984: add zshexit hook\n  
12076,     22988: arno: _make fix for special variables\n  
12077,     22983: exit could loop for ever\n  
12078,     unposted: tweak ChangeLog\n  
12079,     22981: Zvi Har el: bad call from 22952\n22980: add hook array for special functions\n  
12080,     22980: 22952 messed up parameter padding flag optional arguments\n  
12081,     _zip completes  xpi files\n  
12082,     22972: limit autoload completion to functions not yet registered \n  
12083,     fix error message\n  
12084,     22968: fix metafication for print -z and print -s\n  
12085,     22953: Mikael Magnusson: _most_recent_file fix \nusers/10928: send all  jobs  output to stdout\n  
12086,     22952: fix some argument delimiters to work with multibyte characters\n  
12087,     22950: fix reverse-menu-complete as start of completion\n  
12088,     22947: minor mkdir completion fixes \n  
12089,     22934  modified  see 22937: add HIST_SUBST_PATTERN option\nmake $    /#%     anchor at both ends\n  
12090,     22940: completion for mkdir\n  
12091,     users/9483: completion for ri (ruby documentation viewer)\n  
12092,     22924: a couple more metafy_line()/unmetafy_line() problems\n  
12093,     obscure crash with hasbrpsfx()\n  
12094,     22913: set $! on  bg \n  
12095,     unposted: tweak job completion in _perforce\n  
12096,     22914: add wodim to compdef line \n  
12097,     22911: use QT_BACKSLASH if instring is QT_NONE\n  
12098,     arno: two new completions\n  
12099,     boring  distfiles stuff\n  
12100,     More option twiddles for _rsync s 2 6 9 release \n  
12101,     The final option changes for 2 6 9 \n  
12102,     use plain mode for listings in _todo sh\n  
12103,     22896: Src/Zle/complete mdd: rename Mandrake to Mandriva \n  
12104,     22888: completion for tardy \n  
12105,     unposted: typo in 22885\n  
12106,     22885: fix problems with multibyte tokenized strings\nunposted: _todo sh: more contexts\n  
12107,     Move and additional  distfils\n  
12108,     c f  22833: rename Completion/Mandrake to Completion/Mandriva\n  
12109,     string quoting in compctl used QT_NONE instead of QT_BACKSLASH\n  
12110,     archive progeny com will be decommissioned around 2006-10-22\nRemove from lists\n  
12111,     Doc for auto-suffix-remove/retain \n  
12112,     users/10885 and two unposted new examples \n  
12113,     Add two widges for user control of auto-suffix remove/keep \n  
12114,     Add a number of other notes about terminal attributes \n  
12115,     Add an example  as a comment \n  
12116,     22874: run-help unquoting wasn t consistent\n  
12117,     22875: completion for a2ensite  a2dissite  a2enmod  a2dismod \n  
12118,     22873: typo in expn yo\n  
12119,     allow - before first argument of tar\n  
12120,     22859: improve _arguments auto-documentation some more\n  
12121,     22858: _arguments can generate documentation from --help text\n  
12122,     22851: arno:  -  can occur in init script names\n  
12123,     22854: replace-string-again\n  
12124,     22852: users style effect changed in 22191\n22853: unquoted ^ at end of bindkey string treated literally\n  
12125,     22820: this time  fix handling of long accumulated completion line\n(ChangeLog entry)\n  
12126,     22839: complete filenames as first argument to info too\n  
12127,     22819: bits missed for some reason\n  
12128,     22835: tidy up pon bit and add poff completion \n  
12129,     22831: use CM_SPACE in compdescribe\n  
12130,     22820: this time  fix handling of long accumulated completion line\n  
12131,     10791: fix handling of long accumulated completion line\n  
12132,     22819: improved internal use of string quotation \nplus completion bug fix with RCQUOTES\n  
12133,     22818: improved subscript flag doc\nunposted: trivial _perforce tweak\n  
12134,     22816: Joerg Sommer: completion for pon \n  
12135,     22815: Joerg Sommer: completion for invoke-rc d\n  
12136,     22814: add  mp4 and  flv to media file extension list \n  
12137,     22812: utilize _bind_addresses in existing completion functions \n  
12138,     22811: helper function to give local IP addresses to which a program might bind a socket \n  
12139,     22810: fix malformed --encrypt-to line\n  
12140,     oops\n  
12141,     2280x: handle internationalized output and choices within brackets \n  
12142,     22804: Mikael Magnusson: allow zero-length narrow-to-region range\n  
12143,     22803: updates for dchroot and schroot completion  and new completion for dchroot-dsa \n  
12144,     22800: put quotes around  $@  \n  
12145,     22799: change _fusermount to use _fuse_values and _canonical_paths \n  
12146,     22798: _bittorrent cleanup and fixes \n  
12147,     22797: generic FUSE completion support functions \n  
12148,     22796: fix misspelling of IPREFIX \n  
12149,     22795: handle https urls \n  
12150,     22794: completion for acpitool \n  
12151,     fix thinko in 22787\n  
12152,     Vin Shelton: 22789: 22783 broke  zshenv\n  
12153,     22787: fix calling convention of pattern_match\n  
12154,     22783: Frank Terbeck: don t load zsh/newuser unless interactive\n  
12155,     22780: add _arguments/comparguments -n to set index of first non-option arg\n  
12156,     22778: basic completion for locate\nunposted: fix todo sh search completion\n  
12157,     22765: rename some MB_ macros to WC_ for consistency \n  
12158,     22761: fix compdescrie for multibyte characters\n  
12159,     fix typo\n  
12160,     revert 22758 and add LC_NUMERIC and LC_MESSAGES\nto test harness instead\n  
12161,     22758: fix tests by setting locale to C\n  
12162,     22752: improved introduction to completion\n  
12163,     22739: arno: different test for theme in prompt -c\n  
12164,     22753: minor character bugs spotted on Cygwin\n  
12165,     users/10748: improve a couple of minor things in compsys doc\n  
12166,     unposted: add p4d and some undoc suppport in _perforce\n  
12167,     22742: parameter padding uses string lengths unless (m) flag set\n22743: restrict sh  - [args   ->  -xv [-- args   hack to sh mode\n  
12168,     operator precedence fix\n  
12169,     22728: $functrace parameter for function backtraces \n  
12170,     22729: trunction in computil c did t handle multibyte characters\n  
12171,     22727:  use \ exit\  to exit  was suboptimal\n  
12172,     22721: add pdf target to top Makefile in\n  
12173,     unposted: spacing fix\n  
12174,     unposted: replace elided colon\n  
12175,     22719: check for RLIMIT_NICE and RTLIMIT_RTPRIO so 22718 will work \n  
12176,     22718: use ulimit -e and -r for RLIMIT_NICE and RLIMIT_RTPRIO respectively \n  
12177,     zsh-users/10720: a couple of checkmail fixes\n  
12178,     22715: AUTOCONTINUE option never worked \n  
12179,     22713: word end in math completion context was screwy\n  
12180,     assume width 1 for control characters;\ndon t crash if width of repeated padding string is 0\n  
12181,     22692: additional notes on a couple of parameter expansion features\n  
12182,     22705: make $ (l   )     and $ (r   )     handle multibyte characters\n  
12183,     22704: new completion for todo sh\n  
12184,     22689: untokenize strings used in parameter substitution pattern matching\n  
12185,     unposted: Mikael Magnusson: typos in sched doc\n  
12186,     22686: unset array if assigning numeric parameter\n  
12187,     22660: unmetafy directory for opendir() etc  in compctl\n  
12188,     22685: make printf  %d  \\ X handle multibyte characters\n  
12189,     22684: improve getkeystring() interface and make printf do octal escapes\n  
12190,     22676  22678: extend sched and make it able to run events when waiting for\ninput\n  
12191,     22681: find all error number definitions\n  
12192,     22672: arno: unset ksharrays for prompt functions\n  
12193,     22672: arno: unset ksharrays for prompt functions\n  
12194,     fix article num\n  
12195,     2265x: update for tla 1 3 5 \n  
12196,     22656: improve handling of monitor option\n  
12197,     zsh-users/10634: try to fix relative paths of completion configuration file\n  
12198,     22655: completion for sisu \n  
12199,     unposted: tweak completion docs\n  
12200,     22651: failed to unmetafy bytes for output\n  
12201,     22650: remove now buggy pointer to last added style\n  
12202,     22643: completing in math context\n  
12203,     22683: deleting style in context never removed style itself\n  
12204,     22613: add strftime -r to use strptime() if available\n  
12205,     22612: comment the static variables\n  
12206,     22610: allow zstyle -L to have arguments\n  
12207,     22611: bug scrolling wide completion list\n  
12208,     22609: complete for baz switch\n  
12209,     22601: need some unquoting in _list_files\n  
12210,     22608: improve doc for match-word-context\n  
12211,     22606: add match-word-context \nRemove workaround from match-words-by-style\n  
12212,     22605: bug in complist wide character fixes introduced infinite loop\n  
12213,     unposted: update distributed files \n  
12214,     Fix an email address \n  
12215,     22599: use wide character widths in completion\n  
12216,     unposted: trivial typo in compsys yo\n  
12217,     22597: back off two column-subtraction hunks\n  
12218,     22595: paranoid bounds-checking on some\nloop indices \n  
12219,     22594: Attempt to fix some off-by-one errors for completion lists\nthat exactly fit the display width\n  
12220,     22594: Attempt to fix some off-by-one errors for completion lists\nthat exactly fit the display width\n  
12221,     post-22593 typo fix\n  
12222,     22593: add handle-nonexistent style to MIME handler\n  
12223,     22592: add tcp_send -c option for cat\n  
12224,     unposted: badly positioned declaration in complist c\n  
12225,     22589: bug with long lines in menu selection\n  
12226,     22588: handle targets with colons in their names \n  
12227,     22587: update some distribution docs\n  
12228,     22586: fix warnings spotted on Cygwin\n  
12229,     22585: fix zsh exports\n  
12230,     22584: GNU tar should complete uncompressed archives\n  
12231,     22582: configure ac: test properly for functions for MULTIBYTE_SUPPORT\n  
12232,     22583: erand48() needs initialisation on Cygwin \n  
12233,     rationalise mb<->wc conversions to use restartable form\n  
12234,     unposted: improve svn import from users/10570\n  
12235,     22579: find  pod files in include path for perldoc\n  
12236,     users/10570: handle  svn import  better\n  
12237,     22575: Missed this\n  
12238,     22578: ensure HISTCHARS/histchars never contains non-ASCII characters\n  
12239,     unposted: yet more history-beginning-search-menu fixes\n  
12240,     22575: multibyte fixes for bslashquote()  getzlequery()\n  
12241,     22574: more history-beginning-search-menu fixes\n  
12242,     22573: smooth interface to history-beginning-search-menu\ndocument how to quote metacharacters for reverse array subscript\n  
12243,     22572: use of (#m) was broken with pure strings\n  
12244,     22572: use of (#m) was broken with pure strings\n  
12245,     users/10564: _gpg key ring fix\n  
12246,     unposted: a technique for overriding ZLE widgets within a selected keymap\n  
12247,     22565: Fix bug after failed menucompletion with accept-and-menu-complete?\n  
12248,     22562: make $    #     etc  understand multibyte characters\n  
12249,     22561: fix long-standing display bug in incremental-complete-word \n  
12250,     22560: tweak history-beginning-search-menu to clear menu after use\n  
12251,     22559: add history-beginning-search-menu\n  
12252,     22558: declaration after statement\n  
12253,     22557: turn on multibyte option by default\n  
12254,     fix typos in 22556\n  
12255,     22556: Multibyte separators and delimiters\n  
12256,     22554: completion for vorbiscomment \n  
12257,     unposted: update  distfiles\n  
12258,     22553: completion for metaflac\n  
12259,     22552: update for tla 1 3 4 \n  
12260,     22550: put  exec  tests\nin subshells and allow substitution on test output to occur\nafter the test \n  
12261,     22549: improve svn propset completion slightly \n  
12262,     22546: fix  myfd >    bug and tweak tests\n  
12263,     22544: Improve use of ztype tests for multibyte characters   Add\nPOSIX_IDENTIFIERS option to control allowability of multibyte\nalphanumeric characters in parameter and module names \n  
12264,     22543: completion for clusterssh \n  
12265,     22542: deoverenthuse cmdpopping\n  
12266,     22573: rm -rf autom4te cache on distclean\n  
12267,     22529: multibyte conversion in math expressions\n  
12268,     22526: enhance $ (#)     to handle Unicode\n  
12269,     22525: lengths and cases of multibyte strings in parameters and history\n  
12270,     22524: searchable parameter subscripts with multibyte chars \na few other fixes\n  
12271,     22522: infinite loop with invalid character in mb_metastrlen()\n  
12272,     22519: initial multibyte parameter tests\n  
12273,     22518: Initial go at making parameter subscripts\nuse multibyte characters \n  
12274,     22516: error in func() didn t pop command stack\n  
12275,     22501: missed README chunk\n  
12276,     unposted: autoload is-at-least in _tar if using GNU tar \n  
12277,     22513: only do that for GNU tar >= 1 14 91 \n  
12278,     22511: complete compressed archive filenames for GNU tar even when a compression\noption is not specified \n  
12279,     22501: reduce maximum function depth to 1000\n  
12280,     22492: url-quote-magic should detect syntactic word breaks correctly\n  
12281,     unposted: remove redundant TODO\n  
12282,     22486: completion for dak (the debian-archive-kit) \n  
12283,     users/10282: complete associated sections with man page names \n  
12284,     unposted: complete the same way for rmadison \n  
12285,     22484: support varargs h in addition to stdarg h\n  
12286,     22483: add $sysparams to zsh/system\n  
12287,     22481: complete svn diff and resolved subcommands \n  
12288,     22480: autoload math functions from zmathfuncdef\n  
12289,     22479: _arguments -s \n  
12290,     22476\n  
12291,     Got rid of several compiler warnings about signed/unsigned problems by\nswitching patchar_t from wchar_t to wint_t (and renaming the typedef to\npatint_t in the process)  changing two  int  variables into  patint_t \nvariables  and creating a PEOF define that uses either WEOF or EOF as an\ninvalid character value instead of a literal -1 \n  
12292,     22474: use variable argument lists to improve error message handling\n  
12293,     Made implied  int  on new static variable explicit (which silences\ngcc) \n  
12294,     Option changes for _rsync \n  
12295,     Option changes for the upcoming 2 6 9 release \n  
12296,     22473: tweak bad interpreter formatting\n  
12297,     22470: attempt to improve errno h searching\n  
12298,     10343: improve error message for bad #! lines\n  
12299,     22469: use _canonical_paths \n  
12300,     22468: fixes and updates \n  
12301,     22467: utility function which completes all paths given to it  and also\ntries to offer completions which point to the same file as one of the paths\ngiven \n  
12302,     22466: cope with autoconf 2 60 config status syntax \n  
12303,     22465: add datarootdir for substitution in order to cope with change in autoconf CVS \n  
12304,     22464: bad recursion if error in prompt substitution\n  
12305,     22454\n  
12306,     Hideki ONO s changes for *BSD \n  
12307,     22457  R  Ramkumar: fix buggy quoting of zstyle contexts \n  
12308,     22456  R  Ramkumar: update for mpc 0 11 2 \n  
12309,     22455  R  Ramkumar: update for valgrind 3 1 1 \n  
12310,     22451: cross-reference $ ^spec  in brace expansion\n  
12311,     More _bzr improvements \n  
12312,     Added a bunch more missing options  a few missing sub-commands \nand a bunch of  =  specifiers to indicate that long-named args\ncan be attached with  =  to their arg value \n  
12313,     22450: completion for tcptraceroute \n  
12314,     22449: completion for tracepath and tracepath6 \n  
12315,     22448: typo retrieving $RBUFFER in completion\n  
12316,     22446: acknowledge that tags is an alias of tag \n  
12317,     Fix small but potentially confusing typo \n  
12318,     More _bzr completion improvements \n  
12319,     - Unified the mv|move|rename completion (as happened in bzr) \n- Added resolved  bind  break-lock  reconcile  unbind  nick \n  init-repo  init-repository  uncommit  and sign-my-commits \n  
12320,     22440: _list_files loaded zsh/stat too early\nunposted: document the use of stat builtin\nunposted: improve docs for $$ and $PPID\n  
12321,     Two more new subcommands for _bzr \n  
12322,     Added missing checkout and update sub-commands \n  
12323,     A couple minor _bzr improvements \n  
12324,     - Fixed _bzr_completeParents to read the parent info from the right\n  file \n- Separated the upgrade sub-command so that we can add its missing\n  --format option \n  
12325,     22436: completion for OpenBSD pax\n  
12326,     22435: completion for GNU comm \n  
12327,     22434: completion for vserver \n  
12328,     22433: add completion for --no-status option \n  
12329,     22432: bug with backtracking over repeated single parameterhs\n  
12330,     this one got missed\n  
12331,     22431: set WIDGET etc  more consistently when executing zle functions\n  
12332,     22429: fix bug with pure string matching\n  
12333,     22427: zle <widget> -w sets the environment for <widget>\n  
12334,     users/10172: new zle command read-command\n  
12335,     unposted: improve recognition of parameter arguments in zmathfuncdef\n  
12336,     Francisco Borges: users/10162: updated _aptitude \n  
12337,     22425: update for new surfraw debsec elvi from Micah Anderson \n  
12338,     22416: forgot zmathfuncdef\n  
12339,     unposted: documentation for execute-as-is fix in 22417\n  
12340,     22416  tweaked: math functions via shell functions\nunposted: add styles to pick-web-browser\n  
12341,     unposted: update raggle completion for version 0 4 4\n  
12342,     22418: completion for GNU env \n  
12343,     22417: allow autocd with execute-as-is\n  
12344,     22415\n  
12345,     Use the --info-dir option with install-info instead of --dir-file \n  
12346,     22409: fix --disable-multibyte patterns\n  
12347,     22408: support for multibyte characters in patterns\n  
12348,     22407:  zsh-mime-handler now needs NULL_GLOB\n  
12349,     tweak pattern matching for execute-as-is\n  
12350,     22404: completion for cowsay\n  
12351,     22394  22043: execute-as-is style for MIME suffixes\n  
12352,     22393  22402: use-ip and known-hosts-files styles\n  
12353,     22375: doc for $ (0)     splitting\n  
12354,     22392: completion for ladspa s analyseplugin\n  
12355,     users/10107: shell ignores SIGQUIT\n  
12356,     22390\n  
12357,     Fixed a typo \n  
12358,     My improved version of the _bzr script taken from the bzr dev\nrepository (from contrib/zsh/_bzr) \n  
12359,     Patch for part of sourceforge bug #1262954 \n  
12360,     Fixed a compilation problem when HAVE_GETRUSAGE is defined\nbut HAVE_WAIT3   See the sourceforge bug report:\n   net/tracker/?func=detail&atid=104068&aid=1262954&group_id=4068\n  
12361,     users/10087: no aliases for case of  in  in  case \n  
12362,     22386: fix acroread version detection according to Bart s 22385 \n  
12363,     Fixed undefined function reference (zwarnname() should have been\nzwarnnam()) \n  
12364,     Fixed call to undefined function zwarnname() instead of zwarnnam() \n  
12365,     22375  22376: $ (0)     splits on NULL byte\n  
12366,     22638: MACHINES: IRIX\nusers/10047: zle widget -K keymap\n  
12367,     thinko fix\n  
12368,     22371: use only alphanumerics and underscores as word characters with vi bindings \n  
12369,     22360  22365: support version 2 of Yodl\n  
12370,     22366: better handling for multibyte-character-containing words in vi widgets \n  
12371,     22364: add  nice  and  rt_priority  rlimits (NICE and RTPRIO) \n  
12372,     22349: completion for nautilus \n  
12373,     Got rid of a compiler warning \n  
12374,     - Got rid of one compiler warning about a clobbered variable \n- Split a line that had two statements on it (looked like an\n  accidental joining) \n  
12375,     users/10013: fix use of zshall in helpfiles\n  
12376,     users/10007\n  
12377,     Added missing <D> for HIST_SAVE_BY_COPY \n  
12378,     22335\n  
12379,     Fix some compiler warnings and ensure that zmod gets restored\nproperly in bin_zle_call() \n  
12380,     22337: debugging code omitted from 22331\n  
12381,     22301\n  
12382,     Briefly enable aliases for one of the evals so that the expansion\nof a $(   ) or `   ` properly uses normal and global aliases \n  
12383,     22271\n  
12384,     Use the new  flags  integer to get rid of the mult_isarr global \n  
12385,     Initialize the new  flags  integer when creating a list \n  
12386,     22331 and an extra change \n  
12387,     Changed struct listnode to use  prev  for the previous pointer \nnot  last  \n  
12388,     Changed some structures to avoid gcc s type-punned warnings \n  
12389,     22328  modified: add -o option to compadd\nadd _list_files helper to handle new file-list style for _path_files\n  
12390,     unposted: version is on 4 3 2-dev-1\n  
12391,     Tweaked a couple comments \n  
12392,     22321: optimize 22318 \n  
12393,     users/1097: rehash style for external commands\n  
12394,     22318: uniquifying special arrays was broken\n  
12395,     22277: missed bit\n  
12396,     22317: exit status from code backgrounded in function\n22277  22281  tweaks: standardize behaviour of wait builtin\nwith trapped signals\n  
12397,     c f  22307: change test $foo = bar to test x$foo = xbar in configure ac\n  
12398,     Release 4 3 2\n  
12399,     22313\n  
12400,     Added  mod_export  to the declaration of makecommaspecial() \n  
12401,     22036: fix warning from test\n  
12402,     22309: update for new surfraw debsec elvi \n  
12403,     Release 4 3 1  finally (updated   )\n  
12404,     Release 4 3 1  finally\n  
12405,     add missing  distfiles\n  
12406,     22305: no default for pine-directory\nunposted: a couple of small doc fixes\n  
12407,     Mention the latest _rsync tweaks \n  
12408,     Added --no-H and --no-hard-links \n  
12409,     _arguments -S for _schroot\n  
12410,     22302: completion for schroot \n  
12411,     One more _rsync tweak \n  
12412,     Added --copy-dirlinks option \n  
12413,     22298: completion for diffstat\n  
12414,     22294: add GNU libc confstrings to getconf completion \n  
12415,     unposted: add _linda to C/D/C/ distfiles \n  
12416,     unposted: update config guess and config sub to 2005-08-03 and 2005-07-08  respectively \n  
12417,     unposted: 4 3 0-dev-5\n  
12418,     Optimized away a recently-added call to strlen() \n  
12419,     22289: completion for linda \n  
12420,     One last compcore tweak \n  
12421,     Made the realocation of the line buffer in add_match_data() use a\nlittle more optimal size   Also tweaked the code just a little \n  
12422,     22285: assorted fixes:\n_imagemagick files\nintro yo list of other manual pages\npick-web-browser: add firefox\nzsh-mime-setup: list consistent with styles for zsh-mime-handler\n  
12423,     22284: add --disable-dynamic-nss configure switch to disable use of getpw*()  getgr*()  initgroups() functions \n  
12424,     Another _rsync tweak \n  
12425,     Added the missing -h option for --daemon mode \n  
12426,     users/9936\n  
12427,     The code in add_match_data() that looks for invalid characters\nnow properly parses the string as metafied \n  
12428,     A few more minor D04parameter ztst additions \n  
12429,     Make sure that the (A) assignment of a single-item array retains\nits arrayness   Also ensure that the array/scalar type of each\nassigned variable is correct \n  
12430,     Weed out hashed-entry lines from the known_hosts file \n  
12431,     Weed out hashed host lines that start with a  |  since they re\ncompletely useless for completion \n  
12432,     22275\n  
12433,     A few more improvements about word splitting \n  
12434,     The rest of 22273 \n  
12435,     Test that $ (A)=name:=word  avoids splitting on quoted whitespace \n  
12436,     Made $ (A)=name:=word  (which is an array assignment) not split on\nquoted whitespace  just like the new $ 1+ $@   handling \n  
12437,     22273 (1st hunk) to fix a typo in README \n  
12438,     Changed  following  to  preceding  \n  
12439,     22272: 4 3 0-dev-4\n  
12440,     22270\n  
12441,     Added a test for $ name+$array$scalar  \n  
12442,     Fixed another $ name+word  problem when word consisted of an\narray followed by a scalar   Also updated several comments \n  
12443,     unposted: fix _perforce to allow matching control on files from p4 output\n  
12444,     22268: $ 1+ $@   fix \n  
12445,     Document that quoting may be used in the word portion of the\n$ name:+word  and $ name:-word  expansions \n  
12446,     - Some changes to handle $ 1+ $@   being fixed \n- Added quite a few new tests \n  
12447,     - Fixed: setopt shwordsplit; set 1 \ 2 3\  4; print -l $ 1+ $@  \n- Fixed: setopt shwordsplit; foo=\ 1 2\ ; print -l $ ==foo+$foo \n- Fixed: emulate sh; touch \ 1 2\ ; print -l $ 1:-*\\ * \n- Improved multsub() and its comments \n  
12448,     Mention that the user can request field-splitting in\naddition to choosing to use an array \n  
12449,     22215 and 22217 \n  
12450,     Replaced a flawed look-behind algorithm for backslash detection\nwith one that looks forward (avoiding an accidental quoting of a\nchar after a  \\\\  sequence) \n  
12451,     Made add_match_data() look for invalid multibyte chars in the\nnames and substitute $ \\123  sequences for them \n  
12452,     Call makecommaspecial() when we notice we re completing inside\nan open brace list \n  
12453,     Added the makecommaspecial() routine that completion uses when\nit is completing filenames into an open brace list \n  
12454,     22235: Eric Mangold: twisted completion\n  
12455,     22237: location of man pages on NetBSD\n  
12456,     22234: Adeodato Simó s quilt completion improvements \n  
12457,     Fixed suffix removal \n  
12458,     Call ZS_memchr() instead of plain memchr() so that suffix-removal\nworks again \n  
12459,     Define ZS_memchr() as either wmemchr() or memchr() \n  
12460,     unposted: update some  distfiles \n  
12461,     22205: patch from R Ramkumar to use the argument to -C in make completion \n  
12462,     One more _rsync change \n  
12463,     Added one last (I hope) new option for the imminent 2 6 7 \n  
12464,     22200: process text wasn t unmetafied for output \n  
12465,     22198: do always set HOME in native emulation\n  
12466,     Silenced a compiler warning \n  
12467,     Added the missing return value to a newly-added  return  \n  
12468,     4 3 0-dev-3\n  
12469,     22195: don t set HOME in the shell\n  
12470,     22195: don t set HOME in the shell\n  
12471,     More _rsync changes \n  
12472,     - Fixed completion after using the -f option due to a trailing \ :\  \n  so removed a bunch of trailing \ :\ s \n- Use  _directories  for consistency \n- Added some missing  _files  directives \n- Added some default completions for a couple options \n  
12473,     22193: completion for wanna-build \n  
12474,     22192: remove comments from  ssh/known_hosts\n  
12475,     22191: from Danek Duvall: neaten host and user completions\n  
12476,     22187: improved _hosts\n  
12477,     Added one more new option for 2 6 7 \n  
12478,     Updated _rsync \n  
12479,     Added options for upcoming 2 6 7 release \n  
12480,     22179: complete audio files and playlists based on a list of file extensions provided by Joe Wreschnig \n  
12481,     22174: fix misspelling of -Q for oggdec \n  
12482,     22169: hook function zle-keymap-select called when $KEYMAP changes\n  
12483,     22168: add options and handling for new subcommands added in 22166 except for cache and cleancache \n  
12484,     22167: completion for GNU cp \n  
12485,     22166: add new bts subcommands (clone  submitter  found  notfound  block \nunblock  user  usertag  package  owner  noowner  reportspam  cache \ncleancache) \n  
12486,     22165: change  zshparams  to  zshparam  \n  
12487,     Fixed a couple free()-related bugs in the %D prompt-expansion code \n  
12488,     Tweaked the code that handles %D so that: (1) we don\ t free() a NULL\npointer (we use zsfree() instead)  and (2) we avoid a rare bug that\ncould call free() on same memory twice (e g   %D  %D ) \n  
12489,     22110: more intelligent su completion\n  
12490,     Removed a compiler warning \n  
12491,     Got rid of unused-variable compiler warning when compiling a\nnon-multibyte zsh \n  
12492,     Remove superfluous STOUC() use \n  
12493,     Got rid of some superfluous STOUC() calls (such as the ones I added\nfor the arg of calls to nicechar()  which doesn t need this) \n  
12494,     22162\n  
12495,     A better version of my last change \n  
12496,     Metafy the output of the ztrftime() string since that s what the\nprompt expects and some date names might not be ASCII \n  
12497,     Values being stored in an array or a hash needed to be metafied\n(using META_DUP) instead of just duplicated via ztrdup() \n  
12498,     If we are saving the ztrftime() value in a variable  we now metafy\nthe string (using META_DUP) instead of duplicating it via ztrdup() \n  
12499,     22159: completion for tpb \n  
12500,     Added missing  Src/  prefixes to a recent list of changed files \n  
12501,     The new  eol  var was being set in singlerefresh()  but not accessed \n  
12502,     22153: completion for tpconfig \n  
12503,     Even more multibyte code cleanup \n  
12504,     - When mbrtowc() returns -2 when given all the remaining chars in a\n  string  set an end-of-line flag and avoid calling mbrtowc() again\n  for any of the incomplete characters that remain in the string \n- Use  mbs  for the multi-byte state variable name (for consistency) \n- Use the new MB_INVALID and MB_INCOMPLETE defines for the size_t\n  -1 and -2 values (respectively) \n  
12505,     - Use  mbs  for the multi-byte state variable name (for consistency) \n- Use the new MB_INVALID and MB_INCOMPLETE defines for the size_t\n  -1 and -2 values (respectively) \n  
12506,     - When mbrtowc() returns -2 when given all the remaining chars in a\n  string  set an end-of-line flag and avoid calling mbrtowc() again\n  for any of the incomplete characters that remain in the string \n- Use  mbs  for the multi-byte state variable name (for consistency) \n- Use the new MB_INVALID and MB_INCOMPLETE defines for the size_t\n  -1 and -2 values (respectively) \n  
12507,     - The return value of mbsrtowcs() is also a size_t (like mbrtowc()) \n- When mbrtowc() returns -2 when given all the remaining chars in a\n  string  set an end-of-line flag and avoid calling mbrtowc() again\n  for any of the incomplete characters that remain in the string \n- Use  mbs  for the multi-byte state variable name (for consistency) \n- Use the new MB_INVALID and MB_INCOMPLETE defines for the size_t\n  -1 and -2 values (respectively) \n  
12508,     - The return value of mbrtowc() is a size_t (unsigned)  so don\ t\n  assign it to an int and then check for negativity  as that won\ t\n  work on a system where an int is larger than a size_t \n- When mbrtowc() returns -2 when given all the remaining chars in a\n  string  set an end-of-line flag and avoid calling mbrtowc() again\n  for any of the incomplete characters that remain in the string \n- Use STOUC() when passing a char value to nicechar() \n- Use  mbs  for the multi-byte state variable name (for consistency) \n- Be sure to reset the mbs state if mbrtowc() returns -1 \n- Use the new MB_INVALID and MB_INCOMPLETE defines for the size_t\n  -1 and -2 values (respectively) \n  
12509,     Define MB_INCOMPLETE and MB_INVALID for MULTIBYTE_SUPPORT \n  
12510,     A few more mbrtowc() cleanups \n  
12511,     Tweaked the code to handle mbrtowc() converting  \\0  the same way as\nthe other callers do   Also  changed the variable name to  cnt  \n  
12512,     Decided to use a switch() in mb_niceformat() \n  
12513,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s <= 0  as that won t\nwork on a system where an int is larger than a size_t \n  
12514,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s >= 0  as that won t\nwork on a system where an int is larger than a size_t \n  
12515,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s < 0  as that won t\nwork on a system where an int is larger than a size_t \n  
12516,     22151: bug outputting here-strings from which etc  when already quoted\n  
12517,     Minor mbrtowc() changes \n  
12518,     Changed the name of the  ret  variable in mb_niceformat() to  cnt \nbecause  ret  is usually used for a variable name to hold the\nreturn value of the function   Also  changed the test when\nchecking for a \\0 to only check if  cnt  is 0  since we must\nalways change a value of 0 to 1 \n  
12519,     Changed the name of the  ret  variable in mb_niceformat() to  cnt \nbecause  ret  is usually used for a variable name to hold the\nreturn value of the function   Also  changed the test when\nchecking for a \\0 to one that checks if  cnt  is 0  since we\nmust always change a value of 0 to 1 \n  
12520,     A test for (size_t)-1 needed to check for (size_t)-2 too \n  
12521,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s < 0  as that won t\nwork on a system where an int is larger than a size_t   Also \nthe code that handled partial multibyte characters (that were\nassembled from multiple bytes of a metafied string) was not\nadvancing past all the assembled bytes  nor was it handling the\ndecoding of a  \\0  char (it looks like it could have infinite\nlooped in that case) \n  
12522,     Mention unposted changes to various bits of mbrtowc() code \n  
12523,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s > 0  as that won t\nwork on a system where an int is larger than a size_t   Also \nwe needed to use STOUC() on a char value passed to nicechar() \nand we need to clear the mbstate_t object if mbrtowc() returns\nan error \n  
12524,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s > 0  as that won t\nwork on a system where an int is larger than a size_t   Also \nwe needed to use STOUC() on a char value passed to nicechar() \n  
12525,     The return value of mbrtowc() is a size_t (unsigned)  so don t\nassign it to an int and then check if it s > 0  as that won t\nwork on a system where an int is larger than a size_t \n  
12526,     Mention configure ac changes \n  
12527,     Got rid of check for wcswidth() and added my missing commit that\nadded checks for fchown() and fchmod() \n  
12528,     An improved version of the patch from 22140 \n  
12529,     Changed mb_niceformat() so that it does not truncate a name that\nhas an invalid character sequence in the current character set \ndisplaying them as \\M-    chars   (Improved version of the patch\nfrom workers/22140 )\n  
12530,     Got rid of our use of wcswidth() \n  
12531,     Got rid of wcswidth() define for OpenBSD now that wcswidth() isn t\nused \n  
12532,     Changed wcswidth(&c  1) to wcwidth(c) \n  
12533,     typo in AE and OE ligatures\n  
12534,     22124: handle bad multibyte input better\n  
12535,     22123: probe for wcswidth() and assume 1 if not found\n  
12536,     22118: fix cdpath documentation\n  
12537,     Minor _perforce changes for deleting fixes and changes \n  
12538,     22113: allow single option characters to be combined in completion for last\n  
12539,     A couple more improvements to the HIST_SAVE_BY_COPY section \n  
12540,     22105: ssh -M  -S  and -O\n  
12541,     22104: add support for new options such as ControlMaster and ControlPath \n  
12542,     Fixed a bogus file path \n  
12543,     Fixed a typo and improved a sentence \n  
12544,     unposted: updated _yum from Scott Murray\n  
12545,     22082: print out uid or gid in stat if name not available\n  
12546,     Changed some UTF-8 apostrophes to normal apostrophes \n  
12547,     Changed a UTF-8 closing-single-quote into an ASCII apostrophe \n  
12548,     Changed UTF-8 closing-single-quotes into ASCII apostrophes \n  
12549,     22095: more multibyte notes \n  
12550,     22091\n  
12551,     Two changes in the HIST_SAVE_BY_COPY code: (1) preserve the group\nand permissions on the history file  and (2) fail if zsh s euid\ndiffers from the file s uid (since that would change the history\nfile s owner) \n  
12552,     22085 and back off 22075: include langinfo h to get iconv\n  
12553,     users/9788: add (oN) glob qualifier for no sorting\n22076: more documentation for multibyte handling\n  
12554,     21814: error handling for traps in  always  constructs \n  
12555,     22078\n  
12556,     Changed ucs4toutf8() into a static function (since it s only\nused by this file when it s even defined) \n  
12557,     22075: assume we can convert characters with wctomb() with --enable-multibyte\n  
12558,     Missed bit from 4 3 0-dev-2\n  
12559,     22071\n  
12560,     A slightly more optimal way to fix the zle_setline() bug using\nthe same zlecs-checking idiom as setline() \n  
12561,     Fixed problem in zle_setline() where moving to an empty line would\nset zlecs to -1  (Reported by Jun T )\n  
12562,     22069: completion listings didn t get unmetafied\n  
12563,     22068: completion for debdiff \n  
12564,     Fixed a compiler warning \n  
12565,     Just-added  return  should have returned a value \n  
12566,     unposted: reindent and use lowercase letters for descriptions\n  
12567,     unposted: better completion for sortm\n  
12568,     require 2 53b of autoconf for AC_PROG_EGREP\n  
12569,     22065: starts with  --  \n  
12570,     22057: don t use zsh/newuser in emulation\n22058: tweak docs for release\n  
12571,     22056: Restore MIME style defaults\n  
12572,     22056: Restore MIME style defaults\n  
12573,     22055: completion for the FUSE sshfs \n  
12574,     22054: completion for fusermount \n  
12575,     22053: FAQ tweak plus better option and parameter documentation\nin zsh-newuser-install\n  
12576,     22052: improvements to surfraw completion \n  
12577,     22050: fixes for Debian GNU/kfreebsd\n  
12578,     21712: include fallback for where $OSTYPE is not matched\n  
12579,     Changes implied by users/9744 \n  
12580,     22049: bug exiting from sourced file within function\n  
12581,     An arg fix for the new parsedigit() function in zle_misc c \n  
12582,     Fixed parsedigit() to have it use its arg instead of  lastchar  \n  
12583,     One more fix for the non-multibyte prototype generation \n  
12584,     add changelog entry for accidental commit (re hurd errno)\n  
12585,     Use $EGREP instead of  grep -E  \n  
12586,     Use $EGREP instead of a hard-wired  grep -E  \nAdded AC_PROG_EGREP (which sets $EGREP) for completeness \n  
12587,     22042: handle the Hurd s errno h \n  
12588,     22046: descriptions for unrar commands  some additional switches \n  
12589,     fix utils c prototype generation for non multibyte build\n  
12590,     22031: new git completion\n  
12591,     22027: more zsh-newuser-install fixes\n22028: WARN_CREATE_GLOBAL overeager with temporarily set variables\n  
12592,     22022: completion for dchroot\n  
12593,     22022: completion for dchroot\n  
12594,     22021: back-to-back Unicode insertions didn t work \n  
12595,     22018: minor newuser tweaks\n  
12596,     22014: argument-base  insert-unicode-char\n  
12597,     22013: initial go at a working zsh-newuser-install\n  
12598,     22012: completion for mergechanges \n  
12599,     22011: Mårten Svantesson <msv@kth se>: cvs -R is generally available\n  
12600,     22009: another double-width character fix\n  
12601,     Belated commit of 21994: fix option-argument semantics in sed completion \n  
12602,     users/9690\n  
12603,     Make the new completion handle multile names per  Host  directive\nand elide names that contain wildcards \n  
12604,     Got rid of two unneeded casts in zle_tricky c \n  
12605,     Got rid of two unneeded  (char *)  casts \n  
12606,     users/9688: improved _ssh_hosts from Hanna Koivisto\n  
12607,     22005: completion for flasher utility for Nokia 770 Internet Tablet \n  
12608,     Got rid of some compiler warnings about comparisons between signed\nand unsigned variables \n  
12609,     22001: removing forced casts for unsigned<->signed char pointers \n  
12610,     Changed zlelineasstring() and zlegetline() to each return a normal char\npointer  not an unsigned char pointer   Changed stringaszleline() to\ntake a normal char pointer for its first arg   Got rid of some\nunsigned-char/char pointer casts \n  
12611,     Changed zlemetaline into a normal char pointer  not unsigned char \nGot rid of some unsigned-char/char pointer casts \n  
12612,     Changed zleread() to return a normal char pointer  not unsigned char \nGot rid of some unsigned-char/char pointer casts \n  
12613,     The non-multibyte version of ZWS() doesn t need to force a cast anymore \n  
12614,     Changed ztrcmp() to take normal char pointers  not unsigned char \n  
12615,     Changed two zle functions to each return a char pointer  not an\nunsigned char pointer \n  
12616,     Got rid of some unsigned-char/char pointer casts \n  
12617,     fix completion of -F option\n  
12618,     22000: completion for totdconfig \n  
12619,     21999: completion for certtool and srptool\n  
12620,     21998: completion for gnutls-cli and gnutls-cli-debug\n  
12621,     21990: completion for tpkg-debarch  tpkg-install  tpkg-install-libc  tpkg-make  and tpkg-update \n  
12622,     21989: completion for dpkg-cross \n  
12623,     unposted: note roadmap in NEWS\n  
12624,     users/9638: tweaks for FCEDIT etc \n21986: rewrite completion suffixes for wide characters\n  
12625,     Scott Murray: users/9648: new _yum completion\n  
12626,     21988: fix  simulare  typo \n  
12627,     21987: completion for cplay \n  
12628,     Fixed several typos \n  
12629,     users/9618  modified: :G for global substution modifier\n  
12630,     21978: unmetafy file name\n  
12631,     21974: memory leak with tied parameters\n  
12632,     users/9610: handle digit argument when copying words\n  
12633,     21973: typo caused digitargument() not to work\n  
12634,     21971: multibyte version of pfxlen()\n  
12635,     users/9604: enhance run-help to strip quotes\n  
12636,     21967: add $ (#)     substitution\n  
12637,     I just noticed that zsh\ s default icntrl() macro returns true for\nchars 128 - 159  so the      ? ZWC(\ ?\ ) : (CHAR_VALUE | ZWC(\ @\ )) \ncode needed to be updated to reflect this \n  
12638,     21949 with a few extra changes \n  
12639,     - One minor change to handle the ZLE_STRING_T change \n- A few brace-position twiddles \n  
12640,     - Changed a couple pointers from  char *  to  unsigned char *  in\n  order to match the zlemetaline\ s type \n- A few brace-position twiddles \n  
12641,     - Improved all the      ? ZWC(\ ?\ ) : (CHAR_VALUE | ZWC(\ @\ ))  code\n  lines to work in both normal and multibyte mode without needing\n  conditional code \n- A couple brace-position twiddles \n  
12642,     - A few changes in light of the new ZLE_CHAR_T and ZLE_STRING_T \n- Use idigit() in place of some former  0  -  9  range checks \n- Simplified some multibyte conditional code by using ZC_icntrl()\n  and LASTFULLCHAR \n  
12643,     Changed the non-wide version of: ZLE_CHAR_T into a  char  (formerly\nan  int )  and ZLE_STRING_T into a  char *  (formerly an  unsigned\nchar * ) \n  
12644,     Changed zle_text to a  char *  to match the new ZLE_STRING_T \n  
12645,     21962\n  
12646,     - Changed a bunch of iblank() calls on zleline to use ZC_iblank() \n- Changed one isalpha() call on zleline to use the new ZC_ialpha() \n  
12647,     - In vireplacechars()  changed  ch  into a ZLE_INT_T \n- Changed some islower()/isupper()/iblank() calls on zleline to\n  use the new ZC_i<type> versions \n  
12648,     Changed iblank() calls on zleline to use ZC_iblank() \n  
12649,     - Defined some new ZC_i<type> macros  such as ZC_ilower  ZC_inblank \n  ZC_iupper  etc \n- Fixed ZC_iblank to not return true when given a newline \n  
12650,     Changed some isdigit() calls to use idigit() \n  
12651,     - Added the wcsiblank() function for wide-char blank-checking that\n  does not match \ \\n\  \n- Fixed a couple calls to isascii() that were passing a  char  value \n  
12652,     Added macros for iascii()  ilower()  iprint()  and iupper() \n  
12653,     Mention compiler-warning fixes \n  
12654,     Fixed a compiler warning about a signed/unsigned comparison \n  
12655,     Fixed some compiler warnings about signed/unsigned comparisons \n  
12656,     In parse_cadef()  the variable name oargs was re-defined in an inner\ncontext  so I changed the name of the outer variable to orig_args \n  
12657,     Make more use of idigit() \n  
12658,     Use idigit() instead of range-checking  0  -  9  \n  
12659,     21960: put zcalc history file in ZDOTDIR if set \n  
12660,     unposted: minor tweaks to roadmap\n  
12661,     21957: more wide-character refresh stuff\n  
12662,     21954: work around /dev/fd problem on FreeBSD\n  
12663,     21948\n  
12664,     Made the two ZC_REDIR_*() macros return an int \n  
12665,     Got rid of a use of WEOF when MULTIBYTE_SUPPORT is not defined\n(which fixed a signed vs unsigned comparison compiler warning) \n  
12666,     21947: new gcc options for sparc\n  
12667,     21946: update options for ia32  amd64 \n  
12668,     unposted: bit I missed in 21945\n  
12669,     21943  21945: ZLE_UNICODE_SUPPORT -> MULTIBYTE_SUPPORT;\nuse multibyte versions of nicechar wherever possible \n  
12670,     21942: another extra-wide character fix\n  
12671,     21939: new UNMETACHECK() was too ruthless\n  
12672,     21936: bug deleting extra-wide character\n  
12673,     21933: R  Ramkumar: three new styles for MIME handler\n21935: documentation for same \n  
12674,     21931: don t use _hosts for ping now there s _ping\n  
12675,     21930: handle extra-wide characters at end of line\n  
12676,     21913: completion for ping \n  
12677,     21912: silence unused parameter compile warnings in cap c\n  
12678,     21910: fix message sequence number for last commit\n  
12679,     Fix --disable-multibyte compile error \n  
12680,     not yet posted; zle line screwed up on bad return from insertlastword()\n  
12681,     remove a couple of TODOs\n  
12682,     Mikael Magnusson  21905: typos in roadmap\n  
12683,     21902: update for xmllint 2 6 22 \n  
12684,     21898: insert-composed-char can take command line argument\n21899: add  roadmap  to manual\n  
12685,     Mention compiler-warning fix \n  
12686,     Got rid of a pointer-type warning by adding a definition for a\nREFRESH_CHAR type and using it to define nullchr (it was using\nZLE_INT_T) \n  
12687,     21891: compose double width characters with ^A etc \n  
12688,     21890: fix segmentation error in left prompt truncation and a couple of minor\ninconsistencies\n  
12689,     21887: Display characters wider than one screen cell correctly \n  
12690,     21885: Convert some refresh macros into functions \n  
12691,     21882: extend prompt truncation to handle multibyte characters\n  
12692,     21880: add carriage return to IFS in completion context \n  
12693,     unposted: a few more miscellaneous composable symbols\n  
12694,     One more tweak to a sentence in the PROMPT_SP section \n  
12695,     FAQ yo update \n  
12696,     Changed the precmd that works like PROMPT_SP to use  %#  instead\nof just  #  \n  
12697,     21872: job accounting in subshells was screwy\n  
12698,     21871: replace INULL() by inull()\n  
12699,     21870: bad INULL() definition\n21869: multibyte characters in %-substitutions  invalid multibyte\ncharacters in completion listings\n  
12700,     21862/21863: GLOB_SUBST shouldn t swallow up backslashes in parameter\nsubstitutions that don t match anything \n  
12701,     21846: _chmod was too greedy with initial arguments\n  
12702,     Updated PROMPT_SP to mention what inverse+bold char is now output \n  
12703,     21821  21822: fix two infinite loops\n  
12704,     21809: need to export nicedup()\n  
12705,     21790: initial attempt at documenting 4 3 release\n  
12706,     minor tidy-ups\n  
12707,     Fix docs for TRAPNAL function return\n  
12708,     Tweak to PROMPT_SP \n  
12709,     Changed the PROMPT_SP output to use prompt-escape %# instead of just # \n  
12710,     21784: Improved character widths for formatted multibyte character output\n  
12711,     21770: tweak 21760 to avoid conflicts with global bindings\n  
12712,     21781: cope with `iconv --list` output from glibc 2 3 5 \n  
12713,     21780: completion for dlocate \n  
12714,     21779 plus unposted catch change: exception improvementss\n  
12715,     21778: completion for piuparts \n  
12716,     21769: fix some consequences of 21730 in completion lists\n  
12717,     Vincent Lefevre: 21767: add ~ to the default svn status pattern \n  
12718,     21764: unmetafication mangle zle history lines\n  
12719,     unposted: alter reference to process substitutions in redriction docs\n  
12720,     21763: Completion/Unix/Command/_baz: remove stray underscore \n  
12721,     21760: fix test for sequence prefixes in the local keymap in getkeymapcmd()\n  
12722,     unposted: range-checking of numeric arguments in zargs\n  
12723,     21758: optimise =(<<<   ) to run within the shell \n  
12724,     Tweaked an entry to add the missing file info \n  
12725,     Unposted  c f  21752: Expand insert-composed-char \n  
12726,     Stephen Rueger: 21744: unconditionally assume that \\t or \\n are not part of multi-byte characters \n  
12727,     21740: completion for quilt \n  
12728,     21739\n  
12729,     The PROMPT_SP code now ensures that PROMPT_PERCENT is enabled when\nit uses promptexpand() to expand some percent strings  (21739)\n  
12730,     unposted: fix wcsiident\n  
12731,     21737: unmetafy wordchars before looking for multibyte characters\n  
12732,     21736: improve tests for word and identifier characters with multibyte input\n  
12733,     unposted c f  21735: document return as exit in try block in script\n  
12734,     21731: handle multibyte characters in prompts correctly\n  
12735,     21730: fix metafication of nicechar and pwd\n  
12736,     unposted: update rake completion for version 0 6 0\n  
12737,     21718: complete files after bzr s first argument until the bzr shell-complete stuff is improved \n  
12738,     21722: fix multibyte word stuff\n  
12739,     21720: fix getrestchar() some more\n  
12740,     adapted from 21719: add some mod_exports\n  
12741,     21717: Src/Zle/zle_misc c: fix execute-named-command and -where-is\nwith multibyte support\n  
12742,     21709 plus tweaks: use $KEYTIMEOUT for multibyte chars Reset input state on invalid characters or EOF\n  
12743,     21705: OpenBSD date(1) completion\n  
12744,     21704: completion for Solaris  and FreeBSD \n  
12745,     21703: completion for bzr 0 0 7 \n  
12746,     21701: Negative subscripts of scalars before start were broken\n  
12747,     21698: Jean-Baptiste Quenot: _ant recursive completion could change dir\n  
12748,     21696: completion for GNU date \n  
12749,     21695: rewrite entry for (u) globbing flag\n  
12750,     21693: Jean-Baptiste Quenot: recursively find ant targets\n  
12751,     21693: Jean-Baptiste Quenot: recursively find ant targets\n  
12752,     21692: remove set-tree-version  fix tree-version  add tree-id \n  
12753,     21686: modernize make-kpkg completion\n  
12754,     9359: Francisco Borges: fix _gv file completion\n  
12755,     21683: more fixes to urxvt completion\n  
12756,     21682: handle usage output of commands with [0-9   alternatives  and actually parse that output again \n  
12757,     More apostrophe filtering for Doc/Makefile in \n  
12758,     A more comprehensive apostrophe fix for nroff files that prevents\ncharacters from vanishing from the output when an apostrophe\nappears as the first literal character on a line \n  
12759,     21678: Unsetting tied parameters caused various crashes\n  
12760,     21676: insert-unicode-char now insert-composed-char \nAlso uses RFC 1345 \n  
12761,     Note update of mirror site information in Doc/Zsh/metafaq yo\nand Etc/FAQ yo\n  
12762,     Small cleanup:\nUIUC edu: archive retired in August 2003\nayamura org: Ayamura KIKUCHI died 2004\n  
12763,     From Brett M Hogden @ rge\n After 15 years of providing mirrors of popular software packages and other\n interesting topics of information  the Rochester Gas and Electric Company\n is discontinuing its Internet mirror archive  \n  
12764,     21677\n  
12765,     Filter apostrophes in \\fB   \\fP headers (since it appears that\nyodl is not properly escaping them) \n  
12766,     21664: unmetafy ztat() argument\n  
12767,     21663: check for string overflow\n  
12768,     unposted: cent is now p % in insert-unicode-char\n  
12769,     21662: new zle widget insert-unicode-char\n  
12770,     21661: fix glob bug introduced in 21655\n  
12771,     21655: bug in $   //  /$   //  /    \n  
12772,     Got rid of an empty #ifdef/#else/#endif \n  
12773,     21654\n  
12774,     Marked some #ifdef ZLE_UNICODE_SUPPORT lines (and their #endif lines)\nwith /**/ so that they would get copied to the  epro file \n  
12775,     Use AC_HELP_STRING macro consistently \n  
12776,     Use AC_HELP_STRING macro in all AC_ARG_ENABLE and AC_ARG_WITH macros \n  
12777,     Removed superfluous main() from AC_TRY_COMPILE \n  
12778,     21629\n  
12779,     Now that ZLE_UNICODE_SUPPORT is defined by configure  tweaked the\nmultibyte #ifdef logic a little here to honor its setting \n  
12780,     Added --enable-/disable-multibyte support  with the default being to\ncheck for multibyte support and define ZLE_UNICODE_SUPPORT accordingly \n  
12781,     1/2 of 21644\n  
12782,     Fixed bug in do_comp_vars() when *compprefix is a metified char \n  
12783,     21642: remove redundant checks\n  
12784,     Moved declaration of char pointer var to comply with\nrestrictions of standard C \n  
12785,     21631: make sure an unmetafied string is passed to ztat to determine file type \n  
12786,     unposted: fix spelling\n  
12787,     21627: fix recursive ZLE from completion call\n  
12788,     21622: fix recursive completion call in zrefresh()\n  
12789,     21619: define wide versions of zarrdup  zputs  niceztrlen \n  
12790,     21565: better handle uncompresed manpages with  [0-9  in their names \n  
12791,     21609\n  
12792,     21609: fixed a readlink() call in statfullpath() \n  
12793,     21616: typo\n  
12794,     21611: Added Firefox completion support \n  
12795,     21610: Turn on ZLE_UNICODE_SUPPORT and fix a few related problems \n  
12796,     Several belated commits including workers/21366 21369\n  
12797,     21369: assign to array with  builtin stat \nrather than parsing its stdout\n  
12798,     More adjustements for PROMPT_SP\n  
12799,     21366: LONG_LIST_JOBS applies to more places where job listings are printed\n  
12800,     21606\n  
12801,     For gcc  use static inline functions in place of the ZS_str*\nmacros so that we get type-checking without pointer-signedness\nwarnings \n  
12802,     21603: wchar/multibyte conversion of cursor position when at end of line\n  
12803,     21412: Travis Spencer: pkg-config completion\n  
12804,     Some ZWC -> ZWS changes \n  
12805,     Changed several instances of ZWC() used on a string to ZWS() \n  
12806,     The last word in B02typeset ztst fixes (for now) \n  
12807,     Third time\ s a charm:  a better fix than using either a subshell or\n setopt localoptions  is to use a function for the final test (since\nit destroys all the variables in the environment)   This allows us to\ndirectly test that the environment was properly restored after the\nfunction call  and ensures that the caller (ZTST_execchunk  which\ndirectly exec\ ed the test code) still has all the vars that it expects\nin the environment (such as ZTST_verbose  options  and ZTST_mainopts) \n  
12808,     21598: fix typo that broke svn ci completion and avoid problem if LC_ALL set\n  
12809,     Improved a sentence \n  
12810,     21596: fix run-help  which-command  accept-and-menu-complete\n  
12811,     /tmp/cvsgx0BlF\n  
12812,     A better fix than my last patch is to use  setopt localoptions  \n  
12813,     21593: character arrays wrongly declared with ZLE_UNICODE_SUPPORT\n  
12814,     21571: avoid localised translations that break parsing\n  
12815,     21592: browsing new directory from menu selection crashed\n  
12816,     c f  21590: metafy_line()/unmetafy_line() now support wide characters\n  
12817,     21579\n  
12818,     Put the last test into a sub-shell so that it doesn t interfere\nwith the temp-file cleanup \n  
12819,     A couple more minor tweaks to the  trap  section \n  
12820,     Make printf %s handle an embedded null (21579) \n  
12821,     Fixes from Thorsten Dahlheimer \n21578: mkmakemod sh didn t exit on cleanup \n21582: fix failure status of zmodload -R \n21583: fix circularity test of zmodload -A \n  
12822,     21577 (adapted): Dan Bullok: improved window resize handling  again\n  
12823,     21580\n  
12824,     21580: Thorsten s patch to make sure that no pre-existing traps\ninterfere with the tests \n  
12825,     21581\n  
12826,     Changes based on Thorsten s message #21581 \n  
12827,     Got rid of trap call for now \n  
12828,     21581: Thorsten Dahlheimer: Src/builtin c: fixed error output\nfor unknown signal names when using  trap -  \n  
12829,     21584\n  
12830,     Test both %b and %s in the empty-arg test \n  
12831,     Fixed a recently-introduced bug where printf %b with an empty arg\nwould output a single space instead of nothing \n  
12832,     21576: test for 21575\n  
12833,     unposted: unnecessary variable in 21575\n  
12834,     21575 plus unposted: Add WARN_CREATE_GLOBAL option\n  
12835,     21567: Dan Bullok: trashzle on updating window size\n  
12836,     21570: complete for the help sub-command\n  
12837,     new brctl completion\n  
12838,     21566: Tobias Gruetzmacher: fix to list all repositories\n  
12839,     unposted: fix syntax error in _mencal introduced by recent cleanup \n  
12840,     Improved the %d and %g tests \n  
12841,     silence is golden \n  
12842,     21557: Thorsten Dahlheimer: BRACE_CCL fix\n  
12843,     Silenced a compiler warning about a variable that might be used\nunassigned \n  
12844,     A few more improvements for B03print ztst \n  
12845,     Three more tests based on recent fixes \n  
12846,     - Improved how we check the no-newline test cases \n- Added a test case for  echo -n  \n  
12847,     various cleanups: fix indentation and capitalisation of descriptions\n  
12848,     21393: add missing local declarations\n  
12849,     21552: Thorsten Dahlheimer: various fixes to print builtin\n  
12850,     unposted: Perforce  attribute  command\n21551: FEATURES description for file<20->\n21546: oddities of subscripts when searching arrays\n21544: ioctl() prototyping\n  
12851,     21553: improve zsh pdf and don t distribute  ps\n  
12852,     21548\n  
12853,     Reorder the --include/--include-from --exclude/--exclude-from lines\nso that the completion system will properly complete files after the\n   -from options (the completion system is buggy if the shorter\noption is first and ends with an  = ) \n  
12854,     add Functions/Exceptions/ distfiles\n  
12855,     21541: remove some warnings from ZLE_UNICODE_SUPPORT\n  
12856,     unposted: updated _perforce for Perforce release 2005 1\n  
12857,     21540: update aap completion for version 1 076\n  
12858,     The PROMPT_SP output should be prior to the job notifications too \n  
12859,     PROMPT_SP improvement \n  
12860,     21532\n  
12861,     Moved the PROMPT_SP output into preprompt() so that it takes effect\nprior to things like precmd()  the mail-check output  etc \n  
12862,     Mention the new inverse-hash that is output by PROMPT_SP \n  
12863,     Moving the PROMPT_SP code earlier in the scheme of things so that\nit can take affect prior to things like the mail-check output \n  
12864,     Updated the entry that talks about PROMPT_CR and PROMPT_SP to suggest\na better precmd function -- one that includes an inverse hash  and\nthat outputs all its input in one go so that echoed input can t trip\nup the algorithm and cause a wrap when it shouldn t \n  
12865,     21529: move scriptdir to a scripts subdir  and don t include Scripts in fpath \n  
12866,     unposted: declare expl local in _rake\n  
12867,     21527: rename zsh-newuser-install and don t run if not loaded\n  
12868,     21516: handle dhclient V3 as well as V2 \n  
12869,     21518 (modified)\n  
12870,     Added tests for \\c escape handling \n  
12871,     Fixed bin_print() to handle \\c escapes as per POSIX (truncating the\noutput at the \\c)   (Based on a patch by Thorsten Dahlheimer )\n  
12872,     If getkeystring() finds a \\c escape (when looking for such escapes) \ntruncate the returned string at the escape \n  
12873,     21523  21524: Julius Plenz: completions for pump and dhclient \n  
12874,     unposted: add missing compset -S call to _php\n  
12875,     Some echo/printf improvements for the \\c escape \n  
12876,     21519: only complete files after baz commit  not archive/version \n  
12877,     21517: complete files after build-config if there s a configs subdir  even if one is not in a project tree \n  
12878,     The parsing of \\c in $foo[(pws:\\c:)1  should treat \\c as an unknown\nescape (resulting in a literal  c )  not remove the sequence (from\na patch by Thorsten Dahlheimer) \n  
12879,     Improved the function comment for getkeystring() \n  
12880,     Added missing  goto  in handling of \ c\  escape (fix from\nThorsten Dahlheimer) \n  
12881,     An install fix for Cygwin from Thorsten Dahlheimer \n  
12882,     21510: use && rather than -a binary test operator \n  
12883,     21506: use globbing instead of ls and sed \n  
12884,     21505: use an array for common arguments rather than an additional function\n  
12885,     215??: move xscreensaver-command completion to the X dir \n  
12886,     unposted: bring various  distfiles up to date\n  
12887,     21500: Add script and function as framework for new user stuff \n  
12888,     21499: Doc/Makefile in: use newer texi2html syntax \n  
12889,     21498:  Add zsh/newuser module\n  
12890,     unposted: add -s option to _arguments call in _rake\n  
12891,     21492\n  
12892,     Undo version mod that changed the wrong 3 0 into 4 3 0 \n  
12893,     21492: Update the prompt-overwriting section even more extensively \n  
12894,     fix version in 21490\n  
12895,     21490: Update FAQ to reflect PROMPT_SP option\n  
12896,     Fixed the heading for the new PROMPT_SP option \n  
12897,     unposted: escape colons in _python -W option argument message\n  
12898,     21464\n  
12899,     Implement the new PROMPT_SP option \n  
12900,     Reference 4 extra termcap items:  save-cursor  restore-cursor  the\nbackspace character  and the ignore-newline-after-wrap flag \n  
12901,     Add  promptsp  to the optname optns[  array \n  
12902,     Added the PROMPTSP option plus 3 new termcap defines\n(TCSAVECURSOR  TCRESTRCURSOR  and TCBACKSPACE) \n  
12903,     Document the new PROMPT_SP option \n  
12904,     unposted: add missing -C option to _arguments in _python\n  
12905,     21466: mkdir -p didn t work with symlinks\n  
12906,     21449: limit completed options available to RUBYOPT to -[IdvwrK \n  
12907,     21446 (modified): improve target completion for rake\n  
12908,     21447: completion for rubber  contributed by Emmanuel Hainry and Emmanuel Beffara \n  
12909,     21428: Travis: fix crash on bad compvalues call\n  
12910,     21443: new completion for rake\n  
12911,     unposted: fix typo in first normal arg action of _ruby\n  
12912,     21423: Travis: completion for unexpand\n  
12913,     Use set -o in listalloptions to avoid kshoptionprint\n  
12914,     21418: completion for madison \n  
12915,     21417: completion for xscreensaver-command \n  
12916,     21416: cope with an equals sign after gpg --keyring \n  
12917,     users/9059: Nikolai Weibull: improved _vim_files\n  
12918,     users/9049: add vim variants to _vim\n  
12919,     Nikolai Weibull: new _vim completion\n  
12920,     21402: Fix crash with case-insensitive matching \n  
12921,     * unposted: add missing compset -S calls to _w3m\n  
12922,     21400: add completion for RUBYOPT  RUBYLIB and RUBYPATH env variables\n  
12923,     unposted: declare _links vals parameter local\n  
12924,     21392: update w3m completion for version 0 5 x\n  
12925,     21391: only pass SIGINT and SIGQUIT from foreground processes to the shell \n  
12926,     unposted: complete WWW_HOME  ftp_proxy and https_proxy with URLs\n  
12927,     21387: zcalc documentation for precision features\n  
12928,     21384: small fixes to urxvt completion \n  
12929,     21383: completion for rxvt-unicode \n  
12930,     21382: completion for MIT krb5 s kvno \n  
12931,     add missing functions\n  
12932,     21380: update for wget 1 10  add missing descriptions and other minor fixes\n  
12933,     unposted: stop _apt-move from returning early and allow prefix-needed style to work\n  
12934,     21379: improve wget --restrict-file-names completion\n  
12935,     21334: fix typo in pkgtool -target_dir completion\n  
12936,     21317: fix bug where recursive glob within e qualifier would hang the shell\n  
12937,     zargs: add -I and -L options of xargs \n  
12938,     21343: update php completion for version 5 0\n  
12939,     unposted: tidy up _darcs command descriptions\n  
12940,     add test for 21352\n  
12941,     21352: Harald van Dijk: handle null after % in printf format specifier\n  
12942,     21351: complete for xvnc4viewer and xtightvncviewer \n  
12943,     21243: complete first option of svn subcmds \n  
12944,     Prevent double precmd during  fc -e - \n  
12945,     21316 (modified): new completion for ctags tags\n  
12946,     21320: fix _screen completion of -D  -R  -c and -dmS options\n  
12947,     21321: update antiword completion for version 0 36\n  
12948,     unposted: fix typo in a _less state name\n  
12949,     unposted: add missing options to _ant\n  
12950,     21315: make completion functions give precendence to descriptions passed as\nparameters and cleanup descriptons in calling functions\n  
12951,     21314: declare expl local in example use of _wanted\n  
12952,     new yast completion\n  
12953,     21313: make code for extracting mutt aliases do a better job of finding rc files\n  
12954,     21306: add -s option to _disable\n  
12955,     21310: pass an array to compadd in _global_tags\n  
12956,     21302: make sure expl is declared local in completion functions\n  
12957,     unposted: fix typo in _dirs opt description\n  
12958,     unposted: fix minor typo in _raggle\n  
12959,     21293: update ant completion for version 1 6 4\n  
12960,     unposted: need const for result of getsigname()\n  
12961,     21296: Add ERR alias for ZERR where possible \n trap  reports alias names \n  
12962,     21294: fix incorrectly capitalized completion descriptions\n  
12963,     21290: configure ac: don t need backslash quoting within single-quote areas \nChange constant RE boundary characters to slash (instead of tuples)   This\nwas exposed with autoconf 2 59c preferring ksh (pdksh 5 2 14p2 in NetBSD)\nover bash   It did  however  work with ksh93 and bash \n  
12964,     21266: improve completion of sequences\n  
12965,     Remove one stray quote that crept in with the two-hyphens fix \n  
12966,     Remove CVS conflict marker left by Doug \n  
12967,     21275 (modified): update raggle completion for version 0 4 0\n  
12968,     Tweak promptcr handling in  bart  prompt theme\n  
12969,     21270: don t use poll() on Apple\n  
12970,     users/8856  users/8863: which-command stuff\n  
12971,     Add zsh name and version to _complete_debug output\n  
12972,     unposted: add firefox to list of basic URL completed web browsers\n  
12973,     21264: document return status of ((     ))\n  
12974,     Update distribution mirror sites in FAQ\n  
12975,     Jesse W: 21244: new completion for qtplay (Quick Time wrapper for Mac OS X)\n  
12976,     new completion for qiv image viewer\n  
12977,     users/8826: search applications using spotlight \n  
12978,     21257: Fix typo in completion for p4 password \n  
12979,     Joerg Sonnenberger: 21252: Dragonfly BSD support\n  
12980,     21248: avoid use of subsection within list because it causes makeinfo\nto produce broken docbook XML\n  
12981,     Haakon Riiser: 21188: handle acroread 7 x\n  
12982,     Misc  prompt theme repairs\n  
12983,      * 21239: Completion/Unix/Command/_ccal: completion for ccal \n  
12984,     Add [[:IFS:   etc  tests \n  
12985,     21235 21236: fixes to _remote_files\n  
12986,      * Jesse Weinstein: 21233: Completion/Debian/Command/_dpkg:\n   completion for dpkg-query \n  
12987,     21229: fix build when yodl not found\n  
12988,      * Jesse Weinstein: 21230 (reformatted as 21231):\n Completion/Debian/Command/_dpkg: complete -W/--show for dpkg-deb \n  
12989,     21215: clean up after autoloaded trap test\n  
12990,     21197: Fix LOCAL_TRAPS inside another trap\n  
12991,     More _rsync tweaks \n  
12992,     - Changed the --include  --exclude  and --filter (-f) options so\n  that they can be specified multiple times \n- Added the --only-write-batch=FILE option for the upcoming 2 6 5 \n  
12993,     21194: fix handling of zero-length quoted test strings for patterns\n  
12994,     Test for fix of read with trailing metacharacters\n  
12995,     Fix handling of metafied characters in trailing whitespace on read\n  
12996,     21174 plus a number of other mostly inconsequential changes that I had\nsitting around in my local CVS sandbox \n  
12997,     Adopt a suggestion from Oliver\n  
12998,     Remove excess argument of zwcstat()\n  
12999,     21174 adjustments to 21170\n  
13000,     Minor tweak to _generic plus doc fixes for info interpretation of hyphens \n  
13001,     Tobias Gruetzmacher 21168: locality and visibility of some completion vars\n  
13002,     Optimise length calculations for $    //   /    \n  
13003,     After ~9 months: 20162: Src/Zle/compresult c: in printlist() don t output new\nline if we haven t printed anything\n  
13004,     20162: in printlist() don t output new line if we haven t printed anything\n  
13005,     users/8733: rudimentary completion for surfraw \n  
13006,       21156: tweaks to dpkg-reconfigure completion \n  
13007,     21154 - Added pid completion to _perforce for p4 monitor (clear|terminate) commands \n  
13008,      * 21153: incorporate most of the features of Stephen Rueger s\n _module-assistant  posted as 21152 \n  
13009,     21151: completion for module-assistant \n  
13010,      * 21150: Completion/Unix/Command/_baz  Completion/Unix/Command/_tla:\n handle parsing of subcommand help output a bit more sanely \n  
13011,     Update test for change in error message \n  
13012,     fix changelog date\n  
13013,      * 21147: factor out some common code from _tla and _baz  and fix some breakage\n   from 21075 \n  
13014,     21143: more care about special file descriptors\n  
13015,     21141: fix some issues associated with the  myfd >    syntax\n  
13016,     Belated commit of 21064: test case for 21049\n  
13017,     21136: don t leave TRAPEXIT lying around in Test directory\n  
13018,     changelog date typo\n  
13019,      * 21135: complete attached sessions after screen -x \n  
13020,     21134: bad file descriptor error message system variation \nHey  six nouns in a row!\n  
13021,     21133: New  myfd  syntax for allocating file descriptors\n  
13022,      * 21132: Completion/Unix/Type/_pdf  Completion/X/Command/_xpdf:\n complete xpdf options  and also complete  pdf bz2 files when\n completing compressed PDF files \n  
13023,     21131: exit with status 127 when script not found\n  
13024,      * config guess  config sub: update to 2005-03-24 and 2005-02-10  respectively \n  
13025,      * 21125: Src/Zle/zle_main c: do an initial conversion when zle is loaded \n  
13026,      * 21124: Src/Zle/zle_main c  Src/init c  Src/params c: have zle cache a\n wide-char version of WORDCHARS each time it s changed (when ZLE_UNICODE_SUPPORT\n is defined) \n  
13027,     21107: fix for when there is a native iconv but iconv h is from GNU libiconv\n  
13028,      * 21096: update for gv 3 6  which uses double-hyphen options \n  
13029,     Carlos Phillips: private email: much improved _darcs completion\n  
13030,     _rsync tweak \n  
13031,     The --address option is useful in both client- and daemon-mode \n  
13032,     21095: update FAQ for completion  features  bugs\n  
13033,     Toby Peterson: 21083: RLIMIT_AS and RLIMIT_RSS are the same in Mac OX X\nut_name needs to be ut_user in struct utmpx\n  
13034,     21082: Dan Nelson: fix zsh -c exit status on parse error\n  
13035,     21086: fix module completion (broken in previous patch) and other tweaks\n  
13036,     21085: update for 10 2 and other tweaks\n  
13037,     21081: complete network services for the psmisc version of fuser\n  
13038,     correct handling of svn commit\n  
13039,     c f  21071: always use  status  in return and exit status docs\n  
13040,     21078: parse errors didn t cause non-zero exit status\n  
13041,     21076: use _files with (e) qualifier to handle completing files by their status\n  
13042,     21075: update baz completion to not use -A option since it s being dropped in baz 1 3 \n  
13043,     Zack Cerza: 21074: update for newer aptitude \n  
13044,     21049: Don t close process substitution file descriptors for external programmes\n  
13045,     One more _rsync option \n  
13046,     Added --protocol option \n  
13047,     21068: complete modified files for  svn revert  \n  
13048,     21066: rsync:// support and more fixes\n  
13049,     21053: be more intelligent in searching for konqueror profiles\n  
13050,     21051: more tweaks in SVR4 completion\n  
13051,     21046: make unfunction compadd more reliable\n  
13052,     21045: fix some uses of Meta characters in completion\n  
13053,     Stephen Rüger: 21019: new completion for mpc\n  
13054,     21042: limitations with execute-named-command\n  
13055,     20984 (modified)\n  
13056,     Honor the setting of the new HISTSAVEBYCOPY option when rewriting\nthe history file \n  
13057,     Added the histsavebycopy option \n  
13058,     Added HISTSAVEBYCOPY to the options enum \n  
13059,     Document the HIST_SAVE_BY_COPY option and made a few tweaks to\nthe history-appending options \n  
13060,     21014: remember_edits() was broken\n  
13061,     users/8609: document order of more parameter expansion flags\n  
13062,     Mention my latest _rsync change and added #20917 to the not\nreally  unposted  _make change \n  
13063,     20983: failed glob from fixed strings segments in globbed paths\n  
13064,     20978: don t propagate EOF from recursive edits\n  
13065,     20886: configure ac: SIGTTOU -> TTOU\n  
13066,     Unposted: update the  bart  prompt theme \n  
13067,     The --compare-dest  --link-dest  and (new) --copy-dest options\nneeded to allow duplication and to exclude each other \n  
13068,     Belated commit of 20892: improvements to correct/correctall behavior \n  
13069,     20966: fix crash in execute-named-command\n  
13070,      * 20961: Completion/Unix/Command/_baz: fix completion of status and diff subcommands \n  
13071,     20957: SVR4 and Solaris support\n  
13072,     20959: fix crash unloading zsh/parameter and test the fix\n  
13073,     20955:  unset foo  should return status 0 if foo was not set\n  
13074,     20953:  du --version  tries to display size of files in current directory on FreeBSD and Darwin \n  
13075,      * 20951: Completion/Unix/Command/_baz: fix version detection and baz merge completion \n  
13076,      * 20946: Completion/Linux/Command/_iwconfig: completion for iwconfig command \n  
13077,     20945: rename statics to avoid clash with globals\n  
13078,      * 20944: Completion/Debian/Command/_uscan: completion for uscan command \n  
13079,      * 20943: Completion/Linux/Command/_tune2fs: completion for tune2fs command \n  
13080,      * 20942: Completion/Unix/Command/_showmount: completion for showmount command \n  
13081,      * 20941: Completion/Unix/Command/_mii-tool: completion for mii-tool command \n  
13082,      * 20940: Completion/Unix/Command/_knock: completion for knock command \n  
13083,      * 20939: Completion/Unix/Command/_groff: completion for groff command \n  
13084,      * 20938: Completion/Unix/Command/_fuser: completion for fuser command \n  
13085,      * 20937: Completion/Unix/Command/_fortune: completion for fortune command \n  
13086,      * 20936: Completion/Linux/Command/_acpi: completion for acpi command \n  
13087,     20932: Add copy comand completion\n  
13088,     correct 20928\n  
13089,     20928: null terminate screen lines in zle_refresh c\n  
13090,     unposted: arguments are required after -imagekey  -srcimagekey options\n  
13091,     unposted: softwareupdate is a system software update tool for Mac OS X\n  
13092,     20921: using UCS-4BE instead of ISO-10646 to identify character encoding\nis more portable  find more encodings in iconv completion on Solaris\n20924: make error message more specific\n  
13093,     Henryk Konsek: 20918: new completion for unace\n  
13094,     20900  adapted: promptcr workaround\n  
13095,      * 20906: Completion/Unix/Command/_make: patch from Mike  Stew  O\ Connor\n to limit recursion depth in make completion variable expansion \n  
13096,     Fix a possible infinite recursion in _make \n  
13097,     Don t try to expand a single-character Makefile variable if\nit is a digit \n  
13098,      * 20911: Src/Modules/termcap c: and set affcnt to 1 unconditionally\nwhen we echotc a capability with arguments (which we then assume to\nbe the  cm  capability  with arguments in the form <rows> <columns> \n  
13099,      * 20909: Src/Modules/termcap c: reverse row and col arguments to tgoto \n  
13100,     Got rid of --copy-dest  which didn t make it into rsync 2 6 4 \n  
13101,     20897: complete system printers in _a2ps\n  
13102,     20888: allow signal names to have the SIG prefix included\n  
13103,     20872: fix ZS_ icntrl tolower  vs  ZC_ incntrl tolower  confusion\n  
13104,     20869: more small Unicode tweaks\n  
13105,     20867: handle imported files that are specified using a relative path\n  
13106,     20863: fix history (i)searching for Unicode\n  
13107,     20866: fix deliberate errors in 20861\n  
13108,     Konstantin Sobolev: 20832 (modified): gather targets from imported files\n  
13109,     20862: attempt to fix configure scripts to detect iconv properly\n  
13110,     20861: Fix statusline in Unicode  apart from isearch\n  
13111,     20857: rewrite zle_refresh to use wide characters \n  
13112,     20856: use VARARR for multibyte string \n  
13113,     20854: more Unicode stuff \n  
13114,      * 20847: Completion/compaudit: stop adding gratuitous elements to fpath when MARK_DIRS is set \n  
13115,     20845: fix mbstate_t usage in getrestchar\n  
13116,     20844: prune trailing slashes from named directory\n  
13117,     Andrej: 20838: get ZLE_UNICODE_SUPPORT basically working\n  
13118,     20837: typos in contrib docs\n  
13119,     20834: use _webbrowser in _kfmclient\n  
13120,     20833: typo: int_t -> wint_t\n  
13121,     - Added a missing  =  to two commands that take args \n- Removed the unintentional arg from --delay-updates \n  
13122,     Mention the _rsync change \n  
13123,     Got rid of some of the specified option-conflicts between the\ndelete options -- I was using it to cut down on the useless\nsuggestions  but it was failing to continue completing if the\nuser specified something like  --delete-after --delete  (which\nis valid but superfluous)   Also got rid of an accidental\noption-conflict between --archive (-a) and --recursive (-r) \n  
13124,     Added the last 2 new options from the upcoming rsync 2 6 4 \n  
13125,     20828: typos in 20822\n  
13126,     users/8522: Completion/Darwin/Command/_defaults: fixed the number of spaces\nbroken while sending the patch by email \n  
13127,     20822: Initial code for Unicode/multibyte input\n20823: Debugging test in stat wrong for 64-bit systems\n  
13128,     users/8522: Motoi Washida: quotation in Darwin completion\n  
13129,     20816: update rlimits for new glibc\n  
13130,     Mention _rsync changes \n  
13131,     20812: Add functions for exception handling\n  
13132,     - Split the options up into two sets:  daemon options  and client\n  options   This makes sure that daemon options aren t offered\n  after client options  and visa versa \n- Added some missing exclusion-lists for options (that avoids\n  offering conflicting options to the user) \n- Improved the description of a few options \n- Added some new options for the upcoming rsync 2 6 4 \n  
13133,     20811: Use the cpp trick to find the file with resource names\n  
13134,     _yodl tweak \n  
13135,     Added missing closing double-quote \n  
13136,     Kris Shannon: 20801: fix missing $ in expression to parse script\n  
13137,     20798: propagate an #ifdef to prototypes\n  
13138,     20794: Change version to 4 3 0-dev-1\nDon t compile in a static in init c unless needed \n  
13139,     fix autoloaded trap bug; rejig use of trapfuncs\n(now traplists); improve trap tests\n  
13140,     Generated PDF from zsh texi using pdfetex\n  
13141,     Motoi Washida: libiconv test needed on Mac OS X\n  
13142,     Test -nt and FOO=BAR BAR=FOO echo bugs\n  
13143,     20774: fix e g   FOO=BAR BAR=FOO echo  failure to unset FOO after finishing \n  
13144,      * 20773: Completion/Unix/Command/_getconf: additional variables from confstr() \n  
13145,     20759  20760  20765:  Improve Cygwin configuration\n  
13146,     Updated _rsync \n  
13147,     - Added new options for impending 2 6 4 release \n- Improved the descriptions of several old options \n- Got rid of the  --      options to _arguments (so that we\n  don\ t try to use the output of  rsync --help ) \n  
13148,     users/8433: fix hang in configure on latest Cygwin\n  
13149,      * 20753: use ZS_memmove instead of memmove \n  
13150,     20752: fix access to ZLE parameters\n  
13151,      * 20751: Src/Zle/zle_refresh c: use  ?  for character conversion error\n  
13152,      * 20747: some wide char support in the zle refresh code \n  
13153,     20750: fix hang with 20742\n  
13154,     20742: More Unicode conversion stuff \n  
13155,     users/8422: [[     -nt        with bad stat caused\nmayhem in initialisation files  functions  etc \n  
13156,     Fix email address on some log entries \n  
13157,     20739: change LANG to LC_MESSAGES in subversion completion\n  
13158,      * 20737: Completion/Unix/Command/_subversion: run svn commands with LANG=C \n  
13159,      * 20736: Src/Zle/zle_utils c: change zlegetline() to return a metafied string \n  
13160,     getzleline stuff is 20735\n  
13161,      * 2073x: Src/Zle/zle_utils c  Src/hist c: modify zlegetline() and zlegetline\n   caller so that the octet-based and wide-character versions should return\n   the same string \n  
13162,      * unposted (cf  zsh-users/8412): Config/version mk: fix year typo \n  
13163,      keeper  function suite\n  
13164,     Fixed compiler warning about a missing initializer \n  
13165,     Got rid of  unused parameter  compiler warning for nullsethashfn() \n  
13166,     remove larch completion  it has been superceded by tla\n  
13167,     20734: rewrite to handle version 2 2 0 of valgrind\n  
13168,     20730: fix suffix style to regard quoted special characters as not special\n  
13169,     20728: add RLIMIT_SIGPENDING and RLIMIT_MSGQUEUE \nalso use ulimit -x for RLIMIT_LOCK\n  
13170,     FAQ updates from Bart\n  
13171,     Motoi Washida: users/8380: complete plist files\n  
13172,      * 20718: Src/Zle/zle_utils c: minor cleanup for proto-Unicode stuff \n  
13173,     c f  20675: improve zle as a basis for Unicode \nunposted: update version to 4 2 3-dev-1\n  
13174,     20708: enhance replace-string\n  
13175,     unposted: release 4 2 3\n  
13176,     20698: Fix tail for POSIX conformance\n  
13177,     users/8359: add Darwin completion directories by default\n  
13178,     20701: fix compilation on Mac OS X: define is __APPLE__  not APPLE\n  
13179,     users/8354: Document limitation of glob_complete and matching control\n  
13180,     20695: Fix Cygwin problem with initialising from pointer to imported variable\n  
13181,     Fix  distfiles and  cvsignore\n  
13182,     Unposted: release zsh version 4 2 2\n  
13183,     20692: unset POSIXLY_CORRECT in test \nunposted: minor comment change in _perforce\n  
13184,      * unposted: config guess  config sub: update to 2004-11-12 and 2004-11-30  respectively \n  
13185,      * 20689: Etc/FAQ yo: fix missing-word typo \n  
13186,      * 20657: Src/Zle/zle_tricky c: sort completions partially based on LC_COLLATE setting \n  
13187,      * unposted: Completion/X/Command/_gnome-gv: move gnome-gv completion from C/U/C to C/X/C \n  
13188,     20687: 4 2 2 news\n20688: Unicode/UTF-8 FAQ notes\n  
13189,     20666: Avoid creating unnecessary multios when a descriptor is closed and\nthen re-opened \n  
13190,      * 20665: improve completion for ggv/gnome-gv \n  
13191,     20661: *(+func) = *(e:func:)\n  
13192,     20662: update for nedit 5 5\n  
13193,     list new functions\n  
13194,      * 20655: _deb_packages fix from Karl Chen \n  
13195,      * 20654: completion for wajig  and dpkg/deb_packages improvements from Karl Chen \n  
13196,      * 20650: completion for mencal \n  
13197,      * 20649: completion for cal and ncal \n  
13198,     unposted: limit some Perforce change completions to current client\n  
13199,     20632: incorrect propagation of signals to process group\n  
13200,      * 20639: Completion/Unix/Command/_bogofilter: improve  bogoutil  completion for 0 93 3 1 \n  
13201,      * 20637: Completion/Debian/Command/_lintian: add completion for  lintian   a Debian package checker \n  
13202,      * 20636: Completion/Unix/Command/_bogofilter: add completion for  bogofilter  and  bogotune  commands \n  
13203,      * 20634: Completion/Unix/Command/_postfix: completion for postsuper \n  
13204,      * 20627: Completion/Unix/Command/_bogofilter: updated completion for newer bogoutil \n  
13205,      * 20626: Completion/Unix/Command/_baz: completion derived from _tla by Matt Zimmerman \n  
13206,     20617: fix completion of compressed modules for 2 6; add insmod completion\n  
13207,     20614: fix 20613\n  
13208,     20613: fix inconsistencies with embedded whitespace in match-words-by-style\n  
13209,     20612: add options to match-words-by-style widget\n  
13210,     20605: Use separate structure with get/set/unset methods fro parameters \nSeparate justification width of parameters from base/precision \n  
13211,     20606: simple verification of pseudorandom numbers\n  
13212,     update python completion for version 2 4\n  
13213,     20595\n  
13214,     A few minor style tweaks (as discussed in 20595 and 20596) \n  
13215,     update screen completion for version 4 00\n  
13216,     20599: test for $((##)) should now check for error\n  
13217,     Corrected the error-return comment for zchdir() and optimized the\nHAVE_FCHDIR error-return code \n  
13218,     20591: Stephane Chazelas: use of fchdir in zchdir leaked fd s\n  
13219,     20592: Debian bug#283358: $((##)) failed erratically\n  
13220,      * 20583: Completion/Unix/Command/_ssh: complete  modern  options\n   such as GSSAPIAuthentication \n  
13221,     offer multiuser screen sessions for attaching/detaching\n  
13222,     20578: Functions/Prompts/prompt_elite2_setup: handle ttys with slashes in them \n  
13223,     20576: fix core dump on TRAPEXIT\n  
13224,     20572: Allow alternative signal names\n  
13225,     20571: update javac completion for J2SE 5 0\n  
13226,     20568: debug test in pattern c was out of date\n  
13227,     20566++: prefer SIGCHLD to SIGCLD and SIGPOLL to SIGIO\n  
13228,      * unposted: Completion/Unix/Type/_pdf: complete pdf files for kpdf \n  
13229,      * Completion/Unix/Command/_bogofilter: fix -w/-p typo  which was noticed by Michał Politowski \n  
13230,     users/8219: add $HISTCMD\n  
13231,     20556: change SOCKLEN_T to ZSOCKLEN_T to avoid clash\n  
13232,     improved Mac completion  from Motoi Washida\n  
13233,     Use  ;&  to have the new  (\\$*)  case fall through to the continue \n  
13234,     20551\n  
13235,     Handle $$ when expanding variables \n  
13236,     _bittorrent  from Jussi Pakkanen\n  
13237,     fix  compadd -k assoc1 assoc2 \n  
13238,      * 20539: Completion/Unix/Command/_make: avoid problems minus signs\n in expandVars() \n  
13239,     20528: exec 8>>(grep a) waited incorrectly for grep to finish\n  
13240,     20522: must-match optimisation in parameter substitution broken\n  
13241,     20510\n  
13242,     Fixed an arg in a call to times() (from Borzenkov Andrey) \n  
13243,     _comp_options needs NO_kshtypeset\n  
13244,     20513: fix tests of zero-length patterns\ntrivial optimisation in jobs c (unposted)\n  
13245,     20505\n  
13246,     Use the new gettempfile() function \n  
13247,     Added gettempfile()  which works like a custom mkstemp() (in addition\nto the existing gettempname()  which works like a custom mktemp()) \n  
13248,     20503\n  
13249,     Fixed the default completion-cache path   (Change from Alexey Tourbin )\n  
13250,     20499\n  
13251,     Added bicat() that works like dyncat()  but uses permanent memory\ninstead of the heap \n  
13252,     Call gettempname() with its new args \n  
13253,     - Fixed an unsafe use of gettempname() \n- Call gettempname() with its new args \n  
13254,     Made gettempname() take a prefix arg and a use_heap arg   When prefix is\nnon-NULL  it uses the specified prefix instead of $TMPPREFIX \n  
13255,     - Improved lockhistfile() to use the new gettempname() for a unique\n  filename instead of a  PID suffix \n- Use bicat() to build the $HISTFILE LOCK filename \n- Put the $HOST value into $HISTFILE LOCK in addition to the PID \n  
13256,     20500: Unmetafy patterns where possible and other minor pattern fixes\n  
13257,     20496\n  
13258,     Made zclose() avoid calling close() when fd < 0 \n  
13259,     In zleread()  initialize the first byte of the  line  buffer to \ \\0\ \nso that functions such as magicspace() won\ t be accessing uninitialized\nmemory when they look at  line  \n  
13260,     20490: string lengths in pattern c: ChangeLog entry\n  
13261,     20490: Don t assume null termination for test string in pattern matching \n  
13262,     20482: but with completion inside interactive completion\n  
13263,     Simple changes to _make and _rsync \n  
13264,     Added the 7 remaining options that were missing from the _arguments\nlist \n  
13265,     Got rid of  cmdargs  local since it is no longer used \n  
13266,     20467: Reintroduce rusage-based escapes for TIMEFMT \n  
13267,     20462: Use getrusage for timing again \nTime processes from before rather than after fork \n  
13268,     _rsync\n  
13269,     Added the new options for 2 6 3 (only omitting --checksum-seed  which\nis an advanced option that is not needed by normal users) \n  
13270,     unposted: update README for  test  change\n  
13271,     20412  tweaked: Make test builtin more POSIX compatible\n20435: Make pattern c not alter strings \n  
13272,     20418: report parse error rather than crash on unfinished pipelines \n  
13273,     20438 and a couple unposted changes \n  
13274,     - Call saveandpophiststack() with its new writeflags arg \n  
13275,     - Added an arg to saveandpophiststack() to allow the caller to\n  specify what flags to send to savehistfile() \n- Implemented the HFILE_NO_REWRITE support in savehistfile() \n  
13276,     - Call saveandpophiststack() with its new writeflags arg \n- Use the new HFILE_NO_REWRITE flag when saving the history\n  file after a signal was received \n  
13277,     Changed HFILE_GOT_SIGNAL to HFILE_NO_REWRITE \n  
13278,     Silence unused-parameter warnings from the compiler \n  
13279,     Added HFILE_GOT_SIGNAL \n  
13280,     Use convbase() instead of a  %d  format to convert a zlong \n  
13281,     We can\ t use  %d  on a histent number (which is a zlong these days) \nChanged the sprintf() to convbase() \n  
13282,     20277 (modified)\n  
13283,     This version now uses a zsh function to parse the makefile instead\nof awk or perl   That function has been enhanced to follow includes\nand to expand variables (which makes a target such as foo$(EXEEXT)\nexpand into the right executable extention for the current system) \n  
13284,     20427: Fix problem with _oldlist and custom completer \n20339: show-completer style\n  
13285,      * 20358: Completion/Unix/Command/_make: avoid potential gawk locale bug by not using awk \n  
13286,     20414: Completion/Unix/Type/_diff_options: correct missing minus in --unified  spotted by Paul Wagland \n  
13287,     Some improvements suggested by Oliver \n  
13288,     unposted: improve p4 add to ignore files being added already\n  
13289,     20409\n  
13290,     Completion for the darcs revision control system   Derived from\nthe zsh completion example that ships with darcs \n  
13291,     20397: Fix places where texinfo changes  --  to  - \n  
13292,     Unposted: update _perforce for release 2004 2\n  
13293,     20398: allow clean exit from within widget function\n  
13294,     Fix typo \n  
13295,     20391: SHLVL wasn t updated in environment\n  
13296,     20388: tweak ignoreeof behavior on user-defined widgets to match docs \n  
13297,     20387: revised algorithm for the fix in 20363 \n  
13298,     20378: Matthias B : fix bugs joining with metafied chars \n  
13299,     20364: use $WIDGETSTYLE in _oldlist\n  
13300,     20363: Src/init c  Src/Zle/zle_main c\n  
13301,     20348: rejig WIDGETSTYLE and add WIDGETFUNC\n  
13302,     Tests for EVAL_LINENO and for  command  used with POSIX_BUILTINS \n  
13303,     20331: Use internal zlong variables for consistency\n20332: Add WIDGETSTYLE zle parameter\n  
13304,     20330: rationalise zle return statuses\n  
13305,     20320  20325: improved EVAL_LINENO + XTRACE fix  plus EVAL_LINENO test;\nfix and test for  command -v  crash with POSIX_BUILTINS \n  
13306,     20325: consensus fix for  command -v  crash w/POSIXBUILTINS \n  
13307,     20320: rewrite of 20318  for sanity \n  
13308,     20318: Fix xtrace output bug introduced by 20308 \n  
13309,     20308: add EVAL_LINENO option\n  
13310,     20303: zle -I test and running zle widgets in traps\n  
13311,     20300: fix spurious EOF from ^C\n  
13312,     Previously-forgotten entry corresponding to zed fix from workers/20244 \n  
13313,     20283\n  
13314,     Incorporate Jean-Baptiste Quenot s change that improves the parsing\nof the <target    > tag \n  
13315,     20282\n  
13316,     When downline() calls upline() or visa versa (due to a negative zmult) \nthe value of  n  that was returned should be negative but was positive \nFixes some problems with  down up -line-or-history and others \n  
13317,     - Fixed the perl code that was using the @matches array \n- Simplified the other perl code just a little \n  
13318,     02070\n  
13319,     One of the new parenthetical expressions needs to not return a value\nso that it doesn t put items into the @matches array \n  
13320,     Don\ t output a target  VAR  for a line of the form  VAR := VALUE  \n  
13321,     20269\n  
13322,     Don t output make targets all clumped into a single string when useperl\nis enabled \n  
13323,     20251: integer conversion truncation\n20258: save command status in prompt substitution\nupdate FAQ\nrename version to 4 2 1-dev-1\n  
13324,     unposted: config guess  config sub: update to 2004-07-19 and 2004-06-24  respectively \n  
13325,     Version 4 2 1\n  
13326,     Changed an entry that was space-indented to being tab-indented like\nall the others \n  
13327,     20254: restrict scope of the default tag-order to fix a problem with cdrecord\ncompletion  Ideally the tag-order should go but _arguments currently needs it \n  
13328,     20244: fix bug with zed-iting autoloaded functions \n  
13329,     20237: handle mysqlimport  more mysql options  Redo screen session completion\n  
13330,     20236: fix problem with keep-prefix style where a modifier removes the prefix\n  
13331,     20235: sync remote file completion against _ssh to fix bug with quote handling\n  
13332,     still allow user specified text modifiers with a short terminal \nOnly disallow if the terminal is really unknown or without\nsufficient capabilities or if SINGLE_LINE_ZLE option is given\n  
13333,     20232 with typo corrected: remove zftp directory listing on zfcd\n  
13334,     unposted: zsh-4 2 1-test-A\n  
13335,      * 20230: Completion/Debian/Command/_apt: dumb down apt-get\n install completion and always complete from all available packages \n  
13336,      * 20225: Doc/Zsh/mod_clone yo: add Philippe Troin s explanations\n of clone usage \n  
13337,     20222: turn on max function depth\nplus unposted reference to this in README\nplus unposted neatening of 20219 history-pattern-search\n  
13338,     20221: $LINENO in trap       DEBUG was wrong \n  
13339,     20221: $LINENO in trap       DEBUG was wrong \n  
13340,     20219: make zle parameter HISTNO writeable\nadd history-pattern-search widget\n  
13341,     20208: ternary path codes in prompt treat / as zero elements\n  
13342,     20214: fix debugging test with recursive functions\n  
13343,     20204: Motoi Washida: typo in _retrieve_cache\n  
13344,     20200 plus unposted: fix MIME stuff \ndon t let _kfmclient drop through to `no more arguments  unnecessarily\n  
13345,     20199: improve MIME handling \n  
13346,     20198: fix TRAPEXIT \n  
13347,     Unposted: documentation for  zargs \n  
13348,     20180 (based on Jean-Baptiste Quenot s 20177): fix to work on BSD systems\n  
13349,     Motoi Washida: 20179: new completions for Mac OS X\n  
13350,     Jean-Baptiste Quenot: 20167: find targets enclosed in single quotes\n  
13351,     20173: fix crash when reallocating heaps\n  
13352,     20153: make zle-line-init run after the first zrefresh()\n  
13353,     NEWS: more additions from Oliver \n  
13354,     NEWS: read through and tidied up\n  
13355,     20151: ChangeLog for NEWS\n  
13356,     unposted: improve 20150 by setting pointer to NULL\n  
13357,     20145: Additional arguments to read-from-minibuffer specify initial values\nof LBUFFER and RBUFFER \n  
13358,     20149: improve prompt-reset code\n20150: commit ancient memory leak fix(?) in completion\n  
13359,     21042: add test for bug fixed in 21041\n  
13360,     20141: Crash restoring exported special parameters\n  
13361,     20126: tidy up before 4 2 1\n20127: tweaked version of Wayne s patch to reexand prompts\n  
13362,     20125: say where the output for job notifications goes\n  
13363,     7650: new reset-prompt zle widget\n  
13364,     20118: improvements to limits builtins\n  
13365,     20112: Forgot this bit \n  
13366,     20112 changed c f  20113:\nfix here string and here document expansion and quoting\n  
13367,     unposted: fix  distfiles for zed-set-file-name\n  
13368,     Fix typos in some descriptions \n  
13369,     20089: various zed improvements\n  
13370,     20091: Src/Modules/pcre c: silence gcc  unused parameter  warnings \n  
13371,     20076: improved function using always\n  
13372,     20076  20084:         always         syntax \n  
13373,     Record some uncommitted doc changes and a minor fix to predict-on \n  
13374,     Minor update to cooperate with zle-line-init \n  
13375,     Document default bindings of copy-prev-shell-word \n  
13376,     Previously uncommitted bits of 19785 \n  
13377,       * 20081: Doc/Zsh/mod_pcre yo: document -pcre-match condition \n  
13378,     20077: fix completion of reserved words\n  
13379,     _arguments fix for configure  unconfirmed\n  
13380,     20069: complete character encodings case-insensitively for GNU iconv\n  
13381,     20059: check for systems using   separator instead of for those using :\n  
13382,     users/7553: include zsh version in dump file to avoid problems with upgrades\n  
13383,     20055: Completion/Unix/Command/_tla: additions and fixes from Jason McCarty \n  
13384,     c f  20034: zsh/mathfunc tests\n  
13385,     20029: fix randomness of mathfunc rand48(seed)\n  
13386,     20026: INSTALL nitpick \n  
13387,     20025: --with-tcsetpgrp from Philippe Troin\n  
13388,     20024: Improve documentation for TRAPNAL functions\n  
13389,     20002 -- fix for matching spec core dump\n  
13390,     20017: zsh html was missing from doc distributino\n  
13391,     users/7467: quoted commands weren t found in dispatcher lokoup\n  
13392,     UNUSED()\n  
13393,     Marked unused parameters with the new UNUSED() macro \n  
13394,     Define the new UNUSED() macro for marking function parameters \n  
13395,     19980\n  
13396,     Silenced one signed/unsigned comparison compiler warning \n  
13397,     Silenced three signed/unsigned comparison compiler warnings \n  
13398,     Silenced one signed/unsigned comparison compiler warning \n  
13399,     Silenced two signed/unsigned comparison compiler warnings \n  
13400,     Fixed two signed/unsigned comparisons \n  
13401,     - Added missing struct initializers to two last-in-list values \n- Fixed a few signed/unsigned comparisons \n  
13402,     Made a variable (t2) size_t so that it matched the size of the\nother variable it gets compared with (fw) \n  
13403,     Changed a few job-table variables into ints \n  
13404,     Supply all initializers for the final struct reswd element \n  
13405,     Fixed signed/unsigned compiler warning \n  
13406,      * 19991: Completion/Unix/Command/_lynx: complete  htm files too \n  
13407,     19976: fix spurious job table full messages\n  
13408,     c f users/7474: reorder option descriptions in subheadings \n  
13409,     19967+\n  
13410,     Added a call to saveandpophiststack(0) to endparamscope() to enable\nthe new auto-pop feature \n  
13411,     - pushhiststack() now takes a level value and remembers it   If it was\n  the locallevel (instead of -1)  the history list is marked to auto-pop\n  on function exit \n- The saveandpophiststack() function now interprets a 0 arg as a request\n  to do an auto-pop \n  
13412,     - Added the -a option to  fc  and  history  \n- Call saveandpophiststack() using the newest calling syntax \n  
13413,     Use the new `history -ap  command to restore the history instead of\nusing a trap function \n  
13414,     Document the new -a option to `fc -p  and improved the documentation for\nthe history push/pop in other ways \n  
13415,     19971: Fix environment nastiness in zexecve()\n  
13416,     19962\n  
13417,     Use the new history push/pop options to fc to save and restore the\ncurrent history buffer \n  
13418,     Document the new options to  fc  \n  
13419,     - Added functions to push and pop the current history list  allowing\n  functions to more easily switch to their own private history \n- Changed the existing history push/pop code in savehistfile() (which\n  uses a separate history buf to allow it to rewrite the on-disk\n  version of the history file without disturbing the in-memory list) \n  
13420,     - Added the -p (push) and -P (pop) options to the  fc  builtin \n- Allow -p/-P to be given to  history  \n- On exit  save & pop any pushed history stacks before we call the\n  normal savehistfile() function \n  
13421,     unposted: _perforce: minor tweak to revision syntax\n  
13422,     Added a comment to resizehistents() to explain why the function is\nweirder than expected at first glance \n  
13423,     19941: fix (( 3  ))\n  
13424,     19936: zcalc temp history file name\n  
13425,     fix bug I missed  somehow\n  
13426,     19920: attempt to improve hrealloc()\n  
13427,     19893\n  
13428,     Fix the potential for an infinite loop in lockhistfile() if the\nlink() calls fails for some other reason than EEXIST \n  
13429,     19878\n  
13430,     Set the first character of buf to  \\1  before the strftime() call so\nwe can try to distinguish a zero-length string from an error return\n(a minor fix to Peter s patch) \n  
13431,     19877: improved test for empty strftime strings\n  
13432,             * 19869: Src/prompt c  Src/utils c: avoid segfault when\n        prompt-expanding  %D %p   or  %D %P   under locales with null\n        strings for am_pm \n  
13433,     Fix TRAPS_ASYNC so that it handles signals correctly \n  
13434,             * 19863: Completion/Zsh/Type/_command_names  Doc/Zsh/compsys yo:\n        allow search path for command names to be overridden by means of new\n        command-path style \n  
13435,      * 19845: Completion/Debian/Command/_apt-move: apt-move\n completion function from Steven Kowalik \n  
13436,     19839  19842: improve handling of #q in qualifiers\n  
13437,     19840: vared takes one normal argument\n  
13438,     19837: restore vared -e\n  
13439,     unposted: aap short and long options are mutually exclusive\n  
13440,     19825: add changes style\n  
13441,     19810: ksh autoloading\n19812: autoloaded traps which are still buggy \n  
13442,     19809: improve NO_TRAPS_ASYNC by queueing traps alone\n  
13443,     19806: fix bug with %v prompt expansion and negative index beyond array start\n  
13444,     19801: implement autoloading of trap functions\n  
13445,     19767  19785: store flags for -z and -k options to autoload allowing the\ncompletion system to be used with ksh_autoload set\n  
13446,     19767  19785: store flags for -z and -k options to autoload allowing the\ncompletion system to be used with ksh_autoload set\n  
13447,     19800: reverse sense of `declare +m  test  -m now being allowed for declare\n  
13448,     19798: rudimentary completion for bogoutil \n  
13449,     zsh-users/7365: new TRAPS_ASYNC option\n  
13450,      * 19792: Completion/X/Command/_mplayer: complete  m2v and  m2p \n thanks to Rene H  Larsen \n  
13451,     19790: complete functions after -a and allow multiple -z/-k options\n  
13452,     19775: new completion for php\n  
13453,     see 19778 etc : remove Doc change from 19735\n  
13454,      * 19606: Completion/Unix/Command/_tla: switch tla completion to\n the version by Jason McCarty  Erik Toubro Nielsen  and Rob Weir \n  
13455,     * Jay Berkenbilt: 19769: Completion/Unix/Command/_rsync:\n  fix quoting for remote file completion  add -L to ls command \n  
13456,     Ingo Rohlfs: 19747: complete files/urls for svn cp and mv commands\n  
13457,     add missing local declaration\n  
13458,     19768: add clue to insecure directories warning and send errors to stderr\n  
13459,     19741 and 19743 \n  
13460,     Test the new F glob qualifier \n  
13461,     Minor optimization to qualnonemptydir() when a dir has a subdir \n  
13462,     19712  19740: allow assigning to associations with i and r subscript flags\n  
13463,     make expn change clearer  suggested by Wayne\n  
13464,     Peter Castro: Cygwin improvements for dynamic libraries  text/binary  paths\n  
13465,     19733 with docs tweaked: keymaps for vared and zed\n  
13466,     19728: note on (^F) qualifier\n  
13467,     restore comment in ChangeLog\n  
13468,     moved stuff since 4 2 0 back into ChangeLog\n  
13469,     Change version to 4 2 0-dev-1\nMove old ChangeLog to ChangeLog-4 1\n  
13470,     19717: (F) glob qualifier for full directories\n  
13471,     unposted: change  mv  to  mv -f  when backing up  zwc files in zrecompile\n  
13472,     19708: change getent() to handle two arguments\n  
13473,     19707: negative index into arrays should return scalar and not one element array\n  
13474,      * 19691: Completion/Unix/Type/_diff_options: Allow more than\n one --exclude or -x to diff \n  
13475,     19683: Work around dllwrap problem on Cygwin\n  
13476,     19682: Don t run ZERR  DEBUG or EXIT traps inside other traps \n  
13477,     19674  modified: support for non-standard ports in zftp \n  
13478,     19661: Support diff -u for Solaris 2 10 upwards\n  
13479,       * 19673: Peter Palfrader: Completion/Unix/Command/_cvs:\n  tags can contain the + character \n----------------------------------------------------------------------\n  
13480,     19669  19670: Danek Duvall: two compaudit problems\n  
13481,     19671: error in zle-line-init caused infinite loop\n  
13482,     19666 and users/7212 \n  
13483,     Add  unset  to the localoptions in several functions (users/7212) \n  
13484,     As suggested by 19666 and corrected by 19668  fix remote file completion \n  
13485,     Get it right this time \n  
13486,     Missing ChangeLog entry for 4 2 0 changes\n  
13487,     unposted: make 19655 a bit safer\n  
13488,     19655  19656  19657: Memory leaks spotted by valgrind \nAlso bug with multiple math function autoloads \n  
13489,     unposted: tweak dlcompat note\n  
13490,     19653: Latest OS-specific information\n  
13491,     mention HFS+ as possible cause of -N test failure\n  
13492,     19648: complete -t and -n options\n  
13493,      * 19641: Src/Modules/pcre c: implement -pcre-match conditional\n suggested by Oliver \n  
13494,     19629: fix zpty on HP-UX\n  
13495,       * 19640: Src/Modules/pcre c: improve error reporting a bit \n  
13496,           * 19631: Doc/Zsh/mod_pcre yo  Src/Modules/pcre c: avoid segfault\n      when pcre_study is called before pcre_compile; documentation on\n      pcre_compile options \n  
13497,     19140: release process group on exit if acquired\n  
13498,     update year to 2004\n  
13499,     mention relevant version numbers\n  
13500,     19619: fix problem with getting signals on MacOS X 10 1\n  
13501,     zsh-users/7160: Check and fix mod_export entries \n  
13502,     19615: Update MACHINES\n  
13503,     19615: update MACHINES\n  
13504,     fix indentation  missing local and add to  distfiles\n  
13505,     19616: use correct linker options for shared libs with gcc on HP/UX\n  
13506,     19614: Completion/Unix/Command/_mtr: better descriptions and grouping \n  
13507,     19613: Completion/Unix/Command/_vux: better descriptions and indentation \n  
13508,     19602: cope with output from the preprocessor on HP/UX  Itanium II\n  
13509,     19605: Completion/Unix/Command/_mtr: completion for Matt s traceroute \n  
13510,     19604: Completion/Unix/Command/_vux: completion for vux and vuxctl \n  
13511,     19603: Gracefully omit Y tests if zpty is not available\n  
13512,     add _tla\n  
13513,      * 19600: Completion/Unix/Command/_tla: rudimentary completion for tla \n  
13514,     19596: include dlfcn h instead of dl h on HP/UX 11\n  
13515,     19595: rename DO to DOLOOP to avoid conflict with curses h on Tru64 5 1\n  
13516,     19575: Fix problem with trap on EXIT overriding status\n  
13517,     * 19566: Doc/Zsh/params yo: change associative array documentation to refer\nto Parameter Expansion Flags rather than Subscript Flags   Wording by\nFrederik Eaton and Peter \n  
13518,     19554: make nocaseglob more efficient on Cygwin\n  
13519,     19553: rename c in zle to lastchar\n  
13520,     19552: missing mod_export\n  
13521,     builds on OpenBSD 3 4\n  
13522,     19549: correct buffer size for printf spec\n  
13523,     Improved my last comment \n  
13524,     zsh-users/7121: NO_CASE_GLOB option for case-insensitive globbing\n  
13525,     updated config  guess sub  \n  
13526,     Updated to version from autoconf 2 59 (2003-10-03) \n  
13527,     Updated to version from autoconf 2 59 (2003-08-18) \n  
13528,     19540: fix completion to use states and complete  wav files for mplayer\n  
13529,     unposted: 4 2 0-pre-3\n  
13530,     19474: fix a calculation when displaying completions which are\nscreen width or multiples of that wide  and ALWAYS_LAST_PROMPT\n  
13531,     19535: Add --enable-cap\n  
13532,     users/7105\n  
13533,     Added an AC_CONFIG_COMMANDS() macro to generate stamp-h \n  
13534,     Added back the stamp-h idiom which allows us to know when config h\nis up-to-date but unchanged \n  
13535,     19530\n  
13536,     Fixed two cases where unmetify() was using an int* to store a value\ninto a size_t variable \n  
13537,     19528: fix error if neither select nor poll available\n  
13538,     19525: suppress compiler warnings and complete groups using lookupd on Mac OS\n  
13539,     unposted: 4 2 0-pre-2\n  
13540,     19532: awk problem on AIX 5\n  
13541,     zsh-users/7100: fix completion of =file when noequals is set\n  
13542,     19514: typo in terminfo c\n  
13543,     19512: --enable-pcre option\n  
13544,     19512: --enable-pcre option\n  
13545,     correct return status\n  
13546,     19507: new completions\n  
13547,     19505: compilation with NTTYDISC defined was broken \n  
13548,     unposted: fix typo in compsys yo\n  
13549,     19498: update antiword completion for version 0 35\n  
13550,     19477: improve lynx option argument descriptions\n  
13551,     19478: pcre configuration problem\n  
13552,     compiler-warning fix\n  
13553,     Got rid of an unused-variable compiler-warning \n  
13554,     unposted: zsh-4 2 0-pre-1\n  
13555,     unposted: reword --help description and add a version string to _raggle\n  
13556,     19468: capitalize URL abbreviation in completion descriptions\n  
13557,     19460: Another go at fixing the terminfo configuration problem\n  
13558,     19458: new completion for raggle\n  
13559,     19457: new sed and uniq completions  add descriptions for rar commands and\nupdate completion for ssh-keygen\n  
13560,     19456: Fix ptmx tests  again \n  
13561,     19455: complete hostnames and nfs mounts\n  
13562,     unposted: Completion/Debian/Command/_bts: patch from Christian Marillat; complete new BTS tags \n  
13563,     unposted tweaks\n  
13564,     Silenced some compiler warnings about uninitialized variables \n  
13565,     19437: don t rely on path search to find config modules sh\n  
13566,     19436: complete more things from nis\n  
13567,     19429: configure test for ptmx\n  
13568,     19428: Fix test for #include ing STREAMS headers\n  
13569,     19427: last job in jobs wasn t reported \n  
13570,     complete also for apache2ctl\n  
13571,     don t need separate _perl_builtin_funcs (only perldoc ever used it)\n  
13572,     19423: correct typo in one of the options\n  
13573,     19422: fix crash resulting from passing a long option to compctl\n  
13574,     19420: Update configure ac for better Autconf 2 50 support \n  
13575,     19418: update completions to new versions\n  
13576,     unposted: capitalize _acroread file match description\n  
13577,     19415: fix indicate that short_loops option is applicable to repeat loops too\n  
13578,     19409: handle situation where the user has the nounset option set\n  
13579,     19410\n  
13580,     Another fix in sub_match() to avoid allowing a partial-meta match\nto occur (this time in the backwards scan) \n  
13581,     19406\n  
13582,     Optimized the check for a widowed Meta character \n  
13583,     19408: fix argument handling for ulimit -aH\n  
13584,     Mikael Magnusson: 19405: new completion for gphoto2\n  
13585,     19389+: fix zmodload -u zsh/datetime  add strftime -s scalar\n  
13586,     19387: add (- ) glob qualifier to globs where only files are directly applicable\n  
13587,     19309: add #q to the start of a glob qualifier in the -g argument\n  
13588,     19385: NULL dereference in add_match_part\n  
13589,     users/7011: typo in mkbltnmlst sh\n  
13590,     19382: improved zmv documentation\n  
13591,     19378: new update-rc d completion avoid picking up README file as a service\n  
13592,     19377: handle the situation when MH is not installed better\n  
13593,     19374: fix typo in 19361\n  
13594,     19364: completion for printenv\n  
13595,     19364: new completions for aptitude  getent and catcgsegv\n  
13596,     19365: avoid use of $words[0 \n  
13597,     19358: update elinks completion for version 0 9 0\n  
13598,     19361: Memory leaks\n  
13599,     Forgotten in last Doc/Zsh change \n  
13600,     19354: Fix manual section names which upset Docbook\n  
13601,     Got missed when removing configure in\n  
13602,     Fix typo in last commit\n  
13603,     19338 etc : remove support for autoconf before 2 50\n  
13604,     19339: minor TCP function suite additions\n  
13605,     19336: Src/Zle/compmatch c: Bug with metafied characters in length of\ncompletion prefix\n  
13606,     zsh-users/6969 \n  
13607,     Changed bin_eval() to default lastval to 0  just in case we have an\nempty eval string \n  
13608,     19308: zsh crashes with $((##))\n  
13609,     19299: try to handle completion of devices better\n  
13610,     19295: $CONTEXT zle parameter\n  
13611,     Add mod_datetime yo\n  
13612,     extra comment for zsh-line-init\n  
13613,     19281: zle-line-init special widget\n  
13614,     19276: fix fallback used to get completer list if the style lookup failed\n  
13615,     Baptiste Daroussin: 19272: small updates\n  
13616,     adjust to work with the newer version of subversion s help output\n  
13617,     19269: 8-bit characters in character classes\n  
13618,     unposted: update elinks completion for version 0 4 3\n  
13619,     19265: update for latest versions\n  
13620,     tidy up descriptions\n  
13621,     Stephen Rueger: 19255: update to work with APT 0 5 14\n  
13622,     unposted: wget --dns-cache option takes a boolean argument\n  
13623,     removed _w3mhistory\n  
13624,     19244: various completion function fixes and updates\n  
13625,     unposted: fix typo in _w3m\n  
13626,     correct old message number\n  
13627,     19242: Make job table dynamically reallocatable \n  
13628,     _perforce completion bug fixes\n  
13629,     19218: extend 19216 to zle widgets\n  
13630,     19216: Save and restore pipestatus   Remove debugging output\n  
13631,     Added * dll to  cvsignore and fixed typo  (unposted)\n  
13632,     add * dll and fix typo with errnames h\n  
13633,     a la 19209: zcalloc -> zshcalloc\n  
13634,     zsh-users/6727 (Lloyd Zusman): improve _w3m\n  
13635,     zsh-users/6663  6736  6738: Symlink fixes for Completion/compaudit; new\nfunctions url-quote-magic and quote-and-complete-word \n  
13636,     zsh-users/6736: widget that puts double-quotes around words before\ninvoking completion \n  
13637,     zsh-users/6738: replacement for self-insert that quotes shell\nmetacharacters when they appear in a word that looks like a URL \n  
13638,     users/6663: follow symlinks when checking permissions on directories in\nthe fpath; also in case of symlinks  find parent with $ ^fpath:h  rather\nthan $ ^fpath /  \n  
13639,     19202: Doc/Makefile in  Doc/Zsh/mod_datetime yo: rudimentary documentation\nfor zsh/datetime module \n  
13640,     * 19201: Completion/Unix/Command/_screen: patch from Yasuhiro Hayase\nto complete normal commands after screen \n  
13641,     19185: wrong context in delete-whole-word-match\n  
13642,     unposted: Make _perforce easier to use with add-on commands \n  
13643,     19183: new delete-whole-word-match\n  
13644,     update for nmap 3 48\n  
13645,     unposted: more new files weren t in  distfiles\n  
13646,     18169: change parameter SECS in datetime to EPOCHSECONDS\n  
13647,     19168: Various problems with size of buffers and pointer usage in ztrftime\n  
13648,     19167: fix NUL at start of BRACE_CCL range \n  
13649,     unposted: update distribution files for 18980 and 19053\n  
13650,     19151: Src/Modules/datetime c: add $SECS parameter for seconds since epoch \n  
13651,     unposted: improve Perforce p4 -H completion\n  
13652,     19139: add tests for typeset -T\n  
13653,     Fix minor problem with 19129 \n  
13654,     Fix the old-style typeset -T (without the new separator arg) \n  
13655,     19129: extra argument to typeset -T gives character for joining array\n  
13656,     unposted: improve Perforce label completion\n  
13657,     19105: Set shout to stderr if interative with no tty\n  
13658,     19112: several improvements and fixes for Perforce completion\n  
13659,     users/6606: handle any matching control options passed down\n  
13660,     19106: document use for _menu\n  
13661,     *** empty log message ***\n  
13662,     19096: crash unloading zsh/system\n  
13663,     Fix minor typo in MIME function documentation \n  
13664,     Vin Shelton: 19073: Replace C++-style comment \nVin Shelton: 19038: Make sed grok icc s cpp output \n  
13665,     19053 modified  c f  19056\n  
13666,     19076: don t call setupterm with NULL as last argument as that causes\nthe shell to exit when the terminal is unknown \n  
13667,     19059: add -v  -V and -p flags required by POSIX to the command builtin\n  
13668,     users/6529 + unposted\n  
13669,     Improved the comments to no longer suggest that setting PATH here is\na safe thing to do (though I do provide a safe way to do that if the\nuser really insists on it) \n  
13670,     19044: typo in setting $saliases elements\n  
13671,     19021: in command position  try to complete directories once and once only\n  
13672,     19019: only complete aliases of the appropriate type for the alias builtin\n  
13673,     19020: fix printaliasnode\n  
13674,     19014: add alias -s suf=handler\n  
13675,     zsh-users/6493: search tinfo library for curses\n  
13676,     18982: comments/rant for paramsubst()  accidentally uncommited\n  
13677,     18980: new zsh/system module\n  
13678,     18982: comments/rant for paramsubst()\n  
13679,     18981: tidy up tcpsys doc\n  
13680,     18959: improve _perforce global option handling again\n  
13681,     18958: improved option handling for p4 change\n  
13682,     18956: update a2ps completion for a2ps 4 13\n  
13683,     18951: Better option handling (c f  18948)\n  
13684,     18949: new completion for du\n  
13685,     18942: Fix / suffix handling in _perforce\n  
13686,     18947: also complete options using _arguments\n  
13687,     unposted: Completion/Unix/Command/_perl: allow completion of  PL files\n(e g  Makefile PL)   Thanks to Marko Myllynen for the suggestion \n  
13688,     unposted: Completion/Unix/Command/_irssi: fix quoting bug \n  
13689,     unposted: Functions/Prompts/prompt_adam2_setup: fix colouring and bug\nintroduced since % needed to be quoted inside $ //  substitution \n  
13690,     18948: Pass global options to p4\n  
13691,     18944: update ruby completion for version 1 8 0\n  
13692,     18941: history wrong after parse error during alias expansion\n  
13693,     18938: Export some data symbols \n  
13694,     *** empty log message ***\n  
13695,     fix _cvs quoting bug  new _cdrecord and remove _archie (archie servers are gone)\n  
13696,     18926: problem accepting filename require metafication with menu selection\n  
13697,     18920: fix unset IFS betterer\n  
13698,     fix bug with f glob qualifier where an empty spec resulted in an infinite loop\n  
13699,     new chmod completion\n  
13700,     18916: unsetting IFS could cause segfault\n  
13701,     tidy up of many completions (updates  fixes  improvements and plain aesthetics)\n  
13702,     move _global_tags\n  
13703,     moved from Completion/Unix/Command\n  
13704,     tidy up of many completions (updates  fixes  improvements and plain aesthetics)\n  
13705,     Fix one of the bugs from users/6421 \n  
13706,     Don t crash if alt-y is typed twice in a row without a prior ctrl-y \n  
13707,     18908: use print/read -u in completion system and tweak builtin doc\n  
13708,     18893  18901: new completions for rar/unrar and ogg vorbis; improve _pkgtool\n  
13709,     18900: new iptables and nmap completions\n  
13710,     18890: new completion for sabcmd\n  
13711,     18877: add note about supporting latest versions  tag names being plural etc\n  
13712,     18888: Philippe Troin: allow clone to acquire a controlling tty\n  
13713,     18880: Don t return unset parameters in $parameters\n  
13714,     18859: Allow the sort style to override sorting by setting explicitly to false \n  
13715,     18872: update javac completion for SDK 1 4 x and rename serialvar to serialver\n  
13716,     18874: Completion/Unix/Command/_subversion: PATH can mean files too \n  
13717,     18866: document conventions used in completion functions\n  
13718,     adjust return code to not break the prefix-needed style\n  
13719,     18864: unnecessary space with $ (Q)    \n  
13720,     18863: new completion for aap\n  
13721,     unposted: remove initial capitalisation from option descriptions\n  
13722,     18841: work around problem which caused the whole word to be removed\n  
13723,     18839/18840: Completion for nice\n  
13724,     Rebrand as 4 1 1-dev-1\n  
13725,     18836: read with metafied delimiter didn t work \n  
13726,     18824: kill-word-match deleted to end of line \n  
13727,     18817: need to quote % anchor in substitution\n  
13728,     18822: fix accept-exact style not not bail out when it shouldn t and add a\nsetting to continue on and do normal completion\n  
13729,     18xxx: Completion/Unix/Command/_subversion: completion for svn and svnadmin \n18xxx: Completion/Debian/Command/_debsign: completion for debsign  by Matt Zimmerman \n  
13730,     18811: needed to quote % in substitution as it was otherwise taken as an anchor\n  
13731,     unposted: forgot  distfiles in 18810\n  
13732,     18810: Various enhancements and bug fixes for the TCP function suite\n  
13733,     18571: extra note on += for associative arrays\n  
13734,     18807: baptiste daroussin <daroussi@ece fr>:\nCompletion for Slackware package management tool\n  
13735,     users/6367: match-words-by-style wrongly referred to in doc\n  
13736,     19696: quoting of existing CVS-managed files was wrong\n  
13737,     18769: handle parse errors in autoload functions properly\n  
13738,     18634: Tomi Vainio: work around problem with latest Sun k2 compiler\n  
13739,     18631: returning too early breaks prefix-needed style set to false\n  
13740,     18628: update completion of reportbug and querybts to modern usage \n  
13741,     18627: -resize and -shave options to _imagemagick mogrify \n  
13742,     18626: improve echoti s arg support and fix compile problem on 64-bit Solaris\n  
13743,     18618: add Etc/changelog2html pl\n  
13744,     18616: Add ternary expression handling to zformat\n  
13745,     Version 4 1 1\n  
13746,     *** empty log message ***\n  
13747,     18607: correctly handle quoting for remote files for rcp completion\n  
13748,     users/1654: anchors did nt work with // parameter substitution\n  
13749,     18526: -O option to _describe for prefix-needed in _arguments\n  
13750,     18600: bug matching against [[:xdigit:  \n  
13751,     18587: fix bug where only the beginning of the association key was compared\n  
13752,     unposted: zsh-4 1 1-test-3\n  
13753,     18578: 18559 caused typeset failures\n  
13754,     18569: pointer error with $ (on)    \n  
13755,     typo\n  
13756,     18559  18562: make modules use proper option arguments\n  
13757,     18565: bug when $ (u)     reduced array to length 1\n  
13758,     18543: memory leak vared ing arrays\n  
13759,     18530: print option states with `set -o  or `set +o \n  
13760,     18539 and remaining bits of 18536???: vi and emacs options  autoload zle\n  
13761,     18536: EMACS and VI compatibility options\n  
13762,     18513: Work around crash on resize in menu selection\n  
13763,     18525: add manual UTF-8 conversion so \\u and \\U should work on more systems\n  
13764,     18524: sepjoin !heap bug cause problem in vared\n  
13765,     18520: add a bunch of old new completions (had all been left unfinished awhile)\n  
13766,     18519: use of read builtin was broken in changes to option parsing\n  
13767,     18512: fix 18508 properly this time \n  
13768,     users/6080  users/6083: more quoting fixes\n  
13769,     18508: quoting of separator in $ foo//  /    was buggy\n  
13770,     zsh-users/6049 ChangeLog: add poster s name\n  
13771,     zsh-users/6049: fix for failed ioctl TIOCGWINSZ already present  document it\n  
13772,     unposted: change version to 4 1 1-test-2\n  
13773,     unposted: cvsignore VIM * swp files\n  
13774,     unposted: my name spelling as it is now\n  
13775,     18476: Fix menu selection on Linux console\n  
13776,     18497: minor tweaks to info and tcp_spam\n  
13777,     18492: Provide partial fix for multios and output process substitution\nasynchronicity problem   Document workarounds for remaining problems \n  
13778,     18496: HP-UX 11 news from Paul Ackersviller\n  
13779,     18486: back-out 18458 because it causes problems when completing only options\n  
13780,     17820  tweaked: attempt to fix compilation of tcp h on recent versions\nof cygwin\n  
13781,     Haakon Riiser: 18473: new completion for Acrobat Reader 5 0 x\n  
13782,     18472: spelling corrections\n  
13783,     unposted: misspelling in compsys yo rewrite\n  
13784,     unposted: complete compsys yo rewrite\n  
13785,     use _message for error message instead of echo\n  
13786,     18468: use perldoc -u to get perlfunc doc instead of searching for the man page\n  
13787,     18467  not 18477\n  
13788,     18477: Null pointer dereferenced in _arguments  *-+bar \n  
13789,     18466: tcp mdh only included by C file\n  
13790,     IKEGAMI Tsutomu: sf bug 722366: metafy pwd when read from $PWD\n  
13791,     18462: complete files in addition to commands\n  
13792,     18461: handle cases where the perlfunc man page is compressed\n  
13793,     18459: Completion/Unix/Command/_screen: fix up suggestions from Oliver  and other changes \n  
13794,     Added completion functions for cygwin\n  
13795,     correct exit code to be 0 when matches added\n  
13796,     18458: handle the prefix-needed style in _describe -o and new completion for renice\n  
13797,     18455: Screen completion function\n  
13798,     fix bug where 0 was not returned when adding a named directory as a match\n  
13799,     18450: corrections and a couple of rewordings\n  
13800,     18450: set $compcontext to -math- to complete math context within zcalc\n  
13801,     18449: complete dictionary databases and strategies  handle suffixes better and\n       handle the separate-sections style for separate databases with dict words\n  
13802,     users/6013: new gqview completion and complete  ps/ pdf files for more commands\n  
13803,     18446: handle modinfo and improvements to option handling\n  
13804,     18443: new completion for dcop\n  
13805,     unposted: rewritten compsys yo down to end of _describe function\n  
13806,     workers-18440: add previously added cygwin completion functions to the completion module\n  
13807,     Added completion functions for cygwin\n  
13808,     18435: unsetting readonly returned status 0\n  
13809,     18434: _signals option handling for pseudo-signals was broken\n  
13810,     corrections to 18433 from Oliver\n  
13811,     unposted: version 4 1 1-test-1\n  
13812,     18433: package documentation for 4 1 1\n  
13813,     18432: Minor miscellany of comments and rationalisations \n  
13814,     unposted: tidy up after word match functions from 18394\n  
13815,     c f  18407: fix short prompt in select-word-style\n  
13816,     18431: Another attempt to fix the problems with RLIMIT definitions\n  
13817,     18418: fix select test and add parameter tests\n  
13818,     Removed zgprintf from Functions/TCP/ distfiles\n  
13819,     18402\n  
13820,     Prevent  print -m  from crashing (complains about missing pattern) \n  
13821,     18394: New word movement and editing widgets \n  
13822,     18392: read with -p and -t and no coprocess crashed \n  
13823,     18391: add tests for read builtin a few glob qualifiers  17678 and 18015\n  
13824,     18390: tidy up _prcs and update _xmlsoft for latest xsltproc version\n  
13825,     18389: new for and select tests\n  
13826,     18383\n  
13827,     Fixed zjoin() when it returns an empty string that should be allocated \n  
13828,     users/5986  18380: arg support for echoti builtin \n  
13829,     18378: fix lots of problems with $killring\n  
13830,     18376: Fix headers for wchar h and some related gcc waringnings\n  
13831,     18369: update _tidy completion\n  
13832,     18359: fix bug where not enough memory was allocated if MB_LEN_MAX < 6\n  
13833,     unposted: remove unnecessary parameter declarations in _xmlsoft\n  
13834,     17659 17661: config status processes config modules\n  
13835,     unposted: remove _xrdb  better completion for xrdb is provided by _x_utils\n  
13836,     18343  18348: handle \\u and \\U escapes for specifying unicode characters\n  
13837,     18351: new completion for antiword\n  
13838,     18347: fix problems with having more than one ((val\\:desc    )) style action\n  
13839,     *** empty log message ***\n  
13840,     fix completions of locales on Linux  complete for more commands using\nexisting completions and more improvements to sccs completion\n  
13841,     18344: note in _perforce that tag-order now works \n  
13842,     unposted: remove initial capitalisation from some descriptions\n  
13843,     18338: list a single unambiguous match instead of inserting it\n  
13844,     18337: use C locale when converting floats to scalars to avoid problems in\nlocales where `   is the decimal separator\n  
13845,     18330: save output of setlocale as the pointer it returns gets clobbered\n  
13846,            handle prefix-hidden style\n  
13847,     18327: add handling for preserve-prefix to compinstall\n  
13848,     18325: options on by default weren t printed correctly by zsh/parameter\n  
13849,     18319: Philippe Troin: fix use of process groups with su and suspend\n  
13850,     18314: general improvements to ruby completion\n  
13851,     183818: memory leak in zle_params c\n  
13852,     18313: NULL pointer dereference if yank-pop after a single yank\n  
13853,     correct typo from recent change\n  
13854,     18305: new completion for python\n  
13855,     18306: fix redisplay of rprompt when line shortens\n  
13856,     18303: fix some always-true test evaluations \n  
13857,     18299: allow _next_tags to work with nested tag loops\n  
13858,     18300: handle tar s -C option better\n  
13859,     unposted: remove debug from _path_files patch in 18230\n  
13860,     18296: sync fake _all_labels and _next_label functions with changes to real ones\n  
13861,     fix out-of-date documentation for -value- completion and move description of\nspecial contexts from _complete s to #compdef s description\n  
13862,     18230: Test for explicitly matched file in _path_files \n  
13863,     18278: remove zgprintf  zformat already does this\n  
13864,     not in 18276: update Perforce completion\n  
13865,     18264: free job table entries properly in subshell\n  
13866,     18269: improve sccs file completion to handle both direct & indirect references\n  
13867,     18263: fix saving of glob state so that globs can be used from (e) glob qual\n  
13868,     18262: fix bug where only first match was added with expand style set to suffix\n  
13869,     18257: merge _xmllint and _xsltproc into _xmlsoft\n  
13870,     Doug Kearns: 18259: added more browsers and correct  urls  description to  url \n  
13871,     18257: make use of _webbrowser\n  
13872,     Doug Kearns: 18254: new completion for xmllint (from xmlsoft org s libxml2)\n  
13873,      distfiles for Functions/TCP\n  
13874,     include tcpsys stuff in  distfiles\n  
13875,     18252: pass ignoreeof as flag to zleread\n  
13876,     18251: Fix select and make it respect EOF\n  
13877,     18249: new completion function for user mode linux\n  
13878,     remove capitalisation - lowercase being our convention for descriptions\n  
13879,     18246: minor updates\n  
13880,     18242: add -d option to read for specifying delimiter to terminate input\n  
13881,     18243: Nasty tty poll fix for Solaris\n  
13882,     modified from 18236: HP-UX curses problem latest\n  
13883,     18238: bashcompinit was not being installed with --enable-function-subdirs\n  
13884,     users/5915: two levels of quoting are needed for remote files with scp\n  
13885,     18237: complete -t option to read\n  
13886,     18223: satisfy POSIX requirement for a -v flag to unset\n  
13887,     unposted: fix _perforce function names\n  
13888,     unposted: rename _p4 to _perforce\n  
13889,     18207: add maxfilelocks to ulimit output \n  
13890,     18204: KSH_ARRAYS\n  
13891,     18202: New TCP function system plus small error message change in ztcp \n  
13892,     18191: from Greg Klanderman: compctl -y didn t respect list arrangement\noptions listpacked and listrowsfirst \n  
13893,     18195: Timeouts for read builtin \n  
13894,     18086: I don t know how this got missed out   \n  
13895,     unposted: create 4 1 0-dev-7\n  
13896,     18188: Output balanced parentheses in case statements\n  
13897,     18175: Completion for Perforce\n  
13898,     18174: New read-from-minibuffer and replace-string ZLE functions\n  
13899,     unposted: config guess  config sub: update to 2003-01-10 and\n          2003-01-03 versions  respectively \n  
13900,     18131: find pcre on RedHat \n  
13901,     Doug Kearns: 18159: new completion function for HTML Tidy\n  
13902,     18149  18153: new func for emulating bash s programmable completion system\n  
13903,     18149  18153: new func for emulating bash s programmable completion system\n  
13904,     18156: use reply array instead of ali for plugins and document new styles\n  
13905,     18143 18144: assorted tweaks \n  
13906,     18143: fix some problems with  toggle  style \n  
13907,     18143: fix doc typo in compsys example \n  
13908,     18143: cooperation between copy-earlier-word and smart-insert-last-word\n  
13909,     18144: fix inconsequential typos \n  
13910,     18144: allow %  %  to put bounds around a prompt truncation \n  
13911,     18144: no SIGHUP handler if parent was ignoring \n  
13912,     18139: Improve $killring interface; can now change length   Empty\nstrings in $killring are ignored when yank-popping   Yank-popping\nis more consistent about looping and using the original cutbuffer \n  
13913,     Doug Kearns: 18141: new completion for elinks web browser\n  
13914,     zsh-users/5780: viinsert widget is really vi-insert\n  
13915,     18059: file got missed\n  
13916,     18121: add new function for completing e-mail addresses\n  
13917,     18059: allow compadd -r and -R with default space suffix\n  
13918,     18060: document zmv s -W option and add zmv completion\n  
13919,     18058: complete remote files for rcp\n  
13920,     18058: correct typo\n  
13921,     18058: allow multiple port redirections\n  
13922,     new completion functions for lsof  mt and xsltproc\n  
13923,     18015: empty math parse acts like zero\n  
13924,     18013: Handle test of (( float == 0 0)) properly\n  
13925,     17996: better formatting for print -C\n  
13926,     17994: Globbing flags with no effect could hang the shell\n  
13927,     17983: Added zle LASTSEARCJ parameter\n  
13928,     17985: fix hiding/tagging test\n  
13929,     17979: Add ERR_RETURN option \n  
13930,     17967: Quote some arguments in B02typeset ztst \n  
13931,     17961: Armin Wolfermann: add OpenBSD support in _sysctl\n  
13932,     17958: -u and -v options were missing\n  
13933,     17958: with new argument parsing  -k can be imediately followed by arg\n  
13934,     17958: update print completion for new print options in 17940\n  
13935,     17940: Add -C and -a options to print builtin\n  
13936,     17935: beautify bin_whence indentation of () and    contents \n  
13937,     17931: Philippe: restore blocking of SIGTERM in interactive shell\n  
13938,     Zvi Har El: complete also for rcsdiff\n  
13939,     17928: Zvi Har El: don t interpret escapes when setting the command buffer\n  
13940,     Thierry Vignaud: add option descriptions and missing options\n  
13941,     17861 from Philippe Troin: make signal initialisation more consistent\n  
13942,     Bart (17906): de-quote prefix when calling compfiles to remove non-exact matches (17910)\n  
13943,     17859: Philippe Troin: better handling of process groups interactively \n  
13944,     17881\n  
13945,     - Use floatsecondsgetfn() and floatsecondssetfn() inside the int* version\n  of the functions (for improved accuracy) \n- Added getrawseconds() and setrawsecodns() to allow the code to save and\n  restore the actual start time of the $SECONDS variable \n- Changed the code that was adding in the child s elapsed time into the\n  parent $SECONDS variable to just restore the raw time \n  
13946,     - Save off the raw start-time of the $SECONDS special variable if we re\n  creating a local value (avoids rounding problems with elapsed time) \n- Also changed a line where the newspecial enum was compared to 0 instead\n  of NS_NONE \n  
13947,     Compiler-warning fix \n  
13948,     Got rid of a gcc-3 2 compiler warning \n  
13949,     17873: When restoring SECONDS after a function call  included elapsed time \n  
13950,     17872: Fix `typeset SECONDS  when creating local parameter\n  
13951,     17868: Allow $SECONDS to become floating point \n  
13952,     unposted: add apt-cache showsrc part missing from 16463 \n  
13953,     17832: add a default list of filename extensions as a fallback\n  
13954,     * 17810 (Martin Waitz): Src/utils c: bung up memory leak with\n  POSIX 1e capabilities \n  
13955,     17794: fix bugs with tied parameters\n  
13956,     Changes to _store_cache to allow cache names to contain slashes  /  \n  
13957,     mention that typeset doesn t default parameters to scalar in ksh\n  
13958,     17481 (Karl Tomlinson): get/set for terminfo and termcap parameters\n  
13959,     17760  17714: two sh emulation bugs \n  
13960,     17760: Fix case-pattern parsing bug in sh emulation \n  
13961,     17714: Fix to 17357  add module dependencies even if not adding autoloads \n  
13962,     17765: add some missing apt-get options \n  
13963,     Akinori Musha: 17719: add support for the pkg_create command\n  
13964,     17692: Prevent typeset of a positional parameter before it can do damage \nand improve the error message about it \n  
13965,     17673: Fix bug with &&s and ||s in complex constructs\n  
13966,     17678: ignore initial `--  argument to printf to satisfy POSIX\n  
13967,     17682: add support for -H and -p in typeset completion\n  
13968,     17542: Thomas Stromberg: most systems don t have /etc/mtab\n  
13969,     add descriptions for keyword substitutions\n  
13970,     17629: patch from Juergen Erhard to handle ssh-keygen -f -p  &c \n  
13971,     17620: add new/missing lynx options \n  
13972,     Massive improvement of --max-procs handling; reorganize option parsing to\ndo only what s necessary for each early-bailout test; bump version number \n  
13973,     fix minor bug - -g to _files was missing despite presence of the glob\n  
13974,     17608: comment on use and abuse of BINF_SKIPINVALID\n  
13975,     pass -F option through to ssh when getting remote files for scp completion\n  
13976,     17591: new _losetup and move _modutils and _valgrind to Linux directory\n  
13977,     17607: pass on options for port no to ssh when getting remote files for scp\n  
13978,     moved to Completion/Linux/Command\n  
13979,     17591: new completion for losetup\n  
13980,     moved from Completion/Unix/Command/_modutils\n  
13981,     moved from Completion/Unix/Command/_valgrind\n  
13982,     17602  17603: Rationalise option handling  in particular for cd  pushd  popd \n  
13983,     Implement --max-procs \n  
13984,     Mention zargs \n  
13985,     Add zargs \n  
13986,     Based on users/5283: Implement xargs-like segmenting of argument list  with\na command called on each segment \n  
13987,     17590: Missing enditem() in mod_socket yo\n  
13988,     17582: Change Test for different error message\n  
13989,     17582: Improved option argument handling \nunposted: Updated version to 4 1 0-dev-6 because of interface change \n  
13990,     17577: pass classpath as an option to _java_class\n  
13991,     17573: complete new -s option to read\n  
13992,     17544: implement read -s to suppress tty echo\n  
13993,     17570: tweaks to socket module\n  
13994,     17558: zsh/net/socket module  including zsocket builtin \n  
13995,     fix typo in comment (17569)\n  
13996,     fix default completion module loading  use compctl if it hasn t been loaded already and no completion widgets have been defined (17567)\n  
13997,     complete for killall5  ifup and ifdown\n  
13998,     handle killall5\n  
13999,     complete for ifup and ifdown commands\n  
14000,     users/5266: with the call-command style parse ant -projecthelp to get targets\n  
14001,     complete also for the nail command\n  
14002,     nedit 5 3 adds a -version option\n  
14003,     Valgrind version 1 0 0 was released \n  
14004,     17558: zsh/net/socket   zsocket builtin\n  
14005,     unposted: clint prompt theme %v typo correction\n  
14006,     17535: use-perl style for _make\n  
14007,     17206 (Bruno Bonfils)  17207 (Oliver): completion for auto-apt\n  
14008,     17522: clean up a few things\n  
14009,     17522: also handle tkinfo\n  
14010,     17521: new completion for ant\n  
14011,     17518: mention www zshwiki org in meta FAQ\n  
14012,     17516  17517: Attempted fixes for memory leaks shown by valgrind \nFirst with zstyle patterns  second with pwd in job structure \n  
14013,     17509: complete  xhtml files as well as  html files \n  
14014,     17508: complete local files after file://localhost/  \n  
14015,     17507: Completion/Unix/Type/_urls: complete local files after file:///  \n  
14016,     17504: note that getopts doesn t handle a single `-  as an option argument\n  
14017,     17502: Test changes for xtrace in 17492 \n`F:  code indicates text to display in event of error \n  
14018,     17502: Test changes for xtrace in 17492 \n`F:  code indicates text to display in event of error \n  
14019,     17503: fix typos and spelling mistakes\n  
14020,     17503: fix various typos and spelling mistakes in source code comments\n  
14021,     17503: fix various typos  spelling mistakes and poor wordings in the docs\n  
14022,     17499: BSD pkg_* tools now support bzip2 d packages\n  
14023,     Unposted: fix typo in 17496 \n  
14024,     17497: getopts skipped over zero-length arguments \n  
14025,     Dan Nelson: 17492: Quote output from xtrace\n  
14026,     17496: update for new options in GNU diff 2 8 1\n  
14027,     make sure invalidatelist() isn t called hwen we are inside menu selection and there s only one match left (17489)\n  
14028,     17488: correct patch number (not 17485)\n  
14029,     17485?: Incorrect test for TYPESET_SILENT\n  
14030,     17484: fix option check and add missing\t#autoload tag\n  
14031,     17481 from Karl Tomlinson: turn off variable arrays for SGI compiler \n  
14032,     17479: fix typo noticed by Martin Pool \n  
14033,     17478: new tags for sarge \n  
14034,     17476: Matt Zimmerman s completion for GNU GLOBAL \n  
14035,     * 17459: Completion/Unix/Command/_cvs: exclude file which have\nRCS kflags for cvs add \n  
14036,     remove qword  it isn t needed anymore (17439)\n  
14037,     don t display _dispatch as one of the called functions (17438)\n  
14038,     17432: typeset test  typeset shows base for integer\n  
14039,     17414: narrow-to-region save and restore \n  
14040,     improve interactive mode when there are no matches left (alow to go back with undo) (17429)\n  
14041,     17417: remove unused fluff from datetime c\n  
14042,     17410: narrow-to-region widgets\n  
14043,     17405: adapt 17390 to reset PREDISPLAY and POSTDISPLAY when zle is entered\n  
14044,     in menu selection  use copies of comp pre suf fix to make sure they exist; fix display problem with non-empty iprefix (17403)\n  
14045,     fix for interactive mode when menu selection is called via the menu-select widget (17394)\n  
14046,     keep globbing quiet in _path_files; check if group/user exists in _chown (17393)\n  
14047,     17390: new zle parameters $PREDISPLAY  $POSTDISPLAY\n  
14048,     17391: complete files after dpkg -S \n  
14049,     17384: new recursive-edit widget \n  
14050,     add new sepcial context -assign-parameter- for completing the parameter in an assignment (17387)\n  
14051,     17357: Predefine autoloads in zsh emulation only \n  
14052,     two new modes for menu selection: incremental search and interactive (17366)\n  
14053,     17360: more lenient accept-line-and-down-history behaviour\n17361: more careful about NULL history entries in zle\n  
14054,     17350: add $CUTBUFFER and $killring zle parameters\n  
14055,     users/5073: use typeset to get function names for compdump\n  
14056,     17334: TYPESET_SILENT shell option and typeset -p option\n  
14057,     Usual  distfiles tidy-up\n  
14058,     Version 4 1 0-dev-5\n  
14059,     17318: $ (z)     added an extra space when the lexical analyser failed \n  
14060,     17304: tweak to tweak the tweaked tweak for zle -I in 17301\n  
14061,     17304: tweak to tweak the tweaked tweak for zle -I in 17301\n  
14062,     17299: Use reference counts in Eprogs so as to be able to free them as soon\nas finished with \n  
14063,     17301: improve zle -I \n  
14064,     17293: support poll() as preferred alternative to select() in zle\n  
14065,     17297: 17265 continued \n  
14066,     zselect\n  
14067,     17295: `zle -F  failed because of bad test\n  
14068,     remove builtin when tcp module is unloaded \n  
14069,     17292: shut up compiler if no OPEN_MEMSTREAM\n  
14070,     17265: make the jobs command work in subshells\n  
14071,     17285: David Wolfe <dwolfe@gforcetech com>: finally fix QNX rlimits problem\n  
14072,     don t use optimised completion list display code after the list has been erased or we re not in menu selection anymore anyway (17286)\n  
14073,     17283: Src/parse c: `func()         this bit was ignored  \n  
14074,     17273  not 17272: inner function definition could define nonsense\n  
14075,     17272: inner function definition could define nonsense\n  
14076,     17266: check `manpath` even when $MANPATH is set \n  
14077,     17253: ztcp -L gives parseable information on tcp session\n  
14078,     fix for use of (z) parameter modifier; the first word in the parameter is parsed like the first word on a command line  treating parens specially (17252)\n  
14079,     17250: dont t execsave()/execrestore() around synchronous traps\n  
14080,     17249: fix user output from ztcp\n  
14081,     add handling for the other texinfo commands (besides info)\n  
14082,     17244: don t complete udebs for dpkg -i or --unpack\n  
14083,     follow-up to 17222  make the optimisation work for some more keys again (17237)\n  
14084,     17235: strftime builtin\n  
14085,     17234: don t call _path_files with empty () \n  
14086,     17225: $=CVSIGNORE instead of $CVSIGNORE\n  
14087,     we have to disable 17219 for some keys because their code doesn t set up the variables we need (17222)\n  
14088,     17220: Src/Modules/tcp c: bugs using ztcp to list connections \n  
14089,     make re-display in menu selection faster; redraw only the previously and newly selected matches (17219)\n  
14090,     unposted: use zstyle again now when it works\n  
14091,     17125  17159 (Oliver): info completion\n  
14092,     report option arguments to _arguments in the original form (17196)\n  
14093,     for automatic long options completion  use the string after the equal signs (from the --help-text) as the description to shown when completing after the option (17214)\n  
14094,     rename max-match-length style to max-matches-width (17213)\n  
14095,     allow multiple lines in option completion lists to share the same description  for (hopefully) cleaner displays (17212)\n  
14096,     17211: respect $CVSIGNORE \n  
14097,     17201: add example use of ztcp to manual\n  
14098,     17141 plus mods: add `zle -F fd handler  feature \n  
14099,     fix for file-type-tests in nested quotes and don t count space file-type-character (17195)\n  
14100,     improve calculation of used columns for match-max-length (17194)\n  
14101,     let _init_d use a pre-pattern (17193)\n  
14102,     fix for completion in nested quotes where the sub-word ends in a backslash (17192)\n  
14103,     fix removal of automatically added specs (from the -- option) for which a user-defined one is present (17191)\n  
14104,     avoid printing in the last screen column when preparing a completion listing with compdescribe (17190)\n  
14105,     better splitting of -g-strings; this failed when patterns contained spaces (17189)\n  
14106,     (17021) Added _valgrind  completion function for Julian Seward s Linux-based memory checking tool \n  
14107,     Added _larch \n  
14108,     Function for Tom Lord s arch SCM tool   It still has many problems \nbut seems to be the fullest larch completion function so far \n  
14109,     17175: Src/math c: didn t handle parameters before a ternary expression\nproperly \n  
14110,     17171: Src/Modules/tcp c: ztcp didn t return failure\nwhen a connect() failed \n  
14111,     17166: Src/Modules/zftp c: check fileno of zftp control\nconnection before closing  not after\n  
14112,     follow-up to 17135  backslash-quoted backslashes in double quotes weren t right  yet (17163)\n  
14113,     17162: Src/Modules/tcp c: prevent warning on\ngethostbyaddr() arguments \n  
14114,     17161: Src/Modules/tcp c: length parameter to accept()\nwasn t initialised  causing random failures \n  
14115,     fix for _arguments: don t use argument-tag when completing options; fix for _services: leave loop when matches were produced (17148)\n  
14116,     allow users to give the maximum number of display-columns the matches should take up via the style currently named max-match-length (17147)\n  
14117,     fix doc for _describe  mention -t option (17146)\n  
14118,     17120  17121: Src/init c: work around problem with NIS tying up file\ndescriptors \n  
14119,     fix for unquoting with `compset -q  with singly and doubly quoted strings (17135)\n  
14120,     Doc/Makefile in: back out unintended changes\n  
14121,     typo correction\n  
14122,     unposted: fix context name; do not set style by default until it works\n  
14123,     users/4951: make ulimit documentation clearer\n  
14124,     17102: looking up TCP sessions by fd returned the wrong pointer\n  
14125,     17097: closing all TCP sessions referenced freed memory \n  
14126,     Typo in ChangeLog\n  
14127,     17095: Bug in setting associative array; remove unused counter\n  
14128,     17081: New zselect module and documentation \n  
14129,     17075  17076: _urpmi and chkconfig/services\n  
14130,     17080: tag-order style usage\n  
14131,     17074: mondoarchive completion\n  
14132,     unposted: add autom4te cache to  cvsignore (autoconf-2 53?)\n  
14133,     Assorted previously-uncommitted patches (16613  16032  doc tweak) \n  
14134,     Detect variant tgetent() return value and test for it correctly \n  
14135,     Split tokenize() into shtokenize() and zshtokenize()\nto improve SH_GLOB handling  particularly in completion\n  
14136,     Explain the effect of unreadable directories  etc   on the CORRECT option\n  
14137,     fix _arguments  -s option (17078)\n  
14138,     17072: fix pushdminus handling in completion after directory stack references\n  
14139,     17057: completion for debfoster\n  
14140,     17055: shared object linkage on the Hurd \n  
14141,     unposted: add missing bracket in _spamassassin \n  
14142,     17046: Src/math c: OCTAL_ZEROES with a `0  on its own was\n\tswallowing up too many characters \n  
14143,     users/4865: Completion/compinit: need to add NO_octalzeroes to\n$_comp_options \n  
14144,     17044: complete all files for w3m  not just * html \n  
14145,     ChangeLog for 17040  17041\n  
14146,     17040: Src/Modules/tcp c: AF_INET6 wasn t copied into the\nsocket structure for IPv6 \n17041: Src/Modules/zftp c: Minor but fatal typos creating a data\nconnection for zftp using IPv6 \n  
14147,     remove one half of 17029; the part for zstyle wasn t right (17035)\n  
14148,     fix two memory leaks (found by Felix): pre-compiled patterns when re-defining styles and compredirs-copies in comp_wrapper() (17029)\n  
14149,     users/4851: Add Functions/Misc/relative \n  
14150,     Add  relative  \n  
14151,     users/4851: Convert a full path to a path relative to a directory \n  
14152,     Stupid typo -- :? should be ?:\n  
14153,     17011: Src/Modules/tcp c  Src/Modules/zftp c: restore\nfreehostent() incorrectly removed in 16172 \n  
14154,     Diff by article number  not just by attribution line \n  
14155,     Alexandre Duret-Lutz: 16930: Src/cond c  Test/C02cond ztst:\nCareful with long filenames in internal condition test; fix block\nfile test for `-f  \n  
14156,     Differentiate the two patches from 16703 \n  
14157,     make compvalues unquote the string from the line like comparguments does (16998)\n  
14158,     Modified _java to use _java_class \n  
14159,     make _path_files use match specs from the matcher style when calling compfiles (users/4836)\n  
14160,     make _values not use -Q (16991)\n  
14161,     treat backslashed bangs in double quotes specially in get_comp_string()  they are more like $s there (16990)\n  
14162,     make more calls to _message use the -e option (16988)\n  
14163,     16973: complete package name argument to apt-cache policy \n  
14164,     16972: complete for aaaa  zone  mx  soa  txt \n  
14165,     16955: _java_class\n  
14166,     New _java_class to find classes on the classpath \n  
14167,     16942: Allow zero-length matches in parameter substitutions \n  
14168,     16935: update options completed for ssh and add sftp completion\n  
14169,     name tweak\n  
14170,     16934: complete ssh -1 as well as ssh -2 \n  
14171,     add original string as match (like in _approximate)\n  
14172,     16933: more sophisticated versions of these functions\n  
14173,     16923: add insert style for inserting matches instead of adding them as a match\n  
14174,     16927 + a usage-message fix \n  
14175,     + Added -W to auto-convert wildcards in both the find and replace strings \n+ Fixed the usage message to output the  $  args and  \\  characters (they\n  were getting eaten) \n  
14176,     16895: cross-references to the `|&  and `>(   )  syntax \n  
14177,     16913: fix completion after compdef -a and correct typos\n  
14178,     John Beppu: 16866: new completion for figlet\n  
14179,     alter _generic example to be more robust\n  
14180,     16890\n  
14181,     Made SAVEHIST a special parameter \n  
14182,     Added  savehistsiz  (for the new SAVEHIST special parameter)  and used it\nin place of getiparam( SAVEHIST ) \n  
14183,     Got rid of unused-variable compiler warning \n  
14184,     16879: Functions/Zle/up-line-or-beginning-search \nFunctions/Zle/down-line-or-beginning-search \nDoc/Zsh/contrib yo: originally by Bart --- widgets which\ncombine up-line-or-search and history-beginning-search-backward\nbehaviour \n  
14185,     handle dot files and directories too\n  
14186,     16864: fix remote file completion with relative paths\n  
14187,     correct my mistake which broke file completion after grep\n  
14188,     arg to -C option must be in the same word\n  
14189,     16862: allow print s -s and -z options to be used with -f\n  
14190,     16850: remote file completion via rsync and ssh  plus all options valid in rsync 2 5 2 \n  
14191,     16849: shift off `-s  argument \n  
14192,     Add missing close-paren\n  
14193,     16847: complete multiple -j s after cvs update \n  
14194,     16846: complete xdvi  dvi gz and  dvi bz2 too \n  
14195,     16820: change tests to match 16759 \n  
14196,     16842: resolve name clash for nc between netcat and the nedit client for\ncompletion and add _pick_variant to resolve program variants in general\n  
14197,     16838: complete new options of grep 2 5 and value for GREP_OPTIONS parameter\n  
14198,     correct typo in Changelog\n  
14199,     16823: complete for values of GZIP and any *PATH or *path parameters\n  
14200,     16821+16831: _gzip  _compress  _bzip2 complete after redirections\n  
14201,     remove that -T option to compdef again and instead use comma-separated sub-contexts both for function and style lookup (16819)\n  
14202,     16804: completion for sccs\n  
14203,     16803: option descriptions\n  
14204,     16789: completion for netcat\n  
14205,     document the impossibility of timing builtins\n  
14206,     Fix parsing of binary infix operators of test builtin \n  
14207,     Stop mentioning long-dead globbing bug \n  
14208,     16779: Completion/Unix/Command/_mysqldiff \nCompletion/Unix/Command/ distfiles: new completion for my mysqldiff\nutility \n  
14209,     16778: completion by Istvan Sebestyen for irssi \n  
14210,     don t try to build the redirection string for the loops (for  foreach  select) (16776)\n  
14211,     make zrecompile show the error messages from zcompile unless the -q option is given (16774)\n  
14212,     16769: Completion/Unix/Command/_gcc: fix typo\n  
14213,     unposted: usual fixups for  distfiles\n  
14214,     unposted: Config/version mk: 4 1 0-dev-4\n  
14215,     16767: Src/Zle/zle_hist c  Doc/Zsh/zle yo  Doc/Zsh/contrib yo \nFunctions/Zle/copy-earlier-word:  Enhance insert-last-word to\npick different lines from the history (including the current\nline) and different words from that line   Add copy-earlier-word\nas suggested by Dominik Vogt to copy words from either the\ncurrent line  or (following an insert-last-word) a previous\nhistory line \n  
14216,     16759: Src/builtin c: from Eric Norum <eric norum@usask ca>:\ncd prints output whenever the target directory is not obvious\nto the user   This confuses scripts  so restrict it to\ninteractive mode \n  
14217,     allow different sets of completion definitions selected with option -T to compdef; use this for parameter values and redirections (16755)\n  
14218,     add $redirections array to completion system parameters  containing information about all redirections on the line; make this and compstate[redirect  contain the file descriptor number (16751)\n  
14219,     16748: Fix infinite loop introduced by 16464 \n  
14220,     allow nterruption of empty while-loops with ^C (16711)\n  
14221,     make _message inhibit insertion of matches unless there are faked ones (16710)\n  
14222,     make _guard use `_mesage -e ; make `_message -e  use $curtag as a default; change uses of _guard (16708)\n  
14223,     16703\n  
14224,     Improved the output of the  history  command with a 1-line history buffer \nand also improved the error handling of explicitly-specified first/last\nvalues \n  
14225,     In putoldhistentryontop()  ensure that we can\ t return with  next  set to\nthe value we just put on top \n  
14226,     16620  16697: add a and n parameter expansion flags\n  
14227,     16689: list some things to do \n  
14228,     16688: clarify the pseudo-randomness of RANDOM \n  
14229,     Fix sed expression to correctly extract option names from ~/ pinerc file \n  
14230,     16678\n  
14231,     Yet another fix for prepnexthistent() \n  
14232,     16619  16676: add -c  -l and -p options to the dirs builtin\n  
14233,     16673: add langinfo module as an interface to locale information \n  
14234,     unposted: METAFAQ distribution sites fixup\n  
14235,     Remove: France      ftp cenatls cena dgac fr\nAdd:    Netherlands ftp demon nl (Phil Pennock <pdp@nl demon net>)\n  
14236,     16635: make sure we display lists in singlelinezle mode\n  
14237,     16672\n  
14238,     Fixed a just-introduced bug in prepnexthistent() when curline is in\nthe list \n  
14239,     allow an argument containing only a single colon as a separator between options to _arguments and specs (16669)\n  
14240,     fix group handling nothing should now possibly be added to the wrong group again (16668)\n  
14241,     fix test for prefix-needed (16667)\n  
14242,     16662: use parameter expansion instead of grep  sed  and seq \n  
14243,     users/4678\n  
14244,     When savehistfile() rewrites the history file  there was a potential for\nlosing the entire history file if we couldn t lock the file for reading\n(it timed out) but we could lock the file for write (and wrote nothing) \n  
14245,     16625\n  
14246,     Optimized putoldhistentryontop() so that when resizehistents() calls it\nrepeatedly while HIST_EXPIRE_DUPS_FIRST is set  it doesn t re-scan the\nalready-checked hist items (avoiding potentially slow operation) \n  
14247,     16618\n  
14248,     Gergely Nagy  16644: completion for cdcd \n  
14249,     unposted: METAFAQ distribution sites fixup\n  
14250,     Changed: uiarchive uiuc edu path\n  
14251,     Remove: Australia ftp ips gov au\n        Italy     ftp unina it\n        Japan     ftp nisiq net\n        USA   FTP foad org\nAdd:    Japan     ftp ayamura org (Ayamura Kikuchi <ayamura@ayamura org>)\n        Korea     linux sarang net (<mirror@linux sarang net>)\n        USA  HTTP zsh disillusion org (Guido Fortunati <zuez@disillusion org>)\n  
14252,     Improved resizehistents() so that it honors HISTEXPIREDUPSFIRST \n  
14253,     Two unposted tweaks \n  
14254,     Silenced a compiler warning \n  
14255,     The minimum size of histsiz (aka HISTSIZE) should be 1  not 2 \n  
14256,     Add a special-dirs example \n  
14257,     add -x option (to be passed on to compadd) to _description and friends; make _message respect any -[12VJ  options it gets  adding the message to that group (16609)\n  
14258,     unposted: improve apm and screen handling\n  
14259,     16590: use a prefix match instead of a  fuzzy-exact  match \n  
14260,     fix for displaying matches in groups via _describe; go back to displaying one match per line when lines get too long (16582)\n  
14261,     unposted: Colin Walters s prompt  adapted for the theme system\n  
14262,     16577: don t return a single dot as the path head of a slash \n  
14263,     16568: get listing of entire directory for approximation and other purposes \n  
14264,     16566: show ls -F classifiers as display strings \n  
14265,     16556: No error on `print >&-  \n  
14266,     16555: add | to bracket expression  2>/dev/null\n  
14267,     16553: differentiate between files and directories during remote scp completion \n  
14268,     Fixed some problems with _cvs and flags   Fixed _perl to complete a script\nargs with _normal \n  
14269,     16540: short options and local files\n  
14270,     Akinori Musha: 16534: a few bug fixes and some wording fixes\n  
14271,     use RPS2 to put states on the right\n  
14272,     16494: extract outermost words with negative arguments to %_ and add %^\n  
14273,     16493: correct typos\n  
14274,     16492: add RPROMPT2 variable for right prompts in multi-line commands\n  
14275,     * 16527: Src/Zle/zle_refresh c: Don t lose the rprompt when\nclearing an otherwise-blank line \n  
14276,     fixlet to avoid an empty string in an array; cause completion after cd without any matches to not report that there were no matches (16515)\n  
14277,     16514: initscript completion fixes\n  
14278,     slight improvement for 16500 to allow completion after  /<TAB> in all cases (16507)\n  
14279,     16503: warn on fclose or fflush errors in bin_print \n  
14280,     16500: don\ t complete executable files in the current directory if     is not in path \n  
14281,     16419 (_arguments syntax doc)  16435 (hash crash) \n  
14282,     16419: Improve _arguments syntax summary \n  
14283,     16435: Fix core dump in `hash  \n  
14284,     16489: Test/C01arith ztst: default output for whole numbers\nas floats now has `   at the end  c f  16423 \n  
14285,     16487: Src/glob c: bug in 16486 when a qualifier in a set\nconsisted only of flags which were handled globally \n  
14286,     16486: Doc/Zsh/expn yo  Src/glob c  Src/pattern c:  support\n(#q   ) EXTENDED_GLOB syntax for qualifiers   May be chained \nignored by pattern matching code \n  
14287,     add new generic fake style and changes to the C-code for that (different implementation of compadd -x) (16483)\n  
14288,     allow arguments to be given to functions used by compdef (actually  the strings are eval uated  so this should be powerful enough) (16472)\n  
14289,     *** empty log message ***\n  
14290,     use pager style instead of $EDITOR and fix bad substitution in exclusion lists\n  
14291,     unposted: remove ansi2knr from distfiles\n  
14292,     16463: apt-cache showsrc completion\n  
14293,     16461: a number of minor completion function updates\n  
14294,     16449: new chkconfig completion for both the RedHat and IRIX commands\n  
14295,     16448: math assignment bug introduced by 15291  15292\n  
14296,     16443: fix urpmi addmedia --distrib; set cache policy just once\n  
14297,     16437: changes for new urpi in cooker\n  
14298,     allow manual pages to be shown separated by section with new separate-sections style (16426)\n  
14299,     16423: append a `   to converted floating point output\nto stop it looking like an integer\n  
14300,     16422: zcalc non-default base output\n  
14301,     fix completion after var+= to use value context (16418)\n  
14302,     don t report _arguments-specs more than once (not even shared options with multiple sets) (16417)\n  
14303,     make sure auto menu isn t started accidentially when bashautolist is set (16408)\n  
14304,     fix nested _tags-loops by re-initialising the outer one when leaving the inner one (16407)\n  
14305,     fixes for completion of signal names with SIG prefix and for completing command names instead of pids (16406)\n  
14306,     Log entries for 15746  users/4483  16400 \n  
14307,     16400  16401: preserve empty words that result from brace expansion \n  
14308,     users/4483: with  cvs add  et al   complete names of locally removed (but\nnot committed) files \n  
14309,     15746: remove (with #if) an incorrect optimization in the maildir version\nof mailstat() \n  
14310,     Remarks on the  exec  builtin with redirection using the close-on-exec flag\non descriptors \n  
14311,     16398: updated zstyle completion and related cleanup\n  
14312,     16397: use nul instead of colon to avoid problems with _value: functions\n  
14313,     16396: fix argument handling bugs\n  
14314,     16393: completion for Christoph Martin s apt-show-versions script \n  
14315,     users/4561: fix code for finding the zipfile s name in the current command-line\n  
14316,     16384: new completion for xli/xloadimage and factor out completion of X visuals\n  
14317,     16375: command completion for fsh\n  
14318,     16372: allow signal names to be prefixed by `SIG  with kill builtin and fix\nproblem with no argument to kill -n and -s options\n  
14319,     16332: removal of Src/ansi2knr c and adjustment of build process\n  
14320,     16332: remove ansi2knr c from our repository due to licence\ndifferences   Adjust the build process accordingly   configure\nwill now abort if the user requests ansi2knr but no ansi2knr\nis available   ansi2knr is available from the main distribution\nsite and most mirrors\n  
14321,     add missing description argument in _values calls (16366)\n  
14322,     new ifconfig completion (16366)\n  
14323,     16364: further to 16351  except specials from having their value cleared\n  
14324,     small fix to += code from 16353\n  
14325,     unposted: back out idiotic patch\n  
14326,     unposted: initialize save to NULL to avoid compiler warning \n  
14327,     16361: include <stdio h> to avoid implicit declarations \n  
14328,     16352: allow output formats to be specified in zcalc\n  
14329,     16353: add += parameter assignments\n  
14330,     16357: change (n) to (u) so (n) can be reserved   for numeric sorting \n  
14331,     fix bug in parameter unset code that caused seg fault (16351)\n  
14332,     16349: completion for make-kpkg\n  
14333,     ref 16347: tweaks\n  
14334,     16346: docs for (n) flag \n  
14335,     16345: (n) flag to remove duplicate array values during expansion \n  
14336,     unposted: get rid of evil -Wno-implicit in CFLAGS\n  
14337,     16336: use apt-cache --generate pkgnames instead of dumpavail\n  
14338,     16335: apt-cache -g  --all-names  --recurse  pkgnames  dotty  policy completions\n  
14339,     allow tag-order to select order of files and urls (16323)\n  
14340,     allow tag-order to select order of files and urls (16330)\n  
14341,     16327: glob for udebs as well as debs\n  
14342,     16326: completion for mozilla  some more web browsers in webbrowser\n  
14343,     16325: update for wget 1 8\n  
14344,     new mtools completion\n  
14345,     16320: factor out file system completion to new function\n  
14346,     16315: completion for spamassassin\n  
14347,     * 16310: Functions/Misc/zcalc  Doc/Zsh/contrib yo: separate zcalc\nhistory  handle errors in expression  document -#base option \n  
14348,     users/4503: don t complete source or header files after gcc -o\n  
14349,     users/4519: complete files in all argument positions for zip (bug fix)\n  
14350,     16293: completion for arping\n  
14351,     16292: completion for rsync\n  
14352,     16269: Fix crash on reserved-word completion \n  
14353,     16291: Gergely Nagy: check ~/ dupload conf  tweak sed expression to handle hooks \n  
14354,     16249: Clear here-documents on parse error \n  
14355,     16264: don t use grep and sed in _dput\n  
14356,     Fix typo in _urpmi for urpmi addmedia\n  
14357,     unposted: typo fix\n  
14358,     16257: completion for dput from Tollef Fog Heen <tollef@add no>\n  
14359,     unposted: version 4 1 0-dev-3 with associated  distfiles tidying\n  
14360,     16254: complete map names after ypmatch\n16255: options for default output base for zcalc\n  
14361,     Add Mandrake completion directory to install\n  
14362,     16241: new rand48(param) math function\n  
14363,     16247: Mandrake _urpmi completion\n  
14364,     16228: allow widths and precisions to work with printf s %b format specifier\n  
14365,     fix for IRIX\n  
14366,     16224: add -n option to kill and complete options from _kill\n  
14367,     16094 16158 16201 16215 (see log entries)\n  
14368,     16094: zopenmax() need only return the highest-numbered open descriptor\n  
14369,     16201: introduce the PM_NAMEDDIR flag\n  
14370,     16158: interpret TAB as  yes  only in spckword()\n16201: introduce the PM_NAMEDDIR flag\n  
14371,     16215: save and restore mult_isarr in singsub()\n  
14372,     16198: add %j prompt expansion and j test character for no  of jobs in prompt\n  
14373,     16177: also look in /usr/lib/locale/TZ for time zones\n  
14374,     16197: `limit  accepts `unlimited  \n  
14375,     16184\n  
14376,     Improved readhistline() to reject binary data better  (16184)\n  
14377,     16176: Src/Modules/tcp c  Src/Modules/zftp c: after fdclose() \nTCP control fd is no longer valid  but we still need to remove\nthe session cleanly \n  
14378,     16174: complete value of $TZ\n  
14379,     16172: freehostent -> zfreehostent to avoid name clash\n  
14380,     15793: Src/Modules/zftp c: require zsh/net/tcp explicitly \n15171: Doc/Zsh/zftpsys yo: minor changes of phrasing\n  
14381,     16145: try to handle identical RLIMIT_RSS and RLIMIT_VMEM better \n  
14382,     Fix for texi2html 1 64\n  
14383,     16063: add transientrprompt option\n  
14384,     16063: add transientrprompt option to remove right prompt from\ndisplay when accepting commands\n  
14385,     Fix infinite loop on `case  with xtrace \n  
14386,     zero %n value when reusing printf format (16122)\n  
14387,     Pavel Roskin <proski@gnu org>: compilation for QNX\n  
14388,     Report error on setting a limit to a string that os not a decimal number \n  
14389,     16092: Completion/Unix/Command/_mysql_utils: don t override settings in ~/ my cnf\n  
14390,     Fix segfault in checkrmall() \n  
14391,     fix: make _describe handle (   ) arguments correctly; use _file_descriptors after -t in conditions; don t display empty descriptions in _file_descriptors (16085)\n  
14392,     allow arguments to be specified in printf format specifications (16080)\n  
14393,     16078: zip -r\n  
14394,     Perl script for diffing ChangeLog files \n  
14395,     don t use _comp_ignore while building paths  only at end (16076)\n  
14396,     add sourceforge to metafaq\n  
14397,     fix return code and tests of printf and comment above bslashquote func (16064)\n  
14398,     16062: use O_EXCL when opening a temporary file \n  
14399,     16059\n  
14400,     Fix HIST_NO_SPACE when INTERACTIVE_COMMENTS is set and we get a\ncomment \n  
14401,     use arithmetic evaluation for numeric arguments to printf (16042)\n  
14402,     for caching of compiled patterns: remember that singsub() might modify the string it gets  compare with unmodified string (16041)\n  
14403,     Remove <arpa/telnet h> from tcp c \n  
14404,     Fix typos \n  
14405,     Save/restore state around DEBUG trap call \n  
14406,     use expanded paths (expand style with value prefix) only when we are at the last matcher spec (16002)\n  
14407,     16006: use styles for mail directory  pine directory  and muttrc \n  
14408,     16005: Completion/Unix/Command/_mount: check /etc/filesystems under Linux \n  
14409,     enable dynamic libraries on MacOS X is the dlcompat library is installed\n  
14410,     16000: completion for debchange(dch)\n  
14411,     change file completion default to offer globbed files and directories on first try (15995)\n  
14412,     15994: Completion/compinstall: handle list-suffixes; make prompts at end of\nfunction more transparent \n  
14413,     hide all but one match with the same string in the list even for unsorted groups (15991)\n  
14414,     remove duplicated includes which caused problems on IRIX 5 (15987)\n  
14415,     update _wget for v1 7  _sysctl for darwin  _webbrowser for galeon etc (15983)\n  
14416,     zcalc base display fix\n  
14417,     Insert missing single quote \n  
14418,     Minor wording change \n  
14419,     add print -f option  %n format specifier and tests for print/printf (15973)\n  
14420,     forgot this\n  
14421,     15931: EXIT traps from exit in subshell; 15965: glob -> zglob\n  
14422,     15964: use SOCKLEN_T\n  
14423,     Norbert Koch: 15954: fix variable name inconsistency\n  
14424,     expand style in compinstall\n  
14425,     add printf builtin (15851  15948)\n  
14426,     fix calculation of number of columns needed with list_packed (15946)\n  
14427,     make _cd use only one call to _alternative  including completions from _tilde (using the named-directories tag) (15945)\n  
14428,     make expand style (file completion) work again; no more special behaviour with menu completion; try to make docs clearer (15944)\n  
14429,     unposted: note typo change in Doc/Zsh/options yo\n  
14430,     s/AUTO_CONT/AUTO_CONTINUE/\n  
14431,     15941: complete reiserfs mount options \n  
14432,     15940: complete -o utf8 for mount -t vfat \n  
14433,     15939: complete xfs mount options (for Linux) \n  
14434,     15938: complete ext3 mount options\n  
14435,     15919: use LinkLists in place of somewhat equivalent code\n  
14436,     test EXIT trap fix\n  
14437,     15915: completion for bts script\n  
14438,     Zftp control connection management cleanup \n  
14439,     Module dependencies for unloading in tests \n  
14440,     fix build and test problems in Mac OS X (15882)\n  
14441,     15886: use select if poll is not available  or complain if neither are available\n  
14442,      distfiles fixes for 4 1 0-dev-2\n  
14443,     Version 4 1 0-dev-2\n  
14444,     Equivalence of $(   ) and `   ` in $ (e)     \n  
14445,     15869\n  
14446,     job text building code couldn t handle empty sublists (as in `coproc || test ) (15868)\n  
14447,     job text building code couldn t handle empty sublists (as in `coproc || test ) (15868)\n  
14448,     Fix ancient `print -z  doc bug \n  
14449,     15866: complete v2 ciphers after -o Ciphers=  protocols after -o Protocol=\n  
14450,     Document side-effects of TERM assignment \n  
14451,     Fix out-of-memory on corrupt history files \n  
14452,     * Src/builtin c  Src/exec c: Unwind function calls before exiting\nshell from exit command to allow EXIT traps to run \n  
14453,     tetris game for ZLE\n  
14454,     Fix misleading error message \n  
14455,     fix LDFLAGS value after test for RTLD_GLOBAL\n  
14456,     15836\n  
14457,     Further modify the  fc -l  code to tolerate out-of range values \n  
14458,     15837\n  
14459,     Fixed doisearch() to not switch lines unless zlereadflags has\nZLRF_HISTORY set \n  
14460,     Akinori MUSHA: Improved BSD package completion \n  
14461,     ZLE doc xref to BAUD  fix doc build error \n  
14462,     Fix typos in a log entry \n  
14463,     15809\n  
14464,     With HIST_NO_STORE  don t ignore what looks like a history command if\nwe re really going to call a user-defined shell function \n  
14465,     15806\n  
14466,     David Lebel: Shared object linkage on OpenBSD \n  
14467,     + Changed addhistnum() to return firsthist()-1 or curhist+1 on error \n+ Ignore the  r  command if HIST_NO_STORE is set \n  
14468,     + Changed fclist() to not not transform  fc -l 0 0  into  fc -l 1 1  \n+ Changed fcgetcomm() to handle new error return from addhistnum() \n  
14469,     update URL references to    sunsite dk/ (15792)\n  
14470,     new completion for samba tools (15781)\n  
14471,     complete new [:ascii:  character class\n  
14472,     15783: document ztcp builtin\n  
14473,     15780: rename **arg to **dargs\n  
14474,     15779: ztcp -d\n  
14475,     stupid bugfixes\n  
14476,     unposted: stupid -a bug\n  
14477,     This isn t my day for the article numbers \n  
14478,     15771: ztcp -t\n  
14479,     15769: ztcp -a\n  
14480,     1576x: take service names  stuff fd numbers into $REPLY\n  
14481,     15766: ztcp -l\n  
14482,     15765: introduce [:ascii:  class\n  
14483,     1596x: ztcp -v\n  
14484,     15762: introduce ztcp builtin\n  
14485,     15740: tolerate /usr/local directories in $fpath on Debian where root:staff 2755 \n  
14486,     15739: use getent instead of /etc/group if possible\n  
14487,     15734: zle -K option to select a keymap  and zle KEYMAP parameter to\nexamine the current selection \n  
14488,     handle zsh options in _sh\n  
14489,     zmv fixes\n  
14490,     handle possible NULL pointer returned from bufferwords() (15717)\n  
14491,     15713\n  
14492,     Added package-specification options to --verify \n  
14493,     Fix PS2 for dquote nested in braceparam \n  
14494,     Remark about array-ness of ksh parameters \n  
14495,     Parameter expansion doc mop-up \n  
14496,     Fix crash on re-entry to loop() from preprompt() \n  
14497,     test if hash table pointer is NULL to avoid SEGV with compstate=() (15705)\n  
14498,     15683: completion for links(1)\n  
14499,     Assorted minor test tweaks \n  
14500,     Don t treat numbers as cd-able vars \n  
14501,     Change one var() to tt() \n  
14502,     15675: Src/Builtins/rlimits awk: handle case where RLIM_NLIMITS is set to a number within an enum \n  
14503,     Better handling of manual section numbers \n  
14504,     undo most of 15650  do that in shell code (15669)\n  
14505,     After clarification from D  Korn  remove incorrect remark about autoloading \n  
14506,     Fix exit status of zsh -fc  ! command \n  
14507,     unposted: Functions/Prompts/prompt_adam2_setup: eliminate\nhorrible inefficiencies resulting from avoidable fork()s\n  
14508,     make insert-tab really default to `true  (15653)\n  
14509,     15650\n  
14510,     Fix problem with output bases in zcalc\n  
14511,     15639\n  
14512,     15638\n  
14513,     15621: display of status line was being mucked up; also fix\ncontinuation markers  <      and  <    > \nunposted: fix possible seg fault on a screen height shrink\n  
14514,     Don t segv if we were displaying  n  lines and screen was\nresized to less than  n  lines\n  
14515,     15621: display of status line was being mucked up; continuation\nmarkers  <      and  <    >  weren\ t being display properly\n  
14516,     unposted: Mention the word `greedy  in the docs for the S flag  to\nmake it easier to find for those used to Perl-speak \n  
14517,     unposted: Add missing docs for cache-policy style \n  
14518,     15630: update caching policy for newer versions of rpm \n  
14519,     Add note about kshautoload behavior \n  
14520,     15629: unzip -Z should behave just as zipinfo does\n  
14521,     Adjust test for new typeset restrictions \n  
14522,     Fix and regression tests for crash on typeset of local array elements \n  
14523,     -[12n  options don t get arguments (15615)\n  
14524,     Peter Breitenlohner: Minor tweaks to some make targets \n  
14525,     add exclusion lists to _dd and check for redhat/mandrake in _user_admin\n  
14526,     Mention positional parameter issue \n  
14527,     15596 with an unposted tweak to the computil c change \n  
14528,     Silence  might be used uninitialized  warnings \n  
14529,     Got rid of unused variables \n  
14530,     Silence  might be used uninitialized  warning \n  
14531,     follow-up to 15588; add -w option to _values (look at all words); change _dd back (15597)\n  
14532,     users/4092\n  
14533,     When rewriting the history file  set histactive to 0 and restore it\nwhen we re done   This prevents the loss of the file s last line\nwhen a signal causes us to rewrite it   Also restore the value of\nhistsiz \n  
14534,     use _x_display when setting $DISPLAY and fix bug in enable completion (15594)\n  
14535,     corrections only\n  
14536,     Mention FPATH semantics \n  
14537,     A list of  standard shell features  that will require changes to zsh\nbehavior for compatibility \n  
14538,     do not complete aliases in equals expansion any more (15590)\n  
14539,     make _dd not use already used specs; fix for selecting stuff to complete in _describe; fix for correction and _describe with grouped lists (15588)\n  
14540,     15586: remove =alias expansion  leaving only =cmd \n  
14541,     15585: bash-style up- and down-case words\n  
14542,     15583: ignore CVS directories for a all function installations\n  
14543,     increment zwc fie version (which means changing the magic number) (15584)\n  
14544,     correct mistake with 15574\n  
14545,     correction (unposted)\n  
14546,     share descriptions for long/short opts in more completions and other changes\n  
14547,     new BSD completion and fix _chown for symlinks\n  
14548,     15551: complete presumably compressed files for gzip -t and -l\n  
14549,     fix for changed listing layout (15549)\n  
14550,     (15526)\n  
14551,     15511: zcalc tweaks\n  
14552,     (15509)\n  
14553,     15507: new zcalc function\n15508: cvs tag didn t complete tags despite it s claim \n  
14554,     fix posixbuiltins test to allow for an external `print  command (15503)\n  
14555,     15498: zle doc fix\n  
14556,     Fix typo \n  
14557,     More index entry etc  cleanup \n  
14558,     move pattern matching in the loop to make sure all match specs are used (15487)\n  
14559,     some more places where list-separator should be used (15485)\n  
14560,     another fix for 15477 (separator strings); add list-separator style (15484)\n  
14561,     fixlet for 15477  don t let it remove consecutive dummy matches (15482)\n  
14562,     make display for groups in _describe nicer; improve packing with list_packed; leave space for type character (list_types) only in groups with at least one file name (15477)\n  
14563,     remove nulargs in here strings (15470)\n  
14564,     Fix errors introduced by 15354 \n  
14565,     improve user/host completion before a @ (15468)\n  
14566,     15432: New bash-transpose-words widget\n  
14567,     don t use compsuffix when it might be freed; use the right variable in that loop there  dammit (15433)\n  
14568,     yet another followup to 15497; make _describe filter out non-matching strings before calling compdescribe  otherwise some matches will be hiddens (15415)\n  
14569,     fix for 15407; there may be sets without matches (15409)\n  
14570,     add list-grouped option to make options and such be grouped together if they have the same description; matches with line-display strings can be hidden; hi and du capabalities in complist are only used if set by the user (15407)\n  
14571,     add support for -R option (15402)\n  
14572,     use colon separator for BSD (15393)\n  
14573,     add preserve-prefix style to keep pathname prefix unchanged (15400)\n  
14574,     accidentally committed 15278\n  
14575,     15390: Cygwin support\n  
14576,     make _files not use its own description if there is one from a calling function; improve -P-prefix handling in _path_files (15389)\n  
14577,     Explain the effect of CORRECT on HASH_CMDS et al \n  
14578,     (15357)\n  
14579,     Better indexing and misc  cleanup in the first tenth or so of the doc \n  
14580,     remove not only numeric suffixes  but also ` n  and the like (15352)\n  
14581,     15334: use string  (eval)  as script name in debugging messages in eval\ s\n  
14582,     4 1 0-dev-1\n  
14583,     15329: test script changes to go with 15327 LINENO change\n  
14584,     Fix function stack unwinding on autoload failures \n  
14585,     15327: always use local LINENOs in parse_string() \n  
14586,     15304 15305 15308\n  
14587,     Fix infinite loop on `r OLD=NEW  when OLD is the empty string \n  
14588,     Suppress XTRACE during user-defined widgets \n  
14589,     Don t always coerce to float when assigning to an unset parameter \n  
14590,     15291  15292: fix bug setting scalar in math mode\n  
14591,     15250: still run setup even if pcre functions are unavailable\n  
14592,     15279: $ (S)   %%     etc  doc; 15288: bash word functions + doc\n  
14593,     add exclusion lists and use _multi_parts for sysctl completion on BSD (15252)\n  
14594,     (15283)\n  
14595,     15265: Src/parse c: correction problems with new `for  syntax\n  
14596,     15277: Src/glob c: real backreferencing bug with $ (S)   %%    \n  
14597,     back out 15266\n  
14598,     Avoid static link of pcre module \n  
14599,     15266: fix for $ (S)   %%    \n  
14600,     15264: improved doc for variant complex commands\n  
14601,     15261: remaining easy option tests\n  
14602,     15253 : hash foo together with foo exe on Cygwin\n  
14603,     15242: pcre_match -a and $match instead of pparams\n  
14604,     Remove extraneous comma \n  
14605,     15234: describe behavior added by 15228 \n  
14606,     15228: AC_CHECK_LIB->AC_SEARCH_LIBS  set pparams with capture buffers\n  
14607,     unposted: add mod_pcre to doc makefile\n  
14608,     add completion for sysctl(8) (15215  15223)\n  
14609,     unposted: update distfiles for 15211\n  
14610,     Remove references to FUNCINST_MK \n  
14611,     15211: zsh/pcre module\n  
14612,     fix IRIX 5 3 specific compilation problems and some error messages (15204)\n  
14613,     Return nonzero from _tilde on no matches \n  
14614,     Reset errflag after executing precmd \n  
14615,     15183: fix DLLD in non-ELF case\n  
14616,     Left-over changes from yesterday\n  
14617,     15181: use -KPIC instead of -Kpic\n  
14618,     15180: final AIX touch - default to termcap and add -shared flag (or\n-bM:SRE for native compiler) for modules\n  
14619,     Bart15083: bash-backward-kill-word\n  
14620,     Merge  distfiles change from 4 0 2 branch \n  
14621,     15172\n  
14622,     Have prepnexthistent() remove any HIST_TEMPSTORE entry that is present \n  
14623,     15160  15169: Doc formatting changes for texinfo and  html files\n  
14624,     update for test file renaming and fix typos\n  
14625,     fix for two digit display numbers and -encodings option (15159)\n  
14626,     Unposted: Add _last \n  
14627,     Improve completion for `cd  with cdablevars set; cleanup in _cd and _tilde (15152)\n  
14628,     enable-sitefndir -> enable-site-fndir\n  
14629,     (only the patch to compmatch c from the mail); improve merging cline lists coming from different IPREFIX/PREFIX combinations and such by avoiding to generate cline structs for empty parts after a match spec anchor cline struct (15123)\n  
14630,     add autocontinue option to automatically make stopped jos running when they are being disowned; make that the default for `%job &!  and `%job &|  (15115)\n  
14631,     15099: rudimental support for skipping unimplemented tests\n  
14632,     15094: don t display battery level of -1%\n  
14633,     fix for finding the first ambiguous path component in compfiles (3946)\n  
14634,     make warning message for disowning stopped jobs more verbose (saying how to make the job running again) (15087)\n  
14635,     Latest FAQ as per posting\n  
14636,     15079: completion for last(1)\n  
14637,     15030: multi-parameter `for  loops\n  
14638,     make expand-word not always restore the command line (3940)\n  
14639,     Assorted  make check  tweaks \n  
14640,     PRINT_EXIT_VALUE for shell functions \n  
14641,     Change magic-space to respect !  \n  
14642,     POSIX exit status changes \n  
14643,     15021: new %y character; %l semantic back\n  
14644,     15038: test case for 15023\n  
14645,     improve pattern matching to make match specs work for manual page completion (15029)\n  
14646,     No POSIX  for  syntax with csh syntax \n  
14647,     POSIX  for  syntax \n  
14648,     Fix handling of interrupt in two completion widgets \n  
14649,     Completion for AUTO_CD \n  
14650,     Fix exit status of compdef \n  
14651,     Fix  insert-tab pending  zstyle \n  
14652,     rewrite 14988 as per 14989\n  
14653,     Bug restoring saving special parameters for function scope \n  
14654,     Add socklen_t to possible SOCKLEN_T types \n  
14655,     Compiler warnings \n  
14656,     14973: fix for reported problems on AIX \n  
14657,     14962\n  
14658,     more handler -> zhandler\n  
14659,     Fix file name again (sigh) \n  
14660,     make zcompile unlink() the zwc file first (in case it is currently mapped we don t want to overwrite it); also  create the file read-only (14952)\n  
14661,     rename handler() to zhandler() because it s now exported to modules (14951)\n  
14662,     Add missing file name \n  
14663,     Fix attribution \n  
14664,     Per NetBSD  use  gcc -fPIC  rather than -fpic \n  
14665,     Fix a couple of typos; reorder a couple of entries to match the 4 0 x branch\nChangeLog \n  
14666,     Undo mkstemp() change \n  
14667,     Removed bogus mkstemp() code \n  
14668,     Use mkstemp where available\n  
14669,     fix setting of individual positional parameters after 14915\n  
14670,     14931: fix socket/address length calculation\n  
14671,     Load tcp module  zfcd_match  zfget_match where necessary \n  
14672,     $* and $@ are special\n  
14673,     fixes for display bugs for completion lists (cursor left one line to far up or down) (14903)\n  
14674,     mod_export handler\n  
14675,     fix for comparguments (completing after single letter options that get their argument in the next word); make _values ignore some of the standard option it may get; make _mount use _dir_list in some places and improve that; `document  comparguments and compvalues with some comments in computil c (14897)\n  
14676,     minor correction\n  
14677,     don t complete read-only parameters on the left side of an assignment (14896)\n  
14678,     Fix assignment problems spotted by Bart\n  
14679,     14883\n  
14680,     Reword README a little \n  
14681,     14863: tcp_connect\n  
14682,     Added KSH_TYPESET option \n  
14683,     14843: tcp_close\n  
14684,     (14841)\n  
14685,     Document PATH_DIRS behaviour\n  
14686,     14830: new config guess and config sub\n  
14687,     Possible fix for -g test \n  
14688,     Fix problems with zwcstat() on systems that do not USE_MMAP \n  
14689,     Fix email address \n  
14690,     Avoid echotc in completion tests \n  
14691,     14815: fix thinko\n  
14692,     14813: autoload functions from deleted  zwc files\n  
14693,     More reliable BROKEN_KILL_ESRCH test \n  
14694,     Several patches  some held from before 4 0 1 release \n  
14695,     Fix #includes for gcc 2 95 compilation \n  
14696,     Wrapped line prettified \n  
14697,     Untrustworthy return value of tgetflag() \n  
14698,     Fix  make check  in emacs shell mode \n  
14699,     14793\n  
14700,     Don t mark a HIST_TMPSTORE entry with HIST_OLD so that the HFILE_FAST\nalgorithm in savehistfile() will recheck this hist num later \n  
14701,     unposted: add tcp module to  distfiles\n  
14702,     14778: rename zsh/tcp to zsh/net/tcp \n  
14703,     14770: tcp module from zftp\n  
14704,     14772: David Lebel <lebel@lebel org>: OpenBSD dynamic linking\n  
14705,     unposted: we support autoconf-2 50 now\n  
14706,     14766: unify %l substitution (tty0  pts/3 etc)\n  
14707,     14760: do not use version number in AC_INIT\n  
14708,     14758: use host_os instead of ac_cv_cygwin\n  
14709,     (14736)\n  
14710,     Fix date\n  
14711,     two fixes: try all actions that have to be tried (but only once)  execute actions if we aren t after an option already (in the same word) (14733)\n  
14712,     unposted; based on 14679 (me) and 14693 (Bart): Allow processing by both\nautoconf-2 13 and autoconf-2 50; remove config status hack for autoconf-2 50\n  
14713,     Add --nobuild and --nogpg to rpm completion \n  
14714,     Relabel as 4 1 0-dev-0\n  
14715,     removed\n  
14716,     ChangeLog changed\n  
14717,     Updated ChangeLog and version mk for 4 0 1\n  
14718,     improved ifdef for undefine in M4\n  
14719,     can t use autoconf 2 50 yet\n  
14720,     work around $ (@P)1[3 -1   not working as expected (14658)\n  
14721,     Add _ruby \n  
14722,     Add YODL enditem workaround in one other place\n  
14723,     `Final  tweaks for docs for 4 0 1\n  
14724,     Don t undefine macros if not defined \n  
14725,     14635: presume  *core  glob for coredump files\n  
14726,     fix for exclusion of normal arguments (14630)\n  
14727,     Oops! Extra line \n  
14728,     unposted: Cygwin belongs now to Red Hat - folks are sensitive to it :-)\n  
14729,     * 14628: Completion/Unix/Command/_ruby: new completion function \n  
14730,     fix tag-order problem with _arguments (completion after an option that gets an argument in the same word); and a fix for completion after -ab  where -a gets an argument in the next word and -b gets one in the same word (14607)\n  
14731,     correct alphabetical order in lists of styles  tags  functions and modules\n  
14732,     a few more doc changes suggested by Bart\n  
14733,     fix two memory leaks (at least I hope they are fixed) and some out-of-bound array accesses  plus some defensive programming for heap allocated param structs (14605)\n  
14734,     (14602)\n  
14735,     Tweak builtins yo formatting \n  
14736,     always use supplied matchers (14599)\n  
14737,     Doc changes for 4 0 1\n  
14738,     Improve gettermcap() \n  
14739,     update _pine for pine 4 33  add echoti completion and update _echotc (14567)\n  
14740,     nolonger works on IRIX 5 3  and other updates\n  
14741,     14566: more testing for unimplemented features \n  
14742,     14557: remove obsolete version number\n  
14743,     some cleanup (14558)\n  
14744,     Make line spacing consistent in metafaq yo\n  
14745,     14552: update changelog with patch number\n  
14746,     145??: fix thinko\n  
14747,     145??: repeat last vi history search if search string is blank\n  
14748,     spelling corrections\n  
14749,     Document  make check  \n  
14750,     Add support for rpm update-alternatives \n  
14751,     14541: %# with capabilities prompt-expand to # iff Effective set non-empty or euid=0\n  
14752,     14538: cleaner _perl_config_vars from Matt Zimmerman\n  
14753,     14536: multiple --slave loop\n  
14754,     14533: -> to = -> for dpkg and update-alternatives\n  
14755,     use `eval $_comp_setup  in all entry points of the completion system to not only set up the options  but also redirect stdin and ignore trap handlers for ZERR (14530)\n  
14756,     print at least a warning when disowning a stopped job (14524)\n  
14757,     14517: glibc 2 2 3 tweaks revisited\n  
14758,     thinko\n  
14759,     14513: update-alternatives completion\n  
14760,     14512: dpkg --compare-versions behavior tweak\n  
14761,     Silence compiler warnings \n  
14762,     More device and FIFO test tweaks \n  
14763,     14509: ZLS_COLOURS/ZLS_COLORS consistency\n  
14764,     fix for cursor positioning with that -y option of compctl (display strings) (14507)\n  
14765,     make the zprof wrapper function be more careful  avoiding almost all of the code when the module is being unloaded (14504)\n  
14766,     another attempt at fixing the job problem from 14327; make execpline() reset list_pipe_job to zero if it would be set for a job started in the background (14503)\n  
14767,     HPUX & Solaris notes \n  
14768,     14492: new prompt theme\n  
14769,     14488\n  
14770,     Fixed acceptandinfernexthistory() to work when called repeatedly \nAlso changed it to not accept the line if the infer fails   Ignore\ntransient edits in the history when searching for an inference and\ngrabbing the next line (affecting acceptandinfernexthistory() \ninfernexthistory()  and acceptlineanddownhistory()) \n  
14771,     14489: workaround for find bug on ReliantUNIX\n  
14772,     Improve  make check  test for -b condition when /dev cannot be searched \n  
14773,     The complete 3 0 8 ChangeLog  for posterity \n  
14774,     14479: apt-get --reinstall\n  
14775,     FAQ changes for 4 0 1 from Bart\n  
14776,     I guess I was supposed to commit 14411 \n  
14777,     Revise zmodload -u test \n  
14778,     add mod_export in a couple of places where it was missing\n  
14779,     14430: handle cleanup better in Test/ztst zsh\n  
14780,     correct mess from bad merge\n  
14781,     14419: glibc 2 2 3 rlimits enum\n  
14782,     fix to include + options in tag order (14416)\n  
14783,     unposted: quote $@ in calls to _arguments\n  
14784,     make use of _arguments in _set (14409)\n  
14785,     Version 4 0 1-pre-5\n  
14786,     Workaround rm -f hang on unwriteable file in Cygwin\n  
14787,     add Test/E01options ztst to  distfiles; fix ChangeLog for last options tests\n  
14788,     ChangeLog entry ofr 14396\n  
14789,     Handle line wrapping in ZTST_hashmark \n  
14790,     14401: workaround for script execution under Cygwin\n  
14791,     last half of 14390\n  
14792,     Added some array-assignment boundary checks \n  
14793,     Fix  test and comment unsetting and resetting of special tied parameters\n  
14794,     tweaked comments\n  
14795,     14389\n  
14796,     Don\ t merge a HIST_TMPSTORE entry with a previous  duplicate  line \nAlso  don\ t call addhistnode() on a HIST_TMPSTORE entry \n  
14797,     The function addhistnode() is no longer called for a HIST_TMPSTORE\nentry  so I removed the checking for that flag   Also  freehistdata()\nnow avoids calling removehashnode() on a HIST_TMPSTORE entry \n  
14798,     Fix re-set of integer special params after unset \n  
14799,     More options tests: finished properly this time\n  
14800,     More options tests and a ztst zsh fix for ksharrays\n  
14801,     Tweak zmodload tests  fix fd 8 \n  
14802,     fix zmodload -uf for not-yet-loaded function\n  
14803,     try to make $ (e)    work for complicated parameter expansions in the value; this means: keep Qstring tokens unchanged if they are inside double quotes and tokenizing patterns in parameter expansions (14381)\n  
14804,     Add zmodload tests \n  
14805,     14378: more programs that process  tex\n  
14806,     * 14377: Completion/Unix/Command/_cvs: support new  cvspass format\nintroduced by cvs-1 11 1 \n  
14807,     typo with compset in _lp\n  
14808,     Signal queuing tweak \n  
14809,     14362: more modprobe stuff\n  
14810,     14361: better modprobe completion\n  
14811,     more fixage for expansion: just convert the command line to the original when expansion shouldn t or couldn t do something sensible on the line (14359)\n  
14812,     14357\n  
14813,     Added HIST_TMPSTORE define \n  
14814,     + Changed histreduceblanks() to preserve spaces at the start of the\n  line when HISTIGNORESPACE is set \n+ Flag a history entry with HIST_TMPSTORE when should_ignore_line()\n  returns true (instead of dropping it from the history immediately) \n+ Get rid of old HIST_TMPSTORE entries when a new command is entered \n+ The hist-file-reading code now handles destroying a foreign\n  duplicate (when marked as duplicate by addhistnode()) \n  
14815,     Changed addhistnode() to not displace an already-hashed command with\none that is marked HIST_TMPSTORE   Also changed the function to not\never destroy the entry we re currently adding (the caller now destroys\nthe newly-added entry  if it so desires) \n  
14816,     Mention how ignored history lines are not dropped immediately \n  
14817,     fix bug where /sbin/lsmod was redirected in instead of being run (14355)\n  
14818,     (14350)\n  
14819,     14348: fix globalexport with typeset -g\n  
14820,     calculate the length of the region to map (for mapped zwc files) correctly  including the offset-page-boundary-adjustment (14346)\n  
14821,     14341: modprobe -r / rmmod completion\n  
14822,     14330: handle quotes better in _most_recent_file\n  
14823,     set list_pipe_job only for real pipelines (14327)\n  
14824,     14314: writing const variable under cygwin\n  
14825,     14313: New options tests\n  
14826,     14304\n  
14827,     Fixed an obscure local-history bug that could make the  history \ncommand output something that was slightly wrong  (14304)\n  
14828,     users/3872: rename inet_* routines to avoid clash with Solaris 7 headers \n  
14829,     * 14295: Completion/Unix/Command/_cvs: support new cvs subcommands\n`rannotate  and `rlog  introduced by cvs-1 11 1 \n  
14830,     barf if a empty string is given as one of the separators for _values (14293)\n  
14831,     More cleanup of 14275+14290 \n  
14832,     Tweak 14275 \n  
14833,     update; in particular enable new style completion from ex  startup file (14283)\n  
14834,     complete only files that can be chowned (14282)\n  
14835,     insert redirection operators when expanding after one (14281)\n  
14836,     Missing dist file\n  
14837,     4 0 1-pre-4\n  
14838,     Make clearer that globsubst doesn t affect brace expansion\n  
14839,     Back off 14140 (tokenize comma)\n  
14840,     add description of how to add a auto-removable suffix when using a ->state action with _values (14279)\n  
14841,     Clean up after 14270 \n  
14842,     14268 --> 14270\n  
14843,     Use AC_TRY_COMPILE for curses h test because of SunOS 5 8\n  
14844,     Remove unnecessary  *  from pattern \n  
14845,     add -S option to specify separator between values and their arguments; make _values add the value-separator as a suffix for most types of actions (14257)\n  
14846,     match `scalar*  not `scalar  when checking parameter type (14256)\n  
14847,     fix guard to accept partial display numbers (14255)\n  
14848,     Fixes from Andrej for zpty on cygwin\n  
14849,     empty description means: don t add a -X option (14252)\n  
14850,     print space/backspace when reacing the last column while printing descriptions and the like to avoid a cursor positioning bug depending on the kind of terminal (autowrap) (14251)\n  
14851,     double all backslashes before colons in the original pattern (14240)\n  
14852,     14234 and 14235 \n  
14853,     Prevent  no multi-letter values  error on values of \ \\:\  and \ \  in compvalues() \n  
14854,     Improve handling of b/n/s subscript flags \n  
14855,     Fix subscript flag descriptions\n  
14856,     complete subscript flags (14227)\n  
14857,     Path prefix completion for cvs subcommands \n  
14858,     fix typo in changelog\n  
14859,     update bindkey completion for bindkey changes in 14046 (14219)\n  
14860,     Fix _files -F\n  
14861,     minor completion changes (14216)\n  
14862,     14214\n  
14863,     More restrictive configure checks for curses headers \n  
14864,     14208: Solaris loadkeys\n  
14865,     14201: completion for loadkeys\n  
14866,     Make X $~foo Y where $foo contains commas behave as expected\n  
14867,     remove quotes when looking at arguments in comparguments (14198)\n  
14868,     missing star in suffix-style test pattern (14197)\n  
14869,     Add --with-curses-terminfo to configure\n  
14870,     Use BDIGBUFSIZE in two other places\n  
14871,     Defeat GCC over-optimization in AC_TRY_LINK tests \n  
14872,     fixelt for the test for the suffix style; if word contains only a tilde  don t try to expand it (14160)\n  
14873,     Bart 14144: fix compilation problem on current Cygwin 1 3 1 (macros were\nchanged to external variables and cannot be used to initialize static array) \nModified by me __CYGWIN -> __CYGWIN__\n  
14874,     NO_kshglob in _comp_options \n  
14875,     BDIGBUFSIZE for binary conversions \n  
14876,     try to improve testing for suffix style in _expand; make _path_files fail to complete words like    <pat>  <param-subst>    (14133)\n  
14877,     Use trap for unfunction compadd in _approximate \n  
14878,     14125: remove static incleanup flag because it is unused\n  
14879,     14123: don t include curses h in termcap c if term h doesn t need it\n  
14880,     14117\n  
14881,     Another HAVE_TERM* compilation tweak \n  
14882,     new vnc completion and use _guard for pine completion (14112)\n  
14883,     handle sub-sub-directories of $_compdir as in the CVS-layout (14107)\n  
14884,     rename -W option to -w  add new -W option which makes _arguments complete options even after options that get their argument in the same word; new _guard function for conditionally displaying messages (14105)\n  
14885,     make keep-prefix keep everything up to the first component with a parameter expansion  not only if that is at the beginning of the string (14092)\n  
14886,     *** empty log message ***\n  
14887,     fix a sizeof() to strlen()\n  
14888,     Fix term* linkage _again_ \n  
14889,     Subscripting optimization and error checking \n  
14890,     14xxx: document $termcap and tweak mod_termcap/mod_terminfo docs\n  
14891,     14077: revert clint s build patches on 19 04 2001\n  
14892,     Fix subscripting bug with backslash-double-quote \n  
14893,     Test for (kK) subscript flags bugfix \n  
14894,     Fix bug in (kK) subscript flags \n  
14895,     Subscripting documentation \n  
14896,     14065: decrease termcap/terminfo parameter fishiness\n  
14897,     More term* h inclusion un-confusion \n  
14898,     More parameter/subscript cleanup \n  
14899,     14055: include termio h in termcap c for the benefit of Solaris 8\n  
14900,     14053: add $termcap special parameter\n  
14901,     Parameter repairs  mostly for subscripting \n  
14902,     extra ChangeLog detail\n  
14903,     bindkey -rp removes prefix bindings; bindkey -p bugfix\n  
14904,     unposted: check for functions in the proper libraries\n  
14905,     14041: reduce unnecessary linking for modules\n  
14906,     14039: simulate old linking behavior\n  
14907,     14033: reduce unnecessary library linking for modules and main binary\n  
14908,     *** empty log message ***\n  
14909,     use the right path patterns for completion functions\n  
14910,     14018: honor STRIPFLAGS when installing modules\n  
14911,     Tilde-path completion tweak \n  
14912,     only use the exclusion lists of options that are not currently being completed  but keep options from being completed more than once (13999)\n  
14913,     remove SUFFIX-handling  it s in _tilde and only needed there (13997)\n  
14914,     Delete duplicated text in development guide \n  
14915,     add completion for common MUAs and a couple of minor fixes (13982)\n  
14916,     Zsh workers 13981\n  
14917,     Don t define gethostbyname2() as static  since it can clash with the\nsystem header files on a system that provides the prototype but not\nthe object \n  
14918,     See zsh-workers 13972 and 13973 \n  
14919,     Check for parameter expansions before tilde-expansions (fixes bugs reported\nin zsh-workers/13971) \n  
14920,     Fix term* h header file collisions \n  
14921,     Fiddle with <term h> vs  <termcap h> inclusion \n  
14922,     13961: add ifdef for tputs in term h in prototypes h\n  
14923,     avoid appending a / when called from _cd (13958)\n  
14924,     add _arguments based completion for alias and jobs (13947)\n  
14925,     13955: boolnames et al   not boolcodes\n  
14926,     13953: use curses capability inventories instead of hardcoding and presume\nthat they are terminfo\n  
14927,     13951: working $ (k)terminfo  and $ (kv)terminfo \n  
14928,     13949 and a couple of unposted tweaks to functions \n  
14929,     Don t append a / when completing after [-+ * \n  
14930,     Strip %[BSubsu  as well as % *%  before computing width of prompt \n  
14931,     Update a comment \n  
14932,     add _arguments based completion for alias and jobs (13947)\n  
14933,     Fixed a filename \n  
14934,     13942\n  
14935,     Updated the  preexec  docs \n  
14936,     Fixed a bug where the call to function  preexec  might pass the wrong\nhistory line   Added two extra args to preexec to give the user more\ninfo on the command that is about to be executed \n  
14937,     Mapfile fix from Bart: dupstring parameter name to avoid static buffer overuse\n  
14938,     Enhanced should_ignore_line() \n  
14939,     Slightly optimized should_ignore_line() by using getjobtext() rather\nthan getpermtext() \n  
14940,     Mention 13936 \n  
14941,     Bart s change makes terminfo_nam[  needed when HAVE_TIGETSTR is not\ndefined \n  
14942,     Silence some compiler warnings \n  
14943,     Silence several warnings when HAVE_TIGETSTR is not defined \n  
14944,     Fixes for 13922 \n  
14945,     Make termcap and terminfo modules always loadable \n  
14946,     4 0 1-pre-3 version change with some  distfiles updates\n  
14947,     Improve prompt when compaudit finds badness \n  
14948,     indent fix\n  
14949,     test for unset in pipestatussetfn() (13917)\n  
14950,      (13916)\n  
14951,     workers/13914\n  
14952,     workers/13914: Added call to _normal after specified class name  and added completion of filenames in jar archive after -x flag\n  
14953,     Fix typos \n  
14954,     Two new shell functions and a change to an old one \n  
14955,     Better handling of long command strings  faster padding computation \n  
14956,     Methods for avoiding the nopromptcr problem  from users/3401 and more \n  
14957,     Write history entries for jobs resumed with fg/bg; from users/3795  plus\na couple of minor bugfixes \n  
14958,     13909: bad tilde files in some  distfiles\n  
14959,     complete only those single letter options with the right prefix character (13908)\n  
14960,     fix for reverse subscripting of strings as second part of subscript ($a[x (r)   ) (13907)\n  
14961,     add -W option to _arguments  which allows to complete options after options that take an argument in the next word (13902)\n  
14962,     13899: OSTYPE checking\n  
14963,     new completion functions\n  
14964,     (13892) fixes for fpaths and completion matching\n  
14965,     13889: move _apm to Unix/Command  add OpenBSD support\n  
14966,     Skip CVS subdirectories when installing functions \n  
14967,     13884: apm for FreeBSD 4 1\n  
14968,     cleanup after function move\n  
14969,     more after-move cleanup\n  
14970,     functions moved\n  
14971,     after-move cleanup\n  
14972,     new _zed\n  
14973,     new or changed after move\n  
14974,     new after move\n  
14975,     changed after moving functions\n  
14976,     moved from  /Test/55arguments ztst\n  
14977,     moved to  /Test/Y03arguments ztst\n  
14978,     moved from  /Test/54compmatch ztst\n  
14979,     moved to  /Test/Y02compmatch ztst\n  
14980,     moved from  /Test/53completion ztst\n  
14981,     moved to  /Test/Y01completion ztst\n  
14982,     moved from  /Test/52zregexparse ztst\n  
14983,     moved to  /Test/V02zregexparse ztst\n  
14984,     moved from  /Test/51xtrace ztst\n  
14985,     moved to  /Test/E02xtrace ztst\n  
14986,     moved from  /Test/14array ztst\n  
14987,     moved to  /Test/D05array ztst\n  
14988,     moved from  /Test/13parameter ztst\n  
14989,     moved to  /Test/D04parameter ztst\n  
14990,     moved from  /Test/12procsubst ztst\n  
14991,     moved to  /Test/D03procsubst ztst\n  
14992,     moved from  /Test/11glob ztst\n  
14993,     moved to  /Test/D02glob ztst\n  
14994,     moved from  /Test/10prompt ztst\n  
14995,     moved to  /Test/D01prompt ztst\n  
14996,     moved from  /Test/09funcdef ztst\n  
14997,     moved to  /Test/C04funcdef ztst\n  
14998,     moved from  /Test/08traps ztst\n  
14999,     moved to  /Test/C03traps ztst\n  
15000,     moved from  /Test/07cond ztst\n  
15001,     moved to  /Test/C02cond ztst\n  
15002,     moved from  /Test/06arith ztst\n  
15003,     moved to  /Test/C01arith ztst\n  
15004,     moved from  /Test/50cd ztst\n  
15005,     moved to  /Test/B01cd ztst\n  
15006,     moved from  /Test/05command ztst\n  
15007,     moved to  /Test/A05execution ztst\n  
15008,     moved from  /Test/04redirect ztst\n  
15009,     moved to  /Test/A04redirect ztst\n  
15010,     moved from  /Test/03quoting ztst\n  
15011,     moved to  /Test/A03quoting ztst\n  
15012,     moved from  /Test/02alias ztst\n  
15013,     moved to  /Test/A02alias ztst\n  
15014,     moved from  /Test/01grammar ztst\n  
15015,     moved to  /Test/A01grammar ztst\n  
15016,     moved to  /Functions/Misc/zstyle+\n  
15017,     moved to  /Functions/Misc/zrecompile\n  
15018,     moved to  /Functions/Misc/zmv\n  
15019,     moved from  /Functions/Misc/zls\n  
15020,     moved to  /Functions/Example/zls\n  
15021,     moved from  /Functions/Misc/zless\n  
15022,     moved to  /Functions/Example/zless\n  
15023,     moved to  /Functions/Misc/zkbd\n  
15024,     moved to  /Functions/Misc/zed\n  
15025,     moved from  /Functions/Misc/yu\n  
15026,     moved to  /Functions/Example/yu\n  
15027,     moved from  /Functions/Misc/yp\n  
15028,     moved to  /Functions/Example/yp\n  
15029,     moved to  /Functions/Misc/run-help\n  
15030,     moved from  /Functions/Misc/randline\n  
15031,     moved to  /Functions/Example/randline\n  
15032,     moved from  /Functions/Misc/pushd\n  
15033,     moved to  /Functions/Example/pushd\n  
15034,     moved from  /Functions/Misc/proto\n  
15035,     moved to  /Functions/Example/proto\n  
15036,     moved to  /Functions/Misc/nslookup\n  
15037,     moved from  /Functions/Misc/multicomp\n  
15038,     moved to  /Functions/Compctl/multicomp\n  
15039,     moved to  /Functions/Misc/mere\n  
15040,     moved to  /Functions/Misc/is-at-least\n  
15041,     moved to  /Functions/Misc/harden\n  
15042,     moved from  /Functions/Misc/cx\n  
15043,     moved to  /Functions/Example/cx\n  
15044,     moved to  /Functions/Misc/colors\n  
15045,     moved to  /Functions/Misc/checkmail\n  
15046,     moved from  /Functions/Misc/cdmatch2\n  
15047,     moved to  /Functions/Compctl/cdmatch2\n  
15048,     moved from  /Functions/Misc/cdmatch\n  
15049,     moved to  /Functions/Compctl/cdmatch\n  
15050,     moved from  /Functions/Misc/cat\n  
15051,     moved to  /Functions/Example/cat\n  
15052,     moved to  /Functions/Misc/allopt\n  
15053,     moved from  /Functions/Misc/acx\n  
15054,     moved to  /Functions/Example/acx\n  
15055,     moved from Completion/Linux/_rpm\n  
15056,     moved to Completion/Redhat/Command/_rpm\n  
15057,     moved from Completion/Debian/_dpkg-source\n  
15058,     moved to Completion/Debian/Command/_dpkg_source\n  
15059,     moved from Completion/Debian/_dupload\n  
15060,     moved to Completion/Debian/Command/_dupload\n  
15061,     moved from Completion/Debian/_dpkg\n  
15062,     moved to Completion/Debian/Command/_dpkg\n  
15063,     moved from Completion/Debian/_bug\n  
15064,     moved to Completion/Debian/Command/_bug\n  
15065,     moved from Completion/Debian/_apt\n  
15066,     moved to Completion/Debian/Command/_apt\n  
15067,     moved from Completion/Debian/_deb_packages\n  
15068,     moved to Completion/Debian/Type/_deb_packages\n  
15069,     moved from Completion/Bsd/_kld\n  
15070,     moved to Completion/BSD/Command/_kld\n  
15071,     moved from Completion/Bsd/_cvsup\n  
15072,     moved to Completion/BSD/Command/_cvsup\n  
15073,     moved from Completion/Bsd/_bsd_pkg\n  
15074,     moved to Completion/BSD/Command/_bsd_pkg\n  
15075,     moved from Completion/AIX/_smit\n  
15076,     moved to Completion/AIX/Command/_smit\n  
15077,     moved from Completion/AIX/_lsvg\n  
15078,     moved to Completion/AIX/Command/_lsvg\n  
15079,     moved from Completion/AIX/_lspv\n  
15080,     moved to Completion/AIX/Command/_lspv\n  
15081,     moved from Completion/AIX/_lslv\n  
15082,     moved to Completion/AIX/Command/_lslv\n  
15083,     moved from Completion/AIX/_lsdev\n  
15084,     moved to Completion/AIX/Command/_lsdev\n  
15085,     moved from Completion/AIX/_lscfg\n  
15086,     moved to Completion/AIX/Command/_lscfg\n  
15087,     moved from Completion/AIX/_floppy\n  
15088,     moved to Completion/AIX/Command/_floppy\n  
15089,     moved from Completion/AIX/_volume_groups\n  
15090,     moved to Completion/AIX/Type/_volume_groups\n  
15091,     moved from Completion/AIX/_physical_volumes\n  
15092,     moved to Completion/AIX/Type/_physical_volumes\n  
15093,     moved from Completion/AIX/_object_classes\n  
15094,     moved to Completion/AIX/Type/_object_classes\n  
15095,     moved from Completion/AIX/_logical_volumes\n  
15096,     moved to Completion/AIX/Type/_logical_volumes\n  
15097,     moved from Completion/X/_xutils\n  
15098,     moved to Completion/X/Command/_x_utils\n  
15099,     moved from Completion/X/_xwit\n  
15100,     moved to Completion/X/Command/_xwit\n  
15101,     moved from Completion/X/_xv\n  
15102,     moved to Completion/X/Command/_xv\n  
15103,     moved from Completion/X/_xterm\n  
15104,     moved to Completion/X/Command/_xterm\n  
15105,     moved from Completion/X/_xset\n  
15106,     moved to Completion/X/Command/_xset\n  
15107,     moved from Completion/X/_xrdb\n  
15108,     moved to Completion/X/Command/_xrdb\n  
15109,     moved from Completion/X/_xmodmap\n  
15110,     moved to Completion/X/Command/_xmodmap\n  
15111,     moved from Completion/X/_xfig\n  
15112,     moved to Completion/X/Command/_xfig\n  
15113,     moved from Completion/X/_xdvi\n  
15114,     moved to Completion/X/Command/_xdvi\n  
15115,     moved from Completion/X/_xauth\n  
15116,     moved to Completion/X/Command/_xauth\n  
15117,     moved from Completion/User/_netscape\n  
15118,     moved to Completion/X/Command/_netscape\n  
15119,     moved from Completion/User/_nedit\n  
15120,     moved to Completion/X/Command/_nedit\n  
15121,     moved from Completion/User/_gv\n  
15122,     moved to Completion/X/Command/_gv\n  
15123,     moved from Completion/X/_xt_arguments\n  
15124,     moved to Completion/X/Utility/_xt_arguments\n  
15125,     moved from Completion/X/_x_arguments\n  
15126,     moved to Completion/X/Utility/_x_arguments\n  
15127,     moved from Completion/X/_xt_session_id\n  
15128,     moved to Completion/X/Type/_xt_session_id\n  
15129,     moved from Completion/X/_x_window\n  
15130,     moved to Completion/X/Type/_x_window\n  
15131,     moved from Completion/X/_x_title\n  
15132,     moved to Completion/X/Type/_x_title\n  
15133,     moved from Completion/X/_x_selection_timeout\n  
15134,     moved to Completion/X/Type/_x_selection_timeout\n  
15135,     moved from Completion/X/_x_resource\n  
15136,     moved to Completion/X/Type/_x_resource\n  
15137,     moved from Completion/X/_x_name\n  
15138,     moved to Completion/X/Type/_x_name\n  
15139,     moved from Completion/X/_x_modifier\n  
15140,     moved to Completion/X/Type/_x_modifier\n  
15141,     moved from Completion/X/_x_locale\n  
15142,     moved to Completion/X/Type/_x_locale\n  
15143,     moved from Completion/X/_x_keysym\n  
15144,     moved to Completion/X/Type/_x_keysym\n  
15145,     moved from Completion/X/_x_geometry\n  
15146,     moved to Completion/X/Type/_x_geometry\n  
15147,     moved from Completion/X/_x_font\n  
15148,     moved to Completion/X/Type/_x_font\n  
15149,     moved from Completion/X/_x_extension\n  
15150,     moved to Completion/X/Type/_x_extension\n  
15151,     moved from Completion/X/_x_display\n  
15152,     moved to Completion/X/Type/_x_display\n  
15153,     moved from Completion/X/_x_cursor\n  
15154,     moved to Completion/X/Type/_x_cursor\n  
15155,     moved from Completion/X/_x_colormapid\n  
15156,     moved to Completion/X/Type/_x_colormapid\n  
15157,     moved from Completion/X/_x_color\n  
15158,     moved to Completion/X/Type/_x_color\n  
15159,     moved from Completion/X/_x_borderwidth\n  
15160,     moved to Completion/X/Type/_x_borderwidth\n  
15161,     moved from Completion/User/_use_lo\n  
15162,     moved to Completion/Unix/Command/_gnu_generic\n  
15163,     moved from Completion/User/_zip\n  
15164,     moved to Completion/Unix/Command/_zip\n  
15165,     moved from Completion/User/_zdump\n  
15166,     moved to Completion/Unix/Command/_zdump\n  
15167,     moved from Completion/User/_zcat\n  
15168,     moved to Completion/Unix/Command/_zcat\n  
15169,     moved from Completion/User/_yp\n  
15170,     moved to Completion/Unix/Command/_yp\n  
15171,     moved from Completion/User/_yodl\n  
15172,     moved to Completion/Unix/Command/_yodl\n  
15173,     moved from Completion/User/_xargs\n  
15174,     moved to Completion/Unix/Command/_xargs\n  
15175,     moved from Completion/User/_whois\n  
15176,     moved to Completion/Unix/Command/_whois\n  
15177,     moved from Completion/User/_whereis\n  
15178,     moved to Completion/Unix/Command/_whereis\n  
15179,     moved from Completion/User/_wget\n  
15180,     moved to Completion/Unix/Command/_wget\n  
15181,     moved from Completion/User/_webbrowser\n  
15182,     moved to Completion/Unix/Command/_webbrowser\n  
15183,     moved from Completion/User/_w3m\n  
15184,     moved to Completion/Unix/Command/_w3m\n  
15185,     moved from Completion/User/_tin\n  
15186,     moved to Completion/Unix/Command/_tin\n  
15187,     moved from Completion/User/_tiff\n  
15188,     moved to Completion/Unix/Command/_tiff\n  
15189,     moved from Completion/User/_telnet\n  
15190,     moved to Completion/Unix/Command/_telnet\n  
15191,     moved from Completion/User/_tar\n  
15192,     moved to Completion/Unix/Command/_tar\n  
15193,     moved from Completion/User/_sudo\n  
15194,     moved to Completion/Unix/Command/_sudo\n  
15195,     moved from Completion/User/_su\n  
15196,     moved to Completion/Unix/Command/_su\n  
15197,     moved from Completion/User/_stty\n  
15198,     moved to Completion/Unix/Command/_stty\n  
15199,     moved from Completion/User/_strip\n  
15200,     moved to Completion/Unix/Command/_strip\n  
15201,     moved from Completion/User/_ssh\n  
15202,     moved to Completion/Unix/Command/_ssh\n  
15203,     moved from Completion/User/_socket\n  
15204,     moved to Completion/Unix/Command/_socket\n  
15205,     moved from Completion/User/_slrn\n  
15206,     moved to Completion/Unix/Command/_slrn\n  
15207,     moved from Completion/User/_sh\n  
15208,     moved to Completion/Unix/Command/_sh\n  
15209,     moved from Completion/User/_rlogin\n  
15210,     moved to Completion/Unix/Command/_rlogin\n  
15211,     moved from Completion/User/_rcs\n  
15212,     moved to Completion/Unix/Command/_rcs\n  
15213,     moved from Completion/User/_psutils\n  
15214,     moved to Completion/Unix/Command/_psutils\n  
15215,     moved from Completion/User/_prcs\n  
15216,     moved to Completion/Unix/Command/_prcs\n  
15217,     moved from Completion/User/_perldoc\n  
15218,     moved to Completion/Unix/Command/_perldoc\n  
15219,     moved from Completion/User/_perl\n  
15220,     moved to Completion/Unix/Command/_perl\n  
15221,     moved from Completion/User/_pbm\n  
15222,     moved to Completion/Unix/Command/_pbm\n  
15223,     moved from Completion/User/_patch\n  
15224,     moved to Completion/Unix/Command/_patch\n  
15225,     moved from Completion/User/_pack\n  
15226,     moved to Completion/Unix/Command/_pack\n  
15227,     moved from Completion/User/_nslookup\n  
15228,     moved to Completion/Unix/Command/_nslookup\n  
15229,     moved from Completion/User/_ncftp\n  
15230,     moved to Completion/Unix/Command/_ncftp\n  
15231,     moved from Completion/User/_mysql_utils\n  
15232,     moved to Completion/Unix/Command/_mysql_utils\n  
15233,     moved from Completion/User/_mutt\n  
15234,     moved to Completion/Unix/Command/_mutt\n  
15235,     moved from Completion/User/_mount\n  
15236,     moved to Completion/Unix/Command/_mount\n  
15237,     moved from Completion/User/_mh\n  
15238,     moved to Completion/Unix/Command/_mh\n  
15239,     moved from Completion/User/_man\n  
15240,     moved to Completion/Unix/Command/_man\n  
15241,     moved from Completion/User/_make\n  
15242,     moved to Completion/Unix/Command/_make\n  
15243,     moved from Completion/User/_lzop\n  
15244,     moved to Completion/Unix/Command/_lzop\n  
15245,     moved from Completion/User/_lynx\n  
15246,     moved to Completion/Unix/Command/_lynx\n  
15247,     moved from Completion/User/_ls\n  
15248,     moved to Completion/Unix/Command/_ls\n  
15249,     moved from Completion/User/_lp\n  
15250,     moved to Completion/Unix/Command/_lp\n  
15251,     moved from Completion/User/_look\n  
15252,     moved to Completion/Unix/Command/_look\n  
15253,     moved from Completion/User/_killall\n  
15254,     moved to Completion/Unix/Command/_killall\n  
15255,     moved from Completion/User/_joe\n  
15256,     moved to Completion/Unix/Command/_joe\n  
15257,     moved from Completion/User/_java\n  
15258,     moved to Completion/Unix/Command/_java\n  
15259,     moved from Completion/User/_ispell\n  
15260,     moved to Completion/Unix/Command/_ispell\n  
15261,     moved from Completion/User/_init_d\n  
15262,     moved to Completion/Unix/Command/_init_d\n  
15263,     moved from Completion/User/_imagemagick\n  
15264,     moved to Completion/Unix/Command/_imagemagick\n  
15265,     moved from Completion/User/_iconv\n  
15266,     moved to Completion/Unix/Command/_iconv\n  
15267,     moved from Completion/User/_gzip\n  
15268,     moved to Completion/Unix/Command/_gzip\n  
15269,     moved from Completion/User/_gs\n  
15270,     moved to Completion/Unix/Command/_gs\n  
15271,     moved from Completion/User/_grep\n  
15272,     moved to Completion/Unix/Command/_grep\n  
15273,     moved from Completion/User/_gprof\n  
15274,     moved to Completion/Unix/Command/_gprof\n  
15275,     moved from Completion/User/_getconf\n  
15276,     moved to Completion/Unix/Command/_getconf\n  
15277,     moved from Completion/User/_gdb\n  
15278,     moved to Completion/Unix/Command/_gdb\n  
15279,     moved from Completion/User/_gcc\n  
15280,     moved to Completion/Unix/Command/_gcc\n  
15281,     moved from Completion/User/_flex\n  
15282,     moved to Completion/Unix/Command/_flex\n  
15283,     moved from Completion/User/_finger\n  
15284,     moved to Completion/Unix/Command/_finger\n  
15285,     moved from Completion/User/_find\n  
15286,     moved to Completion/Unix/Command/_find\n  
15287,     moved from Completion/User/_fetchmail\n  
15288,     moved to Completion/Unix/Command/_fetchmail\n  
15289,     moved from Completion/User/_fakeroot\n  
15290,     moved to Completion/Unix/Command/_fakeroot\n  
15291,     moved from Completion/User/_enscript\n  
15292,     moved to Completion/Unix/Command/_enscript\n  
15293,     moved from Completion/User/_dvi\n  
15294,     moved to Completion/Unix/Command/_dvi\n  
15295,     moved from Completion/User/_diff\n  
15296,     moved to Completion/Unix/Command/_diff\n  
15297,     moved from Completion/User/_dict\n  
15298,     moved to Completion/Unix/Command/_dict\n  
15299,     moved from Completion/User/_dd\n  
15300,     moved to Completion/Unix/Command/_dd\n  
15301,     moved from Completion/User/_cvs\n  
15302,     moved to Completion/Unix/Command/_cvs\n  
15303,     moved from Completion/User/_cpio\n  
15304,     moved to Completion/Unix/Command/_cpio\n  
15305,     moved from Completion/User/_configure\n  
15306,     moved to Completion/Unix/Command/_configure\n  
15307,     moved from Completion/User/_compress\n  
15308,     moved to Completion/Unix/Command/_compress\n  
15309,     moved from Completion/User/_chown\n  
15310,     moved to Completion/Unix/Command/_chown\n  
15311,     moved from Completion/User/_bzip2\n  
15312,     moved to Completion/Unix/Command/_bzip2\n  
15313,     moved from Completion/User/_bison\n  
15314,     moved to Completion/Unix/Command/_bison\n  
15315,     moved from Completion/User/_arp\n  
15316,     moved to Completion/Unix/Command/_arp\n  
15317,     moved from Completion/User/_archie\n  
15318,     moved to Completion/Unix/Command/_archie\n  
15319,     moved from Completion/User/_apachectl\n  
15320,     moved to Completion/Unix/Command/_apachectl\n  
15321,     moved from Completion/User/_a2ps\n  
15322,     moved to Completion/Unix/Command/_a2ps\n  
15323,     moved from Completion/User/_dirs\n  
15324,     moved to Completion/Unix/Type/_directories\n  
15325,     moved from Completion/User/_users_on\n  
15326,     moved to Completion/Unix/Type/_users_on\n  
15327,     moved from Completion/User/_users\n  
15328,     moved to Completion/Unix/Type/_users\n  
15329,     moved from Completion/User/_user_at_host\n  
15330,     moved to Completion/Unix/Type/_user_at_host\n  
15331,     moved from Completion/User/_urls\n  
15332,     moved to Completion/Unix/Type/_urls\n  
15333,     moved from Completion/User/_tilde_files\n  
15334,     moved to Completion/Unix/Type/_tilde_files\n  
15335,     moved from Completion/User/_texi\n  
15336,     moved to Completion/Unix/Type/_texi\n  
15337,     moved from Completion/User/_tex\n  
15338,     moved to Completion/Unix/Type/_tex\n  
15339,     moved from Completion/User/_tar_archive\n  
15340,     moved to Completion/Unix/Type/_tar_archive\n  
15341,     moved from Completion/User/_pspdf\n  
15342,     moved to Completion/Unix/Type/_pspdf\n  
15343,     moved from Completion/User/_ps\n  
15344,     moved to Completion/Unix/Type/_ps\n  
15345,     moved from Completion/User/_printers\n  
15346,     moved to Completion/Unix/Type/_printers\n  
15347,     moved from Completion/User/_ports\n  
15348,     moved to Completion/Unix/Type/_ports\n  
15349,     moved from Completion/User/_perl_modules\n  
15350,     moved to Completion/Unix/Type/_perl_modules\n  
15351,     moved from Completion/User/_perl_builtin_funcs\n  
15352,     moved to Completion/Unix/Type/_perl_builtin_funcs\n  
15353,     moved from Completion/User/_perl_basepods\n  
15354,     moved to Completion/Unix/Type/_perl_basepods\n  
15355,     moved from Completion/User/_pdf\n  
15356,     moved to Completion/Unix/Type/_pdf\n  
15357,     moved from Completion/User/_other_accounts\n  
15358,     moved to Completion/Unix/Type/_other_accounts\n  
15359,     moved from Completion/User/_newsgroups\n  
15360,     moved to Completion/Unix/Type/_newsgroups\n  
15361,     moved from Completion/User/_my_accounts\n  
15362,     moved to Completion/Unix/Type/_my_accounts\n  
15363,     moved from Completion/User/_mailboxes\n  
15364,     moved to Completion/Unix/Type/_mailboxes\n  
15365,     moved from Completion/User/_hosts\n  
15366,     moved to Completion/Unix/Type/_hosts\n  
15367,     moved from Completion/User/_groups\n  
15368,     moved to Completion/Unix/Type/_groups\n  
15369,     moved from Completion/User/_domains\n  
15370,     moved to Completion/Unix/Type/_domains\n  
15371,     moved from Completion/User/_dir_list\n  
15372,     moved to Completion/Unix/Type/_dir_list\n  
15373,     moved from Completion/User/_diff_options\n  
15374,     moved to Completion/Unix/Type/_diff_options\n  
15375,     moved from Completion/Core/_path_files\n  
15376,     moved to Completion/Unix/Type/_path_files\n  
15377,     moved from Completion/Core/_files\n  
15378,     moved to Completion/Unix/Type/_files\n  
15379,     moved from Completion/Builtins/_signals\n  
15380,     moved to Completion/Unix/Type/_signals\n  
15381,     moved from Completion/Builtins/_pids\n  
15382,     moved to Completion/Unix/Type/_pids\n  
15383,     moved from Completion/Builtins/_vars_eq\n  
15384,     moved to Completion/Zsh/Command/_typeset\n  
15385,     moved from Completion/User/_prompt\n  
15386,     moved to Completion/Zsh/Command/_prompt\n  
15387,     moved from Completion/User/_mere\n  
15388,     moved to Completion/Zsh/Command/_mere\n  
15389,     moved from Completion/Builtins/_zstyle\n  
15390,     moved to Completion/Zsh/Command/_zstyle\n  
15391,     moved from Completion/Builtins/_zpty\n  
15392,     moved to Completion/Zsh/Command/_zpty\n  
15393,     moved from Completion/Builtins/_zmodload\n  
15394,     moved to Completion/Zsh/Command/_zmodload\n  
15395,     moved from Completion/Builtins/_zle\n  
15396,     moved to Completion/Zsh/Command/_zle\n  
15397,     moved from Completion/Builtins/_zftp\n  
15398,     moved to Completion/Zsh/Command/_zftp\n  
15399,     moved from Completion/Builtins/_zcompile\n  
15400,     moved to Completion/Zsh/Command/_zcompile\n  
15401,     moved from Completion/Builtins/_which\n  
15402,     moved to Completion/Zsh/Command/_which\n  
15403,     moved from Completion/Builtins/_wait\n  
15404,     moved to Completion/Zsh/Command/_wait\n  
15405,     moved from Completion/Builtins/_unsetopt\n  
15406,     moved to Completion/Zsh/Command/_unsetopt\n  
15407,     moved from Completion/Builtins/_unhash\n  
15408,     moved to Completion/Zsh/Command/_unhash\n  
15409,     moved from Completion/Builtins/_trap\n  
15410,     moved to Completion/Zsh/Command/_trap\n  
15411,     moved from Completion/Builtins/_stat\n  
15412,     moved to Completion/Zsh/Command/_stat\n  
15413,     moved from Completion/Builtins/_source\n  
15414,     moved to Completion/Zsh/Command/_source\n  
15415,     moved from Completion/Builtins/_setopt\n  
15416,     moved to Completion/Zsh/Command/_setopt\n  
15417,     moved from Completion/Builtins/_set\n  
15418,     moved to Completion/Zsh/Command/_set\n  
15419,     moved from Completion/Builtins/_sched\n  
15420,     moved to Completion/Zsh/Command/_sched\n  
15421,     moved from Completion/Builtins/_read\n  
15422,     moved to Completion/Zsh/Command/_read\n  
15423,     moved from Completion/Builtins/_print\n  
15424,     moved to Completion/Zsh/Command/_print\n  
15425,     moved from Completion/Builtins/_kill\n  
15426,     moved to Completion/Zsh/Command/_kill\n  
15427,     moved from Completion/Builtins/_hash\n  
15428,     moved to Completion/Zsh/Command/_hash\n  
15429,     moved from Completion/Builtins/_fc\n  
15430,     moved to Completion/Zsh/Command/_fc\n  
15431,     moved from Completion/Builtins/_enable\n  
15432,     moved to Completion/Zsh/Command/_enable\n  
15433,     moved from Completion/Builtins/_emulate\n  
15434,     moved to Completion/Zsh/Command/_emulate\n  
15435,     moved from Completion/Builtins/_echotc\n  
15436,     moved to Completion/Zsh/Command/_echotc\n  
15437,     moved from Completion/Builtins/_disable\n  
15438,     moved to Completion/Zsh/Command/_disable\n  
15439,     moved from Completion/Builtins/_compdef\n  
15440,     moved to Completion/Zsh/Command/_compdef\n  
15441,     moved from Completion/Builtins/_command\n  
15442,     moved to Completion/Zsh/Command/_command\n  
15443,     moved from Completion/Builtins/_cd\n  
15444,     moved to Completion/Zsh/Command/_cd\n  
15445,     moved from Completion/Builtins/_builtin\n  
15446,     moved to Completion/Zsh/Command/_builtin\n  
15447,     moved from Completion/Builtins/_bindkey\n  
15448,     moved to Completion/Zsh/Command/_bindkey\n  
15449,     moved from Completion/Builtins/_autoload\n  
15450,     moved to Completion/Zsh/Command/_autoload\n  
15451,     moved from Completion/Base/_precommand\n  
15452,     moved to Completion/Zsh/Command/_precommand\n  
15453,     moved from Completion/Base/_value\n  
15454,     moved to Completion/Zsh/Context/_value\n  
15455,     moved from Completion/Base/_tilde\n  
15456,     moved to Completion/Zsh/Context/_tilde\n  
15457,     moved from Completion/Base/_subscript\n  
15458,     moved to Completion/Zsh/Context/_subscript\n  
15459,     moved from Completion/Base/_redirect\n  
15460,     moved to Completion/Zsh/Context/_redirect\n  
15461,     moved from Completion/Base/_parameter\n  
15462,     moved to Completion/Zsh/Context/_parameter\n  
15463,     moved from Completion/Base/_math\n  
15464,     moved to Completion/Zsh/Context/_math\n  
15465,     moved from Completion/Base/_in_vared\n  
15466,     moved to Completion/Zsh/Context/_in_vared\n  
15467,     moved from Completion/Base/_first\n  
15468,     moved to Completion/Zsh/Context/_first\n  
15469,     moved from Completion/Base/_equal\n  
15470,     moved to Completion/Zsh/Context/_equal\n  
15471,     moved from Completion/Base/_default\n  
15472,     moved to Completion/Zsh/Context/_default\n  
15473,     moved from Completion/Base/_condition\n  
15474,     moved to Completion/Zsh/Context/_condition\n  
15475,     moved from Completion/Base/_brace_parameter\n  
15476,     moved to Completion/Zsh/Context/_brace_parameter\n  
15477,     moved from Completion/Core/_unset_options\n  
15478,     moved to Completion/Zsh/Type/_options_unset\n  
15479,     moved from Completion/Core/_set_options\n  
15480,     moved to Completion/Zsh/Type/_options_set\n  
15481,     moved from Completion/Builtins/_fg_jobs\n  
15482,     moved to Completion/Zsh/Type/_jobs_fg\n  
15483,     moved from Completion/Builtins/_bg_jobs\n  
15484,     moved to Completion/Zsh/Type/_jobs_bg\n  
15485,     moved from Completion/Builtins/_popd\n  
15486,     moved to Completion/Zsh/Type/_directory_stack\n  
15487,     moved from Completion/Core/_parameters\n  
15488,     moved to Completion/Zsh/Type/_parameters\n  
15489,     moved from Completion/Core/_options\n  
15490,     moved to Completion/Zsh/Type/_options\n  
15491,     moved from Completion/Core/_file_descriptors\n  
15492,     moved to Completion/Zsh/Type/_file_descriptors\n  
15493,     moved from Completion/Builtins/_vars\n  
15494,     moved to Completion/Zsh/Type/_vars\n  
15495,     moved from Completion/Builtins/_limits\n  
15496,     moved to Completion/Zsh/Type/_limits\n  
15497,     moved from Completion/Builtins/_functions\n  
15498,     moved to Completion/Zsh/Type/_functions\n  
15499,     moved from Completion/Builtins/_arrays\n  
15500,     moved to Completion/Zsh/Type/_arrays\n  
15501,     moved from Completion/Builtins/_aliases\n  
15502,     moved to Completion/Zsh/Type/_aliases\n  
15503,     moved from Completion/Base/_jobs\n  
15504,     moved to Completion/Zsh/Type/_jobs\n  
15505,     moved from Completion/Base/_command_names\n  
15506,     moved to Completion/Zsh/Type/_command_names\n  
15507,     moved from Completion/Commands/_read_comp\n  
15508,     moved to Completion/Base/Widget/_read_comp\n  
15509,     moved from Completion/Commands/_next_tags\n  
15510,     moved to Completion/Base/Widget/_next_tags\n  
15511,     moved from Completion/Commands/_most_recent_file\n  
15512,     moved to Completion/Base/Widget/_most_recent_file\n  
15513,     moved from Completion/Commands/_history_complete_word\n  
15514,     moved to Completion/Base/Widget/_history_complete_word\n  
15515,     moved from Completion/Commands/_generic\n  
15516,     moved to Completion/Base/Widget/_generic\n  
15517,     moved from Completion/Commands/_expand_word\n  
15518,     moved to Completion/Base/Widget/_expand_word\n  
15519,     moved from Completion/Commands/_correct_word\n  
15520,     moved to Completion/Base/Widget/_correct_word\n  
15521,     moved from Completion/Commands/_correct_filename\n  
15522,     moved to Completion/Base/Widget/_correct_filename\n  
15523,     moved from Completion/Commands/_complete_tag\n  
15524,     moved to Completion/Base/Widget/_complete_tag\n  
15525,     moved from Completion/Commands/_complete_help\n  
15526,     moved to Completion/Base/Widget/_complete_help\n  
15527,     moved from Completion/Commands/_complete_debug\n  
15528,     moved to Completion/Base/Widget/_complete_debug\n  
15529,     moved from Completion/Commands/_bash_completions\n  
15530,     moved to Completion/Base/Widget/_bash_completions\n  
15531,     moved from Completion/Core/_call\n  
15532,     moved to Completion/Base/Utility/_call_program\n  
15533,     moved from Completion/Core/_funcall\n  
15534,     moved to Completion/Base/Utility/_call_function\n  
15535,     moved from Completion/Core/_sep_parts\n  
15536,     moved to Completion/Base/Utility/_sep_parts\n  
15537,     moved from Completion/Core/_multi_parts\n  
15538,     moved to Completion/Base/Utility/_multi_parts\n  
15539,     moved from Completion/Core/_alternative\n  
15540,     moved to Completion/Base/Utility/_alternative\n  
15541,     moved from Completion/Builtins/_nothing\n  
15542,     moved to Completion/Base/Utility/_nothing\n  
15543,     moved from Completion/Base/_values\n  
15544,     moved to Completion/Base/Utility/_values\n  
15545,     moved from Completion/Base/_sub_commands\n  
15546,     moved to Completion/Base/Utility/_sub_commands\n  
15547,     moved from Completion/Base/_store_cache\n  
15548,     moved to Completion/Base/Utility/_store_cache\n  
15549,     moved from Completion/Base/_retrieve_cache\n  
15550,     moved to Completion/Base/Utility/_retrieve_cache\n  
15551,     moved from Completion/Base/_regex_arguments\n  
15552,     moved to Completion/Base/Utility/_regex_arguments\n  
15553,     moved from Completion/Base/_describe\n  
15554,     moved to Completion/Base/Utility/_describe\n  
15555,     moved from Completion/Core/_compalso\n  
15556,     moved to Completion/Base/Utility/_contexts\n  
15557,     moved from Completion/Base/_combination\n  
15558,     moved to Completion/Base/Utility/_combination\n  
15559,     moved from Completion/Base/_cache_invalid\n  
15560,     moved to Completion/Base/Utility/_cache_invalid\n  
15561,     moved from Completion/Base/_arguments\n  
15562,     moved to Completion/Base/Utility/_arguments\n  
15563,     moved from Completion/Base/_arg_compile\n  
15564,     moved to Completion/Base/Utility/_arg_compile\n  
15565,     moved from Completion/Core/_prefix\n  
15566,     moved to Completion/Base/Completer/_prefix\n  
15567,     moved from Completion/Core/_oldlist\n  
15568,     moved to Completion/Base/Completer/_oldlist\n  
15569,     moved from Completion/Core/_menu\n  
15570,     moved to Completion/Base/Completer/_menu\n  
15571,     moved from Completion/Core/_match\n  
15572,     moved to Completion/Base/Completer/_match\n  
15573,     moved from Completion/Core/_list\n  
15574,     moved to Completion/Base/Completer/_list\n  
15575,     moved from Completion/Core/_ignored\n  
15576,     moved to Completion/Base/Completer/_ignored\n  
15577,     moved from Completion/Core/_history\n  
15578,     moved to Completion/Base/Completer/_history\n  
15579,     moved from Completion/Core/_expand_alias\n  
15580,     moved to Completion/Base/Completer/_expand_alias\n  
15581,     moved from Completion/Core/_expand\n  
15582,     moved to Completion/Base/Completer/_expand\n  
15583,     moved from Completion/Core/_correct\n  
15584,     moved to Completion/Base/Completer/_correct\n  
15585,     moved from Completion/Core/_complete\n  
15586,     moved to Completion/Base/Completer/_complete\n  
15587,     moved from Completion/Core/_approximate\n  
15588,     moved to Completion/Base/Completer/_approximate\n  
15589,     moved from Completion/Core/_all_matches\n  
15590,     moved to Completion/Base/Completer/_all_matches\n  
15591,     moved from Completion/Core/_wanted\n  
15592,     moved to Completion/Base/Core/_wanted\n  
15593,     moved from Completion/Core/_tags\n  
15594,     moved to Completion/Base/Core/_tags\n  
15595,     moved from Completion/Core/_setup\n  
15596,     moved from Completion/Core/_requested\n  
15597,     moved to Completion/Base/Core/_requested\n  
15598,     moved from Completion/Core/_normal\n  
15599,     moved to Completion/Base/Core/_normal\n  
15600,     moved from Completion/Core/_next_label\n  
15601,     moved to Completion/Base/Core/_next_label\n  
15602,     moved from Completion/Core/_message\n  
15603,     moved to Completion/Base/Core/_message\n  
15604,     moved from Completion/Core/_main_complete\n  
15605,     moved to Completion/Base/Core/_main_complete\n  
15606,     moved from Completion/Core/_description\n  
15607,     moved to Completion/Base/Core/_description\n  
15608,     moved from Completion/Core/_all_labels\n  
15609,     moved to Completion/Base/Core/_all_labels\n  
15610,     moved from Completion/Core/compinstall\n  
15611,     moved to Completion/compinstall\n  
15612,     moved from Completion/Core/compinit\n  
15613,     moved to Completion/compinit\n  
15614,     moved from Completion/Core/compdump\n  
15615,     moved to Completion/compdump\n  
15616,     moved from Completion/Core/compaudit\n  
15617,     make `_arguments -S  still complete long options after `--<TAB> ; fix for cursor positioning with partial word match specs (13868)\n  
15618,     13866: apt-get install pinning\n  
15619,     13864: apt-get -t <release name>\n  
15620,     various doc fixes and minor completion function changes  most of which\nare to use the -A  -*  and -S options to _arguments (13863)\n  
15621,     Completion for apm command (linux only) \n  
15622,     13860: caching layer support in _deb_packages\n  
15623,     Fix problem with traps not runing if shell exec d final command\n  
15624,     13845  13486\n  
15625,     Print hash marks for progress \n  
15626,     Refuse to setopt noexec when interactive\n  
15627,     Don t assume we can change the string for the HOST parameter when used in\na prompt\n  
15628,     disallow changing of parameter type\nfor autoloadable parameter (bug 219459 on Sourceforge) \n  
15629,     fix comparison of expansions with expanded prefix (missing quoting) (13833)\n  
15630,     next try to get rid of empty strings being added as possible completion by _multi_parts (13830)\n  
15631,     Man page formatting tweak from long ago \n  
15632,     Add `bindkey -p \n  
15633,     move ZLE builtin documentation from mod_zle yo to zle yo \n  
15634,     more cleanup; simplify the stop and liststyles; try to make it obey whatever _main_complete says should be done (menu-wise) (13815)\n  
15635,     replace `path  with more general `urls  style (13814)\n  
15636,     *** empty log message ***\n  
15637,     Typo in _complete_tag\n  
15638,     don t add options as completions if a `->state  action was used and we are directly after the option (in the same word) (13809)\n  
15639,     make _arguments return 300 only if given the -R option (13790)\n  
15640,     comment out looking up the prefix-needed style when completing directory stack entries; make _tilde use _popd  finally (13789)\n  
15641,     try to make _h_c_w smarter at the beginning and end of the list; avoid list-beeping if the old completion list is re-used (3752)\n  
15642,     13779/13783: fixes from Michal Politowski\n  
15643,     13777: maxfilelocks limit for glibc2 2\n  
15644,     handle colons in xor lists (13770)\n  
15645,     unset ZLS_COLORS if list-colors not set (13768)\n  
15646,     avoid adding empty strings to the kill ring (13767)\n  
15647,     _pids shouldn t start menu completion if the current word starts with a hyphen; typo fix in compsys yo (13763)\n  
15648,     Discourage use of sample startup files as /etc/z* \n  
15649,     New _cpio\n  
15650,     A couple of regression tests \n  
15651,     stop LC_COLLATE reordering things in tests\n  
15652,     More minor test fixes \n  
15653,     Handle @folder for MH in _mailboxes\n  
15654,     Fixes for mh completions \n  
15655,     Clean up grammar tests \n  
15656,     don t auto-start menu completion after a `%  when completing pids or jobs (13733)\n  
15657,     probably no reason to put the (#a?) flag after an initial tilde in _approximate anymore (13730)\n  
15658,     fix\n  
15659,     add commands and call-command styles; mention some of the more expensive things about completion setup in the docs (13727)\n  
15660,     test if the colon is quoted (13725)\n  
15661,     fixlet  complicated match specs could result in incorrect words being used as possible path expansions (13724)\n  
15662,     Some tweaks for nmh in _mh\n  
15663,     skip redirections in execpline2() when looking for the command code (13706)\n  
15664,     Tweak an expansion \n  
15665,     use -l as default for telnet s without -\\? option (13674)\n  
15666,     fix misaligned percent output of zprof (13673)\n  
15667,     13664pt2: Back out Completion/SysV\n  
15668,     13664: */rcS d/* force-reload  force-restart\n  
15669,     metafaq: shorter address for Israeli mirror\n  
15670,     13662: apt-get build-dep completion\n  
15671,     13661: complete args for SysV initscripts\n  
15672,     Add zkdb function \n  
15673,     users/3671: Completion/User/_java: tweak for colon-separated paths\n  
15674,     fix default colour for directories (3674)\n  
15675,     13633: don t use termcap cursor keys if single key which is already bound\n  
15676,     Add D qualifier in _rcs \n  
15677,     Unify completion for ncftp and lftp in _ncftp\n  
15678,     13611  13615: Bind cursor keys using termcap  including in viins \n  
15679,     spelling corrections (13610)\n  
15680,     fix to declare tmp variable as local\n  
15681,     Oups bad changelog \n  
15682,     New tar options -j \n  
15683,     fix filename quoting in _zip and don t use _hosts for lftp\n  
15684,     Add _lftp \n  
15685,     Add completion for lftp\n  
15686,     Various new  improved  fixed or updated functions (13600)\n  
15687,     zsh-workers 13562 13598 13599\n  
15688,     Use _normal completion following the name of a shell script \n  
15689,     Handle quoted whitespace in glob expansions \n  
15690,     Better handling of multi-line buffers \n  
15691,     Dist more files\n  
15692,     4 0 1-pre-2\n  
15693,     try to find out the sub commands to complete in _init_d (13591)\n  
15694,     Another testcase that covers the bug mentioned in workers/13563  The case is based on a bug mentioned in workers/13320\n  
15695,     Minor errors in 54compmatch doc strings\n  
15696,     two optimisations\n  
15697,     unposted: support build with GCC on ReliantUNIX\n  
15698,     don t complete w3m from _webbrowser now we have _w3m (unposted)\n  
15699,     include _w3m in  distfiles\n  
15700,     unposted: complete for w3m\n  
15701,     make the parser use real memory for the ecbuf to avoid having hrealloc() throw away lots of memory (13576)\n  
15702,     another fix for completion matching  CLF_MISS in the wrong cline struct (13575)\n  
15703,     unposted: change my address to bor@zsh org\n  
15704,     13544  13568 (Peter): + syntax for matchers in matcher-list to augment\nprevious list\n  
15705,     new _expand_aliases to  well  expand aliases (13566)\n  
15706,     fix for matching control  try harder to merge separately completed parts to avoid losing user-typed characters (13565)\n  
15707,     latest FAQ\n  
15708,     News and contributors for 4 0 1\n  
15709,     Use ksh-style deref of $_comp_options in case of ksharrays \n  
15710,     Work when ksh_arrays is set but before the setopt takes effect (13555)\n  
15711,     add `aliases  option to be able to disable alias expansion (13554)\n  
15712,     Message for _vars_eq  13520\n  
15713,     some small functions for completing sub-commands (generic function  init scripts  apachectl) (13536)\n  
15714,     change $words[1  to $service in some more places (13534)\n  
15715,     properly restore noaliases in bufferwords() (13530)\n  
15716,     13520: use services and shorten description in _vars_eq\n  
15717,     more (|un)queue_signals()  this time for the job control builtins (13509)\n  
15718,     13280: NewImproved handling of colon modifiers w r t  paths\n  
15719,     ?## fix from 13497 and site name change from Geoff\n  
15720,     Fix  $ =foo=$@   \n  
15721,     make `compdef foo=bar  use the service defined for `bar  if there is any (13494)\n  
15722,     Partial sh emulation fixs for $ 1+ $@   and  $ foo=$@   \n  
15723,     unposted: corrected date in ChangeLog\n  
15724,     unposted: remove unused variable declaration\n  
15725,     13478: whence shouldn t segfault on an empty path component\n  
15726,     13473: clean config modules  fix CSH_NULL_GLOB doc\n  
15727,     13323: handle multi-line buffers in edit-command-line widget\n  
15728,     Updated to 4 0 1-pre-1\n  
15729,     13431: better check for shared libraries \n  
15730,     try to make the -t option of zpty smarter (13462)\n  
15731,     wehn using glob_complete  don t treat everything starting with a tilde as a pattern (13459)\n  
15732,     Add  glob  to $_comp_options \n  
15733,     two small fixes to _multi_parts; one more place where a caller-supplied -S can be used and fix for the code deciding which prefix to use (13450)\n  
15734,     add completion for newsgroups (13448)\n  
15735,     fix _gzip to work for zcat again (13445)\n  
15736,     13449:  make clean  cleans up after killed tests \n  
15737,     13442: Use +Z to suppress loading of ZLE modules when testing \n  
15738,     unposted: fix patterns previous patch\n  
15739,     Peter:13427: filename-quoting fix in _expand\n  
15740,     Changes references to sunsite auc dk to just sunsite dk (13422)\n  
15741,     new completion function for the tin newsreader (13420)\n  
15742,     13412: avoid duplicates in subdirecory list for recursive build\n  
15743,     unposted: correct typo in commit message\n  
15744,     zsh-workers/13395: Added code to test compstate[insert_positions   value of insert_positions are now reported\n  
15745,     zsh-workers/13395: Added code to test compstate[insert_positions   value of insert_positions are now reported\n  
15746,     13389: normalize path in cd_do_chdir on Cygwin to get rid of DOS names\n  
15747,     fix for mergin two CLF_MID entries in cline lists (with two equal prefixes it thought there were characters missing) (13388)\n  
15748,     make signal queueing variables be exported to modules (13384)\n  
15749,     *** empty log message ***\n  
15750,     13370: avoid in-place modification of environments variables when importing \nZsh tried to free unallocated memory when importing colon arrays  Removed\nredundant replenv() \n  
15751,     13380: replace AC_CHECK_LIB(    tgetent) with AC_SEARCH_LIBS(tgetent    )\nto make it possible to override default library selected\n  
15752,     *** empty log message ***\n  
15753,     13302: division by zero\n  
15754,     remove 13108 (trap queues); replace with signal queueing to ensure that user signal handlers are only executed when it is safe to run them (13365)\n  
15755,     fix for ol  compctl when completing hash keys (13364)\n  
15756,     two more fixes for completion matching and reporting interesting positions (13349)\n  
15757,     add completion for ls and ([ef |)grep (13347)\n  
15758,     add `services   allowing easier re-use of (parts of) completion functions (13346)\n  
15759,     fix for 13339 (report each position only once) and fixlet for matching: a case where missing characters weren t remembered (13343)\n  
15760,     *** empty log message ***\n  
15761,     Etc/MACHINES: format leading spaces to tabs\n  
15762,     fix cursor positioning with partial-word match specs using `**  (13336)\n  
15763,     fix for listpacked for matches as long as screen is wide (minus added spaces); more security when freeing matches: make sure current menu match pointer isn t used afterwards (13331)\n  
15764,     Builds on SCO UnixWare 2 1 3\n  
15765,     13315: ignore parens and leading paths on killall completion\n  
15766,     13314: don t complete hyphen-prefixed commands for killall\n  
15767,     13312: killall gets long filenames from procps\n  
15768,     unposted: thinko in configure in for determination of jobtable size\n  
15769,     13310: apt-cache typo in --names-only\n  
15770,     Back out 13285 \n  
15771,     13288: cast pointers for arg 2 of ztrapread/write\n  
15772,     13287: dpkg -i can take multiple arguments\n  
15773,     unposted: add _mere to  distfiles\n  
15774,     13285: use vi-up and -down in vicmd mode\n  
15775,     * 13281: Functions/Misc/mere: new implementation \nCompletion/User/_mere: new completion function for mere \n  
15776,     13250: _dict completion\n  
15777,     Rename waitjob() to zwaitjob() \n  
15778,     13243: fix for make distclean - no more Makefile in Functions and Completion\n  
15779,     13242: don t segfault on $terminfo[nonexistentcap \n  
15780,     Fix distribution files\n  
15781,     3 1 9-dev-8\n  
15782,     terminfo tweaks\n  
15783,     Joel Smith: 13230: avoid name clashes with Linux kernel\n  
15784,     Include mod_term* yo in doc source \n  
15785,     13227: terminfo module fixes\n  
15786,     Fix --enable-function-subdirs for new config modules system \n  
15787,     $# doc\n  
15788,     installfns bits\n  
15789,     13216: docs for tc/ti modules\n  
15790,     13215: echotc  echoti  terminfo\n  
15791,     Function installation information now in config modules\n  
15792,     avoid compiler warning\n  
15793,     Add missing quote \n  
15794,     *** empty log message ***\n  
15795,     Fix a few problems with config modules stuff\n  
15796,     either keyword for link module parameter\n  
15797,     13194: change in module configuration system\n  
15798,     ALL_EXPORT tweaks \n  
15799,     * 13181: Completion/Debian/_apt: add an action for _alternative \n  
15800,     Tweak auto-suffix-removal for _rcp and _scp \n  
15801,     Avoid cd in _perl_modules \n  
15802,     Changes inspired by Paul J  in case multiple versions of perl are installed \n  
15803,     don t be sure that read-ahead doesn t contains nuls (13163)\n  
15804,     Update system configuration guessing stuff from GNU \n  
15805,     use unmetafy() to allow writing special characters into a pty (13156)\n  
15806,     unposted: add new options  fix thinkos for reportbug completion\n  
15807,     unposted: complete files for reportbug --include= and completion for querybts\n  
15808,     Restore entry for 13140 \n  
15809,     Sven: 13108: Handle traps synchronously\npws: 13109  13111: clear up zle display when output produced in trap \n  
15810,     13125: evalute muttrc s mailboxes directive in case of backticks \n  
15811,     *** empty log message ***\n  
15812,     Try blocking read() in read_poll() only if select() returns error (or\ndoesn t exist) \n  
15813,     *** empty log message ***\n  
15814,     aloow value `pattern  for insert-unambiguous style to preserve patterns in the original string; add list-suffixes style to make file completion list path suffixes if possible; slightly improved completion of pathnames with multiple pattern-components (13128)\n  
15815,     Remove no-op test of $compstate[nmatches  \n  
15816,     Adapt nslookup for 13123 \n  
15817,     Tweak interactiveness of cloned shell \n  
15818,     Make zpty more like eval \n  
15819,     Assorted read_poll() and zpty cleanup \n  
15820,     Use bareglobqual \n  
15821,     Better streaming behavior from `zpty -r   plus other cleanup \n  
15822,     show current/previous job in $jobstates (3503)\n  
15823,     don t reset just-edited trap function to old value (13107)\n  
15824,     make assignament to $nameddirs behave like hash -d (13095)\n  
15825,     Fix small typos \n  
15826,     use return value of _files  don t use $ PRE SUF FIX for globbing  complete all files as a default for co (3472)\n  
15827,     re-display list for cleanup only if we were in menu selection (13084)\n  
15828,     add a counter for invalidatelist() to allow finding out if there is a new list (13082)\n  
15829,     avoid printing file type characters in completion lists for matches ending in a slash (13071)\n  
15830,     change some tags used in filename completion: no tag for file-sort  fake-files and ignore-parents  paths for accept-exact (13037)\n  
15831,     Fix  vared -e  \n  
15832,     Fix  vared -h  in shell scripts \n  
15833,     simplify setting standard completion system options using $_comp_options (13036)\n  
15834,     make non-blocking IO on ptys work again; add -t option to test if command is still alive (13035)\n  
15835,     Changed Src/hist c (13034) \n  
15836,     Don t call histreduceblanks() if the line didn t parse right \n  
15837,     Typo \n  
15838,     Typo \n  
15839,     Fix release number\n  
15840,     *** empty log message ***\n  
15841,     3 1 6-dev-7\n  
15842,     *** empty log message ***\n  
15843,     Document tty mode restoration \n  
15844,     two completion matching fixes; wrong (path) prefix matching (removed path components) and reverse order of sub-strings in match-strings (12995)\n  
15845,     remove possibility for func() entries in tag-order style  can be done using zstyle -e (12974)\n  
15846,     rename fake style to fake-files (12973)\n  
15847,     12958: configure fix for NCR compiler\n  
15848,     *** empty log message ***\n  
15849,     add _all_matcher completer and supporting C-code for adding a special match representing all other matches; remove completions style from _expand(|_word) (12960)\n  
15850,     make user defined completion widgets leave menu selection without accepting the currently selected match (12959)\n  
15851,     follow-up to 12942  only a missing redirection (12948)\n  
15852,     *** empty log message ***\n  
15853,     add fake-parameters style to allow completing parameters which are not yet set (12946)\n  
15854,     *** empty log message ***\n  
15855,     temporarily remove global aliases to avoid error message inside the evals (12942)\n  
15856,     follow-up to 12930  make it first try exact character matches  but enable it to go back to try match specs if it fails after accepting such character matches (12941)\n  
15857,     Tiny clarification \n  
15858,     prefer exact character matches over match specs (so that `nom  can match `nomatch ) (12930)\n  
15859,     search for * tif file  too (12919)\n  
15860,     more option setting cleanup; remove some unnecessary setopts  remove N qualifiers (12917)\n  
15861,     Other places where `unsetopt cshnullglob  is needed \n  
15862,     autoload --> automount\n  
15863,     cleanup for 12896 (12901)\n  
15864,     unset cshnullglob (12899)\n  
15865,     don t return invalid Eprog after parse error (12898)\n  
15866,     comparguments: don t use rest-argument-specification if it was inactivated (12897)\n  
15867,     cleanup (12896)\n  
15868,     complete after autoloaded directories (a rather ugly hack); remove old code in _files (comma separated patterns); improve docs for fake style and for comma separated qualifier lists (12892)\n  
15869,     * 12886: Completion/User/_cvs: make _cvs_vendor_branches to handle\nremote-access style \n  
15870,     don t stop parsing too early when completing inside a command substitution (12885)\n  
15871,     don t forget a displayed list when starting menu completion (12884)\n  
15872,     * 12872: Completion/User/_cvs: Fix modules completion when a cvsroot\nspecified in a command line begins with tilde   Generate subcommand\nlist from `cvs --help-commands  and `cvs --help-synonyms    Complete\nremote modules  Complete vendor branch for a second argument of\n`cvs import    Use _call \n  
15873,     Change some zerr to zwarn for consistency \n  
15874,     unposted: remove unused variable declaration from ztat()\n  
15875,     12863: remove ztrdupstrip  use VARARR in ztat\n  
15876,     Tweak to STTY fix \n  
15877,     Fix STTY parameter \n  
15878,     12860: don t limit size of pwd in job table\n  
15879,     12859: dynamically-allocate buffer in ztat()  ztrdupstring()\n  
15880,     Fiddle with _expand_word and its doc \n  
15881,     12848: Doc/Zsh/zle yo: Alphabetize list of parameters\n  
15882,     12842 with corrections of Bart: Doc/Zsh/contrib yo: Clarify digest file usage \n  
15883,     12847: dynamically allocate buf and z in bin_whence()\n  
15884,     12846: moved simple string manipulation functions to string c\n  
15885,     12845: dynamically allocate pbuf in domove()\n  
15886,     12835: Alphabetize special parameters list (retry broken commit)\n  
15887,     12835: Alphabetize special parameters list\nUnposted: correct article number in Clint s patch\n  
15888,     12836: bin_ln now independent of PATH_MAX\n  
15889,     Back out 12814 \n  
15890,     Back out 12814 \n  
15891,     Improve upon some of the PATH_MAX changes \n  
15892,     12828: dynamically allocate  dir  in mailstat\n  
15893,     12827: dynamically allocate  file  in mailstat\n  
15894,     unposted: define mailstat as a macro if MAILDIR_SUPPORT is undefined\n  
15895,     12823: use zsh heap in lieu of perm  heap in bin_dot\n  
15896,     12821: bin_dot is now independent of PATH_MAX\n  
15897,      typeset +m      and  typeset +g -m     \n  
15898,     12818: use tricat() in lieu of zasprintf\n  
15899,     12814: zasprintf\n  
15900,     One more  wordcode  change \n  
15901,     Fix email addresses  mention change to contrib yo \n  
15902,     Use $ (q)tmp  after all \n  
15903,     12804: Fix  typeset -m  \n  
15904,     Add smart-insert-last-word \n  
15905,     Redo _zle using _arguments; fix typos \n  
15906,     12779: remove sinix special case  Too lazy to add prototype check for\ngettimeofday as it is not needed with currently supported versions of\nReliantUNIX\n  
15907,     Add smart-insert-last-word \n  
15908,     more sensible value (12769)\n  
15909,     stick some `N s into glob patterns (12768)\n  
15910,     No  wordcode  \n  
15911,     unposted: Remove patch from 12686 that was accidentally commited\n  
15912,     No  wordcode  \n  
15913,     12762: Akinori MUSHA: changes for new FreeBSD releases \n  
15914,     12761: `` is converted into   by makeinfo; use `@:` instead; use `  ` for tex\n  
15915,     Add a cross reference and some completer hints \n  
15916,     *** empty log message ***\n  
15917,     change context for i-c-w styles  update docs (12744)\n  
15918,     Fix typo \n  
15919,     Create  User Contributions  doc and make some assoctiated changes \n  
15920,     12741: outputradix was stomped on by nested matheval\n  
15921,     12736: fix `make install  dependency for Cygwin static build\n  
15922,     3 1 9-dev-6\n  
15923,     Fix colors \n  
15924,     Fix 12722 \n  
15925,     Fix zrecompile \n  
15926,     12728: man -l / --local-file completes _files\n  
15927,     Fix helpfiles \n  
15928,     Fix reporter \n  
15929,     12722: [##base  for output base selection without a base prefix\n  
15930,     fix up missing message numbers\n  
15931,     Fix allopt \n  
15932,     12720: replace _files with _path_files for two instances in _dpkg\n  
15933,     12719: quoting arrays in vared with real backslashes\n  
15934,     fix for unbalanced calls to  push pop heap in docomplete()/get_comp_string() (12717)\n  
15935,     Fix email address\n  
15936,     12716: Document and index REPLY/reply paramters properly \n  
15937,     fix for `function  without names (12710)\n  
15938,     new AIX specific completion function (12708)\n  
15939,     complete compressed files for gv; improve results from _pspdf (12692)\n  
15940,     use return value (12682)\n  
15941,     enhance _zmodload to use _arguments (12677)\n  
15942,     Src/ cvsignore fix for Windows resources and icon\n  
15943,     pws/Andrej: 12594  12661: Windows resources and icon\n  
15944,     12658: cscope ignorance\n  
15945,     make $modules report aliases correctly (12654)\n  
15946,     remove unnecessary local\n  
15947,     12650: don t show aliased modules if there aren t any\n  
15948,     12652: Variable scoping problem \n  
15949,     call ps only once and be more intelligent when finding the PIDs (12640)\n  
15950,     small improvement to allow lists where the pid is not in the first column (12635)\n  
15951,     Andrej  12623: Fix dynamic linking for cygwin \n  
15952,     12621: Avoid bad free \n  
15953,     Andrej  12620: Fix up mmap tests \n  
15954,     12614 and 12617 \n  
15955,     12617: Use AC_FUNC_MMAP \n  
15956,     Andrej  12614: DLL is a shared library suffix \n  
15957,     Andrej  12614: Clean zpty module after testing \n  
15958,     missing mod_export (12613)\n  
15959,     make all builtins in computil test if they were called from a completion function (12610)\n  
15960,     12604: Remove calls to zpathmax()  minor fixes to zopenmax() \n  
15961,     12601: Tweak --enable-cflags et al \n  
15962,     12598: configure takes --enable-cflags=    etc  arguments\n  
15963,     12596: Update INSTALL for module aliasing changes \n  
15964,     fixes for completion in math contexts (12592)\n  
15965,     3 1 9-dev-5\n  
15966,     Minor documentation fixes (12585)\n  
15967,     add -g option to _parameters to restrict type of parameters completed (12583)\n  
15968,     add -g option to _parameters to restrict type of parameters completed (12583)\n  
15969,     12582: improved first argument for is-at-least\n  
15970,     12581: C_BASES option\n  
15971,     new completion for read builtin (12578)\n  
15972,     12568: check sysconf(_SC_OPEN_MAX) if available instead of OPEN_MAX/NOFILES \n  
15973,     handle the right option in strings with multiple single-letter options (and correctly handle its argument) (12567)\n  
15974,     more fixes for completion of special characters (quoting) (12565)\n  
15975,     unposted: Remove Src/Aliases stuff and remove aliased modules from xmods conf\n  
15976,     12561: Completion/Builtins/_zmodload  Doc/Zsh/builtins yo \nSrc/builtin c  Src/module c  Src/zsh h: aliases for modules\ndone internally via `zmodload -[AR  \n  
15977,     12561: Completion/Builtins/_zmodload  Doc/Zsh/builtins yo \nSrc/builtin c  Src/module c  Src/zsh h: aliases for modules\ndone internally via `zmodload -[AR  \n  
15978,     users/3358: Zero shout when closing SHTTY in subshells \n  
15979,     12555: fix static linking on cygwin\n  
15980,     12549: Typo in 12547 \n  
15981,     12548: Tweak 12547 \n  
15982,     12547: Handle ENOENT and ENOTDIR in zpathmax() \n  
15983,     12541: zrealpath wrapper around realpath()\n  
15984,     12533: pathconf() without tail in mkdir\n  
15985,     remove (wrong) test for linked-in modules in require_module() (12525)\n  
15986,     15216: Rewrite pathconf() support \n  
15987,     quoting\n  
15988,     12501: Andrej: use zgetenv  zputenv\n  
15989,     small fix for `read -r  doc (12497)\n  
15990,     one more problem with quoting of glob characters in filename completion (12496)\n  
15991,     make binding of ^D be used in first column if ignoreeof is set and ^D is bound to a shell function widget (12494)\n  
15992,     Andrej: Dynamic loading on cygwin\n  
15993,     12489: pathconf for unlimited fs\n  
15994,     12472: limited pathconf support\n  
15995,     12486: new completion caching layer\n  
15996,     if compcontext is an assoc  the keys are the completions and the values are their descriptions (12483)\n  
15997,     prefer user-defined specs over ones derived from --help output (12475)\n  
15998,     *** empty log message ***\n  
15999,     new completion function for slrn (12463)\n  
16000,     fix for automatically recognised options  don t expect an argument after each of them (12462)\n  
16001,     remove tests for kshautoload (use zcompile -z); fix for setting scriptname for functions that redefine themselves\n  
16002,     remove tests for kshautoload (use zcompile -z); fix for setting scriptname for functions that redefine themselves (12453)\n  
16003,     make $compcontext more powerful and easier to use for simple cases\n  
16004,     make $compcontext more powerful and easier to use for simple cases (12449)\n  
16005,     Add compaudit to  distfiles; 3 1 9-dev-4\n  
16006,     isalpha() -> ialpha(); avoid a compiler warning (12439)\n  
16007,     clarify manual for menu style; select= and yes= may be given both a number and one of the long* values at the same time (12438)\n  
16008,     12436: Doc/Zsh/invoke yo  Src/init c: Make -b behave like\nthe csh -b  permitting more options to be stacked after it and\ntake effect   Make -b take effect depending on SH_OPTION_LETTERS \nconsistent with all the other single-letter options  rather than\nhaving a clashing check of emulation type \n  
16009,     12434: Doc/Zsh/invoke yo  Src/init c  Src/options c  Src/zsh h \nSrc/zsh mdd: Allow options to be specified on the zsh command line\nin the form of GNU-style long options   Also handle --version\nand --help   Do not permit extra option letters to be stacked\nafter `-whatever-  (they used to be ignored)   Exit if the\ncommand line specifies an option name that doesn t exist \n  
16010,     The `wait  builtin accepts only PIDs it can find in the job table \n  
16011,     12421: extra tab in Makemod in in\n  
16012,     12411  12419: Andrej: environment handling with fewer assumptions\n  
16013,     12415: fix bug in last patch when quoting metafied field separator \n  
16014,     12414: vared quotes separators when editing arrays\n  
16015,     fix completion test (55*) because of 12394 (12408)\n  
16016,     fix a bug that started menu selection too often; fix bug for `yes=long  and document it (12405)\n  
16017,     compdescribe shouldn t use the sets after failed initialisation\n  
16018,     Detect autoloadable functions properly in zed \n  
16019,     don t hide possible completions if there is only one and at the same time messages are shown (12394)\n  
16020,     -e  -I  -m and -M parameters can be specified multiple times\n  
16021,     unposted: -e  -I  -m and -M parameters can be specified multiple times\n  
16022,     Andrej/pws: 12381: tgetent accepts NULL test  cygwin  Windows 2000\n  
16023,     Fix an incorrect article attribution \n  
16024,     Enable the insert-tab style in zed \n  
16025,     Belatedly fold in 12162  to replace command subst with eval \n  
16026,     Move compinit security checks into compaudit \n  
16027,     make `_arguments --  use specs after the `--  even for options not described in the help output to get arguments (12378)\n  
16028,     allow _value:<assoc> functions to override completion for all keys of an assoc (3337)\n  
16029,     use mhpath and mhparams commands instead of guessing directories (12356)\n  
16030,     optimisations for _multi_parts (12354)\n  
16031,     12347: 3 mutt options are repeatable\n  
16032,     fix parsing of `time  without a command (12337)\n  
16033,     Tweaked a function name in hist c \n  
16034,     Renamed shouldIgnoreLine() to should_ignore_line() \n  
16035,     Put reordered log entry back and corrected the date \n  
16036,     Reorder the changelog \n  
16037,     12239: prefer curses to termcap on solaris\n  
16038,     Discard stderr of a command subst \n  
16039,     Fix bad conflict resolution \n  
16040,     Comments for 12323 \n  
16041,     Support  builtin  in the HIST_NO_STORE check \n  
16042,     Get also /usr/share/man \n  
16043,     Comments for 12318 \n  
16044,     Mention the space-starting-alias feature in HIST_IGNORE_SPACE \n  
16045,     Removed remhist() and HA_JUNKED  added an Eprog arg to hend()  and\nadded the shouldIgnoreLine() function that hend() now calls to figure\nout if it needs to save the line or not \n  
16046,     Call hend() with a NULL arg \n  
16047,     Pass the new Eprog argument to hend() \n  
16048,     Removed call to remhist() \n  
16049,     If an alias starts with a space  set aliasspaceflag to 1 instead of\ncalling remhist() \n  
16050,     Define aliasspaceflag  and init it in parse_event() \n  
16051,     a bit of security for a VARARR() (12314)\n  
16052,     12313: bad phrasing in metafaq\n  
16053,     12308: Andrej and pws: _man formats  again\n  
16054,     don t let duplicate matches keep us from recognising exact matches if they produce the same string on the line (12297)\n  
16055,     Comments for 12295 \n  
16056,     Changed several references to curhist into curline histnum so that\nthey would work right even if we didn t store the current command\nin the history \n  
16057,     + Got rid of the spaceflag variable \n+ Make sure that the curline histnum variable is accurate at the end\n  of our history processing  even if we read in some foreign history\n  and/or if we replaced the prior line because it was a duplicate of\n  the current one   This enables the history (fc -l) command to work\n  properly  even if the current command was HIST_NO_SPACE-ed away \n+ Don t allow remhist() to remove the last line in the history if we\n  didn t store the current command \n  
16058,     Removed the spaceflag variable \n  
16059,     fix date \n  
16060,     * 12274: Test/53completion ztst  Test/55arguments ztst \nTest/ distfiles: separates _arguments tests \n  
16061,     3 1 9-dev-3\n  
16062,     don t treat non-option arguments as options (12266)\n  
16063,     Added comment for patch 12265 \n  
16064,     Fix the gethistent() function and enhanced the reliability of the\nSHARE_HISTORY option \n  
16065,     Comments for 12260 \n  
16066,     Got rid of a bogus email address for me \n  
16067,     + Needed to call unmeta() in a few spots that used the HISTFILE name \n+ The non-HAVE_LINK code in lockhistfile() was broken in a number of ways \n+ Added an extra unlink() call to the HAVE_LINK code in lockhistfile()\n  since (Linix at least says that) O_EXCL over NFS is broken \n  
16068,     12247: internal hostnam variable removed in favour of $HOST\n  
16069,     condition parsing with (z) flag\n  
16070,     12242: based on code from Fr  Br  George (George V Kouryachy):\nuse negative integers in prompt to count from other end of string\n  
16071,     fix for _arguments with single-letter options: recognize option-strings with multiple options; in _main_complete stop trying completers when one called _message  don t display warnings in such cases (12241)\n  
16072,     fix zle widget -n num with num>9 (12238)\n  
16073,     slightly improved (z) flag for parsing conditions; recognising glob flags in conditions still doesn t work (12237)\n  
16074,     Delete stray  a  \n  
16075,     12231: fix compinstall list-prompt setting\n  
16076,     fix for list-prompt docs (12229)\n  
16077,     fix for (z) flag  don t take # as comment (12228)\n  
16078,     12227: select-prompt handled by compinstall\n  
16079,     don t start menu selection with only select=long (12226)\n  
16080,     check if options were completed (12225)\n  
16081,     12222: handle EINTR for multios helper processes\n  
16082,     12220: message for missing autoload function\n  
16083,     Complete all process IDs for root in _killall  as suggested in 12202 et al \n  
16084,     avoid insertion of `+  before ~1/<TAB>; don t use undeclared local $tmp (12208)\n  
16085,     * 12201: Completion/User/_java: fix completion for jar  complete\npackage qualified class names  fix typos \n  
16086,     12193: Rather than replace @RLIMITS_INC_H@ with /dev/null on platforms where\ngetrlimit() is not found  replace it with nothing and append /dev/null to\nthe awk command in rlimits mdd  so that we don t end up with a dependency of\nrlimits h on /dev/null (which can cause rlimits h to be needlessly remade) \n  
16087,     Completion/AIX/ distfiles update\n  
16088,     updates and additions to completions for AIX commands\n  
16089,     mention more standard tags in documentation and fix some typos (12177)\n  
16090,     get return status right (12171)\n  
16091,     *** empty log message ***\n  
16092,     12167: Ignore failure of  for  loop in  make check  \n  
16093,     new completion function for arp (12165)\n  
16094,     12160: Cause compdump to fail early if it won t be able to write the file \n  
16095,     AIX dependency fixes\n  
16096,     shut compiler up\n  
16097,     12149: guard against undefined h_errno in zftp\n  
16098,     add some $(print   )s because of possible math-parse errors (12156)\n  
16099,     12151: Fix ZDOTDIR during  make check  for static builds \n  
16100,     12152: tweak completion of final parameters to perl\n  
16101,     12148: Don t merge display-ordering glob flags into the parens of $(   ) \n  
16102,     12146: reintroduce install_info code\n  
16103,     12140: make key rebinding for _expand complter easier\n  
16104,     3 1 9-dev-2\n  
16105,     12138: setting arrays in math context\n  
16106,     12121: stopmsg in precmd\n  
16107,     change format style with warnings tag  don t add descriptions as matches; make a-a-i-n-h in menu selection work even without matches (12134)\n  
16108,     12133: Protect completion system from stray error output and assorted fatal\nerrors when expanding strings taken from the command line \n  
16109,     fix for `foo () print bar  (function definitions without braces) (12125)\n  
16110,     reverse meaning of yes=num again (12122)\n  
16111,     try to return the right value (12119)\n  
16112,     don t expand partially typed parameter expansions (12118)\n  
16113,     change suffix style to still do expansion if the suffix contains something to expand (12115)\n  
16114,     even more fun with the menu style (no=num  yes=long-list  reverse meaning of yes=num) (12114)\n  
16115,     quote brace-strings (12113)\n  
16116,     12112: Don t make namedirs out of hash elements \n  
16117,     make _complete return the right value (12109)\n  
16118,     fix for list-colors handling (12107)\n  
16119,     reset _comp_mesg (saying whether there were messages) appropriately (12105)\n  
16120,     misc\n  
16121,     make _oldlist not use the dummy match added for the warning (12099)\n  
16122,     make a-a-i-n-h in menu selection work with one match; better undo behaviour for menu selection (12093)\n  
16123,     12086: Alphabetize \n  
16124,     12086: Alphabetize new entries in compsys yo; stick users/ on article number\nreferences that came from the zsh-users list \n  
16125,     menu style accepts yes=x to start menu completion if there are at least x matches (3219)\n  
16126,     Andrej: don t close slave if not yet open (12084)\n  
16127,     document _use_lo (12082)\n  
16128,     Andrej: 12081: zpty under cygwin\n  
16129,     unposted: move poll_read\n  
16130,     12076: better saving in file in compinstall\n  
16131,     12074: Remove one more reference to compfmt; add missing menu items \n  
16132,     12073: read -t to test for available input before reading\n  
16133,     default completion even if there are options (3208)\n  
16134,     fix for completer lookup in _ignored (12070)\n  
16135,     remove compfmt; a bit of explanation for compfiles and compgroups (12068)\n  
16136,     typo in _history; missing free()s in zle_tricky c (12067)\n  
16137,     missing allocation of list for option arguments (12066)\n  
16138,     12063: Assorted typo-squashing and reformatting \n  
16139,     12044: read -A bug\n  
16140,     compinit some more (12043)\n  
16141,     even more compiinit stuff  change prompt  search for insecure parent dirs (12041)\n  
16142,     12040: typeset -r bug\n  
16143,     Fix comptest interaction with compinit \n  
16144,     followup to compinit-security patch (12033)\n  
16145,     *** empty log message ***\n  
16146,     allow subscripts for compadd -[ak ; new style for history completion; better list-colors handling (12029)\n  
16147,     12027: mutt smarts for _mailboxes\n  
16148,     12024: handle multiple mailboxes lines in muttrc\n  
16149,     * 12019: Completion/User/_ssh: upgrade to the last openssh\noptions \n  
16150,     make history completion use I PREF SUF FIX (12011)\n  
16151,     AIX dependency fix\n  
16152,     12000: zmv: emulate -R to unset MARKDIRS\n  
16153,     *** empty log message ***\n  
16154,     a bit of security for compinit (avoid using things writable by others); avoid handling files with the same name twice; remove compconf (11998)\n  
16155,     make undo break out of menu selection if nothing to undo inside it (11992)\n  
16156,     _arguments: small fix for -s and new `!     for things not to complete (but to understand) (11985)\n  
16157,     update comptest to not set ZLS_COLORS directly (11982)\n  
16158,     more careful when optimising patterns in compfiles (11981)\n  
16159,     new match spec characters bBeE  match only word/line not both (11977)\n  
16160,     allow _expand to expand braces; better detection of braces to complete in C (11973)\n  
16161,     improve filename completion; use accept-exact for in-path completion; new fake style (11971)\n  
16162,      distfiles additions\n  
16163,     users/3189: zmv fixes\nVersion 3 1 9-dev-1\n  
16164,     restore ZLS_COLORS when possible; better group-name handling in ZLS_COLORS (3188)\n  
16165,     11966: double brackets around comparison to prevent  command not found: no \n  
16166,     Fix parsing of := for magicequalsubst \n  
16167,     11959: Completion/User/_urls: make it magicequalsubst aware \n\n(not posted): Completion/User/ distfiles: add `_java  \n  
16168,     11958: Completion/User/_java: new completion for Java \n  
16169,     Add a test for cascaded case statement \n  
16170,     11956: Fix off-by-one error \n  
16171,     11951: _dpkg tweak for install and record-avail\n  
16172,     allow completion after `a  b c   ; fix for closing brace re-insertion when completing from both ends (CLF_MID) (11939)\n  
16173,     enhance ignore-line to ignore all/current/other word(s) (11938)\n  
16174,     zstyle -e option; change math-styles to boolean ones; change defaults for _expand styles (11937)\n  
16175,     more security in completion matching (11924)\n  
16176,     11908: compmatch tests\n  
16177,     as 11916: ChangeLog split\n  
16178,     make _files try each pattern only once (and stop after `* ) (11915)\n  
16179,     Delete stray whitespace \n  
16180,     fix for _arguments  it took non-option strings as options (11910)\n  
16181,     11906: yet two more saving trap bugs\n  
16182,     Handle new suffix style with arrays (11903)\n  
16183,     11902: SIGWINCH local trap test\n  
16184,     11901: two more trap saving bugs\n  
16185,     11895: trap exit problem when exiting from function scope\n  
16186,     *** empty log message ***\n  
16187,     *** empty log message ***\n  
16188,     nix kaboom with `time time  (?)\n  
16189,     better fix for menu selection on dumb terminal (11885?)\n  
16190,     Added article number for 11882 \n  
16191,     11877: ChangeLog only\n  
16192,     ?????: dpkg completion improvements\n  
16193,     Added patch numbers to Sven s entries \n  
16194,     make -A take a pattern as argument to match non-arguments; allow single-letter option strings to have multiple arguments; fix to allow option completion with multiple sets (?)\n  
16195,     new _generic widget to call completion with $WIDGET in function field of context (?)\n  
16196,     allow insert-tab to contain `pending[=num   to handle the case when there is pending input (?)\n  
16197,     new style `suffix ; use accept-exact style in _expand (?)\n  
16198,     fix for longer capability strings (sunsite still not responding  sigh)\n  
16199,     Make PRINT_* flags unique again\n  
16200,     fixes for calling compfiles  for completing words with special characters; make compfiles optimisations work with globcomplete and simple match (sunsite isn t responding)\n  
16201,     11867: restrict typeset -H application\n  
16202,     11866: More ANSI color stuff; preserve more state during prompt previewing \n  
16203,     Alexandre: Fix colored listings crash (article number attribution may be\nwrong in ChangeLog) \n  
16204,     11861: Completion/User/_cvs: fix -a use for compadd \n  
16205,     11850: Fix crash in menu-select on dumb terminals   Also  a ChangeLog entry\nfor PWS s 11842 \n  
16206,     11838: typeset -H\n  
16207,     11839: endtrapscope() null pointer dereference prevention\n  
16208,     fix for menu-completion when another completion came right after it (11836)\n  
16209,     improve _path_files  move some code into C  try to optimise glob patterns and immediately accept exact directory matches (11833)\n  
16210,     avoid bug in IRIX s sed and use new -K option to zparseopts in _urls\n  
16211,     11820: metafication of command line arguments\n  
16212,     more anchor matching fixes (11817)\n  
16213,     trying to improve _expand; new keep-prefix style  add-space gives more control (11815)\n  
16214,     make C-code expansion add a space only when more than one word was generated (11814)\n  
16215,     users/3130: Completion/Debian/_apt: fix actions for _alternative \n  
16216,     try to get the tests for `strings long enough  right in anchor matching code (11796)\n  
16217,     optimise command lookup in old and new completion (user/3124)\n  
16218,     11711: Andrej: diff output workaround\n  
16219,     hopefully more consistent beeping with menu-selection (11794)\n  
16220,     -K option for zparseopts to keep previous array values (11792)\n  
16221,     setup options in bindable commands (11789)\n  
16222,     Use slightly cleaner syntax (11772)\n  
16223,     make _expand ignore empty expansions (11777)\n  
16224,     fix for _path_files and globcomplete  better test if word contains wildcards (11776)\n  
16225,     make (e) flag be silent unless (X) is given  too (11768)\n  
16226,     accept -g option in _urls and use _urls in _rpm (11756)\n  
16227,     fix wording in error messages for tests (11755)\n  
16228,     3 1 9  now\n  
16229,     AIX dependency fix\n  
16230,     Test/ distfiles\n  
16231,     3 1 8\n  
16232,     some more memory leak fixes (11745)\n  
16233,     11743: Complete http URLs for rpm package files \n  
16234,     * 11740: Completion/Linux/_rpm: -- rebuild recompile  is always\nlocal files \n  
16235,     11739: _dpkg improvements\n  
16236,     11737: Avoid excessive Makefile rebuilding during  make clean  \n  
16237,     Felix  11734: Memory leak and doc error \n  
16238,     11736: Fix TRAPEXIT scoping \n  
16239,     11733: Solaris sed fix-up for Doc/Zsh/modlist yo creation\n  
16240,     Patch 11723 \n  
16241,     Added some testing of glob-array indexing \n  
16242,     Fixed glob array indexing \n  
16243,     More test-comment tweaks \n  
16244,     Improved the comment lines & added some  ksh_arrays  tests \n  
16245,     Felix: fix for memory leak (11718)\n  
16246,     fix some memory leaks (thanks  Felix) (11722)\n  
16247,     For 11717 and the new array-indexing Test file \n  
16248,     Changed the array  len  to be  end  -- a 1-relative index of the last\nitem (or you can think of it as pointing one past the last item) \n  
16249,     One more test \n  
16250,     Some simple array indexing tests \n  
16251,     Change from 11716 with an extra tweak to make it right \n  
16252,     Finish the job started in my last patch \n  
16253,     Made $array[0 0  work just like $array[0  \n  
16254,     11701 and 11713 \n  
16255,     Disable vared only for interactive shells where ZLE has been explicitly\ndisabled  but also for any shell running in an emacs buffer \n  
16256,     Revert the change made in 11647 \n  
16257,     FR & pws: promptexpand memory leaks; NEWS notes\n  
16258,     11696: local readonly specials bugs fixes\n  
16259,     allow display of only messages via $compstate[list =messages (11688)\n  
16260,     use compadd -[ak  (11549)\n  
16261,     Andrej: fix for $   //    with % in search string (11660)\n  
16262,     allow using menu-select for compdef -k (i e : autoload zsh/complist in such cases) (11686)\n  
16263,     Wayne: pattern c unitialised var\nZero-length arrays now possible with $array[1 0 \n  
16264,     move to last cursor after not asking a second time if list should be shown (11682)\n  
16265,     fix for ignore-line style (11679)\n  
16266,     avoid reporting the same ->state more than once (11678)\n  
16267,     AIX depenency fix (11661)\n  
16268,     bogus uninitialised variable warning\n  
16269,     modlist yo added to  distfiles\n  
16270,     _argument_sets removed from  distfile\n  
16271,     Etc/MACHINES tweak; 3 1 7 released\n  
16272,     fixes for _arguments without multiple sets; change completion test for empty actions (11647)\n  
16273,     11644: Use `print -s  in _complete_debug \n  
16274,     11643: Updates for _rpm \n  
16275,     Wayne: Fix two history bugs that were causing the\nfailure of `print -s  \n  
16276,     Add comment \n  
16277,     doc fix  missing `)  (11638)\n  
16278,     make _path_files use glob qualifiers from the line when doing pattern matching (11635)\n  
16279,     make handling of default tag clearer in the docs (3101)\n  
16280,     matching bugs with patterns with two anchors (11634)\n  
16281,     keep information about things to complete in _arguments (11631)\n  
16282,     fixes for _arguments with sets; make _zpty not use sets (11624)\n  
16283,     11618: Fix bad shift \n  
16284,     11616: netinet/in_systm h again\n  
16285,     use of _arguments for completion of a couple more builtins (11615)\n  
16286,     11606: Propagate parse errors out of parse_list() and parse_event()  and\ntest that it worked \n  
16287,     11607: For  read -q   open shout if necessary\neven when SHTTY is\nalready a valid descriptor \n  
16288,     11606 and 11607 \n  
16289,     11599: check for d&x bits on @INC directories in _perl_modules\n  
16290,     11587: Felix Rosencrantz: Src/pattern c: uninitialised variable\n11590: various cygwin fixes\n  
16291,     disable vared if zle is not enabled (11566)\n  
16292,     Split _arguments calls into sets to avoid long mutex lists (11579)\n  
16293,     beautify format of compdump file (11576)\n  
16294,     fix for special-dirs when used with -g patterns (11570)\n  
16295,     better cursor-movement in menu-selection (11569)\n  
16296,     11567: FD_CLOEXEC in zftp c\n  
16297,     force listing in _complete_debug; make complist with list-scrolling stopt at the end of the list when prompt would scroll it out; fix _in_vared to handle `foo[bar   (11565)\n  
16298,     11561: no RC_QUOTES in $    \n  
16299,     11560: Doc/Zsh/expn yo: pipes are pipes even if plumbing isn t \n  
16300,     11554: Rearrange _arguments doc some more \n  
16301,     fix for comparguments to make -s have an effect again (11552)\n  
16302,     11548: -h flag for ispell\n  
16303,     11542: Doc/Zsh/compsys yo: more wording `improvements \n  
16304,     minor completion fixes (11541)\n  
16305,     Minor completion fixes (11541)\n  
16306,     Suffix handling improvements for url completion (11539)\n  
16307,     11537: new _complete_tag function\n  
16308,     doc clarifications for zparseopts (11536)\n  
16309,     add -[ak  options to compadd (11533)\n  
16310,     add -E option to zparseopts (11530)\n  
16311,     use `set -A  instead of `eval  in more places (11525)\n  
16312,     fix for read -q without a shout (11524)\n  
16313,     save and restore more variables in bufferwords(); move gotword() into core (11523)\n  
16314,     Don t lose empty arguments (11517)\n  
16315,     11516: Completion/Core/compinstall: menu selection\n  
16316,     11515: Fix infinite loop \n  
16317,     11508: Add texipage() to printindex() \n  
16318,     11485  11488: Relocate  Compatibility  and  Restricted Shell  docs \n  
16319,     make sure wouldinstab is set before calling docomplete() (11503)\n  
16320,     Completion/Linux/_rpm: --buildarch is like --target\n  
16321,     another fix for `select=long*  in menu style (11500)\n  
16322,     fix for select-long-list in menu style (11497)\n  
16323,     fix for clines in suffix (11496)\n  
16324,     be more careful when decided if to insert tabs instead of completing (11493)\n  
16325,     remove -h option from zstyle (11490)\n  
16326,     pat(-) in long-option patterns to say that argument should be completed only after the `= ; merge _arguments and _argument_sets; slightly better test when not to complete options (11489)\n  
16327,     fix for a-a-m-c in menu selection; scroll explanations onto screen again  (11487)\n  
16328,     Missing () in a tt() \n  
16329,     11483: Fix formatting and other small errors \n  
16330,     11478; 3 1 7-pre-4\n  
16331,     11477: Alphabetize itemized lists \n  
16332,     11473: Turn off xtrace while printing PS4 \n  
16333,     Do a better job of completing suffixes in netscape remote commands (11471)\n  
16334,     ChangeLog entry for zsh-users/3066  already committed:\ncygwin system h fix\n  
16335,     11467: [#<base>  syntax for output base\nzsh-users/3071: compdump tweak to avoid // in path\n  
16336,     Fix _su to use user s shell for completion after -c again\n  
16337,     11469: Locally unset the errexit option and ZERR trap \n  
16338,     11461: Make  read  interruptible even when used in the tail of a pipeline \n  
16339,     fix for unambiguous string insertion (11466)\n  
16340,     don t use $match for something different than (#b)ackrefs (11464)\n  
16341,     Add missing file name to log message \n  
16342,     fix for completion of `netscape -remote  (11460)\n  
16343,     allow _main_complete to call an arbitrary command given as arguments (11459)\n  
16344,     small doc fix; make compcall autoload compctl module (11457)\n  
16345,     11455: Completion/Core/_oldlist: old-menu defaults on\n  
16346,     make _files remove backslashes in patterns (11453)\n  
16347,     Felix Rosencrantz: 11450: Replace `tr` with paramsubst \n  
16348,     11448: doc changes\n  
16349,     11444: add old-list and old-menu to _zstyle\n  
16350,     11441: Test/comptest  Test/53completion ztst \nTest/54compmatch ztst: use only one zsh process to test for each\ncompletion test file \n  
16351,     add Felix  completion matching test; some fixes for bugs shown by it (11439)\n  
16352,     Fix e-mail address \n  
16353,     11435: Update test for 11406 \n  
16354,     11431: Chop up zstyle doc into an itemize list \n  
16355,     fix completion after tilde and equal sign inside quotes (11429)\n  
16356,     11426: Src/Modules/zpty c: don t use #elif \n  
16357,     11420: Src/Modules/zpty c: try more pty device files \n  
16358,     11419: Control  make check  with the TESTNUM variable \n  
16359,     Remove RCS Id strings \n  
16360,     Fix typos and remove RCS Id strings \n  
16361,     11415: Completion/User/_cvs: follow the new matcher-list behaviour \n  
16362,     11410: make tokenize() tokenize =  so $~foo allows =cmd expansion\n  
16363,     fixed configuration of menu-selection with menu style; pseudo-context `-command-line-   handy for completion in vared (11408)\n  
16364,     avoid tilde- and parameter-completion in quotes (11407)\n  
16365,     make _arguments take the attempt to add matches as an indication not to do default option-completion (11406)\n  
16366,     fix scrolling in menu-selection with matches spanning multiple lines\n  
16367,     one hunk of 11381: typo in _vars_eq\n  
16368,     11402: Doc/Zsh/options yo: OCTAL_ZEROES fix + expansion\n  
16369,     make menu-select accept the match when typing a non-special character (11401)\n  
16370,     11396: Completion/User/_look: display a message when\nan argument is empty \n  
16371,     11394: Completion/User/_cvs: rewrite filename completion\nfunctions \n  
16372,     11393: Completion/User/_diff_options: use `=-  \n  
16373,     11392: Completion/Core/_description: ignore-line fix \n  
16374,     11387: OCTAL_ZEROES option\n  
16375,     11385: parse 0[0-9 + as octal in arithmetic expressions\n  
16376,     detect additional characters in parameter expansions and signal an error for them (11380)\n  
16377,     add _in_vared for completion inside vared; make insert-tab default to `false  there\n  
16378,     add _in_vared for completion inside vared; make insert-tab default to `false  there (11379)\n  
16379,     11375: compinstall: menu style select=long and select=long-list\n  
16380,     Install functions before man pages to avoid error if yodl isn t installed\n  
16381,     extra paranoia for empty prefix/suffix in completion matching (11374)\n  
16382,     Oliver s missing article number \n  
16383,     FAQ updated from website\n  
16384,     fix for empty (s::) separator and strings with meta-characters (11368)\n  
16385,     followup for 11364 (11367)\n  
16386,     fix for completion of string with single quote (11365)\n  
16387,     fix for suffix-matching; better in-path completion in _path_files (11364)\n  
16388,     11362: fix up pointers\n  
16389,     zparseopts should detect if it is called without option descriptions (11360)\n  
16390,     Add -L option to the hash builtin\n  
16391,     doc changes; typo in _jobs; integer builtin understands `-i base \n  
16392,     fix for completing options with `_arguments -s ; fix for _message to use `builtin compadd  (11349)\n  
16393,     Use _arguments for hash completion and add + options for typeset (11347)\n  
16394,     fixes for completion matching (11346)\n  
16395,     fix for compadd -x when there are no matches (11335)\n  
16396,     11332: Test descriptors correctly for redirect/restore of stderr; plus an\naesthetic tweak \n  
16397,     11326: Avoid init_io() on  exec < file  when zleactive \n\nAlso fix OPK\ s slightly confused previous ChangeLog entry \n  
16398,     Back out 11327 and make the correct fix in _groups (redirect ypcat to stderr)\n  
16399,     _call should pass on the return code from the called command (11327)\n  
16400,     make _argument_sets add the options as defaults when there is nothing else to complete (11324)\n  
16401,     _files used alternative tag-order values even if not needed (11321)\n  
16402,     allow internally-mutually exclusive sets in _argument_sets; fixes for _argument_sets and the C-code for it (11320)\n  
16403,     make ^G in menu-selection restore the old command line; add select=long* values for menu style to start menu-selection if list is too long for screen (11319)\n  
16404,     Spelling corrections in the docs (11315)\n  
16405,     Remove return value from uniqarray which caused a compile error on IRIX\n  
16406,     11314: fix for typeset -U not updating value in environment\n  
16407,     11312: defs mk depends on config status \n  
16408,     11310: use zmanref  (fix for 11309)\n  
16409,     11309: Doc/Zsh/expn yo: fix missing section \n  
16410,     11302: Cursor placement and defensive programming \n  
16411,     AIX dependency fix\n  
16412,     Fix breakage from 11195 (11300)\n  
16413,     11299: edit-command-line zle widget\n  
16414,     more fixes for _arguments and its docs (11298)\n  
16415,     11297: Document that ZLE closes standard input of user-defined widget funcs \n  
16416,     misc  _arguments fixes\n  
16417,     11287: Naoki Wakamatsu: compinstall spaces to be tab\n  
16418,     fix for `-+opt  with mutex list (11294)\n  
16419,     update `%p  replacement in _files (11292)\n  
16420,     revert 11280\n  
16421,     11288: Reopen stdin on /dev/null to avoid confusing programs that don t\nexpect it to be closed \n  
16422,     11285: zftp exit hook\n  
16423,     Use _math for completing the let builtin\n  
16424,     complete using _arguments for typeset and its variants (11282)\n  
16425,     11280: Completion/User/_make: suppress an error with closed stdin\non OpenBSD \n\n11278: Completion/User/_ssh: disable forwarding to use ssh \n  
16426,     make nslookup function more like real nslookup (11277)\n  
16427,     11276: fix build on OpenBSD \n  
16428,     give control over insertion of tab when no non-blank character before cursor; add insert-tab style (11274)\n  
16429,     option name clash in _arguments (11273)\n  
16430,     fix for _arguments without options and no more arguments to complete (11272)\n  
16431,     new -A and -S options to _arguments; `-opt=-  specs for options whose argument has to come after the `=  (11270)\n  
16432,     minor doc fixes (11268)\n  
16433,     Small fix in Etc/CONTRIBUTORS\n  
16434,     11264: Missed bit of doc for 10771 \n  
16435,     11044  11260: DVORAK options for spell checking \n  
16436,     CONTRIBUTORS fix\n  
16437,     Fix my email address\n  
16438,     close fd for pty-master in sub-shell\n  
16439,     11252: no colon at the end of zftp function contexts\n  
16440,     more problems with optional arguments in _arguments (11253)\n  
16441,     3 1 7-pre-3 marked in ChangeLog\n  
16442,     better cursor positioning in words with multiple ambiguous word parts (11248)\n  
16443,     * Bart  Tanaka Akira: 11247: Don t signal to a process group which\nhas only zombie processes \n  
16444,     Version 3 1 7-pre-3\n  
16445,     11194  11200  11214\n  
16446,     make _expand call _complete when called from _expand_word; add ignore-line style to ignore words already on the line (11244)\n  
16447,     misc  completion cleanups and changes (11242)\n  
16448,     11236: Handle tabs between options and their descriptions when parsing --help \n  
16449,     add _look \n  
16450,     11224: Util/mkdisttree sh: problem with pattern matching `   in\nfind \n  
16451,     11223: Completion/Base/_regex_arguments  Completion/Debian/_apt \nCompletion/X/_xset  Completion/X/_xwit  Doc/Zsh/compsys yo:\n_regex_arguments use _alternative \n  
16452,     11219: Completion/User/_cvs  Completion/User/_diff_options: add\noption description to `_cvs  and fix typo in _diff_options \n  
16453,     Small doc fix and AIX dependency fix\n  
16454,     11213: Completion/User/_cvs: don t complete files which is\nalready on command line for `cvs add   `cvs remove  and `cvs commit  \n  
16455,     11204: Completion/User/_look: use more precise explanation and\ncomplete an optional second argument \n  
16456,     11196: zmv enhancements\n  
16457,     CONTRIBUTORS fixes\n  
16458,     completion function cleanup for `_arguments  with the `-C  option and using it s return value (11195)\n  
16459,     some more memory initialisation after allocation; shouldn t possibly have done any harm (11193)\n  
16460,     11190: Completion/User/_look: new completion for look \n  
16461,     make _message independent of when it is called (11188)\n  
16462,     11185: Update contributors list for 3 1 7\n  
16463,     use `eval  in nslookup for pager  in case someone has PAGER= less -foo  or some such (11186)\n  
16464,     Use one function for compression/decompression programs and new lzop completion\n  
16465,     make zpty -r stoppable even when SIGINT is caught (and the handler calls return or some such) (11181)\n  
16466,     make nslookup page it s output if too long for screen (11177)\n  
16467,     Wayne: fix for print -s when called from widget; added lines are not immediately available  though (11171)\n  
16468,     fix for completion arguments of options  don t use all of them at once (11172)\n  
16469,     fix for jobs -l -d  check if directory of job is already set (11170)\n  
16470,     11166: Completion/Base/_regex_arguments: remove debugging code \n  
16471,     11165: Completion/Base/_regex_arguments  Completion/Debian/_apt \nCompletion/X/_xset  Completion/X/_xwit  Doc/Zsh/compsys yo \nSrc/Modules/zutil c: _regex_arguments support tag stuff \n  
16472,     11157: Completion/Core/_requested: fail if _all_labels is failed \n  
16473,     close dump file descriptors in children (11151)\n  
16474,     11147: TRAPZERR tests\n  
16475,     parse_subst_string() should use modified version of `len  (11145)\n  
16476,     make pty the controlling terminal of their commands (11144)\n  
16477,     save and restore `len  in lexsave/restore (11142)\n  
16478,     don t list when all matches look the same; force-list style to give users control over this (11140)\n  
16479,     Use akr@zsh org instead of akr@m17n org \n  
16480,     11137: Test/07cond ztst: detect block device file using find \n  
16481,     Fix my e-mail address \n  
16482,     11136: Reorganize history expansion doc \n  
16483,     11126: typos\n  
16484,     allow `-  in exclusion lists for _arguments  to avoid completing all options (11121)\n  
16485,     fix for the (z) flag: report partial word (like ` foo\   without a closing quote); mention in manual that (z) is handled lately (11117)\n  
16486,     Andrej: handle -t option in _zcompile (11067)\n  
16487,     new (z) parameter flag to do shell-word splitting on the value (11113)\n  
16488,     remove backslashes before `$  in _expand when `substitute  is unset; fix for clearing end-of-list lines in menu-selection (11110)\n  
16489,     add _xauth \n  
16490,     11109: Completion/X/_xauth: new completion for xauth \n  
16491,     11106: Completion/User/_mount: fix glob for device files \n  
16492,     11096: Use C locale for tests\n  
16493,     more doc fixes (11094)\n  
16494,     make sure that completion messages are displayed even when there are no matches (11092)\n  
16495,     fix for completion of directories for zftp suite (11091)\n  
16496,     allow calling `print -s  in widgets  avoid duplicated history number\n  
16497,     allow calling `print -s  in widgets  avoid duplicated history number (11086)\n  
16498,     CVS lost a couple of lines when merging changes to the ChangeLog\n  
16499,     11036  11063  11077: Always write the  read -q  prompt to shout; eliminate\nsome redundant close() calls; relocate a misplaced redirection \n  
16500,     Update download location for Yodl (11078)\n  
16501,     fix indent \n  
16502,     11075: install completion functions for AIX and BSD \n  
16503,     zefram103: Src/Makemod in in: make sure   e  pro files are\nnon-empty  to keep the AIX compiler quiet \n  
16504,     11066: false || true was trigerring trap on ZERR\n  
16505,     Small fix to avoid using slashes in temporary file name (11065)\n  
16506,     make zrecompile detect deleted and new files (11061)\n  
16507,     two more doc fixes (11060)\n  
16508,     add -x option to compadd to display message unconditionally\n  
16509,     11057: getopts bug\n  
16510,     always use empty matcher-list style in _complete_help (11053)\n  
16511,     fix for _arguments  use on-line-argument-numbers only for normal arguments  not for arguments of options (11052)\n  
16512,     completion cleanup  mostly _wanted and $expl (11049)\n  
16513,     make completion-in-vared complete parameter values as default; cleanup for _path_files (11048)\n  
16514,     completion doc fixes and cleanup; _sort_tags updated (11047)\n  
16515,     *** empty log message ***\n  
16516,     don t fail on nonexistent ~/ nedit file \n  
16517,     Use of _arguments in _bzip2 (11041)\n  
16518,     Corrected where I had used a date of 31st April\n  
16519,     Spelling corrections (11037)\n  
16520,     11033: 3 1 7-pre-2\n  
16521,     11032: Fix signed-ness of a local \n  
16522,     AIX dependency fixes\n  
16523,     11029: Some missing bits of merging 11015 with 11026 \n  
16524,     completion for joe\n  
16525,     11026: fix for unfunction of trap with localtraps bug\n  
16526,     11024: The _complete_debug widget enables and captures xtrace from completion \n  
16527,     11019: fix bug in _description example\n  
16528,     11017: Completion/Linux/_rpm: fixes for --rmsource and --recompile\noptions  and for breakage caused by 10772\n  
16529,     11015: `unfunction TRAPxxx  now works with localtraps in effect   I m not\nvery happy with having to play with `noerrs  but I don t see any other way\nto silence the warning from bin_unhash() \n  
16530,     11013: more compinstall fixes\n  
16531,     11012: Rearrange menus to match section rearragement in 11008 \n  
16532,     11012: Rearrange menus in Doc to match 11008   Also add some missing article\nnumbers from earlier ChangeLog entries \n  
16533,     move compctl docs behind compsys  mention `zcompile -z  in compsys (11008)\n  
16534,     misplaced cursor with partial-word matching (11007)\n  
16535,     Tanaka: printer-detection moved to new _printers; used by _enscript (11001)\n  
16536,     fix for reporting multiple actions in comparguments  options with non-optional arguments (11003)\n  
16537,     10999: compinstall fixes\n  
16538,     avoid wrapping around both horizontally and vertically at the same time (10992)\n  
16539,     10980: Tanaka s enscript completion \n  
16540,     10985: compinstall enhancements\n  
16541,     new _history completer (10979)\n  
16542,     better wrap around for cursor movement widgets; avoid flicker when leaving menu-selection (10978)\n  
16543,     use $words[1  to call make in _make and throw away stderr and use _call (10977)\n  
16544,     ensure $PWD is prepended to cache-names for long options in _arguments (10974)\n  
16545,     10971: **/    always globbed dots\n  
16546,     fix for automatic option-argument completion with partially typed option in _arguments (10967)\n  
16547,     document _wanted -C; fix for call to _wanted in _urls (10965)\n  
16548,     fix for parse error with left-anchored patterns (10963)\n  
16549,     make menu-selection handle undefined-key (10961)\n  
16550,     *** empty log message ***\n  
16551,     renamed parameters for menu selection to MENUSELECT  MENUPROMPT and MENUSCROLL; no special value for LISTMAX to turn on list scrolling  this is done by setting LISTPROMPT now; default values for LISTPROMPT and MENUPROMPT when set but empty (10959)\n  
16552,     added warning to _perl_modules for when perl not found on path (10949)\n  
16553,     ensure options are set as expected in _history_complete_word and _bash_completions (10933)\n  
16554,     new file\n  
16555,     *** empty log message ***\n  
16556,     better perl module completion from Adam (10892)\n  
16557,     new completion for GNU zip from Tanaka (10890)\n  
16558,     new completion function for xset from Tanaka (10885)\n  
16559,     allow to anchor on gaps between strings in matching control specs (10926)\n  
16560,     faster test for `* -patterns in matching control; prefer direct character matches over match specs in recursive invocations of match_str() (10925)\n  
16561,     fix for matching control; improve merging cline lists (10924)\n  
16562,     better default value for list-prompt style (10923)\n  
16563,     file-sort made $fignore fail (10922)\n  
16564,     don t show empty hidden matches even in menu-selection (10917)\n  
16565,     re-calculate number of line with mark when needed; make default prompts more consistent (10916)\n  
16566,     forgotten fix for _arguments using multiple actions (10915)\n  
16567,     don t always ignore backslashes in paths when testing file type (10912)\n  
16568,     small fix for _requested to be able to use _all_labels from within it (10910)\n  
16569,     report prefix/suffix of parameter expansion in IPREFIX/ISUFFIX; make _expand use them to be able to expand $foo (10909)\n  
16570,     make _arguments use more than one action when appropriate; add _argument_sets to complete different sets of arguments and options for the same command (10908)\n  
16571,     Things that are in the ChangeLog but that somehow didn t get changed \n  
16572,     10900: Depend modules-bltin upon config status rather than upon Makefile \n  
16573,     don t remove *all*  zwc files  keep the first one (10881)\n  
16574,     fix off-by-one error in scrolled menu-selections (10868)\n  
16575,     Add new completions for AIX commands\n  
16576,     new completions for FreeBSD commands (10861)\n  
16577,     default values for styles in _expand_word  listing expansions with ^Xd  _expand uses add-space style (10854)\n  
16578,     Add completion for file descriptors\n  
16579,     add zstyle+ (this is the *real* 3 1 7-pre-1)\n  
16580,     Test additions; 3 1 7-pre-1\n  
16581,     Ollivier Robert: 10844: prefer curses to termcap on HPUX 11\n  
16582,     10833: new print completion and complete nothing for clear and logname\n  
16583,     10830: Doc/Makefile in: don t force dvips to use 300 dpi \n  
16584,     ensure zsh/compctl (ick!) module is loaded when zle is loaded from init file but zsh/complete isn t (10828)\n  
16585,     default for list-prompt style  %[MLP  use fixed-width strings  %[mlp  use variable-width strings (10816)\n  
16586,     fix completion after ~<num> (10812)\n  
16587,     handle list-prompt in compinstall\n  
16588,     change suffix added when completing an assigned value (10807)\n  
16589,     10802: typo\n  
16590,     completion list scrolling cleanup; *STATUS renamed to *PROMPT  styles for new used parameters  use local keymap when waiting at list-prompt (10801)\n  
16591,     fix to get newlines in non-job-texts (I m sooo stupid)\n  
16592,     fix to get newlines in non-job-texts (I m sooo stupid) (10799)\n  
16593,     join_clines() tested the wrong variable (10798)\n  
16594,     zstyle+ simplifies definition of styles (10795)\n  
16595,     scrolling in completion lists and menu-selection  version1\n  
16596,     10789: <(   ) and >(   ) documentation\n  
16597,     display newlines as spaces in job-texts (10788)\n  
16598,     fix for exclusion lists for -+o specifications\n  
16599,     10772: Chmouel: rpm --target completion\n  
16600,     better completion after `=   everywhere (10780)\n  
16601,     make _tags use C-code for braces in tag-order values; and misc  stuff (10775)\n  
16602,     fix for partial word completion with empty parts and common suffix (10774)\n  
16603,     10771: new GLOBAL_EXPORT option; successful compilation on OpenBSD\n  
16604,     10768: configure in: DLLDFLAGS for OpenBSD \n  
16605,     10764: run-help improvements10764: run-help improvements10764: run-help improvements10764: run-help improvements10764: run-help improvements10764: run-help improvements10764: run-help improvements10764: run-help improvements10764: run-help improvements\n  
16606,     10763: complete after : for typeset & friends\n  
16607,     Doc fix for 10756\n  
16608,     missing `+ s in _diffoptions (10760)\n  
16609,     10756: fix (#s) and (#e) for parameter substitution forms\n  
16610,     Fix formatting \n  
16611,     10748: configure-switch for MAXJOB\n  
16612,     10745: MAXJOB = MAX_TASKS_PER_USER from linux/tasks h\n  
16613,     10743: fix replenv() of imported special parameters\n  
16614,     10738: pws: local parameters can be exported\n  
16615,     remove the `pids  tag  use `processes  instead (10733)\n  
16616,     make read -[kq  always print the prompt  if any; after all they make sure they have a terminal anyway (10727)\n  
16617,     fix field name for HAVE_NIS_PLUS (10726)\n  
16618,     comment the `#if s for group numbers in $compstate[insert  (10725)\n  
16619,     display number of matches again when asking if a completion list should be shown (only when not zero) (10724)\n  
16620,     10706: Andrej: Fix quoting in awk args \n  
16621,     10700: Andrej: Support Pyramid s internationalized manpaths \n  
16622,     Use _arguments for bindkey completion and fix small typo in docs\n  
16623,     forgot one #if for commenting out the group-stuff for $compstate[insert \n  
16624,     compare mapped zwc files using stat instead of the pathnames (10699)\n  
16625,     allow brace expansion on patterns for file-patterns and tag-order (10695)\n  
16626,     missing initialisation for next field in assignments for substitutions for fc builtin (10692)\n  
16627,     keep _oldlist from using the dummy match inserted for warnings (10691)\n  
16628,     comment out the code to allow $compstate[insert  to select the group (10690)\n  
16629,     display number of lines instead of number of matches when asking whether to show completion lists (10686)\n  
16630,     new widget copy-prev-shell-word  like copy-prev-word but uses shell parsing to find word (10685)\n  
16631,     10681: Setopts in _complete_help the same as _main_complete \n  
16632,     10680: spelling corrections in _diff_options\n  
16633,     10669: compinstall more flexible with input and output files\n  
16634,     10657: One change missed in 10635 \n\nAlso  a no-op cleanup in prompt_bart_setup \n  
16635,     make trailing blanks in file-patterns tags be removed (10650)\n  
16636,     make _oldlist ignore old list when _complete_help is used (10648)\n  
16637,     make _oldlist ignore list from _complete_help; _match runs for every match spec from matcher-list; _approximate doesn t redefine compadd if that is already a function (10641)\n  
16638,     _make uses $words[1  for command name (10635)\n  
16639,     _wanted now tests both tags and labels; change places where _wanted was called without a command; allow multiple patterns per string in file-patterns; update _next_tags to work with labels (10632)\n  
16640,     10628: Check for GNU make using  _call version      as was done for GNU diff \n  
16641,     detect ignored signals correctly (10625)\n  
16642,     typo caused ignored-patterns to be ignored (10622)\n  
16643,     addx() inserts x more often (10621)\n  
16644,     properly restore scriptname in doshfunc() (10620)\n  
16645,     use special-dirs with _path_files -g (3019)\n  
16646,     more careful with checking index of $history (10614)\n  
16647,     fix for bashautolist+automenu (10609)\n  
16648,     10606: Fix thinko in 10598 \n  
16649,     10602: Where d that stray 2 come from?\n  
16650,     10598: Fix typo; reformat styles documentation for readability \n  
16651,     compinstall update; 3 1 6-dev-22\n  
16652,     10591: Chmouel Boudjnah: Completion for the fakeroot program \n  
16653,     10594: Fix index into $history in prompt_bart_precmd \n\n10591: Completion/User/_fakeroot: Completion for the fakeroot program \n\n10590: Completion/Linux/_rpm: Signature checking completes only local\npackage files \n  
16654,     stat -o shows file modes in octal\n  
16655,     10582: Apply STTY only to process group leaders \n  
16656,     10562  10581: Complete  src rpm after rpm --rebuild; note fixed bug; typo \n  
16657,     make sure caller-supplied explanation takes precedence (10579)\n  
16658,     complete make targets of the form `foo bar:  (10575)\n  
16659,     cursor placed on wrong word part with ** match spec (10573)\n  
16660,     missing initialisations  -W with multiple directories didn t wor (10571)\n  
16661,     10564: typo in _wanted\n10565: maximum function depth configure option\n10566: patgetglobflags has a second argument now\n  
16662,     10547: (#s) and (#e) pattern assertions\n  
16663,     zefram2: Src/lex c: Support  3&> foo  etc \n  
16664,     zefram1: configure in  Etc/zsh-development-guide: List of tools\nrequired for development work  and a little more conspicuous\nexplanation of the config status hack \n  
16665,     *** empty log message ***\n  
16666,     avoid distcleaning Test twice (10543)\n  
16667,     tag in file-patterns optional  use `files  as default (10542)\n  
16668,     use zsh as command name in error messages even with -c\n  
16669,     Patches 10513  10516 (Alexandre)  10519 (Oliver)  10524\n  
16670,     support automatically inserted dummy in $words\n  
16671,     use basename of commands instead of $words[1 \n  
16672,     renaming some styles\n  
16673,     two small completion fixes\n  
16674,     make zwc files use the magic number as their verios  report zsh-version in error messages\n  
16675,     Make config h and related dependencies relative to $(sdir) \n  
16676,     $PENDING special zle parameter  giving number of un-read bytes\n  
16677,     fix for combining _next_tags and file-patterns\n  
16678,     new _imagemagick\n  
16679,     *** empty log message ***\n  
16680,     Patches 10440 (Chmouel)  10448  10477 (Clint)\n  
16681,     new completion function\n  
16682,     better error handling for zwc files\n  
16683,     fix for comparguments: completion of options after option with\nrest-arguments was wrong\n  
16684,     keep association elements from being exported\n  
16685,     Remove one of a doubled line \n  
16686,     make _next_tags be usable with menu-completion\n  
16687,     Add _emulate  _zcompile  _all_labels  _ignored  _next_label \n  
16688,     Copy QIPREFIX/QISUFFIX \n  
16689,     *** empty log message ***\n  
16690,     10444: Src/lex c  Src/pattern c: Insist on proper syntax\nfor numeric globbing (with the  - )   Also fix the bug whereby\n echo 1<2-3>  would lose the  1  \n  
16691,     Update current stable zsh version \n Possibile incompatibilities  section still to be updated \n  
16692,     Various completion fixes\n  
16693,     default completer style contains _ignored\n  
16694,     Make style-list optional\n  
16695,     Recognise new parts in partial word completion\n  
16696,     Handle directory stack entries\n  
16697,     Better quoting for directories with spaces \n  
16698,     Fixed up for removed _loop and _try \n  
16699,     Version 3 1 6-dev-21\n  
16700,     Removed renamed files for tag labels\n  
16701,     Updated from list as far as 10376\n  
16702,     Updated from list as far as 10376\n  
16703,     Initial revision\n  
16704,     Initial revision\n  
16705,     Initial revision\n  
16706,     Initial revision\n  
16707,     Initial revision\n  
16708,     Initial revision\n  
16709,     Initial revision\n  
16710,     Initial revision\n  
16711,     Initial revision\n  
16712,     Initial revision\n  
16713,     Initial revision\n  
16714,     Initial revision\n  
16715,     Initial revision\n  
16716,     Initial revision\n  
16717,     Initial revision\n  
16718,     Initial revision\n  
16719,     zsh-workers-9790\n  
16720,     Initial revision\n  
16721,     Initial revision\n  
16722,     Initial revision\n  
16723,     Initial revision\n  
16724,     Initial revision\n  
16725,     Initial revision\n  
16726,     Initial revision\n  
16727,     Initial revision\n  
16728,     Initial revision\n  
16729,     Initial revision\n  
16730,     Initial revision\n  
16731,     Initial revision\n  
16732,     Initial revision\n  
16733,     Initial revision\n  
16734,     Initial revision\n  
16735,     zsh-workers:9078\n  
16736,     Initial revision\n  
16737,     Initial revision\n  
16738,     Initial revision\n  
16739,     Initial revision\n  
16740,     Initial revision\n  
16741,     zsh-3 1 6-pws-12\n  
16742,     zsh-workers/9024\ncd ztst removed \n  
16743,     Initial revision\n  
16744,     Initial revision\n  
16745,     Initial revision\n  
16746,     Initial revision\n  
16747,     Initial revision\n  
16748,     Initial revision\n  
16749,     Initial revision\n  
16750,     zsh-workers/8843\n  
16751,     zsh-workers/8903\n  
16752,     Initial revision\n  
16753,     Initial revision\n  
16754,     Initial revision\n  
16755,     Initial revision\n  
16756,     8827-mv\n  
16757,     Initial revision\n  
16758,     zsh-workers/8725\n  
16759,     Initial revision\n  
16760,     zsh-workers:8668\n  
16761,     Initial revision\n  
16762,     Initial revision\n  
16763,     zsh-workers:8475\n  
16764,     Initial revision\n  
16765,     zsh-workers:8631\n  
16766,     Initial revision\n  
16767,     Initial revision\n  
16768,     Initial revision\n  
16769,     Initial revision\n  
16770,     Initial revision\n  
16771,     Initial revision\n  
16772,     Initial revision\n  
16773,     Initial revision\n  
16774,     Initial revision\n  
16775,     zsh-workers:8515\n  
16776,     Initial revision\n  
16777,     Initial revision\n  
16778,     test\n  
16779,     Initial revision\n  
16780,     Initial revision\n  
16781,     removed \n  
16782,     Initial revision\n  
16783,     Initial revision\n  
16784,     Initial revision\n  
16785,     Initial revision\n  
16786,     Initial revision\n  
16787,     Initial revision\n  
16788,     Initial revision\n  
16789,     Initial revision\n  
16790,     Initial revision\n  
16791,     Initial revision\n  
16792,     Initial revision\n  
16793,     Initial revision\n  
16794,     Initial revision\n  
16795,     Initial revision\n  
16796,     moved to manual yo \n  
16797,     remove \n  
16798,     Initial revision\n  
16799,     Initial revision\n  
16800,     Initial revision\n  
16801,     Initial revision\n  
16802,     Initial revision\n  
16803,     moved to Base\n  
16804,     Initial revision\n  
16805,     pws-5\n  
16806,     Initial revision\n  
16807,     Initial revision\n  
16808,     Initial revision\n  
16809,     Initial revision\n  
16810,     Initial revision\n  
16811,     Initial revision\n  
16812,     Initial revision\n  
16813,     Initial revision\n  
16814,     Initial revision\n  
16815,     Initial revision\n  
16816,     Initial revision\n  
16817,     Initial revision\n  
16818,     Initial revision\n  
16819,     Initial revision\n  
16820,     remove\n  
16821,     Initial revision\n  
16822,     remove _apt-cache _apt-get _apt_arguments\n  
16823,     Initial revision\n  
16824,     Initial revision\n  
16825,     Initial revision\n  
16826,     Initial revision\n  
16827,     Initial revision\n  
16828,     removed \n  
16829,     Initial revision\n  
16830,     remove Completion/Cvs/ distfiles\n  
16831,     remove Completion/Cvs\n  
16832,     re-adding _cvs\n  
16833,     zsh-development-guide and completion-style-guide is removed \n  
16834,     Completion/Rpm is removed \n  
16835,     Initial revision\n  
16836,     Initial revision\n  
16837,     Initial revision\n  
16838,     Initial revision\n  
16839,     Initial revision\n  
16840,     Initial revision\n  
16841,     zsh-workers:7610\n  
16842,     reverted\n  
16843,     zsh-3 1 6-pws-2\n  
16844,     zsh-3 1 6-pws-2\n  
16845,     zsh-workers:7564\n  
16846,     Initial revision\n  
16847,     Initial revision\n  
16848,     Initial revision\n  
16849,     Initial revision\n  
16850,     Initial revision\n  
16851,     Initial revision\n  
16852,     Now  Completion/Cvs is available \n  
16853,     Initial revision\n  
16854,     Initial revision\n  
16855,     Initial revision\n  
16856,     Initial revision\n  
16857,     Initial revision\n  
16858,     Initial revision\n  
16859,     Replaced by Completion/Pbmplus/*\n  
16860,     Initial revision\n  
16861,     update \n  
16862,     update \n  
16863,     Initial revision\n  
16864,     Sync up with zsh-3_1_6-pws-1 \n  
16865,     Initial revision\n  
16866,     Initial revision\n  
16867,     Initial revision\n  
16868,     Initial revision\n  
16869,     Initial revision\n  
16870,     Initial revision\n  
16871,     Initial revision\n  
16872,     Initial revision\n  
16873,     Initial revision\n  
16874,     Initial revision\n  
16875,     Initial revision\n  
16876,     Initial revision\n  
16877,     Initial revision\n  
16878,     Initial revision\n  
16879,     Bump `Microsoft PowerShell Native` to `7 2 0-preview 1` (#15030)\n\n  
16880,     Update  NET to version `6 0 100-preview 2 21155 3` (#15007)\n\n  
16881,     Create MSIX Bundle package in release pipeline (#14982)\n\n  
16882,     Merge 7 1 3 and 7 0 6 Change log to master (#15009)\n\nCo-authored-by: Dongbo Wang <dongbow@microsoft com>  
16883,     Build self-contained minimal size package for Guest Config team (#14976)\n\n  
16884,     Add UseOSCIndicator setting to enable progress indicator in terminal (#14927)\n\n  
16885,     Update `README` and `metadata json` for releases (#14997)\n\n  
16886,     Bump XunitXml TestLogger from 3 0 62 to 3 0 66 (#14993)\n\nBumps [XunitXml TestLogger (   com/spekt/xunit testlogger) from 3 0 62 to 3 0 66 \r\n- [Release notes (   com/spekt/xunit testlogger/releases)\r\n- [Changelog (   com/spekt/xunit testlogger/blob/master/CHANGELOG md)\r\n- [Commits (   com/spekt/xunit testlogger/compare/v3 0 62   v3 0 66)\r\n\r\nSigned-off-by: dependabot[bot  <support@github com>\r\n\r\nCo-authored-by: dependabot[bot  <49699333+dependabot[bot @users noreply github com>  
16887,     Re-enable VT mode on Windows after running command in ConsoleHost (#14413)\n\n  
16888,     Enable building PowerShell for Apple M1 runtime (#14923)\n\n  
16889,     Fix the variable name in the condition for miscellaneous analysis CI (#14975)\n\n  
16890,     Fix the variable usage in CI yaml (#14974)\n\n  
16891,     Fix `Move-Item` for FileSystemProvider to use copy-delete instead of move for DFS paths (#14913)\n\n  
16892,     Disable running markdown link verification in release build CI (#14971)\n\n  
16893,     Fix `PromptForCredential()` to add `targetName` as domain (#14504)\n\n  
16894,     Move misplaced test file to tests directory (#14908)\n\n  
16895,     Fix dev container (#14906)\n\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
16896,     Update `Concise` ErrorView to not show line information for errors from script module functions (#14912)\n\n  
16897,     Bump Microsoft CodeAnalysis CSharp from 3 9 0-3 final to 3 9 0 (#14934)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 9 0-3 final to 3 9 0 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits/v3 9 0)\r\n\r\nSigned-off-by: dependabot[bot  <support@github com>\r\n\r\nCo-authored-by: dependabot[bot  <49699333+dependabot[bot @users noreply github com>  
16898,     Declare which variable group is used for checking the blob in the release build (#14970)\n\n  
16899,     Update metadata and script to enable consuming  NET daily builds (#14940)\n\n  
16900,     Bump NJsonSchema from 10 3 9 to 10 3 10 (#14933)\n\nBumps NJsonSchema from 10 3 9 to 10 3 10 \r\n\r\nSigned-off-by: dependabot[bot  <support@github com>\r\n\r\nCo-authored-by: dependabot[bot  <49699333+dependabot[bot @users noreply github com>  
16901,     Use template that disables component governance for CI (#14938)\n\n  
16902,     Remove the 32 767 character limit on the environment block for `Start-Process` (#14111)\n\n  
16903,     #4750 Fix Get-Date -UFormat %G and %g behavior (#14555)\n\n  
16904,     Add suppress for nuget multifeed warning (#14893)\n\n  
16905,     Bump NJsonSchema from 10 3 8 to 10 3 9 (#14926)\n\nBumps NJsonSchema from 10 3 8 to 10 3 9 \r\n\r\nSigned-off-by: dependabot[bot  <support@github com>\r\n\r\nCo-authored-by: dependabot[bot  <49699333+dependabot[bot @users noreply github com>  
16906,     Add exe wrapper to release (#14881)\n\n  
16907,     Bump Microsoft ApplicationInsights from 2 16 0 to 2 17 0 (#14847)\n\nBumps [Microsoft ApplicationInsights (   com/Microsoft/ApplicationInsights-dotnet) from 2 16 0 to 2 17 0 \r\n- [Release notes (   com/Microsoft/ApplicationInsights-dotnet/releases)\r\n- [Changelog (   com/microsoft/ApplicationInsights-dotnet/blob/develop/CHANGELOG md)\r\n- [Commits (   com/Microsoft/ApplicationInsights-dotnet/compare/2 16 0   2 17 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16908,     Bump Microsoft NET Test Sdk from 16 8 3 to 16 9 1 (#14895)\n\nBumps [Microsoft NET Test Sdk (   com/microsoft/vstest) from 16 8 3 to 16 9 1 \r\n- [Release notes (   com/microsoft/vstest/releases)\r\n- [Commits (   com/microsoft/vstest/compare/v16 8 3   v16 9 1)\r\n\r\nSigned-off-by: dependabot[bot  <support@github com>\r\n\r\nCo-authored-by: dependabot[bot  <49699333+dependabot[bot @users noreply github com>  
16909,     Bump NJsonSchema from 10 3 7 to 10 3 8 (#14896)\n\nBumps NJsonSchema from 10 3 7 to 10 3 8 \r\n\r\nSigned-off-by: dependabot[bot  <support@github com>\r\n\r\nCo-authored-by: dependabot[bot  <49699333+dependabot[bot @users noreply github com>  
16910,     Change signature validation logic to call first without the file content (#14849)\n\n  
16911,     Disable codesign validation where the file type is not supported (#14885)\n\n* disable codesign validation where it fails\r\n\r\n* disable macOS filesigning too  
16912,     Fixing broken Experimental Feature list in `powershell config json` (#14858)\n\n  
16913,     Update `dependabot` configuration to V2 format (#14882)\n\n  
16914,     Bump NJsonSchema from 10 3 6 to 10 3 7 (#14855)\n\nBumps NJsonSchema from 10 3 6 to 10 3 7 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16915,     Add exe wrapper for Microsoft Update scenarios (#14737)\n\n  
16916,     Install wget on `centos` 7 docker image (#14857)\n\n    
16917,     Fix install-dotnet download (#14856)\n\n  
16918,     Fix Bootstrap step in Windows daily test runs (#14820)\n\n  
16919,     Bump NJsonSchema from 10 3 5 to 10 3 6 (#14818)\n\nBumps NJsonSchema from 10 3 5 to 10 3 6 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16920,     Avoid array allocations from `GetDirectories` and `GetFiles` (#14327)\n\nContributes to PowerShell#14318   
16921,     Bump `NJsonSchema` from `10 3 4` to `10 3 5` (#14807)\n\n  
16922,     Add tooling issue slots in PR template (#14697)\n\n  
16923,     Don t write possible secrets to verbose stream for web cmdlets (#14788)\n\n  
16924,     Update ChangeLog for v7 1 2 release (#14783)\n\nUpdate ChangeLog for v7 1 2 release\r\n\r\nCo-authored-by: Dongbo Wang <dongbow@microsoft com>  
16925,     Merged PR 14479: Update ChangeLog for v7 0 5 release (#14782)\n\n  
16926,     Refactor MSI CI (#14753)\n\n  
16927,     Merge branch  release/v7 2 0-preview 3  into master-merge-preview-3\n  
16928,     Update `README md` and `metadata json` for upcoming releases (#14755)\n\n  
16929,     Merged PR 14481: Update ChangeLog for v7 2 0-preview 3 release\n\nUpdate ChangeLog for v7 2 0-preview 3 release\n  
16930,     Fix the nuget feed name and url for dotnet 6\n  
16931,     Fix third party signing for files in sub-folders (#14751)\n\n  
16932,     Make the variable an `ArrayList` to enable usage of `Add()` method (#14748)\n\n  
16933,     Remove old  NET SDKs to make  dotnet restore  work with the latest SDK in CI pipeline (#14746)\n\n  
16934,     Remove packaging from daily windows build (#14749)\n\n  
16935,     Update link to manning book (#14750)\n\n* Fix link\r\n\r\n* Handle site being blocked from azDO  
16936,     Remove outdated linux dependencies (#14688)\n\n  
16937,     Bump  NET framework to 6 0 0-preview 1 (#14719)\n\n  
16938,     A separate Windows packaging CI (#14670)\n\n  
16939,     Suppress `Write-Progress` in `ConsoleHost` if output is redirected and fix tests (#14716)\n\n  
16940,     Bump NJsonSchema from 10 3 3 to 10 3 4 (#14714)\n\nBumps NJsonSchema from 10 3 3 to 10 3 4 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16941,     Update daily GitHub action to allow manual trigger (#14718)\n\n  
16942,     Add minimal progress bar using ANSI rendering (#14414)\n\n  
16943,     Update script to use  NET 6 build resources (#14705)\n\n  
16944,     Fix the daily GitHub action (#14711)\n\n  
16945,     Fix webcmdlets to properly construct URI from body when using -NoProxy (#14673)\n\n  
16946,     Bump `XunitXml TestLogger` from 3 0 56 to 3 0 62 (#14702)\n\n  
16947,     Update the `ICommandPredictor` to provide more feedback and also make feedback easier to be corelated (#14649)\n\n  
16948,     #4750 Fix Get-Date -UFormat %u behavior (#14549)\n\nCorrects a behavior of %u in Get-Date -UFormat to match ISO 8601   
16949,     Reset color after writing Verbose  Debug  and Warning message (#14698)\n\n  
16950,     Fix using variable for nested foreach parallel calls (#14548)\n\n  
16951,     Cross-platform updates to DSC code in PowerShell (#13399)\n\n  
16952,     Make universal Deb package based on deb package spec (#14681)\n\n  
16953,     GitHub Actions: fix deprecated ::set-env (#14629)\n\n  
16954,     Bump XunitXml TestLogger from 2 1 45 to 3 0 56 (#14682)\n\nBumps [XunitXml TestLogger (   com/spekt/xunit testlogger) from 2 1 45 to 3 0 56 \r\n- [Release notes (   com/spekt/xunit testlogger/releases)\r\n- [Changelog (   com/spekt/xunit testlogger/blob/master/CHANGELOG md)\r\n- [Commits (   com/spekt/xunit testlogger/compare/v2 1 45   v3 0 56)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16955,     When formatting  if collection is modified  don t fail the entire pipeline (#14438)\n\n  
16956,     Use `Needs-Triage` instead of `Issue-Question` for new issues (#14645)\n\n  
16957,     Update README and metadata json for 7 0 4 release (#14612)\n\n  
16958,     Bump XunitXml TestLogger from 2 1 26 to 2 1 45 (#14660)\n\nBumps [XunitXml TestLogger (   com/spekt/xunit testlogger) from 2 1 26 to 2 1 45 \r\n- [Release notes (   com/spekt/xunit testlogger/releases)\r\n- [Commits (   com/spekt/xunit testlogger/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16959,     Bump NJsonSchema from 10 3 2 to 10 3 3 (#14619)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 3 2 to 10 3 3 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
16960,     Add manual release automation steps and improve changelog script (#14445)\n\n  
16961,     Fix release build to upload global tool packages to artifacts (#14620)\n\n  
16962,     Update distribution support request template to point to dotnet 5 0 support doc (#14578)\n\n  
16963,     Remove security template (#14453)\n\n  
16964,     Port changes from 7 0 4 release (#14637)\n\n* Add 7 0 4 CHANGELOG\r\n* Update metadata json LTS tag to 7 0 4  
16965,     Backport changes from the PowerShell v7 1 1 release (#14621)\n\n* Backport changes from the PowerShell v7 1 1 release\r\n\r\n* Update the  spelling file  
16966,     Fix RCS1215: Expression is always equal to true/false (#14356)\n\n* Fix RCS1215: Expression is always equal to true/false  
16967,     Updated `README` and `metadata json` for PowerShell v7 1 1 release (#14606)\n\n  
16968,     Do not push nupkg artifacts to myget (#14613)\n\n  
16969,     Improve completion of parameters for attributes (#14525)\n\n  
16970,     Add intent for using the Discussions feature in repo (#14399)\n\n  
16971,     Update markdown test tools (#14325)\n\n* Update markdown test tools\r\n\r\n* Update docs  retry flag\r\n\r\n* Fix actual dead links\r\n\r\n* Update links  
16972,      Enable CA2249: Consider using String Contains instead of IndexOf (#14395)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca2249  
16973,     Avoid array allocations from GetDirectories/GetFiles  (#14326)\n\n  
16974,     Write proper error messages for Get-Command     (#13564)\n\n  
16975,     Enable nullable: System Management Automation IRSPDriverInvoke (#14160)\n\n  
16976,     Fix IDE0090: Simplify new expression part 7 (#14341)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
16977,     Fix SA1504: All accessors should be single-line or multi-lin (#14241)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1504 md  
16978,     Fix SA1119 part 1 (#14204)\n\n  
16979,     Enable nullable: System Management Automation Host IHostUISupportsMultipleChoiceSelection (#14172)\n\n  
16980,     Enable nullable: System Management Automation Language ISupportsTypeCaching (#14088)\n\n  
16981,     Enable nullable: System Management Automation Tracing IEtwActivityReverter (#14154)\n\n  
16982,     Enable nullable: System Management Automation IContainsErrorRecord (#14166)\n\n  
16983,     Enable CA1052: Static holder types should be Static or NotInheritable (#14483)\n\n* Enable CA1052: Static holder types should be Static or NotInheritable\r\n\r\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/CA1052\r\n\r\n* Fix SA1505\r\n\r\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1505 md  
16984,     Enable IDE0076: InvalidSuppressMessageAttribute (#14494)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0076  
16985,     Enable IDE0077: LegacyFormatSuppressMessageAttribute (#14495)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0077  
16986,     Avoid `string ToLowerInvariant()` from `GetEnvironmentVariableAsBool()` to avoid loading ICU at startup (#14323)\n\n  
16987,     Fixed typo with ProxyURINotSupplied (#14526)\n\nCo-authored-by: juromer@microsoft com <juromer@microsoft com>  
16988,     Update ini component version in test package json (#14454)\n\n  
16989,     Enable SA1205: Partial elements should declare access (#14441)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1205 md  
16990,     Enable SA1003: Symbols should be spaced correctly (#14476)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1003 md  
16991,     Enable SA1314: Type parameter names should begin with T (#14470)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1314 md  
16992,     Enable SA1216/SA1217: Using static directives (#14471)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1216 md\r\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1217 md  
16993,     Enable SA1213: Event accessors should follow order (#14472)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1213 md  
16994,     Fix RCS1139: Add summary element to documentation comment (#14442)\n\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1139 md  
16995,     Use String Split(char) instead of String Split(String) (#14465)\n\n  
16996,     Use string Contains(char) overload (#14368)\n\n  
16997,     Fix IDE0032: UseAutoProperty part 3 (#14443)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0032  
16998,     Add support to `$PSStyle` for strikethrough and hyperlinks (#14461)\n\n  
16999,     Fix PSStyle blink codes (#14447)\n\n  
17000,     Bump NJsonSchema from 10 3 1 to 10 3 2 (#14451)\n\n  
17001,     Disable libmi dependent tests for macOS  (#14446)\n\n  
17002,     Refactor complex if statement (#14398)\n\n  
17003,     Merge branch  changesfrom-v7 2 0-preview 2 \n  
17004,     Fix Universal Dashboard to refer to PowerShell Universal (#14437)\n\n  
17005,     Add new spelling exemptions\n  
17006,     Update document link because of HTTP 301 redirect (#14431)\n\n  
17007,     Update README + metadata json for 7 2 0-preview 2 (#14401)\n\n  
17008,     Merged PR 13877: Add CHANGELOG for 7 2 0-preview 2\n\nAdd CHANGELOG for 7 2 0-preview 2\n  
17009,     Use one feed in each nuget config in official builds (#14363)\n\nCo-authored-by: Robert Holt <rjmholt@gmail com>  
17010,     Use one feed in each nuget config in official builds (#14363)\n\nCo-authored-by: Robert Holt <rjmholt@gmail com>  
17011,     Fix path signed RPMs are uploaded from in release build (#14424)\n\n  
17012,     Fix path signed RPMs are uploaded from in release build (#14424)\n\n  
17013,     Upgrade `StyleCopAnalyzers` to `v1 2 0-beta 312` (#14354)\n\n  
17014,     Get PowerShell version in `PSVersionInfo` using assembly attribute instead of `FileVersionInfo` (#14332)\n\n  
17015,     Enable nullable: System Management Automation Provider IContentCmdletProvider (#14184)\n\n  
17016,     Enable nullable: System Management Automation IScriptCommandInfo (#14178)\n\n  
17017,     Enable ANSI formatting via `$PSStyle` and support suppressing ANSI output (#13758)\n\n  
17018,     Add  Microsoft PowerShell MarkdownRender  to the package reference list (#14386)\n\n  
17019,     Enable nullable: System Management Automation Interpreter IBoxableInstruction (#14165)\n\n  
17020,     Enable nullable: System Management Automation Provider IDynamicPropertyProvider (#14167)\n\n  
17021,     Enable nullable: System Management Automation Language IScriptExtent (#14179)\n\n  
17022,     Enable nullable: System Management Automation Language ICustomAstVisitor2 (#14192)\n\n  
17023,     Enable nullable: System Management Automation LanguagePrimitives IConversionData (#14187)\n\n  
17024,     Enable nullable:    Automation Remoting Client IWSManNativeApiFacade (#14186)\n\n  
17025,     Enable nullable: System Management Automation Language ISupportsAssignment (#14180)\n\n  
17026,     Enable nullable: System Management Automation ICommandRuntime2 (#14183)\n\n  
17027,     Enable nullable: System Management Automation IOutputProcessingState (#14175)\n\n  
17028,     Enable nullable: System Management Automation IJobDebugger (#14174)\n\n  
17029,     Enable nullable: System Management Automation Interpreter IInstructionProvider (#14173)\n\n  
17030,     Enable nullable: System Management Automation IHasSessionStateEntryVisibility (#14169)\n\n  
17031,     Enable nullable: System Management Automation Tracing IEtwEventCorrelator (#14168)\n\n  
17032,     Fix syntax error in Windows packaging script (#14377)\n\n  
17033,     (#12430) Improve detection of mutable value types (#12495)\n\n  
17034,     Ensure -PipelineVariable is set for all output from script cmdlets (#12766)\n\n  
17035,     Remove redundant local assignment in AclCommands (#14358)\n\n  
17036,     Fix issue with unsigned build (#14367)\n\n  
17037,     Make AppLocker Enforce mode take precedence over UMCI Audit mode (#14353)\n\n  
17038,     Enable nullable: System Management Automation Language IAstPostVisitHandler (#14164)\n\n  
17039,     Enable nullable: System Management Automation IModuleAssemblyInitializer (#14158)\n\n  
17040,     Use `Microsoft PowerShell MarkdownRender` package from `nuget org` (#14090)\n\n  
17041,     Replace GetFiles in TestModuleManifestCommand (#14317)\n\n  
17042,     Enable nullable: System Management Automation Provider IContentWriter (#14152)\n\n  
17043,     Optimize IEnumerable variant of replace operator (#14221)\n\n  
17044,     Simplify getting Encoding in `TranscriptionOption FlushContentToDisk` (#13910)\n\n  
17045,     Mark applicable structs as readonly and use in-modifier (#13919)\n\n  
17046,     Enable nullable: System Management Automation IArgumentCompleter (#14182)\n\n  
17047,     Add `-SkipLimitCheck` switch to `Import-PowerShellDataFile` (#13672)\n\n  
17048,     Enable CA1822: Mark private members as static (#13897)\n\n  
17049,      Fix IDE0090: Simplify new expression part 6 (#14338)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17050,     Restrict New-Object in NoLanguage mode under lock down #14139 (#14140)\n\n  
17051,     Refactor multiply operation for better performance in 2 Commands Utility functions (#14148)\n\n  
17052,     Fix example nuget config (#14349)\n\n  
17053,     The -Stream parameter now works with directories (#13941)\n\n  
17054,     Avoid array allocations from GetDirectories/GetFiles  (#14328)\n\n  
17055,     Move macOS and nuget to esrp signing (#14324)\n\n  
17056,     Fix nuget packaging to scrub `NullableAttribute` (#14344)\n\n  
17057,     Avoid array allocations from GetDirectories/GetFiles  (#14330)\n\n  
17058,     Use `Environment TickCount64` instead of `Datetime Now` as the random seed for AppLocker test file content (#14283)\n\n  
17059,     Bump Microsoft NET Test Sdk from 16 8 0 to 16 8 3 (#14310)\n\nBumps [Microsoft NET Test Sdk (   com/microsoft/vstest) from 16 8 0 to 16 8 3 \r\n- [Release notes (   com/microsoft/vstest/releases)\r\n- [Commits (   com/microsoft/vstest/compare/v16 8 0   v16 8 3)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17060,     Fix RCS1188: Remove redundant auto-property initialization part 2 (#14262)\n\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1188 md  
17061,     Fix a broken link in Code Guidelines doc (#14314)\n\n  
17062,     Avoid unnecessary array allocations when searching in GAC (#14291)\n\n  
17063,     Use `OrdinalIgnoreCase` in `CommandLineParser` (#14303)\n\n  
17064,     Avoid an exception if file system does not support reparse points (#13634)\n\n  
17065,     Enable nullable: System Management Automation Host IHostSupportsInteractiveSession (#14170)\n\n  
17066,     Enable nullable: System Management Automation Provider IPropertyCmdletProvider (#14176)\n\n  
17067,     Use `StringComparison Ordinal` insted of `StringComparison CurrentCulture` (#14298)\n\n  
17068,     Bump Markdig Signed from 0 22 0 to 0 22 1 (#14305)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 22 0 to 0 22 1 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/0 22 0   0 22 1)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17069,     Fix IDE0090: Simplify new expression part 5 (#14301)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17070,     Enable IDE0075: SimplifyConditionalExpression (#14078)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0075  
17071,     Remove unnecessary usings part 9 (#14288)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17072,     Fix StyleCop and MarkdownLint CI failures (#14297)\n\n* Update link to xunit docs\r\n* Upgrade StyleCopAnalyzers to v1 2 0-beta 261  
17073,     Enable SA1000: Keywords should be spaced correctly (#13973)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1000 md  
17074,     Fix RCS1188: Remove redundant auto-property initialization part 1 (#14261)\n\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1188 md  
17075,     Mark private members as static part 10 (#14235)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17076,     Mark private members as static part 9 (#14234)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17077,     Fix SA1642 for Microsoft Management Infrastructure CimCmdlets (#14239)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642 md\r\n  
17078,     Use AsSpan/AsMemory slice constructor (#14265)\n\n* Use AsSpan slice constructor\r\n\r\n* Use AsMemory slice constructor  
17079,     Fix IDE0090: Simplify new expression part 4 6 (#14260)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17080,     Fix IDE0090: Simplify new expression part 4 5 (#14259)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17081,     Fix IDE0090: Simplify new expression part 4 3 (#14257)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17082,     Fix IDE0090: Simplify new expression part 4 2 (#14256)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17083,     Fix IDE0090: Simplify new expression part 2 (#14200)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17084,     Enable SA1643: Destructor summary documentation should begin with standard text (#14236)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1643 md  
17085,     Fix IDE0090: Simplify new expression part 4 4 (#14258)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17086,     Use xml documentation child blocks correctly (#14249)\n\n  
17087,     Fix IDE0090: Simplify new expression part 4 1 (#14255)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17088,     Use  consistent spacing in xml documentation tags (#14231)\n\n  
17089,     Enable IDE0074: Use coalesce compound assignment (#13396)\n\n* Autofix IDE0074: Use compound assignment\r\n  
17090,     Fixing formatting in Reset-PWSHSystemPath ps1 (#13689)\n\n  
17091,     Remove unnecessary finalizers (#14248)\n\n  
17092,     Mark local variable as const (#13217)\n\nRCS1118: Mark local variable as const    com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1118 md  
17093,     Fix IDE0032: UseAutoProperty part 2 (#14244)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0032\r\n  
17094,     Bump Microsoft ApplicationInsights from 2 15 0 to 2 16 0 (#14031)\n\nBumps [Microsoft ApplicationInsights (   com/Microsoft/ApplicationInsights-dotnet) from 2 15 0 to 2 16 0 \r\n- [Release notes (   com/Microsoft/ApplicationInsights-dotnet/releases)\r\n- [Changelog (   com/microsoft/ApplicationInsights-dotnet/blob/develop/CHANGELOG md)\r\n- [Commits (   com/Microsoft/ApplicationInsights-dotnet/compare/2 15 0   2 16 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17095,     Fix IDE0032: UseAutoProperty part 1 (#14243)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0032  
17096,     Mark private members as static part 8 (#14233)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17097,     Fix CA1822: Mark members as static part 6 (#14229)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17098,     Fix CA1822: Mark members as static part 5 (#14228)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17099,     Fix CA1822: Mark members as static part 4 (#14227)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17100,     Fix CA1822: Mark members as static part 3 (#14226)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17101,     Fix CA1822: Mark members as static part 2 (#14225)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17102,     Fix CA1822: Mark members as static part 1 (#14224)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17103,     Use see keyword in documentation (#14220)\n\nFix [DOC104 (   com/DotNetAnalyzers/DocumentationAnalyzers/blob/master/docs/DOC104 md)  
17104,     Enable CA2211: Non-constant fields should not be visible (#14073)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca2211\r\n  
17105,     Enable CA1816: Dispose methods should call SuppressFinalize (#14074)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1816\r\n  
17106,     Remove incorrectly implemented finalizer (#14246)\n\n  
17107,     Move Linux to Esrp signing (#14210)\n\n  
17108,     Fix CA1822: Mark members as static part 7 (#14230)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1822  
17109,     Fix SA1122: Use string Empty for empty strings (#14218)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1122 md  
17110,     Fix various xml documentation issues (#14223)\n\n* Use correct paramref tag\r\n\r\n* End summary tag in correct position\r\n\r\n* Escape generic identifiers correctly\r\n\r\n*    com/DotNetAnalyzers/DocumentationAnalyzers/blob/master/docs/DOC202 md\r\n\r\n* Remove extraneous space  
17111,     Avoid creating instances of the generated delegate helper class (#14128)\n\n  
17112,     Enable CA1012: Abstract types should not have public constructors (#13940)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1012  
17113,     Remove unnecessary usings part 8 (#14072)\n\n* Sorting usings\r\n\r\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17114,     Enable SA1212: Property accessors should follow order (#14051)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202 md  
17115,     Enable SA1006: Preprocessor keywords should not be preceded by space (#14052)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1006 md  
17116,     Fix SA1642 for Microsoft PowerShell Commands Utility (#14142)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642 md  
17117,     Enable CA2216: Disposable types should declare finalizer (#14089)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca2216  
17118,     Wrap and name LoadBinaryModule arguments (#14193)\n\n  
17119,     Wrap and name GetListOfFilesFromData arguments (#14194)\n\n  
17120,     Enable SA1002: Semicolons should be spaced correctly (#14197)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1002 md  
17121,     Fix IDE0090: Simplify new expression part 3 (#14201)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17122,     Enable SA1106: Code should not contain empty statements (#13964)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1106 md  
17123,     Code performance fixes follow-up (#14207)\n\n  
17124,     Update markdown test packages with security fixes (#14145)\n\n  
17125,     Remove useless comments (#14199)\n\n  
17126,     Fix IDE0090: Simplify new expression part 1 (#14027)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0090  
17127,     Enable SA1517: Code should not contain blank lines at start of file (#14131)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1517 md  
17128,     Enable SA1131: Use readable conditions (#14132)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1131 md  
17129,     Enable SA1507: Code should not contain multiple blank lines in a row (#14136)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1507 md  
17130,     Enable SA1516: Elements should be separated by blank line (#14137)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1516 md  
17131,     Enable IDE0031: Null check can be simplified (#13548)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0031  
17132,     Enable CA1065: Do not raise exceptions in unexpected locations (#14117)\n\n  
17133,     Enable CA1000: Do not declare static members on generic types (#14097)\n\n  
17134,     Merge the v7 2 0-preview 1 release branch to GitHub master\n\n  
17135,     Enable SA1007: Operator keyword should be followed by space (#14130)\n\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1007 md  
17136,     Expanding where alias to Where-Object in Reset-PWSHSystemPath ps1 (#14113)\n\n  
17137,     Fix whitespace issues (#14092)\n\n  
17138,     Fix a typo in the `Get-ChangeLog` function (#14129)\n\n  
17139,     Revert  Fix nullable usage on authenticode (#13791) (#13804)  (#14134)\n\nThis reverts commit fbca9141ecf27b6dd3fe4bd0df2c7a35a2d44a5a   
17140,     Revert  Change Nullable usage (#13793)  (#14135)\n\nThis reverts commit 2e0b51d97056e69747153125ce49fde65da4a82b   
17141,     Update `README` and `metadata json` for `7 2 0-preview 1` release (#14104)\n\n  
17142,     Add StyleCop Analyzers package (#13963)\n\n* Add StyleCop Analyzers with all rules disabled\r\n\r\n* Downgrade to 1 2 0-beta 205\r\n\r\n* Enable SA1518: Use line endings correctly at end of file\r\n\r\n   com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1518 md  
17143,     Merged PR 13516: Update the ChangeLog for the 7 2 0-preview 1 release\n\nUpdate the ChangeLog for the 7 2 0-preview 1 release\n  
17144,     Revert  Update hyperlink for `DefaultPromptFunctionText` (#13176)  (#14107)\n\n  
17145,     Enable IDE0041: UseIsNullCheck (#14041)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0041  
17146,     Enable IDE0082: ConvertTypeOfToNameOf (#14042)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0082  
17147,     Remove unnecessary usings part 4 (#14023)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17148,     Fix PriorityAttribute name (#14094)\n\nFix regression after #13496  
17149,     Write better error message if config file is broken (#13496)\n\n  
17150,     Update hyperlink for `DefaultPromptFunctionText` (#13176)\n\n  
17151,     Reinstate `Test-Connection` tests (#13324)\n\n  
17152,     Bump `NJsonSchema` from `10 2 2` to `10 3 1` (#14040)\n\n  
17153,     Move windows package signing to use ESRP (#14060)\n\n  
17154,     Fix RCS1049: Simplify boolean comparison (#13994)\n\n* Fix RCS1049: Simplify boolean comparison\r\n\r\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1049 md\r\n\r\nRelated    com/dotnet/runtime/pull/44564  
17155,     Enable nullable: System Management Automation Internal IValidateSetValuesGenerator (#14018)\n\n  
17156,     Enable IDE0062: MakeLocalFunctionStatic (#14044)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0062  
17157,     Enable CA2207: Initialize value type static fields inline (#14068)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca2207  
17158,     Bump Microsoft NET Test Sdk from 16 7 1 to 16 8 0 (#14020)\n\nBumps [Microsoft NET Test Sdk (   com/microsoft/vstest) from 16 7 1 to 16 8 0 \r\n- [Release notes (   com/microsoft/vstest/releases)\r\n- [Commits (   com/microsoft/vstest/compare/v16 7 1   v16 8 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17159,     Enable CA1837: Use  Environment ProcessId  (#14063)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1837  
17160,     Remove unnecessary usings part 5 (#14050)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17161,     Remove unnecessary usings part 6 (#14065)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17162,     Bump Microsoft CodeAnalysis CSharp from 3 7 0 to 3 8 0 (#14075)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 7 0 to 3 8 0 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17163,     Remove unnecessary usings part7 (#14066)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17164,     Fix links to LTS versions for Windows (#14070)\n\n  
17165,     Remove workarounds for  NET 5 RTM builds (#14038)\n\n  
17166,     Migrate 3rd party signing to ESRP (#14010)\n\nCo-authored-by: Robert Holt <rjmholt@gmail com>  
17167,     Fixes to release pipeline for GA release (#14034)\n\n  
17168,     Update README and metadata json for upcoming release (#14026)\n\n  
17169,     Update the Change Log for `v7 1 0` release (#14035)\n\n  
17170,     Remove LINQ Count method uses (#13545)\n\n  
17171,     Autofix SA1518: The code must not contain extra blank lines at the end of the file (#13574)\n\n  
17172,     Enable CA1829: Use Length/Count property instead of Count() (#13925)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1829\r\n  
17173,     Enable CA1827: Do not use Count() or LongCount() when Any() can be used (#13923)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1827  
17174,     Fix nullable usage on displayDescriptionData_Wide (#13805)\n\n  
17175,     Fix nullable usage on displayDescriptionData_Table cs (#13808)\n\n  
17176,     Remove unnecessary usings part 3 (#14021)\n\n* Fix IDE0005: Remove unnecessary import\r\n\r\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005\r\n\r\n* Sort usings  
17177,     Remove unnecessary usings part 2 (#14017)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005  
17178,     Remove unnecessary usings part 1 (#14014)\n\n* Fix IDE0005: Remove unnecessary import\r\n\r\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0005\r\n\r\n* Sort usings  
17179,     Enable IDE0040: AddAccessibilityModifiers (#13962)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0040\r\n  
17180,     Revert changes to ComInterop (#14012)\n\n* Revert changes to ComInterop\r\n\r\nsrc/System Management Automation/engine/ComInterop/\r\n\r\n* Disable code analysis in ComInterop  
17181,     Make applicable private Guid fields readonly (#14000)\n\n* Make applicable private Guid fields readonly\r\n\r\n* Use in-modifier for passing a readonly Guid  
17182,     Fix IDE0044: MakeFieldReadonly part 11 (#13966)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17183,     Fix CA1003: Use generic event handler instances (#13937)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1003  
17184,     Don t do a shallow checkout (#13992)\n\n  
17185,     Add validation and dependencies for `Ubuntu 20 04` distribution to packaging script (#13993)\n\n  
17186,     Add  NET install workaround for RTM (#13991)\n\n  
17187,     Move to ESRP signing for Windows files (#13988)\n\nCo-authored-by: Aditya Patwardhan <adityap@microsoft com>  
17188,     Simplify delegate creation (#13578)\n\n* Autofix RCS1048\r\n\r\n* Autofix RCS1021\r\n  
17189,     Fix RCS1033: Remove redundant boolean literal part 1 (#13454)\n\n* Remove redundant boolean literal\r\n\r\nAutofix RCS1033: Remove redundant boolean literal\r\n\r\n* revert changes in System Management Automation  
17190,     Fix RCS1221: Use pattern matching instead of combination of  as  operator and null check (#13333)\n\n* Autofix RCS1221: Use pattern matching instead of combination of  as  operator and null check\r\n\r\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1221 md\r\n\r\n* Restore stripped comments  
17191,     Use `is not` syntax part 2 (#13338)\n\n  
17192,     Replace magic number with constant in PDH (#13536)\n\n* Replace magic number with constant\r\n\r\n* Remove useless assignment (codacy)  
17193,     Fix accessor order (#13538)\n\n* Fix Microsoft PowerShell Commands Utility\r\n\r\n* Fix System Management Automation\r\n\r\n* Fix Microsoft Management Infrastructure CimCmdlets\r\n\r\n* Fix Microsoft PowerShell Commands Management\r\n\r\n* Fix Microsoft WSMan Management  
17194,     Enable IDE0054: Use compound assignment (#13546)\n\n* Autofix IDE0054\r\n   microsoft com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074  
17195,     Fix RCS1098: Constant values should be on right side of comparisons (#13833)\n\n* Fix RCS1098: Constant values should be on right side of comparisons\r\n\r\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1098 md\r\n  
17196,     Enable CA1068: CancellationToken parameters must come last (#13867)\n\n* Enable CA1068: CancellationToken parameters must come last\r\n  
17197,     Enable CA10XX rules with suggestion severity (#13870)\n\nCA1016: Mark assemblies with assembly version\r\nCA1018: Mark attributes with AttributeUsageAttribute\r\nCA1041: Provide ObsoleteAttribute message\r\nCA1047: Do not declare protected member in sealed type\r\nCA1061: Do not hide base class methods\r\nCA1070: Do not declare event fields as virtual\r\n  
17198,     Enable CA20XX rules with suggestion severity (#13928)\n\n* CA2009: Do not call ToImmutableCollection on an ImmutableCollection value\r\n* CA2011: Avoid infinite recursion\r\n* CA2012: Use ValueTasks correctly  
17199,     Enable IDE0064: MakeStructFieldsWritable (#13945)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0064  
17200,     Fix IDE0044: MakeFieldReadonly part 12 (#13967)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17201,     Fix IDE0044: MakeFieldReadonly part 13 (#13968)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17202,     Fix IDE0044: MakeFieldReadonly part 15 (#13970)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17203,     Fix IDE0044: MakeFieldReadonly part 16 (#13971)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17204,     Enable CA18XX rules with suggestion severity (#13924)\n\n  
17205,     Run `dotnet-format` to improve formatting of source code (#13503)\n\n  
17206,     Update pwsh -? output to match docs (#13748)\n\n  
17207,     Enable CA1825: Avoid zero-length array allocations (#13961)\n\n  
17208,     Mark PowerShellAssemblyLoadContextInitializer with static modifier (#13874)\n\n  
17209,     Fix IDE0044: MakeFieldReadonly part 14 (#13969)\n\n  
17210,     Fix a logic bug in `MapSecurityZone` (#13921)\n\n  
17211,     Bump `Microsoft PowerShell Native` version from `7 1 0-rc 2` to `7 1 0` (#13976)\n\n  
17212,     Update `PSReadLine` version to `2 1 0` (#13975)\n\n  
17213,     Bump  NET to version `5 0 100-rtm 20526 5` (#13920)\n\n  
17214,     Remove unnecessary using in utils folder (#13863)\n\n  
17215,     Fix IDE0044: MakeFieldReadonly part 1 (#13884)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17216,     Fix IDE0044: MakeFieldReadonly part 8 (#13891)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17217,     Fix IDE0044: MakeFieldReadonly part 4 (#13887)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17218,     Add IDE analyzer rule IDs to comments (#13960)\n\n  
17219,     Enable CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder (#13926)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1830  
17220,     Enable IDE0036: OrderModifiers (#13958)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0036  
17221,     Enforce code style in build (#13957)\n\n* Enable EnforceCodeStyleInBuild\r\n\r\n* Disable rules breaking build\r\n  
17222,     Fix nullable usage on authenticode (#13791) (#13804)\n\n  
17223,     Use Environment CurrentManagedThreadId (#13803)\n\n  
17224,     Fix IDE0044: MakeFieldReadonly part 10 (#13893)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17225,     Enable CA1836: Prefer IsEmpty over Count when available (#13877)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1836  
17226,     Enable CA1834: Consider using  StringBuilder Append(char)  when applicable (#13878)\n\n   microsoft com/dotnet/fundamentals/code-analysis/quality-rules/ca1834  
17227,     Fix IDE0044: MakeFieldReadonly part 2 (#13885)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17228,     Fix IDE0044: MakeFieldReadonly part 5 (#13888)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17229,     Update script to use  NET RTM feeds (#13927)\n\n  
17230,     Fix IDE0044: MakeFieldReadonly part 9 (#13892)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17231,     Fix IDE0044: MakeFieldReadonly part 6 (#13889)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17232,     Fix IDE0044: MakeFieldReadonly part 3 (#13886)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17233,     Fix IDE0044: MakeFieldReadonly part 7 (#13890)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0044  
17234,     Enable IDE0048: AddRequiredParentheses (#13896)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048  
17235,     Enable IDE1005: InvokeDelegateWithConditionalAccess (#13911)\n\n* Enable IDE1005: InvokeDelegateWithConditionalAccess\r\n\r\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide1005\r\n  
17236,     Enable IDE0036: OrderModifiers (#13881)\n\n   microsoft com/dotnet/fundamentals/code-analysis/style-rules/ide0036  
17237,     Use span-based string Concat inatead of string Substring (#13500)\n\nBefore:\r\n\r\n```csharp\r\nstr1 + str2 Substring(   ) + str3\r\n```\r\n\r\nAfter:\r\n```csharp\r\nstring Concat(str1  str2 AsSpan(   )  str3)\r\n```  
17238,     Fix NRE in Test-Json (#12942)\n\n  
17239,     Enable CodeQL Security scanning (#13894)\n\n  
17240,     Enable CA1050: Declare types in namespaces (#13872)\n\n  
17241,     Add global AnalyzerConfig with default configuration (#13835)\n\n* Add default global AnalyzerConfig\r\n\r\nAdd `microsoft codeanalysis netanalyzers\\5 0 0-rtm 20502 2\\editorconfig\\AllRulesDefault\\ editorconfig`\r\n\r\n* Disable diagnostics for Microsoft Management UI Internal\r\n\r\n* Add IDE diagnostics to AnalyzerConfig\r\n\r\nCopied from:\r\n<   com/stephentoub/runtime/blob/3b6600cbefe6b96706c5315ce184accbb4501f3b/eng/CodeAnalysis ruleset> and converted using `RulesetToEditorconfigConverter exe`  
17242,     Remove unnecessary using in namespaces folder (#13860)\n\n  
17243,     Remove unnecessary using in security folder (#13861)\n\n  
17244,     Add checkout step to release build templates (#13840)\n\n  
17245,     Turn on `/features:strict` for all projects (#13383)\n\n  
17246,     Make `dispose` in `TranscriptionOption` idempotent (#13839)\n\nCo-authored-by: Krishna Yalavarthi <kryalava@microsoft com>  
17247,     Update README and metadata json for 7 1 0-rc 2 release (#13821)\n\n  
17248,     Minor fix keyword typo in csharp comment  (#13811)\n\nCo-authored-by: pz87 <paul k zhang@newegg com>  
17249,     Remove unnessary using (#13814)\n\n  
17250,     Add PowerShell Modules to the tracked modules list (#12183)\n\n  
17251,     Change Nullable usage (#13793)\n\n  
17252,     Bump `Microsoft PowerShell Native` to `7 1 0-rc 2` (#13794)\n\n  
17253,     Relax further SSL verification checks for WSMan on non-Windows hosts with verification available (#13786)\n\n  
17254,     Move PowerShell build to  NET 5 RC 2 (#13780)\n\n  
17255,     Add missing `PSToken` entries (#13779)\n\n  
17256,     Update `PSReadLine` version to `2 1 0-rc1` (#13777)\n\n* Update PSReadLine version to 2 1 0-rc1\r\n\r\n* Update the file  files wxs   
17257,     Rename  Get-Subsystem  to  Get-PSSubsystem  and fix two minor issues (#13765)\n\n  
17258,     Change default fallback encoding for GetEncoding in Start-Transcript (#13732)\n\n  
17259,     Add `Get-ExperimentalFeature` `OutputType` attribute (#13738)\n\n  
17260,     Fix blocking wait when starting file associated with a Windows application (#13750)\n\n* Fix blocking wait when starting file associated with a Windows application in elevated process\r\n\r\n* refactor check if app is WindowsApp  
17261,     Bump NJsonSchema from 10 2 1 to 10 2 2 (#13751)\n\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17262,     Add flag to make Linux script publish to production repo (#13714)\n\n  
17263,     Bump Markdig Signed from 0 21 1 to 0 22 0 (#13741)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 21 1 to 0 22 0 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/0 21 1   0 22 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17264,     Revert  Change `PSNativePSPathResolution` to not be Experimental  (#13734)\n\n* Revert  Change `PSNativePSPathResolution` to not be Experimental (#13522) \r\n\r\nThis reverts commit 74c743d279a91c9494ea7a7baa879cd1c31228ac \r\n  
17265,     Bump NJsonSchema from 10 1 26 to 10 2 1 (#13722)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 26 to 10 2 1 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17266,     markdownlint security updates (#13730)\n\n* security updates\r\n\r\n* exclude markdown test changes from product CI is future  
17267,     Fix crontab formatting in example doc (#13712)\n\n* Updating formatting\n\nFixing formatting\n\n* Update CronTab psm1  
17268,     Update `README` and `metadata json` for `7 1 0-rc 1` release (#13708)\n\n  
17269,     Use new release script for Linux packages (#13705)\n\n  
17270,     Emit warning if `ConvertTo-Json` exceeds `-Depth` value (#13692)\n\n  
17271,     Fix case where exception message contains  `n  on Windows (#13684)\n\n  
17272,     Bump `PowerShellGet` from 2 2 4 to 2 2 5 (#13683)\n\n  
17273,     Bump `Microsoft ApplicationInsights` from 2 14 0 to 2 15 0 (#13639)\n\n  
17274,     Update PowerShell to build against dotnet 5 0-RC 1 (#13643)\n\n  
17275,     Recognize CONOUT$ and CONIN$ as reserved device names (#13508)\n\n  
17276,     Fix ConciseView for interactive advanced function writing error (#13623)\n\n  
17277,     Write the InstallLocation to fixed registry key (#13576)\n\n  
17278,     Update README and metadata json for 7 1 0-preview 7 release (#13565)\n\n  
17279,     Fixed the indentation of the help content for `-nologo` (#13557)\n\n  
17280,     Merge v7 1 0-preview 7 release branch to master\n\n  
17281,     Merge branch  master  into preview 7  
17282,     Merged PR 12607: Fix the commit comparing link\n\nFix the commit comparing link\n  
17283,     Merged PR 12600: Update change log for the v7 1 0-preview 7 release\n\nUpdate change log for the v7 1 0-preview 7 release\n  
17284,     Make a couple of fixes to `ComInterop` code as suggested by  NET team (#13533)\n\n  
17285,     Bump NJsonSchema from 10 1 24 to 10 1 26 (#13586)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 24 to 10 1 26 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17286,     Merged PR 12589: Add Microsoft NET Test Sdk dependency\n\nAlso update xunit dependencies to latest patch \n  
17287,     Autofix RCS1068: Simplify logical negation (#13555)\n\n  
17288,     Merged PR 12555: Update  NET version to 5 0 0-preview 8 20407 11\n\nUpdate  NET version to 5 0 0-preview 8 20407 11\n  
17289,     Revert  Add the parameter `-Paged` to `Get-Help` to support paging (#13374)  (#13519)\n\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>\r\nCo-authored-by: Dongbo Wang <dongbow@microsoft com>  
17290,     Add support for Tls 1 3 in Web cmdlets (#13409)\n\n  
17291,     Add single blank line after copyright header (#13486)\n\n  
17292,     Use read-only auto-implemented properties (#13507)\n\n* Autofix RCS1170: Use read-only auto-implemented property\r\n  
17293,     Use boolean instead of bitwise operators on bools (#13506)\n\n* Autofix RCS1233: Use short-circuiting operator\r\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1233 md  
17294,     vscode: Add editorconfig to recommended extensions (#13537)\n\n  
17295,     Fix erroneous assert (#13495)\n\n  
17296,     Cleanup: remove duplicate words in comments (#13539)\n\n  
17297,     Update to  NET 5 preview 8 (#13530)\n\n  
17298,     Change stage dependency for docker release stage in release pipeline (#13512)\n\n  
17299,     Reformat StringUtil (#13509)\n\n  
17300,     Add null check for args in CommandLineParser (#13451)\n\n  
17301,     Process reparse points for Microsoft Store applications (#13481)\n\n  
17302,     Use `uint` instead of `long` for `PDH` constants (#13502)\n\n  
17303,     Move `PSNullConditionalOperators` feature out of experimental (#13529)\n\n  
17304,     Change `PSNativePSPathResolution` to not be Experimental (#13522)\n\n  
17305,     Use field if property does not exist for `ObRoot` (#13375)\n\n  
17306,     Remove `ZapDisable` if statement from `build psm1` to prevent `InvalidOperation` error (#13350)\n\n  
17307,     Cleanup: Remove redundant empty lines (#13404)\n\n  
17308,     Add StringUtil Format overload to avoid unnecessary allocations (#13408)\n\n* Rename parameters to correspond to string Format\r\n\r\n* Add addtional overload to avoid allocations at call sites  
17309,     Fix test hooks for `CommandLineParameterParser` (#13459)\n\n  
17310,     Suppress `UTF-7` obsolete warnings (#13484)\n\n  
17311,     Avoid multiple enumerations of an `IEnumerable<Expression>` instance in `Compiler cs` (#13491)\n\n  
17312,     Bump Microsoft NET Test Sdk from 16 7 0 to 16 7 1 (#13492)\n\nBumps [Microsoft NET Test Sdk (   com/microsoft/vstest) from 16 7 0 to 16 7 1 \r\n- [Release notes (   com/microsoft/vstest/releases)\r\n- [Commits (   com/microsoft/vstest/compare/v16 7 0   v16 7 1)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17313,     Change `Add-Type -OutputType` to not support `ConsoleApplication` and `WindowsApplication` (#13440)\n\n  
17314,     Initial work of the subsystem plugin model (for minimal powershell) (#13186)\n\n  
17315,     Create the folder before copying the global tools (#13476)\n\n  
17316,     Optimize  GetSystemLockdownPolicy  for non-lockdown scenarios (#13438)\n\n  
17317,     Fix `$?` to not be `$false` when native command writes to `stderr` (#13395)\n\n  
17318,     Remove redundant delegate creation (#13441)\n\n  
17319,     Disable WMF link invocation test (#13479)\n\n  
17320,     A few fixes to the release pipeline (#13473)\n\n  
17321,     Bump Markdig Signed from 0 20 0 to 0 21 1 (#13463)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 20 0 to 0 21 1 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/0 20 0   0 21 1)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17322,     Add a precheck for git to build psm1 (#13227)\n\n  
17323,     Create warnings when UTF7 is specified as an encoding (#13430)\n\n  
17324,     Merge 7 1 0-preview 6 changes into master (#13466)\n\nMerge 7 1 0-preview 6 changes into master  
17325,     Update `README` links and `metadata json` for `7 1 0-preview 6` (#13437)\n\n  
17326,     Merged PR 12339: Change the variable group name\n\nChange the variable group name\n  
17327,     Merged PR 12336: Update CHANGELOG for 7 1 0-preview 6\n  
17328,     Make the parameter  args  non-nullable in the public `ConsoleHost` APIs (#13429)\n\n  
17329,     Create release pipeline as a yaml pipeline (#13394)\n\n  
17330,     Update infrastructure to consume private builds from  NET (#13427)\n\n  
17331,     Add missing dispose for CancellationTokenSource (#13420)\n\n  
17332,     Fix breaks in packages daily build due to macOS signing changes (#13421)\n\n  
17333,     Add `-UnixTimeSeconds` to `Get-Date` to allow Unix time input (#13084)\n\n  
17334,     Refactor command line parser to do early parsing (#11482)\n\n  
17335,     Add the parameter `-Paged` to `Get-Help` to support paging (#13374)\n\n  
17336,     Sign individual files in pkg (#13392)\n\nCo-authored-by: Aditya Patwardhan <adityap@microsoft com>  
17337,     Fix `Get-Help` not properly displaying if parameter supports wildcards (#13353)\n\n  
17338,     Fix comparison of value type object to null (#13285)\n\n  
17339,     fixed/clarified instructions for running Start-PSPester tests (#13373)\n\n  
17340,     Improve inline documentation for VerbInfo (#13265)\n\n  
17341,     Disable code sign validation on jobs that do not sign (#13389)\n\n  
17342,     Fix `dotnet` install errors (#13387)\n\n  
17343,     Use  is  operator instead of  as  operator (#13287)\n\n  
17344,     Refresh and enable the `ComInterop` code in PowerShell (#13304)\n\n  
17345,     Make `$ErrorActionPreference` not affect `stderr` output of native commands (#13361)\n\n  
17346,     Update pwsh help for -InputFormat parameter (#13355)\n\n  
17347,     Revert  Add password confirmation in Get-Credential (#12782)  (#13372)\n\nThis reverts commit a6bd47f03155eeca52facd4ae5721bfaa41fe6ac   
17348,     Change SwitchParameters from fields to properties (#13291)\n\n  
17349,     Bump `PSReadLine` from 2 0 2 to 2 0 4 (#13240)\n\n  
17350,     Update build documentation for Visual Studio 2019 dependency (#13336)\n\n  
17351,     Bump `Microsoft CodeAnalysis CSharp` from 3 6 0 to 3 7 0 (#13360)\n\n  
17352,     Bump `Microsoft NET Test Sdk` from 16 6 1 to 16 7 0 (#13364)\n\n  
17353,     Change  operable  to  executable  (#13281)\n\n* Change  operable  to  executable  in a resource string  
17354,     Remove `AssemblyInfo` property from list views (#13331)\n\n  
17355,     Switch to MIT license for files copied from Roslyn (#13305)\n\n  
17356,     Bump `xunit runner visualstudio` from 2 4 2 to 2 4 3 (#13343)\n\n  
17357,     Allow explicitly specified named parameter to supersede the same one from hashtable splatting (#13162)\n\nAllow explicitly specified named parameter to supersede the same one from hashtable splatting \r\nThe work is done in parameter binder  so that parameters can be resolved to cover a parameter s official name  alias name  and unambiguous partial prefix name \r\n\r\nThe changes covers covers Hashtable splatting in 3 scenarios:\r\n\r\n- Cmdlet or advanced script invocation;\r\n- Simple function invocation;\r\n- ScriptBlock GetPowerShell(   )  where the script block contains command invocation only and uses Hashtable splatting \r\n\r\nSome code refactoring is done to ParameterBinderController to avoid redundant code being duplicated in CmdletParameterBinderController and ScriptParameterBinderController   
17358,     Increase the timeout of Windows daily build to 90 minutes (#13354)\n\n  
17359,     HelpSystem: Improve the wording of inline comments (#13274)\n\n  
17360,     Improve BigInteger casting behaviours (#12629)\n\n  
17361,     Use authenticode cert for msix signing (#13330)\n\n  
17362,     Fix Get-Acl -LiteralPath  HKLM:Software\\Classes\\*  behaviour (#13107)\n\n* Fix #11566 bug\r\n\r\nAdd pester test for Get-Acl cmdlet\r\n\r\n* Replace -pending parameter with -skip\r\n\r\n* Fix test failing in Linux and MacOS  
17363,     Use `is not` syntax where appropriate and remove unnecessary parentheses (#13323)\n\n  
17364,     Revert  Add action to label size of PR  (#13325)\n\n  
17365,     Add `DefaultVisit` method to the visitor interface and class (#13258)\n\n  
17366,     Fix conflicting shorthand switch `-s` (sta) for pwsh (#13262)\n\n  
17367,     Change `Read-Host -MaskInput` to use existing `SecureString` path  but return as plain text (#13256)\n\n  
17368,     Remove unreachable code in CustomShellCommands cs (#13316)\n\n  
17369,     Add action to label the size of a PR (#13321)\n\n  
17370,     Revert  Use `is null` syntax (#13277)  (#13322)\n\nThis reverts commit 6c03776d743edfdffc3e347a7d7249864b5e2447   
17371,     Update the `dependabot` configuration to version 2 (#13230)\n\n  
17372,     Add copyright header to ` editorconfig` and update files (#13306)\n\n  
17373,     Use `is null` syntax (#13277)\n\nReplace `== null` with `is null`\r\n  
17374,     Make the failing test pending to unblock PR CIs (#13310)\n\n* Mark Test-Connection tests as pending\r\n  
17375,     Fixing typo in `Out-File cs` and `Out-Printer cs` (#13298)\n\n  
17376,     Grammar correction of Readme md and other docs (#13269)\n\n  
17377,     Fix Test-XUnitTestResults function (#13270)\n\n  
17378,     Remove ComEnumerator as COM objects using IEnumerator is now supported in dotnet 5 0 (#13259)\n\n  
17379,     Add default help content to the assets folder (#13257)\n\n* Add default help content to the assets folder\r\n* Reformatted and removed TechNet reference  
17380,     Use temp personal path at Runspace startup when env  HOME  not defined (#13239)\n\n  
17381,     Fix SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation (#13249)\n\nSee    com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1026 md  
17382,     Fix `Invoke-Command` to detect recursive call of the same history entry (#13197)\n\n  
17383,     Add password confirmation in Get-Credential (#12782)\n\n* Add parameter -ReEnterPassword to prompt user to re-enter the password for confirmation\r\n\r\n* Add new public overload function PromptForCredential  
17384,     Update  NET SDK version from `5 0 100-preview 7 20366 2` to `5 0 100-preview 7 20366 15` (#13200)\n\nCo-authored-by: github-actions[bot  <41898282+github-actions[bot @users noreply github com>  
17385,     Add  GitHub Actions Python builds  to `ADOPTERS md` (#13228)\n\n  
17386,     Set C# language version to preview/9 0 (#13090)\n\n  
17387,     Add `-Runspace` parameter to all `*-PSBreakpoint` cmdlets (#10492)\n\n  
17388,     Use PowerShell Core for build and test of package in CI build (#13223)\n\n  
17389,     Remove rcedit dependency  move daily ico dependency to props file (#13123)\n\n  
17390,     Bump NJsonSchema from 10 1 23 to 10 1 24 (#13214)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 23 to 10 1 24 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17391,     Change exe  -inputformat  switch prefix  -in  to  -inp  to fix conflict with  -interactive  (#13205)\n\n  
17392,     Avoid usage of do statement to create an infinite loop (#13137)\n\n* Autofix RCS1063\r\n  
17393,     Update change logs for `6 2 x` and `7 0 x` (#13194)\n\n  
17394,     Update  NET SDK version from `5 0 100-preview 7 20364 3` to `5 0 100-preview 7 20366 2` (#13192)\n\n  
17395,     Update `README md` and `metadata json` for the v7 0 3 release (#13187)\n\n  
17396,     Add support for installing ARM64 MSIX package  (#13043)\n\n  
17397,     Fix azure file copy issues in release build (#13182)\n\nCo-authored-by: Aditya Patwardhan <Aditya Patwardhan>  
17398,     Update  NET SDK version from `5 0 100-preview 7 20358 6` to `5 0 100-preview 7 20364 3` (#13155)\n\n  
17399,     Fix Azure File Copy break in AzDevOps (#13173)\n\n  
17400,     Handle WSL filesystem path when analyze security zone of a file (#13120)\n\n  
17401,     Bump `Xunit SkippableFact` from `1 4 8` to `1 4 13` (#13143)\n\n  
17402,     Add new chibi svg version of the avatar (#13160)\n\n  
17403,     Cleanup: use `int` instead of `uint` in places where it s more appropriate (#13141)\n\n  
17404,     Make other switches mandatory in Split-Path (#13150)\n\n  
17405,     Cleanup: Use `int` instead of `long` to avoid `Interlocked Read` (#13069)\n\n  
17406,     Refactor MSI code to make it easier to add a WiX EXE installer (#13139)\n\n  
17407,     Disable R2R for debug build (#13144)\n\n  
17408,     Add new chibi version of the avatar (#13140)\n\n  
17409,     Update  NET SDK version from `5 0 100-preview 7 20356 2` to `5 0 100-preview 7 20358 6` (#13134)\n\n  
17410,     Add support for some  NET intrinsic type converters (#12580)\n\n  
17411,     Update ` devcontainer` to use nightly docker SDK images (#13128)\n\n  
17412,     New Fluent Design icon for PowerShell 7 (#13100)\n\n  
17413,     Update  NET SDK version from `5 0 100-preview 6 20318 15` to `5 0 100-preview 7 20356 2` (#13125)\n\n  
17414,     Fix `Move-Item` to support cross-mount moves on Unix (#13044)\n\n  
17415,     Merge branch  release/v7 1 0-preview 5  into master\n  
17416,     Update `README md` and `metadata json` for next release (#13059)\n\n  
17417,     Use null check with pattern-matching instead of object ReferenceEquals (#13065)\n\n  
17418,     Fix error message from new symbolic link missing target (#13085)\n\n  
17419,     Merged PR 11909: Update Changelog for 7 1 0-preview 5\n\nUpdate Changelog for 7 1 0-preview 5\n  
17420,     Merged PR 11880: Change log for v7 1 0-preview 5\n\nChange log for v7 1 0-preview 5\n  
17421,     Fix Path for the Preview MSI (#13070)\n\n  
17422,     Add right-click menu to Run with PowerShell for ps1 scripts (#12970)\n\nRefactor registry WiX configuration for right-click menu   
17423,     Add missing ` editorconfig` settings present in dotnet/runtime (#12871)\n\n  
17424,     Ensure assemblies listed `FileList` are not loaded (#12968)\n\nCo-authored-by: Aditya Patwardhan <Aditya Patwardhan>  
17425,     Add new test for Format-Custom to avoid data loss (#11393)\n\n  
17426,     Correct stable and preview upgrade codes for `MSI` (#13036)\n\nCo-authored-by: Robert Holt <rjmholt_msft@outlook com>\r\nCo-authored-by: Aditya Patwardhan <adityap@microsoft com>  
17427,     Fix links for MSI packages for point to `7 1 0-preview 3` (#13056)\n\nCo-authored-by: Aditya Patwardhan <Aditya Patwardhan>  
17428,     Add update packages microsoft com step to distribution request template  (#13008)\n\n  
17429,     Update windows-core md (#13053)\n\n  
17430,     Add `@rjmholt` to maintainers list (#13033)\n\n  
17431,     Merged PR 11841: Changelog for v7 1 0-preview 4\n\nChangelog for v7 1 0-preview 4\n  
17432,     Update docs for `v7 1 0-preview 4` release (#13028)\n\n  
17433,     Fix NuGet package compliance issues (#13045)\n\n  
17434,     Bump `xunit runner visualstudio` from `2 4 1` to` 2 4 2` (#12874)\n\n  
17435,     Bump NJsonSchema from 10 1 22 to 10 1 23 (#13032)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 22 to 10 1 23 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17436,     Code performance fixes (#12956)\n\n* RCS1080: Use  Count/Length  property instead of  Any  method\r\n\r\n* RCS1077: Optimize LINQ method call\r\n\r\n* RCS1235: Optimize method call\r\n  
17437,     Bump NJsonSchema from 10 1 21 to 10 1 22 (#13022)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 21 to 10 1 22 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17438,     Update  NET SDK version from `5 0 100-preview 5 20279 10` to `5 0 100-preview 6 20318 15` (#13018)\n\n  
17439,     Remove component ref when regerenating the wix file (#13019)\n\n  
17440,     Fix tests to not write errors to console (#13010)\n\n  
17441,     Revert  Update  NET SDK version from `5 0 100-preview 5 20279 10` to `5 0 100-preview 6 20319 2` (#12992)  (#13017)\n\nThis reverts commit ce8dc1e30cd5567f519b9eb25e3ba13f7ccd7cc5   
17442,     Make sure icons are added to MSI staging folder (#12983)\n\n  
17443,     Fix issue in `Select-Object` where `Hashtable` members (e g   `Keys`) cannot be used with `-Property` or `-ExpandProperty` (#11097)\n\n  
17444,     Update  NET SDK version from `5 0 100-preview 5 20279 10` to `5 0 100-preview 6 20319 2` (#12992)\n\n  
17445,     Replace `SortedList` with `Generic SortedList<TKey TValue>` (#12954)\n\n  
17446,     Use HashSet instead of Hashtable with null values (#12958)\n\n  
17447,     Use correct isError parameter with Write-Log(#12989)\n\nCo-authored-by: James Truher <jimtru@microsoft com>  
17448,     Make sure tabcompletion tests run (#12981)\n\n  
17449,     Add HoloLens to list of PowerShell adopters (#12940)\n\n  
17450,     Fix conflicting shorthand switch `-w` for pwsh (#12945)\n\n  
17451,     Update `DotnetRutimeMetadata json` to point to preview 6 (#12972)\n\nCo-authored-by: Aditya Patwardhan <Aditya Patwardhan>  
17452,     Remove dependency on DNS for `Test-Connection` tests on macOS (#12943)\n\n  
17453,     Make the switch parameter `-Qualifier` not positional for `Split-Path` (#12960)\n\n  
17454,     Rename the `CimCmdlet` resource file (#12955)\n\n  
17455,     Bump PSReadLine from `2 0 1` to `2 0 2` (#12909)\n\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>\r\nCo-authored-by: Dongbo Wang <dongbow@microsoft com>  
17456,     Disable `NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter` rule in `StyleCop` (#12855)\n\n  
17457,     Bump `NJsonSchema` from 10 1 18 to 10 1 21 (#12944)\n\n  
17458,     Rename `CopyItem Tests ps1` to `Copy-Item Tests ps1` to match other tests (#10701)\n\n  
17459,     Update `README md` and `metadata json` for next releases (#12939)\n\n  
17460,     Remove use of `Test-Path` in ConciseView (#12778)\n\n  
17461,     Fix `RCS1114: Remove redundant delegate creation` (#12917)\n\n  
17462,     Code redundancy fixes (#12916)\n\n* Autofix `RCS1036: Remove redundant empty line`\r\n\r\n* Autofix `RCS1037: Remove trailing white-space`\r\n\r\n* Autofix `RCS1033: Remove redundant boolean literal`\r\n\r\n* Autofix: `RCS1038: Remove empty statement`\r\n\r\n* Autofix `RCS1041: Remove empty initializer`\r\n\r\n* Autofix `RCS1097: Remove redundant  ToString  call\r\n\r\n* Autofix: `RCS1420: Operator is unnecessary`  
17463,     Add @TylerLeonhardt to PowerShell team list to correct changelog generation (#12927)\n\n  
17464,     Resolve the working directory as literal path for `Start-Process` when it s not specified (#11946)\n\n  
17465,     Flag `default` switch statement condition clause as keyword (#10487)\n\n  
17466,     Check if Azure Blob exists before overwriting (#12921)\n\nCo-authored-by: Aditya Patwardhan <Aditya Patwardhan>  
17467,     Enable the upload of `ETW` traces to `CLR CAP` in Windows daily build (#12890)\n\n  
17468,     Enable skipped tests (#12894)\n\n  
17469,     Fix break in package build by pinning `ffi` version to `1 12` (#12889)\n\n  
17470,     Upgrade `APIScan` version (#12876)\n\n  
17471,     Fix broken link in `README md` (#12887)\n\n  
17472,     Make contributors unique in Release notes (#12878)\n\n  
17473,     Add parameter `SchemaFile` to `Test-Json` cmdlet (#11934)\n\n  
17474,     Restore `markdownlint` tests (#12549)\n\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17475,     Update the PowerShell modules to use the new Help URI (#12686)\n\n  
17476,     Bring back Certificate provider parameters (#10622)\n\n  
17477,     Update Linux daily CI to run in a single agent & collect traces (#12866)\n\n  
17478,     Reorder modifiers according to preferred order (#12864)\n\n# PR Summary\r\n\r\nReformat using `csharp_preferred_modifier_order` \r\n\r\n## PR Context\r\n\r\nSplit change from #11773\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17479,     Expand numberOfPowershellRefAssemblies list capacity (#12840)\n\n# PR Summary\r\n\r\n* Increase the list capacity because  NET v5 0 100-preview 5 20278 13 has an extra assembly\r\n* Remove assert added in #12520\r\n\r\n## PR Context\r\n\r\nHEAD of master has been broken since 99da109 (#12772)  when  NET was updated to 5 0 100-preview 5 20278 13\r\n\r\n   com/PowerShell/PowerShell/issues/12815#issuecomment-636132717\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17480,     Fix `New-Item` to create symbolic link to relative path target (#12797)\n\n  
17481,     Add readonly modifier to internal static members (#11777)\n\n# PR Summary\r\n\r\n* Add readonly modifier to internal static members \r\n\r\n## PR Context\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17482,     cleanup: Use coalesce expression (#12829)\n\n  
17483,     Add missing assessibility modifiers (#12820)\n\n# PR Summary\r\n\r\nAutomated fix of [RCS1018 (   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1018 md)\r\n\r\n## PR Context\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17484,     Minor typo corrections in Distribution Request Issue Templates (#12744)\n\nFix a few misspellings in the Issue Template   
17485,     Update  NET SDK version from `5 0 100-preview 5 20278 13` to `5 0 100-preview 5 20279 10` (#12844)\n\nCo-authored-by: github-actions[bot  <41898282+github-actions[bot @users noreply github com>  
17486,     Add `CommandLine` property to Process (#12288)\n\n  
17487,     Sign the `MSIX` files for the store (#12582)\n\nCo-authored-by: Aditya Patwardhan <adityap@microsoft com>  
17488,     Update the CI builds (#12830)\n\nInclude the following changes:\r\n- Use stages for Linux & macOS CI\r\n- Change windows-daily to run tests in one agent  
17489,     Update  NET SDK version from `5 0 100-preview 5 20272 6` to `5 0 100-preview 5 20278 13` (#12772)\n\n  
17490,     Use `t_` naming convention for ThreadStatic members (#12826)\n\n# PR Summary\r\n\r\n## PR Context\r\n\r\nViolations of naming convention were found during #12820\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17491,     Formatting: Add empty line between declarations (#12824)\n\n# PR Summary\r\n\r\nAutomated fixes:\r\n* RCS0013: Add empty line between single-line declarations of different kind\r\n* RCS010: Add empty line between declarations\r\n\r\n## PR Context\r\n\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17492,     Allow use of build module on unknown Linux distros (#11146)\n\n  
17493,     Remove extra line before formatting group (#12163)\n\n  
17494,     Correct \ review-for-comments\  in `Governance md` (#11035)\n\nAs per    com/PowerShell/powershell-rfc/blob/master/RFC0000-RFC-Process md \r\n\r\nRFC is  request for comments   rather than  review for comment   
17495,     Adds Mask Input Parameter to `Read-Host` (#10908)\n\nCo-authored-by: Sotiris Nanopoulos <sonanopo@microsoft com>  
17496,     Fix markdown ordered lists (#12657)\n\n# PR Summary\r\n\r\n* Replace an ordered list with sections\r\n* Fix an ordered list to continue numbering in each item\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17497,     Fix broken `docs microsoft com` link (#12776)\n\n  
17498,     Fix MSI upgrade and shortcut issues (#12792)\n\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17499,     Make module formatting not generate error with strict mode (#11943)\n\n  
17500,     Adding more ETW logs to wsman plugin (#12798)\n\n  
17501,     Bump NJsonSchema from 10 1 17 to 10 1 18 (#12812)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 17 to 10 1 18 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17502,     Clarify defaultRefAssemblies list capacity in AddType cs (#12520)\n\n# PR Summary\r\n\r\n* Clarify calculation of `defaultRefAssemblies` initial list capacity \r\n* Assert if list capacity is increased as a result of a resize \r\n\r\n## PR Context\r\n\r\nInitDefaultRefAssemblies may initialize a list too small to hold the reference assemblies distributed with netcoreapp5 0  which may result in an expensive reallocation of the internal array \r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17503,     Replace link to Slack with link to PowerShell Virtual User Group (#12786)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist  -->\r\n\r\n## PR Context\r\n\r\nMicrosoftDocs/feedback/issues/2776\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17504,     Wrap tests in pester blocks (#12700)\n\n# PR Summary\r\n\r\nWrap tests in pester blocks to prepare for pesterv5\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17505,     Update  NET SDK version from `5 0 100-preview 5 20269 29` to `5 0 100-preview 5 20272 6` (#12759)\n\nAutomated changes by [create-pull-request (   com/peter-evans/create-pull-request) GitHub action  
17506,     Fixing  Double  period  (  ) in message for System InvalidOperationException  (#12758)\n\n<!-- Anything that looks like this is a comment and can\ t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nFix for issue: Double  period  (  ) in message for System InvalidOperationException\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [x  Issue filed: #12497 \r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you\ ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [   I have considered the user experience from a tooling perspective and don\ t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell\ s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17507,     Change CimCmdlets to use AliasAttribute (#12617)\n\n  
17508,     Bump NJsonSchema from 10 1 16 to 10 1 17 (#12761)\n\n  
17509,     Rethrow to preserve stack details for better maintainability (#12723)\n\n  
17510,     Prevent GitHub workflow for daily dotnet build updates from running in forks (#12763)\n\n  
17511,     Add GitHub action for PR creation and `Wix` file generation logic (#12748)\n\n  
17512,     Update to dotnet SDK 5 0 0-preview 5 20268 9 (#12740)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nUpdate to dotnet SDK 5 0 0-preview 5 20268 9\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [   N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x  [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17513,     Delete license rtf (#12738)\n\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist  -->\r\n\r\n## PR Context\r\n\r\n#12721 did not actually delete `license rtf`\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [   N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x  [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [   I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17514,     Nullable annotations for CommandSearcher (#12733)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nNullable annotations for CommandSearcher\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [   None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17515,     Make `-OutFile` param in web cmdlets to work like -LiteralPath (#11701)\n\n  
17516,     Restrict loading of `amsi dll` from system32 folder (#12730)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nRestrict search path for `amsi dll` and `wldp dll` to just System32 on Windows\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17517,     Redundancy: Remove  partial  modifier from type with a single part (#12725)\n\n# PR Summary\r\n\r\nFix RCS1043\r\n\r\n## PR Context\r\n\r\n   com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1043 md\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17518,     Remove phrase  All rights reserved  from Microsoft copyright statements (#12722)\n\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist  -->\r\n\r\n## PR Context\r\n\r\nfollow-up #12190\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [   [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17519,     Remove `assets\\license rtf` (#12721)\n\n# PR Summary\r\n\r\nSince #8846  we do not show an EULA in the MSI  so we can remove `license rtf` \r\n\r\n## PR Context\r\n\r\nFix #12719\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17520,     IDictionary -> IDictionary<string  FunctionInfo> for FunctionTable (#12658)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nTyped return value for SessionStateInternal GetFunctionTable \r\nIDictionary<string  FunctionInfo> instead of IDictionary \r\n\r\n## PR Context\r\n\r\nRemoves unnecessary casts  and helps with later nullablility changes \r\n\r\n## PR Checklist\r\n\r\n- [   [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [   [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [   N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x  [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17521,     Bump `Microsoft CodeAnalysis CSharp` from `3 5 0` to `3 6 0` (#12731)\n\n  
17522,     Update `LICENSE txt` so that it s recognized as MIT (#12729)\n\n  
17523,     Merge branch  release/v7 1 0-preview 3  into master\n\n# Conflicts:\n#\t spelling\n#\tCHANGELOG/preview md\n  
17524,     Use nameof operator (#12716)\n\n# PR Summary\r\n\r\nUsing *Roslynator Command Line Tool version 0 1 0 4*\r\n\r\n* Fix RCS1015:\r\n  * ` argument ` → `nameof(argument)`\r\n  * `enum ToString()` → `nameof(enum)`\r\n\r\n[RCS1015 log (   com/PowerShell/PowerShell/files/4646102/RCS1015 log)\r\n\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you\ ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don\ t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell\ s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17525,     Update `README` and `metadata` files for next release (#12717)\n\n  
17526,     Update `README md` removing experimental status of `Arm` builds  but `Win-Arm64` is still preview for Stable release  (#12707)\n\n  
17527,     Add link to Github compare in changelog (#12713)\n\n# PR Summary\r\n\r\nAdd link to Github compare in `CHANGELOG\\preview md`\r\n\r\n## PR Context\r\n\r\nfollow-up #11652\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17528,     Fix comments in Mshexpression cs (#12711)\n\n# PR Summary\r\n\r\nFix comments in Mshexpression cs\r\n\r\n## PR Context\r\n\r\nFix summary comments for ResolveNames methods in Mshexpression cs \r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17529,     NRE in CommandSearcher GetNextCmdlet (#12659)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nFixes a NullReferenceException when searching for malformed cmdlet names\r\n\r\n## PR Context\r\n\r\nIn GetNextCmdlet  there is a check\r\n```csharp\r\nif (!useAbbreviationExpansion && PSSnapinQualifiedCommandName == null)\r\n \r\n    return null;\r\n \r\n```\r\ni e  the null check is only done if useAbbreviationExpansion is false \r\n\r\nLater on we reference PSSnapinQualifiedCommandName in anyway and get an NRE \r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17530,     Added missing changelog for v7 1 0-preview 2 (#12665)\n\n  
17531,     Merged PR 11571: Change log for v7-1-0-preview-3 and a missing preview-2 change log\n\nPreview-3 change log was generated by `Get-ChangeLog -LastReleaseTag  v7 1 0-preview 2  -ThisReleaseTag  v7 1 0-preview 3 `\nPreview-2 change log was copy-pasted from Gihub s  `tags/v7 1 0-preview 2`\n  
17532,     Update required Visual Studio version in build docs (#12628)\n\n# PR Summary\r\n\r\n* Update build docs to specify Visual Studio 2019 16 6 Preview 2 as a requirement  due to the of `net5 0` TFM \r\n* Remove dependancy on  Common Tools for Visual C++  as there is no longer C++ code in the repository \r\n\r\n## PR Context\r\n\r\nVisual Studio 2019 >= 16 6 Preview 2 is required since #12486 \r\nsee also: #12514\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you\ ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don\ t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell\ s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17533,     minor update to Distribution_Request md (#12705)\n\n  
17534,     Formatting: remove duplicate semicolons (#12666)\n\n  
17535,     Update Distribution_Request md  
17536,     Ensure null-coalescing LHS is evaluated only once (#12667)\n\n  
17537,     Bump NJsonSchema from 10 1 15 to 10 1 16 (#12685)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 15 to 10 1 16 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17538,     Disable uploading Symbols package (#12687)\n\n  
17539,     Remove duplicate tests from `Measure-Object Tests ps1` (#12683)\n\n  
17540,     Update docs microsoft com links (#12653)\n\n# PR Summary\r\n\r\n* remove explicit en-us from links\r\n* remove view parameter\r\n\r\n\r\n## PR Context\r\n\r\nfollow-up #7013\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [   None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17541,     Update change log for `6 2 5` release (#12670)\n\n  
17542,     Update `README md` and `metadata json` for next release (#12668)\n\n  
17543,     Merge 7 0 1 change log (#12669)\n\n  
17544,     Fix path handling bug in `PSTask` (#12554)\n\n  
17545,     Remove markdown unused definitions (#12656)\n\n  
17546,     :bug: UnixComputer - null tolerance for tests (#12651)\n\n  
17547,     Update build to use the new  NET SDK `5 0 100-preview 4 20258 7` (#12637)\n\n  
17548,     Replace Unicode nbsp with space in source (#12576)\n\n```\r\n-replace [char 0xA0  [char 0x20\r\n```  
17549,     Fix string parameter binding for `BigInteger` numeric literals (#11634)\n\n  
17550,     Add link to lifecyle doc to distribution request template (#12638)\n\n  
17551,     Fix a test failure (#12636)\n\n  
17552,     ParameterBinderBase: Fixing incorrect index in format string (#12630)\n\n  
17553,     Copy the `CommandInfo` property in `Command Clone()` (#12301)\n\n  
17554,     Remove unused code (#12610)\n\n  
17555,     Annotate `Assert` methods for better code analysis (#12618)\n\n  
17556,     Bump NJsonSchema from 10 1 14 to 10 1 15 (#12608)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 14 to 10 1 15 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17557,     Use correct casing for cmdlet name and cmdlet parameter name in * ps1 files (#12584)\n\n  
17558,     Bump NJsonSchema from 10 1 13 to 10 1 14 (#12598)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 13 to 10 1 14 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17559,     Bump NJsonSchema from 10 1 12 to 10 1 13 (#12583)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 12 to 10 1 13 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17560,     Update the build to sign any unsigned files as 3rd party Dlls (#12581)\n\n  
17561,     Update @PoshChan config to include SSH (#12526)\n\n  
17562,     Update log message in Start-PSBootstrap (#12573)\n\n  
17563,     Update  NET SDK to `5 0 100-preview 4 20229 10` (#12538)\n\n  
17564,     Compare-Object Apply -IncludeEqual when -ExcludeDifferent is specified (#12317)\n\n  
17565,     Add the  NET SDK installation path to the current process path (#12525)\n\n  
17566,     Add ability to `Install-Dotnet` to specify directory (#12469)\n\n  
17567,     Allow `/` in relative paths for `using module` (#7424) (#12492)\n\n  
17568,     Delete sync yml  
17569,     Create sync yml  
17570,     Document why `PackageVersion` is used in `PowerShell Common props` (#12523)\n\nCo-Authored-By: Nick Guerrera <nicholg@microsoft com>  
17571,     Change Get-FileHash to close file handles before writing output (#12474)\n\n  
17572,     Update dotnet metadata for next channel for automated updates (#12502)\n\n  
17573,     Update TFM reference in build docs (#12514)\n\n  
17574,     Bump  NET to 5 0 0-preview 4 (#12507)\n\n  
17575,     Bump `Microsoft ApplicationInsights` from `2 13 1` to `2 14 0` (#12479)\n\n  
17576,     Update the owner list for `ConsoleHost` (#12508)\n\n  
17577,     Bump PackageManagement from 1 4 6 to 1 4 7 in /src/Modules (#12506)\n\n* Bump PackageManagement from 1 4 6 to 1 4 7 in /src/Modules\r\n\r\nBumps PackageManagement from 1 4 6 to 1 4 7 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\n* Update files wxs\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17578,     Fix inconsistent exception message in `-replace` operator (#12388)\n\n  
17579,     Bump `Xunit SkippableFact` from `1 3 12` to `1 4 8` (#12480)\n\n  
17580,     Fix quotes to allow variable expansion (#12512)\n\n  
17581,     Use new `TargetFramwork`  as `net5 0` in packaging scripts (#12503)\n\n  
17582,     Set correct `PSProvider` full name (#11813)\n\n  
17583,     Support passing PSPath to native commands (#12386)\n\n  
17584,     Mark ping tests as Pending due to stability issues in macOS (#12504)\n\n  
17585,     Use new value for `TargetFramework` as `net5 0` instead of `netcoreapp5 0` (#12486)\n\n  
17586,     Disable `PublishReadyToRun` for framework dependent packages (#12450)\n\n  
17587,     Add `dependabot` rules to ignore updates from  NET (#12466)\n\n  
17588,     Fix broken link for blogs in documents (#12471)\n\n  
17589,     Update `README md` and `metadata json` for upcoming release (#12441)\n\n  
17590,     Turn on `ReadyToRun` (#12361)\n\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17591,     Add summary to compressed sections (#12429)\n\n  
17592,     Update  NET dependency update script to include test `csproj` files (#12372)\n\n  
17593,     Allow shorter signed hex literals with appropriate type suffixes (#11844)\n\n  
17594,     Add the `nuget config` from root to the temporary build folder (#12394)\n\n  
17595,     Bump System IO Packaging (#12365)\n\n  
17596,     Bump Markdig Signed from 0 18 3 to 0 20 0 (#12379)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 18 3 to 0 20 0 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/0 18 3   0 20 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17597,     Update `UseNewEnvironment` parameter behavior of `Start-Process` cmdlet on Windows (#10830)\n\n  
17598,     Bump to  NET 5 Preview 3 pre-release (#12353)\n\n  
17599,     Bump PowerShellGet from 2 2 3 to 2 2 4 in /src/Modules (#12342)\n\nBumps [PowerShellGet (   com/PowerShell/PowerShellGet) from 2 2 3 to 2 2 4 \r\n- [Release notes (   com/PowerShell/PowerShellGet/releases)\r\n- [Commits (   com/PowerShell/PowerShellGet/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17600,     Fix `WinCompat` module loading to treat Core edition modules higher priority (#12269)\n\n  
17601,     Linux: Initial support for Gentoo installations  (#11429)\n\n  
17602,     Scripts to update to  NET prerelease version (#12284)\n\n  
17603,     Add `-Shuffle` switch to `Get-Random` command (#11093)\n\n  
17604,     CodeFactor cleanup (#12251)\n\n* Code cleanup\r\n\r\nSigned-off-by: Reece Dunham <me@rdil rocks>\r\n\r\n* whoops\r\n\r\n* Update src/Microsoft Management Infrastructure CimCmdlets/CimSessionOperations cs\r\n\r\nCo-Authored-By: Travis Plunk <travis plunk@microsoft com>\r\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17605,     Pin major Pester version to 4 to prevent breaking changes caused by upcoming release of v5 (#12262)\n\n  
17606,     Make GetWindowsPowerShellModulePath compatible with multiple PS installations (#12280)\n\nAdd additional check for each component of PSModulePath (that is set for WinPS process) - if it is has pwsh exe in the parent directory  then it is considered another PS Core installation and this location is also filtered out   
17607,     Add null check for Windows PowerShell install path (#12296)\n\nSome Azure images have run into this problem where Start-Job fails even when running in pwsh child process rather than Windows PowerShell child  Fix is to guard against the missing registry entry   
17608,     Specifying an alias and `-Syntax` to `Get-Command` returns the aliased commands syntax (#10784)\n\n@ChrisLGardner Thank you for your contribution and your patience   
17609,     Fix NRE in csv commands (#12281)\n\n  
17610,     Upgrade to  NET 5 Preview 2 (#12250)\n\n  
17611,     In local invocations do not require `-PowerShellVersion 5 1` for `Get-FormatData` in order to see all format data  (#11270)\n\n  
17612,     Fix the `Sync PSGalleryModules to Artifacts` build (#12277)\n\nMerging this to unblock daily build  
17613,     Added Support For Big Endian `UTF-32` (#11947)\n\n  
17614,     Fix possible race that leaks PowerShell object dispose in `ForEach-Object -Parallel` (#12227)\n\n  
17615,     Add `-FromUnixTime` to `Get-Date` to allow Unix time input (#12179)\n\n  
17616,     Add Windows 10 IoT Core reference in Adopters md (#12266)\n\n  
17617,     Change progress fg & bg colors to provide better contrast (#11455)\n\n  
17618,     Bump PSReadLine from 2 0 0 to 2 0 1 (#12243)\n\n  
17619,     Bump `NJsonSchema` from `10 1 11` to `10 1 12` (#12230)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 11 to 10 1 12 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17620,     Fix foreach parallel when current drive is not available (#12197)\n\n  
17621,     Do not wrap return result to `PSObject` when converting ScriptBlock to delegate (#10619)\n\nThis is a breaking change for the delegate types with the object return type:\r\n\r\nBefore this change  the returned object will always be an PSObject instance \r\nAfter this change  the returned object is the underlying object  which could still be an PSObject if that s what the script actually returns   
17622,     Discover assemblies loaded by  Assembly Load(byte[ )  and  Assembly LoadFile  (#12203)\n\n* Fix regression: pwsh should discover assemblies loaded by  Assembly Load(byte[ )  and  Assembly LoadFile \r\n  
17623,     Don t write DNS resolution errors on Test-Connection -Quiet (#12204)\n\n  
17624,     Use dedicated threads to read the redirected output and error streams from the child process for out-of-proc jobs (#11713)\n\n  
17625,     Update change log generation script to support collapsible sections (#12214)\n\n  
17626,     Update `README md` and `metadata json` for `7 1 0-preview 1` (#12211)\n\n* Update `README md` and `metadata json` for `7 1 0-preview 1` release\r\n\r\n* Add missing version updates\r\n\r\n* fix test failure\r\n\r\n* fix test failure\r\n\r\nCo-authored-by: Travis Plunk <github@ez13 net>  
17627,     Merge branch  release/v7 1 0-preview 1  into master\n  
17628,     Fix `Service cs` to not modify collection while enumerating it (#11851)\n\n  
17629,     Merged PR 11200: Update change log for 7 1 0-preview 1 release\n\nUpdate change log for 7 1 0-preview 1 release\n  
17630,     Clean up the IPC named pipe on PowerShell exit (#12187)\n\n  
17631,     Fix erroneous comment in tokenizer cs (#12206)\n\nThe BigInteger NumberSuffixFlags enum is  N   not  I   Fix the comment to indicate it as such   
17632,     Allow case insensitive paths for determining `PSModulePath` (#12192)\n\n* Allow case insensitive comparison of paths for determining PSModulePath\r\n\r\n* Address codefactor issue  
17633,     Fix terms checker issues (#12189)\n\n  
17634,     Update copyright notice to latest guidance (#12190)\n\n  
17635,     Fix <img /> detection regex in web cmdlets (#12099)\n\n  
17636,     Add PowerShell version 7 0 to compatible version list (#12184)\n\n  
17637,     Add documentation for `WebResponseObject` and `BasicHtmlWebResponseObject` properties (#11876)\n\n  
17638,     Implement `ForEach-Object -Parallel` runspace reuse (#12122)\n\n* Implement foreach parallel runspace reuse\r\n\r\n* Change runspace dispose\r\n\r\n* Refactor runspace reset check\r\n\r\n* Fix race condition \r\n\r\n* Fix CodFactor issues\r\n\r\n* Implement -UseNewRunspace parameter switch  add tests\r\n\r\n* Fix Codacy error  
17639,     Put symbols in separate package (#12169)\n\n  
17640,     Disable x86 pdb generation (#12167)\n\n  
17641,     Bump `NJsonSchema` from `10 1 8` to `10 1 11` (#12166)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 8 to 10 1 11 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17642,     Create crossgen symbols for Windows x64 and x86 (#12157)\n\n  
17643,     Move to ` NET 5 preview 1` (#12140)\n\n  
17644,     Set correct priority for ?: operator (#12075)\n\n  
17645,     Fix NullReferenceException when binding common parameters of type  ActionPreference  (#12124)\n\n  
17646,     Fix default formatting for deserialized MatchInfo (#11728)\n\nMatchInfo class has ToEmphasizedString() member method to color output line \r\nIn remote scenario MatchInfo class is deserialized as Deserialized Microsoft PowerShell Commands MatchInfo without the method  As result default formating in remote scenario show nothing \r\n\r\nThe fix is to directly output Line property   
17647,     Use async streams in Invoke-RestMethod (#11095)\n\n  
17648,     Use span-based overloads (#11884)\n\n  
17649,     Bump `Microsoft CodeAnalysis CSharp` from `3 4 0` to `3 5 0` (#12136)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 4 0 to 3 5 0 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17650,     Address UTF-8 Detection In Get-Content -Tail (#11899)\n\n- Addresses a comparison failure that causes UTF-8 detection to fail which in turn causes Get-Content -Tail to resort to forward lookups given encoding type cannot be detected  Possible this misdetection is due to the incoming encoding object as being of type System Text UTF8Encoding where as the comparison uses the object Encoding UTF8 which is derived from System Text UTF8Encoding+UTF8EncodingSealed \r\n- See    com/PowerShell/PowerShell/issues/11830\r\n\r\n- Added  OEM    UTF8BOM   and  UTF8NoBOM  as explicit encodings for existing Get-Content -Tail tests \r\n\r\n* Add Multi-Byte Unicode Tail Character Tests\r\n\r\n- Modified -Tail encoding test to use three different test sets: utf-8  utf-16  utf-32   The test verifies that the content resulting from -Tail is equal to the same string returned from a regular Get-Content using both an explicit and implicit encoding \r\n\r\n* Remove BigEndianUnicode Reference In Comment  
17651,     Replace `VSCode` link in `CONTRIBUTING md` (#11475)\n\n  
17652,     Handle the `IOException` in `Get-FileHash` (#11944)\n\n  
17653,     Move to standard internal pool for building (#12119)\n\n  
17654,     Fix package syncing to private Module Feed  (#11841)\n\n  
17655,     Use new string Split() overloads (#11867)\n\n  
17656,     Remove the version number of PowerShell from LICENSE (#12019)\n\n  
17657,     Change  PowerShell Core  to  PowerShell  in a resource string (#11928)\n\n  
17658,     Add the 7 0 change log link to `CHANGELOG/README md` (#12062)\n\n  
17659,     Remove unreachable DSC code (#12076)\n\n* Remove unreachable code\r\n\r\n* Update src/System Management Automation/DscSupport/CimDSCParser cs\r\n\r\nCo-Authored-By: Ilya <darpa@yandex ru>\r\n\r\nCo-authored-by: Ilya <darpa@yandex ru>  
17660,     Add Ubuntu SSH remoting tests CI (#12033)\n\n* Add SSH remoting CI\r\n\r\n* Fix typo\r\n\r\n* Add install git to Ubuntu CI\r\n\r\n* Update  vsts-ci/sshremoting-tests yml\r\n\r\nCo-Authored-By: Aditya Patwardhan <adityap@microsoft com>\r\n\r\n* Fix install git 1\r\n\r\n* Add missing tools module import\r\n\r\n* Change ubuntu service restart\r\n\r\n* Update ssh install\r\n\r\n* fix module path\r\n\r\n* fix module path\r\n\r\n* change module import\r\n\r\n* Add tracing\r\n\r\n* Add service start retry\r\n\r\n* Fix service restart\r\n\r\n* Fix options restore\r\n\r\n* Fix Restore-PSOptions path\r\n\r\n* Fix Pester test output\r\n\r\n* fix typo\r\n\r\n* Fix test output path\r\n\r\n* Debug 1\r\n\r\n* Debug 2\r\n\r\n* Debug 3\r\n\r\n* Change results path\r\n\r\n* Fix result publish to use build artifacts directory\r\n\r\n* Add more New-PSSession tests\r\n\r\n* Remove User test\r\n\r\n* Remove env:USER\r\n\r\n* Add API tests\r\n\r\n* Fix type for Subsytem API test\r\n\r\n* Update  vsts-ci/sshremoting-tests yml\r\n\r\nCo-Authored-By: Travis Plunk <travis plunk@microsoft com>\r\n\r\n* Update  vsts-ci/sshremoting-tests yml\r\n\r\nCo-Authored-By: Travis Plunk <travis plunk@microsoft com>\r\n\r\n* Update  vsts-ci/sshremoting-tests yml\r\n\r\nCo-Authored-By: Travis Plunk <travis plunk@microsoft com>\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Aditya Patwardhan <adityap@microsoft com>\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17661,     Improvements to the contribution guide (#12086)\n\n* Fix typo in contribution guide\r\n\r\n* Improve contributing links and wording\r\n\r\nVarious improvements to the contributor s guide  including grammar fixes  making common links for easier updating  and fix for a broken link to VS Code editor documentation \r\n\r\n* Update  github/CONTRIBUTING md\r\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
17662,     Update the doc about debugging dotnet core in VSCode (#11969)\n\n* Update the doc about debugging dotnet core in VSCode\r\n\r\n* remove en-us  
17663,     Bring back `MainWindowTitle` in `PSHostProcessInfo` (#11885)\n\n* Bring back MainWindowTitle in PSHostProcessInfo\r\n\r\n* Add test  
17664,     Change recommended VS Code extension name from ms-vscode csharp to ms-dotnettools csharp (#12083)\n\n  
17665,     Miscellaneous minor updates to WinCompat (#11980)\n\n* Filter PSModulePath when starting PS 5 1  Removing PS-Core-specific paths from PSModulePath of WinCompat process (Windows PS) \r\n* Make implicit WinCompat respect NoClobber and Scope parameters\r\n* Add ErrorAction Ignore when searching for WinPSCompatSession  
17666,     Bump `NJsonSchema` from `10 1 7` to `10 1 8` (#12088)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 7 to 10 1 8 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17667,     Bump `Markdig Signed` from `0 18 1` to `0 18 3` (#12078)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 18 1 to 0 18 3 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/0 18 1   0 18 3)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17668,     Bump `NJsonSchema` from `10 1 5` to `10 1 7` (#12050)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 1 5 to 10 1 7 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\nCo-authored-by: dependabot-preview[bot  <27856297+dependabot-preview[bot @users noreply github com>  
17669,     Add empty `preview md` file to fix broken link (#12041)\n\n* Add empty `preview md` file to fix broken link\r\n\r\n* fix spelling\r\n\r\nCo-authored-by: Travis Plunk <github@ez13 net>  
17670,     Fix MSIX packaging to determine if a Preview release by inspecting the semantic version string (#11991)\n\n  
17671,     Fix `ConciseView` to split `PositionMessage` using `[Environment ::NewLine` (#12010)\n\n  
17672,     Merged PR 11044: Update change log for V7 0 0\n\n# Conflicts:\n#\tCHANGELOG/7 0 md\n  
17673,     Update `README md` and `metadata json` for the next release (#11992)\n\n  
17674,     Remove hop restriction for interactive sessions (#11920)\n\n  
17675,     Ignore last exit code in the build step as `dotnet` may return error when SDK is not installed (#11972)\n\n  
17676,     Publish PowerShell `vPack` for stable and better builds (#11960)\n\n  
17677,     Bump  NET core framework to `3 1 2` (#11963)\n\n  
17678,     Enable `Ctrl+C` to work for global tool (#11959)\n\n  
17679,     Ensure the man gzip has the correct name for LTS release (#11956)\n\n  
17680,     Add helper functions for SSH remoting tests (#11955)\n\n  
17681,     Fix ConciseView to not show the line information within the error messages (#11952)\n\n  
17682,     Bump `Microsoft ApplicationInsights` from `2 13 0` to `2 13 1` (#11925)\n\n  
17683,     Update `README md` and `metadata json` next release (#11918)\n\n  
17684,     Update the map between console color to `VT` sequences (#11891)\n\n  
17685,     Fix SSH remoting error on Windows platform (#11907)\n\n  
17686,     Update Adopters md to include info on Azure Pipelines and GitHub Actions (#11888)\n\n  
17687,     Fix NREs in SuspendStoppingPipeline() and RestoreStoppingPipeline() (#11870)\n\n  
17688,     Remove old dead code from FullCLR (#11886)\n\n  
17689,     Generate guid for FormatViewDefinition InstanceId if not provided (#11896)\n\n  
17690,     Fix ConciseView where error message is wider than window width and doesn t have whitespace (#11880)\n\n  
17691,     Add `LTSRelease` value from `metadata json` to `release json` (#11897)\n\n  
17692,     Bump `Microsoft ApplicationInsights` from `2 12 1` to `2 13 0` (#11894)\n\n  
17693,     Make LTS package always not a preview (#11895)\n\n  
17694,     Make sure to test whether we skip a test using consistent logic (#11892)\n\n  
17695,     Fix daily package build (#11882)\n\n  
17696,     Bump `System Data SqlClient` from `4 8 0` to `4 8 1` (#11879)\n\n  
17697,     Allow cross-platform `CAPI-compatible` remote key exchange (#11185)\n\n  
17698,     Update `LTS` logic to depend on `metadata json` (#11877)\n\n  
17699,     Set default value of `LTSRelease` to false (#11874)\n\n  
17700,     Skip directory creation at root test on macOS (#11878)\n\n  
17701,     Fix error message (#11862)\n\n  
17702,     Refactor packaging pipeline (#11852)\n\n\r\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>\r\nCo-authored-by: Dongbo Wang <dongbow@microsoft com>\r\n  
17703,     Make sure `LTS` packages have symlink for `pwsh` and `pwsh-lts` (#11843)\n\n  
17704,     Update `Get-PlatformInfo` helper and tests for Debian 10  11 and CentOS 8 (#11842)\n\n  
17705,     Bump `Microsoft PowerShell Native` from `7 0 0-rc 2` to `7 0 0` (#11839)\n\n  
17706,     Restore the `PowerShellStreamType` enum with an `ObsoleteAttribute` (#11836)\n\n  
17707,     Fix package sorting for syncing to private Module Feed (#11838)\n\n  
17708,     Fix ConciseView to handle case where there isn t a console to obtain the width (#11784)\n\n  
17709,     Add new tests for Get-ChildItem (FileSystemProvider) (#11602)\n\n\r\n  
17710,     Update the NuGet package generation to include `cimcmdlet dll` and most of the built-in modules (#11832)\n\n  
17711,     Bump `Microsoft PowerShell Archive` from `1 2 4 0` to `1 2 5` (#11833)\n\nBumps Microsoft PowerShell Archive from 1 2 4 0 to 1 2 5 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17712,     Bump `PSReadLine` from `2 0 0-rc2` to `2 0 0` (#11831)\n\n  
17713,     Sync current directory in `WinCompat` remote session (#11809)\n\n  
17714,     Handle cases where `CustomEvent` was not initially sent (#11807)\n\n  
17715,     Fix how COM objects are enumerated (#11795)\n\n  
17716,     Add information about how Amazon AWS uses PowerShell  (#11365)\n\n  
17717,     Specifiy csharp_preferred_modifier_order in EditorConfig (#11775)\n\n  
17718,     Fix `NativeDllHandler` to not throw when file is not found (#11787)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->\r\n\r\n# PR Summary\r\n\r\nFix `NativeDllHandler` to not throw when file is not found \r\n\r\nToday  the `NativeDllHandler` calls `NativeLibrary Load(fullName)` even if the file doesn t exist  This is not right  it should return `IntPtr Zero` to let the runtime try the next resolution approach  if there is one \r\nAlso  this behavior results in the exception message to be `Unable to load DLL  F:\\win-x64\\nativedll dll  or one of its dependencies: The specified module could not be found`  which is confusing because there was never an explicit loading of a dll with that path \r\nThe real exception generated from runtime should be `Unable to load DLL  nativedll  or one of its dependencies: The specified module could not be found `\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17719,     Update `CmsCommands` to use Store vs cert provider (#11643)\n\n  
17720,     Use `Dictionary TryAdd()` where possible (#11767)\n\n  
17721,     Update changelog generation script (#11736)\n\n# PR Summary\r\n\r\n* Fix regression from #11652\r\n* Fix [MD022 (   com/DavidAnson/markdownlint/blob/master/doc/Rules md#md032---lists-should-be-surrounded-by-blank-lines) / [MD032 (   com/DavidAnson/markdownlint/blob/master/doc/Rules md#md032---lists-should-be-surrounded-by-blank-lines) rule violations\r\n* Modify `Get-ChangeLog` to generate the changelog according to the format from #11652 \r\n\r\n## PR Context\r\n\r\nFollow-up to #11652\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready \r\n- **[Breaking changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)**\r\n    - [x  None\r\n    - **OR**\r\n    - [   [Experimental feature(s) needed (   com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft PowerShell Core/About/about_Experimental_Features md)\r\n        - [   Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n- **Tooling**\r\n    - [x  I have considered the user experience from a tooling perspective and don t believe tooling will be impacted \r\n    - **OR**\r\n    - [   I have considered the user experience from a tooling perspective and enumerated concerns in the summary  This may include:\r\n        - Impact on [PowerShell Editor Services (   com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension (   com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host) \r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell s most powerful features \r\n        - Impact on [PSScriptAnalyzer (   com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions) \r\n        - Impact on [EditorSyntax (   com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode  GitHub  and many other editors)   
17722,     Fix `Invoke-Command` missing error on session termination  (#11586)\n\n  
17723,     Add WinCompat deny list support using a setting in powershell … (#11726)\n\n  
17724,     Change packaging to produce `LTS` packages (#11772)\n\n  
17725,     Update to `CredScan v2` (#11765)\n\n  
17726,     Build tar packages only when building on Ubuntu (#11766)\n\n  
17727,     Enable pwsh to work on Windows systems where mpr dll and STA is not available (#11748)\n\n  
17728,     Refactor and implement `Restart-Computer` for `Un*x` and macOS (#11319)\n\n\r\nCo-authored-by: Ilya <darpa@yandex ru>\r\n  
17729,     Fix `help` function to check if `less` is available before usi… (#11737)\n\n  
17730,     Use `Environment NewLine` instead of hard-coded linefeed in `ParseError ToString` (#11746)\n\n  
17731,     Fix FileSystem provider error message (#11741)\n\n  
17732,     Update `PSPath` in `certificate_format_ps1 xml` (#11603)\n\n`PSPathPath` is an invalid item property name  
17733,     Ensure that types referenced by PowerShellStandard are present (#10634)\n\n  
17734,     Set `StrictMode` version `3 0` (#11563)\n\n  
17735,     Reformat code according to EditorConfig rules (#11681)\n\n  
17736,     Change regex to match relation-types w/o quotes in Link header (#11711)\n\n  
17737,     Replace use of throw GetExceptionForHR with ThrowExceptionForHR (#11640)\n\n`System Runtime InteropServices Marshall GetExceptionForHR` may not return an exception  Instead of `throw GetExceptionForHR` we can use `ThrowExceptionForHR` \r\n\r\nFix warnings `CS8597:Thrown value may be null `  
17738,     Add link to  NET CLI version in build documentation (#11725)\n\n\r\n  
17739,     Refactor delegate types to lambda expressions (#11690)\n\n  
17740,     Fix error message during symlink deletion (#11331)\n\n  
17741,     Check state and report reason if it\ s not  opened  (#11574)\n\n  
17742,     Fixes for running tests on Raspbian (#11661)\n\n  
17743,     Restore `SetBreakpoints` API (#11622)\n\n* Restore SetBreakpoints API\r\n\r\n* Remove default values in API methods\r\n\r\n* Fix inheriting APIs\r\n\r\n* Correct further comments\r\n\r\n* Fix breakpoint API use issues\r\n\r\n* Fix breakpoint API tests\r\n  
17744,     Fix unnecessary trimming of line resulting in incorrect indexi… (#11670)\n\n  
17745,     Bump `NJsonSchema` from `10 1 4` to `10 1 5` (#11730)\n\n  
17746,     Added info about DeploymentScripts in ADOPTERS md (#11703)\n\n  
17747,     Do not needlessly pass `-l login_name` or `-p port` to `ssh` (#11518)\n\n  
17748,     Fix Symlink creation in packaging psm1 (#11723)\n\n  
17749,     Revert the PRs that made `DBNull Value` and `NullString Value` treated as `$null` (#11648)\n\n  
17750,     Bump `Microsoft ApplicationInsights` from `2 12 0` to `2 12 1` (#11708)\n\n  
17751,     Update `CHANGELOG md` for `6 2 4` release (#11699)\n\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>\r\n  
17752,     Bump  devcontainer version to dotnet 3 1 101 (#11707)\n\n* Bump container version to dotnet 3 1 101\n\nRelates to    com/PowerShell/PowerShell/issues/11694\n\n* Revert  Bump devcontainer version to dotnet 3 1 101 \n\n* bump version number of label on base container\n  
17753,     Add links to diffs on Github in changelog (#11652)\n\n* Use consistent date format in markdown files\r\n\r\nChange to international date format to match date format in `CHANGELOG/6 1 md` etc \r\n\r\n* Add links to compare views on Github\r\n  
17754,     Bump `NJsonSchema` from `10 1 3` to `10 1 4` (#11620)\n\n  
17755,     Move to latest Azure DevOps agent images (#11704)\n\n  
17756,     Bump `Markdig Signed` from `0 18 0` to `0 18 1` (#11641)\n\n  
17757,     Move to version 3 of AzFileCopy (#11697)\n\n  
17758,     Update `README md` and `metadata json` for next release (#11664)\n\n  
17759,     Update  editorconfig (#11675)\n\n  
17760,     Add custom  Selected *  type to PSCustomObject in Select-Object only once (#11548)\n\nBefore the fix Select-Object without parameters added custom  Selected   type to PSCustomObject even if this type was already present in TypeNames that was a memory leak in the edge case \r\nThe cause of the problem was that Select-Object without parameters did not create a new object but forwarded the original \r\nThe fix is to add custom  Selected   type only if object is original and it has not already custom  Selected *  type   
17761,     Add -AsUTC to the Get-Date cmdlet (#11611)\n\n  
17762,     vscode: Enable EditorConfig support in OmniSharp (#11627)\n\n  
17763,     Unify pester test syntax for the arguments of `-BeOfType`  (#11558)\n\n  
17764,     Fix for `JEA` user role in virtual account (#11668)\n\n  
17765,     Format-Hex - Fix Grouping Behaviour with Boolean values (#11587)\n\n* Resolve issue with grouping bools & ints\r\n\r\nWe were not flushing the input buffer immediately when a different\r\ntype is encountered \r\nThis caused some odd behaviour when piping in a mix of bools and ints \r\nFix is to immediately flush the input buffer when the incoming object is\r\na different type than anything we have buffered \r\n  
17766,     Change name of ClrVersion parameter back (#11623)\n\n  
17767,     Specify charset in  editorconfig as utf-8 (no BOM) (#11654)\n\n  
17768,     Fix markdown-link test failure (#11653)\n\n  
17769,     Make Test-Connection always use the default synchronization context for sending ping requests (#11517)\n\n  
17770,     Update the change log in `preview md` for `v7 0 0-rc 2` release (#11609)\n\n  
17771,     Update `README md` and `metadata json` for next release (#11597)\n\n  
17772,     Code Cleanup for environment data gathering in `build psm1` (#11572)\n\n  
17773,     Update  NET SDK version to 3 1 101 (#11582)\n\n  
17774,     Bump `Microsoft PowerShell Native` from `7 0 0-rc 1` to `7 0 0 rc 2` (#11583)\n\n  
17775,     Bump `PSReadLine` from `2 0 0-rc1` to `2 0 0-rc2` (#11581)\n\n  
17776,     Test fixes for various platforms (#11579)\n\n  
17777,     Use ISOWeek for week numbers in Get-Date (#11536)\n\n  
17778,     Support expanding ~ in $env:PATH when doing command discovery (#11552)\n\n  
17779,     Test fixes for failing tests (#11541)\n\n  
17780,     Correct casing for automatic variables (#11568)\n\n* Remove BOM  insert newline at EOF\r\n\r\n* Correct case of $MyInvocation special variable\r\n\r\n* Correct case of $OFS special variable\r\n\r\n* Correct case of $NestedPromptLevel special variable\r\n\r\n* Correct case of $Matches special variable\r\n\r\n* Correct case of $LASTEXITCODE special variable\r\n\r\n* Correct case of $StackTrace special variable\r\n\r\n* Correct case of $args special variable\r\n\r\n* Correct case of $this special variable\r\n\r\n* Correct case of $input special variable\r\n\r\n* Correct case of $PSCmdlet special variable\r\n\r\n* Correct case of $error special variable\r\n\r\n* Correct case of $PSDefaultParameterValues special variable\r\n\r\n* Correct case of $PSScriptRoot special variable\r\n\r\n* Correct case of $PWD special variable\r\n\r\n* Correct case of $null special variable\r\n\r\n* Correct case of $true special variable\r\n\r\n* Correct case of $false special variable\r\n\r\n* Correct case of $PSModuleAutoLoadingPreference special variable\r\n\r\n* Correct case of $IsLinux special variable\r\n\r\n* Correct case of $IsMacOS special variable\r\n\r\n* Correct case of $IsWindows special variable\r\n\r\n* Correct case of $IsCoreCLR special variable\r\n\r\n* Correct case of $DebugPreference special variable\r\n\r\n* Correct case of $VerbosePreference special variable\r\n\r\n* Correct case of $InformationPreference special variable\r\n\r\n* Correct case of $ExecutionContext special variable\r\n\r\n* Correct case of $HOME special variable\r\n\r\n* Correct case of $Host special variable\r\n\r\n* Correct case of $PID special variable\r\n\r\n* Correct case of $PSCulture special variable\r\n\r\n* Correct case of $PSHOME special variable\r\n\r\n* Correct case of $PSUICulture special variable\r\n\r\n* Correct case of $PSVersionTable special variable\r\n\r\n* Fix false positives\r\n  
17781,     Mark `System32`-`PSModulePath` test as pending (#11576)\n\n  
17782,     Bump `NJsonSchema` from `10 1 2` to `10 1 3` (#11573)\n\n  
17783,     Port GetProcessorArchitecture() (#11046)\n\n  
17784,     Fix NRE in ConsiceView (#11435)\n\nUse LanguagePrimitives TryConvertTo() as last resort to string conversion   
17785,     Generate the correct reference assembly for `Microsoft PowerShell ConsoleHost` NuGet package (#11545)\n\n  
17786,     Fix false positives\n  
17787,     Correct case of $PSVersionTable special variable\n  
17788,     Correct case of $PSUICulture special variable\n  
17789,     Correct case of $PSHOME special variable\n  
17790,     Correct case of $PSCulture special variable\n  
17791,     Correct case of $PID special variable\n  
17792,     Correct case of $Host special variable\n  
17793,     Correct case of $HOME special variable\n  
17794,     Correct case of $ExecutionContext special variable\n  
17795,     Correct case of $InformationPreference special variable\n  
17796,     Correct case of $VerbosePreference special variable\n  
17797,     Correct case of $DebugPreference special variable\n  
17798,     Correct case of $IsCoreCLR special variable\n  
17799,     Correct case of $IsWindows special variable\n  
17800,     Correct case of $IsMacOS special variable\n  
17801,     Correct case of $IsLinux special variable\n  
17802,     Correct case of $PSModuleAutoLoadingPreference special variable\n  
17803,     Correct case of $false special variable\n  
17804,     Correct case of $true special variable\n  
17805,     Correct case of $null special variable\n  
17806,     Correct case of $PWD special variable\n  
17807,     Correct case of $PSScriptRoot special variable\n  
17808,     Correct case of $PSDefaultParameterValues special variable\n  
17809,     Correct case of $error special variable\n  
17810,     Correct case of $PSCmdlet special variable\n  
17811,     Correct case of $input special variable\n  
17812,     Correct case of $this special variable\n  
17813,     Correct case of $args special variable\n  
17814,     Correct case of $StackTrace special variable\n  
17815,     Correct case of $LASTEXITCODE special variable\n  
17816,     Correct case of $Matches special variable\n  
17817,     Correct case of $NestedPromptLevel special variable\n  
17818,     Correct case of $OFS special variable\n  
17819,     Correct case of $MyInvocation special variable\n  
17820,     Remove BOM  insert newline at EOF\n  
17821,     Avoid variable names that conflict with automatic variables part 2 (#11559)\n\n\r\n  
17822,     Update Debian Install Script To Support Debian 10 (#11540)\n\nSupport for installing pwsh on Debian 10 was added in #11236  but the\r\ninstall script for Debian was not updated  This resulted in an error\r\nwhen running the install script that claimed the distro was not\r\nsupported \r\n\r\nThis change simply adds `10` to the collection of supported distro s \r\n\r\nI have tested that the script will now successfully install powershell\r\npreview 7 on a Debian 10 machine \r\n\r\nFix #11539  
17823,     Update pester syntax to v4 (#11544)\n\n* Capitalize  Should  command and fix whitespace\r\n\r\n```powershell\r\n$_ -ireplace  \\s?\\|\\s?should\\b    | Should \r\n```\r\n\r\n* Capitalise and apply hyphen to  Not  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should) not\\b   $1 -Not \r\n```\r\n\r\n* Capitalise and apply hyphen to  Be  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?) -?be\\b   $1 -Be \r\n```\r\n\r\n* Capitalise and apply hyphen to  BeExactly  parameter\r\n\r\n$_ -ireplace  (\\| Should(?: -Not)?) -?beexactly\\b   $1 -BeExactly \r\n\r\n* Capitalise and apply hyphen to  BeGreaterThan  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?) -?begreaterthan\\b   $1 -BeGreaterThan \r\n```\r\n\r\n* Use  BeTrue  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?) -Be\\s\\$?true\\b   $1 -BeTrue \r\n```\r\n\r\n* Use  BeFalse  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?) -Be\\s\\$?false\\b   $1 -BeFalse \r\n```\r\n\r\n* Capitalise and apply hyphen to  Match  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?)\\s-?match\\b   $1 -Match \r\n```\r\n\r\n* Capitalise and apply hyphen to  Throw  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?)\\s-?throw\\b   $1 -Throw \r\n```\r\n\r\n* Capitalise and apply hyphen to  BeNullOrEmpty  parameter\r\n\r\n```powershell\r\n$_ -ireplace  (\\| Should(?: -Not)?)\\s-?benullorempty\\b   $1 -BeNullOrEmpty \r\n```\r\n\r\n* Capitalise  Because  parameter\r\n\r\n```powershell\r\n$_ -ireplace  \\s-because\\b    -Because \r\n```\r\n\r\n* Fix  BeNullOrEmpty \r\n  
17824,     Remove Unicode BOM from text files (#11546)\n\n  
17825,     Skip null data in output data received handler to fix a `NullReferenceException` (#11448)\n\n  
17826,     Update the breaking change definition (#11516)\n\n  
17827,     Update building of `MSIX` for `RC` to use 100 range revision (#11526)\n\n  
17828,     Various test fixes for debugger and remoting  (#11528)\n\n  
17829,     Configure the issue label bot (#11527)\n\n  
17830,     Normalize line endings before comparing string in tests (#11499)\n\n  
17831,     Correct startup error messages (#11473)\n\n  
17832,     `DSC` test fixes for Alpine and Raspbian (#11508)\n\n\r\n  
17833,     Fix symbolic links on Debian 10 packages (#11474)\n\n  
17834,     Fix SSH remoting test to work on all platforms (#11500)\n\n  
17835,     Adding PowerShell Editor Services and PSScriptAnalyzer  to tracked modules (#11514)\n\n  
17836,     Ignore headers with null values in web cmdlets (#11424)\n\n  
17837,     Build test artifacts for Alpine (#11483)\n\n  
17838,     Remove `RequireLicenseAcceptance` default value (#11512)\n\n  
17839,     Bump `Microsoft PowerShell Archive` from `1 2 3 0` to `1 2 4 0` (#11502)\n\n  
17840,     Add ssh parameter sets for `JobName` (#11444)\n\n  
17841,     Fix broken link in debugging `README md` (#11503)\n\n  
17842,     Allow error 504 (Gateway Timeout) in markdown-link tests (#11439)\n\n  
17843,     Make web cmdlets skip processing the content headers with a null or empty value for backward compatibility (#11421)\n\n  
17844,     Adding System Frontier to the PowerShell Core adopters list ADOPTERS md (#11480)\n\nAdding System Frontier to the PowerShell Core adopters list  Used by many companies in Production around the world \r\n  
17845,     Re-balance CI tests (#11420)\n\n  
17846,     Correct pwsh run (#11486)\n\n  
17847,     Add script to rebuild WIX component refs (#11485)\n\n* Add script to rebuild component refs\r\n\r\n* fix type\r\n\r\n* fix document we get componentGroup from\r\n\r\n* update files wxs\r\n\r\n* fix dependencies\r\n  
17848,     Include url in the markdown-links test error message (#11438)\n\n  
17849,     Added setting to disable implicit `WinPS` module loading (#11332)\n\n  
17850,     Use CIM cmdlets instead of WMI cmdlets in tests (#11423)\n\n  
17851,     Fix symbolic links to `libs` on Debian 10 (#11390)\n\n  
17852,     Bump ThreadJob from 2 0 2 to 2 0 3 in /src/Modules (#11416)\n\nBumps ThreadJob from 2 0 2 to 2 0 3 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17853,     Bump PackageManagement from 1 4 5 to 1 4 6 in /src/Modules (#11427)\n\nBumps PackageManagement from 1 4 5 to 1 4 6 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17854,     Bump PowerShellGet from 2 2 2 to 2 2 3 in /src/Modules (#11426)\n\nBumps [PowerShellGet (   com/PowerShell/PowerShellGet) from 2 2 2 to 2 2 3 \r\n- [Release notes (   com/PowerShell/PowerShellGet/releases)\r\n- [Changelog (   com/PowerShell/PowerShellGet/blob/development/CHANGELOG md)\r\n- [Commits (   com/PowerShell/PowerShellGet/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17855,     Don t format exceptions that aren t ErrorRecords (#11415)\n\n* In one of the previous PRs for ConciseView  System Exception was incorrectly added to the typenames handled by the ErrorRecord formatting  This results in just Exception objects written to the console to not be rendered since the ErrorRecord formatting didn t handle this situation  Fix is to remove the line to add that type putting it back to how it was previously  \r\n\r\n* Also made the handling of ErrorRecord a bit more robust just in case Exception Message doesn t exist nor a Message property   
17856,     Make null member access tests as string to avoid parsing errors (#11385)\n\n* Make null member access tests as string to avoid parsing errors\n\n* Add PSNullConditionalOperators feature to testmetadata json\n\n* Add Parsing tests to be skipped\n\n* Add tabcompletion tests\n  
17857,     Add retry to `Enter-PSHostProcess` test (#11360)\n\n  
17858,     Fix test failing when `UnixStat` feature is disabled (#11370)\n\n  
17859,     Update error message if `Update-Help` fails for the current `UICulture` (#11356)\n\n  
17860,     Mark `InitialSessionState ImportPSSnapIn` as Obsolete (#11399)\n\n  
17861,     Fix race condition exception on recent change to OutOfProc transport (#11406)\n\n  
17862,     Re-add check for Invoke-Command job dispose  (#11388)\n\n  
17863,     Avoid variable names that conflict with automatic variables (#11392)\n\n  
17864,     Update HelpInfoUri for all modules in PowerShell 7 0 (#11389)\n\n  
17865,     Test-Connection: Fallback to hop IP Address on `-Traceroute` without `-ResolveDestination` (#11335)\n\n  
17866,     Use invariant culture string conversion for `-replace` operator (#10954)\n\n  
17867,     Use `PositionMessage` for the line context information for `ConciseView` (#11398)\n\n  
17868,     Update hosting tests to use the SDK version from the build property (#11368)\n\n  
17869,     Fix key exchange hang for outofproc transports (#11380)\n\n  
17870,     Add trailing line number to filename for ConciseView (#11391)\n\n  
17871,     Remove the declaration of `Get-Error` experimental feature from module manifest (#11369)\n\n  
17872,     Remove unnecessary newline in ConciseView (#11383)\n\n* Add newline only if it s missing\r\n\r\n  
17873,     Revert  Update formatter to not write newlines if content is empty (#11193)  (#11342)\n\nThis reverts commit 51d2523f5fc3953e53902941659f607465a62053   
17874,     Bump NJsonSchema from 10 0 28 to 10 1 2 (#11382)\n\n  
17875,     Move Set-StrictMode to outer scriptblock for ErrorView (#11381)\n\n  
17876,     Update the NextReleaseTag to be v7 0 0-preview 7 (#11372)\n\n  
17877,     Update ChangeLog  README md and metadata json for 7 0 0-rc 1 release (#11363)\n\n  
17878,     Improvements in breakpoint APIs for remote scenarios (#11312)\n\n  
17879,     Fix for issue on raspbian for setting date of file changes in UnixStat Experimental Feature (#11313)\n\n  
17880,     Fix PowerShell class definition leaking into another Runspace (#11273)\n\n  
17881,     Add `-AsPlainText` to `ConvertFrom-SecureString` (#11142)\n\n  
17882,     Fix a regression in formatting caused by the `FirstOrDefault` primitive added in `7 0 0-Preview1` (#11258)\n\n  
17883,     Additional Microsoft Modules to track in `PS7` Telemetry (#10751)\n\n  
17884,     Update dependencies from PowerShell Gallery and NuGet (#11323)\n\n  
17885,     Fix Typo in Get-ComputerInfo cmdlet description (#11321)\n\n  
17886,     Add AzFunctions to ADOPTERS md (#11311)\n\n  
17887,     Bump `Microsoft ApplicationInsights` from `2 11 0` to `2 12 0` (#11305)\n\n  
17888,     Fix Nuget package signing for Coordinated Package build (#11316)\n\n  
17889,     Make approved features non-experimental (#11303)\n\n  
17890,     Added `WindowsPS` version check for `WinCompat` (#11148)\n\n  
17891,     Make update notification support LTS and default channels (#11132)\n\n  
17892,     Change comment and element text to meet MS standards (#11304)\n\n  
17893,     Update `ConciseView` to use `TargetObject` if applicable (#11075)\n\n\r\n  
17894,     Fix NullReferenceException in CompletionCompleters public methods (#11274)\n\n  
17895,     Add `Universal Dashboard` to `ADOPTERS md` (#11283)\n\n  
17896,     Fix apartment thread state check on non-Windows platforms (#11301)\n\n  
17897,     Update setting PSModulePath to concatenate the process + machine env var (#11276)\n\n  
17898,     Fix error-reporting in some `WinCompat` scenarios (#11259)\n\n  
17899,     Add native binary resolver (#11032)\n\n  
17900,     Add null host name check in WSMan (#11288)\n\n  
17901,     Fix typo in description for Get-ExperimentalFeature PSWindowsPowerShellCompatibility (#11282)\n\n  
17902,     Update `ADOPTERS md` (#11261)\n\n  
17903,     Update calculation of char width to respect CJK chars correctly (#11262)\n\n\r\n  
17904,     Bump `Microsoft CodeAnalysis CSharp` from `3 3 1` to `3 4 0` (#11265)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 3 1 to 3 4 0 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17905,     Add config yml for ISSUE_TEMPLATE so that Doc  Security  Suppo… (#11153)\n\n  
17906,     Bump ` NET` to `3 1 0` (#11260)\n\n  
17907,     Add `Adopters md` file (#11256)\n\n* add Adopters md file\r\n\r\n* add example template\r\n  
17908,     fixes #11187 (#11236)\n\n  
17909,     Cleanups in command discovery (#10815)\n\n* Enable nullable  make minor cleanups  add a test\r\n* Reduce allocations in GetAliasTable()\r\n* Remove searching by extensions on Unix\r\n  
17910,     Only enable experimental features prior to RC (#11162)\n\n  
17911,     Add `Unblock-File` for macOS (#11137)\n\n  
17912,     Refactor change logs into one log per release (#11165)\n\n  
17913,     Add an implementation of `Stop-Computer` for Linux and macOS (#11151)\n\n  
17914,     Allow `CompleteInput` to return results from `ArgumentCompleter` when `AST` or Script has matching function definition (#10574)\n\n  
17915,     Update formatter to not write newlines if content is empty (#11193)\n\n  
17916,     Fix regression in `Get-PSCallStack` (#11210)\n\n  
17917,     Fixes FWLinks for PS7 online help documents (#11071)\n\n  
17918,     Change back to use powershell exe in  SetVersionVariables yml  to unblock daily build (#11207)\n\nThis reverts commit cf729c34077f2f55080d12dd19e1c921c8e1f5af   
17919,     Improve Ubuntu detection for Ubuntu derivatives like `GalliumOS` etc (#11155)\n\n  
17920,     Change to use pwsh to have consistent JSON conversion for `DateTime` (#11126)\n\n  
17921,     Do not resolve types from assemblies that are loaded in separate `AssemblyLoadContext` (#11088)\n\n  
17922,     Disable the autoloading of modules that define `JobSourceAdapter` (#11194)\n\n  
17923,     Update macOS minimum version (#11163)\n\n  
17924,     Fix detection of $PSHOME in front of $env:PATH (#11141)\n\n  
17925,     Bump NJsonSchema from 10 0 27 to 10 0 28 (#11170)\n\n  
17926,     Make unreliable DSC test pending (#11131)\n\n  
17927,     Add `Type` member to Exceptions containing type of exception for `Get-Error` (#11076)\n\n  
17928,     Review currentculture (#11044)\n\nReplace StringComparison CurrentCulture with StringComparison Ordinal where it is used without the need   
17929,     Update `Readme md` for `preview 6` release (#11108)\n\n  
17930,     Merge branch  release/v7 0 0-preview 6  into master\n  
17931,     Merged PR 10531: Update change log for V7 0 0-preview 6 release\n\nUpdate change log for V7 0 0-preview 6 release\n  
17932,     Write an error if argument is a directory in Get-FileHash cmdlet (#11114)\n\n  
17933,     Update Get-Error to not modify the original $Error object (#11125)\n\n  
17934,     Update SUPPORT md (#11101)\n\nNew-issue link changed from a blank form to the intermediate issue-type-template selection change   
17935,     Update README md (#11100)\n\nLink to issues page added  reference to version 6 changed to  6 and higher   
17936,     Add OutputType to `Get-Error` cmdlet and preserve original typenames (#10856)\n\n- Added OutputType attribute  \r\n- Cmdlet adds the PSExtendedError typename and removes Exception and ErrorRecord typenames so that the formatting is used  The formatter then removes PSExtendedError and puts back the original typename so that $Error should be the same before calling Get-Error  \r\n- While testing  had to make some changes to how InvocationInfo is retrieved so that ParseException which contains a nested ErrorRecord which as InvocationInfo is handled correctly  \r\n- Combined Exception and ErrorRecord formatter into one   
17937,     Fix null reference in SupportsVirtualTerminal property (#11105)\n\n  
17938,     Merged PR 10515: Allow win7x86 msix package to build \n\nAllow win7x86 msix package to build \n  
17939,     Correct expected msix number \n  
17940,     Allow win7x86 msix package to build \n  
17941,     `Test-Connection` - Improve Logic and Output (#10697)\n\n  
17942,     Support using non-compatible Windows PowerShell modules in PowerShell Core (#10973)\n\n  
17943,     Update CONTRIBUTING md (#11096)\n\nNew-issue-creation link updated to show the various templates rather than a blank new issue form   
17944,     Allow `pwsh` to inherit `$env:PSModulePath` and enable `powershell exe` to start correctly (#11057)\n\n  
17945,     Experimental Feature: Provide Unix stat information in filesystem output (#11042)\n\n  
17946,     Support multi-line code blocks in examples (#10776)\n\n  
17947,     Add Culture parameter to `Select-String` cmdlet (#10943)\n\n  
17948,     Add default setting for the `SDKToUse` property so that it builds in VS (#11085)\n\n  
17949,     Fix `Start-Job` working directory path with trailing back slash (#11041)\n\n  
17950,     Allow semantic versions to be passed to `NormalizeVersion` fun… (#11087)\n\n  
17951,     Support null-conditional operators `? ` and `?[ ` in PowerShell language (#10960)\n\n  
17952,     Fix installation doc links in `README md` (#11083)\n\n  
17953,     Stop blindly setting `$?` to true for `ParenExpression`  `SubExpression` and `ArrayExpression` (#11040)\n\n  
17954,     Unload test modules (#11061)\n\n  
17955,     Bump  NET core framework to `3 1-preview 3` (#11079)\n\n  
17956,     ConvertFrom-Json: Unwrap Collections by default (#10861)\n\n  
17957,     Bump PSReadLine from 2 0 0-beta5 to 2 0 0-beta6 in /src/Modules (#11078)\n\nBumps [PSReadLine (   com/PowerShell/PSReadLine) from 2 0 0-beta5 to 2 0 0-beta6 \r\n- [Release notes (   com/PowerShell/PSReadLine/releases)\r\n- [Commits (   com/PowerShell/PSReadLine/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17958,     Remove the unused type converter for `CommaDelimitedStringCollection` (#11000)\n\n  
17959,     Group-Object - Use Case-Sensitive Hashtable for -CaseSensitive -AsHashtable (#11030)\n\nPrior to this change  Group-Object -AsHashtable -CaseSensitive would give a key duplication error when given entries that only differ by casing  This was due to always using a case-insensitive hashtable  despite the request for -CaseSensitive behaviour   
17960,     Adds examples to `install-powershell ps1` script (#11024)\n\n  
17961,     Handle exception if enumerating files fails when rebuilding path to have correct casing (#11014)\n\n  
17962,     Bump Newtonsoft Json from 12 0 2 to 12 0 3 (#11038)\n\nBumps [Newtonsoft Json (   com/JamesNK/Newtonsoft Json) from 12 0 2 to 12 0 3 \r\n- [Release notes (   com/JamesNK/Newtonsoft Json/releases)\r\n- [Commits (   com/JamesNK/Newtonsoft Json/compare/12 0 2   12 0 3)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17963,     Bump Newtonsoft Json (#11037)\n\nBumps [Newtonsoft Json (   com/JamesNK/Newtonsoft Json) from 12 0 2 to 12 0 3 \r\n- [Release notes (   com/JamesNK/Newtonsoft Json/releases)\r\n- [Commits (   com/JamesNK/Newtonsoft Json/compare/12 0 2   12 0 3)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
17964,     Add Debian 10  11 and CentOS 8 packages (#11028)\n\n  
17965,     Fix `ConciseView` to show Activity instead of myCommand (#11007)\n\nConciseView shows MyCommand as the prefix to the error message  but for a scriptblock  MyCommand is the whole scriptblock  Fix is to use CategoryInfo Activity if available first  Also handle case where it s a script function by seeing if it s a command and showing MyCommand in that case rather than the Activity   
17966,     Cleanup style in InitialSessionState cs (#10865)\n\n  
17967,     Increase time between retries of testing URL (#11015)\n\n  
17968,     Avoid using closure in Parser SaveError (#11006)\n\n  
17969,     Code clean up for PSSession class (#11001)\n\n  
17970,     Allow Web Cmdlets to Ignore HTTP Error Statuses (#10466)\n\n* Add -SkipHttpErrorCheck to web request cmdlets\r\n\r\nThe -SkipHttpErrorCheck flag causes web request cmdlets\r\n(Invoke-WebRequest and Invoke-RestMethod) to ignore HTTP statuses that\r\nare error statuses and treat them as successful requests  This allows\r\nusers to handle the responses using their own error handler and gives\r\nthem access to the full  unmodified response body and headers \r\n\r\n* Add -ResponseStatusVariable to Invoke-RestMethod\r\n\r\nThis allows the user to specify a variable to set to the integer value\r\nof the respons\ s status code  Analogous to using\r\n-ResponseHeadersVariable to retrieve the headers of the response  This\r\ncan be used to distinguish error messages from success messages when\r\nused with -SkipHttpErrorCheck \r\n\r\n* Fix coding-style error\r\n\r\nThe summary for the SkipHttpErrorCheck property didn\ t conform\r\nto style guidelines  This changes the summary to start with\r\n Gets or sets  \r\n\r\n* Add tests for -SkipHttpErrorCheck\r\n\r\nThis flag supresses terminating errors on web cmdlets \r\nThe tests are written to check that it properly\r\nsupressed the errors \r\n\r\n* Add test for -StatusCodeVariable\r\n\r\nTh -StatusCodeVariable parameter specifies an output\r\nvariable for the status code with Invoke-RestMethod \r\nThis test makes sure it functions properly \r\n\r\n* Fix typos and style for -SkipHttpErrorCheck tests\r\n\r\nVariables had different cases from each other and some parameter\r\nnames were lower case \r\n\r\n* Fix typos and style for -StatusCodeVariable test\r\n\r\nVariables had different cases from each other and some parameter\r\nnames were lower case \r\n\r\n* Add failure tests when missing -SkipHttpErrorCheck\r\n\r\nThese tests ensure that Web Cmdlets fail when -SkipHttpErrorCheck\r\nis missing \r\n\r\n* Clean up tests for -SkipHttpErrorCheck\r\n\r\nPer discussion on the pull requests  This commit fixes up\r\nstyle problems with the tests for -SkipHttpErrorCheck \r\n\r\n* Add more status tests for -StatusCodeVariable\r\n\r\nPreviously  the -StatusCodeVariable flag in Invoke-RestMethod\r\nonly had tests for 200 status  This commit adds tests for 404\r\nand 500 statuses and removes -SkipHttpErrorCheck from the 200\r\ncheck \r\n\r\n* Fix response body in -StatusCodeVariable test\r\n\r\nThe test was copy/pastes from the 200 status test  The body\r\nindicated success  This commit fixes that so it is also an\r\nerror indicator \r\n  
17971,     Upload Build-Info Json file with the  ReleaseDate  field (#10986)\n\n  
17972,     Fix piping more than one `CommandInfo` to `Get-Command` (#10929)\n\n  
17973,     Remove the not-working  run `Update-Help` from `Get-Help` when `Get-Help` runs for the first time  feature (#10974)\n\n  
17974,     Fix style issues (#10998)\n\n  
17975,     Bump  NET core framework to `3 1-preview 2` (#10993)\n\n  
17976,     Cleanup:  use the built-in type alias (#10882)\n\n  
17977,     Remove the unused setting key `ConsolePrompting` and avoid unnecessary string creation when querying `ExecutionPolicy` setting (#10985)\n\n\r\n  
17978,     Add back `Get-Counter` cmdlet for Windows (#10933)\n\n  
17979,     Make `ConvertTo-Json` treat `[AutomationNull ::Value` and `[NullString ::Value` as $null (#10957)\n\n  
17980,     Remove brackets from ipv6 address for SSH Remoting (#10968)\n\n  
17981,     Enable build of x86 MSIX package (#10934)\n\n  
17982,     Fix crash if command sent to pwsh is just whitespace (#10977)\n\n  
17983,     Added cross-platform `Get-Clipboard` and `Set-Clipboard` (#10340)\n\n\r\nCo-Authored-By: Ilya <darpa@yandex ru>\r\n\r\n\r\n\r\nCo-Authored-By: Ilya <darpa@yandex ru>\r\n\r\n  
17984,     Fix setting original path of filesystem object to not have extra trailing slash (#10959)\n\n\r\n  
17985,     Support $null for convertto-json (#10947)\n\nConvertTo-Json doesn t allow $null to be passed in even though it can be valid resulting json  Fix is to remove the check that the input is not null  NewtonSoft Json handles it just fine   
17986,     Add back `Out-Printer` command (#10906)\n\n  
17987,     Improve the caching when creating new `Regex` instances (#10657)\n\n  
17988,     Fix `Start-Job -WorkingDirectory` with whitespace (#10951)\n\n  
17989,     Return default value when getting  null  for a setting in `PSConfiguration cs` (#10963)\n\n  
17990,     Improve processing of the powershell built-in type data from  types ps1xml    typesV3 ps1xml  and  GetEvent types ps1xml  (#10898)\n\n  
17991,     Handle IO Exception as non-terminating (#10950)\n\n  
17992,     Add `GraphicalHost` assembly to enable `Out-GridView`  `Show-Command`  and `Get-Help -ShowWindow` (#10899)\n\n  
17993,     Take ComputerName via Pipeline in Get-HotFix (#10852)\n\n* add process record for Get-hotfix\r\n* update new FWLink\r\n  
17994,     Disable update notification check for daily builds (#10903)\n\n  
17995,     Fix tab completion for parameters so that it shows common parameters as available (#10850)\n\n  
17996,     Fix GetCorrectCasedPath() to first check if any system file entries is returned before calling First() (#10930)\n\n  
17997,     Reinstate debugging API lost in #10338 (#10808)\n\n  
17998,     Update `PSConfiguration ReadValueFromFile` to make it faster and more memory efficient (#10839)\n\n  
17999,     Set working directory to current directory in `Start-Job` (#10920)\n\n  
18000,     Change TabExpansion2 to not require `-CursorColumn` and treat as `$InputScript Length` (#10849)\n\n* FEATURE: Change TabExpansion2 to not require `-CursorColumn` and treat as `$InputScript Length`\n\n* address Jason s feedback\n  
18001,     `Install-Powershell ps1`: Add parameter to use MSI installation (#10921)\n\n  
18002,     Add basic examples for `install-powershell ps1` (#10914)\n\n* add basic info for install-powershell ps1 fixes #10911\r\n\r\nAdds some basic details for install-powershell ps1 script\r\n\r\n* Replaced Aliases\r\n  
18003,     Handle case where Host may not return Rows or Cols of screen (#10938)\n\n  
18004,     Fix use of accent colors for hosts that don t support them (#10937)\n\n  
18005,     Add back `Update-List` command (#10922)\n\n  
18006,     Update tests to accurately describe test actions  (#10928)\n\n  
18007,     Fix to Select-String emphasis and Import-DscResource in CHANGELOG md (#10890)\n\n  
18008,     Update FWLink Id for Clear-RecycleBin (#10925)\n\n  
18009,     Update the dotnet SDK install script URL in `build psm1` (#10927)\n\n  
18010,     Remove the stale link from `powershell-beginners-guide md` (#10926)\n\n  
18011,     During Tab Completion  skip file if can t read file attributes (#10910)\n\n  
18012,     Add back `Clear-RecycleBin` for Windows (#10909)\n\n  
18013,     Bump Markdig Signed from 0 17 1 to 0 18 0 (#10887)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 17 1 to 0 18 0 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/0 17 1   0 18 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18014,     Bump `ThreadJob` from `2 0 1` to `2 0 2` (#10886)\n\nBumps ThreadJob from 2 0 1 to 2 0 2 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18015,     Update AppX Manifest and Packaging module to conform to MS Sto… (#10878)\n\n  
18016,     Add `$env:__SuppressAnsiEscapeSequences` to control whether to… (#10814)\n\n  
18017,     Merge branch  release/v7 0 0-preview 5  into master\n  
18018,     Updating links in README md and metadata json for Preview 5 (#10854)\n\n  
18019,     Add limit check in Get-WinEvent (#10648)\n\nReadEvent() returns the error if our query contains number of logs more then 256 \r\nSo add the limit check and issue user-friendly error message \r\n\r\n\r\n  
18020,     Merged PR 10314: Updated release date in the changelog\n\nUpdated release date in the changelog\n  
18021,     Fix stringdata test to correctly validate keys of hashtables (#10810)\n\n  
18022,     Fix command runtime so StopUpstreamCommandsException doesn t get populated in `-ErrorVariable` (#10840)\n\n  
18023,     Merged PR 10307: Changelog for v7-0-0-preview-5\n\nChangelog for v7-0-0-preview-5\n  
18024,     Cleanup style issues in Compiler cs (#10368)\n\n  
18025,     Merged PR 10295: Updating PackageReference for PS SDK to preview 5\n\nUpdating PackageReference for PS SDK to preview 5\n  
18026,     Select the files for compliance tests which are owned by PowerShell (#10837)\n\n* Move fxd compliance to the top to avoid binskim and apiscan on fxd folder\r\n\r\n* Choose only the files we build for compliance\r\n\r\n* Update tools/packaging/packaging psm1\r\n\r\nCo-Authored-By: Travis Plunk <travis plunk@microsoft com>\r\n  
18027,     Set the output encoding to [Console ::OutputEncoding for native commands (#10824)\n\n  
18028,     Move to  NET Core 3 1 preview 1 (#10798)\n\n  
18029,     Update ThirdPartyNotices txt (#10834)\n\n  
18030,     Fix pure expressions setting $? in pipeline chains (#10836)\n\n  
18031,     Disable strict mode in `Get-Error` formatting script (#10800)\n\n  
18032,     Bump Microsoft PowerShell Native to 7 0 0-preview 3 (#10826)\n\n  
18033,     Skip the flaky test  TestAppDomainProcessExitEvenHandlerNotLeaking  for now (#10827)\n\n  
18034,     Fix pipeline chain experimental feature name (#10825)\n\n  
18035,     Support the pipeline chain operators `&&` and `||` in PowerShell language (#9849)\n\n  
18036,     Implement Null Coalescing and Null Coalescing assignment operators (#10636)\n\n  
18037,     Update upgrade notification message (#10777)\n\n  
18038,     Bump Microsoft ApplicationInsights from 2 10 0 to 2 11 0 (#10608)\n\n* Bump Microsoft ApplicationInsights from 2 10 0 to 2 11 0\r\n\r\nBumps [Microsoft ApplicationInsights (   com/Microsoft/ApplicationInsights-dotnet) from 2 10 0 to 2 11 0 \r\n- [Release notes (   com/Microsoft/ApplicationInsights-dotnet/releases)\r\n- [Changelog (   com/microsoft/ApplicationInsights-dotnet/blob/develop/CHANGELOG md)\r\n- [Commits (   com/Microsoft/ApplicationInsights-dotnet/compare/2 10 0   2 11 0)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>\r\n\r\n* Add new style of telemetry client instatiation\r\n\r\nThis is needed as the singleton TelemetryConfiguration Active is no longer available\r\n  
18039,     Make the event handler leaking test stable (#10790)\n\n  
18040,     Use more effective evaluation order in LanguagePrimitives IsNullLike() (#10781)\n\nRefactor IsNullLike() to evaluate the most commonly-expected null-like values first   
18041,     Update build docs (#10775)\n\n\r\n  
18042,     Minor performance improvements for Runspace initialization (#10569)\n\n  
18043,     Implement `Get-Error` cmdlet as Experimental Feature (#10727)\n\n  
18044,     Cleanup COM interfaces in jump list code - fix PreserveSig attributes (#9899)\n\n  
18045,     Format-Hex: Improve mixed-collection piped input and piped streams of input (#8674)\n\n  
18046,     Use type conversion in `SSHConnection` hashtables when value doesn t match expected type (#10720)\n\nBefore the change if the hashtable value does not match the expected type exactly  an exception is thrown stating that the value was null   
18047,     Fix for `Get-Content -ReadCount 0` behavior when `-TotalCount` is set (#10749)\n\n  
18048,     Reword access denied error message in Get-WinEvent (#10639)\n\n  
18049,     Enable tab completion for variable assignment that is enum (#10646)\n\n  
18050,     Remove unused `SourceLength` remoting property causing formatting issues (#10765)\n\n  
18051,     Replace links from MSDN to docs microsoft com (#10778)\n\n  
18052,     Switch from /etc/lsb-release to /etc/os-release (#10773)\n\n/etc/lsb-release does not exist on Debians  
18053,     Add -Delimiter to ConvertFrom-StringData (#10665)\n\n@steviecoaster Thank you!  
18054,     Sync capitalization in CI YAML (#10767)\n\n  
18055,     Add test for the even handler leaking fix (#10768)\n\nAdd a test for the even handler leaking fix addressed in #10626    com/PowerShell/PowerShell/pull/10626\r\nThe test is added to verify that PowerShell unregister the  AppDomain ProcessExit  event handler when a Runspace closes   
18056,     Add back `Get-HotFix` cmdlet (#10740)\n\n  
18057,     Check `pwsh exe` and `pwsh` in daily version on Windows (#10738)\n\nImproves on #10489  
18058,     Clarify which requirement are mandatory (#10734)\n\n  
18059,     Bump `NJsonSchema` from `10 0 24` to `10 0 27` (#10756)\n\n  
18060,     Add comment describing why `-ia` is not the alias for `-InformationAction` common parameter (#10703)\n\n  
18061,     Adding positional parameter for ScriptBlock when using Invoke-Command with SSH (#10721)\n\n  
18062,     For `ConciseView`  show line context information if multiple lines but no scriptname (#10746)\n\n  
18063,     Add `MacPorts` support to the build system (#10736)\n\n  
18064,     Remove unneeded tap in `installpsh-osx sh` (#10752)\n\n  
18065,     Adds emphasis to `Select-String` default formatter (#8963)\n\n  
18066,     Support notification on `pwsh` startup when a new release is available (#10689)\n\n  
18067,     Add support for `\\\\wsl$\\ubuntu` path (#10674)\n\n  
18068,     Update `ConciseView` to remove unnecessary text and not color entire line in red (#10724)\n\n  
18069,     Bump `PackageManagement` from `1 4 4` to `1 4 5` (#10728)\n\nBumps PackageManagement from 1 4 4 to 1 4 5 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18070,     Renamed `InvokeCommandCmdlet cs` to `InvokeExpressionCommand cs` (#10659)\n\n  
18071,     Replace CR and new line with a 0x23CE character (#10616)\n\n  
18072,     Add the missing token text for `TokenKind QuestionMark` (#10706)\n\n  
18073,     $PSCulture follows CurrentThread CurrentCulture (#10138)\n\n  
18074,     Some code cleanup work (#10698)\n\n* Move Utils GetUserConfigurationDirectory to Platform ConfigDirectory\r\n* Unify the use of Platform ConfigDirectory and Platform CacheDirectory  
18075,     Add ConciseView for $ErrorView (#10641)\n\n  
18076,     Fix broken DSC overview link (#10702)\n\n  
18077,     Remove deprecated workflow logic from the remoting setup scripts (#10320)\n\n\r\n  
18078,     Set current working directory of each `ForEach-Object -Parallel` running script to the same location as the calling script  (#10672)\n\n  
18079,     Replace `api-ms-win-core-file-l1-2-2 dll` with `Kernell32 dll` for `FindFirstStreamW` and `FindNextStreamW` APIs (#10680)\n\n  
18080,     Update help format to use proper case (#10678)\n\n  
18081,     Tweak help formatting script to be more `StrictMode` tolerant (#10563)\n\n  
18082,     Add `Get-ChildItem` test (#10507)\n\n\r\n  
18083,     Adding `-SecurityDescriptorSDDL parameter` to `New-Service` (#10483)\n\n  
18084,     Update `Support_Question md` to link to Stack Overflow as anothe… (#10638)\n\n  
18085,     `Test-Connection` - Remove informational output  consolidate Ping usage (#10478)\n\n  
18086,     Replace Ambiguous language for tests from switch to parameter for accuracy (#10666)\n\n  
18087,     Read special reparse points without accessing it (#10662)\n\n* Enhance enum FileDesiredAccess with zero value GenericZero\r\n* Use the GenericZero as desired access mode to read reparse point without access it\r\n\r\nFrom docs:\r\nIf desired access is zero  the application can query certain metadata such as file  directory  or device attributes without accessing that file or device  even if GENERIC_READ access would have been denied\r\n\r\n  
18088,     Direct Clear-Host output to terminal (#10681)\n\nClear-Host on Unix calls clear command which issues escapes  Before the change we write them to PowerShell output stream and it could be unwantedly intercepted  After the change we write the escapes directly to console   
18089,     Add back newline for grouping with `Format-Table` and `-Property` (#10653)\n\n  
18090,     Add processor architecture to distribution request (#10661)\n\n* Add processor architecture to distribution request\r\n\r\n* Update  github/ISSUE_TEMPLATE/Distribution_Request md\r\n\r\n* Update Distribution_Request md\r\n\r\n* Update  github/ISSUE_TEMPLATE/Distribution_Request md\r\n  
18091,     Remove [ValidateNotNullOrEmpty  from -InputObject on Get-Random to allow empty string (#10644)\n\n* Remove [ValidateNotNullOrEmpty  from -InputObject on Get-Random\n\n* address feedback to allow $null for -InputObject\n\n* address Ilya s feedback\n\n* address CodeFactor issues\n  
18092,     Clean up CodeFactor style issues coming in commits for the last month (#10591)\n\nOnly reformatting changes   
18093,     Bump NJsonSchema from 10 0 23 to 10 0 24 (#10635)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 0 23 to 10 0 24 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18094,     Unregister the event handler from  AppDomain CurrentDomain ProcessExit  (#10626)\n\n  
18095,     Make `Add-Type` usable in application that hosts PowerShell (#10587)\n\n  
18096,     Add new PowerShell MoL book (#10602)\n\n* Add new PowerShell MoL book\n\nHi  I thought that `Learn PowerShell in a Month of Lunches  Linux and macOS Edition` might be great addition to your list of books  \r\nThank you for your consideration\n\n* fix spelling issues\n  
18097,     Make suggestion system string distance algorithm case-insensitive (#10549)\n\n* Make string distance algoriphm case-insensitive\r\n\r\n* Use CurrentCulture in ToUpper()\r\n  
18098,     Add env var to differentiate client/server telemetry in MSI (#10612)\n\n  
18099,     Bump PSDesiredStateConfiguration from 2 0 3 to 2 0 4 (#10603)\n\n  
18100,     Bump Microsoft CodeAnalysis CSharp from 3 2 1 to 3 3 1 (#10607)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 2 1 to 3 3 1 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18101,     Update to  Net Core 3 0 RTM (#10604)\n\n  
18102,     Update MSIX packaging so the version to Store requirements (#10588)\n\nupdate packaging msix so version conforms to Store requirment  
18103,     Fix typo in description of `PSTernaryOperator` experimental feature (#10586)\n\nAlso make it more consistent with others by not ending in a period   
18104,     Fix null reference exception in `ForEach-Object -Parallel` input processing (#10577)\n\n  
18105,     Merge v7 0 0-preview 4 release branch to master\n\n  
18106,     Merged PR 10023: Changelog for v7-0-0-preview-4\n  
18107,     Merged PR 10011: Update README md and metadata json for 7 0 0-preview 4\n\nUpdate README md and metadata json for 7 0 0-preview 4\n  
18108,     Refactor reparse tag checks (#10431)\n\nReparse tag consts is absolute numbers  not flags so we should use a comparison instead of bit operations  
18109,     Remove WorkflowJobSourceAdapter reference (#10326)\n\n  
18110,     Upgrade  Net Core 3 0 version from Preview 9 to RC1 (#10552)\n\n  
18111,     Upgrade  Net Core 3 0 version from Preview 9 to RC1 (#10552)\n\n  
18112,     Make `Install-PowerShellRemoting ps1` handle empty string in `PowerShellHome` parameter (#10526)\n\nWhen PowerShellHome is not specified as a runtime parameter to Install-PowerShellRemoting ps1  the check  -ne $null  is actually an empty string   Properly checking with [String ::IsNullOrEmpty() solves the problem   
18113,     Merged PR 9996: Fix `ExperimentalFeature` list generation\n  
18114,     Bump PSReadLine from 2 0 0-beta4 to 2 0 0-beta5 in /src/Modules (#10536)\n\n  
18115,     Bump PSReadLine from 2 0 0-beta4 to 2 0 0-beta5 in /src/Modules (#10536)\n\n  
18116,     Merge stable and servicing Changelogs (#10527)\n\n* merge stable and servicing changelogs\n\n* fix spelling\n  
18117,     Fix script to set release tag\n  
18118,     Update version of `Microsoft PowerShell Native` (#10519)\n\n  
18119,     Update PSDesiredStateConfiguration to 2 0 3 and bring new test… (#10516)\n\n  
18120,     Update README and metadata for next releases (#10523)\n\n  
18121,     Adding PSCore group policy definitions (#10468)\n\n  
18122,     Prevent the installation of the same version we have  (#10489)\n\n* Prevent the installation of the same version we have \r\n\r\n* update the buildinfo to be an aka ms url\r\n\r\n* convert tab to spaces\r\n\r\n* spaces not tabs\r\n  
18123,     Add working directory parameter to `Start-Job` (#10324)\n\n  
18124,     Remove the event handler that was causing breakpoint changes to be erroneously replicated to the host runspace debugger (#10503)\n\n* fix #10167\n\n* Update test/powershell/SDK/Breakpoint Tests ps1\n\nCo-Authored-By: Ilya <darpa@yandex ru>\n  
18125,     Transition ActionPreference Suspend enumeration value into a non-supported  reserved state  and remove restriction on using ActionPreference Ignore in preference variables (#10317)\n\n  
18126,     Upgrade to `Netcoreapp3 0 preview9` (#10484)\n\n  
18127,     Add APIs for breakpoint management in runspaces and enable attach to process without BreakAll for PSES (#10338)\n\n  
18128,     Fix for `ForEach-Object -Parallel` performance problem with many runspaces (#10455)\n\n  
18129,     Replace ArrayList with List<T> (#10333)\n\n  
18130,     Revert the PR  Make `ForEach-Object` faster for its commonly used scenarios  (#10485)\n\nIt turns out this optimization brings in a breaking change: `$MyInvocation` is different comparing to before the optimization change  I tried to fix the breaking change  but couldn\ t without introducing more hacky code  Given that  that PR should be reverted   
18131,     Support ternary operator in PowerShell language (#10367)\n\n  
18132,     Replace `api-ms-win-core-job-12-1-0 dll` with `Kernell32 dll` (#10417)\n\n  
18133,     Cleanup TestConnectionCommand (#10439)\n\n  
18134,     Fix wrong output for `New-Service` in variable assignment and `-OutVariable` (#10444)\n\n  
18135,     Fix global tool issues around exit code  command line parameters and path with spaces (#10461)\n\n  
18136,     Make `ForEach-Object` faster for its commonly used scenarios (#10454)\n\n  
18137,     Update README md (#10465)\n\nFix typo   
18138,     Minor fix for recursion into OneDrive - Change FindFirstFileEx() to use SafeFindHandle type (#10405)\n\n  
18139,     Make sure the daily coordinated build  knows it is a daily bui… (#10464)\n\n  
18140,     Cleanup `AutomationEngine` and remove extra `SetSessionStateDrive` method call (#10416)\n\n  
18141,     Update the combined package build to release the daily builds (#10449)\n\n  
18142,     Remove yet another appveyor reference (#10445)\n\n  
18143,     Alpine validation changes (#10428)\n\n  
18144,     Add support to `ActionPreference Break` to break into debugger (#8205)\n\n  
18145,     Bump NJsonSchema from 10 0 22 to 10 0 23 (#10421)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 0 22 to 10 0 23 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18146,     Skip auto-loading PSReadLine on Windows if the NVDA screen reader is active (#10385)\n\n  
18147,     Rename default ParameterSetName back to `Delimiter` for `ConvertTo-Csv` & `ConvertFrom-Csv` (#10425)\n\n* rename default parameterset name back to `Delimiter`\r\n* also fix convertfrom-csv\r\n* rename parametersetname for UseCulture back to UseCulture since there is no path for ConvertFrom-Csv\r\n  
18148,     Increase built-with-PowerShell module versions to 7 0 0 0 (#10356)\n\n  
18149,     Block type update in Add-Type cmdlet (#9609)\n\n  
18150,     Some dependencies for Alpine need `linux-x64` folder (#10407)\n\n  
18151,     Add some regular contributors to allow access to retry CI (#10397)\n\n  
18152,     Add `PSKoans` to Learning Resources documentation (#10369)\n\n  
18153,     Update `README md` and `metadata json` for `7 0 0-preview 3` (#10393)\n\n  
18154,     Merge branch  release/v7 0 0-preview 3  into master\n  
18155,     Merged PR 9744: Update changelog for preview 3 release\n\nUpdate changelog for preview 3 release\n  
18156,     Bump PowerShellGet from 2 2 to 2 2 1 in /src/Modules (#10382)\n\nBumps [PowerShellGet (   com/PowerShell/PowerShellGet) from 2 2 to 2 2 1 \r\n- [Release notes (   com/PowerShell/PowerShellGet/releases)\r\n- [Changelog (   com/PowerShell/PowerShellGet/blob/development/CHANGELOG md)\r\n- [Commits (   com/PowerShell/PowerShellGet/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18157,     Bump `PackageManagement` from `1 4 3` to `1 4 4` (#10383)\n\nBumps PackageManagement from 1 4 3 to 1 4 4 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18158,     Add experimental check for `ForEach-Object -Parallel` tests (#10354)\n\n  
18159,      CPL should be added to PATHEXT (#9828)\n\n  
18160,     Formatting: Handle `XTPUSHSGR` and `XTPOPSGR` control sequences (#10208)\n\n  
18161,     Additional Telemetry - Implementation of `RFC0036` (#10336)\n\n  
18162,     Fix minor breakpoint re-hydration bug (#10339)\n\n  
18163,     Mark `-parallel` and `-throttlelimit` reserved for `foreach` and `switch` statements (#10328)\n\n  
18164,     Update Microsoft Management Infrastructure version to 2 0 0-preview 2 (#10366)\n\n  
18165,     Move to  NET Core 3 0 preview 8 (#10351)\n\n  
18166,     Bump NJsonSchema from 10 0 21 to 10 0 22 (#10364)\n\nBumps [NJsonSchema (   com/RicoSuter/NJsonSchema) from 10 0 21 to 10 0 22 \r\n- [Release notes (   com/RicoSuter/NJsonSchema/releases)\r\n- [Commits (   com/RicoSuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18167,     Deprecate workflow debugging code (#10321)\n\n  
18168,     Fix style issues in InternalCommands cs (#10352)\n\n  
18169,     Deprecate internal HelpCategory Workflow enumeration (#10319)\n\n  
18170,     pwsh -Login support (#10050)\n\n  
18171,     Make Get-DscResource work with class based resources (#10350)\n\n  
18172,     Add support for AppX reparse points (#10331)\n\n  
18173,     Implement ForEach-Object -Parallel feature (#10229)\n\n  
18174,     Fix `#requires -version` for pwsh 7 to include 6 1 and 6 2 in `PSCompatibleVersions` (#9943)\n\n  
18175,     Make module name matching for `get-module -FullyQualifiedName`… (#10329)\n\n  
18176,     Add dispose of _runspaceDebugCompleteEvent event object  (#10323)\n\n  
18177,     Add `Microsoft PowerShell CoreCLR Eventing dll` to exception list for build fix (#10337)\n\n  
18178,     Reduce allocations in MakePath() method (#10027)\n\n  
18179,     Expose PreRelease label in PSModuleInfo formatter (#10316)\n\n  
18180,     Bump Microsoft CodeAnalysis CSharp from 3 2 0 to 3 2 1 (#10330)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 2 0 to 3 2 1 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18181,     Enable Experimental Features by default on Preview builds (#10228)\n\n  
18182,     Update  Microsoft PowerShell CoreCLR Eventing  to resolve conflict with  System Diagnostics EventLog  (#10305)\n\n* Update  Microsoft PowerShell CoreCLR Eventing  to resolve conflicts\r\n* Add reference to  System Diagnostics EventLog  to build Microsoft PowerShell Commands Diagnostics on Unix\r\n* Stop compiling Get/New-WinEvent on Unix\r\n  
18183,     Add tests for WildcardPattern Escape() and Unescape() (#10090)\n\n  
18184,     Update our language on our policy applying to security issues (#10304)\n\n  
18185,     Cleanup Docker release testing (#10310)\n\n  
18186,     Don t collect process starttime as it s not being used on consolehost startup (#10294)\n\n* mark _readyForInputTimeInMS member as part of LEGACYTELEMETRY\r\n* move _interactiveCommandCount to LEGACYTELEMETRY\r\n  
18187,     Fix debugger disable performance regression (#10269)\n\n  
18188,     Update PowerShell to build against  NET Core 3 0-preview7 (#10227)\n\n  
18189,     Remove extra check that the system dll exists (#10244)\n\n  
18190,     Update dead links from powershell com (#10297)\n\n  
18191,     Remove stable and servicing branches from dependabot (#10289)\n\n  
18192,     Cleanup: ThreadAbortException is now in  Net Core 3 0 (#10230)\n\n* Cleanup: ThreadAbortException is now in  Net Core 3 0\r\n\r\n* Fix CodeFactor issue\r\n\r\n* Remove ThreadAbortException\r\n\r\n* Remove ThreadAbortException relared code\r\n  
18193,     Bump Microsoft CodeAnalysis CSharp from 3 1 0 to 3 2 0 (#10273)\n\nBumps [Microsoft CodeAnalysis CSharp (   com/dotnet/roslyn) from 3 1 0 to 3 2 0 \r\n- [Release notes (   com/dotnet/roslyn/releases)\r\n- [Changelog (   com/dotnet/roslyn/blob/master/docs/Breaking%20API%20Changes md)\r\n- [Commits (   com/dotnet/roslyn/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18194,     Revert the temporary change (#10260)\n\n  
18195,     Fix spelling error in issue template (#10256)\n\n  
18196,     Create`Distribution_Request` issue template (#10253)\n\n  
18197,     Quote arguments in ` vscode/tasks json` in case of spaces (#10204)\n\n  
18198,     Special case the posix locale in WildcardPattern (#10186)\n\n  
18199,     Use  Platform IsWindowsDesktop  instead of checking both NanoServer and IoT (#10205)\n\n  
18200,     Enable `-sta` and `-mta` switches for pwsh (#10061)\n\n  
18201,     Fix: Removed dependency file with Dependabot (#10212)\n\n  
18202,     Use nameof() in LocationGlobber and PathInfo (#10200)\n\n* Use nameof() in LocationGlobber\r\n* Use nameof() in PathInfo\r\n  
18203,     Fix macOS build break (#10207)\n\n  
18204,     Avoid boxing when passing value type arguments to `PSTraceSource WriteLine` (#10052)\n\n  
18205,     Add -Raw switch to Select-String for convenience (#9901)\n\n  
18206,     Reduce allocations in Escape() and Unescape() (#10041)\n\n  
18207,     Update release date for `v7 0 0-preview 2` (#10176)\n\n  
18208,     Merge branch  release/v7 0 0-preview 2  into master\n\n# Conflicts:\n#\ttest/nanoserver/nanoserver tests ps1\n  
18209,     Update docs for `7 0 0-preview 2` release (#10160)\n\n  
18210,     Fix hungarian prefix  my  (#9976)\n\n  
18211,     Merged PR 9166: Update changelog for v7 0 0-preview 2\n\nUpdate changelog for v7 0 0-preview 2\n\nUpdates are expected when STA / MTA change comes in \n  
18212,     PSSA also includes formatting (#10172)\n\n  
18213,     Refactor security policy documentation so that they appear in the Security policy tab of GitHub (#9905)\n\n\r\n\r\nCo-Authored-By: Travis Plunk <travis plunk@microsoft com>\r\n  
18214,     Add the license header to `nanoserver tests ps1` (#10171)\n\n  
18215,     Add  devcontainer configuration (#10114)\n\n  
18216,     Add tooling section to PR template (#10144)\n\n  
18217,     Update README md and metadata json for next releases (#10087)\n\n  
18218,     Merged PR 9168: Disable Enter-PSHostProcess cmdlet when system in lock down mode\n\nThis is based on an issue  where Enter-PSHostProcess on a locked down (WDAC enforced) machine allows any admin to connect to any another local hosted PowerShell process and execute commands as that user  This amounts to privilege escalation on the policy locked down machine and something we want to prevent \n\nFix is to check for system lock down and disable Enter-PSHostProcess cmdlet with an error message \n  
18219,     Merged PR 9185: Update PowerShell SDK version for hosting tests\n\nUpdate PowerShell SDK version for hosting tests\n  
18220,     Skip `JumpList` on `NanoServer` and `IoT` (#10164)\n\n  
18221,     Skip `JumpList` on `NanoServer` and `IoT` (#10164)\n\n  
18222,     Merged PR 5767: Fix RegEx DoS issues\n\nFix RegEx DoS issues\n  
18223,     Remove `markdownlint` tests due to security issues (#10163)\n\n  
18224,     Remove `markdownlint` tests due to security issues (#10163)\n\n  
18225,     Update DotNet Support links (#10145)\n\n  
18226,     Identify renaming a parameter set as non-breaking in the breaking change contract document (#10113)\n\n* Identify renaming a parameter set as non-breaking\r\nRelated discussion:    com/PowerShell/PowerShell/issues/10058 \r\n\r\n* Add note about S M A Internal\r\n  
18227,     Remove  kill  alias for Stop-Process cmdlet on Unix (#10098)\n\n  
18228,     Split the fxdependent package on Windows into two packages (#10134)\n\n  
18229,     Mark Set-Service tests with password as `Pending` (#10146)\n\n  
18230,     Add alias for Service  StartType  (#9940)\n\n  
18231,     Cleanup CompiledScriptBlock cs (#9735)\n\n  
18232,     Fix test password generation rule to meet Windows complexity requirements (#10143)\n\n\r\n  
18233,     Revert  Bump System DirectoryServices (#10105)  (#10135)\n\nThis reverts commit 2852efc395494b3d6e2b98741e97c4b61d432879 \r\n\r\n# Conflicts:\r\n#\tsrc/System Management Automation/System Management Automation csproj  
18234,     Cleanup workflow - remove PSProxyJob (#10083)\n\n\r\n  
18235,     Revert  Bump System Security Principal Windows (#10101)  (#10133)\n\nThis reverts commit f75c635ce42a070aa169816b158505acd2ee9e4c   
18236,     Revert  Bump System Configuration ConfigurationManager (#10111)  (#10128)\n\nThis reverts commit c8fe894bcd42137b92dc6a446d0d799b1f04c307   
18237,     Revert  Bump System Security AccessControl (#10102)  (#10132)\n\nThis reverts commit 729a29ab15e6b0697275fd2bcd628cec76869e4a   
18238,     Revert  Bump System Text Encoding CodePages (#10112)  (#10131)\n\nThis reverts commit 958cdda18ab1660d6d3605ae9e2ccb96af11166a   
18239,     Revert  Bump System Security Cryptography Pkcs (#10107)  (#10130)\n\nThis reverts commit d33c906e58bea38e45bcbf82c1cfdcab73455482   
18240,     Revert  Bump System Management (#10110)  (#10129)\n\nThis reverts commit e5990ed8ba67423da769086736f461e5690ed4e3   
18241,     Revert  Bump System Text Encodings Web (#10123)  (#10124)\n\nThis reverts commit b9501d9ae8c65684b3ded4d90eef5a0622fc68ca   
18242,     Revert  Bump System Threading AccessControl (#10106)  (#10127)\n\nThis reverts commit a7f0c6d2c409b41d33043fb2368a23211c8e9de5   
18243,     Revert  Bump System Data SqlClient (#10109)  (#10126)\n\nThis reverts commit 83d8ec42bb8b116f9dbb73d3affba027e8e75e6a   
18244,     Revert  Bump System IO Packaging (#10108)  (#10125)\n\nThis reverts commit 45edbd7ee3f1b866fff5e3ab87f4dc2fb9d10565   
18245,     Bump System Text Encodings Web (#10123)\n\nBumps System Text Encodings Web from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18246,     Add -SecurityDescriptorSddl parameter to Set-Service (#8626)\n\n  
18247,     Bump System Configuration ConfigurationManager (#10111)\n\nBumps System Configuration ConfigurationManager from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18248,     Bump System Security AccessControl (#10102)\n\nBumps System Security AccessControl from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18249,     Bump System Security Principal Windows (#10101)\n\nBumps System Security Principal Windows from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18250,     Bump System IO Packaging (#10108)\n\nBumps System IO Packaging from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18251,     Bump System Security Cryptography Pkcs (#10107)\n\nBumps System Security Cryptography Pkcs from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18252,     Bump System DirectoryServices (#10105)\n\nBumps System DirectoryServices from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18253,     Bump System Management (#10110)\n\nBumps System Management from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18254,     Bump System Data SqlClient (#10109)\n\nBumps System Data SqlClient from 4 7 0-preview6 19303 8 to 4 7 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18255,     Bump System Threading AccessControl (#10106)\n\nBumps System Threading AccessControl from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18256,     Bump System Security AccessControl (#10100)\n\nBumps System Security AccessControl from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18257,     Bump System Text Encoding CodePages (#10112)\n\nBumps System Text Encoding CodePages from 4 6 0-preview6 19303 8 to 4 6 0-preview 19113 10 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18258,     Update change log generation tool to deal with private commits (#10096)\n\n  
18259,     Add another fast path to `WildcardPattern IsMatch` for patterns that only have an asterisk in the end (#10054)\n\n  
18260,     Move some of the creations of `WildcardPattern` in outer loop to avoid unnecessary allocation (#10053)\n\n  
18261,     Bump PowerShellGet from 2 1 5 to 2 2 in /src/Modules (#10085)\n\nBumps [PowerShellGet (   com/PowerShell/PowerShellGet) from 2 1 5 to 2 2 \r\n- [Release notes (   com/PowerShell/PowerShellGet/releases)\r\n- [Changelog (   com/PowerShell/PowerShellGet/blob/development/CHANGELOG md)\r\n- [Commits (   com/PowerShell/PowerShellGet/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18262,     add performance tag to change log command\n  
18263,     Bump PackageManagement from 1 4 2 to 1 4 3 in /src/Modules (#10084)\n\nBumps PackageManagement from 1 4 2 to 1 4 3 \r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18264,     Upgrade  Net Core 3 SDK from preview5 to preview6 and related out of band Nuget packages from 2 1 to 3 0-preview6 (#9888)\n\n  
18265,     Create JumpList in STA thread as some COM APIs are strictly STA only to avoid sporadic CLR crashes (#10057)\n\n  
18266,     Update  Start-PSBuild -Clean  logic of  git clean  to ignore locked files from VS2019 (#10071)\n\n  
18267,     Make `Foreach-Object` 2 times faster by reducing unnecessary allocations and boxing (#10047)\n\n  
18268,     Check if a reparsepoint is a symlink before trying to get target (#9895)\n\n  
18269,     Add to /etc/shells on macOS (#10066)\n\n\r\nCo-Authored-By: Robert Holt <rjmholt@gmail com>\r\n  
18270,     Cleanup workflow code (#9638)\n\n* Remove WorkFlowInfo type\r\n\r\n* Remove condition for UseSharedProcess\r\n\r\n* Remove PSWorkflowJob condition\r\n\r\n* Remove workflow from ValidateSet\r\n\r\n* Remove workflow from CommandTypes enum\r\n\r\n* Remove workflow from EventManager\r\n\r\n* Remove workflow from Get-Help\r\n\r\n* Remove WorkflowFileExtension   xaml  from ModuleIntrinsics\r\n\r\n* Remove WorkflowFileExtension   xaml  from ModuleCmdletBase\r\n\r\n* Remove workflow from PSModuleInfo\r\n\r\n* Remove workflow from CustomShellCommands\r\n\r\n* Remove workflow from InitialSessionStateProvider\r\n\r\n* Remove WriteWorkflowDebugNotSupportedError()\r\n\r\n* Remove unneeded resource strings from Module cs\r\n\r\n* Remove xaml from valid extension list\r\n\r\n  
18271,     Bump Markdig Signed from 0 17 0 to 0 17 1 (#10062)\n\n  
18272,     Use a static cache for `PSVersionInfo PSVersion` to avoid casting `SemanticVersion` to `Version` very time accessing that property (#10028)\n\n  
18273,     Indent fix in markdown-link tests ps1 (#10049)\n\n  
18274,     Reduce allocations in NavigationCmdletProvider NormalizePath() (#10038)\n\n  
18275,     Use `AddOrUpdate()` instead of `Remove` then `Add` to register runspace (#10007)\n\n  
18276,     Suppress PossibleIncorrectUsageOfAssignmentOperator rule violation by adding extra parenthesis (#9460)\n\n  
18277,     Set request headers when request body is empty in Web Cmdlets (#10034)\n\n  
18278,     Add fast path for wildcard patterns that contains no wildcard characters (#10020)\n\n  
18279,     Use AddRange in GetModules() (#9975)\n\n  
18280,     Avoid `Assembly GetName()` in  ClrFacade GetAssemblies(string)  to reduce allocations of  CultureInfo  objects (#10024)\n\n  
18281,     Start-PSBuild -Clean  doeas not remove all untracked files (#10022)\n\n  
18282,     Consider `DBNull Value` and `NullString Value` the same as `$null` when comparing with `$null` and casting to bool (#9794)\n\n- Adds `LanguagePrimitives IsNullLike()` method to account for `DBNull Value` and `NullString Value` so that they can be considered the same as a null value where sensible in PowerShell \r\n- Updates `-ne` and `-eq` binders to treat `DBNull Value` and `NullString Value` as equal to null/AutomationNull \r\n- Update code paths for comparing objects in LanguagePrimitives to ensure consistency with how the `-eq` and `-ne` binders work when calling LanguagePrimitives methods to do the comparisons \r\n- Make `LanguagePrimitives IsNull()` and `LanguagePrimitives IsNullLike()` public methods \r\n- Added tests for null behaviours in `NullRepresentatives Tests ps1`  
18283,     Bump NJsonSchema from 10 0 20 to 10 0 21 (#10017)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 10 0 20 to 10 0 21 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18284,     Avoid the `int[ ` and `int[  ` allocation when tokenizing line comments and matching wildcard pattern (#10009)\n\n- Reusing the same 2-dimensional integer array for processing line comments in the same Tokenizer \r\n- Use ArrayPool<int> in PatternPositionVisitor to avoid creating transient int[    
18285,     Update copyright symbol for NuGet packages (#9936)\n\n  
18286,     Download latest version (6 2 0) of PSDesiredStateConfiguration nuget package  (#9932)\n\n  
18287,     Add automated RPM signing to release build (#10013)\n\n  
18288,     Code cleanup: use IndexOf(char) overload (#9722)\n\n- Use IndexOf(char) overload instead of IndexOf(string) to benefit from Ordinal search\r\n- Replace IndexOf with Contains to get more understandable code\r\n- Use StringComparison Ordinal for ASCII chars  
18289,     Build(deps): Bump ThreadJob from 1 1 2 to 2 0 1 in /src/Modules (#10003)\n\n  
18290,     Move consts and methods to single CharExtensions class (#9992)\n\n  
18291,     Allow methods to be named after keywords (#9812)\n\n  
18292,     Add test for `New-Item -Force` (#9971)\n\n  
18293,     Cleanup: Use EndsWith(char) and StartsWith(char) (#9994)\n\n  
18294,     Add quick steps for adding docs to cmdlets (#9978)\n\n  
18295,     Fix gulp versions (#9916)\n\n  
18296,     Remove LCIDToLocaleName P/Invoke from GetComputerInfoCommand (#9716)\n\n- Remove LCIDToLocaleName P/Invoke with StringBuilder\r\n- Reduce allocations by using GetCultureInfo to get cached CultureInfo\r\n- Use UInt32 TryParse to parse Hex\r\n- Minor cleanups after above changes  
18297,     Cleanup Parser tests (#9792)\n\n\r\nCo-Authored-By: Ilya <darpa@yandex ru>\r\n  
18298,     Fix wrong comparison in CertificateProvider (#9987)\n\n  
18299,     Fix amazonlinux install script (#9967)\n\n  
18300,     Sync docs changes into the embedded help for pwsh (#9952)\n\n  
18301,     Remove EtwActivity empty constructor and make minor style fixes (#9958)\n\n  
18302,     Suppress sporadic exceptions from JumpList creation code (#9928)\n\n  
18303,     Fix style issues from last commits (#9937)\n\n  
18304,     Remove dead code about  IsTransparentProxy  (#9966)\n\n  
18305,     Display Duration when displaying `HistoryInfo` (#9751)\n\n  
18306,     Display com method signature with argument names (#9858)\n\n  
18307,     Update readme gitter badge (#9920)\n\n  
18308,     Indentation fixes in ci psm1 (#9947)\n\n  
18309,     Fix minor typos in code comments (#9917)\n\n  
18310,     Remove some Travis-CI references (#9919)\n\n  
18311,     Improve release testing Docker images (#9942)\n\n  
18312,     Style fixes for CimAsyncOperations (#9945)\n\n  
18313,     Build(deps): Bump NJsonSchema from 10 0 19 to 10 0 20 (#9954)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 10 0 19 to 10 0 20 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18314,     Fix minor CodeFactor style issues in ModuleCmdletBase (#9915)\n\n  
18315,     Update console startup and help url for PowerShell docs (#9775)\n\n  
18316,     Clean up the use of  SetProfileRoot  and  StartProfile  in ConsoleHost (#9931)\n\n* Clean up the use of  SetProfileRoot  and  StartProfile  in ConsoleHost\r\n* Remove  pwsh pdb  from our component file list\r\n\r\n  
18317,     Build(deps): Bump PowerShellGet from 2 1 4 to 2 1 5 in /src/Modules (#9933)\n\nBumps [PowerShellGet (   com/PowerShell/PowerShellGet) from 2 1 4 to 2 1 5 \r\n- [Release notes (   com/PowerShell/PowerShellGet/releases)\r\n- [Changelog (   com/PowerShell/PowerShellGet/blob/development/CHANGELOG md)\r\n- [Commits (   com/PowerShell/PowerShellGet/commits)\r\n\r\nSigned-off-by: dependabot-preview[bot  <support@dependabot com>  
18318,     Use the original precision (prior-dotnet-core-3) for double/fload-to-string conversion (#9893)\n\n NET Core changes to return  shortest roundtrippable string  by default for the ToString() method of double and float types  This results in ToString() for double/float values sometimes return a string in 17-digit/9-digit precision format  This PR updated the double/float-to-string conversion in PowerShell to continue using the old precision specifier before the change in  NET Core 3 0   
18319,     Import-DscResource should allow to overwrite DSC built-in resources  (#9879)\n\n  
18320,     Build(deps): Bump PackageManagement from 1 4 1 to 1 4 2 in /src/Modules (#9918)\n\n  
18321,     Build(deps): Bump PackageManagement from 1 4 to 1 4 1 in /src/Modules (#9820)\n\nBumps PackageManagement from 1 4 to 1 4 1   
18322,     Use yarn to install global tools (#9904)\n\n  
18323,     Update to use TSAv2 (#9914)\n\n  
18324,     Fix unix project mappings (#9892)\n\n  
18325,     Attempt to work around the zip download issue in Azure DevOps Windows CI (#9911)\n\n  
18326,     Make `UseAbbreviationExpansion` and `TempDrive` official features (#9872)\n\n  
18327,     Build(deps): Bump NJsonSchema from 10 0 18 to 10 0 19 (#9885)\n\n  
18328,     Add module to support Pester tests for automating debugger commands (stepInto  stepOut  etc )  along with basic tests (#9825)\n\n  
18329,     Build(deps): Bump NJsonSchema from 10 0 17 to 10 0 18 (#9875)\n\n  
18330,     Add launchSettings json for better out of box experience when using Visual Studio (#9818)\n\n  
18331,     Build(deps): Bump NJsonSchema from 10 0 15 to 10 0 17 (#9862)\n\n  
18332,     Add ability to pass `InitialSessionState` to the `ConsoleShell Start` (#9802)\n\n  
18333,     Have console host not enter command prompt mode when using `Read-Host -Prompt` (#9743)\n\n`Read-Host` calls into `$Host UI Prompt()`   However  this method is also used when the host prompts for mandatory parameters that aren t provided   The method expects to be called when given a `FieldDescription` and if the input starts with `!` it enters `CommandPromptMode`   In this mode  you can type `!?` to request help  for example   However this mode is not something you can use via `Read-Host` (only if calling `$Host UI Prompt()` directly passing in a well constructed `FieldDescription`)   When using `Read-Host -Prompt`  the cmdlet creates a `FieldDescription` where the name is the prompt and the rest of the properties are empty \r\n\r\nThe fix is that if `Label` is empty  we can assume it s being called from `Read-Host` rather than being called to prompt for a mandatory parameter and thus not enter `CommandPromptMode`   
18334,     Build(deps): Bump NJsonSchema from 10 0 14 to 10 0 15 (#9854)\n\n  
18335,     Support DSC compilation on Linux  (#9834)\n\n  
18336,     Fix minor style issues come from last commits (#9640)\n\n  
18337,     Build(deps): Bump NJsonSchema from 10 0 13 to 10 0 14 (#9843)\n\n  
18338,     Improve whitespace for Parser tests (#9806)\n\n  
18339,     Fix use of `Start-Process    com` (#9793)\n\n  
18340,     Support negative numbers in `-split` operator (#8960)\n\n  
18341,     Build(deps): Bump NJsonSchema from 9 14 1 to 10 0 13 (#9805)\n\n  
18342,     Use new string ConCat() in Process cs (#9720)\n\n  
18343,     Build(deps): Bump System Net Http WinHttpHandler from 4 5 3 to 4 5 4 (#9786)\n\n  
18344,     Disable stale bot in favor of an internal bot that we can customize more (#9785)\n\n  
18345,     Build(deps): Bump Microsoft ApplicationInsights from 2 9 1 to 2 10 0 (#9757)\n\n  
18346,     Fix `Get-ChildItem -Path` with wildcard char (#9257)\n\nUnescape non-literal  non-glob path before existence checking   
18347,     Code Cleanup: Tidy up scriptblock cs (#9732)\n\n  
18348,     Increase timeout of NuGet job to workaround build timeout (#9772)\n\n  
18349,     Update README and metadata json for 7 0 0-preview 1 release (#9767)\n\n  
18350,     Merge branch  release/v7 0 0-preview 1  into master\n  
18351,     Merged PR 8542: changelog draft\n\nchangelog draft\n  
18352,     Merged PR 8547: Fix the PowerShell version number in MSI packages\n\nFix the PowerShell version number in MSI packages\n  
18353,     Change log 6 1 4 (#9759)\n\n* Update change log for 6 1 4\r\n\r\nUpdate change log for 6 1 4\r\n\r\n* Resolve conflicts\r\n  
18354,     Change log for release 6 2 1 (#9760)\n\nChangelog for 6 2 1 and fix spellings  
18355,     Merged PR 8529: Add cleanup before building test package\n\nAdd cleanup before building test package\n  
18356,     Update the target framework for reference assemblies to netcoreapp3 0 (#9747)\n\nUpdate the target framework for reference assemblies to netcoreapp3 0  
18357,     Pin version of netDumbster to 2 0 0 4 (#9748)\n\n  
18358,     Merged PR 8512: Update version for SDK tests and Microsoft PowerShell Native package\n\nUpdate version for SDK tests and Microsoft PowerShell Native package\n  
18359,     Merged PR 8510: Update the target framework for reference assemblies to netcoreapp3 0\n\nUpdate the target framework for reference assemblies to netcoreapp3 0\n  
18360,     Fix daily `CodeCoverageAndTest` build by explicitly calling `Start-PSBootStrap` (#9724)\n\n  
18361,     Merged PR 8504: Fix syncing modules from powershell gallery by normalizing version numbers\n\nFix syncing modules from powershell gallery by normalizing version numbers and added additional logging \n  
18362,     Run Start-PSBootStrap in Code Coverage build to install  NET SDK (#9690)\n\n  
18363,     Build(deps): Bump PowerShellGet from 2 1 3 to 2 1 4 in /src/Modules (#9691)\n\n  
18364,     Disable the debugger when in system lock-down mode (#9645)\n\nDisable the debugger when in system lock-down mode\r\n\r\nFixing master for CVE-2019-0733  
18365,     Build(deps): Bump Microsoft CodeAnalysis CSharp from 3 0 0 to 3 1 0 (#9653)\n\n  
18366,     Update vNext release branches in dependabot config (#9658)\n\n  
18367,     Build(deps): Bump PackageManagement from 1 3 2 to 1 4 in /src/Modules (#9650)\n\n* Build(deps): Bump PackageManagement from 1 3 2 to 1 4 in /src/Modules\r\n\r\nBumps PackageManagement from 1 3 2 to 1 4 \r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18368,     Update version tests to use NextReleaseVersion from metadata json (#9646)\n\n  
18369,     Update README and metadata json (#9624)\n\n  
18370,     Attributes cs - Style / Formatting Fixes (#9625)\n\n  
18371,     Port PowerShell to  NET Core 3 0 (#9597)\n\n  
18372,     Remove Workflow from PSSessionType (#9618)\n\nRemove PSSessionType and IsWorkflowConfigurationType()\r\n  
18373,     Make sure we always return an object in command searcher (#9623)\n\n  
18374,     Add checkbox to PR checklist for experimental feature use (#9619)\n\n  
18375,     Switch from BMP to PNG for graphical MSI installer assets (#9606)\n\nThis breaks rendering of images for Windows 7 and Server 2008R2 \r\nbut it s required for accessibility purposes so that the High\r\nContrast Black theme renders text correctly for accessibility \r\n(Unfortunately  BMP does not support transparency )  
18376,     Convert windows CI to stages (#9607)\n\n  
18377,     Build(deps): Bump NJsonSchema from 9 13 37 to 9 14 1 (#9616)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 37 to 9 14 1 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18378,     Build(deps): Bump Microsoft Windows Compatibility from 2 0 1 to 2 1 1 (#9605)\n\n  
18379,     Build(deps): Bump PowerShellGet from 2 1 2 to 2 1 3 in /src/Modules (#9600)\n\n  
18380,     Build(deps): Bump System Data SqlClient from 4 6 0 to 4 6 1 (#9601)\n\n  
18381,     Updating committee membership (#9577)\n\n  
18382,     Fix use of unicode ellipsis in xml (#9589)\n\n  
18383,     Support line continuance with pipe at the start of a line (#8938)\n\nExpands line continuance for pipelines to allow lines to continue automatically without backticks with the pipe symbol at the start of a line \r\nThis adds to the existing functionality where pipes can be used to continue lines by placing them at the end of a line   
18384,     Build(deps): Bump Microsoft PowerShell Archive from 1 2 2 0 to 1 2 3 0 in /src/Modules (#9593)\n\n  
18385,     Build(deps): Bump PSReadLine from 2 0 0-beta3 to 2 0 0-beta4 in /src/Modules (#9554)\n\n  
18386,     Build(deps): Bump Markdig Signed from 0 16 0 to 0 17 0 (#9579)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 16 0 to 0 17 0 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/v0 16 0   0 17 0)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18387,     Update use of  PowerShell Core  to just  PowerShell  (#9513)\n\n  
18388,     Multiple test fixes and improved logging for fragile tests (#9569)\n\n  
18389,     Build(deps): Bump gulp from 4 0 1 to 4 0 2 in /test/common/markdown (#9544)\n\n  
18390,     Build(deps): Bump PackageManagement from 1 3 1 to 1 3 2 in /src/Modules (#9567)\n\nBumps PackageManagement from 1 3 1 to 1 3 2 \r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18391,     Use IPGlobalProperties on all platforms for getting host name (#9530)\n\n  
18392,     Improve error message in FileSystemProvider (#9551)\n\n  
18393,     Remove `IsSymLink()` P/Invoke on Unix (#9534)\n\n  
18394,     Add support for ValidateRangeKind to ParameterMetadata GetProxyAttributeData (#9059)\n\n  
18395,     Merge pull request #9528 from SteveL-MSFT/login-shell\n\nAdd support for `-l` to pwsh so that it is compatible with POSIX shell expectations  
18396,     Update CODEOWNERS file to reduce noise (#9547)\n\n  
18397,     Cleanup unused pinvokes on unix (#9531)\n\n* Remove TemporaryDirectory()\r\n* Remove GetUserName()\r\n* Use Environment UserName on Unix\r\n* Remove old comment\r\n* Use Environment UserName on Windows too\r\n  
18398,     Enable recursion into OneDrive (#9509)\n\n  
18399,     Change MatchType for EnumerationOptions to be Win32 (#9529)\n\n  
18400,     Add Support for Null Usernames in Web Cmdlet Basic Auth (#9536)\n\n  
18401,     Update src/Microsoft PowerShell ConsoleHost/resources/ManagedEntranceStrings resx\n\nCo-Authored-By: SteveL-MSFT <slee@microsoft com>  
18402,     allow test to work in cases where you can t create $profile\n  
18403,     correctly delete $profile in all cases\n  
18404,     fix creation of profile\n  
18405,      Fix null reference when `Microsoft PowerShell Utility` is loaded as a `snapin` in hosting scenarios (#9404)\n\n  
18406,     change -l to explicitly load user profile\n  
18407,     update console help\n  
18408,     add test\n  
18409,     Add `-l` support for pwsh to match POSIX shell compatibility\n  
18410,     Update use of `Windows PowerShell` to just `PowerShell` (#9508)\n\n  
18411,     Build(deps): Bump NJsonSchema from 9 13 36 to 9 13 37 (#9523)\n\n  
18412,     add download link to raspbian64 to readme (#9520)\n\n  
18413,     Add unit and feature tests for Send-MailMessage (#9213)\n\n  
18414,     Update to Pester 4 8 0 (#9510)\n\n  
18415,     Update width of datetime to accommodate change in Japan datetime format with new era starting 5/1/19 (#9503)\n\n  
18416,     Ensure Wait-UntilTrue returns $true in Pester tests (#9458)\n\n  
18417,     Fix Get-Runspace runspace object format Type column (#9438)\n\n  
18418,     Update Support_Question md (#9218)\n\n  
18419,     Cleanup: sort usings (#9490)\n\n  
18420,     Cleanup Export-Command from assemblyinfo (#9455)\n\n  
18421,     Allow passing just a dash as an arg to a file via pwsh (#9479)\n\n  
18422,     Update Release_Process md\n\nAdd item for global tool  
18423,     Build(deps): Bump NJsonSchema from 9 13 35 to 9 13 36 (#9478)\n\n  
18424,     Build test packages for windows  linux-x64  linux-arm  linux-arm64 and macOS (#9476)\n\n  
18425,     Enable building on Kali Linux (#9471)\n\n  
18426,     Fix the failed test and update  Publish-TestResults  to make AzDO fail the task when any tests failed (#9457)\n\n  
18427,     Run Codeformatter for SMA (#9402)\n\n  
18428,     Return correct casing of filesystem path during normalization (#9250)\n\n* return correct casing of filesystem path during normalization\r\n\r\n* handle UNC case\r\n\r\n* handle case to add trailing separator back\r\n\r\n* add support for NTFS streams syntax\r\n\r\n* add case-sensitive test\r\n\r\n* only apply correct casing to directories\r\n\r\n* handle 8 3 path syntax\r\n\r\n* fix short path processing\r\n  
18429,     Move warning message to EndProcessing so it only shows up once (#9385)\n\n  
18430,     Build(deps): Bump gulp from 4 0 0 to 4 0 1 in /test/common/markdown (#9441)\n\n  
18431,     Adding tests for `Remove-Module` (#9276)\n\n  
18432,     Add Preview assets for msix (#9375)\n\n  
18433,     Build(deps): Bump Newtonsoft Json from 12 0 1 to 12 0 2 (#9434)\n\nBumps [Newtonsoft Json (   com/JamesNK/Newtonsoft Json) from 12 0 1 to 12 0 2 \r\n- [Release notes (   com/JamesNK/Newtonsoft Json/releases)\r\n- [Commits (   com/JamesNK/Newtonsoft Json/compare/12 0 1   12 0 2)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18434,     Build(deps): Bump Newtonsoft Json (#9431)\n\nBumps [Newtonsoft Json (   com/JamesNK/Newtonsoft Json) from 12 0 1 to 12 0 2 \r\n- [Release notes (   com/JamesNK/Newtonsoft Json/releases)\r\n- [Commits (   com/JamesNK/Newtonsoft Json/compare/12 0 1   12 0 2)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18435,     Build(deps): Bump NJsonSchema from 9 13 34 to 9 13 35 (#9429)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 34 to 9 13 35 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18436,     Build(deps): Bump NJsonSchema from 9 13 30 to 9 13 34 (#9421)\n\n  
18437,     Run CodeFormatter with BraceNewLine UsingLocation FormatDocument NewLineAbove rules (#9393)\n\n  
18438,     Allow CI to run on branches with this name pattern: feature* (#9415)\n\n  
18439,     Run CodeFormatter for WSMan Management (#9400)\n\n  
18440,     Run CodeFormatter for WSMan Runtime (#9401)\n\n  
18441,     Run CodeFormatter for Security module (#9399)\n\n  
18442,     Run CodeFormatter for MarkdownRender (#9398)\n\n  
18443,     Run CodeFormatter for Eventing (#9394)\n\n  
18444,     Use `Environment NewLine` for new lines in `ConsoleHost` code (#9392)\n\n  
18445,     Remove elements which do not work on earlier version on Windows PowerShell (#9411)\n\n  
18446,     Fix the platform check in `CimDSCParser cs` (#9338)\n\n  
18447,     Convert custom attribute ValidatePathNotInSettings to function (#9406)\n\n  
18448,     Add wildcard back to end of tab completion command lookup (#9383)\n\nRe-add wildcard when searching AST + Missed test case \r\n\r\n## PR Context\r\n\r\nIn #8109  we removed the line that added a wildcard to the end of the command that was used to match commands in the script AST  This readds that line closer to where it is used   
18449,     Run CodeFormatter for Diagnostics module (#9378)\n\n  
18450,     Run CodeFormatter for Microsoft PowerShell Commands Management (#9377)\n\n  
18451,     Build(deps): Bump NJsonSchema from 9 13 29 to 9 13 30 (#9388)\n\n  
18452,     Reduce string allocation in console output code (#6882)\n\n  
18453,     Run CodeFormatter for Utility module (#9376)\n\n  
18454,     Create codecoverage and test packages for non-windows (#9373)\n\nRefactor the `ci psm1` to publish the code coverage and test packages \r\nAllow `CodeCoverage` configuration on non-windows \r\n\r\n## PR Context\r\n\r\nWe plan to run code coverage on Windows  Linux and macOS  These changes are needed to unblock those runs   
18455,     Add ability to cross compile (#9374)\n\n`-CrossGen` won`t work  but this gives basic ability to build for another platform \r\nThis also means you cannot really package for another platform \r\n  
18456,     Enable building of msix package (#9289)\n\nAdd support in packaging psm1 to produce a  msix AppX package   Update the docker image to use the new msix package type   Update the associated yml files so AzDevOps performs the build \r\n\r\n## PR Context\r\n\r\nEnable publishing PSCore6 to Microsoft Store  
18457,     Create dependabot config yml (#9368)\n\nCreate dependabot config yml\r\n  
18458,     New `New-PSBreakpoint` cmdlet  & new `-Breakpoint` parameter for `Debug-Runspace` (#8923)\n\nThis PR does 4 things:\r\n\r\n* Adds a new cmdlet `New-PSBreakpoint` which creates new `Breakpoint` objects and writes them to the pipeline\r\n* Adds a `-Breakpoint` parameter to `Debug-Runspace` which will receive `Breakpoint` objects\r\n* Makes the constructors for `*Breakpoint` public for use with the API\r\n* Makes `Debugger GetBreakpoint(string id)` and `Debugger GetBreakpoints()` public since `SetBreakpoints` is public\r\n\r\nNote: `New-PSBreakpoint` and `Set-PSBreakpoint` (which already exists) are similar    but `Set-PSBreakpoint` also sets the breakpoints in the _current_ runspace  This is not ideal if we want to set breakpoints in a _different runspace than the current one_ \r\n\r\n## PR Context  \r\n\r\nThe  Attach to process  debugging experience in the PowerShell extension for VSCode is _ok_ but it\ s not great \r\n\r\nThe reason it\ s not great is due to the `BreakAll` feature of PowerShell debugging which  when you run `Debug-Runspace`  will break at the first piece of code that gets run  This is not ideal when you  Attach to process  _and then_ run your code in the other runspace \r\n\r\nToday  the experience drops you in `PSReadLine`\ s psm1 if PSRL is available or in the vscode PowerShell helper psm1 \r\n\r\nIt\ s unexpected for the user and not ideal \r\n\r\nThis PR will allow the extension to pass in the breakpoints that need to be set initially with `BreakAll` turned off for none of this silly behavior \r\n\r\n### Silly behavior example\r\n\r\nIf you want a repro  try this:\r\n\r\nPowerShell instance 1:\r\n```\r\nEnter-PSHostProcess -Id $otherprocesspid\r\nDebug-Runspace 1\r\n```\r\n\r\nPowerShell instance 2:\r\n```\r\n /runfoo ps1\r\n```\r\n\r\nNote that you end up NOT `runfoo ps1`\r\n  
18459,     Style: Match file name casings of C# source files for Utility commands (#9329)\n\nRenames C# source files for `Microsoft Powershell Commands Utility` to follow a common file name casing scheme \r\n\r\n## PR Context\r\n\r\nThis PR is only a style change and doesn t affect any logic   
18460,     Create test package for macOS on release builds (#9344)\n\n\r\n\r\n  
18461,     Make CodeCoverage configuration build portable PDBs (#9346)\n\n\r\n  
18462,     Add AcessToken variable to jobs that perform signing (#9351)\n\n\r\n\r\n  
18463,     Build(deps): Bump NJsonSchema from 9 13 28 to 9 13 29 (#9349)\n\n  
18464,     Mark tests in macOS CI which use applescript as pending/inconclusive (#9352)\n\nMark tests in macOS CI which use applescript as pending/inconclusive\r\n  
18465,     Reduce time for stack overflow test (#9302)\n\nCreate a small class to do the work \r\nI saw 100x performance improvement in this test \r\n\r\n\r\n  
18466,     Added more tests for import-alias by file regarding parsing difficult aliases strings (#9247)\n\n  
18467,     Fix version of PowerShellGet in changelog (#9335)\n\nFix version of PowerShellGet in changelog\r\n  
18468,     Fix help paging issues on macOS/Linux and with custom pager that takes arguments (#9033)\n\n* Pipe help system output through Out-String -Width when not using more\r\n\r\nThis fixes #7175 by using Out-String to properly wrap text before\r\nsending to less or the user specified PAGER \r\n\r\n* Set the string output width when sending help to pager app\r\n\r\nFix #7175\r\n\r\n* Fix #8912 by using PS tokenize to get custom pager cmd & args\r\n\r\n* Fix macOS/Linux test failures\r\n\r\n* It appears that while running in tests  ConsoleWidth is 0  set min val\r\n\r\n* Address PR feedback\r\n\r\n\r\n  
18469,     Move from npm to Yarn for markdown tests (#9312)\n\nYarn is better because   \r\n* it validates package checksums\r\n* it has emojis 🤟\r\n* it is faster and employs better caching\r\n  
18470,     Build(deps): Bump System Net Http WinHttpHandler from 4 5 2 to 4 5 3 (#9333)\n\n  
18471,     Update repo for Ubuntu 14 04 EOL (#9324)\n\nUpdate repo for Ubuntu 14 04 EOL\r\n  - also remove a missed instance of Fedora 27\r\n  
18472,     Cleanup: sort usings (#9283)\n\n  
18473,     Add CI for `install-powershell sh` and amazon linux (#9314)\n\n\r\n\r\n  
18474,     Fixing test run crash by not passing script block to the callback (#9298)\n\n  
18475,     Only search for functions in Constrained Language help tests (#9301)\n\nOnly search for functions in Constrained Language help tests\r\n\r\n## PR Context\r\n\r\nSearching for only functions is faster\r\n  
18476,     Preserve user shortcuts pinned to Taskbar during MSI upgrade (#9305)\n\nFixes #8919 \r\n\r\nPreserve user shortcuts pinned to Taskbar during MSI upgrade by not removing shortcuts in this case (assuming the user has not changed the installation directory)  see    com/a/33402698/1810304\r\nThis also requires the Guid to not always be re-generated  which PR #7701 originally added to ensure shortcuts get removed when RTM and preview are installed  the underlying problem was rather that RTM and preview shared the same GUIDs  therefore the GUIDs are hard-coded again but different for RTM and preview  therefore the shortcuts will still always get removed on uninstall  But this also means those GUIDs should change when the default installation directory changes  i e  in PowerShell 7  Should we write the code to already take this into account that it does not get forgotten?\r\n\r\nTested by first reproducing the issue by building installers locally (and bumping the patch version  Then the fix was applied to verify the solution  it  For this to take effect the version from which an MSI is being upgraded must have this fix already  i e  if this fix got shipped in `6 2 1`  then on upgrading to it  the issue would still occur but when upgrading `6 2 1` to `6 2 2` the shortcut would start being preserved  I am wondering if we could maybe improve this to show effect earlier by trying to extract the used (auto-generated) GUIDs in the `6 2 0` and `6 2 0-rc` packages out and use them   \r\nPlease not that we probably need to take this out for `7 0` because the base installation directory will change  This also assumes that the user has not specified a different installation directory on upgrade but this is a bit of an edge case where I think other things might break as well \r\n  
18477,     Fix skipping of tests in RemoteSession Basic Tests ps1 (#9304)\n\nMoved check if able to write to $PSHome as way to skip test to `BeforeAll` which already contained a check if running on Windows \r\n\r\n## PR Context\r\n\r\nAs part    com/PowerShell/PowerShell/pull/9279  tests were updated to be skipped if the test requires writing to `$PSHome` but is not able to   However  these tests already had a skip mechanism in place so the additional check caused the test to run when it should have skipped \r\n\r\nCo-authored-by: Travis Plunk <github@ez13 net>  
18478,     Make sure non-Windows CI fails when a test fails (#9303)\n\nMake sure non-Windows CI fails when a test fails\r\n\r\n## PR Context\r\n\r\nWe discovered that some tests were failing after a PR and the CI was not failing\r\n  
18479,     Fix stylecop hungarian (#9281)\n\nAdd very popular  is  and  _is  prefixes \r\n  
18480,     Add QuoteFields parameter to ConvertTo-Csv and Export-Csv (#9132)\n\n  
18481,     Add more users to failures detection and fix alias for static analysis (#9292)\n\n  
18482,     Update tests to account for when $PSHOME is readonly (#9279)\n\n\r\n\r\nCo-Authored-By: SteveL-MSFT <slee@microsoft com>\r\n\r\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
18483,     Fixing progress for Get-ComputerInfo (#9236)\n\n  
18484,     Remove duplicate Policheck task and pin to specific version (#9297)\n\n  
18485,     Add Binary Parsing Support & Refactor TryGetNumberValue & ScanNumberHelper (#7993)\n\nFixes #7557 \r\n\r\n* Adds support for binary parsing in format echoing hex: `0b11010110`\r\n  * Works with all existing type suffixes and multipliers \r\n  * Supports arbitrary length parsing with `n` suffix using BigInteger; details below \r\n* Adds `NumberFormat` enum to specify hex/binary/base 10 for the tokenizer  replacing old `bool hex` \r\n* Adds `n` suffix for all numeric literals to support returning value as a `BigInteger` if requested  This bypasses the issue of large literals losing accuracy when they cast through `double` \r\n* Adds tests for all new behaviours \r\n\r\n---\r\n\r\n### Binary / Hex Parsing Implementation\r\n\r\n* Mimics old sign bit behaviour for int and long types  Sign bits accepted for 8 or 16-bit Hex parsing  and 8  16  32  64 for binary \r\n  * i e   `0xFFFFFFFF -eq ([int -1)` and `0xFFFFFFFFFFFFFFFF -eq ([long -1)`  but suffixing `u` creates `int MaxValue` and `long MaxValue`  respectively  instead \r\n* Sign bits higher than this are accepted for bigint-suffixed numerals:\r\n    * Hex: Bigint-suffixed hex treats the high bit of any literal with a length multiple of 8 as the sign bit\r\n    * Binary: Bigint-suffixed binary accepts sign bits at 96 and 128 chars  and from there on every 8 characters \r\n    * Prefixing the literal with a 0 will bypass this and be treated as unsigned  e g  `0b011111111`\r\n* Specifying an `u`nsigned suffix (or combination suffix that includes `u`) ignores sign bits  similar to how parsing a hex string using `[Convert ::ToUint32()` would do so \r\n* Supports negating literals using `-` prefix  This can result in positive numbers due to sign bits being permitted  just like hex literals \r\n\r\n---\r\n\r\n### Refactored numeric tokenizer parsing\r\n\r\n**New flow:**\r\n\r\n1  Check for `real` (` 01`  `0 0`  or `0e0` syntaxes)\r\n    1  If the decimal suffix is present  TryParse directly into decimal  If the TryParse fails  TryGetNumberValue returns `false` \r\n    2  TryParse as `Double`  and apply multiplier to value  If the TryParse fails  TryGetNumberValue returns `false` \r\n        1  Check type suffixes and attempt to cast into appropriate type  This will return `false` if the value exceeds the specified type s bounds \r\n        2  Default to parsing as `double` where no suffix has been applied \r\n2  Check number format \r\n    * If binary  manually parse into BigInteger using optimized helper function to directly construct the BigInteger bytes from the string \r\n    * If hex  TryParse into `BigInteger` using some special casing to retain original behaviours in int/long ranges \r\n    * If neither binary nor hex  TryParse normally as a `BigInteger` \r\n3  Apply multiplier value before attempting any casts to ensure type bounds can be appropriately checked without overflows \r\n4  Check type suffixes \r\n    * If a specific type suffix is used  check type bounds and attempt to parse into that type \r\n      * If the value exceeds the type s available values  the parse fails  Otherwise  a straight cast is performed \r\n5  If no suffix is used  the following types are bounds-checked  in order  resulting in the first successful test determining the type of the number  \r\n    * `int`\r\n    * `long`\r\n    * `decimal` (base-10 literals only)\r\n    * `double` (base-10 literals only)\r\n    * ~~`BigInteger` for binary or hex literals ~~ If the value is outside `long` range (for hex and binary) or `double` range (for base 10)  the parse will fail; higher values must be explicitly requested using the `n`/`N` BigInteger suffix \r\n\r\n---\r\n\r\n*This is a breaking change* as binary literals are now read as numbers instead of generic tokens which could potentially have been used as function / cmdlet names or file names \r\n\r\nNotes:\r\n* Binary literal support was approved by the committee in #7557 \r\n* ~~The same issue is still under further discussion for underscore support in numeric literals and whether BigInteger parsing ought to be exposed to the user at all ~~\r\n    * ~~Supporting underscore literals is a further breaking change causing some generic tokens like `1_000_000` to be read as numerals instead ~~ Per @SteveL-MSFT s [comment (   com/PowerShell/PowerShell/pull/7993#issuecomment-442651543) this proposal was rejected \r\n    * ~~Removing underscore support or preventing standard parsing from accepting BigInteger ranges is a relatively trivial matter  It is my personal opinion that there is no particular reason *not* to hand the user a BigInteger when they enter a sufficiently large literal  but I will defer to the PowerShell Committee s judgement on this ~~\r\n\r\n  
18486,     Publish windows daily build to MyGet (#9288)\n\n  
18487,     Style: Update StyleCop rules (#8500)\n\n\r\n  
18488,     Build(deps): Bump Microsoft CodeAnalysis CSharp from 2 10 0 to 3 0 0 (#9277)\n\n  
18489,     Fix build order in windows-daily build (#9275)\n\nThe windows-daily build had a bug which caused the packaging builds to be kicked off before tests  This PR fixes the build order \r\n\r\n## PR Context\r\n\r\nFix for failing daily build   
18490,     Fix variable name in windows-daily yml (#9274)\n\n  
18491,     Move artifacts to artifact staging directory before uploading (#9273)\n\n  
18492,     Make command searcher not use wildcard search for execution (#9202)\n\n  
18493,     Make `install-powershell ps1` work on Windows Server 2012 R2 (#9271)\n\n\r\n\r\n  
18494,     Add `ItemSeparator` and `AltItemSeparator` properties in `ProviderInfo` (#8587)\n\nAdd two properties in `ProviderInfo` class: `ItemSeparator` and `AltItemSeparator` \r\nOn windows  the default values for those two properties are `ItemSeparator =  \\ ` and `AltItemSeparator =  / ` \r\nOn unix  the default values for those two properties are `ItemSeparator =  / ` and `AltItemSeparator =  \\ ` \r\n\r\nRegistry provider is the only exception  both properties for it have the value `\\`   
18495,     Fix publishing daily nupkg to MyGet (#9269)\n\n  
18496,     Check to be sure that the test result file has actual results before uploading (#9253)\n\nVSTS produces a warning if the result set is 0  we will skip uploading this to avoid the warning and better support automation scenarios \r\n\r\n## PR Context\r\n\r\nWe have automation which checks our test results and if the result set is 0 for that file  a warning is produced  This PR will avoid uploading that file into the test results (which is valid  as there are no run tests)  We will still add the file to our artifact list for completeness \r\n  
18497,     Add timestamp to pshost trace listener (#9230)\n\nStatic analysis CI was executed separately    
18498,     fix short path processing\n  
18499,     handle 8 3 path syntax\n  
18500,     Build(deps): Bump NJsonSchema from 9 13 27 to 9 13 28 (#9265)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 27 to 9 13 28 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18501,     only apply correct casing to directories\n  
18502,     Update release process template to clarify that most tasks are coordinated by the release pipeline (#9238)\n\n\r\nCo-authored-by: Reece Dunham <me@rdil rocks>  
18503,     Add secret scanning to CI (#9249)\n\nAdd secret scanning to CI\r\n\r\n## PR Context\r\n\r\nThis should prevent us from having any secrets in our history  
18504,     add case-sensitive test\n  
18505,     add support for NTFS streams syntax\n  
18506,     handle case to add trailing separator back\n  
18507,     handle UNC case\n  
18508,     Fix several problems in WritingPesterTests guideline (#9078)\n\n  
18509,     Fix Get-Module -FullyQualifiedName option to work with paths (#9101)\n\n  
18510,     Add component detection to all jobs (#8964)\n\nAdd component detection to all jobs \r\n  
18511,     return correct casing of filesystem path during normalization\n  
18512,     Update ChangeLog for 6 2 0 (#9245)\n\nUpdate the change log for 6 2 0 in master\r\n\r\n  
18513,     Update docs for v6 2 0 (#9229)\n\n\r\n\r\n  
18514,     Remove code from `CI psm1` to optionally run Feature tests (#9212)\n\n  
18515,     Enable PoshChan for getting and automatic retrieval of test failures for a PR (#9232)\n\nEnable new capability to ask for test failures and have PoshChan automatically get (up to 10) test failures for a PullRequest if CI fails \r\n  
18516,     Enhance the P/Invoke code for `LookupAccountSid` in `Process cs`  (#9197)\n\n  
18517,     Fix coding style for NewModuleManifestCommand (#9134)\n\n  
18518,     Implement Get-Random -Count without specifying an InputObject list (#9111)\n\n  
18519,     Remove unused method `CredUIPromptForCredential` from `HostUtilities cs` (#9220)\n\n  
18520,     Clean up static analysis config (#9113)\n\n  
18521,     Remove non-existent paths from ` csproj` files (#9214)\n\n  
18522,     Add psremoting enable/disable cmdlet warning messages (#9203)\n\nAdds warning messages to the Enable-PSRemoting and Disable-PSRemoting cmdlets that informs the user that the cmdlets only affect PSCore6 remoting endpoint configurations and not Windows PowerShell configurations \r\n\r\nPR Context\r\nAs documented  Enable-PSRemoting and Disable-PSRemoting affects all PowerShell remoting on a Windows system  and Windows users will likely expect the cmdlets to continue working this way in PSCore6  However  these cmdlets currently affect only PSCore6 remoting endpoints when run in PSCore6 and have no effect on Windows remoting endpoints   
18523,     Typo in new parameter set (#9205)\n\n  
18524,     Minor FileSystemProvider cleanup (#9182)\n\n  
18525,     Make Linux CI parallel (#9209)\n\nMake the Linux CI build once and then run the tests on 4 different machines  by tag \r\n\r\n## PR Context\r\n\r\nRunning in parallel allows us to run all tests in about the same amount of clock time  
18526,     Fix capitalization cases for PoshChan (#9188)\n\n\r\nThe jobs name is fully lowercase\r\n  
18527,     Enable `SecureString` cmdlets for non-Windows (#9199)\n\n\r\nOn Unix systems  fallback to plaintext manipulation instead of using the DPAPI which is not available \r\n\r\n## PR Context\r\n\r\nCurrently  existing scripts that use SecureString cmdlets fail with an error complaining about crypt32 dll not being available   This change allows these cmdlets to be used  but there is no encryption of the string \r\n Net already [states (   microsoft com/en-us/dotnet/api/system security securestring?view=netcore-2 1#remarks) that the contents of a SecureString are not encrypted on  Net Core \r\n\r\nFix    com/PowerShell/PowerShell/issues/1654\r\n\r\nCo-authored-by: Travis Plunk <travis plunk@microsoft com>  
18528,     Cleanup style issues in CoreAdapter and MshObject (#9190)\n\n  
18529,     Minor cleanups in Process cs (#9195)\n\n* Use string Join\r\n* Use char const\r\n  
18530,     Build(deps): Bump Microsoft PowerShell Native from 6 2 0-rc 1 to 6 2 0 (#9200)\n\n  
18531,     Add Obsolete message to Send-MailMessage (#9178)\n\nAdd Obsolete message to Send-MailMessage\r\n\r\n## PR Context\r\n\r\nSee    com/PowerShell/PowerShell-RFC/pull/160\r\n\r\nCo-authored-by: Steve Lee <slee@microsoft com>\r\nCo-authored-by: Ilya <darpa@yandex ru>  
18532,     Update feature-request issue template to move instructions into comments  (#9187)\n\nMoved instructions into comments \r\n\r\n## PR Context\r\n\r\nWhile users should _see_ instructions  they shouldn t be _included_ when the issue is created \r\n  
18533,     Update to new format for PoshChan settings and allow all users access to reminders (#9198)\n\n\r\nPoshChan has been updated to use a new settings format so that authorized users are per action vs being global  \r\n\r\n## PR Context\r\n\r\nSince reminders don t incur much of a resource hit for PoshChan  there s no reason not to allow everyone to use it   See    com/SteveL-MSFT/PoshChan-Bot for use instructions \r\n  
18534,     Refactor ReadConsole P/Invoke in ConsoleHost (#9165)\n\nReplace `StringBuilder` with stack allocated `Span<char>` to avoid extra allocation/copies during P/Invoke  
18535,     Build(deps): Bump NJsonSchema from 9 13 26 to 9 13 27 (#9196)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 26 to 9 13 27 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18536,     Add tests for command globbing (#9180)\n\nAdd tests for command globbing\r\n  - Also  add `-noprofile` to places where `pwsh` is launched so they don t fail locally \r\n  
18537,     Performance improvements for release build (#9179)\n\nThis PR optimizes the download tasks to reduce build times  After the change we see a order of magnitude reduction in download times for Windows package signing and also the compliance tasks \r\n\r\nIn addition to that the PR also makes changes to organize the build artifacts in folders \r\n  
18538,     Use IL assemblies for NuGet packages to reduce size (#9171)\n\n  
18539,     Build(deps): Bump NJsonSchema from 9 13 25 to 9 13 26 (#9184)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 25 to 9 13 26 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18540,     Add xsd for cdxml (#9177)\n\n\r\n  
18541,     Improve formatting performance by having better primitives on `PSObject` (#8785)\n\nBy not doing excessive amounts of extra work  formatting can be sped up quite significantly (about 8x faster) \r\nThe main change comes from adding new  more efficient  primitive to query an object for the existence of an instance member \r\nThe formatting system has been checking for if an object has properties other than some decorated properties added by PS remoting  and it doesn t this by retrieving all properties which results in heavy allocations and wasted cycles \r\nBy adding `GetFirstOrDefault` to `PSObject` and similar primitives to the underlying Adapters  we are able to return early  without having to get all properties back   
18542,     Add `tsaVersion` property as `TsaV1` for compliance build phase (#9176)\n\n\r\n\r\nAdd the tsaVersion property with values as TsaV1 as it defaults to v2 instead  We explicitly need v1 \r\n\r\n  
18543,     Publish global tool packages to `pwshtool` blob and bug fixes (#9163)\n\n  
18544,     Translate Skipped  the test results into something Azure DevOps does NOT understand (#9124)\n\n  
18545,     Build(deps): Bump NJsonSchema from 9 13 24 to 9 13 25 (#9172)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 24 to 9 13 25 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18546,     Fix `Restart-Computer` to work on localhost when WinRM is not present (#9160)\n\n  
18547,     Improve type inference of array literals and foreach statement variables (#8100)\n\nImprove type inference for foreach statement variables by:\r\n\r\nInferring strongly typed arrays from explicit array and array literal expressions when elements are of the same inferred type\r\n\r\nFix detection of foreach variable declaration  The previous logic was to check if the variable expression\ s start offset was after the end offset of the foreach statement  which will never be true in the body\r\n\r\nImprove inference of what type the  Condition  of a foreach statement will enumerate as  
18548,     fix settings to use dashes instead of underscore (#9167)\n\n  
18549,     Fix AzDevOps context names and add all PowerShell team members (#9164)\n\n  
18550,     Build(deps): Bump NJsonSchema from 9 13 23 to 9 13 24 (#9166)\n\n  
18551,     Add settings for PoshChan-Bot (#9162)\n\nMerging without waiting for recommended 24 hours as this is not a PowerShell code change  but a change for the `PoshChan` bot   
18552,     Make `Start-Job` throw terminating exception when `-RunAs32` is specified in 64-bit pwsh (#9143)\n\n  
18553,     Fix for FormatTable remote deserialization regression (#9116)\n\n  
18554,     Adding CmdletsToExport and AliasesToExport to test module manifests  (#9108)\n\n  
18555,     Made -Subject parameter of SendMail command no longer mandatory  (#8961)\n\n  
18556,     Disable Homebrew analytics in macOS VSTS builds (#9130)\n\n  
18557,     Clean up Get-Random cmdlet (#9133)\n\n  
18558,     Build(deps): Bump PowerShellGet from 2 1 0 to 2 1 2 in /src/Modules (#9145)\n\n  
18559,     Build(deps): Bump NJsonSchema from 9 13 22 to 9 13 23 (#9136)\n\n  
18560,     Make  Start-Job  throw terminating error when PowerShell is being hosted (#9128)\n\n  
18561,     Fix to not pass `StringBuilder` by reference (`out` or `ref`) in P/Invoke (#9066)\n\nDon t pass StringBuilder by reference (using out or ref)  Otherwise  the CLR will expect the signature of this argument to be wchar_t ** instead of wchar_t *  and it won t be able to pin StringBuilder s internal buffer  Performance will be significantly degraded   
18562,     Update AppVeyor comments in Implicit Remoting Tests ps1 (#9020)\n\n  
18563,     Make New-ModuleManifest consistent with Update-ModuleManifest (#9104)\n\n  
18564,     Fix -NoEnumerate behaviour in Write-Output (#9069)\n\nFix is to preserve input collection type in output \r\nThe regression was caused by #2038\r\n  
18565,     Add support empty NoteProperty in Group-Object (#9109)\n\n  
18566,     Removing Hardlink from Mode property in default file system format (#8789)\n\n  
18567,     Remove appveyor references from packaging tools (#9117)\n\n\r\nRemoves appveyor stuff\r\n\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n#8686   appveyor removed\r\n  
18568,     Update link to Contributing guide to new PowerShell-Doc repo (#9090)\n\n  
18569,     Remove AppImage from tools (#9100)\n\n  
18570,     README md (#9045)\n\nAdded punctuations wherever necessary   
18571,     Fixed Dockerfile syntax highlighting (#8991)\n\n\r\nThe `f` in Dockerfile is not uppercase  this breaks syntax highlighting for vscode on my client\r\n<!-- Summarize your PR between here and the checklist  -->\r\n\r\n## PR Context\r\n`DockerFile` breaks syntax highlighting as mentioned and described above \r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n  
18572,     Fix dependencies of nuget build to wait on DEB uploads to finish (#9118)\n\nThe NuGet build task should wait on uploads for DEB job to complete \r\n\r\n## PR Context\r\n\r\nThere is a race condition when the build for DEB is completed but the upload has not  If the NuGet build job starts it may not get all the packages needed for building nuget packages \r\n  
18573,     Fix tab completion test to handle multiple matches (#8891)\n\n  
18574,     Delete Docker manifest creation script (#9076)\n\n  
18575,     Build(deps): Bump PowerShellGet from 2 0 4 to 2 1 0 in /src/Modules (#9110)\n\n  
18576,     Refactor macOS CI so that tests run in parallel (#9056)\n\nRefactor macOS CI so that tests run in parallel \r\n  - Also:\r\n    - Fix bootstrap issue where curl was failing for a month (so obviously not needed)\r\n    - Change Windows test stages to use PowerShell Core (where we can) to avoid compat issues\r\n\r\n## PR Context\r\n\r\nThis allows running all tests in about the same about of clock time \r\n\r\n  
18577,     Fixing issue with help progress with `Get-Help` not calling `Completed` (#8788)\n\n  
18578,     Fix Enter-PSHostProcess tests flakiness (#9007)\n\n  
18579,     Using supported syntax for restoring warnings - VS2019 complains about enable  (#9107)\n\n  
18580,     Allow `Test-ModuleManifest` to work when `RootModule` has no file extension (#8687)\n\n  
18581,     Get `MethodInfo` from  NET public type with explicit parameter types (#9029)\n\n  
18582,     Add retry logic to the operation that updates  powershell config json  (#8779)\n\n  
18583,     Use `Type EmptyTypes` and `Array Empty<T>()` to replace our custom code of the same functionality (#9042)\n\n  
18584,     Update markdown test dependencies (#9075)\n\n  
18585,     Fix artifact Download issue in release build (#9095)\n\nFix artifact Download issue in release build\r\n\r\n  
18586,     Update Docker README (#9010)\n\n  
18587,     Make install scripts more consistent over different operating systems (#9071)\n\nI noticed a couple of inconsistencies when reading through the install bash scripts  \r\n\r\n- Make documentation for switches consistent over all files \r\n- Replace all `sed` implementations of `lowercase` with a more maintainable `tr` implementation \r\n- Set the `OS` variable in every install script  making it so previously unused checks are actually used \r\n- Exit with a non-zero exit code when the script reaches an illegal state \r\n\r\n\r\n## PR Context\r\n\r\nA lot of people  including myself  read the install scripts before executing them  While doing so I noticed they contained inconsistencies  For example  certain flags you can pass to the install script were either undocumented or had an incorrect description  This PR fixes some of these inconsistencies  which should make them easier to maintain and easier to read \r\n\r\nCo-authored-by: Travis Plunk <github@ez13 net>  
18588,     Rename private methods in MshCommandRuntime cs (#9074)\n\n* DoWriteObjects() -> DoWriteEnumeratedObject()\r\n* _WriteObjectsSkipAllowCheck() -> _EnumerateAndWriteObjectSkipAllowCheck()   
18589,     Comment cleanup in `releaseTools psm1` (#9064)\n\n  
18590,     Update the task-based async APIs added to PowerShell to return a Task object directly (#9079)\n\nUpdate the task-based async APIs added to PowerShell to not use the `aysnc/await` keywords  but to return a `Task` object directly \r\nThere is nothing to continue on after the `Task Factory FromAsync` call in those methods  so there is not need to use `aysnc` and `await` keywords  which turns the method into a state machine class unnecessarily   
18591,     Update release process issue template (#9051)\n\n  
18592,     Add source for install-package to install netDumbster (#9081)\n\n  
18593,     Add UseQuotes parameter (#8951)\n\n  
18594,     Add 5  InvokeAsync  overloads and  StopAsync  to the  PowerShell  type (#8056)\n\n  
18595,     Publish test package on release builds (#9063)\n\n  
18596,     Cleanup & update ErrorRecord class code style (#9021)\n\n  
18597,     Style fixes for Select-Xml tests (#9037)\n\n  
18598,     Enable cross-platform Send-MailMessage tests for CI (#8859)\n\n  
18599,     Documentation Cleanup (#8851)\n\n  
18600,     Added RequireSudoOnUnix tags to PowerShellGet tests and unmark as pending (#8954)\n\n  
18601,     Style fixes for ConvertTo-Xml tests (#9036)\n\n  
18602,     Build(deps): Bump SelfSignedCertificate in /test/tools/Modules (#9055)\n\n  
18603,     Update docs for 6 2 0-rc 1 release (#9022)\n\n  
18604,     Merge branch  release/v6 2 0-rc 1  into master\n\n# Conflicts:\n#\tsrc/System Management Automation/engine/parser/Compiler cs\n  
18605,     Align name schemes for test files (#9034)\n\n  
18606,     Merged PR 7298: Update Change log\n\nAdd the new commits\n  
18607,     Update version for PowerShell Native and hosting tests (#8983)\n\n  
18608,     Build(deps): Bump NJsonSchema from 9 13 19 to 9 13 22 (#9044)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 19 to 9 13 22 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18609,     Fix duplicate recommendation of Azure DevOps extension for VS Code (#9032)\n\n  
18610,     Update UML to represent SDK and Global tool builds (#8997)\n\n  
18611,     Remove unused cached types from CachedReflectionInfo (#9019)\n\n  
18612,     Refactor Shuffle in Get-Random to save a full iteration of the objects  (#8969)\n\n  
18613,     Suggest  -Id pid  for  Get-Process pid  (#8959)\n\n  
18614,     Remove unused cached types (#9015)\n\nThese types are not used in PowerShell code base and should be removed \r\n\r\n## PR Context\r\n\r\nThe dotnet 3 0 100-preview3-010406 version added overloads to `string get_Chars` and hence we cannot resolved which overload to load  Thus  we get an type load exception \r\n\r\nSince we are no using this type  it is better to remove it \r\n\r\n  
18615,     Remove unused cached types (#9015)\n\nThese types are not used in PowerShell code base and should be removed \r\n\r\n## PR Context\r\n\r\nThe dotnet 3 0 100-preview3-010406 version added overloads to `string get_Chars` and hence we cannot resolved which overload to load  Thus  we get an type load exception \r\n\r\nSince we are no using this type  it is better to remove it \r\n\r\n  
18616,     Code coverage artifacts (#8993)\n\nMove the `TestPackage zip` under code coverage and remove `tests zip` as it is not needed anymore \r\n  
18617,     Build(deps): Bump Markdig Signed from 0 15 7 to 0 16 0 (#8981)\n\n  
18618,     Fix MSI Upgrade failure for preview builds (#9013)\n\n\r\n\r\n\r\n  
18619,     Fix MSI Upgrade failure for preview builds (#9013)\n\n\r\n\r\n\r\n  
18620,     Merged PR 7283: RC 1 change log\n\ndraft rc1 change log\n  
18621,     Fix CodeFactor brace style issues in FileSystemProvider (#8992)\n\n  
18622,     Use List AddRange (#9001)\n\n  
18623,     Remove archlinux dockerfile (#8990)\n\n\r\n\r\n  
18624,     Build(deps): Bump Markdig Signed from 0 15 7 to 0 16 0 (#8981)\n\n  
18625,     Pending NamedPipeConnectionInfo test (#9003)\n\n\r\nRelated #8971  Pending the test until we fix a root case of failure \r\n\r\n  
18626,     Add test for -WhatIf for New-FileCatalog (#8966)\n\n  
18627,     Cleanup dllimport (#8847)\n\n  
18628,     Update release template (#8996)\n\n  
18629,     Build Global tool for PowerShell and SDK container (#8984)\n\n* Add shim dll to redirect to appropriate runtime\r\n* Build updates for creating global tool package\r\n* Add building global tool to nuget yml\r\n* Add azure upload of nuget packages\r\n  
18630,     Change label in doc issue template (#8895)\n\nCL-* is used only for ChangeLog automation \r\n  
18631,     Make test file result names unique (#8979)\n\nMake test file result names unique\r\n  - Also  remove dead code that I found during investigation\r\n\r\nFixes #8978\r\n\r\n## PR Context\r\n\r\nMaking the filenames unique  ensures that we can download the results from the artifacts and do our own processing of the results \r\n\r\n  
18632,     Add variable to control the version of the signing task we use (#8982)\n\n\r\n\r\n  
18633,     Publish test and code coverage artifacts for daily builds (#8955)\n\n  
18634,     Integrate building NuGet package in the coordinated build (#8947)\n\n  
18635,     Make xUnit tests run sequentially to avoid race conditions caused by manipulating  powershell config json  in tests (#8945)\n\n  
18636,     [feature  Add -CustomPipeName to `pwsh` and `Enter-PSHostProcess` (#8889)\n\nThis allows a user to start PowerShell up with the name of the named pipe that is used for cross process communication (I e  Enter-PSHostProcess)   
18637,     Build(deps): Bump NJsonSchema from 9 13 18 to 9 13 19 (#8952)\n\n  
18638,     Fix typo: aganist ➜ against (#8943)\n\n  
18639,     Use verbatim string literals for paths (#8937)\n\n  
18640,     Update the  dir -recurse  example (#8939)\n\n  
18641,     Port Security bypass fixes from 6 1 3 (#8915)\n\n  
18642,     Use the OperationCancellationException to replace the StoppingException in  ConvertToJson  (#8920)\n\n  
18643,     Fix Markdown lint issues (#8929)\n\n#8896 Broke the static analysis CI   Fixing so CI passes\r\n  
18644,     Enable discovering modules that have names same as a culture (e g  Az) (#8777)\n\nHere are the major changes:\r\n- Add logic to skip checking for possible resource directories for the first set of sub directories from the top level \r\n- There was an additional skip if the folder is hidden  rather than doing an explicit attribute check  change the `EnumerationOption` to skip hidden folders \r\n- Since the `IsPossibleModuleDirectory()` helper now only checks to see if the name matches a culture  renamed to `IsPossibleResourceDirectory()`\r\n- When getting the default modules  we don t search recursively into individual module folders  so removed additional check for possible resource directory   
18645,     Fix code-of-conduct linting (#8896)\n\n  
18646,     Add configurable maximum depth in ConvertFrom-Json with `-Depth` (#8199)\n\nAdds an optional -Depth parameter to the cmdlet which lets the user to specify a maximum depth allowed for deserialization  which will overwrite the default maximum of 1024   
18647,     Fix style issues in Csv cmdlets (#8894)\n\n* Remove _delimiter\r\n* Fix attributes\r\n* Formatting headers\r\n* Format properties\r\n* Fix comments\r\n* Fix Codacy issues\r\n  
18648,     Remove Travis-CI mention in `build psm1` (#8888)\n\n  
18649,     Flatten interface hierarchy when generating properties that implement interface properties (#8382)\n\n`TypeBuilder GetInterfaces()` returns only the interfaces that was explicitly passed to its constructor  so we need to flatten the interface hierarchy in order to properly support inherited interfaces   
18650,     Remove some of the last AppVeyor references (#8867)\n\n \r\nThis removes some of the last mentions of the AppVeyor name   Don t change the title  we don t want the word to appear in the CLs\r\nAlso problem: the last references are in the changelogs but I don t want to modify them without committee approval   \r\n\r\n## PR Context  \r\n\r\nit was removed  #8686 \r\n  
18651,     Update CHANGELOG for release 6 1 3 (#8918)\n\n  
18652,     Update stable version to 6 1 3 (#8902)\n\n  
18653,     Support release branches based on the forward slash separator (#8903)\n\n  
18654,     Port DotNet fixes from 6 1 3 (#8914)\n\nAddresses CVE-2019-0657  
18655,     Fix broken link (#8905)\n\n  
18656,     Parallelize the windows CI to enable us to run all tests all the time (#8868)\n\nSplit Windows CI into the following Jobs\r\n\r\n1  Combine Build and xUnit  which published build artifact\r\n1  Elevated CI tests\r\n1  Unelevated CI test\r\n1  Elevated everything else tests\r\n1  Unelevated everything else tests\r\n1  Package build and test\r\n1  Verify xUnit result\r\n\r\n## PR Context  \r\n\r\nBefore this test:\r\n\r\n- A CI run would take ~14 minutes\r\n- A Feature run would take ~30 minutes\r\n\r\nAfter this change  it always runs all tests and takes ~20 minutes \r\nJob `Unelevated everything else tests` is the long poll  taking ~4 minutes longer than the next shortest job   We should be able to get this back down to ~15 if we split that test job somehow \r\n  
18657,     Fixes for Scheduled release build (#8887)\n\n  
18658,     Build(deps): Bump NJsonSchema from 9 13 17 to 9 13 18 (#8881)\n\n  
18659,     Fix lgtm issues (#8843)\n\nAdd some null checks\r\nRemove unused code  
18660,     Start tracking release build information in an azure storage table (#8850)\n\nStart tracking release build information in an azure storage table\r\n\r\n* Also  fix some issues found when the build is started through a schedule  
18661,     Update Coding Guidlines (#8844)\n\n  
18662,     Remove yet another appveyor reference (#8854)\n\n  
18663,     Remove references to uninitialized variable (#8849)\n\nRemove references to uninitialized variable \r\nregressed in #8822 \t\r\n\r\n## PR Context  \r\n\r\nSome artifacts never got published because the conditions would never be true  
18664,     Refactor `travis ps1` into `ci psm1` (#8822)\n\nRefactors `travis ps1`  Important for maintainers: I removed the webhook and badge stuff as neither exist anymore  I also merged the build and test phase with the bootstrap phase    \r\n  
18665,     Make license a link in the MSI (#8846)\n\n  
18666,     Remove extra AppVeyor environment check (#8709)\n\n\r\nRemoves a check for AppVeyor env\r\n\r\n## PR Context  \r\nAppVeyor removed (#8686  extension)\r\n  
18667,     Update governance documentation (#8776)\n\n\r\n  
18668,     Fix length check in `PSSnapinQualifiedName GetInstance()` (#8837)\n\n  
18669,     Build(deps): Bump Microsoft ApplicationInsights from 2 9 0 to 2 9 1 (#8848)\n\nBumps [Microsoft ApplicationInsights (   com/Microsoft/ApplicationInsights-dotnet) from 2 9 0 to 2 9 1 \r\n  
18670,     Don t use Win32 native APIs on non-Windows for crypto of secure string over remoting (#8746)\n\nRemoting relies on Windows native crypto APIs to pass a secure string   Of course these APIs don t work on non-Windows   However  the remoting code does not expect this to fail so ends up in a hang waiting for an event that never happens \r\n\r\nHave not figured out how to return an error to the user in the case `Get-Credential` is called within a PSSession   Currently it just quietly closes the remote connection   @PaulHigin can you give a pointer to where this code would exist?  Debugging the current code  it has a bunch of error handlers which just result in the pssession being closed and not sure where throwing is appropriate \r\n\r\nFix    com/PowerShell/PowerShell/issues/8723\r\n\r\n## PR Context  \r\n\r\nFix is to provide implementations of the Win32 native pinvoke apis that throw an exception   The reason to do it this way is that there s a bunch of code that calls some of the APIs of the wrapper  Net class to setup structures that eventually get passed to the win32 api   Throwing in the managed class causes other things to fail early that should work on non-Windows   
18671,     Enable creating relative symlinks on Windows with `New-Item` (#8783)\n\n  
18672,     Allow ` exe` files to be used as IL binary modules (#7281)\n\nFix for #6741 Allow  exe files to be used as binary modules  Basically anywhere a  dll could be used with modules  you can now use a  exe file  Also did a little clean up  replacing constant strings with the StringLiteral values instead   
18673,     Reduce string allocations when formatting file system objects  (#8831)\n\n* Reduce string allocations when formatting file system objects by caching FullName \r\n* Clear cache FullName when the module changes \r\n  
18674,     Move CommandNotFoundException suggestion to an experimental feature (#8805)\n\n  
18675,     Use `-ErrorAction Ignore` instead of `SilentlyContinue` with `Get-Command` in build psm1 (#8832)\n\n  
18676,     Add Experimental Features to change log creation (#8827)\n\nAdded feature to classify experimental features in change log  Also fixed an issue with reporting all PRs with missing tags together \r\n\r\n## PR Context\r\nUpdates to the script which generates the change log   
18677,     Add binskim to coordinated build and increase timout (#8834)\n\n\r\nAdd binskim to coordinated build and increase timout \r\n\r\n## PR Context  \r\n\r\nTotal timeout for the old build was 220 minutes \r\nThe portions before the compliance take ~30 minutes \r\nSo  I went with 180 \r\n\r\nI also found I missed binskim when doing this work  
18678,     Remove unneeded `Invoke-Expression` on unvalidated input (#8826)\n\nRemove unneeded `Invoke-Expression` on unvalidated input   
18679,     Fix many instances of CodeFactor style issue `A single-line comment must not be followed by a blank line` (#8825)\n\n  
18680,     Fix broken python method (#8821)\n\n  
18681,     Fix daily CI builds to publish tar package as artifacts (#8775)\n\nUpdate the packaging script to always create the tar gz packages \r\n\r\n## PR Context  \r\n\r\nDaily builds for Linux and MacOS do not publish tar gz package \r\n\r\n  
18682,     Parse numeric strings as numbers again during conversions (#8681)\n\n  
18683,     Expose file attributes of OneDrive placeholders (#8745)\n\n  
18684,     Update CLA pull request labeling info (#8820)\n\n  
18685,     Add instrumentation for Start-PSPackage (#8811)\n\n\r\n\r\nAdd instrumentation for start-PSPackage saying what parameters it thinks you used\r\n\r\n  
18686,     Changing docs issue template to new docs repo location (#8818)\n\nUpdating the issue template for documentation to show the new location of PowerShell-Docs on the MicrosoftDocs repo \r\n\r\n## PR Context  \r\n\r\nCleaning up references post migration of docs to MicrosoftDocs repo  While the redirect works  showing the correct location is preferred in the long run   
18687,     Fix passing credential to the `SyncGalleryToAzArtifacts psm1` script (#8808)\n\nFix the parameter names and AzDevOps pipeline variable names \r\n\r\n## PR Context  \r\n\r\nVariable names were out of sync with the definition on AzDevOps \r\n  
18688,     Remove directory causing static analysis failure (#8812)\n\nRemove directory causing static analysis failure\r\n\r\n  
18689,     Fix spelling in releaseTool/README md (#8810)\n\n\r\n\r\n  
18690,     Build(deps): Bump Microsoft ApplicationInsights from 2 8 1 to 2 9 0 (#8807)\n\n  
18691,     Move Final artifacts from universal build to `finalResults` folder (#8806)\n\n## PR Summary\r\n\r\nMove Final artifacts from universal build to `finalResults` folder \r\n\r\n  
18692,     Build(deps): Bump PackageManagement from 1 2 4 to 1 3 1 in /src/Modules (#8800)\n\nUpdated the wxs file   
18693,     Refactor Unified Release Build (#8804)\n\nRefactor Unified Release Build\r\n  - Make injecting the nuget config a template\r\n  - Make setting the version variable a template\r\n  - Add parameters to templates where needed\r\n  - Run defender scan before uploading linux packages (and rename step to plain english)\r\n  
18694,     Enable `Write-Information` to accept $null (#8774)\n\n  
18695,     Update GitHub templates (#8792)\n\n\r\nUpdate GitHub templates \r\nFill free add commits if needed \r\n\r\n  
18696,     Fix broken link in `FAQs md` (#8803)\n\n  
18697,     Update Pester version to 4 4 4 (#8739)\n\n  
18698,     Remove appveyor functions from New-DockerTestBuild psm1 (#8756)\n\n  
18699,     Adding parameter  ReplyTo  to Send-MailMessage (#8727)\n\n  
18700,     Updated `basics md` to add a link for showing example for installing git on all package managers (#8735)\n\n  
18701,     Change xUnit RunspaceTests to run sequentially (#8796)\n\n  
18702,     Add compliance to Coordinated build (#8798)\n\nAdd compliance to Coordinated build\r\n  - Also switch to mac internal pool for release build\r\n  - Also turn some duplicate tasks into templates\r\n  - Also fix issue with vscode configuration which causes yaml files not to be recogized as yaml\r\n  
18703,     Switch to 1 11 of FPM to fix FPM install issue (#8797)\n\nSwitch to 1 11 of FPM to fix FPM install issue\r\n  
18704,     Fix `Get-Help` `PSTypeName` issue with `-Parameter` when only one parameter is declared (#8754)\n\n  
18705,     Fix cleanup config files for the csharp xUnit tests (#8761)\n\n  
18706,     Update the universal build with framework dependent package for dotnet sdk (#8773)\n\nUpdate the universal build to also build the framework package needed for the dotnet sdk container image \r\n\r\n## PR Context  \r\n\r\nWe build the package in individual builds  This change brings over the steps in the universal build \r\n\r\n  
18707,     Update some info in md-link-checks (#8757)\n\n  
18708,     moved fxdependent-dotnetsdk-latest/Dockerfile (#8738)\n\n  
18709,     Update `README md` for `preview 4` (#8772)\n\n  
18710,     Merge `release-v6 2 0-preview 4 \n\n# Conflicts:\n#\ttest/Test Common props\n#\ttools/packaging/packaging psm1\n  
18711,     Enable catching NotImplementedException when calling into RawUI for members that are not implemented\n\n  
18712,     Updating README md for supported openSUSE version and updating link to OS versions supported by CoreFx (#8701)\n\n* Update openSUSE 42 2 to 42 3  and adding [openSUSE Leap 15 (   microsoft com/en-us/powershell/scripting/install/installing-powershell-core-on-linux?view=powershell-6#installation---opensuse-leap-15) \r\n    * [Installation - openSUSE Leap 15 (   microsoft com/en-us/powershell/scripting/install/installing-powershell-core-on-linux?view=powershell-6#installation---opensuse-leap-15)\r\n* Update CoreFx version 2 0 to 2 1 \r\n    * [ NET Core 2 1 - Supported OS versions (   com/dotnet/core/blob/master/release-notes/2 1/2 1-supported-os md)\r\n  
18713,     Fix broken reference (#8753)\n\n  
18714,     Correctly Report impact level when `SupportsShouldProcess` is not set to  true  (#8209)\n\nMajor changes are:\r\n- Make all commands return  ConfirmImpact None  if `SupportsShouldProcess` is not set to `true` \r\n- Update some cmdlets to explicitly use `ConfirmImpact Low` \r\n- Update `DefaultCommands Tests ps1` to test for  ConfirmImpact  level   
18715,     Fix Request Charset Issues in Web Cmdlets (#8742)\n\nInstantiating a new MediaTypeHeaderValue object fails when the -ContentType parameter includes a charset such as application/json; charset=utf-8  This makes it impossible to set the content encoding on web requests  Moving to Parse() ensures we actually get a proper MediaTypeHeaderValue when the charset is present  thus allowing users to set their request encoding via proper -ContentType values   
18716,     Remove GitKracken files from GitIgnore (#8743)\n\n<!-- Anything that looks like this is a comment and can t be seen after the Pull Request is created  -->  \r\n\r\n## PR Summary\r\nGitKracken now automatically prevents them from being committed  so this is not needed   \r\n<!-- Summarize your PR between here and the checklist  -->  \r\n\r\n## PR Context  \r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it  -->\r\n\r\n## PR Checklist\r\n\r\n- [X  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [X  [Change is not breaking (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)\r\n- [X  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [X  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` or `[ WIP  ` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready   \r\n- **User-facing changes**\r\n    - [X  Not Applicable\r\n    - **OR**  \r\n    - [   [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [X  N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X  [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n        - [X  [Add `[feature ` to your commit messages if the change is significant or affects feature tests (   com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines md#requesting-additional-tests-for-a-pr)\r\n\r\n  
18717,     Refactor `appveyor psm1` to `ci psm1` (#8733)\n\n  
18718,     Make every `csproj` files have its own folder (#8750)\n\n* move csproj files into individual folders\r\n\r\n* get csproj files from individual folders\r\n  
18719,     Improve check for developer mode by checking minimum required build number (#8749)\n\n* Improve check for developer mode by checking minimum required build number\r\n\r\nThe test would fail if the developer mode is enabled but the machine has an older build than the minimum required build \r\nThe change adds a check for the build version in the test \r\n\r\n* Update test/powershell/Modules/Microsoft PowerShell Management/New-Item Tests ps1\r\n  
18720,     Add complete xml docs for ConvertToJsonContext constructors (#8737)\n\n  
18721,     Update README md for ARM to include both 32-bit and 64-bit PS package links (#8677)\n\n  
18722,     Simplify the declaration of new experimental features (#8726)\n\n  
18723,     Update issue templates with new supported values (#8718)\n\n  
18724,     Update packaging script to build reference assembly targeting `netcoreapp2 1` and use actual ` csproj` files (#8729)\n\n  
18725,     Merged PR 6702: Add change log for v6 2 0-preview 4 release\n\nAdd change log for v6 2 0-preview 4 release\n  
18726,     Build(deps): Bump NJsonSchema from 9 13 16 to 9 13 17 (#8747)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 16 to 9 13 17 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18727,     Make `Join-String -InputObject 1 2 3` result equal to `1 2 3 | Join-String` result (#8611)\n\nMake `Join-String -InputObject 1 2 3` result equal to `1 2 3 | Join-String` result \r\n\r\nFix #8610 \r\n  
18728,     Use https in URLs where available (#8622)\n\nUse https in URLS across the repository where the domain serves content by https \r\n  
18729,     Update maintainer docs about the CLA PR labels (#8734)\n\n  
18730,     Build(deps): Bump XunitXml TestLogger from 2 0 0 to 2 1 26 (#8731)\n\n  
18731,     Build(deps): Bump NJsonSchema from 9 13 15 to 9 13 16 (#8732)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 15 to 9 13 16 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18732,     Update path of test\\xUnit\\xUnit tests csproj in PowerShell sln (#8730)\n\n  
18733,     Ignore files added by SelfSignedCertificate (#8728)\n\nWebListener module depends on SelfSignedCertificate module and restore it so we should ignore the files in git   
18734,     Add Andrew to the maintainer list (#8722)\n\n* Add andrew to the maintainer list\r\n* update dictionary  
18735,     Fix Enter-PSHostProcess test to wait until runspace is ready before attempting to enter (#8725)\n\nThis fixes CI test failure in Windows build \r\n  
18736,     Remove AMSI unitialized assert and replace with call to uninitialize (#8713)\n\n  
18737,     Add the experimental feature for creating  Temp:\\  drive when FileSystemProvider initializes (#8696)\n\nAdds Experimental Feature called `PSTempDrive` that  if enabled  creates a PSDrive called `Temp:` that maps to `[System IO Path ::GetTempPath()`   
18738,     Merged PR 6442: Moved the cleanup logic to Restore-PSModuleToBuild\n\nMoved the cleanup logic to Restore-PSModuleToBuild\n\n# Conflicts:\n#\tbuild psm1\n  
18739,     Generate and deploy reference assembly for Microsoft PowerShell Commands Utility dll (#8716)\n\nUpdate `New-ReferenceAssembly` and `New-UnifiedNugetPackage` to generate reference assembly for `Microsoft PowerShell Commands Utility dll` and properly deploy it for `Microsoft PowerShell Commands Utility` NuGet package and `Microsoft PowerShell SDK` NuGet package \r\n\r\nAn incremental step to fix  eventually  #8121\r\n  
18740,     Generate and deploy reference assembly for Microsoft PowerShell Commands Utility dll (#8716)\n\nUpdate `New-ReferenceAssembly` and `New-UnifiedNugetPackage` to generate reference assembly for `Microsoft PowerShell Commands Utility dll` and properly deploy it for `Microsoft PowerShell Commands Utility` NuGet package and `Microsoft PowerShell SDK` NuGet package \r\n\r\nAn incremental step to fix  eventually  #8121\r\n  
18741,     Refactor ConvertTo-Json to expose `JsonObject ConvertToJson` as a public API (#8682)\n\nWe have the public API `JsonObject ConvertFromJson` to convert from JSON string in the PowerShell context  It would be good to have a public API for conversion to JSON  This PR refactors the `ConvertTo-Json` cmdlet to move the core implementation to `JsonObject ConvertToJson`  and make `ConvertTo-Json` call that public method \n\nThis would help the Azure Function PowerShell worker  Currently  we depends on [calling the cmdlet (   com/Azure/azure-functions-powershell-worker/blob/729710d2595b4b96abd4fa5a5547fe880e98bfa6/src/PowerShell/PowerShellManager cs#L198-L205) to convert object to JSON which is expensive  Once we have the public method `JsonObject ConvertToJson` exposed  we can call the API directly to avoid a command invocation \n\n# Conflicts:\n#\ttest/Test Common props\n  
18742,     Refactor ConvertTo-Json to expose `JsonObject ConvertToJson` as a public API (#8682)\n\nWe have the public API `JsonObject ConvertFromJson` to convert from JSON string in the PowerShell context  It would be good to have a public API for conversion to JSON  This PR refactors the `ConvertTo-Json` cmdlet to move the core implementation to `JsonObject ConvertToJson`  and make `ConvertTo-Json` call that public method \r\n\r\nThis would help the Azure Function PowerShell worker  Currently  we depends on [calling the cmdlet (   com/Azure/azure-functions-powershell-worker/blob/729710d2595b4b96abd4fa5a5547fe880e98bfa6/src/PowerShell/PowerShellManager cs#L198-L205) to convert object to JSON which is expensive  Once we have the public method `JsonObject ConvertToJson` exposed  we can call the API directly to avoid a command invocation \r\n  
18743,     Update code to use single method to check if path is UNC (#8680)\n\nupdate all checks if path is unc to one method  
18744,     Merged PR 6648: Bump SDK and Runtime Versions\n\nBump SDK and Runtime Versions\n  - Also  fix alpine docker file\n  - Also  fix extra files being added to some Modules after these changes\n  
18745,     Package validation tests updates (#8714)\n\n  
18746,     Update release process template (#8711)\n\n* Update release process with latest steps\r\n\r\n* Added DevOps artifacts step\r\n\r\n* Update  github/ISSUE_TEMPLATE/Release_Process md\r\n\r\nCo-Authored-By: PaulHigin <paulhi@microsoft com>\r\n\r\n\r\nCo-authored-by: Aditya Patwardhan <adityap@microsoft com>  
18747,     Package validation tests updates (#8714)\n\n  
18748,     Build(deps): Bump Microsoft PowerShell Native (#8712)\n\n  
18749,     Build(deps): Bump Microsoft PowerShell Native (#8712)\n\n  
18750,     Merged PR 6644: Update hosting tests and metadata json for 6 2 0-preview 4 release\n\nUpdate hosting tests and metadata json for 6 2 0-preview 4 release\n  
18751,     Do not ship fullclr binaries of PackageManagement (#8700)\n\n## PR Summary\r\n\r\nRelated: #8699\r\n\r\n## PR Context  \r\n\r\nBecause `PowerShellGet` does not support publishing/saving module on a per platform basis (see [this (   com/PowerShell/PowerShellGet/issues/273) issue)  PowerShell currently also ships the fullclr binaries of `PackageManagement`  which it does not need  Therefore removing it to minimise the package size  this saves 1 19 MB   
18752,     Fix the build for fxdependent build for dotnet sdk (#8670)\n\n  
18753,     Remove broken HelpUri from CimTest (#8688)\n\n  
18754,     Add Windows build to universal release build YAML (#8695)\n\n  
18755,     Fix Code Page Parsing Isssue in Invoke-RestMethod (#8694)\n\n  
18756,     Remove un-used AppVeyor links from README md (#8685)\n\n  
18757,     Fix expect 100-continue Issue with Web Cmdlets (#8679)\n\nWeb Cmdlets will no longer forcibly remove Expect: 100-continue from web requests \r\nThis was a legacy setting that needed to be there because of platform differences that have since been resolved in CoreFX   
18758,     Cleanup Format-Hex (#8683)\n\n  
18759,     Update README md (#8684)\n\nThe last two commits to this file  broke  both   Developing and contributing (link is missing) and  Support  (don\ t know what it didn\ t format correctly \r\nThis commit fixes both cases   
18760,     Update Package Management license to MIT (#8676)\n\n  
18761,     Allow  name  as an alias key for  label  in ConvertTo-Html  allow the  width   entry to be an integer (#8426)\n\n  
18762,     Update README md\n\nThe last two commits to this file  broke  both   Developing and contributing (link is missing) and  Support  (don\ t know what it didn\ t format correctly \r\nThis commit fixes both cases   
18763,     Remove Debian 8 references as it is EOL (#8678)\n\nRemove Debian 8 references as it is EOL\r\n  
18764,     AddToPath re-implementation in install-powershell ps1 (#8081)\n\nThis PR is a re-implementation of the -AddToPath switch in tools/install-powershell ps1  without the side-effects the current implementation has   The changes only affects windows users   \r\n  
18765,     Allow user-specified underlying type for enums (#8329)\n\nFix #8028 \r\n\r\nThis change adds support for specifying the underlying type for an enum:\r\n\r\n```powershell\r\nenum MyEnum : long \r\n \r\n  A = 0x0FFFFFFFFFFFFFFF\r\n  B\r\n \r\n# or\r\nenum MyByte : byte \r\n \r\n  A = 0x01\r\n  B = 0x02\r\n  C = 0x03\r\n  D\r\n \r\n```\r\n  
18766,     Remove appveyor environment checks (#8669)\n\n  
18767,     Create Support File (#8618)\n\n  
18768,     Build(deps): Bump NJsonSchema from 9 13 14 to 9 13 15 (#8671)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 14 to 9 13 15 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18769,     Update git clone URL (#8673)\n\n  
18770,     Change the feed URL to feed name due to changes in AzDevOps (#8664)\n\n  
18771,     docs(contributing): add link check information (#8659)\n\n  
18772,     Batch merge builds together while a merge build is running (#8668)\n\n## PR Summary\r\n\r\nBatch merge builds together while a merge build is running \r\n\r\n## PR Context  \r\n\r\nHelp keep agents available for CI runs \r\n  
18773,     Resolve :PAGER  if its path contains spaces (#8571)\n\n  
18774,     Build package build using ubuntu 18 04 image (#8666)\n\n  
18775,     Handle case where applocker test script fails to delete (#8627)\n\nOne reported case where during applocker policy check  the test script that is created cannot be deleted because something else (malware scanner?) has a lock on the file   This results in an exception being thrown in finally block which ultimately causes PowerShell to crash due to the unhandled exception   Fix is to wrap the deletion in the finally block with try  catch and ignore any exceptions and leave the temp file \r\n\r\nTFS:20156282\r\n  
18776,     Adding tests for PSDiagnostics Module (#8431)\n\n  
18777,     Increase diagnosability of Link Checker failures (#8667)\n\n\r\nAlso use ThreadJobs for better perf  
18778,     Add support enum and char types in Format-Hex cmdlet (#8191)\n\n  
18779,     Fix grammar in stale bot message (#8660)\n\n  
18780,     Fix a typo in packaging psm1 (#8647)\n\n  
18781,     Add `-Stable` to `Sort-Object` and related tests (#7862)\n\n  
18782,     Add function to create a framework dependent package dotnet-sdk containers (#8644)\n\n  
18783,     Change Get-Help cmdlet -Parameter parameter so it accepts string arrays  (#8454)\n\n  
18784,     Fix  FixupFileName  to not load resolved assembly during module discovery (#8634)\n\n  
18785,     Fix broken urls (#8653)\n\nFix broken URL\r\n  - Also  move other static analysis tests into that CI \r\n  - Also  make the link analysis a pester test (partly to make sure the step fails in case of an error) \r\n  
18786,     Delete appveyor yml (#8639)\n\n  
18787,     Build(deps): Bump `NJsonSchema` from 9 13 13 to 9 13 14 (#8648)\n\n  
18788,     Build(deps): Bump `PowerShellGet` from 2 0 3 to 2 0 4 (#8649)\n\n  
18789,     Fix installing `fpm` and `ronn` in macOS CI by avoid installing docs for them (#8656)\n\n  
18790,     Update License and Third Party Notice (#8646)\n\n* remove MS proprietary licenses from TPN\r\n\r\n* Use standard MIT license\r\n\r\n* Update generate TPN\r\n\r\n* remove additional MS proprietary license\r\n\r\n* Additional fixes\r\n  
18791,     Update README  metadata json and changelog for release 6 1 2 (#8658)\n\n\r\nUpdate README and metadata json for release 6 1 2\r\n\r\n  
18792,     Revise use of Start-Sleep cmdlet (#8633)\n\n* Avoid use of sleep alias (follow-up to #8546)\r\n* Specify default parameter name\r\n* Shorten overly specific comments  
18793,     Fix typo in README md (#8642)\n\n  
18794,     Add macOS files to  gitignore (#8456)\n\n  
18795,     Additional fixes\n  
18796,     remove additional MS proprietary license\n  
18797,     Update generate TPN\n  
18798,     Build(deps): Bump Markdig Signed from 0 15 6 to 0 15 7 (#8637)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 15 6 to 0 15 7 \r\n- [Release notes (   com/lunet-io/markdig/releases)\r\n- [Changelog (   com/lunet-io/markdig/blob/master/changelog md)\r\n- [Commits (   com/lunet-io/markdig/compare/v0 15 6   v0 15 7)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18799,     Update  CommandNotFound  fuzzy suggestion to only return unique results (#8640)\n\n  
18800,     Improve Start-Sleep cmdlet to accept fractional seconds (#8537)\n\n  
18801,     Fix some typos in the README (#8623)\n\n  
18802,     Update fuzzy test to fix daily build (#8629)\n\n  
18803,     Remove  en-us  from docs microsoft com URL (#8628)\n\n  
18804,     Update examples for hosting PSCore and remove old outdated examples (#8472)\n\n  
18805,     Update the pull request template (#8624)\n\nSome cleanup/enhancements to make it easier to understand   
18806,     Add the experimental feature  PSUseAbbreviationExpansion  to support tab completion on abbreviated command names (#8109)\n\n  
18807,     Use standard MIT license\n  
18808,     remove MS proprietary licenses from TPN\n  
18809,     Add support to show suggestions on CommandNotFound exception (#8458)\n\n* support fuzzy matching with get-command and on CommandNotFound exception  show suggestion\r\n* fix CodeFactor issues\r\n* change algorithm to use Damerau-Levenshtein Distance which is more useful in finding close matches\r\n  
18810,     Contributing guidelines: Remove references to Travis CI and AppVeyor (#8617)\n\nSince when was Travis-CI used??  I removed it and replaced it with `Azure DevOps` because that isn t there   \r\n  
18811,     Change `Clear-Host` back to using `$RAWUI` and `clear` to work over remoting (#8609)\n\n  
18812,     Change hashtable to use OrdinalIgnoreCase to be case-insensitive in all Cultures (#8566)\n\nUbuntu18 04 seems to default to C UTF-8 for LANG (representing InvariantCulture) which results in a case-sensitive hashtable since CurrentCultureIgnoreCase doesn t work for that culture  Fix is to use OrdinalIgnoreCase instead   
18813,     Make S M A PowerShell GetSteppablePipeline method public (#8055)\n\n* make GetSteppablePipeline method public\r\n* updated PowerShell member count\r\n  
18814,     Style: Change first char to upper in summary comments (#8597)\n\n  
18815,     Build(deps): Bump System Security Cryptography Pkcs from 4 5 1 to 4 5 2 (#8614)\n\nBumps [System Security Cryptography Pkcs (   com/dotnet/corefx) from 4 5 1 to 4 5 2 \r\n- [Release notes (   com/dotnet/corefx/releases)\r\n- [Commits (   com/dotnet/corefx/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18816,     Build(deps): Bump System Net Http WinHttpHandler from 4 5 1 to 4 5 2 (#8615)\n\nBumps [System Net Http WinHttpHandler (   com/dotnet/corefx) from 4 5 1 to 4 5 2 \r\n- [Release notes (   com/dotnet/corefx/releases)\r\n- [Commits (   com/dotnet/corefx/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18817,     Build(deps): Bump NJsonSchema from 9 13 11 to 9 13 13 (#8616)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 11 to 9 13 13 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18818,     Build(deps): Bump System Text Encoding CodePages from 4 5 0 to 4 5 1 (#8613)\n\nBumps [System Text Encoding CodePages (   com/dotnet/corefx) from 4 5 0 to 4 5 1 \r\n- [Release notes (   com/dotnet/corefx/releases)\r\n- [Commits (   com/dotnet/corefx/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
18819,     Fix LiteralPath in Import-Csv to bind to Get-ChildItem output (#8277)\n\nAdded new tests \r\n  
18820,     Make scriptblock-based calculated properties work again in ConvertTo-Html (#8427)\n\n  
18821,     Fix Join-String cmdlet FormatString parameter logic (#8449)\n\n\r\n  
18822,     Allow Windows users in developer mode to create symlinks without elevation (#8534)\n\n  
18823,     Update code coverage analysis document (#8543)\n\n\r\n  
18824,     `Help` function should only pass content to pager if content was found (#8528)\n\n  
18825,     Change `clear-host` to simply called [console ::clear and remove `clear` alias from Unix (#8603)\n\nBased on @PowerShell/powershell-committee decision  standardizing on [Console ::Clear() on all platforms and removing clear alias on non-Windows   
18826,     Remove  en-us  from our doc links (#8602)\n\n  
18827,     `help` function shouldn t use pager for AliasHelpInfo (#8552)\n\n  
18828,     Name the spelling yaml something more appropriate (#8601)\n\n* Rename spelling yml to misc-analysis yml\r\n* Update mac yml\r\n* Update windows yml\r\n* Update README md\r\n  
18829,     Style: Use the type aliases  char  and  bool  instead of  Char  and  Boolean  (#8572)\n\n  
18830,     Add S M A PowerShell Create method overload with Runspace argument (#8057)\n\n  
18831,     Style: Use the type alias  string  instead of  String  in places that are appropriate (#8573)\n\n  
18832,     Correctly capitalize the ForEach operator in * ps1 (#8583)\n\n  
18833,     Remove unnecessary trim of passed-in command line in interactive debugging (#8594)\n\n  
18834,     Style: Add a space after  //  in comments and remove unneeded comments after     (#8576)\n\n  
18835,     Style: Add the ending period to the XML document texts (#8577)\n\n  
18836,     Document `First-time-issue` and `Hackathon`/`Hacktoberfest` labels (#8575)\n\nSeems like the convention is to have a `First-Time-Issue` to help first time contributors find easy issues they can work on to start learning about the project and make their first contribution   Label is created  this PR adds documentation   The `Hackathon`/`Hacktoberfest` label (changes depending on time of year) wasn t documented previously and added to issue management doc \r\n\r\nFix    com/PowerShell/PowerShell/issues/8562\r\n\r\n  
18837,     Avoid use of mkdir alias in * ps1 and * psm1 (#8582)\n\n  
18838,     Create link check task (#8471)\n\n  
18839,     Updated linux build link (#8579)\n\nUpdated to redirect to docs page  as current link is a 404 \r\n\r\n  
18840,     Regularize redirection operator spacing in * ps1 and * ps1m (#8581)\n\nAdd space after redirection operator   
18841,     Update contributing guidelines doc to run spellchecking in English (#8473)\n\nMakes it clear in the contrib guidelines to check in English    
18842,     Add script to create icns files  (#7456)\n\nAdd script to generate macOS icon file  It does not attempt to integrate with the current build process as the macOS icon file is mostly static \r\n\r\n`libsvg` was chosen because of its low dependency count over other solutions that use backends like Chromium  PhontomJS  etc  ImageMagick s `convert` was tested but resulting PNGs where not satisfactory and would have required an overcomplicated script having to calculate the `density` argument \r\n\r\n* Has a dependency on librsvg (can be installed via Brew)\r\n* Uses SVG file as input\r\n* Can be integrated in later to build process if desired\r\n\r\nCloses #7455  
18843,     Enable install of Preview MSI release side-by-side with Stable release (#8513)\n\nWhen installing (or upgrading) Preview builds the component ids for the files are the same as the installed files from the stable MSI   MSI sees this and assumes the file is already installed so skips installing files that haven t changed (been updated) which results in missing files in the preview install folder and pwsh fails to start   Fix is to dynamically generate new component ids (and compoentrefs) in `files wxs` using `_Preview` suffix and use that when building a preview package \r\n\r\nTested manually \r\n\r\ncc @bergmeister if you can help validate different scenarios \r\n\r\nFix    com/PowerShell/PowerShell/issues/8289\r\n  
18844,     get macOS to publish daily build to nugetfeed (#8464)\n\n  
18845,     Build(deps): Bump Markdig Signed from 0 15 5 to 0 15 6 (#8558)\n\n  
18846,     Build(deps): Bump NJsonSchema from 9 13 10 to 9 13 11 (#8569)\n\n  
18847,     Style: Change  String   to  string   (#8568)\n\n  
18848,     Style:  Replace String IsNullOrEmpty with string IsNullOrEmpty (#8557)\n\n  
18849,     Fix typo in AMSI test (#8561)\n\n  
18850,     Style: Convert to upper first char in <param> and <exception> doc tags (#8556)\n\n  
18851,     Style: Add period before </param> and </exception> doc tags (#8553)\n\n  
18852,     Remove use of cmdlet aliases from  \\test\\powershell (#8546)\n\n  
18853,     Style: Remove extra spaces after <para> and before </para> docs tags (#8547)\n\n  
18854,     Remove duplicate `Open Here` context menu item upgrading to newer Preview release (#8496)\n\nRemove old `Open` regkey  
18855,     Fix mistake on deserialization (#8502)\n\nReplace this hideHeader with this repeatHeader  
18856,     Style: Remove preceding spaces from C# preprocessor-type keywords (#8540)\n\n  
18857,     Style: remove  <remarks>  </remarks>  (#8538)\n\n  
18858,     Style: Add period before returns doc tag (#8535)\n\n- add period before  </returns>  doc tag\r\n- remove extra space before  </returns>  doc tag\r\n- convert first char after  <returns>  doc tag to upper case  
18859,     Style: Change  Object[   to  object[   (#8526)\n\n  
18860,     Style: Change  Object  to  object  (#8522)\n\n  
18861,     Style: Change UInt64? to ulong? (#8527)\n\n* Style: Change UInt64? to ulong?\r\n\r\n* Style: Change UInt32? to uint?\r\n\r\n* Style: Change UInt16? to ushort?\r\n  
18862,     Style: Change  Byte    to  byte[   (#8525)\n\n  
18863,     Code cleanup: Add space after closing brace where needed (#8530)\n\n* Update TestService\r\n\r\n* Update WebListener\r\n\r\n* Update Controllers\r\n\r\n* Update ExpTest\r\n\r\n* Update MyApp\r\n\r\n* Update Logic\r\n\r\n* Update Logic\r\n\r\n* Update MyApp\r\n\r\n* Update Microsoft Management Infrastructure CimCmdlets\r\n\r\n* Update Microsoft PowerShell Commands Diagnostics\r\n\r\n* Update Microsoft PowerShell ScheduledJob\r\n\r\n* Update Microsoft WSMan Management\r\n\r\n* Update Microsoft WSMan Runtime\r\n\r\n* Update ResGen\r\n\r\n* Update TypeCatalogGen\r\n\r\n* Update commands\r\n\r\n* Update Eventing\r\n\r\n* Update Reader\r\n\r\n* Update utility\r\n\r\n* Update ShowCommand\r\n\r\n* Update trace\r\n\r\n* Update WebCmdlet\r\n\r\n* Update Common\r\n\r\n* Update CoreCLR\r\n\r\n* Update common\r\n\r\n* Update format-object\r\n\r\n* Update format-wide\r\n\r\n* Update out-file\r\n\r\n* Update out-printer\r\n\r\n* Update out-string\r\n\r\n* Update OutGridView\r\n\r\n* Update LocalAccounts\r\n\r\n* Update Commands\r\n\r\n* Update security\r\n\r\n* Update CoreCLR\r\n\r\n* Update DscSupport\r\n\r\n* Update engine\r\n\r\n* Update help\r\n\r\n* Update logging\r\n\r\n* Update namespaces\r\n\r\n* Update security\r\n\r\n* Update utils\r\n\r\n* Update config\r\n\r\n* Update perfCounters\r\n\r\n* Update tracing\r\n\r\n* Update cmdletization\r\n\r\n* Update other\r\n\r\n* Update cim\r\n\r\n* Update xml\r\n\r\n* Update CoreCLR\r\n\r\n* Update common\r\n\r\n* Update DefaultFormatters\r\n\r\n* Update out-console\r\n\r\n* Update out-textInterface\r\n\r\n* Update DisplayDatabase\r\n\r\n* Update Utilities\r\n\r\n* Update COM\r\n\r\n* Update ComInterop\r\n\r\n* Update CommandCompletion\r\n\r\n* Update debugger\r\n\r\n* Update ExperimentalFeature\r\n\r\n* Update hostifaces\r\n\r\n* Update interpreter\r\n\r\n* Update lang\r\n\r\n* Update Modules\r\n\r\n* Update parser\r\n\r\n* Update runtime\r\n\r\n* Update client\r\n\r\n* Update commands\r\n\r\n* Update common\r\n\r\n* Update fanin\r\n\r\n* Update server\r\n\r\n* Update WireDataFormat\r\n\r\n* Update Binding\r\n\r\n* Update Operations\r\n\r\n* Update interface\r\n\r\n* Update cmdletization\r\n\r\n* Update cim\r\n\r\n* Update management\r\n\r\n* Update WindowsTaskbarJumpList\r\n\r\n* Update msh\r\n  
18864,     Style: Change  System Boolean  to  bool  (#8521)\n\n  
18865,     Fix xml nesting bug in CustomSerializer WriteMemberInfoCollection() (#8476)\n\nWriteMemberInfoCollection() calls WriteEndElement() at most once  even if WriteStartElement() has been called more than once  This commit moves the WriteEndElement() call up immediately after the elements text value has been written   
18866,     Change  String  to  string  for simple references (#8519)\n\n  
18867,     Fix formatting of header of table when center aligned (#8497)\n\n  
18868,     Change  Int32  to  int  for simple references in variable declaration (#8518)\n\n  
18869,     Style: Member access symbols should be followed with member name (#8517)\n\n  
18870,     Style: Remove extra space before colon in named parameters (#8504)\n\n  
18871,     Bump NJsonSchema from 9 13 9 to 9 13 10 (#8511)\n\n  
18872,     Style: Use the shorthand of the `nullable` type (#8501)\n\n  
18873,     Remove empty lines; correct space on closing square brackets  negative signs  and generic brackets (#8508)\n\n  
18874,     Remove space after new keyword in implicitly typed array allocation (#8505)\n\n  
18875,     The static keyword should be right after access modifier (#8506)\n\n  
18876,     Remove comments after closing bracket (#8503)\n\n  
18877,     Remove space character after  !  (#8507)\n\n  
18878,     Bump NJsonSchema from 9 13 7 to 9 13 9 (#8498)\n\n  
18879,     Add `-UseMinimalHeader` to `Start-Transcript` to minimize transcript header (#8402)\n\n  
18880,     Add `-RepeatHeader` to `Format-Table` to enable repeating header for each screen full (#8481)\n\nWhen using a screen reader or just getting the output of a table with lots of rows  the header is no longer on the screen and the columns may no longer make sense without the context   This change adds a `-RepeatHeader` switch to `Format-Table` to enable re-outputting the header after every screen full (minus 1 row)   Expectation is that the user is piping the output to a pager (e g  less) which uses the bottom row for pager information   I followed the `AutoSize` parameter as the way to get the parameter from the cmdlet into the deep formatting object where it s needed   
18881,     Add Tests for ConfirmImpact Ratings (#8214)\n\n  
18882,     Bump NJsonSchema from 9 13 4 to 9 13 7 (#8493)\n\n  
18883,     Fix  Debug-Runspace  for Unix platforms and properly enable Windows identity impersonation code (#8451)\n\n  
18884,     Fix style issues in xUnit tests (#8465)\n\n  
18885,     Updating links to point to ms docs VS Code docs (#8468)\n\n* Updated links to point to Microsoft Docs\r\n* Delete using-vscode md\r\n* Delete vscode png\r\n  
18886,     Bump NJsonSchema from 9 13 3 to 9 13 4 (#8462)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 3 to 9 13 4   
18887,     pass nugetkey as param (#8461)\n\n  
18888,     Fix daily NuGet publishing (#8460)\n\nFix daily NuGet publishing\r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Change is not breaking (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready \r\n- **User-facing changes**\r\n    - [   Not Applicable\r\n    - **OR**\r\n    - [   User-facing [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [   Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n        - [   [Add `[feature ` if the change is significant or affects feature tests (   com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines md#requesting-additional-tests-for-a-pr)\r\n  
18889,     Move xUnit tests in new folder (#8356)\n\n## Motivation\r\n\r\nI have a PR where there are many new xUnit tests \r\nIt would also be useful to create new xUnit tests for public APIs \r\nThe number of xUnit tests will increase and their ordering is required \r\n\r\n## PR Summary\r\n\r\n- Move C# xUnit tests in new folder  This allows to put new xUnit tests in directory structure in accordance with directory structure where cs files are \r\n- Use an xUnit TestCaseOrderer attribute to sequentially process tests for `powershell config json` \r\n- Update README md\r\n- A race condition was fixed which allowed  to run all XUnit tests in single batch job \r\n  
18890,     Bump NJsonSchema from 9 13 2 to 9 13 3 (#8457)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 2 to 9 13 3 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)  
18891,     Add gitkracken files to gitignore (#8434)\n\n  
18892,     Create release process issue template (#8417)\n\n* create release process issue template\r\n* Add a security issue template as well\r\n  
18893,     support for linuxmint in installpsh-debian sh (#8440)\n\nAdd #8437 - add linuxmint support  
18894,     Fix EnvironmentVariable test and add missing null check in CommandHelpProvider (#8408)\n\n* Disable NewItemUnauthorizedAccessError tests \r\n* Added expected value for $env:HOMEPATH for user with temporary profile \r\n* Added a missing null check in CommandHelpProvider cs\r\n  
18895,     Remove `dotnet` dependency to start WebListener (#8390)\n\nWebListener exe (which was already being built) is sufficient to start web listener  Remove the dependency on `dotnet` being present to start the web listener \r\n\r\nUse `Start-Process` instead of `Start-Job` to launch the WebListener  \r\n  
18896,     Enable install-powershell ps1 to use MSI (#8418)\n\n  
18897,     Reset output attributes if column had ESC char when using `Format-Table`; Replace `   ` with unicode ellipsis (#8326)\n\nchange ellipsis when truncating to single unicode character\r\nreset console output if previous column contains ESC\r\nupdate existing format-table tests\r\n\r\nIf content included a VT100 ESC sequence (like changing color)  this affected all output after that cell in the table   Fix is to detect that a cell contained ESC and reset the console after it   Also  change the 3 character ellipsis `   ` to use the single unicode character `…` so that more text is available \r\n\r\nFix    com/PowerShell/PowerShell/issues/7767\r\n  
18898,     Bump `Markdig Signed` from `0 15 4` to `0 15 5` (#8444)\n\nBumps [Markdig Signed (   com/lunet-io/markdig) from 0 15 4 to 0 15 5   
18899,     Merge `release-v6 2 0-preview 3` to `master`\n\nRelease v6 2 0 preview 3  
18900,     Update Third Party Notices (#8415)\n\nUpdate ThirdPartyNotices\r\n  - update the TPN in license rtf\r\n  - add the additional attributions needed to generate the TPN  
18901,     Merged PR 6225: Change log for 6 2 0-preview 3 release\n  
18902,     Address Joey s feedback\n  
18903,     Fix spellings\n  
18904,     Address Dongbo s comments\n  
18905,     Added missing codeblocks\n  
18906,     Address Steve s comments\n  
18907,     Remove the no longer used `RunspaceConfigurationEntry` types (#8424)\n\n  
18908,     Remove unneeded catch/throw from  mkdir  and  oss  functions (#8425)\n\n  
18909,     Remove comments after closing brackets (#8344)\n\n  
18910,     Intial draft of changelog\n  
18911,     Adding yml for Windows Release builds (#8374)\n\n\r\n  
18912,     Bump NJsonSchema from 9 13 1 to 9 13 2 (#8422)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 13 1 to 9 13 2   
18913,     Recommend Azure DevOps extension inside VS-Code for better YAML editing  (#8403)\n\nThis enhances the editing experience for YAML inside VS-Code (syntax highlighting and autocompletion) \r\nFor more details  see    visualstudio com/items?itemName=ms-azure-devops azure-pipelines  
18914,     Merged PR 6201: Update docs and csproj version\n\nUpdate docs and csproj version\n  
18915,     Bump NJsonSchema from 9 12 7 to 9 13 1 (#8412)\n\n  
18916,     Bump Microsoft PowerShell Native from 6 2 0-preview 2 to 6 2 0-preview 3 (#8411)\n\n  
18917,     Update folder path for storing optimization profile and add test to validate loaded assemblies and libraries on startup (#8406)\n\n- Update folder path for storing optimization profile file \r\n- Add test to validate loaded assemblies and libraries on startup   
18918,     More changes and cleanup to reduce the startup time (#8396)\n\nMajor changes are:\r\n- Rename `s_wasSystemPolicyDebugPolicy` to `s_allowDebugOverridePolicy` to make it less confusing  Also slightly refactor `HelperSecurity psm1` and `ConstrainedLanguageDebugger Tests ps1` to remove unneeded code  There is no functional change in this commit \r\n- Remove the unneeded static property `IsInbox`  as PowerShell Core won t be shipped in-box with Windows in the foreseeable feature  Even if we do in future  we won t be needing it because Windows PowerShell will probably be gone by that time \r\n- Update  BindRunspace  to avoid getting all commands and unneeded method calls \r\n- Avoid creating a `IsSafeValueVisitor` every time when `IsScriptBlockInFactASafeHashtable` runs   
18919,     Update the name of the artifact to be unique per artifact (#8405)\n\n  
18920,     Create unified release build for macOS and Linux packages (#8399)\n\nCreate unified release build for macOS and Linux packages\r\n  - Also  updated the definition with latest definitions from the definitions in use \r\n\r\nI will work on these in future PRs:\r\n\r\n- Add compliance Job\r\n- Add macOS Signing step\r\n- Merging Windows into the YAML  
18921,     Add `Enable-ExperimentalFeature` and `Disable-ExperimentalFeature` cmdlets (#8318)\n\n[breaking change \r\nMajor changes are as follows:\r\n- Add `Enable-ExperimentalFeature` and `Disable-ExperimentalFeature` cmdlets \r\n- Remove `-ListAvailable` from `Get-ExperimentalFeature` \r\n- Add `ArgumentCompleter` for `Get-ExperimentalFeature` cmdlet \r\n- Refactor some existing Experimental Feature tests \r\n- Make `ConfigScope` public and renamed `SystemWide` to `AllUsers`  Also update experimental feature code to prefer the current user config over the all user config   
18922,     Add Linux ARM64 build support (#8016)\n\n  
18923,     Expose all cmdlets from PSDiagnostics if logman exe is available (#8366)\n\n  
18924,     Update the timeout of CI builds (#8398)\n\n  
18925,     Update resgen  typegen to use  Net Core 2 1 (#8369)\n\n  
18926,     Remove dependabot attribution and generate changelog sections using `CL-*` labels (#8386)\n\n* Remove dependabot attribution from change log \r\n* Create sections in generated change log using the `CL-*` labels   
18927,     Fix an intermittent failure in macOS logging tests (#8385)\n\nFix an intermittent failure in macOS logging tests\r\n  - make tests wait for the correct number of log entries\r\n  - make tests not fail with an `Index was outside the bounds of the array ` error  
18928,     Bump NJsonSchema from 9 12 6 to 9 12 7 (#8384)\n\n  
18929,     Change Newtonsoft deserializing bug comment to link to the new issue (#8377)\n\nThis is a follow up to reverted PR #8346  I removed a workaround that was used to avoid [a Newtonsoft Json bug (   com/JamesNK/Newtonsoft Json/issues/1321) that caused some incomplete json array input to successfully be deserialized \r\n\r\nThis bug being fixed  I thought the workaround was unnecessary  but after the merge some feature tests started to fail (which I did not run prior to merging) \r\n\r\nIt was discovered that the workaround is still needed because while the first Newtonsoft Json bug was fixed  some cases of incomplete json array input still behave unexpectedly  namely json input `[`  \r\n\r\nThis PR is just to update the comment explaining the workaround so it links to the newly created issue [here (   com/JamesNK/Newtonsoft Json/issues/1930) \r\n  
18930,     Bump PackageManagement from 1 2 3 to 1 2 4 in /src/Modules (#8383)\n\nBumps PackageManagement from 1 2 3 to 1 2 4 \r\n  
18931,     Remove all reference to AppVeyor and Travis CI from docs (#8376)\n\n  
18932,     Improve powershell startup time (#8341)\n\nMajor changes are as follows:\r\n- Avoid `SecuritySupport IsProductBinary` and unnecessary AMSI/suspicious code scan at startup time\r\n   - Update `CompiledScriptBlockData IsProductCode` to avoid unnecessary calls to `IsProductBinary`  which attempts to retrieve catalog signature of the target file \r\n   - Update `PerformSecurityChecks` to skip AMSI and suspicious code scan for the ` psd1` file that contains a safe `HashtableAst` only \r\n- Use customized `ReadOnlyBag` instead of `ImmutableHashSet` so that we can avoid loading the `System Collections Immutable dll` completely \r\n- Replace `SHA1` with `CRC32` when generating module analysis cache file name\r\n   - This remove the loading of `System Security Cryptography Algorithms dll` at startup\r\n- Move `ConvertFrom-SddlString` to C# to remove the `Utility psm1` file \r\n- Crossgen `Microsoft ApplicationInsights dll` and enable tiered compilation\r\n   - Even pwsh with crossgen assemblies spends a lot time in jitting at the startup  about `191 6ms` comparing with `24 7ms` for Windows PowerShell \r\n   - Jitting `Microsoft ApplicationInsights dll` takes about `51 6ms` \r\n   - By crossgen `Microsoft ApplicationInsights dll` and enable tiered compilation  the jitting time drops to about `98 9ms`   
18933,     Revert  Remove workaround for fixed invalid json array deserializing bug (#8346)  (#8375)\n\nRevert  Remove workaround for fixed invalid json array deserializing bug (#8346) \r\n\r\nThis reverts commit 60a4e2f346e22a6e16f3f8acf58fd69c54944664 \r\n\r\nThis change caused the test which verified the functionality this workaround enabled  to start failing\r\n  
18934,     Created a csproj to pin test modules and updated build psm1 accordingly (#8350)\n\n  
18935,     Fix Export-ModuleMember bug for scriptblocks having no context (#8363)\n\nExport-ModuleMember cmdlet throws an exception if module functions are exported across language boundaries (Windows only)   But a scriptblock LanguageMode property can be null if the scriptblock is created without a PowerShell context  and this can happen through the PowerShell API called from C#   In this case Export-ModuleMember throws erroneously when no language mode restrictions are in play \r\n\r\nFix is to check if LanguageMode is null before comparing context and scriptblock language modes \r\n  
18936,     Bump NJsonSchema from 9 12 5 to 9 12 6 (#8371)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 12 5 to 9 12 6 \r\n- See full diff in [compare view (   com/rsuter/NJsonSchema/commits)\r\n[![Dependabot compatibility score (   dependabot com/badges/compatibility_score?dependency-name=NJsonSchema&package-manager=nuget&previous-version=9 12 5&new-version=9 12 6) (   com/compatibility-score html?dependency-name=NJsonSchema&package-manager=nuget&previous-version=9 12 5&new-version=9 12 6)\r\n  
18937,     Fix `Get-Help` for advanced functions with MAML help content (#8353)\n\n  
18938,     Debug parameter now sets debugpreference to continue (#8195)\n\nWith this commit  users who invoke a command with -Debug will no longer be presented with a prompt asking them if they want to enter a nested prompt  continue execution  or halt execution entirely  Instead  any messages sent to the debug stream will simply be sent to the debug stream and the script will continue execution   
18939,     Remove workaround for fixed invalid json array deserializing bug (#8346)\n\n  
18940,     Conditionally mark getter/setter implementations virtual in generated classes (#8303)\n\nWhen implementing interfaces  PowerShell incorrectly produces non-virtual get/set methods for interface-defined properties \r\nThis commit adds a lookup method for interface-defined properties and marks get/set methods for properties with matching signatures virtual \r\n  
18941,     Fix for PSDrive creation with a UNC path with a trailing backslash or forward slash when combined with -Persist (#8305)\n\n  
18942,     Cleanup  #if !CORECLR  code (#8337)\n\n* NewWinEventCommand cs\r\n* CredSSP cs\r\n* WsManHelper cs\r\n* debugger cs\r\n* InternalHost cs\r\n* InitialSessionState cs\r\n* BaseTransportManager cs\r\n* Types_Ps1Xml cs\r\n* FileSystemProvider cs\r\n* Restore XmlResolver = null\r\n  
18943,     Update help content for TabCompletion tests only if it does not exist (#8355)\n\n  
18944,     Cleanup updatablehelpsystem and enable XSD validation on MAML help content (#8335)\n\n  
18945,     Remove `Persist` parameter from `New-PSDrive` on non-Windows platform (#8291)\n\n  
18946,     Bump Newtonsoft Json from 11 0 2 to 12 0 1 (#8348)\n\n  
18947,     Fix race condition to access powershell config json (#8249)\n\n  
18948,     Add SkipCA and SkipCN check requirement to WinRM/OMI HTTPS connection (#8279)\n\n  
18949,     Enable pipeline to sync PSGallery modules to AzArtifacts feed (#8316)\n\nCompare the PowerShell modules dependencies on PowerShell Gallery and sync them to AzDevOps artifacts feed if a newer is available  The release builds pick up modules from AzDevOps feed \r\n  
18950,     Build Alpine `tar gz` package in release builds (#8340)\n\nEnable building tar gz package for Alpine in release builds \r\n\r\n## PR Checklist\r\n\r\n- [x  [PR has a meaningful title (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x  [Summarized changes (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  [Change is not breaking (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#making-breaking-changes)\r\n- [x  [Make sure all ` h`  ` cpp`  ` cs`  ` ps1` and ` psm1` files have the correct copyright header (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n- [x  This PR is ready to merge and is not [Work in Progress (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---work-in-progress) \r\n    - If the PR is work in progress  please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready \r\n- **User-facing changes**\r\n    - [x  Not Applicable\r\n    - **OR**\r\n    - [   User-facing [Documentation needed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#pull-request---submission)\r\n        - [   Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x  Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [   [Make sure you ve added a new test if existing tests do not effectively test the code changed (   com/PowerShell/PowerShell/blob/master/ github/CONTRIBUTING md#before-submitting)\r\n        - [   [Add `[feature ` if the change is significant or affects feature tests (   com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines md#requesting-additional-tests-for-a-pr)\r\n  
18951,     Fix GetLocationCommand output type parameter set and style issues (#8324)\n\n  
18952,     Publish test package to AppVeyor daily build (#8273)\n\n  
18953,     Add fix for `Start-Job` initialization script should not be executed as trusted in system lockdown (#8284)\n\n  
18954,     Remove old  customPSSnapInType  parameter from PSSnapInInfo() (#8333)\n\n\r\n  
18955,     Cleanup  #if CORECLR  from some files (#8332)\n\n* CommonUtilities\r\n* CredSSP\r\n* WsManHelper cs\r\n* InternalHost\r\n\r\n  
18956,     Bump NJsonSchema from 9 12 3 to 9 12 5 (#8328)\n\n  
18957,     Test-Path: Return $false when given an empty or $null -Path/-LiteralPath value (#8080)\n\n  
18958,     Bump Microsoft CodeAnalysis CSharp from 2 9 0 to 2 10 0 (#8294)\n\n  
18959,     Bump PowerShellGet from 2 0 1 to 2 0 3 in /src/Modules (#8321)\n\n  
18960,     Bump PackageManagement from 1 2 2 to 1 2 3 in /src/Modules (#8320)\n\n  
18961,     Bump NJsonSchema from 9 12 2 to 9 12 3 (#8319)\n\n  
18962,     Token calculation fix for Get-Help executed on ScriptBlock for comment help  (#8238)\n\n  
18963,     Skip `Enter-PSHostProcess` tests on Appveyor due to PSReadline issue (#8317)\n\n  
18964,     Enable `Open Here` context menu on Windows to work with root of a drive (#8287)\n\nsupport being started by Windows Shell (Open Here) where a trailing slash followed by a quote is handled incorrectly\r\n  
18965,     Bump System Data SqlClient from 4 5 1 to 4 6 0 (#8266)\n\nBumps System Data SqlClient from 4 5 1 to 4 6 0   
18966,     Cleanup assemblyinfo (#8190)\n\nRemove old code from AssemblyInfo cs\r\n  
18967,     Change default issue template to use different categories (#8203)\n\nLeverage GitHub ability to have multiple options when user clicks  New Issue  to have better issues opened and direct users to Docs repo and UserVoice for Windows PowerShell issues \r\n  
18968,     Merge release-v6 2 0-preview 2 to master\n\nMerge Release-v6 2 0-preview 2  
18969,     Merged PR 5876: Update date in changelog\n\nUpdate date in changelog\n  
18970,     Merge changelogs from 6 1 1 and 6 0 5 into master (#8283)\n\n* Add 6 1 1 change log\r\n* Add 6 0 5 change log\r\n* Change filters for spelling CI  
18971,     Merged PR 5847: Create 6 2 0-preview 2 changelog\n\nCreate 6 2 0-preview 2\n  
18972,     Merged PR 5861: Update links README to point to latest version\n  
18973,     Merged PR 5863: Lowering Pester module version to avoid test infra failures on some Linux systems\n\nWithout this change package validation tests fail during Pester module import on some Linux systems \n  
18974,     Support  Get-PSHostProcessInfo  and  Enter-PSHostProcess  on Unix platforms (#8232)\n\nThere a some differences in support of named pipes for Windows and non-Windows   Named pipes on Unix have a 104 character path limit   On macOS  the `$env:TMPDIR` (on my system) is already 49 characters; corefx adds 12 more   Since AppDomainName isn t really used  changed it from `DefaultAppDomain` to `None` to shorten the name   Need to keep it since Windows PowerShell expects it   Changed `starttime` part of pipe name to 8 hex characters which is to provide uniqueness to the pipe name   
18975,     Remove AmazonLinux Dockerfile (#8271)\n\n  
18976,     Add cmdlet  Join-String  for creating text from pipeline input (#7660)\n\nThe cmdlet syntax is as follows:\r\n```\r\nJoin-String [[-Property  <pspropertyexpression>  [[-Separator  <string>  [-OutputPrefix <string>  [-OutputSuffix <string>  [-UseCulture  [-InputObject <psobject>  [<CommonParameters> \r\n\r\nJoin-String [[-Property  <pspropertyexpression>  [[-Separator  <string>  [-OutputPrefix <string>  [-OutputSuffix <string>  [-SingleQuote  [-UseCulture  [-InputObject <psobject>  [<CommonParameters> \r\n\r\nJoin-String [[-Property  <pspropertyexpression>  [[-Separator  <string>  [-OutputPrefix <string>  [-OutputSuffix <string>  [-DoubleQuote  [-UseCulture  [-InputObject <psobject>  [<CommonParameters> \r\n\r\nJoin-String [[-Property  <pspropertyexpression>  [[-Separator  <string>  [-OutputPrefix <string>  [-OutputSuffix <string>  [-FormatString <string>  [-UseCulture  [-InputObject <psobject>  [<CommonParameters> \r\n```  
18977,     Make `install-powershell sh` autodetect if it should use `wget` or `curl` (#8225)\n\ninstall-powershell sh now autodetects whether curl or wget is installed to download secondary script when it is not found locally   
18978,     Remove extra newlines from formatting which resulted in necessary double newlines (#8247)\n\n  
18979,     Merged PR 5822: Update version for dependencies\n\nUpdate version for dependencies\n  
18980,     Merged PR 5818: Port changes to allow AzDevOps NuGet feeds for Mac build\n\nPort changes to allow AzDevOps NuGet feeds for Mac build\n  
18981,     Consolidation of all Windows PowerShell work ported to PSCore6 (#8257)\n\nConsolidation of all Windows PowerShell work ported to PSCore6\r\n\r\n* Added ps1 file import restriction   Refactored InvokeLanguageModeTestingSupportCmdlet to HelpersSecurity module\r\n* JEA loop back fix   Debugger running commands in CL mode \r\n* Support for new AMSI codes   Changed to use AMSI buffer API   Unhandled exception fix \r\n* Fixes for module bugs while running in ConstrainedLanguage mode\r\n* Untrusted input tracking work\r\n* Configuration keyword bug fix  PSRP protocol version check for reconstruct reconnect  Sharing InitialSessionState in runspace pool \r\n* Restricted remote session in UMCI  Applocker detection collision  Help command exposing functions  Null reference exception fix \r\n* Added mitigation for debugger function exposure\r\n  
18982,     Update metadata for 6 0 5 and 6 1 1 releases (#8259)\n\n  
18983,     Fix incorrect name check when autoloading required modules (#8218)\n\n  
18984,     Update README for v6 1 1 (#8255)\n\n  
18985,     Fix CVE-2018-8415 (#8253)\n\nIf there is a null character in a scriptblock  translate it to a null replacement character before logging with scriptblock logging   
18986,     Fix CVE-2018-8256 (#8252)\n\n* Use ZipFile and ExtractToDirectory APIs to extract zip file\r\n\r\n* Update Microsoft PowerShell Archive version\r\n  
18987,     Make each installation of pwsh has its own  ModuleAnalysisCache  file (#8174)\n\n  
18988,     Bump NJsonSchema from 9 12 0 to 9 12 1 (#8248)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 12 0 to 9 12 1 \r\n  
18989,     Remove tilde from Linux preview packages (#8244)\n\nRemove tilde from Linux preview packages \r\n  - Since we have a separate package for preview  we don t need a second indicator that these packages are preview \r\n  - Also  many system we use to release don t like the `~` character  which leads to manual interventions and errors \r\n  
18990,     Revert  Ignoring backspace for empty lines on stdin/stdout mode (#8196)  (#8239)\n\nThis reverts commit b525b1f0bde65f0c59ccd9bbfe25d1459fcff1a3   
18991,     Update SignType in signing xml (#8223)\n\n  
18992,     Ignoring backspace for empty lines on stdin/stdout mode (#8196)\n\n  
18993,     Fix tests running in Azure DevOps (#8220)\n\n  
18994,     Add path filters to CI YAML (#8222)\n\n* Filter spelling to only PRs with `* md` files\r\n* filter common paths in CI yml  
18995,     Fix Rename-Item -Path with wildcard char (#7398)\n\n  
18996,     Propose fix some typos (#8206)\n\n  
18997,     Add test coverage for additional Get-Module parameters (#8137)\n\n  
18998,     When using `Start-Transcript` and file exists  empty file rather than deleting (#8131)\n\n  
18999,     Add code to use private NuGet feeds when running in internal CI system (#8187)\n\nAdd code to use private NuGet feeds when running in internal CI system\r\n  
19000,     Remove `ShouldProcess` from Format-Hex (#8178)\n\n  
19001,     Fix script path for `PowerShellPackageVsts ps1` (#8189)\n\nFix mac build failure caused due to missing path   
19002,     Fix static secret in code (#8186)\n\n  
19003,     Workaround for accessing Az Artifacts (#8188)\n\nAdded a workaround for accessing Az Artifacts feed from release build  \r\n  - Also  converted the `sh` task to PowerShell \r\n  
19004,     Update mac release build to create the nuget config (#8185)\n\nUpdate the build definition to create the nuget config for the gallery modules   
19005,     Adding verbose output for experimental implicit remoting batching feature (#8166)\n\n  
19006,     Add function to create a new nuget config file (#8170)\n\nAdd a function to create a NuGet config file to consume packages  from the specified feed URL using the specified credentials   \r\n\r\n  - Also  exclude the `nuget config` file under `src/Modules` from being clean by `Start-PSBuild -clean`\r\n  
19007,     Load assembly from module base path before trying to load from GAC (#8073)\n\n[Breaking Change \r\nWhen a binary module has the module assembly in GAC  we load the assembly from GAC before trying to load it from module base path \r\n\r\nThis change attempts to load it from module base path before looking up in GAC   
19008,     Remove build and doc references to Git submodules (#8177)\n\nAs of #7892  the PowerShell repository no longer uses Git submodules \r\nThis is fantastic from a workflow standpoint  and so all the notes about\r\nhow to deal with submodules (and all the build steps explicitly\r\ninitializing and updating submodules) can be safely removed \r\n\r\n  
19009,     Adding yml for Linux builds (#8168)\n\nAs part of improving the build process  the UI build pipeline for Linux Builds was converted to a yml-based pipeline \r\n  
19010,     Remove #7633 from v6 2 0-preview 1 Changlog updates  (#8101)\n\n  
19011,     Bump NJsonSchema from 9 11 1 to 9 12 0 (#8183)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 11 1 to 9 12 0 \r\n  
19012,     Refactor module version/GUID comparison logic (#7125)\n\n  
19013,     Update URLs to use `https` instead of `http` in docs (#8165)\n\n  
19014,     Add title to Open Here window for MSI installer (#8164)\n\nSince we don t explicitly set the window title  it just shows the path to `pwsh exe`  Fix is to use the `-Command` parameter to set the window title \r\n\r\nFix #8163\r\n\r\n  
19015,     Simple grammatical correction in `README md` file (#7978)\n\n  
19016,     Fix conflict with `Get-AdlStoreChildItem` from `az` module in tab completion tests (#8167)\n\n  
19017,     Promote https (#8160)\n\n* Promote https in extensions json\r\n* Promote https in code-of-conduct\r\n  
19018,     Error message enhancement for clear-content cmdlet when targeting a directory (#8134)\n\n  
19019,     Use approved verb instead of Generate-CrossGenAssembly (#8151)\n\n  
19020,     Create $PROFILE if it does not exist for `-WorkingDirectory` processing test  (#8152)\n\n  
19021,     Make PSVersionInfo PSVersion and PSVersionInfo PSEdition public (#8054)\n\n  
19022,     Use DefaultPathSeparator char instead of DefaultPathSeparatorString (#8082)\n\nIn:\r\n* SessionStateLocationAPIs\r\n* FileSystemProvider\r\n* LocationGlobber\r\n* NavigationProviderBase\r\n  
19023,     Remove duplicate parts from license file (#8143)\n\nAll rights reserved had been duplicated in the license file and removed duplicating one necessarily  
19024,     Experimental feature: Implicit remoting batching perf improvement (#8038)\n\n  
19025,     Honor `-OutputFormat` if specified in noninteractive  redirected  encoded command used with pwsh (#8115)\n\n[Breaking Change \r\n\r\nThere is specific code that sets the `OutputFormat` to xml if pwsh is run non-interactive  with redirected output  and the command was encoded   However  it ignored whether OutputFormat was specified   Fix is to track whether `-OutputFormat` was used and respect that value rather than defaulting to xml \r\n\r\nFix    com/PowerShell/PowerShell/issues/5912\r\n  
19026,     Updated Pester Syntax in Writing Tests Guide (#8039)\n\n- Modified the Pester syntax for the `-Be` assertion (instead of just `Be`) to reflect the preferred use per latest version of Pester \r\n- Added an example showing use of `-BeOfType` to test the type of a variable \r\n- Other minor changes for grammar \r\n  
19027,     build: fix Start-PSBuild -Output (#7504)\n\nMake Start-PSBuild -Output $OutDir output the build to the directory properly \r\n  
19028,     Cleanup: Remove clone of command-line args array (#7910)\n\n  
19029,     Update license rtf to only have major version (#8127)\n\nGuidance is that we can just have the major version at the top  PowerShell 6  and not worry about updating the minor version with each release   The change is on line 230   Word made the other changes to the RTF \r\n  
19030,     Added updated photo of VScode due to new version of VScode (#8084)\n\n  
19031,     Filter the TestPackage artifact upload by name to avoid other zip files being uploaded  (#8116)\n\n  
19032,     move processing of `-WorkingDirectory` before processing of profiles (#8079)\n\n  
19033,     Bump xunit from 2 4 0 to 2 4 1 (#8140)\n\n  
19034,     Bump xunit runner visualstudio from 2 4 0 to 2 4 1 (#8139)\n\n  
19035,     Enable case-insensitive tab completion for files and folders on case-sensitive filesystem (#8128)\n\n  
19036,     Add Microsoft Docs link to FAQ (#8133)\n\nLinked to the Microsoft Docs for PowerShell as a reference on where to learn PowerShell s syntax   
19037,     Update powershell-beginners-guide md to add alias for `Clear-Host` (#7912)\n\n  
19038,     Reduce allocations in Get-Content cmdlet (#8103)\n\n* Simplify main loop in ReadDelimited() by bringing out raw stream code\r\n* Remove unused constructor\r\n* Allocate buffer for current line once in constructor\r\n* Use Span buffer to significantly reduce allocations\r\n* Optimize Boyer-Moore  Use simple mapping Unicode chars to byte  It works well for common text files with chars from one-two languages \r\n  
19039,     Update installpsh amazonlinux for container build (#7907)\n\n  
19040,     Enable Set-Location -LiteralPath to work with folders named  -  and  +  (#8089)\n\n  
19041,     Add a path for checking ZoneInformation without throwing an exception (#8025)\n\n  
19042,     Publish test package at AGENT_WORKFOLDER if TEMP is not available (#8108)\n\n  
19043,     Enable `Add-Content` to share read access to other tools while writing content (#8091)\n\n  
19044,     Fix typo in `-icontains` description from incase sensitive  to  case insensitive  (#7840)\n\n  
19045,     Added  Learn Windows PowerShell in a Month of Lunches  as recommended reading (#8067)\n\n  
19046,     Bump Microsoft ApplicationInsights from 2 8 0 to 2 8 1 (#8104)\n\n  
19047,     Fix static method invocation type inference (#8018)\n\nFixes type inference for static method invocations (e g  [powershell ::Create())   
19048,     Replace StringComparision CurrentCulture with StringComparision Ordinal (#8068)\n\n  
19049,     Fix `psmodulerestore` path when built in VSCode (#8075)\n\n  
19050,     Correct typos in powershell-beginners-guide md (#8088)\n\n  
19051,     Add functionality to create a test package (#8087)\n\n  
19052,     Fix logic to not rely on build number to determine whether to output formatdata (#8063)\n\n  
19053,     Style fixes in Format-Hex (#8083)\n\n  
19054,     Combine notes about `ITuple` changes in Change Log (#8077)\n\n  
19055,     Update the codeowners (#8017)\n\n  
19056,     Adding fxdependent PS package tests (#7830)\n\n  
19057,     Update license RTF to 6 2 (#8065)\n\n  
19058,     Allow dynamic parameter to be returned even if path matches nothing (#7957)\n\n  
19059,     Add -Name  -NoUserOverrides and -ListAvailable parameters to Get-Culture cmdlet (#7702)\n\nAdd new parameters in Get-Culture cmdlet:\r\n-Name - to allow retrieving a specific culture\r\n-NoUserOverrides - ignore user changes for current culture\r\n-ListAvalable - to allow retrieving all cultures supported on the platform  
19060,     Fix spellings in CHANGELOG md (#8062)\n\n  
19061,     Add new Offset and Count parameters to Format-Hex and refactor the cmdlet (#7877)\n\n- Add new Offset and Count parameters \r\n- Modify ByteCollection class to support offsets up to UInt64 MaxValue size \r\n- Hide/obsolete Raw parameter because the behavior is by default \r\n- Optimize conversion to bytes to reduce allocations for large input data   
19062,     Make Select-String faster by not doing extra work (#7673)\n\nBy not tracking context in the common case where Context size is 0 (using new NoContextTracker class)  and by not checking if the full name of a FileInfo is a Directory  about 30% of the execution time is cut when piping files into Select-String   
19063,     Add Type Inference for $_ / $PSItem in catch    blocks (#8020)\n\n  
19064,     Merge release-v6 2 0-preview 1\n\nRelease v6 2 0 preview 1  
19065,     Merged PR 5380: 6 2 0-preview 1 changelog draft\n\n6 2 0-preview 1 changelog\n  
19066,     Update README md (#8059)\n\nFixed some spelling and grammar   
19067,     Merged PR 5382: Add missing dependency\n\nAdd missing dependency\n  
19068,     Merged PR 5379: Improve debugging of nuget package generation and add type to filtering\n  
19069,     Merged PR 5363: Version and doc changes\n\nVersion and doc changes\n  
19070,     Bump PackageManagement from 1 2 1 to 1 2 2 in /src/Modules (#8029)\n\n  
19071,     Add prompt to the use of less in the function  help  to instruct user how to quit (#7998)\n\n  
19072,     Update Pester to use latest version (#8015)\n\n  
19073,     Bump PackageManagement from 1 1 7 2 to 1 2 1 in /src/Modules (#8014)\n\n\r\n  
19074,     Allow root node of format ps1xml to have attributes that are ignored (#7987)\n\n  
19075,     Improve error message on non-Windows when importing clixml with securestring (#7997)\n\n  
19076,     Fix BeginInvoke/EndInvoke to return results when Stop or BeginStop/EndStop was called previously (#7917)\n\nThe root cause is that `OutputBuffer` is not cleaned up (set to `null`) in `Stop` and `BeginStop/EndStop` when the powershell instance owns the `OutputBuffer` object  Since the pipeline has been intentionally stopped by the caller  the `OutputBuffer` should be set to `null` as well when it s owned by the PowerShell instance  just like how it s cleaned up in `EndInvoke`   
19077,     Remove PDBs from fxdependent pacakge (#8006)\n\n  
19078,     Change API to match cmdlet which is more reliable in AzDevOpsPipelines Windows (#8003)\n\n  
19079,     Remove package tests as we have DependABot enabled to keep packages updated (#8001)\n\n  
19080,     Bump Microsoft ApplicationInsights from 2 7 2 to 2 8 0 (#8002)\n\nBumps [Microsoft ApplicationInsights (   com/Microsoft/ApplicationInsights-dotnet) from 2 7 2 to 2 8 0 \r\n- [Release notes (   com/Microsoft/ApplicationInsights-dotnet/releases)\r\n- [Changelog (   com/Microsoft/ApplicationInsights-dotnet/blob/develop/CHANGELOG md)\r\n- [Commits (   com/Microsoft/ApplicationInsights-dotnet/compare/2 7 2   2 8 0)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
19081,     Revert  Only display properties with values for MeasureInfo (#7104)  (#7754)\n\nThis reverts commit 87ccd0aa40a064238567c400b4e4b6a80802211c until\r\nsecurity review of the public api has been completed   
19082,     Fix Property and ScriptBlock expressions in EntrySelectedBy tags within custom controls (#7913)\n\nSend the current object when evaluating `EntrySelectedBy` in a custom control definition\r\n\r\n  
19083,     Add support for Byte Literals (#7901)\n\n- Adds y suffix that is used to specify a numeric literal as the sbyte data type  \r\n- Can be combined with the existing u suffix as uy to specify the byte data type   
19084,     Bump NJsonSchema from 9 11 0 to 9 11 1 (#7990)\n\nBumps [NJsonSchema (   com/rsuter/NJsonSchema) from 9 11 0 to 9 11 1 \r\n- [Release notes (   com/rsuter/NJsonSchema/releases)\r\n- [Commits (   com/rsuter/NJsonSchema/commits)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
19085,     Fix the  Basic cookbooks  link (#7934)\n\n  
19086,     Use dotnet test since the dotnet xunit test runner has been deprecated (#7980)\n\n  
19087,     Fix `Enter-PSSession -ContainerId` for the latest Windows (#7883)\n\nHyper-V team changed the type used to get the `runtimeid`  We need to check for new type and fall back to old type   
19088,     Add cURL to the Bash users list in README md (#7948)\n\n\r\n  
19089,     Converting aliases to cmdlets in  build psm1  (#7964)\n\n  
19090,     Standardize Pester syntax in  ReplaceOperator Tests ps1  (#7963)\n\n  
19091,     Bump Xunit SkippableFact from 1 3 6 to 1 3 12 (#7972)\n\nBumps [Xunit SkippableFact (   com/AArnott/Xunit SkippableFact) from 1 3 6 to 1 3 12 \r\n- [Release notes (   com/AArnott/Xunit SkippableFact/releases)\r\n- [Commits (   com/AArnott/Xunit SkippableFact/compare/v1 3 6   v1 3 12)\r\n\r\nSigned-off-by: dependabot[bot  <support@dependabot com>  
19092,     Update Markdig Signed NuGet package from 0 15 3 to 0 15 4 (#7960)\n\n  
19093,     Use params in ImportPSModule (#7933)\n\n  
19094,     No longer skips a column without name if double quote delimiter is used in Import-Csv (#7899)\n\n  
19095,     Specify verb  `pwsh`  for shell context menu to avoid overriding the default verb (#7932)\n\n  
19096,     Remove unused commented out code (#7935)\n\n  
19097,     Update governance md (#7927)\n\nRemoved plural and added comma where necessary   
19098,     Update to  NET Core 2 1 5 with SDK 2 1 403 (#7936)\n\n  
19099,     Change default of `Start-PSBuild` to include `-PSModuleRestore` (#7881)\n\n  
19100,     Add dependencies for SUSE (#7938)\n\n  
19101,     Remove last hang term (#7931)\n\n  
19102,     Updating incorrect example of PowerShell Create() (#7926)\n\n  
19103,     Add test for $error[0  tab completion (#7924)\n\n  
19104,     Make Add-Type open source files with FileAccess Read and FileShare Read explicitly (#7915)\n\n  
19105,     Add XSDs for Format and Types ps1xml files (#7832)\n\nThese can be used for autocompletion and validation in editors  
19106,     Cleanup all native code from repository (#7892)\n\nNative code for PowerShell has been moved to repository PowerShell/PowerShell-Native \r\n\r\nHence  removing all the native code and related build components   
19107,     Update package minor versions (#7922)\n\n  
19108,     Add EscapeHandling parameter in ConvertTo-Json cmdlet (#7775)\n\nAdd EscapeHandling parameter in ConvertTo-Json cmdlet to allow escape the HTML (<  >  &  \    ) and control characters (e g  newline)   
19109,     Use nameof() in bound parameters contains key() (#7908)\n\nReplace code like BoundParameters ContainsKey( Delimiter ) with BoundParameters ContainsKey(nameof(Delimiter))  Old pattern come from old C# (<6 0) without nameof()   
19110,     Replace hang term (#7902)\n\n  
19111,     Revert  install-powershell sh: Adding autodetection of curl / wget  due to regression from PR #7893 (#7918)\n\nThis reverts commit 4831a9fd639e9386075f0622710675105c43cff9   
19112,     install-powershell sh: Adding autodetection of curl / wget (#7893)\n\ninstall-powershell sh now autodetects whether curl or wget is installed to download secondary script when it is not found locally   
19113,     Replace test certificates with self-signed certificate generating command (#7875)\n\n  
19114,     Add  editorconfig (#7357)\n\nRelated #4708 \r\n\r\nThe  editorconfig file can be used by various editors and tools like Visual Studio and CodeFormatter \r\n\r\nThe  editorconfig comes from Roslyn and CoreFX repositories:\r\n   com/dotnet/corefx/blob/master/ editorconfig\r\n   com/dotnet/roslyn/blob/master/ editorconfig\r\n\r\nDescription    org\r\n\r\nOptions    microsoft com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference  
19115,     Remove unused stopwatch (#7878)\n\n  
19116,     Optimize Images!   (#7874)\n\nMy pal @ImgBotApp optimized all the images present in the repository \r\n\r\n  
19117,     Ffixing syntax error in installpwsh-amazonlinux sh (#7905)\n\n* Fix syntax error for issue 7903  Typo come from #6849 \r\n\r\n* Add identation after copyright message\r\n  
19118,     Add  %F  case to Get-Date -UFormat (#7630)\n\n  
19119,     Test changes needed for running in a container (#7869)\n\n  
19120,     Ensure NestedModules property gets populated by Test-ModuleManifest (#7859)\n\n  
19121,     Add C#-style type accelerators and suffixes for ushort  uint  ulong  and short literals (#7813)\n\n[breaking change \r\nAdd the following type accelerators: [short   [ushort   [uint   [ulong  \r\nAdd the following numeric literal suffixes:\r\n -  u  suffix (uint/ulong)\r\n -  s  suffix (short)\r\n -  ul  suffix (ulong)\r\n -  us  suffix (ushort)  
19122,     Get/Add-Content throws improved error when targeting a container (#7823)\n\n  
19123,     Add version checking tests for Import-Module (#7499)\n\n  
19124,     Updating test gallery URL in PackageManagement tests (#7879)\n\n  
19125,     Add  TimeToLive  and  Hops  aliases to MaxHops parameter of Test-Connection cmdlet  (#7850)\n\nAdd the following aliases to MaxHops parameter of Test-Connection cmdlet:\r\n- TimeToLive\r\n It is the similar parameter s name from Windows PowerShell Test-Connection cmdlet  \r\n- Hops\r\n Similar parameter s name from Test-NetConnection cmdlet \r\n  
19126,     Clean up MshObject cs and MshMemberInfo cs (#7446)\n\nClean up style issues   
19127,     Bump Microsoft PowerShell Native from 6 1 0-rc 1 to 6 1 0 (#7861)\n\n  
19128,     Make Start-PSPackage give better message about how to fix  files wxs  (#7841)\n\n  
19129,     Update PowerShellGet to 2 0 0 (#7831)\n\n  
19130,     update markdown tests (#7838)\n\nupdate markdown tests\r\n\r\n  - explicitly use gulp 4 0 beta because 3 9 depends on a vulnerable package  
19131,     Improve markdown Formatting of beginners guide (#7684)\n\n  
19132,     Update to  NET Core 2 1 4 with SDK 2 1 402 (#7834)\n\n  
19133,     [Feature  Fix  NET adapter to be able to get members from System IntPtr (#7808)\n\nThe type System IntPtr has an explicit cast operator defined that takes a pointer type System void* parameter  Now we handle that type properly in GetPSMethodProjectedType   
19134,     Create inferred types for `Select-Object`  `Group-Object`  `PSObject` and `Hashtable` (#7231)\n\nFixes #7230 \r\n\r\nAdding the concept of a PSSyntheticTypeName  derived from PSTypeName \r\nthat extends it with a list of synthetic members \r\n\r\nThis allows us to express the inferred type of\r\n```\r\n[pscustomobject  @ \r\n   A = 1\r\n   B =  2 \r\n \r\n```\r\nas a  PSObject#A:B  and with information about the types of A and B \r\n\r\nThis is also used to annotate the output of\r\n```\r\nSelect-Object -Property\r\nSelect-Object -ExcludeProperty\r\nSelect-Object -ExpandProperty\r\n```\r\nFinally  it adds information about the types of the\r\n`Group` and `Value` properties of the output of `Group-Object`  
19135,     Remove extra space in LastWriteTime format (#7810)\n\n  
19136,     Allow numeric Ids and name of registered code pages in \ -Encoding\  parameters (#7636)\n\nEnhance the encoding transformation attribute:\r\n- to allow numeric Ids of registered code pages (like -Encoding 1251)\r\n- to allow string names of registered code pages (like -Encoding  windows-1251 )\r\n  
19137,     Add support for  cd +  (#7206)\n\n cd +  adds the ability to revert  cd -  by having another bounded stack with the same limit for  redo  actions \r\nBehaviour is similar to back/forward navigation in explorer exe\r\nWhen the location is set to a path and the redo stack is non-empty then the redo stack gets flushed \r\nWhen cd + happens  then the redo stack is pushed to as well for a more intuitive way of navigating backwards and forwards \r\nAll the work is done of course on the Set-location cmdlet  which is aliased to cd on all platforms   
19138,     Add tests for Import-Module -Force (#7491)\n\n  
19139,     Remove badges for master build as it reflects last PR which is not actionable from the README file (#7816)\n\n  
19140,     Wait for package manager not to be locked (#7817)\n\n  
19141,     Remove packaging  building and installation scripts for Ubuntu 17 10 (#7773)\n\n  
19142,     update build badges (#7792)\n\n  
19143,     Updating ModulePath Tests for fxdependent package (#7772)\n\n  
19144,     Fix  NET adapter to not throw when fails to create a PSMethod due to ByRef-like type (#7788)\n\n  
19145,     [Breaking change  Do not add PATHEXT environment variable on Unix (#7697)\n\n* Don t create env:PATHEXT on Unix\r\n* Use IsExecutable()\r\n* Add conditional compile\r\n\r\n  
19146,     Merge branch  release-v6 1 0  into master\n\n# Conflicts:\n#\t spelling\n#\ttools/metadata json\n  
19147,     Merged PR 4989: Update the release date\n\nUpdate the release date\n  
19148,     Merged PR 4985: Update metadata json for 6 1 0 release\n\nUpdate metadata json for 6 1 0 release\n  
19149,     Disable travis-ci (#7766)\n\n  
19150,     Support calling method with ByRef-like type parameters (#7721)\n\nSupport calling methods with ByRef-like type parameters in PowerShell  as long as the argument specified for the parameter can be implicitly/explicitly converted to the ByRef-like type \r\n\r\nWe cannot create an instance of a ByRef-like type in PowerShell  but there are types that can be implicitly or explicitly converted to ByRef-like types  such as `T[  -> Span<T>`  `T[  -> ReadOnlySpan<T>`  `String -> ReadOnlySpan<T>`  `ArraySegment<T> -> Span<T>`  `ArraySegment<T> -> ReadOnlySpan<T>`  With changes in this PR  we can call methods with ByRef-like parameter types by providing the arguments of the types that can be cast to the target ByRef-like type \r\n\r\n**What is enabled?**\r\n1  Invoking methods that have ByRef-like parameters  but the return type is not ByRef-like \r\n2  Invoking constructors with ByRef-like parameters via `[target-type ::new` syntax  but the `target-type` is not ByRef-like \r\n3  Accessing indexers that have ByRef-like parameters  but the return type is not ByRef-like   
19151,     Merged PR 4961: Update versions in README md\n  
19152,     Reference to the latest version of  NJsonSchema  package (#7764)\n\n  
19153,     Merged PR 4959: Update the ChangeLog md for 6 1 0 release\n  
19154,     Fix pipeline test where SmtpServer key was set wrong in pipeline object (#7745)\n\nFix SmtpServer key (was $SmtpServer) in hashtable object \r\nRemoved double quotes for all keys in hashtable object \r\n  
19155,     Add unified attribute for completion for Encoding parameter  (#7732)\n\nProvide a tab completion attribute (ArgumentEncodingCompletionsAttribute) for an Encoding parameter \r\nThis PR should fix the duplicated code warning in CodeFactor\r\n  
19156,     Make sure MSI build works when not preview (#7752)\n\nThe variable was set to empty (meaning to delete the variable) in the non-preview case and the build fails \r\nThe fix avoids setting the variable to empty  
19157,     Make sure MSI build works when not preview (#7752)\n\nThe variable was set to empty (meaning to delete the variable) in the non-preview case and the build fails \r\nThe fix avoids setting the variable to empty  
19158,     Update version for powershell release 6 1 0 (#7751)\n\n  
19159,     Update version for powershell release 6 1 0 (#7751)\n\n  
19160,     Ensure the `SSHClientSessionTransportManager` stream writer and reader fields are cleared after dispose   (#7746)\n\nFix possible race conditions accessing the fields during CloseConnection   
19161,     Build and package framework dependent package (#7729)\n\nAdd the functionality to build a framework dependent (shared framework) package for PowerShell \r\n\r\nThe changes create two packages  one for Windows and other for Linux  due to #if code   
19162,     Build and package framework dependent package (#7729)\n\nAdd the functionality to build a framework dependent (shared framework) package for PowerShell \r\n\r\nThe changes create two packages  one for Windows and other for Linux  due to #if code   
19163,     Ensure the `SSHClientSessionTransportManager` stream writer and reader fields are cleared after dispose   (#7746)\n\nFix possible race conditions accessing the fields during CloseConnection   
19164,     Cleanup FileSystemProvider from runtime checks (#7655)\n\nReplace runtime checks with compile time checks \r\nRemove unneeded methods \r\n  
19165,     Improve code style of Send-MailMessage cmdlet (#7723)\n\n  
19166,     update metadata json in preparation for 6 1 release (#7741)\n\nReleaseTag is now StableReleaseTag\r\nNextReleaseTag is not PreviewReleaseTag\r\nAdded ServicingReleaseTag for the N-1 Stable release  
19167,     Update CONTRIBUTION md about adding an empty line after the copyright header (#7706)\n\n  
19168,     Update PowerShell to handle the case where the Windows PowerShell module path is already in the environment s `PSModulePath` (#7727)\n\n\r\nThis change updates ModuleIntrinsics GetModulePath to handle the case where the Windows PowerShell module path is already in the environment s PSModulePath or when launched from a different version of PowerShell \r\n\r\nPreviously  GetModulePath would append $PSHOME\\Modules to the PSModulePath after removing the path for the launching version without considering the Windows PowerShell module path  The result  was the Windows PowerShell modules were found first and loaded incompatible modules; such as the built-in modules \r\n\r\nThe change detects the Windows PowerShell module path and inserts $PSHOME\\Modules path before it  The new test simulates launching from a different version of pwsh that has already added the Windows PowerShell module path \r\n\r\nFixes #7679   
19169,     Cleanup FileSystemProvider from runtime checks (#7655)\n\nReplace runtime checks with compile time checks \r\nRemove unneeded methods \r\n  
19170,     Improve code style of Send-MailMessage cmdlet (#7723)\n\n  
19171,     update metadata json in preparation for 6 1 release (#7741)\n\nReleaseTag is now StableReleaseTag\r\nNextReleaseTag is not PreviewReleaseTag\r\nAdded ServicingReleaseTag for the N-1 Stable release  
19172,     Update CONTRIBUTION md about adding an empty line after the copyright header (#7706)\n\n  
19173,     Fix docker image names for release build (#7726)\n\n  
19174,     Add daily build non-windows platforms (#7683)\n\nAdd daily build non-windows platforms\r\n  - Also  make the [Feature  tag work in VSTS for non-windows\r\n  - Also  add a way to force feature tests to run\r\n  - Also  fix an issue where `-workingdirectory` didn t work when running async \r\n  
19175,     update PSReadLine to 2 0 0-beta3 (#7711)\n\nUpdate PSReadLine shipped with PSCore6 to 2 0 0-beta3  
19176,     Make Windows MSI uninstallation shortcut remove work when more than one version is installed (#7701)\n\nFixes underlying problem of #3341  Related: #2881\r\nWhen multiple versions (e g  RTM and preview) of PowerShell are installed via the MSI and one is being uninstalled  then the start menu shortcut does not get removed due to the shortcut component being not unique per version  This also applies to an upgrade scenario  Therefore use an auto-generated Guid (`*`)  
19177,     Fix a typo in Credential cs  (#7696)\n\n  
19178,     update njsonschema (#7705)\n\n  
19179,     Fix docker image names for release build (#7726)\n\n  
19180,     Add daily build non-windows platforms (#7683)\n\nAdd daily build non-windows platforms\r\n  - Also  make the [Feature  tag work in VSTS for non-windows\r\n  - Also  add a way to force feature tests to run\r\n  - Also  fix an issue where `-workingdirectory` didn t work when running async \r\n  
19181,     Add VSTS CI build badges for master branch to README md (#7691)\n\n  
19182,     Add a paragraph on files wxs updating (#7695)\n\n  
19183,     Fix module specification hashtable in ModuleSpecification Tests ps1 (#7663)\n\n  
19184,     Updates to Docker package tests (#7667)\n\n  
19185,     Fix perf issue in provider by using Refresh() to update the status rather than instantiating ServiceController which has a significant perf degradation from  NET Framework (#7680)\n\n  
19186,     Fix file blocking issue with webcmdlets (#7676)\n\n  
19187,     Change locale of mdspell to en-US (#7671)\n\nUpdate the locale to use en-us for mdspell checker   
19188,     Add tests to report when package references are out of date (#7661)\n\nAdd tests to report when package references are out of date\r\n  - Also  update the packaging script to generate updated `files wxs`  
19189,     update PSReadLine to 2 0 0-beta3 (#7711)\n\nUpdate PSReadLine shipped with PSCore6 to 2 0 0-beta3  
19190,     Make Windows MSI uninstallation shortcut remove work when more than one version is installed (#7701)\n\nFixes underlying problem of #3341  Related: #2881\r\nWhen multiple versions (e g  RTM and preview) of PowerShell are installed via the MSI and one is being uninstalled  then the start menu shortcut does not get removed due to the shortcut component being not unique per version  This also applies to an upgrade scenario  Therefore use an auto-generated Guid (`*`)  
19191,     Fix a typo in Credential cs  (#7696)\n\n  
19192,     update njsonschema (#7705)\n\n  
19193,     Add VSTS CI build badges for master branch to README md (#7691)\n\n  
19194,     Add a paragraph on files wxs updating (#7695)\n\n  
19195,     Fix module specification hashtable in ModuleSpecification Tests ps1 (#7663)\n\n  
19196,     Updates to Docker package tests (#7667)\n\n  
19197,     Fix perf issue in provider by using Refresh() to update the status rather than instantiating ServiceController which has a significant perf degradation from  NET Framework (#7680)\n\n  
19198,     Fix file blocking issue with webcmdlets (#7676)\n\n  
19199,     Remove extra spaces in error messages in Modules resx  (#7662)\n\n  
19200,     Update to latest package references  runtime framework  and SDK (#7646)\n\n* Move to  Net Core SDK 2 1 401 and runtime 2 1 3\r\n\r\n* Update package references\r\n  
19201,     Remove workaround on VSTS that is no longer needed (#7666)\n\n  
19202,     Update docs about  NET Core version 2 0 to be about version 2 x (#7467)\n\n  
19203,     Add tools for PowerShell perf analysis (#7595)\n\n\r\n  
19204,     Change logic for downloading zip files based on job id (#7653)\n\n  
19205,     Enable indexing operations on objects that implement `ITuple` (#7633)\n\nThis change enables index operations on objects that implement `ITuple` and other interfaces that have `DefaultMemberAttribute` declared  including slicing and negative indexing   
19206,     Update docker files to use MCR (#7656)\n\n  
19207,     Remove  Suspend-Job  and  Resume-Job  cmdlets from compilation (#7650)\n\nThe classes for the cmdlets are present but the Cmdlet attribute has been removed  There is no reason why we should be compiling these files  and it very slightly impacts our code coverage numbers   
19208,     make artifact upload only occur for non-PR builds (#7657)\n\n  
19209,     Use non-virtual call to invoke  family or assembly  methods on base class from PowerShell class (#7622) (#7624)\n\n  
19210,     Change locale of mdspell to en-US (#7671)\n\nUpdate the locale to use en-us for mdspell checker   
19211,     Add tests to report when package references are out of date (#7661)\n\nAdd tests to report when package references are out of date\r\n  - Also  update the packaging script to generate updated `files wxs`  
19212,     Remove extra spaces in error messages in Modules resx  (#7662)\n\n  
19213,     Update to latest package references  runtime framework  and SDK (#7646)\n\n* Move to  Net Core SDK 2 1 401 and runtime 2 1 3\r\n\r\n* Update package references\r\n  
19214,     Remove workaround on VSTS that is no longer needed (#7666)\n\n  
19215,     Update docs about  NET Core version 2 0 to be about version 2 x (#7467)\n\n  
19216,     Add tools for PowerShell perf analysis (#7595)\n\n\r\n  
19217,     Change logic for downloading zip files based on job id (#7653)\n\n  
19218,     Enable indexing operations on objects that implement `ITuple` (#7633)\n\nThis change enables index operations on objects that implement `ITuple` and other interfaces that have `DefaultMemberAttribute` declared  including slicing and negative indexing   
19219,     Update docker files to use MCR (#7656)\n\n  
19220,     Remove  Suspend-Job  and  Resume-Job  cmdlets from compilation (#7650)\n\nThe classes for the cmdlets are present but the Cmdlet attribute has been removed  There is no reason why we should be compiling these files  and it very slightly impacts our code coverage numbers   
19221,     make artifact upload only occur for non-PR builds (#7657)\n\n  
19222,     Use non-virtual call to invoke  family or assembly  methods on base class from PowerShell class (#7622) (#7624)\n\n  
19223,     Fix `Set-Service -Status Stopped` to stop services with dependencies  (#5525)\n\n  
19224,     Remove empty xml comment lines(missed in #7401) (#7641)\n\n  
19225,     Fix `Set-Service -Status Stopped` to stop services with dependencies  (#5525)\n\n  
19226,     Remove empty xml comment lines(missed in #7401) (#7641)\n\n  
19227,     Only display properties with values for MeasureInfo (#7104)\n\n* Adding support for built-in List formats to include ItemSelectionCondition\r\n* Adding ItemSelectionCondition to GenericMeasureInfo\r\n* Adding tests for MeasureInfo format-list\r\n* Adding positive tests\r\n\r\n  
19228,     Add Duration property to HistoryInfo (#5208)\n\n* Remove regions in HistoryInfo class\r\n* Auto properties refactoring in HistoryInfo\r\n* Adding Duration property to HistoryInfo\r\n* Rename ExecutionTime => Duration\r\n\r\n  
19229,     Fix null reference when markdown content is empty (#7463)\n\n  
19230,     Handle operations with ByRef-like types gracefully in PowerShell (#7533)\n\nByRef-like types are supposed to be used on stack only  so we need to fail gracefully when accessing properties  calling methods  or creating objects related to ByRef-like types   
19231,     Make `-settingfile` work for scriptblock logging on windows (#7631)\n\nMake `-settingfile` work for scriptblock logging on windows\r\n  - Move EarlyParse to the first thing in the ManagedEntrance so that we don t cache the settings before we parse the settings file \r\n  - Added a test case to prevent regression\r\n    - I m working on more test cases   Therefore  I used the TestCases parameter \r\n  - Changed the macOS tests back to CI as I think they are stable enough now   
19232,     Add symbolic links for `libssl` and `libcrypto` to Debian 9 builds to make remoting work  (#7609)\n\nOn Debian 9  libmi cannot resolve libssl and libcrypto  This change adds symbolic links to packaging and build to the $PSHOME directory to resolve the issue \r\n\r\nThe fix was verified interactively connecting to office 365  importing the session  and ensuring Get-MailBox and Get-User succeed \r\n\r\nFix #7598  
19233,     Simplify marshalling of StartupInfo struct used in Jumplist creation  (#7580)\n\n\r\n  
19234,     Update test which assumes all previews have the name preview in the version  (#7625)\n\n\r\n  
19235,     Update pester syntax in `Set-Location` test (#7615)\n\n  
19236,     Update  SSHConnectionInfo Class Tests  $skipTest expression to use collection semantics instead of relying on $null (which causes a type cast exception)  (#7610)\n\n  
19237,     Fix links in README md (#7619)\n\n  
19238,     Add Linux ScriptBlock logging test (#7599)\n\n\r\n  
19239,     Add `LocationChangedAction` handler and tests to support the Windows Compat module (#7552)\n\nAdd LocationChangedAction handler and tests to support the Windows Compat module   
19240,     Merge release v6 1 0 rc 1 into master (#7608)\n\n  
19241,     Update docs and metadata JSON (#7597)\n\n  
19242,     Add `rc 1` Changelog (#7594)\n\n  
19243,     Don t upload artifacts during pull request due to missing VSTS feature (#7588)\n\n  
19244,     Add test for scriptblock logging for macOS (#7586)\n\n  
19245,     Merged PR 4656: Add back the powershell-core source for hosting tests\n  
19246,     Merged PR 4645: Fix SDK dependencies\n\nRemoved old dependencies from SMA and fixed the netcoreapp version \n  
19247,     Add VSTS CI for Windows (#7536)\n\n- Add VSTS CI for Windows\r\n    - Disable `Access-denied test for Get-Item C:\\windows\\appcompat\\Programs\\Install -ErrorAction Stop`  because the path does not always exist\r\n        -    com/PowerShell/PowerShell/issues/7553\r\n    - Disable `Should give  sys file if the fullpath is specified with hidden and force parameter`  because pagefile sys doesn t always exist and other files don t meet test s requirement \r\n        -    com/PowerShell/PowerShell/issues/7554\r\n    - Disable some `Test-Connection` tests for same reasons they failed on VSTS Linux\r\n        -    com/PowerShell/PowerShell/issues/7555\r\n    - Disable `Test-FileCatalog should pass when catalog is in the same folder as files being tested`  because the CmdLet does not work in that scenario\r\n         - Also  give details needed to investigate when the test fails\r\n         -    com/PowerShell/PowerShell/issues/7556\r\n    - Update `appveyor psm1` to work with VSTS\r\n    - Update `HelpersRemoting psm1` `New-RemoteSession` to work for CimSession (discovered an issue during the investigation)\r\n    - Update `Test wildcard with drive relative directory path` to work when there are multiple drives\r\n         - Disable on non-windows machines since the test is assuming drive letters\r\n    - Update `New-CimSession` Tests to requireAdmin\r\n         - Also  make sure session name is a string\r\n    - Add functions to save and restore psoptions\r\n    - update ` gitatttributes` so files clone like they do on appveyor  
19248,     Update PSGet version (#7564)\n\n  
19249,     Update PSGet version\n  
19250,     make sure we continue with retry loop when we get an error (#7550)\n\nImprove logging  
19251,     Fix typo on environment checker for RedHat (#7549)\n\n  
19252,     Fix typo in environment checker (#7547)\n\nFix error in environment checking logic for RedHat family   
19253,     Update reference to use packages from NuGet org (#7525)\n\nUpdate psrp and libpsl reference to Microsoft PowerShell Native\r\nKeep the reference to powershell myget org in nuget config for PSDesiredStateConfiguration and PowerShellHelpFiles\r\nUpdate hosting tests\r\nUpdate hosting tests csproj in preparation on next release with version 6 1 0-rc 1\r\nUpdate Microsoft Management Infrastructure to version 1 0 0  
19254,     Revert  Throw error on entering non-existing type in Get-FormatData (#7434)  (#7546)\n\nRevert  Throw error on entering non-existing type in Get-FormatData (#7434)\r\nThis reverts commit b754cd80d59b4886a95b59c543bc6a744f46f3c5 \r\n\r\nPer this comment    com/PowerShell/PowerShell/pull/7434#issuecomment-413696259  
19255,     Retry restore on failure (#7544)\n\n* switch to using a retry\r\n  
19256,     Make sure we do not upload artifacts during a pull request (#7535)\n\n  
19257,      Only remove the revision if it is `0` from module version when restoring modules (#7538)\n\n  
19258,     Update version of modules shipped with PowerShell (#7531)\n\n  
19259,     Remove module version directories (#7523)\n\nI missed this in reviewing #7518  
19260,     Updated thread job to version 1 1 2 (#7522)\n\nAdded fix to remove unneeded validation attribute for Arguments parameter  and made tests work with strict mode   
19261,     Add Linux VSTS CI (#7527)\n\nUpdate Start-PSPester and Start-PSxUnit to upload test results when running in VSTS\r\nDisable tests which require non-root using when running as root\r\nremove verifications in Test-Connection tests which verify buggy behavior\r\nSkip tests which don t behave correctly in VSTS (due to running in a container?)\r\n- Test-Connection - #7528\r\n- Set-Date - #7529  
19262,     Update NuGet package metadata (#7517)\n\n\r\n  
19263,     Fix building on RedHat Enterprise Linux (#7489)\n\nWhen trying to build on RHEL  the environment is not recognized as RedHatFamily \r\nAdded detection logic so that appropriate symbolic links are generated   
19264,     Build: Also search PATH for rcedit  (#7503)\n\n  
19265,     Save modules to un-versioned folder to enable servicing (#7518)\n\nRemove code from build psm1 that save the modules to a versioned folder  For servicing reasons after release it is preferred and easier to not have the versioned folder so that we can directly replace modules that need to be serviced (MSI specifically makes it difficult to service a module if the folder path changes)   
19266,     Fix some style issues in engine code (#7246)\n\nThe PR resolves some style issues in engine code  (Moved from PR #7242  )  
19267,     workaround xunit test crash on VSTS (#7516)\n\n  
19268,     Allow publishing artifacts or test results to fail but to fail the run (#7515)\n\n  
19269,     Update README and metadata json for release v6 0 4 (#7497)\n\n  
19270,     Add CI definition for VSTS for macOS (#7490)\n\nAdd CI definition for VSTS for macOS\r\n  - Add VSTS YAML for mac\r\n  - Add a function to upload log files during a test on VSTS\r\n  
19271,     Improve performance on json to psobject conversion (#7482)\n\nThis amounts so a speed-up in the order of 7x  Cmdlets that benefit from this are `Convertfrom-Json` and `Invoke-RestMethod`  There are three main changes:\r\n\r\n- Convert from `JArray` directly to object array instead of creating a `List` and do `list ToArray()` \r\n- Avoid iterating through `PSObject Properties` to check for existing members  since that is a very slow and allocation heavy code path \r\n- Pre-allocate the members in `PSObject` by using the newly added constructor accepting an initial member count   
19272,     Adding  LanguagePrimitives TryCompare  to provide faster comparisons (#7438)\n\n  
19273,     Remove one unneeded verbose output from  ConvertTo-Json  (#7487)\n\n  
19274,     Throw error on entering non-existing type in Get-FormatData (#7434)\n\nWrite non-terminating error when `Get-FormatData` doesn t found a type definition for the provided type   
19275,     Improve the performance of  Group-Object   (#7410)\n\n  
19276,     Add  -SkipIndex  parameter to  Select-Object  (#7483)\n\n  
19277,     Add  Former Repository Maintainers  section in maintainers/README md (#7475)\n\n  
19278,     Update the  HelpUri  for  Get-ExperimentalFeature  (#7466)\n\n  
19279,     Default to DefaultConsoleWidth when DotNet says WindowWidth is 0 (#7465)\n\nDefault to DefaultConsoleWidth when DotNet says WindowWidth is 0\r\n\r\nThis resolves an issue in an environment like VSTS when pwsh is spawned and DotNet is not able to determine the Console Width \r\n* Port changes from #6883 by @kalgiz\r\n  
19280,     Make sure that SettingFile arg is parsed before we load the settings (#7449)\n\nMake sure that SettingFile arg is parsed before we load the settings\r\n\r\n- Add ability to parse some setting before console host is created\r\n- Trigger the Parse before the console host is created\r\n- disable snapin loading from loading setting before this point\r\n- re-enable mac logging tests \r\n\r\nAlso  fix the following Travis-ci issues:\r\n\r\n- make sure the Linux and macOS caches are separate to reduce the size\r\n- update the macOS image to the closest image as used by the official build system (equivalent to VSTS hosted mac builds)  
19281,     Make Native globbing on UNIX return an absolute path when it is given an absolute path (#7106)\n\nFix #7089  Native globbing on UNIX was turning absolute paths into relative paths when it shouldn t  The code suppresses generating a relative path for paths starting with  ~   It also need to do the same for paths starting with  /    
19282,     Add Microsoft PowerShell MarkdownRender to signing xml (#7472)\n\n  
19283,     Fix error message for `Add-Type` when `-AssemblyName` with wildcard is not found (#7444)\n\n  
19284,     Avoid extra unnecessary allocations in PSMemberInfoInternalCollection<T> (#7435)\n\n`PSMemberInfoInternalCollection<T>` uses OrderedDictionary class internally  `OrderedDictionary` in dotnet core 2 1 allocates `ArrayList` and `Hashtable` after any first using any property  Even if the `OrderedDictionary` object is actually empty \r\n\r\nThe commit postpones the internal allocations until it s really necessary  Given that `PSMemberInfoInternalCollection<T>` is used in each PSObject and is often empty  this change dramatically reduces memory allocations   
19285,     Improve performance of Import-CSV up to 10 times (#7413)\n\nSpeed up the creation of PSObjects in CSV cmdlets by\r\n\r\n- Use the overload Add(PSMember  bool prevalidated) for all objects except the first when adding the `NoteProperty` members \r\n- Add a new constructor to PSObject that preallocates the `_instanceMembers` collection with an initial capacity \r\n- Improve performance of AddToTypesXmlCache by avoiding an expensive copying of members just to check for the existence of one of them  perf is significantly increased  and allocations are reduced \r\n- Reduce allocations and GC pressure by preallocating and reusing `StringBuilders` and `List<string>` for line parsing in CSV cmdlets \r\n- Use `List<string>` instead of `Collection<string>` to get fewer virtual calls and better inlining \r\n- Reduce allocations by using a preallocated value factory in `TypeTable GetMembers(ConsolidatedString types)` \r\n- Replace a `Linq Any()` with a `List Count > 0` in binder code \r\n\r\nThe main gain is from taking advantage of the fact that all objects created by `Import-Csv` have the same shape (the same properties) \r\n\r\n  
19286,     Add preview icon to macOS launcher (#7448)\n\n  
19287,     [Feature  Fix Move-Item -Path with wildcard char (#7397)\n\nUnescape non-literal  non-glob path in ProccessRecord and\r\nset the context SuppressWildcardExpansion in RenameItem \r\nThis solve the issue where Rename-Item complains -Path does not exist\r\nwhen both -Path and CWD contains special characters   
19288,     Fix to not duplicate the System32 module path when starting pwsh from pwsh (#7414)\n\n  
19289,     Update CI scripts to support running tests for experimental features (#7419)\n\n  
19290,     Update NuGet packaging code for the new markdown assembly (#7431)\n\n  
19291,     Improving performance of LanguagePrimitives TryConvertTo  (#7418)\n\nBefore the fix the TryConvertTo() is implemented in terms of Convert()  but with wrapping exception handling  This is costly performance wise  By inlining the implementation of ConvertTo()  and getting access to the FigureConversion output we can determine upfront on at least some occations that a conversion is not available   
19292,     Add support for passing files and markdown directly to `Show-Markdown` (#7354)\n\n* add support for -Path/-LiteralPath and piping strings directly to Show-Markdown\r\n\r\n* update tests to set vt100 support\r\n\r\n  
19293,     Add xunit project to PowerShell sln and make it runable from within VisualStudio (#7254)\n\n* add csproj ref to sln\r\n\r\n* Remove Microsoft NET Test Sdk NuGet reference  The xunit runner visualstudio package is now sufficient for running tests in VS in the latest version (15 7 5)\r\n\r\n* use RTM versions of XUnit 2 4 0 that got published today\r\n\r\n* Update XUnit in hosting project as well to newer release\r\n  
19294,     Make logging tests for macOS pending (#7433)\n\n  
19295,     Set the cursor to the place where a user hits tab key (#7299)\n\n* Set the cursor to the place where a user hits tab key\r\n  
19296,     Remove empty xml comment lines (#7401)\n\n  
19297,     Change parameters order in Get-Help and help in order to get first -Full and then -Functionality when using Get-Help -Fu<tab> and help -Fu<tab>  (#7370)\n\n\r\n  
19298,     Update WCF and NJsonSchema NuGet packages to latest released patch version (#7411)\n\n\r\n  
19299,     Use -HaveCount instead of -Be in Where-Object Tests ps1  (#7379)\n\n  
19300,     Fix parameter name in the Get-Variable cmdlet error message  (#7384)\n\nBefore the fix when using Get-Variable or Get-Alias cmdlets with the -Scope parameter with wrong value  the error message refers to  scopeID  parameter instead of  Scope    
19301,     Fix casing of `GitHub` in `best-practice md` (#7392)\n\nFix Github to GitHub   
19302,     Use -BeExactly and -HaveCount instead of -Be in TabCompletion Tests ps1  (#7380)\n\n  
19303,     Use -BeExactly and -HaveCount instead of -Be in BugFix Tests ps1  (#7386)\n\n  
19304,     Fix a typo in issue-management md (#7393)\n\n  
19305,     Fix typos in docs/maintainers/README md (#7390)\n\n  
19306,     Fix several issues in Markdown cmdlets (#7329)\n\n- Formatting file should be used for `MarkdownOptionInfo` object instead of the types file for adding script property \r\n- Downlevel windows consoles which do not support VT100 escape sequences should be handled gracefully \r\n- Add helpuri fwlink for cmdlets \r\n- Make `-Path` a positional parameter for `ConvertFrom-Markdown`\r\n- make `-InputObject` a positional parameter for `Set-MarkdownOption`  
19307,     `Start-DevPowerShell`: add `-Configuration` and handle `-ArgumentList` more properly (#7300)\n\n- Allow specifying the configuration  rather than the `bin` folder \r\n- Do not attempt to pass null/empty `ArgumentList` to `Start-Process`   
19308,     Bulk update format for files in Management folder with `codeformatter` (#7346)\n\n  
19309,     Set  PowerShellVersion  to 3 0 for built-in modules to make Windows PowerShell work when starting from PSCore (#7365)\n\n  
19310,     Fix `IsHardLink()` to return false instead of throwing exception when unable to determine (#7355)\n\n  
19311,     Fix ThreadJob tests so that they will run more reliably (#7360)\n\n  
19312,     Update \ Utils IsComObject\  to use \ Marshal IsComObject\  since CAS is no longer supported in  NET Core (#7344)\n\nA comment from the existing `Utils IsComObject` mentions that:  We can\ t use System Runtime InteropServices Marshal IsComObject(obj) since it doesn\ t work in partial trust  \r\n\r\nPartial trust is a concept of Code Access Security (CAS)/Security-Transparent  CAS and Security-Transparent are no longer supported in  NET Core  so we should use `Marshal IsComObject` instead   
19313,     Correct the comment for  WSManReceiveDataResult Unmarshal   (#7364)\n\n  
19314,     [package  (#7345)\n\nenable `pwsh-preview` to work on Windows  
19315,     Update PowerShell to reference  psrp 1 4 5-0  on Unix build (#7350)\n\n  
19316,     Cleanup: replace  Utils FileExists()/DirectoryExists()/ItemExists()  with  NET methods (#7129)\n\n  
19317,     Fix sequence point update for switch/if/for/while/do-while/do-until statements (#7305)\n\n- Make switch-statement report correct error position when it fails to evaluate the condition \r\n- Make for-statement report correct error position when it fails to evaluate the initializer \r\n- For the condition of `if/for/while/do-while/do-until` statements  the sequence point update is either duplicate in some cases (for `if/for/while`) which causes debugger to stop at the condition twice  before moving forward  or missing (for `do-while/do-until`) which causes debugger to skip the condition  They are fixed   
19318,     Update Docker link to PowerShell-Docker (#7351)\n\n  
19319,     Ignore Newtonsoft Json metadata properties in ConvertFrom-Json (#7308)\n\n Some values are not converted from json to PSCustomObject  because Newtonsoft Json reads them and thinks they are metadata properties only useful for deserialization  This change makes Newtonsoft Json  ignore  those properties so they are converted correctly from json to PSCustomObject   
19320,     Add support for parsing Link Header with variable whitespace (#7322)\n\nFix is to change the regex to allow for variable or no whitespace and associated tests to handle these two cases    
19321,     Cleanup Docker files (#7328)\n\n* update docker read me to point to new repo\r\n* remove unused files\r\n  
19322,     Add maintainer s best practice document and update maintainer list (#7311)\n\n  
19323,     Format Utility `csproj` with updated `codeformatter` (#7263)\n\nRelated #4708 \r\n\r\nFormat Microsoft PowerShell Commands Utility csproj by codeformatter with default options \r\n\r\nThe codeformatter is used that I compiled with newest Roslyn packages (version 2 8 2)   
19324,     Update Build script owners (#7321)\n\n  
19325,     Make MUSL NuGet package optional (#7316)\n\n  
19326,     Fix macOS launcher app to allow release and preview versions  (#7306)\n\nFixes #7074  This PR allows concurrent versions of the macOS launcher app to exist  The application name will be either PowerShell or PowerShell-preview  It is now dynamically built and removed post fpm to avoid post build conflicts  see #5262    
19327,     Add  Snapcraft  to spelling dictionary (#7318)\n\n  
19328,     Merge branch  release-v6 1 0-preview 4  into master\n  
19329,     Merged PR 3912: Update package versions for the new release\n  
19330,     Merged PR 3869: initial draft of changelog\n\ninitial draft of changelog\n  
19331,     Fix docs comments in utility folder (#7192)\n\n  
19332,     Update `Enable-PSRemoting` so configuration name for Preview releases (#7202)\n\nThe intent was to have the version of the PSSessionConfiguration name not include the `v` for the version string   Also  Preview releases should standardize on `PowerShell 6-Preview` instead of clobbering `PowerShell 6` so that stable and preview can co-exist side-by-side \r\n\r\nNeed to verify on Win10 IoT if `Install-PowerShellRemoting ps1` is still needed anymore as it may be possible to run `pwsh -c enable-psremoting` from within Windows PowerShell Core removing the need for that script which duplicates `Enable-PSRemoting` capability \r\n\r\nUpdate: Not able to get the current master build working on Win10 IoT  getting `Invalid access to memory` error   Will have to investigate this separately from this PR and keep `Install-PowerShellRemoting ps1` for now \r\n\r\nFix    com/PowerShell/PowerShell/issues/7119\r\n  
19333,     Enforce the \ CompatiblePSEditions\  check for modules from the legacy \ System32\  module path (#7183)\n\n- Add `%WINDIR%\\System32\\WindowsPowerShell\\v1 0\\Modules` (Windows PowerShell $PSHOME) to the end of the default PSCore 6 module path (i e  the module path as initially set at startup) \r\n- Cause an error to be thrown by `Import-Module` when a module with `CompatiblePSEditions` not containing ` Core ` is being loaded from the \ System32\  module path \r\n- Suppress output of modules listed by `Get-Module -ListAvailable` from Windows PowerShell $PSHOME when `CompatiblePSEditions` does not contain ` Core ` \r\n- Introduce the `-SkipCompatibilityCheck` switch parameter on both `Import-Module` and `Get-Module` to respectively allow importing incompatible modules and listing incompatible modules \r\n- Adds a  `PSEdition` column to the `PSModuleInfo` table view format \r\n- Ensures that completions are not given for incompatible modules on the System32 module path   
19334,     Update `Enable-PSRemoting` so configuration name for Preview releases (#7202)\n\nThe intent was to have the version of the PSSessionConfiguration name not include the `v` for the version string   Also  Preview releases should standardize on `PowerShell 6-Preview` instead of clobbering `PowerShell 6` so that stable and preview can co-exist side-by-side \r\n\r\nNeed to verify on Win10 IoT if `Install-PowerShellRemoting ps1` is still needed anymore as it may be possible to run `pwsh -c enable-psremoting` from within Windows PowerShell Core removing the need for that script which duplicates `Enable-PSRemoting` capability \r\n\r\nUpdate: Not able to get the current master build working on Win10 IoT  getting `Invalid access to memory` error   Will have to investigate this separately from this PR and keep `Install-PowerShellRemoting ps1` for now \r\n\r\nFix    com/PowerShell/PowerShell/issues/7119\r\n  
19335,     Enforce the \ CompatiblePSEditions\  check for modules from the legacy \ System32\  module path (#7183)\n\n- Add `%WINDIR%\\System32\\WindowsPowerShell\\v1 0\\Modules` (Windows PowerShell $PSHOME) to the end of the default PSCore 6 module path (i e  the module path as initially set at startup) \r\n- Cause an error to be thrown by `Import-Module` when a module with `CompatiblePSEditions` not containing ` Core ` is being loaded from the \ System32\  module path \r\n- Suppress output of modules listed by `Get-Module -ListAvailable` from Windows PowerShell $PSHOME when `CompatiblePSEditions` does not contain ` Core ` \r\n- Introduce the `-SkipCompatibilityCheck` switch parameter on both `Import-Module` and `Get-Module` to respectively allow importing incompatible modules and listing incompatible modules \r\n- Adds a  `PSEdition` column to the `PSModuleInfo` table view format \r\n- Ensures that completions are not given for incompatible modules on the System32 module path   
19336,     Update remote prompt when using ssh to show username if different (#7191)\n\n\r\nCurrently  the remote prompt only shows the remote computer name:\r\n\r\n> [computer  PS:\\foo>\r\n\r\nWith this change  if you use PSRP over SSH and you specified a different username  it shows whom you logged in as:\r\n\r\n> [user@computer  PS:\\foo>\r\n\r\nThe fix is when the remote prompt is being created to check if using SSH if so  check if the current user is different than the specified user and specified   If different  use `[user@computer `  otherwise fallback to default `[computer ` prompt \r\n\r\nFix    com/PowerShell/PowerShell/issues/7156\r\n  
19337,     Fix the encoding of  PowerShell sln  to be utf-8 (#7289)\n\n  
19338,     Fix the file  PowerShell sln  that was corrupted by accident (#7288)\n\n\r\n  
19339,     Added Markdown rendering cmdlets (#6926)\n\n- `ConvertFrom-Markdown` is used for converting a markdown document or string to a MarkdownInfo object  It can optionally return an HTML or a VT100 encoded string in addition to an AST of the markdown document \r\n- `Show-Markdown` is used to either display the VT100 encoded string on the console or redirect the HTML string to the browser \r\n- `Set/Get-MarkdownOption` cmdlets are used to view or set markdown rendering options   
19340,     Merge pull request #7284 from daxian-dbw/removeVB\n\nRemove the  VisualBasic  support from Add-Type  
19341,     [Feature  Changed AsEscapeSequence to accept an enum and update Markdig version to latest\n  
19342,     [Feature  Fix comments and other code review comments\n  
19343,     Fix prompt string to be platform agnostic and keep its trailing spaces (#7255)\n\n  
19344,     Fix a parsing error when  break  and  continue  are used in a switch statement in a finally block (#7273)\n\n  
19345,     [Feature  Remove  VisualBasic  support from Add-Type\n  
19346,     update to latest package references  runtime framework  and SDK (#7272)\n\n* update to latest package references\r\n\r\n* update runtime framework\r\n\r\n* update sdk\r\n\r\n* automatically read NuGet package dependency info from csproj  where version info is fully qualified\r\n\r\n* update file wxs\r\n  
19347,     [Feature  Added wix component updates\n  
19348,     Style fixes\n  
19349,     [Feature  Address code review comments\n  
19350,     [Feature  Add markdown cmdlets to default commands list\n  
19351,     Added missing error messages\n  
19352,     Codefactor style fixes\n  
19353,     [Feature  Add more tests\n  
19354,     [Feature  Address code review comments\n  
19355,     Added Tests for Markdown cmdlets\n  
19356,     Added Markdown rendering cmdlets\n\nConvertFrom-Markdown is used for converting a markdown document or string to a MarkdownInfo object \nIt can optionally return a HTML or VT100 encoded string in addition to a AST of the markdown document \n\nShow-Markdown is used to either display the VT100 encoded string on console or redirect the HTML string to the browser \n\nSet/Get-MarkdownOption cmdlets get be used to view or set markdown rendering options \n  
19357,     Merge pull request #7242 from daxian-dbw/exp\n\nAdd support to experimental features\r\n\r\nRFC:    com/PowerShell/PowerShell-RFC/pull/114\r\n\r\nGoals:\r\n\r\nAllow experimental features to be declared by PowerShell engine and modules \r\nAllow experimental features to be enabled via powershell config json\r\nAllow Function  Cmdlet  parameters and parameter sets to be shown to the user or hiden from the user depending on whether the associated experimetnal feature is on or off \r\nAllow discover experimental features using cmdlet Get-ExperimentalFeature  
19358,     Make pwsh able to start in a directory with wildcards in the name (#7240)\n\n  
19359,     Added markdown rendering feature assemblies to the trusted assembly list (#7280)\n\n  
19360,     Add more information to job process failure error (#7251)\n\n  
19361,     [Feature  Address Feedback: Use value tuple (int  string) as the sorting key\n  
19362,     Update PowerShell Direct to try pwsh then fallback to powershell (#7241)\n\nUpdate PowerShell Direct to try pwsh then fallback to powershell\r\n\r\n  - Forward port changes from Windows Powershell to fall back\r\n  - change the order from powershell->pwsh to pwsh->powershell\r\n\r\nfixes #7237  
19363,     Update README files for native code for migration (#7248)\n\n  
19364,     Add test to verify filesystem provider isn t used when accessing root path in psdrive (#7173)\n\n* add test to verify filesystem isn t used when not in filesystem drive\r\n  
19365,     Fixes to address ThreadJob tests reliability and speed (#7270)\n\nThis change merges Jim s fixes with some more I identified that will make the tests more reliable and faster to run \r\n\r\nThe changes add functions to wait for the desired state instead of simply waiting a specified period of time  and also speeds up running job script execution time   
19366,     [Feature  Address Feedback: Do not override user defined cache path\n  
19367,     [Feature  Address Feedback: Fix style and xml doc issues  Update tests\n  
19368,     [Feature  Address Feedback: Use better error message and add more tests\n  
19369,     [Feature  Address Feedback: make value tuple element types explicit\n  
19370,     [Feature  Address Feedback: style changes and fixing typo\n  
19371,     Address Feedback: functional changes and method/variable renaming\n  
19372,     [Feature  Root caused test failure issue and fix it\n  
19373,     Make  Start-PsBuild -Clean  not prompt due to locked files when Visual Studio is open by excluding sqlite3 folder and use -x instead of -X option on git clean (#7235)\n\n* Exclude sqllite  folder when cleaning and use -x instead of -X option\r\n\r\n* Remove 2nd git clean block which is redundant now\r\n  
19374,     Adding -AllStats Switch parameter for Measure-Object cmdlet (#7220)\n\n\r\n  
19375,     [Feature  Fix two tests\n  
19376,     [Feature  Add tests for experimental feature work\n  
19377,     Alter the analysis cache file name properly\n  
19378,     Generate logging resources for Unix platforms\n  
19379,     Add logging  formatting  and  $EnabledExperimentalFeatures \n  
19380,     Add  Get-ExperimentalFeature  cmdlet\n  
19381,     Support experimental feature in modules\n  
19382,     Update code that creates attributes to support the new attribute changes\n  
19383,     First batch: Basic experimental feature flag and attributes enforced\n  
19384,     Remove dummy comments in Utility module files (#7224)\n\n* Remove dummy comments (like   // dummy ) in Utility module files\r\n* Fix new line at eof \r\n  
19385,     Update docs for ArgumentCompleterAttribute class (#7227)\n\n  
19386,     Add ThreadJob module package and tests (#7169)\n\n  
19387,     Build: Fix the source location of PowerShell Core Instrumentation dll (#7226)\n\n  
19388,     Update  Start-PSPester  to make it more user friendly (#7210)\n\n- Make `Start-PSPester` call `Restore-Pester` automatically when needed \r\n- Make `-Path` a positional parameter for `Start-PSPester`   
19389,     Fix the name of a  Register-EngineEvent  test (#7222)\n\n  
19390,     Refactor module specification logic (#7126)\n\n* Use `nameof` where appropriate\r\n* Factor out a repeated `entry Key ToString()` call\r\n* Use a `StringBuilder` in the `ToString()` method\r\n* Dissect a trick comparison method into something simpler\r\n* Use HashCode Combine() method\r\n  
19391,     Add type inference for Select-Object command (#7171)\n\nAdd type inference for Select-Object command\r\n\r\nFixes #7170  
19392,     Methods with return type [object  should return null for an empty result (#7138)\n\n  
19393,     Enable UseShellExecute on all platforms (#7198)\n\nPreviously  we limited use of UseShellExecute when starting a new process to only Windows Desktop   However  CoreFx now supports UseShellExecute (appropriately calling `open` on macOS and `xdg-open` on Linux) so we can have a consistent code and remove some of the existing redundant code or unnecessary limiting code   
19394,     Refactor module code related to  Get-Module -ListAvailable  (#7145)\n\n* The major refactoring changes are:\r\n- In `ModuleIntrisic cs`  remove unneeded Windows-PowerShell-only code \r\n- In `ModuleUtils cs`\r\n   - use the new API `Directory GetDirectories(string path  string searchPattern  EnumerationOptions enumerationOptions)` and `Directory GetFiles(string path  string searchPattern  EnumerationOptions enumerationOptions)` to enumerate files and sub-directories within a directory path \r\n   - remove the unused parameter `bool force` from `GetDefaultAvailableModuleFiles(bool force  bool isForAutoDiscovery  ExecutionContext context)`\r\n   - refactor the method `GetModuleVersionsFromAbsolutePath`  Add more comments and rename the method name \r\n- In `ModuleCmdletBase cs`  refactor the method `GetModuleForNonRootedPaths` to `GetModuleForNames` to simply its implementation \r\n- In `PSModuleInfo cs`\r\n   - group the declarations of `Declared*Exports` fields together\r\n   - rename `_detected*Exports` fields to `Detected*Exports` to group them together  They are internal fields and used outside `PSModuleInfo` \r\n\r\n* There is some perf improvement after this refactoring change:\r\n- For `Get-Module -ListAvailable`  there is about 36% speed improvement for 94 default modules \r\n- For `Get-Module -ListAvailable -All`  there is about 14% speed improvement for totally 600 module files \r\n- For `Get-Module <name> -ListAvailable -List`  there is over 17x speed improvement for finding 13 modules from 600 modules  This is because we now filter names using the module file before creating a `PSMdouleInfo` object   
19395,     Build: Fix a check to avoid null argument in case  vcvarsall bat  is absent (#7218)\n\n  
19396,     Update  releaseTag  in  tools/metadata json  (#7214)\n\n  
19397,     Use  Net Core File Delete() method to remove symbolic links and alternate streams (#7017)\n\n Net Core support processing symbolic links and alternate streams  and thus we can remove our P/Invoke code   
19398,     Merge Third Party Notices and License updates (#7203)\n\n* Merge Third Party Notices\r\n\r\n* Use capital J for  json \r\n  
19399,     Fix class searcher to ignore hidden properties (#7188)\n\n  
19400,     Update the powershell executable location in building guide docs (#7205)\n\n  
19401,     Move to dotnet core 2 1 1 (#7161)\n\n  
19402,     Added functionality to retry in Invoke-RestMethod and Invoke-WebRequest  (#5760)\n\nAdded two parameters  RetryCount and RetryIntervalSec to enable retry functionality  When retrying a verbose message is sent out to inform the user   
19403,     Adding ability to install previews side-by-side with production releases (#7194)\n\n-preview switch:\r\n - installs pwsh-preview packages when a package manager is being used \r\n - uses link name pwsh-preview when tar ball install is being done\r\n - results in preview release being available for calling manually  but does not become systemwide version\r\nIssue #7177  
19404,     Modified the -AsHashTable code to get the base object from the PSObject when (#7123)\n\n  
19405,     Fix second test in Send-MailMessage Tests ps1  (#7195)\n\n  
19406,     when using PSRP  if we receive text instead of xml  output it as error to help troubleshoot (#7168)\n\nPSRP currently relies on XML for the transport messages   When using PSRP over SSH  if the target side fails  it sends back a text message   PSRP sees this and doesn\ t know what to do so it throws\r\na generic message which makes troubleshooting the issue more difficult   Change here is to throw\r\nthe text message which now looks like:\r\n\r\n>new-pssession : [test-machine  There is an error processing data from the background process  Error reported: Invalid argument \ -np\   did you mean: \r\n\r\nPreviously:\r\n\r\n>new-pssession : [test-machine  There is an error processing data from the background process  Error reported: Cannot process an element with node type  Text   Only Element and EndElement node types are supported  \r\n\r\nSince it\ s processing one line at a time  not able to get the whole message \r\n  
19407,     update build and packaging modules for Alpine (#7149)\n\n  
19408,     Allow Basic Auth over HTTPS (#6890)\n\n* [FEATURE  Allow Basic Auth over HTTPS\r\n\r\n* WSManTransportManager cs: Simplify HTTPS check\r\nUpdate comment in test to refer to the right exception type \r\n\r\n* Disable test until limi crash fo selected connection error paths is fixed\r\n\r\n* Use Hex format for defining the expected HRESULT\r\n  
19409,     Fix tab expansion for `Get-Process` on macOS (#7176)\n\n* fix tab exapnsion for get-process on macOS\r\n\r\n* add comment to address PR feedback\r\n  
19410,     Add tests for module specifications (#7140)\n\n* Add simple tests for module specifications\r\n\r\n* Add comparison tests\r\n\r\n* Add using namespace to shorten type names\r\n  
19411,     [feature  (#7101)\n\nRevert  Set-Location should use path with wildcard characters if it exists instead of globbing (#5839) \r\n\r\nThis reverts commit 7459b5463904b7849320b7e834fda4e3274acd05   
19412,     Fix trimming of whitespace when table is wrapped (#7184)\n\n  
19413,     Send-MailMessage: Update all parameters to support  ValueFromPipelineByPropertyName   (#6911)\n\n  
19414,     Fix the pref regression to the  -replace  operator after adding ScriptBlock support (#7135)\n\n  
19415,     Revert  Make switch statement report correct error position when it fails to evaluate the condition  (#7182)\n\nThe fix causes a problem in debugging  When stepping over the scripts in debugging mode  the debugger will stop at the switch statement condition expression twice at the very beginning -- one for evaluating the condition  and one for iterating the condition   
19416,     Fix adding padding when right justified (#7136)\n\nTable formatter was overly aggressive in removing padding so even right justified output (default of numbers) gets incorrectly stripped of padding  Fix is when right justified  always add padding (because it s right justified  there s never trailing whitespace)   
19417,     Add location history for Set-Location to enable  cd -  scenario (issue #2188) (#5051)\n\n* Implement location history feature for Set-Location \r\nThis makes it possible to go back to the last directory using  cd -  \r\nwhich is exactly the same syntax as on Linux shells \r\n\r\n* Use an existing stack implementation instead of relying on an environment variable and move logic for  cd -  into the internal class of SessionState Path SetLocation\r\nKeep the (additional) setting of an environment for Unix system in case of mixed usage of cd and Set-Location to provide consistency \r\n\r\n* Use a bounded stack with a limit of 1000 and adapt tests \r\nRemove setting environment variable on Linux as discussed in PR \r\n\r\n* Fix test: use get-location explicitly to avoid subtle difference in the path string (e g  an additional slash at the end)\r\nMake syntax to  net call of environment consistent with surrounding code\r\n\r\n* Move initialization of _workingLocationHistoryStack into constructor of SessionStateInternal and set the limit to 20 as discussed in PR 5051 \r\n\r\n* Make new BoundedStack class in engine utils internal\r\n\r\n  
19418,     Updates to build for Alpine (#7139)\n\nsetdate cpp was incorrectly assigning an int to a struct  fixed to initialize struct zero d\r\nupdate the typegen project in the bash script\r\nadded some help text at top of script for someone trying to build it\r\nupdated runtime to linux-musl-x64 instead of linux-x64 as Alpine distro uses the musl libc libraries instead of glibc which is used by most distros   
19419,     Bulk update code base to put  null  on the right-hand-side of a comparison expression (#6949)\n\n  
19420,     Make switch statement report correct error position when it fails to evaluate the condition (#7151)\n\n  
19421,     install-powershell sh filter prereleases (when available)  params documentation (#6849)\n\nFixed #6815 by adding -allowprereleases parameter\r\nFixed #6405 by adding -allowprereleases parameter\r\nAdded parameters to documentation\r\nReady for prerelease repositories if Microsoft starts providing them\r\nAdded -skip-sudo-check for all distros\r\nFixed -interactivetesting should do nothing if -includeide was not used  
19422,     Fix error when using Get-ChildItem c: (#7033)\n\n* Fix error when using Get-ChildItem c:\r\n\r\n* Fix New-Item test issue \r\n\r\n* Add tests for Get-ChildItem cmdlet \r\n\r\n* Add tests for New-Item cmdlet \r\n\r\n* Fix tests for New-Item cmdlet \r\n  
19423,     Remove MapSecurityZoneWithUrlmon method and related code (#7103)\n\n  
19424,     Fix for #4520  -ArgumentList should accept @() or $null  (#6597)\n\n* Fix for #4520  -ArgumentList should accept @() or $null \r\nRemoved the [ValidateIsNotNulOrEmpty  attribute from the parameter \r\n\r\n* Fixed null and @() empty list tests to not both test null\r\n\r\n* [Feature  Fixed test issue on non-Windows; added code to suppress displaying new windows on Windows \r\n\r\n  
19425,     Remove PSReadLine from Solution (sln) file (#7137)\n\n  
19426,     Add back ADSI and WMI type accelerators (#7085)\n\n  
19427,     Fix New-TemporaryFile online help URI (#6608)\n\n  
19428,     Comment about dynamic members for the DotNetAdapter  GetMember  and  GetMembers  (#7087)\n\n  
19429,     Fix for #6855 - Measure-Object should handle scriptblock properties  (#6934)\n\nMeasure-Object should handle `ScriptBlock` properties  Fixed by renaming `MshExpression` to `PSPropertyExpression` and making it public  Then in `MeasureObjectCommand`  lifting it up to the parameter level  Previously the implementation exposed the Property as a string and\r\nwrapped it internally as a `PSPropertyExpression`  Now the parameter type is `PSPropertyExpression` directly allowing for both wildcard strings and `ScriptBlock` \r\n\r\n`PSPropertyExpression` now lives in a public namespace where it can be used by cmdlet and script authors to easily add the same type of functionality to their commands  I also modified `PSPropertyExpression` to handle hashtables properly as objects so\r\n         @ prop = 3  | measure-object prop\r\nand\r\n         @ prop = 3  | measure-object  $_ prop \r\nwill work the same  (Previously the example using just the property name would fail )  
19430,     When installing using MSI  set the working directory of the shortcut to the user home directory (#7072)\n\nLeverage the -WorkingDirectory parameter on pwsh exe to set the initial location \r\n\r\nFix #5705  
19431,     Don t fail if SaferPolicy API is not available on Win10 IoT or NanoServer (#7075)\n\n* don t fail if SaferApi is not available\r\n* fix install-powershellremoting to work on Windows PowerShell 5 1\r\n  
19432,     Use empty array for Functions/Cmdlets/AliasesToExport to follow the best practice (#7108)\n\n  
19433,     Revert the PR #7023  Set the cursor to the place where a user hits tab key  (#7117)\n\nReverts PowerShell/PowerShell#7023 due to a regression introduced by it   
19434,     Fix typos in DOCSMIGRATION md (#7094)\n\n  
19435,     Disambiguate icon on Windows for preview builds/installers to use Powershell_av_colors and make daily build use Powershell_avatar instead (#7086)\n\nCloses #6317\r\nUsing the preview side-by-side with the RTM version is a pain/confusing due to the icons being the same \r\nThis makes the preview build (i e  the embedded icon in `pwsh exe`) and MSI installer package (shortcut icon and context menu) use the [Powershell_av_colors icon (   githubusercontent com/PowerShell/PowerShell/master/assets/Powershell_av_colors ico)\r\n![image (   githubusercontent com/9250262/41491336-6e354936-70f0-11e8-965e-9b5e83be925b png)\r\n\r\nTherefore change the icon of the daily build (which used to use the Powershell_av_colors icon) to [Powershell_avatar (   githubusercontent com/PowerShell/PowerShell/master/assets/Powershell_avatar ico)\r\n![image (   githubusercontent com/9250262/41491346-80f890a0-70f0-11e8-9ab5-bb789454c134 png)\r\nThis means that people like me who have a shortcut to pwsh of the daily build pinned to the taskbar  probably need to re-pin it to the taskbar to receive all changes (otherwise one will only get the change in the icon of the window)\r\n\r\nNote: The `Test-IsPreview` method had to be moved to the build module  which is OK because the packaging module has a declared dependency on the build module in its manifest   
19436,     Fedora 28 was released  Fedora 26 and 25 were EOL ed  (#7079)\n\nWith PowerShell/PowerShell-Docs#2497 merged  the links from README md are no longer valid   
19437,     Fix conditions for transcription of Write-Information command  (#6917)\n\nMakes a transcription of Write-Information command consistent with $InfomrationPreference variable   
19438,     Add  CompatiblePSEditions  to PowerShell Core built-in modules (#7083)\n\n  
19439,     Enable NuGet Package Registration for compliance (#7053)\n\n\r\nupdate the Windows release build script with the ability to capture all the project assets json files\r\nadd a Windows build to use the new feature in the release build script\r\nupdate the Linux release build script with the ability to capture all the project assets json files\r\n  -no new build is needed because signing is not currently automated  
19440,     Added copy env vars from ProcessStartInfo to key/pair array used in creating ssh process (#7070)\n\nThis addresses issue #6207  During SSH remoting on Linux machines  when PowerShell on the client creates the SSH process to connect to the target machine  it was not passing in environment variables from the parent process  and this was preventing ssh-agent key management from working \r\n\r\nThis change adds a helper function to create environment variable key/value pairs for the created SSH process  based on the passed in ProcessStartInfo object   
19441,     Set the cursor to the place where a user hits tab key (#7023)\n\n  
19442,     Add instructions to update homebrew formula for the preview version powershell (#7067)\n\n  
19443,     Avoid calling native APIs to check for existence of FileSystem items (#6929)\n\n- Use File GetAttributes() instead of p/invokes to check for existence of FileSystem items  The method throws access exceptions which we use for better error messages \r\n- Remove the word  Native  from method names   
19444,     Update  internals md  with the latest build changes (#7058)\n\n  
19445,     make sure all references to the Pkg ID for previews packages is powershell-preview (#7066)\n\n* make sure all references to the Pkg ID for previews are com microsoft powershell-preview\r\nfixes #7065\r\n\r\n  
19446,     Fix Windows Event Log channel isolation semantics (#6956)\n\n- Remove isolation attribute from Analytic and Debug channels  These channel types always have an isolation of Custom  regardless of what is put here in the manifest \r\n\r\n- Since no events are being written to the Admin channel currently  remove it  This avoids the Windows Event Log pre-allocating a file for the channel \r\n  
19447,     Cleanup: remove the unneeded type  RemotingCommandUtils  (#7029)\n\n  
19448,     Fix markdown and spelling errors in CHANGELOG md (#7064)\n\n\r\n  
19449,     Fix the preview macOS package link (#7061)\n\n  
19450,     Merge the v6 1 0-preview 3 release branch to master (#7060)\n\n  
19451,     Removed unneeded code that forces ARM platforms to run PowerShell in CL mode (#7046)\n\n  
19452,     Make Select-Object/ForEach-Object/Where-Object see dynamic properties (#6898)\n\nDynamic (DLR) objects work in some places today  but not others   This change expands that support to ForEach-Object  Where-Object and the family of cmdlets that use \ MshExpression\  (Select-Object  etc ) \r\n\r\nThis change addresses both wildcard and non-wildcard cases  In wildcard cases  it uses the existing support of generating PSDynamicMember objects for names returned by GetDynamicMemberNames \r\n\r\nIn non-wildcard cases  a dynamic property access is attempted whether or not the name shows up in GetDynamicMemberNames  but a truly  blind  access is only attempted if we see that the base object is an IDMOP  If the dynamic access fails  you\ ll get the same or a similar error experience as before ( The property \ Blarg\  cannot be found   or no error at all  depending on the cmdlet and the strict mode setting) \r\n\r\nThe included test coverage includes a stub for the ForEach operator--once people are happy with this change  I can continue by adding support there \r\n\r\nThis change should allegedly also have positive perf impact  though in actual perf testing  although it does seem ever-so-slightly faster  I found it difficult to measure much difference at all   
19453,     Remove unneeded  Windows-Full  modules (#7030)\n\n- Remove the Windows-Full folder under src/Modules\r\n- Move content in Windows-Core+Full and Windows-Core to Windows under src/Modules\r\n  
19454,     add additional checks for test that passes inconsistently (#7051)\n\n  
19455,     CodeFactor code style cleanup: replace literal empty strings with  string Empty  (#6950)\n\n  
19456,     Update third party notices (#7042)\n\nBased on adding a reference to new assemblies  need to update ThirdPartyNotices txt\r\nAdd ThirdPartyNotices to all packages  
19457,     Merged PR 3115: Use Directory CreateDirectory instead of DirectoryInfo CreateSubDirectory\n\nChange to use Directory CreateDirectory because of regression introduced by    com/dotnet/corefx/pull/27810 in creating a subdirectory under root path \n  
19458,     AppVeyor build matrix: more efficient build job split to reduce total time by another 5 minutes (#7021)\n\nCloses #6944\r\n\r\nFollowing PR #6945  further  reduce the total build time (without any disadvantages) by around 5 minutes by making sure there is a more even split between the 2 build jobs (the 2nd build job used to be much shorter) \r\nTherefore this PR moves also the xUnit and Pester-Admin tests into the 2nd build job  If it is a daily/feature test commit  then the feature tests will also happen (only) in the 2nd build job  Because both jobs now run tests  the failfast option was removed  The final question from my side is whether running tests in 2 build jobs is OK for the daily build  which uploads code coverage results?\r\n\r\nThe time to wait for the AppVeyor build results is now 15 +/- 2 minutes  which is a huge improvement to what used to be around 28 minutes before the build matrix was introduced   
19459,     Merged PR 3079: Resolve Linux SxS conflicts and issues\n\nFix man page conflict between stable and preview Linux package\n  - rename preview man page pwsh-preview\nFix /etc/shell entries not being created correctly for preview packages\n  
19460,     Remove \ SemanticVersion\  from \ knowntypes\  list in serialization code to enable interop between WinPS and PSCore (#7016)\n\nPowerShell serialization has a list of known PowerShell types  When an object is deserialized containing a known type it tries to deserialize the object to that specific type and throws an exception if it can\ t succeed  SemanticVersion only exists in PSCore6 so when remoting from Windows PowerShell or importing clixml generated from PSCore6 that contains SemanticVersion  it fails \r\n\r\nWith this fix  it will be rehydrated as a  PSObject  with  Deseriealized System Management Automation SemanticVersion  in the \ TypeNames\  in both Windows PowerShell and PowerShell Core   
19461,     Update links that contain  en-us  culture (#7013)\n\nUpdate links that contain  en-us  culture to remove  en-us  culture (if possible) and in some cases update to newer re-directed link to docs microsoft com\r\n\r\n  
19462,     Update versions in README md\n  
19463,     Update the ChangeLog md for 6 1 0-preview 3 release\n  
19464,     Add Andrew to the default reviewers of the build related files (#7019)\n\n  
19465,     Fix links to PowerShell install docs (#7001)\n\n  
19466,     Fix for #6880 Progress panel displays incorrectly on UNIX when the user is typing  (#6972)\n\nThis fixes issue #6880 where user input interferes with the way the progress panel is displayed  If the user types any input while running a command displaying progress  that input would be echoed causing the terminal\ s cursor position to change  On the next progress write  output would be written using the new  incorrect cursor position  This had the effect of causing the progress pane to  march  across the screen if the user held down a key  The fix is fairly simple - update the physical cursor position right before updating the screen  This still leaves a very small window where an individual update might be off by a character or two but this is not cumulative and will be corrected on the next update  I\ ve added code to SetBufferContents() to do this but only on UNIX  It\ s not a problem on non-VT100 style consoles   
19467,     fix mac package name\n  
19468,     make sure the path comparison is case insensitive \n  
19469,     Get the fix for this issue with installing fpm\n   com/jordansissel/fpm/pull/1494\n  
19470,     remove PSReadline from signing\n  
19471,     fix issue with setReleaseTag using variable meant for non-release branches during a release (#7011)\n\nThere was a regression in the script where a variable meant for non-release branches was used during releases  
19472,     make macOS package use a consistent path (#7006)\n\nAddress mac portions of PowerShell/PowerShell-RFC#115 (comment)\r\n\r\nMake path when stable /usr/local/microsoft/powershell/6\r\nwhen not stable (preview) /usr/local/microsoft/powershell/6-preview and symlink name pwsh-preview\r\nallow side-by-side install of stable and preview\r\nAlso:\r\n\r\nfix an issue where the utime work around for mac requires sudo\r\nrefactor some code into common functions\r\n  
19473,     Use PSReadLine 2 0 0-beta2 from PSGallery (#6998)\n\nRemoved building PSReadLine from the repository  Instead  change to downloading from PSGallery   
19474,     Fix parser to continue parsing key-value pairs after an If-Statement value in a HashExpression (#7002)\n\nAfter parsing `if ()    `  new lines are skipped in order to see if either `elseif` or `else` is present  When neither is present  we should resync back to the pointer before skipping those possibly available new lines  so that the new line tokens can be utilized by the subsequent parsing   
19475,     Skip compiling the non-supported cmdlets on Unix in System Management Automation dll (#6939)\n\nThis is to keep the cache in InitialSessionState in sync with the actual available cmdlet types in System Management Automation dll\r\n\r\n  
19476,     Fix broken links due to PR 6899 that removed GitHub docs on installation docs  known issues and breaking changes due to complete migration to docs microsoft com (#6981)\n\n* Fix broken installation links in README md\r\n\r\n* fix remaining broken links due to removal of breakingchanges and knownissues docs\r\n\r\n* Remove en-us culture from docs links in readme\r\n\r\n* Remove last en-us culture link from issue template\r\n  
19477,     Skip dotnet-cli initialization and stop caching the  dotnet  folder for Travis CI (#7007)\n\n  
19478,     Change packaging to differentiate only between major versions and previews (#6968)\n\nChange the *nix packaging over with the following changes:\r\n\r\nPackage name (as used by e g  apt):\r\nNon-preview releases are namedpowershell\r\nPreview releases are named powershell-preview\r\nInstallation path:\r\nNo longer looks like /opt/microsoft/powershell/6 1 0/ or /opt/microsoft/powershell/6 1 0-preview 1/\r\nNon-previews go to a path like /opt/microsoft/powershell/6/\r\nPreviews go to a path like /opt/microsoft/powershell/6-preview/\r\nPath to executable symlink:\r\nAllows SxS with preview\r\nNon-previews linked to /usr/bin/pwsh or /usr/local/bin/pwsh on macOS\r\nPreviews linked to /usr/bin/pwsh-preview or /usr/local/bin/pwsh-preview on macOS\r\nImplements PowerShell/PowerShell-RFC#115 (comment)  
19479,     Use Appveyor matrix for faster PR builds (#6945)\n\nRelated: #6944\r\n\r\nReduce PR build time by 5 minutes by:\r\n\r\nHaving Packaging as a separate build job in a matrix -> runs in parallel in PR builds because the Microsoft account is a paid account that allows that (at no additional costs)\r\nNot caching the dotnet folder anymore  which is too large and the overhead of zipping/unzipping/upload/download does not pay off (and fails in forked builds that are on a free AppVeyor account due to the size) \r\nSetting the environment variable DOTNET_SKIP_FIRST_TIME_EXPERIENCE to 1 because the initialization of the dotnet CLI cache (1 minute) does not pay off for the whole build \r\nThe total build time of builds on a fork that is on a free AppVeyor account and therefore does not have parallelism  remains the same due to the time saving of redundant caching \r\n\r\nThis is just a simple example of what we can easily achieve  we could continue this pattern and split the test runs as per the referenced issue to bring PR builds down to 10 minutes (but this will incur an increase for fork builds on free AppVeyor accounts)  
19480,     Remove not initialized variable $IsElevated from test in New-Item Tests ps1 (#6746)\n\n* Remove not initialized variable  from PowerShell tests\r\n\r\n* Separate the tests that requires no elevation from the others \r\n\r\n  
19481,     Replace  Dbg Assert  with \ if () throw\  in CSVCommands cs   (#6910)\n\nAdd more useful messages   
19482,     Create JumpList in background thread to improve performance (#6985)\n\n* Perform JumpList creation in background thread to improve performance when pwsh owns the window (i e  when the Jumplist has to be created)\r\n\r\n* Move JumpList creation to a later stage to allow for more code that might make it exit earlier as suggested in PR review by @iSazonov\r\n\r\n  
19483,     Disable some StyleCop rules (#6986)\n\n* Disable some StyleCop rules\r\n* Add CodeFactor status badge in README md\r\n  
19484,     [Feature  Minor update on  GetFileSystemItem  (#6984)\n\n  
19485,     Make the build step fail when the curl operation fails  (#6961)\n\nWithout the pipefail  the step always succeeds and the layer gets\r\ncached  resulting in confusion during the next step failing and\r\nsubsequent rebuild attempt   
19486,     Remove dependencies on libcurl  libunwind  matching the  NET Core behavior (#6964)\n\n  
19487,     Fix the double curly bracket typo  (#6960)\n\n  
19488,     Add Settings StyleCop file (#6930)\n\nDisable:\r\n1 SA1402 FileMayOnlyContainASingleType\r\n2 SA1403 FileMayOnlyContainASingleNamespace\r\n3 SA1101 PrefixLocalCallsWithThis\r\n4 SA1126 PrefixCallsCorrectly\r\n\r\nAdd custom global config file stylecop json\r\n  
19489,     Add Windows Compatibility Pack 2 0 0 to PS Core and adopt the official  NET Core 2 1 (#6958)\n\nTo support PowerShell modules built with  NET Windows Compatibility Pack  we decided that it was best to ship the WCP assemblies with PS Core  This also adds many new  NET APIs be default while only adding ~3 5 MB additional disk footprint (to a ~137 MB install currently) \r\nAlso update the build to adopt the official  NET Core 2 1   
19490,     Cleanup FileSystem provider (#6909)\n\nThe cleanup is coming from a code review to cleanup psl  Here we clean up the side branch of the code that will allow later to clean up a branch which uses psl \r\n- IO FileInfo does not make system calls in constructor  So we can create the object and then use the required attributes without direct call IO FileInfo GetAttributes() ( SafeGetFileAttributes() )  This allow us to exclude some p/invoke calls in our code in later cleanups  Also we get unified code for both Windows and Unix \r\n- Remove SafeGetFileAttributes() and WinSafeGetFileAttributes()  Currently  Net Core support file attributes on all platforms in fastest way and we can remove our workaround  We get a regression in rare case (for files like pagefile sys)  Fix is ready in CoreFX  we get it in 2 1 1  I suggest ignore the regression because this is a very-very rare situation (Get-ChildItem c:\\pagefile sys -Hidden)  The  Net Core team was not even able to create an artificial test for such files and uses a real pagefile sys file for the test  Also the enumeration is still working (dir c:\\ -hidden) \r\n- Re-add test which we lost in #4050  The test is pending because of the regression \r\n  
19491,     Migrating docs from source to docs repo (#6899)\n\n* migrating docs to docs repo\r\n  
19492,     Add Jumplist  Run as Administrator  to Taskbar on Windows (#6913)\n\nCloses #6649\r\n\r\nThis is a port of existing C++ Windows PowerShell code from MainEntry cpp\r\nSome of the code has been copied and minified from the WindowsApiPack \r\n\r\nThe code is not compiled for Linux (not sure also another condition is needed for Windows on ARM?) \r\nThe code checks if the PowerShell process has a window handle by checking the startupinfo and only then tries to populate the list (and also checks if there is a slot available in the jumplist) \r\nTested on Windows 10 1803  jumpLists have been supported in Windows since Windows 7  which matches what PowerShell Core supports \r\n\r\n  
19493,     Fix xUnit test GetTempFileName (#6943)\n\nUse Path GetTempFileName() to get a temporary file   
19494,     Cleanup NonWindowsGetDomainName() (#6948)\n\nAdd an optional extended description…  
19495,     Remove myself (@vors) from codeowners for parser (#6952)\n\nI was not able to provide reviews on the vast majority of the auto-assigned reviews \r\nI don t see a point to keep this auto-assignment   
19496,     remove deprecated file that is no longer used (#6922)\n\n  
19497,     Added line break to error message (#6803)\n\n  
19498,     Remove ShouldBeErrorId custom function  (#6891)\n\n  
19499,     Added logic to create signing XML for NuGet packages (#6921)\n\n  
19500,     adding path cleanup utility Reset-PWSHSystemPath ps1 (#6892)\n\n\r\n  
19501,     Clean up #if SILVERLIGHT (#6907)\n\n  
19502,     Don t cache files that change every build (#6901)\n\nDon t cache files that change every build\r\nFixes #6894  
19503,     Make MMI CmdLets full symbols (#6912)\n\nMake MMI cmdlets full symbols\r\n\r\nremove properties which are defined in common props file  
19504,     Fix tab completions for a hash table (#6839)\n\nNow working:\r\n- Get-Date | Sort-Object @ Expression=<tab>\r\n- Get-Date | Sort-Object @ Expression=   ;<tab>\r\n  
19505,     stop corrupting memory in libpsl-native SetDate (#6881)\n\nstop corrupting memory in libpsl-native SetDate\r\nAddresses #6872 - the first step  
19506,     Update signing xml based on new signing guidelines (#6893)\n\n  
19507,     Add functions into build psm1 to Save and Restore PSOptions between different sessions  (#6884)\n\nAdd functions into build psm1 to Save and Restore PSOptions between different sessions   
19508,     Convert `ShouldBeErrorId` to `Should -Throw -ErrorId` in PowerShell tests (#6682)\n\nConvert ShouldBeErrorId to Should -Throw -ErrorId in PowerShell tests \r\nGet rid of try     catch     formula to assert that errors were thrown \r\nSmall fixes in tests to obey the new Pester -Parameter syntax   
19509,     Update PowerShell to build against netcoreapp 2 1-rc1 (#6873)\n\n  
19510,     Fix  Set-Location DriveName:  to restore current working directory in the drive (#6774)\n\n  
19511,     Further improve PSMethod to Delegate conversion (#6851)\n\nRefactor code to make it easier to maintain and a little faster  Changes are as follows:\r\n\r\n1  Support finding a matching signature with variance  But make PowerShell prefer exact match over a match with variance \r\n2  The metadata signatures in `PSMethod<  >` are generated based on the array of method overloads in `MethodCacheEntry MethodInformationStructures`  in the exact same order  So in `LanguagePrimitive ConvertViaParseMethod`  when we try to figure out if there is a match using the metadata signatures in `PSMethod<  >`  we can get the index of the matching signature  and the same index should locate the matching method in `MethodCacheEntry MethodInformationStructures`  Therefore  we don\ t need to compare signatures again in the actual conversion method  and instead  we can just leverage the index we found when figuring out the conversion in `ConvertViaParseMethod` \r\n   - This gets rid of the reflection call `GetMethod( Invoke )` and the subsequent signature comparisons in the final conversion method \r\n   - Also  when comparing signatures using `PSMethod<  >` in `ConvertViaParseMethod`  we can just use the generic argument types of each `Func<  >` metadata type  instead of calling `GetMethod( Invoke )` and then `GetParameters()`  This makes the code for comparing signatures simpler (the type `SignatureComparator`) \r\n   - Move `MatchesPSMethodProjectedType` from `PSMemberInfo cs` to the type `SignatureComparator` in `LanguagePrimitives cs`  as it\ s closely related to the signature comparison  Also  renamed it to `ProjectedTypeMatchesTargetType` \r\n   - These changes make PSMethod-to-Delegate conversion a little faster  but no big improvement  as the true bottleneck probably is in delegate creation(?)  Actually  the performance of this conversion is not critical at all at this moment because this feature should rarely be used in any hot script path  So this exercise is mainly for fun  \r\n3  Remove `PSEnum<T>`  We can directly use enum types when constructing the metadata type `Func<  >` \r\n4  Remove the code that generates metadata signatures for generic method definitions (call `MakeGenericMethod` with fake types like `GenericType0`  `GenericType1`)  This is because:\r\n   - We don\ t support convert generic method to delegate today  so may be better not spending time on preparing the metadata signature types for those methods  \r\n   - When the day comes that we need to support it  it\ s better to use generic argument types directly to construct the `Func<  >` metadata types  I left comments in `GetMethodGroupType` method in `PSMemberInfo cs` to explain why that approach is better   
19512,     Enable full symbols for windows (#6853)\n\nThe main purpose of this was to enable full symbols for windows release build \r\nAlso makes explicit where we are optimizing and where we are not optimizing due to    com/dotnet/corefx/issues/29700  
19513,     Update installation doc about Raspbian (#6859)\n\n  
19514,     Fix Web Cmdlets for  NET Core 2 1 (#6806)\n\ncloses #6728\r\nBreaking change approved in #6728\r\nThis PR switches the logic of when the Web Cmdlets handle redirects when the Authorization header is present   NET Core 2 1 no longer sends the Authorization header by default (dotnet/corefx#26864)  however  we introduced the ability to do so leveraging the previous default behavior through the use of the -PreserveAuthorizationOnRedirect switch \r\n\r\nThis PR also corrects a bug introduced 6 0 0 where certain redirect types redirect from POST to GET were set which should have passed through POST to POST and some were improperly passing through POST to POST which should have been doing POST to GET  This correction is a breaking change  It was made apparent as now the redirection behavior is being managed by CoreFX which is doing the correct behavior  tests were added for both when CoreFX and the Web Cmdlets manage redirection   
19515,     Add functions to merge Pester and Xunit logs (#6854)\n\n  
19516,     Fix a module-loading regression that caused an infinite loop (#6843)\n\nThis regression was introduced by #6523  in `PSModuleInfo cs`  A circular nested module check was removed because the comment there suggested it happens only with a deprecated workflow module  This causes a `StackOverflow` exception when running into circular nested modules \r\n\r\nCircular nested modules could happen for a module that is not well structured  For example  the module folder `test` contains two files: `test psd1` and `test psm1`  and `test psd1` has the following content:\r\n   @  ModuleVersion =  0 0 1 ; RootModule =  test ; NestedModules = @( test )  \r\n\r\nThe same value `test` is put in both RootModule and NestedModule  which will end up with a module whose nested module points to itself \r\n\r\nThere are two changes in this PR:\r\n1  Add back the check for circular nested modules in `PSModuleInfo cs` \r\n2  Remove a wrong `Dbg Assert` in `ModuleCmdletBase cs` and two checks before it \r\n   - For the assertion `Dbg Assert(newManifestInfo SessionState == ss`  when facing the example above  the nested module will first be loaded with a different session state  and then when trying to load the root module  the same loaded nested module will be reused for it  So  newManifestInfo SessionState  is not `ss`  The assertion will fail in that case \r\n   - For the two checks before the assertion  they are not needed anymore based on the comments there \r\n  
19517,     fix create docker manifest script to work with more complex tags and with repeated use  (#6852)\n\nfix create docker manifest script to work with more complex tags and with repeated use\r\n- add characters to validation pattern\r\n- purge manifest after pushing as there is no other way to delete the manifest   
19518,     Enable Web Cmdlets Tests for Greater Platform Support (#6836)\n\n  
19519,     Fix crash when terminal is reset (#6777)\n\n* fix crash when terminal is reset\r\n\r\n* fix check before removing characters\r\n  
19520,     Fix build psm1 to not add tool path to $PATH twice (#6834)\n\n  
19521,     Quote Multipart/Form-Data Field Names (#6782)\n\n  
19522,     Remove web cmdlet tests using proxy env variables (#6808)\n\n\r\n  
19523,     Remove empty branch and add Dbg Assert in ExportCsvHelper  (#6816)\n\nRemove Dbg Assert and add ArgumentNullException \r\n  
19524,     Update docker files to allow specifying pwsh and from image version (#6835)\n\nUpdate docker files to allow specifying pwsh and from image version\r\n- Also updated to install security updates when building images  
19525,     Blacklist System Windows Forms form loaded to prevent a crash (#6822)\n\nBlacklist `System Windows Forms` (`WinForms`) from being loaded to prevent a crash  
19526,     Updates to fedora27 and kalilinux dockerfiles (#6819)\n\nThis PR addresses 2 issues:\r\n\r\nfedora27 dockerfiles were missing compat-openssl10 prerequisite that on Linux-based Docker hosts produced error No usable version of the libssl was found during Restore-PSPester \r\nkalilinux PS package validation is failing because of open issue #5413   so disabling this config for now \r\n  
19527,     Change packaging to support Ubuntu 17 10 and 18 04 (#6769)\n\nUbuntu 17 04 is EOL  so we need to update our packaging for Ubuntu 17 10  This updates the package script and build psm1 to use 17 10 rather than 17 04   
19528,     Change -Quiet parameter of Invoke-Pester to -Show None  (#6798)\n\n  
19529,     Add code coverage report generation instructions (#6515)\n\n* Add code coverage report generation instructions\r\n\r\n* Add Publish-PSTestTools in docs\r\n\r\n* Add references to coverage comparison commands\r\n  
19530,     Improve code coverage in Export-Csv Tests ps1  (#6795)\n\n* Improve code coverage in Export-Csv Tests ps1 \r\n\r\n* Change test logic \r\n  
19531,     Remove  more  function and move the $env:PAGER capability into the help function (#6059)\n\n  
19532,     Update Tests Isfile to correct response for  /  (#6754)\n\nI Think the good answer for  /  is a directory  not a file \r\nSo I recommand to change EXPECT_TRUE by EXPECT_FALSE for this case   
19533,     Implementation of -lp alias for -LiteralPath variable #6732 (#6770)\n\nImplementation of -lp alias for -LiteralPath variable for issue #6732 \r\n\r\nAdd-Content \r\n\r\nAdd-Type \r\n\r\nClear-Content \r\n\r\nClear-Item \r\n\r\nClear-ItemProperty \r\n\r\nConvert-Path \r\n\r\nCopy-Item \r\n\r\nExport-Alias \r\n\r\nExport-Clixml \r\n\r\nExport-Csv \r\n\r\nExport-FormatData \r\n\r\nFormat-Hex \r\n\r\nGet-ChildItem \r\n\r\nGet-Content \r\n\r\nGet-FileHash \r\n\r\nGet-Item \r\n\r\nGet-ItemProperty \r\n\r\nGet-ItemPropertyValue \r\n\r\nImport-Alias \r\n\r\nImport-Clixml \r\n\r\nImport-Csv \r\n\r\nImport-PowerShellDataFile \r\n\r\nMove-Item \r\n\r\nOut-File \r\n\r\nPush-Location \r\n\r\nRemove-Item \r\n\r\nRename-Item \r\n\r\nResolve-Path \r\n\r\nSelect-String \r\n\r\nSelect-Xml \r\n\r\nSet-Content \r\n\r\nSet-Item \r\n\r\nSet-ItemProperty \r\n\r\nSet-Location \r\n\r\nSplit-Path \r\n\r\nStart-Job \r\n\r\nStart-Transcript \r\n\r\nTee-Object \r\n\r\nTest-Path \r\n\r\nUnblock-File \r\n\r\n  
19534,     Update PowerShell to build with  NET Core SDK 2 1 300-rc1-008662 (#6718)\n\n* Build Update\r\n- Change `TargetFramework` to `netcoreapp2 1` and removed unnecessary `RuntimeFrameworkVersion` from `PowerShell Common props`\r\n- Update dotnet SDK to 2 1 300-rc1-008662\r\n- Update `TypeGen` target in `Build psm1` to work with 2 1\r\n- Rename macOS runtime to `osx-x64` as the old build logic expects 10 12 and breaks running on 10 13 system \r\n- Remove `PackageReference` to `System Memory` as it s part of dotnetcore 2 1\r\n- Update search for `crossgen` executable to find the matching version\r\n\r\n* Test Update\r\n- Update test tools `WebListener` to latest `asp net core`\r\n- Marked `AuthHeader Redirect` tests as `Pending` due to change in CoreFX  
19535,     Packaging: Add registry keys to support library folder background for explorer context menu (#6784)\n\nFixes #6590 by adding registry keys to support the existing explorer context menu also when being inside a library folder  It follows the existing pattern that was already applied to special cases such as drives  Desktop  etc \r\nManually Tested on Win 10 1709\r\nThanks to @mklement0 for triaging the issue and already researching the required registry key (he should also be included in the release notes)\r\n  
19536,     Disallow Basic Auth over HTTP on Unix (#6787)\n\nDisallow Basic Auth over HTTP on Unix\r\n\r\nFix: #6779\r\n  
19537,     Fix Format-Table where rows were being trimmed unnecessarily if there s only one row of headers (#6772)\n\n  
19538,     Fix test and infrastructure blocking code coverage runs (#6790)\n\n* Fix Remove-Item test to use a test directory instead of relying on pre-existing directory\r\n* Increase timeout as we are regularly going over it \r\n  
19539,     Updated Docker package tests  fixed error on opensuse42 (#6783)\n\nThis PR addresses minor issues with PS-package docker tests \r\n\r\nHistorically rpm package version string was different from other packages  however  this is no longer the case  so updating tests to account for that (to simplify things - removing RPM-version parameter from dockerfiles because it is no longer used) \r\nConfigs that use \ linux-x64 tar gz\  (currently only  opensuse42 2 ) are failing  so fixing that in the script   
19540,     tools: fix comparison to see if sudo test is needed in install-* sh (#6771)\n\nThe comparison to test if we were using sudo was failing when running as root  We would then run -v  and get a bad error message  fixing the comparison   
19541,     Revert changes from PR #6600 which cause a regression in drive behavior (#6751)\n\nThis reverts the commit 35d8de927b8e408461a5b4fc40ba20016c68433e  which caused a regression in drive behavior where drive paths were not restored  See issue #6749   
19542,     Fix Select-Object Tests ps1 which might fail for Unix OS  (#6747)\n\nFix Select-Object Tests ps1 which might fail for Unix OS \r\nIn the test  the processes which name matches i* are selected and it checks if there is non zero number of these processes  The test assumes that there is always at least one process  probably `init` - idle  but on Unix idle process does not have the name and hence the test might fail\r\n  
19543,     Update \ Get-ChangeLog\  to make it more accurate (#6764)\n\nUpdate \ Get-ChangeLog\  to make it more accurate\r\n\r\nUse  ||  as the delimiter instead of  |   so it works for commit message that has the pipeline operator in it \r\nHandle merges that create a merge node in history \r\nDo not treat powershell team members as external contributors \r\n  
19544,     Add tests for PowerShell classes inheriting from abstract  NET classes (#6752)\n\n  
19545,     Clean up uses of `CommandTypes Workflow` and `WorkflowInfo` (#6708)\n\n[breaking change  Clean up code related to the uses of `CommandTypes Workflow` and `WorkflowInfo` in `System Management Automation`  This change mainly affects help provider code \r\n\r\nThis PR includes a few minor breaking changes:\r\n- Change the `public` constructors of `WorkflowInfo` to `internal`  We don t support workflow in PSCore  so I think it makes sense to not allow people to create `Workflow` instances \r\n- Remove the type `System Management Automation DebugSource` since it s only used for workflow debugging \r\n- Remove the overload of `SetParent` from the abstract class `Debugger` that is only used for workflow debugging \r\n- Remove the same overload of `SetParent` from the derived class `RemotingJobDebugger`   
19546,     Fix CimCmdlets tests  (#6755)\n\n\r\n  
19547,     Added Publish-NugetToMyGet to exported functions in psd1 (#6763)\n\nAdded the missing export for Publish-NugetToMyGet   
19548,     Fix preview download links in README md (#6762)\n\nReplace `~` with `-` for preview download links in README md\r\nThe file names have `~` in them  but when uploading files to Github  `~` will be automatically replaced  So we use `-` for the packages uploaded to Github   
19549,     Update Start-PSPester and Restore-PSPester cmdlets in build psm1 to check for Pester 4 2 (#6667)\n\nUpdate Start-PSPester and Restore-PSPester cmdlets in buil psm1 to check for Pester 4 2 to support exception passthru   
19550,     Merge the release branch of v6 1 0-preview 2 to master\n\n  
19551,     Add tests for PowerShell hosting API to verify MyGet packages (#6737)\n\n  
19552,     Change line ending from CRLF to LF in Microsoft PowerShell Management psd1 (#6758)\n\n  
19553,     Update the preview version to 6 1 0-preview 2 in README md\n  
19554,     Update ChangeLog md for 6 1 0-preview 2 release\n  
19555,     Add script to create a container manifest (#6735)\n\nAdd script to create a container manifest\r\n  
19556,     Enhance and refactor Add-Type cmdlet (#6141)\n\n- Can compile a source from strings (TypeDefinition and MemberDefinition) \r\n- Can compile from files \r\n- Can compile only to a file (without loading the produced assembly) \r\n- Do not recompile and don\ t reload if the sources have not changed \r\n- Implement `-IgnoreWarnings` to not treat warnings as errors  By default  the cmdlet considers warnings as errors \r\n- Add VisualBasic support \r\n- Add new `-CompilerOptions` parameter to allow setting Roslyn command line parameters including:\r\n    - Parser options \r\n    - Compile options \r\n    - Emit options \r\n\r\n**ATTENTION:** The `CompilerOptions` can be specified along with other options like `-OutputAssembly`  `-Language` and `-IgnoreWarnings`  The explicit setting parameters will take precedence over the same settings specified in `-CompileOptions` \r\n\r\nSee docs about the compiler options:\r\n   com/dotnet/roslyn/blob/master/docs/compilers/CSharp/CommandLine md\r\n   com/dotnet/roslyn/blob/master/docs/compilers/Visual%20Basic/CommandLine md\r\n\r\n**ATTENTION:** `-OutputType` default is `Library`  If `-OutputType` is absent the `-OutputType` default overlaps a value in `CompileOptions`  In other words output type ( target  ot  t  in command line) is always ignored in `CompileOptions`  We have to use `-OutputType` to set an output type   
19557,     Add error handling for interactive #requires (#6469)\n\n  
19558,     Use new Pester syntax for Pester tests in module PSDesiredStateConfiguration (#6622)\n\n\r\n  
19559,     Update documentation on how to write tests verifying errors conditions (#6687)\n\n\r\n  
19560,     Update PSRP/Linux NuGet package version to 1 4 2-* (#6711)\n\n  
19561,     Fix New-Item to work correctly when given path is drive root and $PWD is a sub folder of the drive root  (#6600)\n\n  
19562,     Expose  Expand-PSSignedBuild  from packaging module\n  
19563,     Add some optimizations in formatting subsystem (#6678)\n\nUse safe pattern  columns <= columnsThresHold ? stackalloc int[columns  : new int[columns ; \r\nRemove duplicate code \r\nUse common  columnsThresHold  constant   
19564,     Use  -WorkingDirectory  parameter to handle context menu when path contains single quotes  (#6660)\n\nUse new  -WorkingDirectory  parameter on pwsh exe to be able to use context menu when path contains single quotes \r\n  
19565,     Update error message that Disconnect is only supported with WSMan (#6689)\n\n  
19566,     Fix two tests that are failing on nightly run (#6723)\n\n- For ConsoleHosts tests  the test is validating error condition  but did not redirect stderr to stdout so the output isn t captured and thus an empty string failing the assertion \r\n- For SSHConnectionInfo API tests  it s calling a constructor that got overwritten with a new parameter  Fix is to put back that public API and overload it with a new one \r\n  
19567,     Enable specifying sshd subsystem to use via -Subsystem (#6603)\n\nThe current implementation of PSRP over SSH only enables remoting to one version of PowerShell Core 6 \r\nsshd_config allows specifying multiple subsystems that can start different versions of PowerShell Core 6 (or same versions with different parameters) \r\nEnable use of a new -Subsystem parameter to specify the subsystem to use with ssh   
19568,     Pretty print Export-FormatData XML output (#6691)\n\nPretty print Export-FormatData XML output by default \r\nRefactor Export-FormatData tests  remove test duplications \r\n  
19569,     Add  -WorkingDirectory  parameter to pwsh (#6612)\n\nAdd `-WorkingDirectory` parameter to `pwsh` to allow starting in right working directory   
19570,     Correct a typo in comment for  Invoke-WebRequest  (#6700)\n\n  
19571,     Add tests for Format-Table -Wrap (#6670)\n\n  
19572,     Add new reliable tests for Get-Date -UFormat (#6614)\n\n  
19573,     Reduce allocations in TableWriter (#6648)\n\n* [Feature  Reduce allocations in TableWriter\r\n* Revert iterator\r\nReadOnlySpan is not supported in iterators\r\n* Use columnsThresHold with stackalloc\r\n  
19574,     Port Windows PowerShell AppLocker and DeviceGuard UMCI application white listing support (#6133)\n\nThese changes port Windows PowerShell support for Applocker and DeviceGuard User Mode Code Integrity (UMCI) to PSCore6  Windows PowerShell uses public APIs to determine if a system is in locked down mode via AppLocker or DeviceGuard  and automatically runs in constrained language mode  For more information about PowerShell constrained language  see:    msdn microsoft com/powershell/2017/11/02/powershell-constrained-language-mode/\r\n\r\nThis support for application whitelisting has mostly existed in PSCore6  but the primary APIs were stubbed out in CorePSStub cs because they relied on Windows only DeviceGuard (wldp dll) and AppLocker (Safer APIs) public APIs  These changes re-implement PowerShell lock down APIs on PSCore6 for Windows platforms only  The AppLocker and DeviceGuard public APIs are currently only implemented in Windows OSes and are not supported on Linux or MacOS platforms \r\n\r\nTests have also been ported to PSCore6 and run only for Windows platforms \r\n\r\n  
19575,     Reformat Format-Table tests (#6657)\n\n* Convert identations to spaces\r\n* Remove alias tests and extra lines\r\n* Remane extra Describe\r\n* Remove extra parentheses and add spaces\r\n  
19576,     Formatting: Use cache for dash padding strings (#6625)\n\n  
19577,     Remove extraneous SSH and install docs from the  demos  folder (#6628)\n\n\r\n  
19578,     Clean up  GetTypeInfo()  calls in engine folder (#6634)\n\n GetTypeInfo()  were added when porting PowerShell to early version of  NET Core (prior  NET Core 1 0) \r\nMost properties and methods in  System Type  were missing at that time  Now the call is not needed anymore and should be removed   
19579,     Clean up  GetTypeInfo()  calls in other engine sub-folders (#6635)\n\n GetTypeInfo()  were added when porting PowerShell to early version of  NET Core (prior  NET Core 1 0) \r\nMost properties and methods in  System Type  were missing at that time  Now the call is not needed anymore and should be removed   
19580,     Clean up  GetTypeInfo()  calls in  help    cimSupport  and  DscSupport  folders (#6633)\n\n GetTypeInfo()  were added when porting PowerShell to early version of  NET Core (prior  NET Core 1 0) \r\nMost properties and methods in  System Type  were missing at that time  Now the call is not needed anymore and should be removed   
19581,     Add meta properties to mac VSTS yml (#6619)\n\nAdd meta properties to mac VSTS YAML\r\n- Add a property to clean the build machine\r\n- Add a property to set the format of the build name\r\n- add a property to set which queue to run the build in  
19582,     Clean up  GetTypeInfo()  calls under engine/parser (#6636)\n\n`GetTypeInfo()` were added when porting PowerShell to early version of  NET Core (prior  NET Core 1 0) \r\nMost properties and methods in `System Type` were missing at that time  Now the call is not needed anymore and should be removed   
19583,     Fix for the Register-PSSessionConfiguration command (#6630)\n\nFix for the Register-PSSessionConfiguration command  as some tests were failing in:    appveyor com/project/PowerShell/powershell-f975h\r\nProbably because of changes in #6519  
19584,     Remove support for file to opt-out of telemetry  only support env var (#6601)\n\nSince a PR added support to opt out of telemetry via an environment variable  we can remove the \r\nalways intended to be a temporary  solution of deleting a file to opt out of telemetry since the\r\nenvironment variable can be defined at the system level and exist before even installing PowerShell Core \r\n\r\nBecause the variable is defined as opt out  a value of true  yes  or 1 means no telemetry is sent   
19585,     Support importing module paths that end in trailing directory separator (#6602)\n\n\r\n  
19586,     Re-order UFormat options in Get-Date (#6627)\n\nPlace in alphabetical order the options  
19587,     fix error about setting readonly variable (#6617)\n\n  
19588,     Fix formatting in Add-Content Tests ps1 file  (#6591)\n\n* Fix formatting \r\n* Capitalize TestDrive and add empty strings \r\n  
19589,     Make the  PSISERemoteSessionOpenFile  a support event (#6582)\n\nMake the `PSISERemoteSessionOpenFile` a support event  so that `Get-EventSubscriber` won t show that subscriber  `Get-EventSubscriber -Force` can still show the support event subscribers  `Unregister-Event -Force` needs to be used to remove a support event subscriber \r\n\r\nThe event subscriber for `PSInternalRemoteDebuggerStopEvent` and `PSInternalRemoteDebuggerBreakpointUpdatedEvent` are already made support events  And this PR makes it the same for `PSISERemoteSessionOpenFile` \r\n  
19590,     Engine: Clean up unneeded  GetTypeInfo()  calls in interpreter code (#6613)\n\nClean up unneeded `GetTypeInfo()` calls in interpreter code \r\nThe `GetTypeInfo()` calls were added back in the early days of  NET Core  when most of the properties and methods of `System Type` were removed  Now those properties and methods are back in `System Type`  so there is no need to keep those calls   
19591,     Engine: Make some minor cleanup changes (#6609)\n\n- Remove the calls to `GetTypeInfo()` in the generated ` resx` binding C# binding code (change in the tool `ResGen`) \r\n- Remove the unused methods in `SessionState cs` \r\n- Remove the calls to `GetTypeInfo()` from `Compiler cs` and other files in `engine\\runtime` \r\n- Fix typos in `VariableAnalysis cs` and `ClassOps cs` \r\n- Minor perf improvement in `MutableTuple cs` by using indexing instead of linq extension method `last()`   
19592,     Improve performance of parsing RegexOption for  -split  by using if branches (#6605)\n\n  
19593,     Create the default PSSession configuration  not tied to a specific PowerShell version  (#6519)\n\nCreate the default PSSession configuration  not tied to a specific PowerShell version \r\n\r\nWhen Enable-PSRemoting command is run  it creates 2 sessions configurations:\r\n\r\nfirst  the same as it was before with the name containing the current version expressed as:  PowerShell $PSVersionTable GitCommitId \r\nsecond with the default name  PowerShell 6  so that administrators wouldn t have to guess which specific version is installed on the target \r\nPR addresses the issue: #6470  
19594,     make gem use sudo for macOS (#6610)\n\ngem install requires sudo on official macOS build VMs \r\n- make bootstrap use sudo for macOS  
19595,     Add Missing Start-WebListener to Web Cmdlet Tests (#6604)\n\n  
19596,     Some fixes  in Get-Date -UFormat (#6542)\n\n* Use UTC datetime in Get-Date -UFormat %s\r\nFix %l output from 0  11 to 1  12\r\nFix %V using Gregorian calendar\r\n\r\n* Use a workaround for ISO 8601 week of year (uformat %V)  
19597,     Added line break to Acess Denied error message  (#6607)\n\n  
19598,     Fix typos and formatting in Clear-Content Tests ps1 (#6592)\n\n* Fix typos and formatting \r\n* Capitalize function parameters \r\n  
19599,     Fix formatting Clear-EventLog Tests ps1 (#6594)\n\n  
19600,     Fix formatting in Clear-Item Tests ps1  (#6593)\n\n  
19601,     Fix formatting in Convert-Path Tests ps1  (#6595)\n\n  
19602,     Fix Copy Item Tests ps1 (#6596)\n\nFix formatting  absent parameter names and use -Throw and -ErrorID parameters with Should function   
19603,     Added check for existence of Location HTTP header before using it (#6560)\n\nThe HTTP RFC (   ietf org/html/rfc7231#section-6 4) does not require a Location header to be present for redirects  thus it is required to check if the Location header is returned before using it   
19604,     Improve PSMethod-to-Delegate conversion (#6570)\n\nTwo small improvements:\r\n1  Avoid unnecessary reflection in `ConvertPSMethodInfoToDelegate`  `PSMethod` already has the `MethodInfo` information with its `adapterData` field \r\n2  Avoid creating the generic `PSMethod<>` type for `PSMethod` that represents constructors  because constructors cannot be converted to a delegate anyways  In case that the `PSMethod` represents constructors  we use a simple `PSMethod` instance instead \r\n\r\nAlso  rename the type `Unit` to `VOID` to make it more readable  since that type represents `typeof(void)`   
19605,     Update installpsh-<distrofamily> sh Installers to Handle  preview  in version number (#6573)\n\n  
19606,     Support  user@host:port  syntax for SSH Transport (#6558)\n\n  
19607,     Use -Throw and -ErrorId native Pester parameters  (#6574)\n\n  
19608,     Use C# latest language in proj files (#6559)\n\nAddress #6547\r\n\r\nWe begin using C# 7 2 features (Span) but  Net Core doesn\ t seem use  Latest  as default for a language \r\nSo we explicitly set the value   
19609,     Remove the FullCLR-only symbol-info related code from  EventManager cs  (#6563)\n\nThis is because the `AssemblyBuilder` family types do not support emitting symbol information in  NET Core   
19610,     Engine: Fix several code cleanup issues (#6552)\n\n  
19611,     Fix line ending in  DefaultCommands Tests ps1  from CRLF to LF (#6553)\n\n  
19612,     Fix running  pwsh  produced from  dotnet build  (#6549)\n\n  
19613,     Add ported Test-Connection cmdlet (#5328)\n\nThe Test-Connection cmdlet works on Windows and Unix \r\n\r\nImplemented:\r\nPing\r\nContinues Ping\r\nTraceroute\r\nDetect MTU size (seems don t work on Unix because of  Net Core issue)\r\nConnect to TCP port\r\nNot jet implemented:\r\nI m putting this off for the future \r\n\r\nDetect blackhole routers\r\nPingPath\r\nAdditional considerations\r\nAs you can see in the tests  Net Core has issues in API implementation  As a result  some tests are skipped on Unix  There is also one issue on Windows  Related comments added to tests \r\nI m going to open an issue(s) in CoreFX repo \r\n\r\nI think we should break the feedback into two parts:\r\n\r\nscripting functionality\r\ninteractive functionality (display output)\r\nNow I have implemented the output to the screen as the progress bar and as text (without ETS) - we have to decide what is best to use   
19614,     Merge - Get the VisualStudio solution working (#6546)\n\nChanging the project type GUID  This should make the TargetFramework not required to\r\nbuild in Visual Studio for Windows (works on Mac without the change )\r\nAdd the powershell-unix project so you can choose which one to build \r\nremove a resource that wasn t used and fails in VS from two resource files   
19615,     Fix error when  Format-Wide -AutoSize | Out-String  is called  (#6491)\n\n* Add checking if an output width is specified \r\n\r\n* change _failedToReadConsoleWidth variable to _noConsole bool value  \r\nThis variable is to cache the default console width when failed to get  Console WindowWidth  value \r\n\r\n  
19616,     Terminate the loop in PsUtils GetMainModule() which was infinite in case there was no main module  (#6358)\n\n* Terminate the loop in GetMainModule if main module is null \r\n\r\n* Run tests with FileVersionInfo also on non-windows platforms  Add test for process which main module can be null \r\n  
19617,     rename solution to powershell\n  
19618,     Add comments about configuration mappings\n  
19619,     add mappings for unix project\n  
19620,     change project type for unix project\n  
19621,     add comment about project guids\n  
19622,     Fix formatting of tables where headers span multiple rows (#6504)\n\n* In cases where the header spans multiple rows  need to correctly calculate whitespace and trim appropriately\r\n\r\n* Use System Span<int> and C# 7 2 language in SMA\r\n\r\n* Added new ref assemblies to Files wxs\r\nrefactor tests to remove similar xml content\r\nadded single column test case\r\n\r\n  
19623,     Map configurations to correct configurations\n\nThis reverts commit 9cbf6015764c65b191b40c418610b802452b5de7 \n  
19624,     Add Unix project to sln\n  
19625,     Removing invalid resources to make Visual Studio builds compile \n  
19626,     Updating solution file with new project type guids\n  
19627,     Clean up workflow logic in the module loading component (#6523)\n\nClean up workflow logic in the module loading component \r\nWorkflow module is not supported in PSCore \r\nCurrently  Import-Module throws a terminating error when seeing  xaml modules  After the change  Import-Module throws a non-terminating error when seeing  xaml modules   
19628,     Update  Update-Help  to save help content in user scope by default (#6352)\n\nAdd the parameter `-Scope` to `Update-Help`  which takes `AllUsers` or `CurrentUser`  The default value is `CurrentUser`   
19629,     Mark Save-Help PackageManagement tests as pending (#6545)\n\n  
19630,     Remove duplicate  Restore-PSPackage  (#6544)\n\n  
19631,     Simplify the paths the MSI uses (#6442)\n\n- Implementation of PowerShell/PowerShell-RFC#115 (If anything changes in the RFC  we will treat it as a bug  and fix it later)\r\n- Update registry and directory paths to use 6 for the version for stable and 6-preview for a preview release\r\n- Add checkbox to set path\r\n- default checkbox to off for preview builds and on for stable builds  
19632,     Remove empty `Should -Be` statements (#6536)\n\n  
19633,     Fixed scenarios where `NullOrEmpty` string was used instead of `-BeNullOrEmpty` (#6535)\n\n  
19634,     Use new Pester syntax: -Parameter for Pester tests in modules: PowerShellGet  PackageManagement  PSReadLine (#6488)\n\n  
19635,     Make LanguagePrimitive GetEnumerable treat  DataTable  as Enumerable (#6511)\n\n* Make LanguagePrimitive GetEnumerable treat  DataTable  as Enumerable\r\n  
19636,     Add PowerShell logging tests for macOS and Linux (#6025)\n\nThis PR fixes the logging issue on Linux where logging is initialized before `-settingsFile` is parsed causing custom log settings to be ignored  (see ConsoleHost cs and ManagedEntrance cs)\r\n\r\nThe PR also includes basic logging tests for Linux and MacOS  PSSyslog psm1 contains the functions to retrieve selected logged items (based on PowerShell s log id and a timestamp) and Logging Tests ps1 contains tests for Linux and MacOS   
19637,     Use new Pester syntax: -Parameter for Pester in SDK and Provider tests (#6490)\n\n  
19638,     Change the  SaveError  method in Parser to use `nameof` for error ids (#6498)\n\nMany error messages in PowerShell currently use a LINQ expression to pass both the name of the error and the message through in the error processing  This PR uses the `nameof` feature to carry the error name/ID and gets rid of LINQ expression reflection  hopefully improving performance  especially in editor scenarios   
19639,     Enable [Environment ::OSVersion to return current OS rather than compatible version (#6457)\n\n* add application manifest dictating compatibility so that osversion shows appropriate os version on Windows\r\n  
19640,     Make sure that the width of the header is at least the size of the label (or propertyname) (#6487)\n\n  
19641,     Update Dockerfile test to use ubuntu 17 10 as the base image (#6503)\n\n  
19642,     Fix error in windows provider when the environment has accidental duplicates that differ only by case (#6489)\n\nFix error in windows provider when the environment has accidental duplicates that differ only by case \r\n\r\nMake the provider storage for the environment on windows ignore duplicates\u2028 and only report the effective value \r\nAdd tests to verify existing environment get-item behavior and to ensure that Get-Item env:<var> reports the same as $env:<var>  namely the effective value \r\nFixes #6305 and supersedes #6320 based on discussion in #6460   
19643,     Doc: Update Ubuntu source creation commands to use  curl -o  (#6510)\n\nUpdated the Ubuntu source creation commands to remove the need for piping  
19644,     Add the parameter  -Not  to  Where-Object  (#6464)\n\n  
19645,     MSI: add function to generate a MSP (#6445)\n\nadd a function to generate an MSP  
19646,     Merge pull request #6484 from PowerShell/release-v6 1 0-preview 1\n\nRelease v6 1 0 preview 1  
19647,     Add -Resume Feature to Web Cmdlets (#6447)\n\nFixes #5964\r\n\r\nAdds -Resume switch to Invoke-WebRequest and Invoke-RestMethod\r\n\r\n-Resume requires -OutFile\r\n\r\nEnables the ability to resume downloading a partially or incompletely downloaded file \r\n\r\nFile Size is the only indicator of local and remote file parity \r\n\r\nIf the local file is smaller than the remote file and the remote endpoint supports resume  the local file will be appended with the remaining bytes \r\n\r\nIf the local file is larger than the remote file  the local file will be overwritten\r\n\r\nIf the remote server does not support resume  the local file will be overwritten\r\n\r\nIf the local file is the same size as the remote file  the remote endpoint will return a 416 status code  This response is special-cased as a success in this instance  The local file remains untouched and it is assumed the file was already successfully downloaded previously \r\n\r\nIf the local file does not exist it will be created and the entire remote file will be requested \r\n\r\nAdded tests for all code new code paths (I m pretty sure anyway)\r\n\r\nAdded /Resume Controller to WebListener\r\n\r\nDocumented /Resume Controller\r\n\r\nUpdated  spelling to reflect terms in WebListener docs\r\n\r\nNote: I had to change the way GetResponse() tracks the current URI as we now have 3 places where the call is taking place  I don t foresee this causing any regressions  This area needs some refactoring  especially if we want to implement a retry mechanism  
19648,     Add Test-Json cmdlet (NJsonSchema) (#5229)\n\nResolve #4220 \r\n\r\nThe cmdlet is based on NJsonSchema \r\nIt allows to check:\r\n\r\nJSON by only parsing\r\nJSON against Schema\r\nimplicitly check Schema by parsing (based on previous line check)\r\nNJsonSchema is under MIT (approved see    com/PowerShell/PowerShell/pull/5229#issuecomment-342983215)  
19649,     Update stale bot message (#6462)\n\nFix #6446\r\n\r\nAdd  Community members are welcome to grab these works    
19650,     Update docs for v6 1 0-preview 1 release (#6481)\n\n* Update docs\r\n\r\n* Added the missing  stable  label\r\n  
19651,     Update change log for 6 1 0-preview 1 (#6480)\n\n  
19652,     Upgrade tests in test\\powershell\\Host folder to PesterV4 syntax (#6250)\n\n  
19653,     Update tests in Microsoft PowerShell Security folder to use Pesterv4 syntax (#6256)\n\n  
19654,     Update tests in Modules/Microsoft PowerShell Core to use new Pester syntax  (#6349)\n\n  
19655,     Update tests in Modules/Microsoft PowerShell Diagnostics to use new Pester syntax  (#6351)\n\n  
19656,     Add  -AsArray  parameter to  ConvertoTo-Json  command (#6438)\n\nAdd `-AsArray` parameter to `ConvertoTo-Json` command to always pack the output string in array brackets  even if the input is a single object   
19657,     Use new Pester syntax: -Parameter for Pester tests in modules: Microsoft PowerShell Utility and Microsoft WSMan Management  (#6366)\n\n  
19658,     Merged PR 1919: Fix release packaging build (#6459)\n\nFix release packaging build (#6459)\n\nThe release packaging build needs to have  dotnet  in path  fixed that by adding Find-DotNet\nRefactored restore logic so it can be used from both Start-PSBuild and Copy-PSGalleryModules\n  
19659,     Fix release packaging build (#6459)\n\nThe release packaging build needs to have  dotnet  in path  fixed that by adding Find-DotNet\r\nRefactored restore logic so it can be used from both Start-PSBuild and Copy-PSGalleryModules\r\n  
19660,     Fix release packaging build (#6459)\n\nThe release packaging build needs to have  dotnet  in path  fixed that by adding Find-DotNet\r\nRefactored restore logic so it can be used from both Start-PSBuild and Copy-PSGalleryModules\r\n  
19661,     Use  Unregister-Event  to remove an event subscriber when removing  PSEdit  function (#6449)\n\n\r\n  
19662,     Restore for official Linux arm builds (#6455)\n\n  
19663,     Restore for official Linux arm builds (#6455)\n\n  
19664,     Make  -CI  not depend on  -PSModuleRestore  in  Start-PSBuild  (#6450)\n\n  
19665,     Throw better parsing error when statements should be put in named block (#6434)\n\n  
19666,     Fix error in windows provider when the environment as an existing set of variables name that only differs by case (#6320)\n\n- make the provider storage for the environment on windows ignore duplicates\r\n- add tests to verify existing environment get-item behavior  
19667,     MSI: update path with proper value (#6441)\n\nMSI: update path with proper value\r\n- Add verification that path is updated  
19668,     Use new Pester syntax: -Parameter for Pester tests in Language  (#6304)\n\n  
19669,     Change `Get-FileHash` tests to use raw bytes (#6430)\n\n* Change filehash tests to use raw bytes\r\n\r\n* Remove testablescript ps1 from Get-FileHash tests\r\n\r\n* Use BOM-less UTF8 input for Get-FileHash\r\n  
19670,     Add Alpine Linux support (#6367)\n\nsys/sysctl header is not available in musl-libc based systems and system calls are available without any header inclusion  I have ported the cmake test from CoreFX repo (   com/dotnet/corefx/blob/431475b8/src/Native/Unix/configure cmake#L560) \r\n\r\nProgress towards: #4605\r\n  
19671,     Fix the NullRefException when using  -PipelineVariable  with  DynamicParam  block (#6433)\n\n  
19672,     MSI: remove the version from the product name (#6415)\n\nMSI: remove the version from the product name\r\n\r\nDuring patching the original MSI information is displayed \r\nThis makes installing a patch for an MSI with a specific version very confusing   
19673,     migrate the mac offical binary build to VSTS mac hosted preview (#6363)\n\ncreate a PowerShellPackage   ps1 that works with these VMs (vs our custom VM)\r\ncreate a script to create the \\powershell folder with correct permissions\r\na YML VSTS build definition  
19674,     remove runas exe from tests as we have tags to control this behavior (#6432)\n\nremove runas exe from tests as we have tags to control this behavior\r\n- this should reduce the likelihood of errors  
19675,     Update  macos md  and  windows md  with the version number  6 0 2  (#6416)\n\n  
19676,     Update the  ChangeLog md  for 6 0 2 release (#6417)\n\n  
19677,     Stop  ConvertTo-Json  when  Ctrl+c  is hit (#6392)\n\n  
19678,     Change 6 0 1 references to 6 0 2 for  linux md  (#6411)\n\n  
19679,     fix secret and JavaScript compliance issues (#6408)\n\nfix secret and JavaScript compliance issues\r\n- mark secrets as a test only secrets\r\n- make javascript use strict in a specific function  
19680,     Make Resolve-Path -Relative return useful path when $PWD and -Path is on different drive (#5740)\n\n* commands: make rvpa -relative do not return  /absolute_path\r\n\r\nThis happens on Windows when $pwd and -path is on different drive\r\n\r\n* only return relative path inside current root\r\n  
19681,     Update to Governance doc to reflect current working model (#6323)\n\nWith some changes in the PowerShell Team  need to update Governance doc to reflect current working model being used\r\n  
19682,     Add `Waiting - DotNetCore` label (#6406)\n\nAlso  organize labels in alphabetical order   
19683,     Correct the  %c    %l    %k    %s  and  %j  formats in  Get-Date -UFormat  (#4805)\n\n  
19684,     Add  NullReference  checks to two code paths related to  PseudoParameterBinder  (#5738)\n\n1  Add a null check in the tab completion code on the binding result returned from `PseudoParameterBinder`;\r\n2  Add a null check in `CommandDiscovery LookupCommandProcessor` on the `CommandInfo` object returned from the method `LookupCommandInfo`   
19685,     Standard deviation implementation on Measure-Object (#6238)\n\nImplement iterative standard deviation algorithm for Measure-Object  
19686,     Add configuration for    com/probot/stale (#6393)\n\n* Add yml for    com/probot/stale\r\n  
19687,     Fix  PropertyOnlyAdapter  to allow calling base methods (#6394)\n\nFor a PropertyOnlyAdapter  the property may come from various sources  but methods  including parameterized properties  still come from DotNetAdapter  So  the binder can optimize on method calls for objects that map to a custom PropertyOnlyAdapter   
19688,     Update to DotNet 2 0 6 (#6403)\n\nUpdate to DotNet 2 0 6\r\n  - this addresses [Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service (   com/PowerShell/Announcements/issues/4)\r\n  - This is a port of    com/PowerShell/PowerShell/commit/d607f207b9726f1c8b3a115803db2c4d129127e1 to 6 1\r\n  
19689,     Update version numbers to 6 0 2 (#6402)\n\n* Add script to update the version number\r\n* Update version to 6 0 2\r\n  
19690,     Build: Remov version forcing code from NuGet package generation (#6390)\n\n  
19691,     Use new Pester syntax: -Parameter for Pester tests in engine  (#6298)\n\n* Use new Pester syntax: -Parameter for Pester tests in engine \r\n  
19692,     Update CODEOWNERS  
19693,     Pass the  Match  object to $_ for the substitute script block in  -replace  operation (#6029)\n  
19694,     Add lambda support to -replace operator\n\nAdd support for replacement lambdas when using the -replace operator \nRequires minimal changes to existing code by using the following overload:\n    Regex Replace(string input  MatchEvaluator evaluator)\nwhen a ScriptBlock is passed in as the replacement argument \n  
19695,     Support non-GitHub commits in the change log generation script (#6389)\n\n  
19696,     MSI: update architecture specific filenames (#6379)\n\n  
19697,     Add no appimage build (#6380)\n\n  
19698,     Minor code clean-up changes (#5737)\n\n  
19699,     fix errors in start-psbootstrap during release builds (#6159)\n\nset Debian front end to non-interactive during apt-get commands  to avoid error with prompting\r\nadd libffi-dev  which is required for ruby/fpm\r\nlet fpm update to the latest  
19700,     When doing daily/test build in a non-release branch use the branch name as the preview name  (#6355)\n\n  
19701,     Clean the intermediate artifact  psoptions json  from build (#6356)\n\n  
19702,     Use new Pester syntax: -Parameter for Pester tests in Microsoft PowerShell Management module  (#6294)\n\n  
19703,     Added Service Point Manager call to force Tls12  (#6310)\n\nCalls [Net ServicePointManager ::SecurityProtocol = [Net SecurityProtocolType ::Tls12 during bootstrap to download PowerShell core to avoid an error \r\n  
19704,     Add  -Restore  when build win-arm and win-arm64 (#6353)\n\n  
19705,     Add negative tests for Copy-Item over remote sessions (#6231)\n\n  
19706,     Make a relative redirect URI absolute when  Authorization  header present (#6325)\n\n  
19707,     Make sure package verification failure fails the AppVeyor build (#6337)\n\n  
19708,     Make relation-link handling in web cmdlets case insensitive (#6338)\n\n  
19709,     Build: Remove two unneeded lines from  Invoke-AppveyorFinish  (#6344)\n\n  
19710,     Specify the runtime when running  dotnet restore  in  Start-PSBuild  (#6345)\n\n  
19711,     Rename log and logerror to Write-Log  [$message  [-error  (#6333)\n\nFix #6332\r\nThis change renames log and logerror functions to a single Write-Log [$message  [-error  function to avoid conflicting with the log command on MacOS   
19712,     Exclude lines about Pester executing test scripts from terse logs (#6336)\n\n  
19713,     Build: Only restore once (#6335)\n\n* don t restore with every publish\r\n  
19714,     Clean build during daily build to ensure MSI package is generate correctly (#6334)\n\nClean build during the daily build to ensure MSI package is generated correctly\r\n- Do another clean build directly before packaging to clean up files that test has added  
19715,     markdown test: use strict in javascript (#6328)\n\n  
19716,     make Linux packages use correct version scheme for preview releases (#6318)\n\nFixes #6315\r\n\r\nmake Linux packages use correct version scheme for preview releases\r\n- Now uses <Major> <Minor> <Patch>~<PreviewName> instead of <Major> <Minor> <Patch>-<PreviewName> as the - was interpretted as an iteration of the release not a preview   
19717,     Use new Pester syntax: -Parameter for Pester tests in Modules/CimCmdlets (#6306)\n\n* Use new Pester syntax: -Parameter for Pester tests in Modules/CimCmdlets \r\n  
19718,     Rename some tests because they are duplicates (#6312)\n\nAlso remove a couple of language tests which were actually duplicated\r\nChange the one loop which loops through test cases to include an iteration number to remove test name duplication  
19719,     Add support for Debian in installpsh-debian sh (#6314)\n\nThe script installpsh-debian only works for Ubuntu distributions  This PR adds support for Debian as well \r\n\r\nRelated issue:  #5700\r\n\r\n* Remove support for Ubuntu 17 04 in installpsh-debian sh\r\n  
19720,     MSI: Make sure that file components are patchable (#6303)\n\nMSI: Make sure that file components are patchable\r\n- avoid changing names and guids of components between builds as this prevents patch generation\r\n- This required submitting the file generated by heat\r\n- add code to make sure the generated file is not out of date\r\n  
19721,     Tests for Get-Process Cmdlet for Module and FileVersion parameters (#6272)\n\n* Tests for Get-Process cmdlet \r\n\r\n* Tests for Get-Process run as admin \r\n\r\n* Skipping some Get-Process tests on Linux\r\n\r\n* Skip test for -FileVersionInfo parameter for Linux because of the bug that cause the command to hang \r\n\r\n* Add checks for ErrorId in Get-Process tests\r\n\r\n* Change one Get-Process test status to pending for MacOs\r\n  
19722,     Make sure explorer context menu can be patched (#6302)\n\nMake sure explorer context menu can be patched\r\n- set keypath for explorer log context menu  
19723,     MSI: Cause preview builds to install Side by side with release builds (#6301)\n\nMSI: Cause preview builds to install Side by side with release builds\r\n- change the upgrade code if there is a preview part of the version  
19724,     Update CimDSCParser to fix Configuration compilation for DSC (#6225)\n\nUpdate CimDSCParser to fix Configuration compilation for DSC  
19725,     Add TLS1 2 workaround for code coverage script (#6299)\n\n  
19726,     Test for OsLocalDateTime property of Get-ComputerInfo  (#6253)\n\n* Test for OsLocalDateTime property in ComputerInfo \r\n  
19727,     get-childitem -LiteralPath should accept  Include  or  Exclude  filter (#5462)\n\n* get-childitem -LiteralPath should accept  Include  or  Exclude  filter\r\n  
19728,     Enable the pending Save-Help tests in CI (#6289)\n\nSome CI level  Save-Help  tests were disabled in #2806 because HelpInfo URIs for powershell modules were broken (tracked by #2807)  However  they were forgotten to be enabled when the URI issue was fixed  This PR reenables those tests   
19729,     Update docs with test guidelines with RequireSudoOnUnix tag  (#6274)\n\n* Updating testing docs with RequireSudoOnUnix tag   
19730,     Refactor Web Cmdlets Tests to Pester 4 Syntax (#6257)\n\n* Pass with Update-PesterTest\r\n* Search and Replace Pass\r\n* [Feature  Move to BeTrue\r\n  
19731,     Cleanup after Powershell install for CentOS/Fedora Docker Images (#6264)\n\n* Adding  yum clean all  to CentOS 7 Dockerfile reduces docker image size by 76MB\r\n\r\n* Adding  dnf clean all  to Fedora Dockerfile reduces docker image size by 168MB\r\n  
19732,     Updated install md bin path (not packaged documentation) (#5914)\n\n  
19733,     FixBuild: Revert the changes to get Pester from NuGet cache (#6282)\n\nAttempt to fix the macOS build \r\nIn #6263  I tried flushing the cache and it worked in the PR  However  after merging the PR  it turns out the master CI build failed again with the same Pester package restore error  So I m reverting the change that got Pester from NuGet cache   
19734,     Remove AppVeyor specific cmdlet from  Start-NativeExecution  (#6263)\n\nRefreshed the cache by running `dotnet nuget locals all --clear` before `dotnet restore`   
19735,     Restore modules from the NuGet package cache by using dotnet restore (#6111)\n\n  
19736,     Add  Path  alias to  -FilePath  parameters and others for several commands (#5817)\n\n  
19737,     Fix `Start-PSPester` to include or exclude  RequireSudoOnUnix  tag smartly on Unix (#6241)\n\nIf `-sudo` is specified  make sure to include  RequireSudoOnUnix  tag on Unix if the  Tag  is not specified \r\nIf `-sudo` is not specified  make sure to exclude `RequireSudoOnUnix` tag on Unix if the  ExcludeTag  is not specified \r\n  
19738,     change the artifact count for wixpdb (#6254)\n\n  
19739,     use add instead of invoke web request in nanoserver docker file (#6255)\n\n  
19740,     Fix the terse output on Windows for unelevated test run (#6252)\n\n* Fix the terse output on Windows for unelevate test run\r\n\r\n* Make the regex pattern more accurate\r\n  
19741,     revert tests marked pending in #6230 (#6251)\n\n  
19742,     fix MSI creation errors  and capture wixpdb for later patch creation (#6221)\n\n- add `wixpdb` output when creating `MSI` package\r\n- capture `wixpdb` in official build\r\n- clean up anything left behind from previous MSI builds before starting MSI build to prevent using dirty files \r\n- make sure MSI creation fails if there is an error\r\n- ignore ` wixpdb` files in git\r\n- Add functionality to `Start-NativeExecution` to \r\n    - only display output if there is an error \r\n    - log caller information\r\n- WXS validation error fixes\r\n    - Remove unused `ExitDialog` to fix ICE82\r\n    - Add KeyPath to `SetPath` to fix ICE18\r\n    - Use `HKMU` which translates to `HKLM` to runtime to fix various validation errors about creating the shortcut\r\n- Suppress Validation errors\r\n    - suppress ICE61  which is about same version upgrades being allowed\r\n    - suppress ICE57  caused by the shortcut not being installed per user  
19743,     Add scripts to generate unified Nuget package (#6167)\n\nRemove the functions which generated Nuget packages for Windows \r\nAdd function New-UnifiedNugetPackage to generate nuget packages for each assembly with unix and windows runtimes \r\nAdd function New-NuSpec and New-ReferenceAssembly for creating the required items forNew-UnifiedNugetPackage \r\nAdd a sample for cross platform project with conditional compilation for Linux \r\nAdd function Publish-NugetToMyGet to publish nuget packages to powershell myget or  
19744,     Fix date tests failing in travis CI full builds (#6249)\n\n\r\n  
19745,     Fix table alignment and padding  (#6230)\n\n- The original change to remove extra padding didn t take into account alignment \r\n  Fix logic to accommodate left  center  and right alignment in the table format and also add tests \r\n- Fix ImplicitRemoting test that validates formatting to use same instance due to formatting changes in this PR\r\n- Only use loopback to same powershell instance for formatting test as the other tests implicitly expect Windows PowerShell   
19746,     Add RequireSudoOnUnix tag for get-help <cmdletName> tests  (#6223)\n\n\r\n  
19747,     Use TLS 1 2 in Start-PSBootStrap Without Breaking HTTPS (#6236)\n\n  
19748,     Uses TLS 1 2 on Windows during Start-PSBootstrap (#6235)\n\n* Fixed TLS version error on Windows when building PowerShell\r\n  
19749,     Set pipeline thread stack size to 10MB (#6224)\n\n  
19750,     use powershell windowsservercore docker image for release builds (#6226)\n\n  
19751,     Make it clearer how and what to mark as  not applicable  in PR template (#6209)\n\n  
19752,     Fix a typo in the help content of `pwsh` in ManagedEntranceStrings resx\n\n  
19753,     fix various places that still refer to old versions of pwsh (#6179)\n\n  
19754,     Add Password parameter to Get-PfxCertificate cmdlet (#6113)\n\nAdd Password parameter to Get-PfxCertificate cmdlet to allow automatization instead of prompting for password every time   
19755,     Docs: correct a linux installation typo (#6219)\n\n  
19756,     Refactor new-msipackage into packaging psm1 (#6208)\n\nRefactor new-msipackage and related function into packaging psm1\r\n  
19757,     Don t add trailing spaces to last column when using Format-Table (#5568)\n\n* don t add trailing space to last column in table\r\n\r\n* fix out-file tests to new behavior of no padding trailing spaces\r\n  
19758,     [breaking change  Throw terminating error in New-TemporaryFile and make it not rely on the presence of the  TEMP  environment variable (#6182)\n\n- Fixes issue #4634 by throwing a terminating error as agreed \r\n- Makes the command not rely on the presence of the TEMP environment variable to get path to temp directory and use the  Net method Path GetTempPath() instead \r\n- Catch exception more specific as given by the documentation\r\n- Improve existing test \r\n  
19759,     Add tests for *-Item Cmdlets in Function Provider (#6172)\n\n  
19760,     Add -SkipHeaderValidation Support to ContentType on Web Cmdlets (#6018)\n\n* Add SkipHeaderValidation Support to ContentType on Web Cmdlets\r\n\r\n* Move -SkipHeaderValidation Tests to Contexts\r\n\r\n* Add ContentType -SkipHeaderValidation Tests\r\n\r\n* Improve ContentType Exception\r\n\r\n* Improve error message on invalid -ContentType\r\n  
19761,     Add common aliases for all write-* commands default message parameter (#5816)\n\n* add common write aliases\r\n\r\n* add Message alias to the MessageData parameter for Write-Information\r\nadd  Msg and Message alias to the Object perameter for Write-Host\r\n\r\n* Add tests for new aliases\r\n  
19762,     Docker package test fix and updates (#6169)\n\n  
19763,     Add options to enable PSRemoting and register Windows Event Logging Manifest to MSI installer (#5999)\n\n  
19764,     [feature  Make UTF-8 Default Encoding for application/json (#6109)\n\nWhen a charset is not supplied for a JSON response  the default encoding should be UTF-8 per RFC 8259  This commit changes the default charset to UTF-8 for JSON responses when a charset is not defined   
19765,     Revert PR 6043 - Adds script to patch the shortcut working directory to the user s home folder (#6203)\n\nRevert PR 6043 - Remove failing script from MSI\r\n\r\nreverted from commit 795c611  
19766,     change the registry version detection value to semver from the default value (#6192)\n\nchange the registry version detection value to semanticversion from the default value\r\nfixes #6171  
19767,     Add tests for Set-Item Cmdlet for Function Provider  (#6166)\n\n  
19768,     fix spelling failures in CI (#6191)\n\nThis fixes spelling failures in CI  It appears to be caused by a change in the tool used to test spelling\r\nThis change:\r\n\r\n-Updates the dictionary for new and words which are detected differently\r\n-updates markdown where it is more appropriate\r\n-adds one file to the markdown tests   
19769,     Support running tests in root privilege on Linux  (#6145)\n\nSupport running tests in root privilege on Linux by adding the `REQUIRESUDOONUNIX` tag \r\n- Delete skip tag in tests which require `sudo`   
19770,     Enable $env:PAGER to work correctly if arguments are used (#6144)\n\nCorrectly parse $env:PAGER with args like  less -w    
19771,     Invoke-Item Tests ps1 handles finding multiple ping executables  (#6120)\n\nInvoke-Item Tests ps1 handles finding multiple ping executables \r\n\r\nFixes Issue #5220  
19772,     Update copyright and license headers (#6134)\n\nBased on standard practices  we need to have a copyright and license notice at the top of each source file  Removed existing copyrights and updated/added copyright notices for  h   cpp   cs   ps1  and  psm1 files \r\n\r\nUpdated module manifests for consistency to have Author =  PowerShell  and Company =  Microsoft Corporation   Removed multiple line breaks \r\n\r\nSeparate PR coming to update contribution document for new source files: #6140\r\n\r\nManually reviewed each change \r\n\r\nFix #6073  
19773,     [breaking-change  Fix range operator (#5732)\n\nBreaking-change:   0    9  returns [char  previously in PowerShell Core (6 0 0  6 0 1)  now it returns [int   After the change  the behavior is the same as in Windows PowerShell \r\n  
19774,     Update Raspbian installation instructions to create pwsh symlink (#6122)\n\n* Update Raspbian installation instructions to create pwsh symlink\r\n\r\n  
19775,     add guidance on adding copyright and license header to new source files (#6140)\n\n  
19776,     Update examples to 6 0 1 and removed a removed parameter in Install-PowerShellRemoting ps1 (#6060)\n\nThe PowerShellVersion parameter no longer exists in Install-PowerShellRemoting ps1 \r\nUpdated examples to 6 0 1 from alpha 9  
19777,     Refactor the Get-Content tests to use -TestCases  (#6082)\n\n  
19778,     Get-ChildItem <PATH>/* -file should include <Path> as search directory (#5431)\n\n* get-childitem <PATH>/* -file should include <Path> as search directory\r\n\r\n* [Feature  Added check for -Directory and more tests\r\n\r\n* [Feature  Added check for the dynamic parameter type\r\n\r\n  
19779,     Improve table view for Certs and Signatures by adding EnhancedKeyUsageList and StatusMessage (#6123)\n\n* add EnhancedKeyUsageList to default table view of X509Certs\r\nadd StatusMessage to default table view of cert signatures\r\n\r\n* set fixed width of 20 to Subject so more room for EnhancedKeyUsageList content\r\nchange EnhancedKeyUsageList to script to just show the friendly name\r\n  
19780,     add scripts to set/update the release tag in VSTS (#6107)\n\n  
19781,     Msi installer: Add smoke test (#6105)\n\nPR 6043 broke the installer (issue #6095)  To prevent this from happening in the future  add a smoke test that installs the msi in appveyor build and make build fail if installation failed \r\nIt uses the exit code to determine the success  The reason why it does not fail in the current state is because as I pointed out here  the failing custom action is not returning its exit code   
19782,     Update  Restore-PSPester  to use  Save-Module  (#6112)\n\nUpdate Restore-PSPester to use  Save-Module  to get the latest version of Pester \r\nWe have moved to the latest version of Pester via PR #6064  
19783,     Use  RequireAdminOnWindows  tag in Set-Date tests (#6034)\n\n* Use  RequireAdminOnWindows  tag instead of  Test-IsElevated  function \r\n\r\n* Fix incorrect condition of user privilege in Linux/macOS CI  
19784,     Update test framework and tests to support 4x version of Pester (#6064)\n\n* Test fixes and changes needed to support Pester 4 0 8\r\n\r\n* Replace  Should Contain  with new  Should FileContentMatch  assertion\r\n\r\nExplicitly check for string creation with write-output\r\n\r\n* Use the current version of pester and install it in modulesDir\r\n\r\n* Simplify logic for relative path test \r\n\r\nMultiple      is not needed for a relative path  a single one will do  Also  on multi-drive systems using split-path -noqualifier will probably do the wrong thing with regard to constructing a correct path \r\nRemove extraneous Should Not Throw test  if this throws  the test will fail  we don t need to explicitly assert the not throw\r\n\r\n* In some environments it is possible that computer name is  localhost   so that should be allowed\r\n\r\n* [feature  Add link for migrating tests from Pester v3 to v4\r\n\r\nFix up capitalization and white space issues\r\nChange one test to check FullyQualifiedErrorId rather than just `Should Throw`\r\n\r\n* [feature  update invoke-item test to handle the case where multiple notepad processes are running\r\n\r\n* Fix spelling issue with Pester 4x  calling it Pester 4 should be sufficient\r\n  
19785,     Add registry value for easy detection (#6094)\n\nAdd registry value for easy detection  For example  the presence of a single key of 6 0 * x64  This is much faster than MSI detection \r\n\r\nNote there are currently two GUIDs  one for 6 0 * x64 and one for 6 0 * x86 \r\n\r\nfixes #6090\r\n  
19786,     Enable setting PSSession Name when using SSHTransport and added Transport property (#5954)\n\nWhen using New-PSSession -SSHTransport -Name     the Name parameter wasn\ t being used when creating the remoterunspace so an automatically generated one was always created \r\nFix is to explicitly pass the transport name when generating a runspace name including other transports like VMBus and Container \r\n\r\nRefactor runspace name generation code to produce  RunspaceN  and added a Transport property \r\n\r\nTests will have to wait until we have the infrastructure for remoting tests and Enable-SSHRemoting work is complete \r\n\r\nFix #5951\r\nFix #2426  
19787,     change logo to SVG (#6072)\n\nCurrent README uses a PNG which doesn t scale for high dpi displays (starts to look fuzzy) \r\nCreated 64 pixel wide version of svg of the black logo and inserted into README md \r\nNote that it currently doesn t render as the absolute URL points to master so that it gets\r\nrendered correctly in other places where the README md is used (like docker hub)   
19788,     [Feature  Remove -TimeOutSec from non timeout related tests (#6055)\n\nThe timeout mechanism should be supported by the test framework (Pester here)   
19789,     Fix the filtering of analytic events on Unix platforms  (#6086)\n\n- Remove previous `UseAlwaysAnalytic` workaround in `SysLogProvider Log`\r\n- Update Script Block logging to always log to the operational channel with `UseAlwaysOperational`\r\n- Fix `PSChannel` on Linux to use a bitmask\r\n- Handle `UseAlwaysOperational` and `UseAlwaysAnalytic` keywords but adding to `_keywordFilter` if the associated channels were selected in the configuration\r\n  
19790,     Doc: Fix the command to build type catalog in internals md (#6084)\n\n  
19791,     Remove unsupported members from the enum  Language  in Add-Type (#5829)\n\n[breaking change \r\nRemove the unsupported members (various versions of CSharp and `JScript`) from the enum  Language  in Add-Type  After this change  `Add-Type -Language` only supports `CSharp` and `VisualBasic`   
19792,     Change Web Cmdlet Tests to Use 127 0 0 1 not Localhost (#6069)\n\nChange Web Cmdlets Tests to Use 127 0 0 1 instead of localhost due to dotnet/corefx#24104\r\nThis provides a decent speed boost to the WebCmdlet tests (Faster in dozens of times) \r\n  
19793,     Build: Update PowerShell to build with  NET Core SDK 2 1 4 (#6054)\n\n  
19794,     Test: Add Verbosity and more accurate timeout implementation for Start-WebListener (#6013)\n\n- Add verbosity to the WebListener when it fails to assist in troubleshooting\r\n- Switch the WebListener initialization timeout to count cycles instead of using fixed dates to work around possible VM CI sleep/ issues   
19795,     add comments about where most of the packages are from (#6016)\n\n  
19796,     Add Environment Variable override of telemetry (#6063)\n\nInspired by dotnet cli  and allows for Telemetry opt-out on packaging systems such as AppImage and Snapcraft where the filesystem is immutable   
19797,     Fix  Pull Request Process  dead link (#6066)\n\nFix  Pull Request Process  anchor links in governance md  
19798,     Adds script to patch the shortcut working directory to the user s home folder  (#6043)\n\nUpdate the shortcut created by the installer to use %HOMEDRIVE%%HOMEPATH% for the working directory   
19799,     new `Issue-Announcement` label (#6041)\n\n  
19800,     Resort parameter list in alphabetical order (#6052)\n\nAfter #5920 we should reorder parameter list (#4989)  
19801,     update processes to allow for coordinated vulnerability disclosure (#6042)\n\n  
19802,     Rework Windows Start menu folder name (#5891)\n\nChanges the Windows start menu folder name from ProductSemanticVersionWithName to ProductSemanticVersionWithNameAndOptionalArchitecture - now the start menu is `PowerShell` for all versions   
19803,     Merge branch  6 0 1  into master\n\n# Conflicts:\n#\tdocker/release/fedora27/Dockerfile\n#\tdocs/installation/linux md\n#\tdocs/installation/macos md\n#\ttools/metadata json\n  
19804,     CI Build: Use TRAVIS_PULL_REQUEST_SHA to accurately get the commit message (#6024)\n\n  
19805,     Skip tests that use ExecutionPolicy cmdlets on Unix (#6021)\n\n  
19806,     update date on change log (#6023)\n\n  
19807,     Fix  gitignore (#5991)\n\nUse single  *  in file name /src/TypeCatalogGen/powershell* inc  
19808,     Add  -settingsfile  to  pwsh  to support loading a custom powershell config file  (#5920)\n\nSupport loading a custom `powershell config json` file via the command-line for use in testing \r\nThis change supports replacing the default `powershell config json` file that s usually loaded from the `PSHome` directory with a custom version file \r\n\r\nThe primary use-cases for this command-line option are as follows:\r\n1  Allow the CI system to disable settings that impact test run times; such as disabling syslog usage on Linux and MacOS\r\n2  Support testing of syslog and os_log without interfering with normal PowerShell operations during test runs via launching an instance with custom log settings   
19809,     Add Simplified multipart/form-data Support to Web Cmdlets Through -Form Parameter (#5972)\n\n- Adds -Form Parameter to Invoke-WebRequest and Invoke-RestMethod \r\n- Form Accepts any IDictionary \r\n- Keys are used as multipart/form-data field names (PSObject unwrapped and ConvertTo<String>(Object)) \r\n- FileInfo values are added as StreamContent with application/octet-stream content type and the FileInfo Name as the file name \r\n- Strings are treated as StringContent \r\n- Singe values are converted to string with ConvertTo<String>(Object) and treated as StringContent\r\n- Top level collections are enumerated and converted as above  Nested collections are treated as a single value and converted accordingly \r\n- Form is mutually exclusive with -Body and -InFile \r\n- Per PowerShell-Committee decision  -Form makes no assumptions about the HTTP method used  It can theoretically be used with any method  User will need to manually supply -Method POST to post the form \r\n- ContentType and content related headers supplied to -Headers will be ignored/cleared as MultipartFormDataContent requires control of these headers \r\n  
19810,     Change Microsoft PowerShell Commands SetDateCommand SystemTime to struct  (#6006)\n\nChange Microsoft PowerShell Commands SetDateCommand SystemTime class to struct and resolve the error in Set-Date cmdlet - SetLocalTime function is causing a parameter error (error code 0x00000057)   
19811,     Return better error for  pwsh -WindowStyle  on unsupported platforms  (#5975)\n\n  
19812,     Fix a NullReference exception in Enter-PSHostProcess (#5995)\n\n  
19813,     Start using Travis-CI cache (#6003)\n\n  
19814,     tests: fix function to test for docker OS due to change to use linuxkit for mac (#5843)\n\n* Also  fix syntax issues to allow to work with released Pester\r\n  
19815,     Remove Fedora 25  Add Fedora 27 (#5984)\n\nFedora 25 was EOL on December 12  2017\r\n\r\n   org/fedora-25-end-life/\r\n\r\nSigned-off-by: Eli Uriegas eli uriegas@docker com  
19816,     update 6 0 1 change log (#5937)\n\n  
19817,     Revert  Pull PSReadLine from PSGallery  (#5986)\n\nThis reverts commit beffdcf94d00b51d9339bb26dbc0e477cd147c92 \r\n  
19818,     Fix build/package/installation scripts for SLES (#5918)\n\nSmall changes to the SUSE installation script so that it allows installing on SLES 12+ in addition to openSUSE 42+  
19819,     Update csproj files to the latest version of the package references (#5961)\n\n* Add function which tells you packages which probably need to be updated  
19820,     Pull PSReadLine from PSGallery (#5759)\n\nInstead of building PSReadLine from this repo  pull it from the gallery using nuget cache \r\n\r\nThis pulls v2 0 of PSReadLine which does have documented breaking changes from v1 2  but the risk is small - the features that have changed are typically only used in a profile and aren t used all that often anyway \r\n\r\nFix #996\r\n\r\nHardcodes version of modules pulled from PSGallery\r\n  
19821,     Logging: Fix the escaped characters when generating   resx  file from PowerShell ETW manifest  (#5892)\n\n  
19822,     Update docs and scripts for PowerShell 6 0 1 release (#5938)\n\n  
19823,     Stop HttpListener from running in WebCmdlet tests (#5921)\n\n  
19824,     Merge and Sort BasicHtmlWebResponseObject and ContentHelper (#5720)\n\n* Merge and Sort BasicHtmlWebResponseObject\r\n\r\n* Merge and sort ContentHelper\r\n  
19825,     Update recommended WiX toolset link to be generic to WiX 3 x but mention that latest version of 3 11 has to be taken (#5926)\n\n* Update recommended WiX toolset link to be generic to WiX 3 x but mention that the latest version of 3 11 has to be taken \r\n  
19826,     Encoding for New-ModuleManifest on all platforms should be UTF-8 NoBOM (#5923)\n\n* encoding for new-modulemanifest on all platforms should be utf8nobom\r\n* fix test\r\n  
19827,     Packaging: simplify building an installable package for Windows (#5871)\n\nThis is the continuation of PR 5499 that had to be abandoned due to a fatal merge conflict and I did not want to risk accidentally reverting recent fixes \r\n\r\n    Remove unnecessary/unused default for productGuid because it always gets a new Guid when being called from Start-PSPackage\r\n    Add defaults for required files but also add extra path validation attribute\r\n    Rename ProductGuid to ProductCode\r\n  
19828,     Update PowerShell to build with  NET Core 2 0 5 (#5903)\n\n  
19829,     Doc: Add a missing step to prepare the build environment on Mac  (#5901)\n\n  
19830,     Remove  PSv2  only code from  Types_Ps1Xml cs  and  HostUtilities cs  (#5907)\n\n\r\n  
19831,     Set-Location should use path with wildcard characters if it exists instead of globbing (#5839)\n\nWhen InitialSessionState initializes it tries to SetLocation to current working directory \r\n but if the directory name contains PowerShell wildcard characters  it fails and reverts\r\n to $PSHOME \r\n The change affects Set-Location in that if the path exists (even if containing wildcard characters)  just use it  It is a breaking change   
19832,     Use HKLM instead of HKCU registry keys since the current installation scope is perMachine  (#5915)\n\n  
19833,     Fix typos in breakingchanges md (#5913)\n\n  
19834,     Update PowerShell to build with  NET Core 2 0 5 (#5903)\n\n  
19835,     Replace HttpListener Link Header Tests with WebListener (#5806)\n\n- Add Link controller to WebListener\r\n- Replace HttpListener Link tests with WebListener\r\n- Update WebListener Documentation\r\n- Enable cross-platform multiple Link header tests\r\n  
19836,     fix version test to allow not to have a pre-release portion  (#5893)\n\n\r\n  
19837,     [Feature  Replace HttpListener Echo Tests with WebListener (#5840)\n\n  
19838,     [Feature  Replace HttpListener Redirect Tests with WebListener (#5872)\n\n- adds type query to Redirect listener and adjusts logic to accommodate\r\n- Replaces HttpListener Redirect Tests with WebListener\r\n  
19839,     Update BREAKINGCHANGES md to Include Web Cmdlets Breaking Changes (#5852)\n\n  
19840,     Do not pass ArgumentAst to CreateArgument for -encodedarguments (#5836)\n\nWhen calling powershell from powershell (called the minishell for historical reasons)  the arguments are passed as a base64 encoded string \r\n\r\nThe native command parameter binder was trying to match up the ast to the argument value  which in this case  doesn t make sense \r\n\r\nThe fix is to ignore the ast during parameter binding for this case of calling powershell from powershell \r\n\r\nFix #5733   
19841,     Update  macos md  to use  brew cask upgrade  for upgrading powershell (#5875)\n\n  
19842,     Documentation - Add verfication step to Mac OS install docs (#5860)\n\n\r\n  
19843,     Handle path that contains spaces in  RegisterManifest ps1  (#5859)\n\n  
19844,     Fix [releases  link in macOS install docs (#5861)\n\n  
19845,     Fix start menu folder clash of shortcut when x86 and x64 are both installed by appending   (x86)  for x86 to the   (#5826)\n\n  
19846,     CimDscParser: Add better error message when a file is not found (#5838)\n\n  
19847,     Merge 6 0 0 into master\n\n# Conflicts:\n#\t github/Images/GitHub-PR png\n#\tassets/Product wxs\n#\tdocs/installation/linux md\n#\tdocs/installation/macos md\n#\tdocs/installation/windows md\n#\ttest/powershell/Modules/Microsoft PowerShell Utility/WebCmdlets Tests ps1\n#\ttools/metadata json\n  
19848,     tests: fix function to test for docker OS due to change to use linuxkit for mac (#5843)\n\n* Also  fix syntax issues to allow to work with released Pester\r\n  
19849,     Add the breaking changes doc (#5620)\n\n  
19850,     Update ChangeLog md for PowerShell 6 0 0 GA release (#5835)\n\n  
19851,     Add a test for IValidateSetValuesGenerator in a module (#5830)\n\nAdd a test that has been skipped in PR #5702  
19852,     Make Explorer context menu registry entries platform specific to allow side by side of x86 and x64  The main menu has a   (x86)  appended to the main menu  (#5824)\n\nMake explorer context menu registry entries platform specific to allow them to work also when both x86 and x64 are installed  The main menu has a   (x86)  appended to the main menu as well   
19853,     Update docs and scripts for PowerShell 6 0 0 GA release (#5837)\n\n  
19854,     Seperate macOS from Linux install instructions  (#5823)\n\n  
19855,     Reduce image file sizes using lossless compression with imgbot (#5808)\n\n  
19856,     Convert WebCmdlets test to one-true-brace-style Formating (#5716)\n\n  
19857,     Fix ValidateSet with generator in a module (#5702)\n\nThe symbol resolver was properly resolving the type to the class\r\ndefinition  but that resolution was ignored at runtime because we used\r\nthe string instead of the ITypeName - the ITypeName kept the reference\r\nto the class definition \r\n\r\nFix #5661  
19858,     Remove sc alias which conflicts with sc exe (#5827)\n\n  
19859,     Updated Help Uri to point to latest help content for Microsoft PowerShell Core module (#5820)\n\n  
19860,     packaging: x86 package gets installed as an x64 component and has the same UpgradeCode as the x64 installer leading to an uninstallation of an x64 installation (and vice versa) (#5812)\n\nFix bug #5597: x86/x64 installer are uninstalling each other when installing either of them:\n\n-Make x86 installer to be installed as an x86 component (-arch argument to candle exe  which sets the `sys BUILDARCH` variable)\n-Make the UpgradeCode unique per platform\n-Replace `var ProductTargetArchitecture` variable with sys BUILDARCH use to have only 1 variable for the architecture\n-Additionally  the architecture was appended to the package name to be able to distinguish the installations \n\n# Conflicts:\n#\tassets/Product wxs\n  
19861,     Update the installation doc for Raspberry-Pi about supported devices (#5773)\n\n  
19862,     Fix a typo and a Markdonw linting error in the Pull Request Template (#5807)\n\n  
19863,     Move group policy settings and enable policy controlled logging in PowerShell Core (#5791)\n\nMake PowerShell Core reads group policy settings from different registry keys (Windows only) and the configuration files (both Windows and Unix) \r\n- On Windows  move to different GPO registry keys \r\n- On both Windows and Unix  read GPO related settings from the configuration file `powershell config json` \r\n- On Windows  the policy settings in registry take precedence over the configuration file \r\n- Enable policy controlled logging and transcription on Unix   
19864,     Remove sc alias which conflicts with sc exe (#5827)\n\n  
19865,     Updated Help Uri to point to latest help content for Microsoft PowerShell Core module (#5820)\n\n  
19866,     packaging: x86 package gets installed as an x64 component and has the same UpgradeCode as the x64 installer leading to an uninstallation of an x64 installation (and vice versa) (#5812)\n\nFix bug #5597: x86/x64 installer are uninstalling each other when installing either of them:\r\n\r\n-Make x86 installer to be installed as an x86 component (-arch argument to candle exe  which sets the `sys BUILDARCH` variable)\r\n-Make the UpgradeCode unique per platform\r\n-Replace `var ProductTargetArchitecture` variable with sys BUILDARCH use to have only 1 variable for the architecture\r\n-Additionally  the architecture was appended to the package name to be able to distinguish the installations \r\n  
19867,     Update the installation doc for Raspberry-Pi about supported devices (#5773)\n\n  
19868,     Fix a typo and a Markdonw linting error in the Pull Request Template (#5807)\n\n  
19869,     Move group policy settings and enable policy controlled logging in PowerShell Core (#5791)\n\nMake PowerShell Core reads group policy settings from different registry keys (Windows only) and the configuration files (both Windows and Unix) \r\n- On Windows  move to different GPO registry keys \r\n- On both Windows and Unix  read GPO related settings from the configuration file `powershell config json` \r\n- On Windows  the policy settings in registry take precedence over the configuration file \r\n- Enable policy controlled logging and transcription on Unix   
19870,     [Feature  Address Steve s new comments\n  
19871,     [Feature  Consider a policy is undefined if none of its properties are set\n  
19872,     Move checkbox to the top to allow toggling it using the space bar (the Enter key already defaults to the `Finish`) button  (#5792)\n\nMove definition of Launch PowerShell checkbox to the top to allow toggling it using the spacebar (the Enter key already defaults to the Finish button) \r\nReuse product name variable   
19873,     SAL annotation updates & fix warnings (#5617)\n\nVarious SAL annotations were either incorrect or not backed up by code  This PR address these issues \r\n\r\nNOTE: By default  Start-BuildNativeWindowsBinaries does not enable code analysis and issues detected by SAL annotations are not reported  To identify these issues  run Start-BuildNativeWindowsBinaries to generate the solution and vcxproj files  Launch a Visual Studio developer prompt  cd to src\\powershell-native and run msbuild manually \r\n\r\n> msbuild PowerShellNative sln /p:RunCodeAnalysis=true /p:Configuration=RelWithDebInfo /p:Platform=x64\r\n\r\nThe following changes address all code analysis warnings:\r\n\r\n- GetRegistryInfo in NativeMsh had incorrect out annotations  remove __opt\r\n- Fix handling of various out parameters - check for non-null and initialize\r\n- Update and Align SAL annotations for GetFormattedErrorMessage overloads\r\n- Allow PluginException to accept NULL message \r\n  
19874,     docs: update submodule documentation for pester removal (#5786)\n\nSince Pester is not a submodule anymore  replace submodule example in git submodule docs/FAQ md with the only leftover submodule src/libpsl-native/test/googletest  
19875,     [Feature  Change two methods to use  private  modifier \n  
19876,     Rename  PowerShellProperties json  to  powershell config json \n  
19877,     Re-enable group policy settings from registry\nOn windows  group policy settings from registry takes precedence over the configuration file \nIf a policy is not defined in GP  then we query from configuration file \n  
19878,     docs: update submodule documentation for pester removal (#5786)\n\nSince Pester is not a submodule anymore  replace submodule example in git submodule docs/FAQ md with the only leftover submodule src/libpsl-native/test/googletest  
19879,     Add ForEach and Where methods to [PSCustomobject  (#5756)\n\n  
19880,     Add option to add explorer context menu in Windows installer (#5774)\n\nA new dialogue is added in the Windows installer to offer the option of adding explorer exe context menus to open PowerShell in the current location as a normal shell or as administrator  The context menu entries are achiveven via registry entries and is available when right-clicking on:\r\n- the background of explorer\r\n- a folder in explorer\r\n- a drive in explorer\r\n- on the Desktop\r\n  
19881,     Show usage (short) help if command line parameter is wrong (#5780)\n\nShow usage (short) help if command line parameter is wrong\r\nShow extended (full) help message with pwsh -h\r\nSplit Help message on Usage and Extended\r\n  
19882,     Address one of Dan s comments\n  
19883,     remoting: Handle DLLImport failure of libpsrpclient (#5622)\n\nIssue #4029 exposed two problems when failing to load libpsrpclient \r\n\r\nWSManAPIDataCommon ctor was not identifying the binary that failed DLLImport; hindering diagnosability\r\nPrioritySendDataCollection Clear() would throw a NullReferenceException when called from the finalizer after an error path \r\nThis change addresses both of the above:\r\n\r\nGuard against null arrays in PrioritySendDataCollection Clear() - called from finalizer in error paths \r\n\r\nDiagnosability: Log the DllNotFoundException in WSManAPIDataCommon ctor and also include it as the internal exception when throwing PSRemotingTransportException   
19884,     Build: Update Restore-PSPester to include the fix for nested describe errors (#5771)\n\nUpdate Restore-PSPester to include PR PowerShell/psl-pester#12 that fixes PowerShell/psl-pester#11 - unhandled exceptions in before/after bypasses Pester s enddescribe logic   \r\nUpdate to the latest  while we are at it   
19885,     [Feature  Minor changes to make ScriptBlock logging work with SysLog\n  
19886,     Add xUnit tests for reading Policy settings from config file\n  
19887,     Refactor GroupPolicy setting related code to use the configuration file\n  
19888,     Rename file PropertyAccessor cs to PSConfiguration cs\n  
19889,     Rename  PropertyScope  to  ConfigScope \n  
19890,     Refactor  PropertyAccessor cs \n\n- Remove the unneeded base type;\n- Rename  ConfigPropertyAccessor  to  PowerShellConfig ;\n- Move  PowerShellConfig  to the namespace  System Management Automation Configuration \n  
19891,     Enable logging on Linux through MshLog\n  
19892,     remoting: Handle DLLImport failure of libpsrpclient (#5622)\n\nIssue #4029 exposed two problems when failing to load libpsrpclient \r\n\r\nWSManAPIDataCommon ctor was not identifying the binary that failed DLLImport; hindering diagnosability\r\nPrioritySendDataCollection Clear() would throw a NullReferenceException when called from the finalizer after an error path \r\nThis change addresses both of the above:\r\n\r\nGuard against null arrays in PrioritySendDataCollection Clear() - called from finalizer in error paths \r\n\r\nDiagnosability: Log the DllNotFoundException in WSManAPIDataCommon ctor and also include it as the internal exception when throwing PSRemotingTransportException   
19893,     Build: Update Restore-PSPester to include the fix for nested describe errors (#5771)\n\nUpdate Restore-PSPester to include PR PowerShell/psl-pester#12 that fixes PowerShell/psl-pester#11 - unhandled exceptions in before/after bypasses Pester s enddescribe logic   \r\nUpdate to the latest  while we are at it   
19894,     Fail AppVeyor Build if MSI does not build (#5755)\n\nBefore this PR  when a WiX compilation error occurs then an error is thrown  which appears in the log with details but the AppVeyor build itself is still marked as green \r\nThis PR makes the console host also return an exit code of -1 when being run on AppVeyor so that it can then interpret it as a build failure and mark the build as red  It uses the fact that AppVeyor defines an environment variable named CI  Exiting is OK since the MSI build is the last step in CI and nothing happens after that \r\nThe git history shows a test build that proves that this works if the installer was broken   
19895,     Cleanup temporarily created WiX files after compilation to be able to have a clean re-build (#5757)\n\nWhen changing the WiX installer locally and rebuilding the MSI one can get into the terrible situation whereby a code change does not get compiled into the new MSI \r\nThis PR fixes the root cause of it  which is due to temporary WiX files that are created but not deleted after compilation and WiX then somehow decides to not recompile properly \r\n\r\nI also removed redundant parenthesis of surrounding code   
19896,     tools: fix install-powershell for running during window setup (#5727)\n\n\r\n    Set the system path instead of the user path so that all users can use the installation\r\n    If the required destination folder doesn t exist  create it\r\n  
19897,     Make minor fixes in Compiler to properly handle void type expression (#5764)\n\n  
19898,     Add Count and Length properties to [PSCustomobject  (#5745)\n\nRelated #3671\r\n•Add Count and Length properties to [PSCustomobject  \r\n Now following returns 1:\r\n ([pscustomobject  @  foo =  bar   ) Count\r\n ([pscustomobject  @  foo =  bar   ) Length\r\n•Add tests\r\n  
19899,     Automate the generation of release change log draft (#5712)\n\nCreate the module  releaseTools psm1  under  tools  folder  which expose the function  Get-ChangeLog  to generate a release change log based on the local commit history   
19900,     [Feature  Replace lee io Tests with WebListener  (#5709)\n\n  
19901,     Automate the generation of release change log draft (#5712)\n\nCreate the module  releaseTools psm1  under  tools  folder  which expose the function  Get-ChangeLog  to generate a release change log based on the local commit history   
19902,     Change Github to GitHub in CONTRIBUTING md (#5697)\n\nCorrect branding is important   
19903,     Fixed incorrect release date on the changelog (#5698)\n\nWas showing November but should be December   
19904,     Add instructions to deploy win-arm build on Windows IoT (#5682)\n\n  
19905,     Update the docker based release package tests (#5692)\n\n  
19906,     Replace Remaining HttpBin org Tests with WebListener (#5665)\n\n•Replaces all remaining test that rely on httpbin org\r\n•Adds Put  Post  Patch  and Delete tests to WebListener by means of routes to Get test and modifications to the Get controller \r\n•Adds responsephrase option to the Response test to accommodate error message tests\r\n•removed redundant GET tests from irm and iwr tests \r\n•Fixed markdown linting errors in README md for WebListener\r\n  
19907,     [Feature  Replace lee io Tests with WebListener  (#5709)\n\n  
19908,     Change Github to GitHub in CONTRIBUTING md (#5697)\n\nCorrect branding is important   
19909,     Fixed incorrect release date on the changelog (#5698)\n\nWas showing November but should be December   
19910,     Add instructions to deploy win-arm build on Windows IoT (#5682)\n\n  
19911,     Update the docker based release package tests (#5692)\n\n  
19912,     Merge branch  6 0 0-upstream  into merge_rc2_to_master\n\n# Conflicts:\n#\tREADME md\n#\tdocker/tests/container tests ps1\n#\ttest/tools/WebListener/Controllers/ResponseController cs\n#\ttest/tools/WebListener/README md\n#\ttools/appveyor psm1\n#\ttools/travis ps1\n#   docs/linux md\n#   CHANGELOG md\n  
19913,     Update scripts and documentation with RC 2 version (#5688)\n\n  
19914,     Update change log for 6 0 0-rc 2 release (#5687)\n\n  
19915,     Replace Remaining HttpBin org Tests with WebListener (#5665)\n\n•Replaces all remaining test that rely on httpbin org\r\n•Adds Put  Post  Patch  and Delete tests to WebListener by means of routes to Get test and modifications to the Get controller \r\n•Adds responsephrase option to the Response test to accommodate error message tests\r\n•removed redundant GET tests from irm and iwr tests \r\n•Fixed markdown linting errors in README md for WebListener\r\n  
19916,     Make the experience better when start-pspester doesn t find pester (#5673)\n\nrefactor code to restore pester into a separate function called Restore-PSPester\r\nupdate message on what to do when pester is missing\r\nAdd ability for get-psoptions to default to new-psoptions\r\nfix an issue with publish-pstesttools when a build has not been run since build psm1 has been imported (try to use the default options)\r\nmake start-pspester use the last build  not just use the default options\r\nfix an issue in restore caused some files not to be removed  
19917,     Update PowerShell to build with  NET Core runtime 2 0 4 (#5677)\n\n\r\n  
19918,     Make the experience better when start-pspester doesn t find pester (#5673)\n\nrefactor code to restore pester into a separate function called Restore-PSPester\r\nupdate message on what to do when pester is missing\r\nAdd ability for get-psoptions to default to new-psoptions\r\nfix an issue with publish-pstesttools when a build has not been run since build psm1 has been imported (try to use the default options)\r\nmake start-pspester use the last build  not just use the default options\r\nfix an issue in restore caused some files not to be removed  
19919,     Update PowerShell to build with  NET Core runtime 2 0 4 (#5677)\n\n\r\n  
19920,     Update packaging and release build scripts to produce zip packages for win-arm/win-arm64 (#5664)\nNote: changes in tools/appveyor psm1 are not moved to the 6 0 0 branch because:\n   - the change is to produce win-arm32/win-arm64 zip packages in daily builds \n     Since we don t have daily build for the 6 0 0 branch  the change is not needed \n   - there are conflicts when cherry-picking the commits\n  
19921,     Updated doc to build arm/arm64 versions of psrp windows and PowerShell Core Instrumentation dll libraries (#5668)\n\n\r\n  
19922,     tools: enable install-debian to work with VSTS Hosted Linux Preview (#5659)\n\nAdded -skip-sudo-check  because the check fails in VSTS Hosted Linux Preview even though sudo works   
19923,     Update packaging and release build scripts to produce zip packages for win-arm/win-arm64 (#5664)\n\n\r\n  
19924,     Updated doc to build arm/arm64 versions of psrp windows and PowerShell Core Instrumentation dll libraries (#5668)\n\n\r\n  
19925,     tools: enable install-debian to work with VSTS Hosted Linux Preview (#5659)\n\nAdded -skip-sudo-check  because the check fails in VSTS Hosted Linux Preview even though sudo works   
19926,     Fix the Linux release build (#5660)\n\nThe Linux release build was broken because AppImage tar tar-arm in build json is turned into a string of  AppImage tar tar-arm  by docker run  Now it\ s changed to use switch parameters   
19927,     build: Enable building for win-arm and win-arm64 (#5524)\n\n* enable win-arm and win-arm64 builds\r\n\r\n* fix using arm64 tools for build\r\nfix finding vs2017 dynamically\r\n\r\n* change install-powershellremoting ps1 script to use reg provider rather than reg exe so that error doesn t show on success\r\nfix formatting issue in cmake defs\r\n\r\n* add check that path being read from config file is valid\r\naddress PR feedback\r\n\r\n* fix copying of PowerShell Core Instrumentation as VS2017 puts it in $HOME/source\r\naddress PR feedback\r\n  
19928,     Add linux-arm tarball package to release build (#5652)\n\nCreate linux-arm tarball package in our release build \r\nAlso moved the Linux-x64 tarball creation to Ubutntu 14 04  because Start-PSBuild adds additional symbolic link files when running on Red Hat Family distros \r\nNote that linux-arm can only be built on Ubuntu  so the tar-arm package will also be generated from the Ubuntu 14 04 \r\n\r\n  
19929,     Add comment about  productbuild  used in packaging script (#5654)\n\n  
19930,     contribution guidelines: Add work in progress guidance (#5655)\n\nAdd guidance for submitting PR which are not ready to merge  or work in progress (WIP)  
19931,     Get GitCommitId using the ProductVersion from Assembly (#5651)\n\n  
19932,     Packaging: make mac package require 10 12 or newer (#5649)\n\nFixes #4290\r\nMake mac package require 10 12 or newer \r\nRequired that the package is installed to a disk with macOS installed \r\nThe Apple example XML had a background image added as well  so I added a background image:\r\n   githubusercontent com/10873629/33738943-014c9d00-db50-11e7-9628-310ce6427438 png  
19933,     update signing subjects (#5650)\n\nfixes #5642\r\nUpdate the signing subject for the windows package and windows files  
19934,     Fix the Linux release build (#5660)\n\nThe Linux release build was broken because AppImage tar tar-arm in build json is turned into a string of  AppImage tar tar-arm  by docker run  Now it\ s changed to use switch parameters   
19935,     build: Enable building for win-arm and win-arm64 (#5524)\n\n* enable win-arm and win-arm64 builds\r\n\r\n* fix using arm64 tools for build\r\nfix finding vs2017 dynamically\r\n\r\n* change install-powershellremoting ps1 script to use reg provider rather than reg exe so that error doesn t show on success\r\nfix formatting issue in cmake defs\r\n\r\n* add check that path being read from config file is valid\r\naddress PR feedback\r\n\r\n* fix copying of PowerShell Core Instrumentation as VS2017 puts it in $HOME/source\r\naddress PR feedback\r\n  
19936,     Add linux-arm tarball package to release build (#5652)\n\nCreate linux-arm tarball package in our release build \r\nAlso moved the Linux-x64 tarball creation to Ubutntu 14 04  because Start-PSBuild adds additional symbolic link files when running on Red Hat Family distros \r\nNote that linux-arm can only be built on Ubuntu  so the tar-arm package will also be generated from the Ubuntu 14 04 \r\n\r\n  
19937,     Add comment about  productbuild  used in packaging script (#5654)\n\n  
19938,     contribution guidelines: Add work in progress guidance (#5655)\n\nAdd guidance for submitting PR which are not ready to merge  or work in progress (WIP)  
19939,     Get GitCommitId using the ProductVersion from Assembly (#5651)\n\n  
19940,     Packaging: make mac package require 10 12 or newer (#5649)\n\nFixes #4290\r\nMake mac package require 10 12 or newer \r\nRequired that the package is installed to a disk with macOS installed \r\nThe Apple example XML had a background image added as well  so I added a background image:\r\n   githubusercontent com/10873629/33738943-014c9d00-db50-11e7-9628-310ce6427438 png  
19941,     Packaging: Try to make New-Unix package more readable (#5625)\n\n* refactor start-pspackage into functions\r\n\r\n* [Package  Added instrumentation\r\n\r\n* [Package  update change log\r\n\r\n* [Package  Fix distribution parameter in get-dependecies\r\n\r\n* [Package  fix dependencies\r\n\r\n* [Package  fix issues with validate script\r\n  
19942,     Update  PowerShellGet  tests to validate the new install location of AllUsers scope  (#5633)\n\nChanged the install location of AllUsers scope on PWSH to SHARED_MODULES location   
19943,     update signing subjects (#5650)\n\nfixes #5642\r\nUpdate the signing subject for the windows package and windows files  
19944,     Packaging: Try to make New-Unix package more readable (#5625)\n\n* refactor start-pspackage into functions\r\n\r\n* [Package  Added instrumentation\r\n\r\n* [Package  update change log\r\n\r\n* [Package  Fix distribution parameter in get-dependecies\r\n\r\n* [Package  fix dependencies\r\n\r\n* [Package  fix issues with validate script\r\n  
19945,     contribution guidelines: Remove requirement for updating changelog update in pr (#5644)\n  
19946,     Minor refactoring of the release build scripts (#5632)\n\n* Update release build\n\n* Minor refactoring of the build script\n  
19947,     Remove  oldPowershellExeName  and  oldPowershellDepsName  (#5408)\n  
19948,     Update a flaky test that fails intermittently in CI (#5641)\n\n  
19949,     Make Travis CI use libcurl+openssl+gssapi for macOS (#5629)\n\n  
19950,     Exclude markdown files from  Pester  folder (#5636)\n\n  
19951,     Update  PowerShellGet  tests to validate the new install location of AllUsers scope  (#5633)\n\nChanged the install location of AllUsers scope on PWSH to SHARED_MODULES location   
19952,     contribution guidelines: Remove requirement for updating changelog update in pr (#5644)\n\n  
19953,     build: fix git error in appveyor (#5631)\n\nAdd --quiet to git checkout which should resolve error message displayed in AppVeyor  
19954,     build: unbundle pester (#5623)\n\n# Conflicts:\n#\ttools/appveyor psm1\n#\ttools/travis ps1\n  
19955,     Minor refactoring of the release build scripts (#5632)\n\n* Update release build\r\n\r\n* Minor refactoring of the build script\r\n  
19956,     Remove  oldPowershellExeName  and  oldPowershellDepsName \n  
19957,     Update a flaky test that fails intermittently in CI (#5641)\n\n  
19958,     Make Travis CI use libcurl+openssl+gssapi for macOS (#5629)\n\n  
19959,     Exclude markdown files from  Pester  folder (#5636)\n\n  
19960,     build: fix git error in appveyor (#5631)\n\nAdd --quiet to git checkout which should resolve error message displayed in AppVeyor  
19961,     Combine Web Cmdlet Partial Class Files (#5612)\n\nReference #5610\r\n\r\nThis moves the partial class into a single file each  This code is purposely not sorted and the formatting is left alone to make this easier to review  There are cleanup actions planned in the referenced Issue \r\n  
19962,     contribution guidelines: change to say updating changelog is required (#5586)\n\n- Update contribution guidelines to make updating the changelog required\r\n- add a checklist to PR template\r\n\r\nComment by @SteveL-MSFT :\r\n> Everyone should understand that we are always open to feedback and nothing is set in stone  Based on a team discussion  one of the biggest costs for a release is creating the ChangeLog hence updating this document to push it to the contributor most aware of why the changes are being made and ideally how it s useful to end users \r\n  
19963,     Run tests for Windows installer only on Windows (#5619)\n\n  
19964,     [Feature  Supress the expected errors from Select-Xml tests (#5591)\n\n  
19965,     [Feature  Make the -SslProtocol tests pending (#5605)\n\n  
19966,     Add retry logic to prerequisite URL tests (#5601)\n\n* Disable Requisiste URLs tests\r\n\r\n* Add retry for the URL tests\r\n\r\n  
19967,     Replace HttpListener Response Tests with WebListener (#5540)\n\n* Add Response Controller\r\n\r\n* [Feature  Replace HttpListener Response tests with WebListener\r\n  
19968,     Fix Get-EnvironmentInformation IsCoreCLR logic (#5592)\n\n* Fix Get-EnvironmentInformation IsCoreCLR logic\r\nReplace $Runtime = [System Runtime InteropServices RuntimeInformation   and $OSPlatform = [System Runtime InteropServices OSPlatform   with ($PSVersionTable ContainsKey( PSEdition ) -and $PSVersionTable PSEdition -eq  Core ) \r\n\r\n  
19969,     build: unbundle pester (#5623)\n\n* remove pester module\r\n\r\n* restore Pester as a module only in CI build from the git repo\r\n\r\n* mark appveyor builds as CI builds\r\n\r\n* remove pester exclusions\r\n\r\n* mark travis builds as ci\r\n\r\n* exclude publish folder from spell check\r\n\r\n* do not run spell check on publish folder\r\n\r\n\r\n  
19970,     contribution guidelines: change to say updating changelog is required (#5586)\n\n- Update contribution guidelines to make updating the changelog required\r\n- add a checklist to PR template\r\n\r\nComment by @SteveL-MSFT :\r\n> Everyone should understand that we are always open to feedback and nothing is set in stone  Based on a team discussion  one of the biggest costs for a release is creating the ChangeLog hence updating this document to push it to the contributor most aware of why the changes are being made and ideally how it s useful to end users \r\n  
19971,     Run tests for Windows installer only on Windows (#5619)\n\n  
19972,     [Feature  Supress the expected errors from Select-Xml tests (#5591)\n\n  
19973,     [Feature  Make the -SslProtocol tests pending (#5605)\n\n  
19974,     Add retry logic to prerequisite URL tests (#5601)\n\n* Disable Requisiste URLs tests\r\n\r\n* Add retry for the URL tests\r\n\r\n  
19975,     Replace HttpListener Response Tests with WebListener (#5540)\n\n* Add Response Controller\r\n\r\n* [Feature  Replace HttpListener Response tests with WebListener\r\n  
19976,     Fix Get-EnvironmentInformation IsCoreCLR logic (#5592)\n\n* Fix Get-EnvironmentInformation IsCoreCLR logic\r\nReplace $Runtime = [System Runtime InteropServices RuntimeInformation   and $OSPlatform = [System Runtime InteropServices OSPlatform   with ($PSVersionTable ContainsKey( PSEdition ) -and $PSVersionTable PSEdition -eq  Core ) \r\n\r\n  
19977,     Enable conversions from PSMethod to Delegate (#5287)\n\nUnderpinnings to make calling of Extension methods /Linq easier from PowerShell \r\nEnables the following that previously had to be done via reflection \r\n\r\nclass M  \r\n  [int  Twice([int  $value)   return 2 * $value  \r\n\r\n  [int  DoubleSum([int[   $values)  \r\n     return [Linq Enumerable ::Sum($values  [M ::Twice)\r\n   \r\n \r\n\r\nEach PSMethod is created as with a unique type for the combinations of method signatures in the MethodInfos it represents \r\n\r\nPSMethod<T> where T is a MethodGroup<>  potentially recursive in the last template argument \r\n\r\nThis way  we can determine by just looking at the type of a PSMethod if there exists a conversion from the PSMethod to a delegate   
19978,     Remove unncessary check for Paths count > 0 as there is code later to use the current (#5596)\n\nRemove unnecessary check for Paths count > 0 as there is code later to use the current working directory since -Path is not a mandatory parameter \r\nUpdated ShouldProcess to output the internal action on adding paths rather than the user action (which is the cmdlet name) \r\n\r\nUpdated tests to not specify -Path\r\n\r\nFix #5594  
19979,     Remove exclusion for hang and add context exception for remaining instances (#5595)\n\n  
19980,     Update PowerShell executable name in using-vscode md (#5593)\n\n  
19981,     Skip null-element check for collections with a value-type element type (#5432)\n\n* Fix NotNullOrEmpty check logic\r\n\r\n* Fix a test issue on Unix\r\n  
19982,     Fix xunnit test for PS (#4780)\n\n* Initial work to enable xunit\r\n\r\n* Moved AssemblyOriginatorKeyFile to csharp tests csproj\r\n\r\n* Native binary has dylib extension on macOS\r\n\r\n  
19983,     Use explicit libpsl-native binary name for dllimport  (#5580)\n\n  
19984,     Remove unncessary check for Paths count > 0 as there is code later to use the current (#5596)\n\nRemove unnecessary check for Paths count > 0 as there is code later to use the current working directory since -Path is not a mandatory parameter \r\nUpdated ShouldProcess to output the internal action on adding paths rather than the user action (which is the cmdlet name) \r\n\r\nUpdated tests to not specify -Path\r\n\r\nFix #5594  
19985,     Remove exclusion for hang and add context exception for remaining instances (#5595)\n\n  
19986,     Update PowerShell executable name in using-vscode md (#5593)\n\n  
19987,     Skip null-element check for collections with a value-type element type (#5432)\n\n* Fix NotNullOrEmpty check logic\r\n\r\n* Fix a test issue on Unix\r\n  
19988,     Fix xunnit test for PS (#4780)\n\n* Initial work to enable xunit\r\n\r\n* Moved AssemblyOriginatorKeyFile to csharp tests csproj\r\n\r\n* Native binary has dylib extension on macOS\r\n\r\n  
19989,     Use explicit libpsl-native binary name for dllimport  (#5580)\n\n  
19990,     output url so when test fails you can more easily troubleshoot (#5570)\n  
19991,     Clean up use of  Runspaceconfiguration  from comments and xunit test code (#5569)\n\n  
19992,     Make  AllSigned  execution policy require modules under $PSHome to be signed (#5511)\n\n\r\n  
19993,     output url so when test fails you can more easily troubleshoot\n  
19994,     Clean up use of  Runspaceconfiguration  from comments and xunit test code (#5569)\n\n  
19995,     Update docker file for windows build (#5459)\n\nreducing the base image size should make the build a little faster\r\nAlso  remove the duplicate upload of a file  
19996,     Remove PerformWSManPluginReportCompletion from pwrshplugin dll (#5498)\n\nThis resolves issue #5391  which is tagged with 6 0 0-GA  therefore this should help with getting pwsh out of the door in January \r\n\r\nIt removes PerformWSManPluginReportCompletion as stated in the issue and its associated class member g_pPluginContext  which is now unused as well \r\n\r\nThe best reviewer is probably @mirichmo   who raised the initial issue with very helpful descriptions or @dantraMSFT who is currently assigned to the issue   
19997,     Add PowerShell VSCode style settings (#5529)\n\n  
19998,     XML documentation fix for CompletionResult (#5550)\n\n* XML documentation fix for CompletionResult: 1 typo  make text start with upper case and add periods at the end \r\nThis typo showed up on the official docs site:    microsoft com/en-us/dotnet/api/system management automation completionresult -ctor?view=powershellsdk-1 1 0#System_Management_Automation_CompletionResult__ctor_System_String_\r\n\r\n* Add periods to private members as well as suggested in PR \r\n  
19999,     Add Travis CI matrix for improved job tagging (#5547)\n\n  
20000,     remove `signed` folder in zip during packaging (#5527)\n\n  
20001,     updated install link and instructions for R-Pi (#5495)\n\n* updated install link and instructions for R-Pi\r\n* remove libicu57 as it s not needed\r\n  
20002,     Added more helpful message for AmbiguousParameterSet exception (#5537)\n\n  
20003,     Fix the path to  powershell_xxx inc  in Start-Build (#5538)\n\n  
20004,     Disambiguate icon for daily builds on Windows (#5467)\n\n* Disambiguate icon for daily builds on Windows \r\nSome code had to be borrowed from build psm1 because this script has to be self contained in case it gets executed by only downloading this file via the published download link    com/Steve_MSFT/status/930585082451992576\r\n\r\n  
20005,     Fix Import-CliXml Tests (#5521)\n\nAdd checks that ProcessName is not null or empty   
20006,     Replace strlen with strnlen in native code (#5510)\n\n* fix expected vs actual for easier troubleshooting\r\n* replace strlen calls with strnlen\r\n  
20007,     Make  AllSigned  execution policy require modules under $PSHome to be signed (#5511)\n\n\r\n  
20008,     Update docker file for windows build (#5459)\n\nreducing the base image size should make the build a little faster\r\nAlso  remove the duplicate upload of a file  
20009,     Fix PSVersion in PSSessionConfiguration tests (#5554)\n\n* Fix PSVersion in PSSessionConfiguration tests by getting the expected value from PSVersionTable instead of hardcoded string \r\n  
20010,     Remove PerformWSManPluginReportCompletion from pwrshplugin dll (#5498)\n\nThis resolves issue #5391  which is tagged with 6 0 0-GA  therefore this should help with getting pwsh out of the door in January \r\n\r\nIt removes PerformWSManPluginReportCompletion as stated in the issue and its associated class member g_pPluginContext  which is now unused as well \r\n\r\nThe best reviewer is probably @mirichmo   who raised the initial issue with very helpful descriptions or @dantraMSFT who is currently assigned to the issue   
20011,     Add PowerShell VSCode style settings (#5529)\n\n  
20012,     XML documentation fix for CompletionResult (#5550)\n\n* XML documentation fix for CompletionResult: 1 typo  make text start with upper case and add periods at the end \r\nThis typo showed up on the official docs site:    microsoft com/en-us/dotnet/api/system management automation completionresult -ctor?view=powershellsdk-1 1 0#System_Management_Automation_CompletionResult__ctor_System_String_\r\n\r\n* Add periods to private members as well as suggested in PR \r\n  
20013,     Add Travis CI matrix for improved job tagging (#5547)\n\n  
20014,     remove `signed` folder in zip during packaging (#5527)\n\n  
20015,     updated install link and instructions for R-Pi (#5495)\n\n* updated install link and instructions for R-Pi\r\n* remove libicu57 as it s not needed\r\n  
20016,     Added more helpful message for AmbiguousParameterSet exception (#5537)\n\n  
20017,     Fix the path to  powershell_xxx inc  in Start-Build (#5538)\n\n  
20018,     Disambiguate icon for daily builds on Windows (#5467)\n\n* Disambiguate icon for daily builds on Windows \r\nSome code had to be borrowed from build psm1 because this script has to be self contained in case it gets executed by only downloading this file via the published download link    com/Steve_MSFT/status/930585082451992576\r\n\r\n  
20019,     Fix Import-CliXml Tests (#5521)\n\nAdd checks that ProcessName is not null or empty   
20020,     Replace strlen with strnlen in native code (#5510)\n\n* fix expected vs actual for easier troubleshooting\r\n* replace strlen calls with strnlen\r\n  
20021,     Fix docker tests (#5508)\n\n* update expected version\n* update container list\n  
20022,     [Feature  Fix AppVeyor Fails (#5520)\n  
20023,     Change synopsis of install-powershell ps1 to reflect that it works cross-platform (#5465)\n  
20024,     Fix docker tests (#5508)\n\n* update expected version\r\n* update container list\r\n  
20025,     Update target tag for master CI to 6 1 0-preview 1 (#5513)\n\n* use metadata JSON to create release tag in CI  
20026,     [Feature  Fix AppVeyor Fails (#5520)\n\n  
20027,     Fix mac packaging (#5496)\n\n  
20028,     update version regex for nanoserver docker (#5494)\n\n  
20029,     Change synopsis of install-powershell ps1 to reflect that it works cross-platform (#5465)\n\n  
20030,     Fix mac packaging (#5496)\n\n  
20031,     update version regex for nanoserver docker (#5494)\n\n  
20032,     Merge pull request #5493 from PowerShell/release\n\nMerge v6 0 0-rc release   
20033,     Updated docs and scripts for rc release (#5481)\n\n  
20034,     Minor update to releasing md (#5489)\n\n  
20035,     Remove AddTypeCommandBase class (#5407)\n\nIt is technically a breaking change but it is only a public api surface of a cmdlet _implementation_ and don t  documented class   
20036,     Update the ChangeLog md for RC release (#5483)\n\n  
20037,     Fix semantic version parsing (#5480)\n\n  
20038,     fix MSI version parsing (#5475)\n\n  
20039,     add mac release build scripts (#5474)\n\n  
20040,     Fix the regex for  -ReleaseTag  (#5473)\n\n  
20041,     Updated csproj to use the latest help package (#5454)\n\n  
20042,     Update PSRP version dependency (#5469)\n\n  
20043,     Change to query for metadata from our file (#5468)\n\n  
20044,     Package signing (#5463)\n\n* add template xml for package signing\r\n\r\n* Add script to generate package signing XML\r\n\r\n* remove uploading artifact  it always fails \r\n\r\n* Allow the XML to be updated to be specified\r\n  
20045,     Fix build in vscode (#5453)\n\n- Fix build in vscode\r\n- Add v2 0 0 tasks json thanks to Keith Hill\r\n- Add  /property:GenerateFullPaths=true  to build to fix the $mscompile  problem matcher  not working issue \r\n  
20046,     Fix Start-PSBuild on WSL if repository was already built on Windows (#5346)\n\nReplace the static `powershell inc` filename with a name based on the current RID  so that the build doesn t confuse when running in the same local repository on WSL   
20047,     Get PowerShellGet from the PowerShell Gallery (#5452)\n\n  
20048,     Add HighEntropyVA to building pwsh (#5455)\n\nSpecify that the images (pwsh dll in particular) support high-entropy 64-bit address space layout randomization (ASLR)   
20049,     Add support for installing powershell on Amazon Linux (#5461)\n\n- Support for Amazon Linux\r\n- Ensure both tarball installs will reinstall/upgrade\r\n- Clean up comments with incorrect urls  
20050,     Add a test for the powershell hang fix (#5451)\n\n- Add test for the powershell hang fix\r\n- Ignore the  Sync-PSTags  warning  
20051,     Add standard set of vscode workspace setting files (#5457)\n\n* Add standard set of vscode workspace setting files\r\n\r\nAdd an extensions json file that will prompt folks to install extensions that are recommended for this workspace (c++  c#  powershell  cmake (editing syntax) and markdown linter \r\n\r\nAdd settings json to start to configure C# syntax  PoweShell trim trailing whitespace and configure the markdown lint extension \r\n\r\nUpdate launch json to provide ability to debug PowerShell scripts \r\n\r\n* Clean up grammar\r\n\r\n* Instruct VSCode to ensure a final newline \r\n\r\nIf this is not wanted for certain file types  we can restrict this option to only specified file types \r\n  
20052,     Fix for PowerShell hang on exit (#5356)\n\nCoreCLR doesn t call finalizer on process exit  PowerShell relies on the CLR finalizer to clean up state on exit  In this case  a Runspace pool was not closed or disposed and any pipeline worker threads created to run concurrent scripts won t end  causing the hang  The same thing can happen if any individual Runspace is created to run a concurrent script and is not closed \r\n\r\nWe cannot use the `AppDomain DomainUnload` event because it s not supported by the default load context  The `AppDomain ProcessExit` event is also not helpful since it is only called during application exit which means threads already have to be cleaned up \r\n\r\nThe fix introduces a static property called `PrimaryRunspace` to `Runspace`  When the PrimaryRunspace is closing it means that the PowerShell session is ending and on exit clean should be performed  The static property `PrimaryRunspace` can only be set once per process   
20053,     Update governance md (#5437)\n\n\r\n  
20054,     Add PSTypeName Support for Import-Csv and ConvertFrom-Csv (#5389)\n\ncloses #5134\r\n\r\nAdds PSTypeName preservation on Import-Csv and ConvertFrom-Csv\r\n  
20055,     Enable install-powershell ps1 to update the current running powershell (#5429)\n\n1  Remove `[validate ` attribute from parameter so this script can be invoked directly from the web  This doesn t have any negative impact as the $Destination parameter will have a default value if null or empty \r\n2  Move removal of destination folder later as installing the package requires package management module and archive module (on Windows)\r\n3  On Windows  because files have open handles when run from existing powershell-daily install  I rename the existing files and copy over the new ones   User needs to exit and restart `pwsh` to take effect (similar to macOS/Linux where you have to exit and restart anyways)  
20056,     Add compliance label description (#5355)\n\n\r\n  
20057,     Signing fixes (#5439)\n\n* Add two files that need to be signed\r\n* make sure to set PSModuleRestore to true when expanding a signed build because we run PSModuleRestore at that point \r\n* suppress output of CmdLets which are noisy\r\n  
20058,     Fix Single Value JSON null in Invoke-RestMethod (#5338)\n\n* [Feature  Fix Single Value JSON null in Invoke-WebRequest\r\n\r\n* [Feature  Switch from Regex to JToken Parse()\r\n\r\n* [Feature  Address PR Feedback: use `n\r\n  
20059,     Try fixing the  brew update  issue in bootstrap script (#5400)\n\n* Try fixing the  brew update  issue in bootstrap script\r\n\r\n* Add a log message\r\n\r\n* Add a comment\r\n  
20060,     Add SslProtocol Support to WebCmdlets (#5329)\n\ncloses #2662\r\n\r\nThis feature adds the ability to restrict the SSL/TLS protocol used when making the web request  In 5 1 the user could make use of  NET API\ s to enforce this on the Web Cmdlets  With the move to HttpClient in PowerShell Core  those APIs have no impact  The user still has requirements to ensure specific protocols are used \r\n\r\nThe public enum WebSslProtocol is added as a wrapper to the underlying SslProtocols enum  Neither it nor SecurityProtocolType can be used because Ssl3 and Ssl2 are not supported by HttpClientHandler SslProtocols  While it may not be intuitive to a PowerShell user to use -bor or  Tls  Tls11  to set multiple options  the general use case for this will be a single protocol \r\n\r\nAdds -SslProtocol parameter to Web Cmdlets\r\nAdds WebSslProtocol Enum to support limited subset of SslProtocol enum supported by HttpClientHandler\r\nAdds TLS 1 1 and TLS 1 0 listening ports to WebListener  
20061,     Add dependency nuget instructions for PowerShell Core Instrumentation resource binary (#5396)\n\n* Add dependency nuget packaging instructions for PowerShell Core Instrumentation ETW resource binary \r\n\r\n* Fix markdown MD031 Fenced code blocks errors \r\n\r\n* Fix MD022 Headers should be surrounded by blank lines\r\n\r\n* Add a note about Authenticode Dual-signing requirement \r\n\r\n* PR Feedback \r\n\r\n* Set version to Beta 10\r\n\r\n  
20062,     Automation for PS package validation using Docker containers (#5401)\n\nThis automation is used for basic validation of PS packages during a release;\r\nCovered configs:\r\n\r\nubuntu14 04\r\nubuntu16 04\r\nubuntu17 04\r\ndebian 8\r\ndebian 9\r\ncentos7\r\nfedora25\r\nfedora26\r\nkalilinux\r\nopensuse42 2\r\nDuring the process Docker files are filled out and executed with Docker build;\r\nDuring the build PS packages are downloaded onto Docker containers  installed and selected Pester tests from PowerShell Github repo are executed   
20063,     Allow packaging from a zip package to allow for signing (#5418)\n\n- Include a serialized version of PSOptions in an includesymbols zip\r\n- Add a function which will create a zip package from the expanded includesymbols zip and a folder of signed files\r\n- Add a function to restore an includesymbols zip as a build and populated PSOptions with the options  
20064,     Fix spelling in web cmdlet errors (#5427)\n\n  
20065,     Move the  rcedit  step to build rather than packaging (#5404)\n\n  
20066,     Enhance \ install-powershell ps1\  to work on Linux/MacOS (#5411)\n\nEnhance \ install-powershell ps1\  to work on Linux and macOS too  A user can install release version or daily powershell core on Linux and macOS \r\nWhen `-AddToPath` is specified:\r\n- On Windows  add the absolute destination path to the \ User\  scope environment variable \ Path\ ;\r\n- On Linux  make the symlink \ /usr/bin/pwsh\  points to  $Destination/pwsh ;\r\n- On MacOS  make the symlink \ /usr/local/bin/pwsh\  points to  $Destination/pwsh    
20067,     Support  [package   tag in PR CI and fix nightly build on macOS (#5410)\n\n- Support  [package   tag in PR CI to validate packaging changes in PR CI runs \r\n  When using  [package   tag  regular CI tests will run and packaging steps will also run \r\n- Fix nightly build on macOS   
20068,     make name a dynamic parameter (#5415)\n\n  
20069,     Make Import-Csv support CR  LF and CRLF as line delimiters (#5363)\n\nWith the fix  `Import-Csv` support CR (\\r)  LF (\\n)  CRLF (\\r\\n) as line delimiters   
20070,     Disable cmdlets that are not supported under unix system (#5083)\n\n* permanently remove cmdlets that are not supported under Unix and move tests to defaultcommands tests ps1\r\n  
20071,     Clean Up Full CLR Code From Web Cmdlets (#5376)\n\n  
20072,     Multiple improvements by CodeRush Static Analysis (#5132)\n\n  
20073,     Add  install-powershell ps1  to install powershell core on windows (#5383)\n\n- Add install-powershell ps1 to install powershell core packages on windows \r\n- Update Start-PSBootStrap to check and install the latest PSCore package on Windows \r\n  
20074,     Add error on Legacy Credential over non-HTTPS for Web Cmdlets (#5402)\n\n- Add an error when a user tries to use `-Credential` (legacy usage without `-Authentication`) or `-UseDefaultCredentials` over a non-HTTPS URI\r\n- User can bypass error with `-AllowUnencryptedAuthentication`\r\n- `-UseDefaultCredentials` can only be reliably tested on Windows as support on other platforms depends on a Kerberos infrastructure  \r\n- Add `/Auth/` tests to WebListener for challenge authentication Basic  Negotiate  and NTLM\r\n\r\nIncidentally  this increases test coverage for the web cmdlets as `-Credential` and `-UseDefaultCredentials` were not being tested   
20075,     Don t write an error if file already unblocked (Unblock-File) (#5362)\n\n  
20076,     Revive  download sh  and make it redirect to  install-powershell sh  (#5386)\n\n  
20077,     Add signing manifest and script to update it with production values (#5397)\n\n* Add signing configuration file\r\n* add updatesigning ps1\r\n\r\n\r\n  
20078,     Update Find-Dotnet to find dotnet with compat SDK (#5341)\n\nFix #5260 - with this fix folks shouldn t hit the version mismatch check \r\n\r\nThe approach is to see if the dotnet in the current PATH has a compatible SDK   Folks will have a globall installed dotnet if they ve installed VS  VSCode C# ext or have  installed the  NET Core SDK   This verion may not have the SDK required by PSCore   And the global cannot see user local dotnet SDK installs   So if the global dotnet doesn t have the right SDK  we prepend the path to the user s local dotnet dir \r\n\r\nAlso  updateed $dotnetCLIRequiredVersion to read its value from global json so there is one less source of the truth (for the SDK version)   
20079,     Porting random hang fixes (#5258)\n\n  
20080,     fix `help` function to not pipe to more if objects are returned instead of help text (#5395)\n\n  
20081,     Add ability to produce tar gz pkg for Raspbian (#5387)\n\n  
20082,     Rename/Update PowerShell ETW manifest to remove the Windows PowerShell dependency  (#5360)\n\n- Build PowerShell Core Instrumentation dll - Resource-only binary for the ETW resources \r\n- Create a registration script for registering/unregistering the ETW provider \r\n  
20083,     Revert refactoring changes that broke remoting to Windows PowerShell 5 1 (#5321)\n\n- Revert refactoring changes so that it doesn t break remoting to Windows PowerShell 5 1\r\n- Fix the rest of the supported types for remoting\r\n- Put remoting sensitive private members in a descriptive region  
20084,     Exclude EventResource resx from SMAResources Tests ps1 (#5379)\n\nFix a test failure   
20085,     Make SemanticVersion compatible with SemVer 2 0 (#5037)\n\nMade  SemanticVersion  compatible with SymVer 2 0    org/ (p 10)\r\n- Fix comparisons\r\n- Refactor and add more tests  
20086,     Use simplified names for compliance folders (#5388)\n\n  
20087,     Correct the Fedora documentation (#5384)\n\nCorrection to the Fedora documentation:  Fedora machine  instead of  Red Hat Enterprise Linux machine   
20088,     replace the word `hang` with something more appropriate (#5358)\n\n  
20089,     Minor update to FAQ md (#5366)\n\n  
20090,     Update instructions to build on VSCode based on pwsh (#5368)\n\n  
20091,     Change $OutputEncoding to be utf8 without BOM rather than ASCII (#5369)\n\n  
20092,     set expected binaries and variable name for folder for symbols build (#5357)\n\n  
20093,     Rework passing array literal to native commands (#5301)\n\n\r\n  
20094,     Enable macOS launcher (#5291)\n\n  
20095,     Update Wix toolset download link to newer version 3 11 (#5339)\n\nThis makes it also future proof since codeplex is going to get deprecated   
20096,     Change all links in README md to absolute as it is being reused in other places outside of GitHub (#5354)\n\n  
20097,     Display full help with  help  function (#5195)\n\nDisplay full help with  help  function  
20098,     Redirect ETW logging to Syslog on Linux (#5144)\n\nThis PR is divided into the following areas:\r\n1  Add/Rename the PowerShell/Windows ETW manifest to the repo and change both the provider id (guid) and name  See #4939 \r\nThe manifest is at tools/resxgen/PowerShell-Core-Instrumentation man\r\n\r\n2  Generate a resx file containing the string resources needed for logging ETW events to syslog \r\nThis is accomplished by tools\\resxgen\\resxgen psm1 and resxgen ps1  The tool generates two files\r\n\r\nA resx file containing string resources for each message string from the manifest  This is generated in the System Management Automation\\gen directory \r\nA C# class (EventResource) that provides the mapping between the integer event id and the associated string resource name  The file is generated in the System Management Automation\\CoreCLR directory with a compile-time condition of UNIX\r\nNOTE: The EventResource cs class generated by resgen is explicitly ignored in the csproj file; it is not used \r\n\r\n3  SMA\\utils\\tracing\\PSSysLogProvider cs\r\nImplements the abstract LogProvider class and is the syslog equivalent of PSEtwLogProvider  The class contains a number of logical methods for logging lifecycle  health  and normal events \r\n\r\n4  SMA\\utils\\tracing\\SysLogProvider cs\r\nThis is the Syslog equivalent of ETW s log provider class and implements a Log method versus ETW s EventWrite  It is also responsible for resolving event ids to resource names and performing the Syslog call  There is a large comment block in the class XML doc that describes the types of log output it produces \r\n\r\n5  SMA\\utils\\tracing\\PSEtwLog cs\r\nPowerShell s current implementation is tightly coupled to this class; with code calling it directly for all events  To simplify integration of syslog  I updated the class to create an instance of PSSysLogProvider on Linux and removed the Linux-specific stub file \r\n\r\n6  SMA\\engine\\PropertyAccessor cs\r\nThis class provides a wrapper around PowerShellProperties json and has been extended to have Unix-specific assessors for configuring logging  Note that the file is expected to be in the $PSHOME directory to ensure SxS \r\n\r\nCurrently  there are four configuration properties:\r\n\r\n- LogIdentity - the string identifier for the source application  This defaults to  powershell  and can be configured to enable distinguishing between side-by-side installations \r\n- LogLevel - configures the tracing level (log level)  Informational is the defauilt \r\n- LogChannels - used to enable operational and analytic logging  Operational is the default \r\n- LogKeywords - used to configure enabling tracing by keyword  All keywords other than `UseAlwaysAnalytic` are enabled by default \r\n\r\nNOTE: This will likely change  PowerShell sometimes confuses the analytic channel with this keyword and sends logging to the wrong channel  Once this is cleared up  `UseAlwaysAnalytic` and `UseAlwaysOperational` keywords will likely be removed \r\n\r\nAdditional Notes:\r\n\r\n1  The current implementation writes directly to syslog and writing to a separate log file is still pending \r\n2  The generated class and resx are not part of the build; instead  it is expected that Resxgen should be run when events are added to the manifest  To fully automate the process  resxgen will need to be updated to generate the other dependent enums such as  PSChannel    PSEventId    PSTask    PSOpcode   etc  You will see parsing logic in resxgen psm1 to prepare for that but it is not enabled at this point \r\n4  Documentation is pending that documents the format of the syslog output as well as associated configuration \r\n5  As mentioned at the start  tests are pending  
20099,     add Uniform Type Identifier conforming with Apple standards using a reverse dns style prefix (#5323)\n\n  
20100,     Include symbols folder an embedded zip when packaging symbols (#5333)\n\n  
20101,     Separate Install-PowerShellRemoting ps1 from psrp windows nuget package (#5330)\n\n  
20102,     Revert the breaking change in AddTypeCommandBase EndProcessing (#5306)\n\n  
20103,     Add Jobject serialization support to ConvertTo-Json (#5141)\n\n  
20104,     Use native os_log APIs on OSX for PowerShell logging (#5310)\n\n  
20105,     Add help strings in PowerShell banner (#5275)\n\n  
20106,      Update  installpsh-suse sh  and remove  download sh  (#5309)\n\n- Update `installpsh-suse sh` to work with the  tar gz binary archive \r\n- Remove `download sh` as it s not used anywhere now  (checked with PowerShellGet and OneGet  they are using a local copy of download sh)   
20107,     Add Remove-Alias Command (#5143)\n\n* Add Remove-Alias Command  Add Remove-Alias Test  Add Remove-Alias to  psd1 \r\n\r\n* Fix code-formatting  Fix ErrorAction on Remove-Alias instead of preference variable  Remove unnecessary Get-Alias calls  Switch Force parameter to auto property  Add ValueFromPipeline to Remove-Alias Name parameter \r\n\r\n* Remove empty lines  Add Remove-Alias to Unix Module  psd1  Add Remove-Alias to approved Commands test  Remove Try/Catch for SessionstateException  Add WriteError for aliasnotfound exception \r\n\r\n* Add ErrorAction Stop to all Get-Alias and Set-Alias Cmdlets in all tests for consistency  Add Should BeNullOrEmpty to  should throw if alias does not exist  test to verify that foo alias really is not there before removing it \r\n\r\n* Changed Remove-Alias parameter Name to String-Array  Changed Cmdlet Process Logic to work with String Array  Added Alias named  ral   Added test case for Alias  ral   Added  ral  Alias to list of approved Aliases  Replaced foo and bar values in all tests with better names \r\n\r\n* Remove  ral -alias test as this is covered in DefaultCommands Tests ps1  Add test for removing multiple alias at once  Fix wrong curly braces positioning \r\n\r\n* Remove $FullCLR in DefaultCommands Tests ps1 for Remove-Alias and  ral  alias \r\n\r\n* Add Alias  ral  to Remove-Alias Cmdlet \r\n\r\n* Remove  ral  alias as this is handled by using the [Alias()  attribute on the Remove-Alias Cmdlet \r\n\r\n* Replace alias names used in Remove-Alias Cmdlet tests with GUIDs to avoid collisions\r\n  
20108,     Always run test with crossgen ed assemblies in CI (#5315)\n\n  
20109,     Speed up check for suspicious content (#5302)\n\nThis replaces the code that scanned a script block for suspicious strings \r\nThe previous implementation:\r\n* Tokenized input (generating many strings for garbage collection)\r\n* Used multiple threads\r\n\r\nThis approach is based on Rubin-Karp and does not allocate any memory\r\nother than a small array to hold the running hash values \r\n\r\nI tested the new and old approaches on 2200 files in the PowerShell repo \r\nThe old code ran in about 1 8-2 1s (ignoring time spent reading files)\r\nThe new code runs in about 0 6s and is more stable due to no garbage   
20110,     Fix  ExecutionContext LoadAssembly  to load with name when file cannot be found (#5161)\n\n  
20111,     Release build fixes (#5317)\n\nsmall fixes found while doing current work item\r\n\r\n-replace expects a regex when I wanted to do a literal replace \r\nHave Sync-PSTags fix any issues it find  
20112,     remove sync-tags for Linux   It is failing  (#5299)\n\n  
20113,     Change line ending in Rename-Computer Tests ps1 to LF (#5314)\n\n  
20114,     Update powershell to use 2 0 4-servicing dotnet core runtime (#5295)\n\n  
20115,     Refactor for signing (#5300)\n\n  
20116,     Fix dynamic class assembly name (#5292)\n\nUsing the assembly name to hint at the source of the classes was\r\nproblematic in multiple ways \r\n\r\nThis change stores the actual filename in an attribute on the assembly \r\n\r\nSo for a given type  one can get the assembly this way:\r\n\r\n[SomeType  Assembly GetCustomAttributes() |\r\n    ?   $_ -is [System Management Automation DynamicClassImplementationAssemblyAttribute    |\r\n    %   $_ ScriptFile    
20117,     Use wider columns for process id and user (#5303)\n\nI also moved all the formatting code higher up in the tree  it never felt like it belonged where it was   
20118,     Add documentation about how to create libpsl and psrp windows packages (#5278)\n\n- Add document about creating libpsl and psrp windows nuget packages\r\n- Clean up and update the existing building docs \r\n  
20119,     use context rules instead of file or file and context rules because path to file can vary  (#5297)\n\n  
20120,     set requestedExecutionLevel to asInvoker for pwsh exe on Windows (#5285)\n\n  
20121,     Add Multiple Link Header Support (#5265)\n\n  
20122,     Minor perf tweaks (#5289)\n\n* Avoid creating scriptblocks unnecessarily in PSScriptProperty\r\n* Use string IsNullOrWhiteSpace instead of Trim() Length  
20123,     Remove DCOM support from *-Computer cmdlets (#5277)\n\nSince DCOM is not supported in corefx there was a great deal of dead code in the computer cmdlets \r\nThis PR removes all vestiges of DCOM support from:\r\n\r\n- Rename-Computer\r\n- Restart-Computer\r\n- Stop-Computer\r\n\r\nremoving about 4500 lines of dead code  Also  tests are updated to provide more complete coverage \r\nI also removed test-connection completely to make way for @iSazonov upcoming PR to improve coverage in tests  I created some test hook code which will test the cmdlet code without actually calling the WMI method to restart/rename/stop the system  
20124,     Glob native command args only when not quoted\n\nAlso fix some minor issues with exceptions being raised when resolving\nthe path - falling back to no glob \n\nFix: #3931 #4971\n  
20125,     Use Ast for context in parameter binding\n\nPreviously we used IScriptPosition for context (e g  error reporting)\nduring parameter binding  but in some cases we want more information  so\nwe ll use the Ast instead \n\nThis change just adds the Ast  it doesn t make explicit use of it \n  
20126,     Fix PSUserAgent Generation Exception on Windows 7 (#5256)\n\n* Use Regex to Capture Windows Version  
20127,     Fix line endings with LF (#5288)\n\n  
20128,     fix sparse-checkout list (#5263)\n\n* fix sparse-checkout list\r\n* Run powershell exe in OpenCover since it will be in the path \r\n* If there s an error in Start-CodeCoverageRun be sure to log as much as possible\r\n* Make the directory removal code common\r\n  
20129,     Fix performance issues in Add-Type (#5243)\n\n* Exclude ReadAllText from OutputError()\r\n\r\n* Exclude double ReadAllText() from EndProcessing\r\n\r\n* Remove sourceCode initialization\r\n\r\n* Add StringBuilder init size and remove unneeded code \r\n\r\n* Set init size StringBuilder in 8192\r\n  
20130,     Remove AllScope from most default aliases (#5268)\n\n* Remove AllScope from most default aliases\r\n\r\nTo speed up scope creation  I removed AllScope from most default\r\naliases \r\n\r\nThis results in a 15-20% speedup for:\r\n\r\n    function foo   \r\n    for ($i = 0; $i -lt 100kb; $i++)   &   foo    \r\n\r\nI left AllScope of a few frequently used aliases because it does\r\nmake command lookup faster  If we introduce something like dynamic\r\nsites for command lookup  then we could probably remove the rest\r\nof the AllScope aliases \r\n\r\nThis is a low-risk breaking change  One can ask for aliases at\r\na particular scope:\r\n\r\n    Get-Alias -Scope 1 nsn\r\n\r\nThis could now fail if the scope number doesn t correspond to global\r\nscope \r\n  
20131,     Revert  Add macos launcher  (#5138)  (#5259)\n\n  
20132,     Sync tags in release build so that shallow cloning can be enabled  (#5248)\n\n  
20133,     Update README md for binary package beta 9 (#5267)\n\nIn README md\r\n* Update binary package for beta 9\r\n* Add link for `[rl-macos-tar ` and `[rl-linux-tar `  
20134,     Change VSCode build task to use pwsh (#5255)\n\n  
20135,     Change to not insert line breaks to output (except for tables) (#5193)\n\n  
20136,     Remove CommandFactory (#5266)\n\nThe class CommandFactory served no real purpose in command lookup\r\nother than to unnecessarily add a few frames to the call stack \r\nintroduce an extra indirection  and add a couple of unnecessary\r\nchecks that essential instances like ExecutionContext are not null   
20137,     Add char range overload to DotDot operator (#5026)\n\n  
20138,     update docker file for nanoserver 1709 release (#5252)\n\n  
20139,     Make sure web hook gets called (#5249)\n\nif something goes wrong during the build  we might exit and not update the badge or fire the webhook \r\n\r\nEnable the after_success and after_failure stages of the travis-ci build so we can have a better chance of getting these done   
20140,     use rcedit to embed icon and version information into pwsh exe (#5178)\n\npwsh exe today doesn t contain file version information and the icon is only associated with the shortcut file and not the exe\r\n\r\nFix is to use rcedit to embed:\r\n\r\nicon\r\nproduct version\r\nfile version\r\nproduct name\r\ncopyright\r\nFix #2883\r\nFix #5166\r\nFix #5034\r\n  
20141,     Fix  Import-module  to not report a loaded module was not found (#5238)\n\nMissed a  break  statement after the module was loaded successfully  so the loop continues when it shouldn t \r\n  
20142,     Fix  get-item -literalpath a*b  to return error if `a*b` doesn t actually exist (#5197)\n\n  
20143,     Use consistent  (c)  for copyright symbol (#5210)\n\n- Remove the year about copyright\r\n- Fix casing of `All rights reserved`\r\n- Replace Unicode characters representing single quote with a single quote\r\n  
20144,     -Verbose should not override $ErrorActionPreference (#5113)\n\n* -Verbose should not override $ErrorActionPreference\r\n\r\n* apply same fix to -debug and added test case\r\n\r\n* address Aditya s feedback\r\n  
20145,     Export-Csv Test Improvements (#5150)\n\n  
20146,     Add term rules  (#5213)\n\n* Add Terms Rules\r\n\r\n* remove offensive term\r\n\r\n* Add code owner for compliance files\r\n  
20147,     Remove @vors from engine area owners  Add the Language area  (#5223)\n\n\r\n  
20148,     Fix  demos/SSHRemoting/README md  using the new name  pwsh  (#5236)\n\n  
20149,     Merge beta 9 release branch to master\n\n  
20150,     Add -AsHashtable switch to ConvertFrom-Json for issue #3623 (#5043)\n\nAddress #3623 \r\n\r\nImplementation symmetric to traditional code path that returns a PSCustomObject  Code is shared on the top level but 2 low level methods were difficult to share  therefore 2 separate but similar methods were created for HashTables \r\nAll existing tests related to this change were adapted to also test against this new switch and were slightly improved \r\n\r\n-AsHashtable is an existing pattern used in Group-Object  
20151,     Update install/build scripts and dockerfiles (#5222)\n\n  
20152,     Update ChangeLog for beta 9 release (#5216)\n\n  
20153,     Update docs and scripts for beta 9 (#5217)\n\n  
20154,     Update installation doc and README md to include the powershell binary archive packages (#5212)\n\n* Update README md\r\n\r\n* Update docs for powershell binary archive packages\r\n\r\n* Update the chart  
20155,     Added BinPath  Description  UserName and Delayed Auto Start to Get-Service (#4907)\n\nAdded the following to the  Get-Service  command:\r\n•BinaryPathName (Was suggested as  ServicePath )\r\n•Description\r\n•UserName (Was suggested as  LogOnAs )\r\n•DelayedAutoStart\r\n•ServiceStartupType\r\n\r\nThe ServiceStartupType was also added  providing the user access to use services like in  services msc   having  Automatic    Automatic (Delayed Start)    Manual  and  Disabled  as options (Also includes  InvalidValue  as an initial value for  ServiceStartupType )\r\n  
20156,     Fix appimage package name to be lower case  powershell-    (#5206)\n\n  
20157,     Unify cmdlets with parameter  Encoding  to be of type System Text Encoding (#5080)\n\nThis unifies file encoding across the inbox cmdlets to be UTF-8 without a BOM for all platforms  This is a breaking change as cmdlets on windows have a number of different encodings  This supports better interoperability with tradition Linux shells as we are using the same encoding \r\n\r\nValidate that files are created with UTF-8 encoding without BOM\r\nUpdate tests to validate Encoding parameter to new type and create new tests for\r\nparameter type validation \r\n\r\n[Breaking Change  The  -Encoding Byte  has been removed from the filesystem provider cmdlets  A new parameter  -AsByteStream  is now added to indicate that a byte stream is required as input  or output will be a stream of bytes   
20158,     Put command discovery before scripts for Unix (#5116)\n\n* put command discovery before scripts for Unix\r\n\r\n* remove unnecessary test\r\n  
20159,     Log sending daily web hook  (#5203)\n\nMake sure we count xunit tests failures as a CI failure   
20160,     Update docker files and related due to the name change (#5156)\n\n  
20161,     Update packaging to only package PowerShell binaries when packaging symbols (#5145)\n\n* Update packaging script to only package PowerShell binaries when creating symbols zip   disallow all other package types for symbols\r\n\r\n* remove instrumentation used for debugging during development\r\n\r\n* Add error action silently continue to cleanup for reliability \r\n\r\n* Add comment about why folder is being deleted \r\n  
20162,     Make Get-ChildItem honor Depth parameter with Include/Exclude (#4985)\n\n* Add depth to ProcessPathItems\r\n\r\n* Honors capped recursion when using Include or Exclude filters with Get-ChildItem\r\n\r\n* Including test cases to test include/exclude recursion\r\n\r\n* Swap optional parameter for overload\r\n  
20163,     Add global json to pick correct SDK version (#5118)\n\n  
20164,     Add example of how to create a  net core cmdlet with Visual Studio (#5096)\n\n  
20165,     Fix vscode launch json to point to pwsh (#5189)\n\n  
20166,     Add new Fwlinks for v6 help content (#4978)\n\nUpdated fwlinks to pull new help content for PSv6 \r\nFwlink for Microsoft PowerShell Core module is not updated since about_*help txt is not available yet \r\n  
20167,     Update the help text with the new name  pwsh  (#5182)\n\n  
20168,     Make -NoTypeInformation Default on Export-Csv and ConvertTo-Csv (#5164)\n\n•Sets  -NoTypeInformation  as the default behavior for  Export-Csv  and  ConvertTo-Csv \r\n•Hides the  -NoTypeInformation  parameter switch\r\n•Adds  -IncludeTypeInformation  switch to  Export-Csv  and  ConvertTo-Csv  to enable legacy behavior\r\n•Provides a terminating error when both  -NoTypeInformation  and  -IncludeTypeInformation  are supplied\r\n•adds tests for the new behavior\r\n•fixes existing tests to align with new behavior\r\n\r\nThe new behavior will need to be documented \r\n  
20169,     Add code to send WebHook for Travis-CI Daily Build (#5183)\n\n  
20170,     Add exports for syslog APIs in  libpsl-native   (#5149)\n\n  
20171,     Unwrap  ValueFromRemainingArguments  if the single element is a collection (#5109)\n\nUnwrapping of  ValueFromRemainingArguments  was being performed only for  object[   arrays (which covers the most common PowerShell binding scenarios) but could be skipped if a collection of any other type were passed to the parameter  This change unwraps  ValueFromRemainingArguments  if the single element is a collection   
20172,     Update powershell to pwsh  (#5174)\n\n  
20173,     Update the man help file used in packaging (#5173)\n\n* Update pacakging psm1 and rename man file\r\n\r\n* Update pwsh 1 ronn\r\n  
20174,     Enable import-module to be case insensitive (#5097)\n\nFix #1621 \r\n\r\nEnable import-module to be case insensitive as macOS is case insensitive \r\n  
20175,     Update appimage sh to reflect the new name  pwsh  (#5172)\n\n  
20176,     Add document about how to create cmdlet w/dotnet CLI (#5117)\n\n  
20177,     [feature  (#4960)\n\nremove -computer support since corefx Process GetProcesses(computer) returns local processes  
20178,     Replace HttpBin org/response-headers Tests with WebListener (#5058)\n\n  
20179,     Add macos launcher  (#5138)\n\n  
20180,     Fetch resource string correctly (#5114)\n\n  
20181,     Add compiler switches replace dangerous function with safer ones  (#5089)\n\n* Add compiler switches replace the dangerous function with safer ones \r\n* Add -02 and make linker flags per platform\r\n* add -O2 for arm and add -z now\r\n* remove windows linker flags\r\n  
20182,     Exclude PSHostProcess cmdlets from Unix platforms (#5105)\n\n- Exclude  Get-PSHostProcessInfo    Enter-PSHostProcess  and  Exit-PSHostProcess  from Unix platforms \r\n- Update tests and add additional cmdlets need to be excluded\r\n  
20183,     removed RunspaceConfiguration support (#4942)\n\nFor PSCore 6  we are only supporting InitialSessionState  The RunspaceConfiguration APIs were already made internal  This PR removes all the code related to RunspaceConfiguration  This also means that some public APIs have changed  Was deciding between leaving the RunspaceConfiguration parameters and throwing Unsupported  but thought it was better to have it a compile-time error  This should simplify the code base \r\n\r\n  
20184,     Fix MatchInfoContext clone implementation (#5121)\n\nThe old implementation always set the new object s properties to null   
20185,     Add Authentication Parameter to Web Cmdlets for Basic and OAuth (#5052)\n\nCloses #4274\r\n\r\nAdds an -Authentication parameter to Invoke-RestMethod and Invoke-WebRequest\r\nAdds an -Token parameter to Invoke-RestMethod and Invoke-WebRequest\r\nAdds an -AllowUnencryptedAuthentication parameter to Invoke-RestMethod and Invoke-WebRequest\r\nAdds tests for various -Authorization uses\r\n-Authentication Parameter has 3 options: Basic  OAuth  and Bearer\r\nBasic requires -Credential and provides RFC-7617 Basic Authorization credentials to the remote server\r\nOAuth and Bearer require the -Token which is a SecureString containing the bearer token to send to the remote server\r\nIf any authentication is provided for any transport scheme other than HTTPS  the request will result in an error  A user may use the -AllowUnencryptedAuthentication switch to bypass this behavior and send their secrets unencrypted at their own risk \r\n-Authentication does not work with -UseDefaultCredentials and will result in an error \r\nThe existing behavior with -Credential is left untouched  When not supplying -Authentication  A user will not receive an error when using -Credential over unencrypted connections \r\n\r\nCode design choice is meant to accommodate more Authentication types in the future \r\n\r\nDocumentation Needed\r\n\r\nThe 3 new parameters will need to be added to the Invoke-RestMethod and Invoke-WebRequest documentation along with examples  Syntax will need to be updated   
20186,     Rename powershell exe to pwsh exe (#5101)\n\n- Rename powershell exe to pwsh exe\r\n- Fixe appveyor psm1\r\n- Update MSI to include  pwsh  in path and app paths\r\n- Revert change for hyper-v powershell direct\r\n- Update names in packaging psm1 \r\n- Fix check for SxS\r\n  
20187,     Add Get-WebListenerUrl Based Examples to WebListener README md (#4981)\n\n- Add Get-WebListenerUrl Based Examples to WebListener README md\r\n- Fix Cert test example\r\n  
20188,     Make sure that there s a statement separator after we update the path  otherwise the built script will not run (#5137)\n\n  
20189,     Merge pull request #4995 from SteveL-MSFT/remove-apartmentstate\n\n* wrapped STA code sections in `#if STAMODE` for potential future use\r\nremoved -importsystemmodules switch from powershell exe and related code\r\nremoved -consolefile parameter from powershell exe and related code\r\n\r\n* removed font and codepage handling code that is only applicable to Windows PowerShell\r\nreplaced LengthInBufferCells() method with Unicode adapted code from PSReadline\r\n\r\n* removed `#if CORECLR` statements merging code base\r\n\r\n* [feature \r\nremoved code to show a GUI prompt for credentials as PSCore6 prompts in console\r\n\r\n* Remove unncessary method  LengthInBufferCellsFE \r\n  
20190,     Remove unncessary method\n  
20191,     Change location of ModuleAnalysisCache so it isn t shared with Windows PowerShell (#5133)\n\nCurrently  it s using the same location as Windows PowerShell and the two should not be sharing one as the PSModulePaths are different between the two   
20192,     Add Uservoice Link to Issue Template (#5100)\n\n  
20193,     StopJobCommand: Remove Unreachable Code (#5091)\n\nThis code will never get executed  and its logic is\r\nduplicated in the HandleStopJobCompleted() method   
20194,     Test fixes and code coverage automation fixes  (#5046)\n\n* Test fixes and updates to code coverage automation\r\n* Fixed UpdatableHelpSystem tests and tab completion tests\r\n* Fixed tab completion tests to better disambiguate root/interop namespace \r\n* Skip SSH test if ssh exe is not present\r\n  
20195,     Update existing docker files (#5102)\n\n  
20196,     Remove  -ComputerName  from  Get/Set/Remove-Service  (#5094)\n\n  
20197,     Minor update to building/internals md (#5095)\n\n  
20198,     Update instructions for building from source (#5072)\n\n- Use new S M A dll for build instructions\r\n- Include custom build target in `internals md` - build sh no longer exists\r\n  
20199,     Get-Content -Raw should not neglects to read the last character  if it is a LF (#5076)\n\n  
20200,     Add release builds that produce symbols for compliance scans (#5086)\n\n  
20201,     Get-Verb: add verb descriptions and alias prefixes (#4746)\n\n* Get-Verb: add descriptions and prefixes\r\n\r\n* Add description and alias prefix tests\r\n\r\n* Make the new classes internal\r\n\r\n* Convert alias prefix to static method\r\n\r\n* Move verb descriptions to a resource file\r\n\r\n* Shorten function name\r\n\r\n* Shorten alias prefix function name\r\n\r\n* Change tests to look at counts\r\n\r\n* Add uniqueness test\r\n\r\n* Add missing alias prefixes\r\n\r\n* Fix name collision\r\n\r\n* Change alias prefix for Compare\r\n\r\n* Rename method\r\n\r\n* Remove unnecessary string allocation\r\n\r\n* Make tests easier to diagnose\r\n  
20202,     Support creating tarball package for Linux and macOS (#5085)\n\n* Support creating tarball package for Linux and macOS\r\n\r\n* Address comments\r\n  
20203,     [feature \nremoved code to show a GUI prompt for credentials as PSCore6 prompts in console\n  
20204,     removed `#if CORECLR` statements merging code base\n  
20205,     removed font and codepage handling code that is only applicable to Windows PowerShell\nreplaced LengthInBufferCells() method with Unicode adapted code from PSReadline\n  
20206,     wrapped STA code sections in `#if STAMODE` for potential future use\nremoved -importsystemmodules switch from powershell exe and related code\nremoved -consolefile parameter from powershell exe and related code\n  
20207,     Fix ValueFromRemainingArguments to have consistent behavior between script and C#  (#2038)\n\n  
20208,     Add tests for Dsc configuration compilation on Windows (#5011)\n\n  
20209,     Change to Read/Write Neutral Progress Messages for Web Cmdlets WriteToStream() (#5078)\n\n* Create read/write neutral progress messages\r\n\r\n  
20210,     Properly escape trailing backslash so that it doesn\ t end up escaping the quotes (#4965)\n\nThe native command receives the arg   \\test 1  as   \\test 1   as the last  \\   is treated as escaping the quotes  Fix is to add an extra backslash to escape the last enclosing quote   
20211,     Add NoNewLine switch for Out-String cmdlet (#5056)\n\n  
20212,     Fix the prerequisite check of MSI package (#5070)\n\n* Skip check  vsruntime140 dll  on Win10\r\n\r\n* Make the precheck accurate\r\n\r\n* Update windows installation prerequisites\r\n\r\n* Change  higher  to  above \r\n\r\n* Address comments\r\n\r\n* Address more comments\r\n\r\n* Address some more comments\r\n\r\n* [Feature  Update the installer test\r\n  
20213,     Try to locate dotnet before installing it (#5059)\n\n  
20214,     Add warning to Start-PSPester if Pester module not found (#5069)\n\nCurrently  if a user does not clone with the `--recursive` flag or run `git submodule update --init`  `Start-PSPester` will fail to run due to the missing Pester module  While the error hints at the Pester module not being found  there is no suggested way of fixing the issue presented to the user \r\nThis change makes a helpful warning to appear at the beginning of the execution of `Start-PSPester` if the Pester module cannot be found   
20215,     Remove PSMI (#5075)\n\n  
20216,     Add submodule reminder to testing-guidelines md (#5061)\n\n  
20217,     Update Arch Linux installation instructions (#5048)\n\n  
20218,     Add better error message for empty and null -UFormat arg (#5055)\n\nAdd better error message for empty and null -UFormat arg  
20219,     Add black version of icns for macOS  (#5073)\n\n  
20220,     Remove dead code (#5066)\n\nCode guarded by the following defines is ancient and has never been\r\nused  so removing \r\n* RELATIONSHIP_SUPPORTED\r\n* SUPPORTS_IMULTIVALUEPROPERTYCMDLETPROVIDER\r\n* SUPPORTS_CMDLETPROVIDER_FILE\r\nAlso removed some unused platform dependent unsafe code   
20221,     Update docs/building/linux md (#5068)\n\n  
20222,     Update script to get PSVersion from $PSVersionTable (#5045)\n\n* Update script to get PSVersion from $PSVersionTable\r\n\r\n* Address feedback\r\n\r\n* Address cleanup comments\r\n\r\n* Add back  Remove-Item  \\$fileName \r\n\r\n* Add the comment back too\r\n  
20223,     enable using filesystem from a UNC location (#4998)\n\n* enable using filesystem from a UNC location\r\n\r\n* [feature \r\naddress PR feedback\r\n\r\n* [feature \r\nremoved changed in NavigationProviderBase and made change in FileSystemProvider where it should belong\r\n\r\n* added variations of tests for set-location and push-location\r\nno need to run [feature  anymore since it passed previously and the test case added is CI\r\n\r\n* [feature \r\nmove code to reproduce UNC path to GetParentPath()\r\n  
20224,     Fix some output strings (#5065)\n\nCommented out check for sudo as it was failing on Travis-CI\r\nUpdated version of Ruby to 2 3 3\r\nReorder install so Ruby gets installed before installing PS as Homebrew relies on Ruby 2 3\r\nRemove sudo check which breaks Travis-CI  
20225,     fix detection of whether `-LiteralPath` was used to suppress wildcardexpansion for navigation cmdlets (#5038)\n\n* [feature \r\nfix detection of whether `-LiteralPath` was used to suppress wildcardexpansion\r\n\r\n* [feature \r\nskip -literalpath test with asterisk in filename as that s not valid on Windows\r\n\r\n* [feature \r\nadded more variations of tests\r\n  
20226,     SetServiceCommand: Add positional parameter attribute (#5017)\n\n* SetServiceCommand: Add positional parameter attribute\r\n\r\nAdded a positional parameter attribute to the InputObject parameter \r\ngiving Set-Service behavior similar to the other *-Service cmdlets \r\n\r\n* Add test for positional InputObjects [Feature \r\n\r\nAdded a test to Set-Service validating InputObjects passed positionally \r\n  
20227,     Fix RPM package name in README md (#5044)\n\n  
20228,     User Agent now reports the OS platform (#4937)\n\nAlso include  <major> <minor>  in UserAgent on windows platform   
20229,     Enable support of folders and files with colon in name on Unix (#4959)\n\n* [feature \r\nsupport folders and files with colon in name\r\n\r\n* [feature \r\nonly check separator in relation to colon if a colon is found\r\n\r\n* [feature \r\nadded comment to clarify algorithm\r\n\r\n* added more tests\r\n  
20230,     Fix Delay Test Race Condition (#5035)\n\n  
20231,     Correct comma position in SecureStringCommands resx (#5033)\n\nThe comma and the space needed to be swapped   
20232,     Cleanup Json cmdlets (#5001)\n\n  
20233,     change logo in readme to current black logo (#5030)\n\n  
20234,     Merge beta 8 release branch to master\n\n  
20235,     Replace CRLF with LF for two files under assets folder (#5025)\n\n  
20236,     Update ChangeLog for beta 8 release (#5006)\n\n  
20237,     Fix for impliict remoting test (#5009)\n\nFix test setup that was using `New-PSSession` instead of the helper function `New-RemoteSession` that works with AppVeyor  Re-enabled the pending test since it now works  Also added a check to ensure WinRM remoting is enabled and an endpoint is available for PowerShell 6 0   
20238,     Treat  rtf files as binary so EOL don t get changed (#5020)\n\n  
20239,     Update docs for beta 8 release (#5024)\n\n\r\n  
20240,     Fix powershell to update the PATH environment variable only if PATH exists (#5021)\n\n  
20241,     Reformat command line help for powershell -Help (#4989)\n\n  
20242,     Add links on best practice guidelines in coding guideline (#4983)\n\n  
20243,     Increase timing on test service side to avoid a race condition in the webcmdlet timeout test (#5005)\n\nincrease timing on test service side to avoid a race condition for the test  
20244,     Update Pi demo instructions if libunwind8 is not installed (#4974)\n\n* added instructions to install libunwind8\r\n\r\n* added missing period\r\n  
20245,     removed leading whitespace (#4991)\n\nAdd an optional extended description…  
20246,     Fix for Linux platform PowerShell exit on error during SSH remoting connection (#4993)\n\n* Fix for Linux platform PowerShell exit on error during SSH remoting connection\r\n\r\n* Added comment for clarification per code review request\r\n  
20247,     Fix Linux packages (#4994)\n\n* Build one deb package for each Debian distro\r\n* Build all deb packages with a single run of script  
20248,     added demo for using Windows PowerShell modules (#4886)\n\n* added demo for using Windows PowerShell modules\r\n\r\n* fix spelling\r\n\r\n* address PR feedback\r\n\r\n* address PR feedback\r\n\r\n* added WindowsPSModulePath to dictionary\r\n  
20249,     New icon for PowerShell Core (#4848)\n\n* added new icon\r\n\r\n* added new icon\r\n\r\n* update icon to new version of console image with avatar colors\r\n\r\n* added svg for blue Windows PowerShell icon\r\n\r\n* changed default to the black icon\r\n\r\n* added custom bitmaps to the installer\r\n\r\n* fixed `launch powershell` checkbox so it shows up more nicely as the default checkbox\r\nhas a grey background\r\n\r\nalso reformatted the xml using a xml formatter to make it easier to read\r\n\r\n* address PR feedback\r\n  
20250,     Merge pull request #4979 from Indhukrishna/insivara/UpdatePSDesiredStateConfiguration/1710\n\nUpdate version of PSDesiredStateConfiguration in project files  
20251,     Reformat Measure-Object test (#4972)\n\nRemove multiple tabs and formatting issues   
20252,     Be sure to change psdefaultparametervalue in the global scope (#4977)\n\n* Be sure that you change psdefaultparametervalue in the global scope\r\n\r\n* [Feature \r\n  
20253,     Update version of PSDesiredStateConfiguration in project files\n  
20254,     Replace httpbin org/gzip Tests with WebListener and Re-Enable Deflate Tests (#4948)\n\n* Add Gzip and Deflate Support to WebListener\r\n\r\n* [Feature  Run Feature tests\r\n\r\n* [Feature  Address PR Feedback\r\n\r\n* [Feature  Re-Run CI\r\n\r\n* [feature  Update WebListener Index page\r\n\r\n* [Feature  Run Feature tests\r\n\r\n* [Feature  Re-run CI\r\n  
20255,     added instructions to get permission to use assets (#4938)\n\n  
20256,     Add Remoting and Job tests (#4928)\n\n  
20257,     Fix incorrect position of a parameter which resulted in the args passed as input instead of as args (#4963)\n\n  
20258,     Suppress the output of building test tools in Compress-TestContent (#4957)\n\nWhen uploading CodeCoverage artifacts  `Compress-TestContent` is called which calls `Publish-PSTestTools` to build test tools  The build output was captured by `$codeCoverageArtifacts` which causes `Push-AppveyorArtifact` to spit out a lot of errors  The issue is fixed by this change   
20259,     add tests for get-command -ShowCommandInfo (#4906)\n\n  
20260,     Provide the correct form for foreach when there is an error  (#4950)\n\n* Update ParserStrings resx\r\n\r\n* Provide the proper form for foreach\r\n\r\n* added        \r\n  
20261,     fix `powershell -version` and help (#4958)\n\n PowerShell -v  behavior updated to align with other tools like git  curl  and bash where args after  -v  are silently ignored \r\n\r\nBuilt-in help updated to reflect changes we ve made to the console host in PSCore6 removing unsupported parameters \r\n\r\n* [feature \r\nremoved test that is no longer valid due to change in -version behavior to return error\r\n\r\n* [feature \r\nfixed `-v X` so that it errors out correctly with proper exit code\r\nupdated test to catch this\r\n\r\n* [feature \r\naddress PR feedback\r\n\r\n* [feature \r\nmake -v have behavior consistent with other tools like git  curl  bash where args after -v are ignored\r\nremoved duplicate but not exactly help text that wasn t being used in the resource file\r\nremoved parameters from help that are not support in PSCore6\r\n  
20262,     Change CRLF to LF for files that are already in repository (#4956)\n\n  
20263,     Remove Microsoft PowerShell CoreCLR AssemblyLoadContext dll (#4868)\n\nThe code in `AssemblyLoadContext dll` doesn t need to be in a separate DLL anymore \r\nS M A dll depends on `AssemblyLoadContext dll`  so keeping that code out of S M A dll doesn t help make S M A smaller size or less dependent  So the code in `AssemblyLoadContext dll` is moved to `S M A dll` and then we remove `AssemblyLoadContext dll` \r\n\r\nThe changes are:\r\n- Move `CorePsAssemblyLoadContext cs` to `src\\S M A\\CoreCLR\\`\r\n- Update `CorePsAssemblyLoadContext cs` to get the test took moved to `Utils InternalTestHooks` and update tests\r\n- Update `build psm1` and ` csproj` accrodingly\r\n- Update `pwrshcommon cpp` to remove `AssemblyLoadContext dll` from the TPA list \r\n- `S M A AssemblyExtensions` is removed as `PackageManagement` has finished their move to  NET Core 2 0  (I will work with Bryan to get the latest version uploaded to powershell-core)  
20264,     Autocorrected CRLF to LF (#4943)\n\nAlso  fix `Parser Tests ps1` after correcting CRLF   
20265,     [feature  (#4954)\n\nremove unnecessary error messages from output  
20266,     Write an error for powershell -version 2 (#4931)\n\nWrite an error for powershell -version <any value>  
20267,     Add a new line to  CommandNotFoundException  error string (#4934)\n\nWe re here at PowerShell Unplugged at Ignite  and this error message could *really* use a new line!  
20268,     Change PS to load the assembly with  Assembly LoadFrom  before  Assembly Load  when the file path is given (#4196)\n\nIt s to solve a side-by-side problem we have with powershell core  If a  NET Core version assembly has the same name as it s  NET ancestor in GAC  then even if you specify the file path to `Import-Module`  powershell core will still load the one in GAC because it tries  Assembly Load  first \r\nNow we change it to use `Assembly LoadFrom` first when a file path is given  so it works for modules that have side-by-side assemblies   
20269,     Exclude  -Comobject  parameter of  New-Object  on unsupported platforms (#4922)\n\n  
20270,     Enable transcription of native commands on non-Windows (#4871)\n\nTranscription was relying on reading the screen buffer to record output from native commands \r\nThis resulted in an unhandled exception calling an unimplemented API on non-Windows \r\nThe fix is to use redirected output/error if reading the screen buffer is not supported \r\nWe check whether screen scraping is supported or not only when the application is running standalone   
20271,     Get  PSVersion  and  GitCommitId  from the  ProductVersion  attribute of assembly (#4863)\n\n  
20272,     add get-help tests for alias (#4895)\n\n  
20273,     remove unsupported -showwindow switch (#4903)\n\n  
20274,     Add source files for coverage run (#4925)\n\nA number of tests require the sources to be present in order to work correctly \r\nDuring cleanup be sure to remove any lingering powershell exe processes because subsequent runs will not be able to update the test binaries   
20275,     Enable security flags in native compiler (#4933)\n\n* Enable strong stack protection\r\nEnable  address space layout randomization (ASLR) or PIE\r\n\r\n* Enable strong stack protection\r\nEnable  address space layout randomization (ASLR) or PIE\r\n  
20276,     Add line secret suppression (#4935)\n\n  
20277,     Fix credential scan issues (#4927)\n\n* Add file secret suppression\r\n* Add line secret suppression\r\n* This will be consumed in the VSTS daily build \r\n* Renamed tests with ConvertTo-SecureString to avoid false positives  
20278,     Change UserAgent App WindowsPowerShell -> PowerShell (#4914)\n\n* Change UserAgent App WindowsPowerShell -> PowerShell\r\n\r\n* [Feature  Run Feature tests\r\n\r\n* [feature  Address PR Feedback with more precise assertion\r\n\r\n* [feature  Address PR Feedback and add PSUserAgent Test\r\n\r\n* [feature  add tag to describe block\r\n\r\n* [feature  Remove describe block Add pattern to User-Agent specific tests\r\n\r\n* [feature  Address PF Feedback\r\n\r\nRemove all assertions for User-Agent that are not specifically about the User-Agent header \r\n\r\n* [feature  Match -> MatchExactly\r\n  
20279,     Enable network Select-String test (#4921)\n\n* Enable network string test\r\n\r\n* Fix typo\r\n\r\n* Use Get-Item to add PSDrive property\r\n  
20280,     Move release build definition into PowerShell (#4884)\n\n* Add docker related files from PSRelease\r\nbase release docker builds on PowerShell release docker images\r\n\r\n* ignore the PSRelease folder\r\n\r\n* Add vstsbuild sh wrapper of vstsbuild ps1\r\n\r\n* add vstsbuild ps1\r\n\r\n* Add build json\r\n\r\n* address PR feedbock\r\n  
20281,     [feature  Fix TestValue to avoid double // in Urls (#4920)\n\n•Adds logic in  Get-WebListenerUrl  to only apply the  TestValue  part of the path if it was supplied   
20282,     Fix importing remote module using version filters and added tests (#4900)\n\n- Add tests for remote import-module\r\n- Fix issue with remotely importing module where it was checking the version filter incorrectly against the proxy module\r\n   - The filters are applied when importing the module remotely\r\n   - After proxy module is generated it always has a module version of 1 0  so the filters will always fail when importing the proxy locally\r\n  
20283,     Enable auto EOL on git repo side  fix some character encoding issues (#4912)\n\n- add ending newline to files missing it using:\r\n`awk -F: \ $2 ~ / no line terminators/  print $1 \  ~/text-files txt | xargs -I   sh -c \ printf  \\n  >>  $1 \  -   `\r\n- update  gitattributes to enforce autocrlf on all text files\r\n- added <copyright> opening element where it was missing\r\nremoved file attribute pointing to wrong filename\r\n- fix mis-encoded character to apostrophe\r\n- replace incorrect encoding of copyright symbol with (c)\r\n- updated file hashes in the test  
20284,     Replace httpbin org/delay Tests with WebListener (#4905)\n\n  
20285,     Create generic Linux-x64 packages that are portable to all supported Linux distros (#4902)\n\n  
20286,     allow * to be used in registry path for remove-item (#4866)\n\n* [feature \r\nallow * to be used in registry path for remove-item\r\n\r\n* [feature \r\naddress PR feedback\r\nhave remove-item return error if -literalpath doesn t resolve to path\r\n\r\n* [feature \r\nfix in navigation exposed an issue with WSMan Config Provider tests\r\nthat require -Recurse to be used otherwise a confirmation prompt shows\r\nup\r\n  
20287,     Add ResponseHeadersVariable Parameter to Invoke-RestMethod (#4888)\n\n* Add ResponseHeadersVariable to Invoke-RestMethod\r\n\r\n* Add Tests for -ResponseHeadersVariable\r\n\r\n* [Feature  Run Feature Tests\r\n\r\n* Remove test to address PR feedback\r\n\r\n* Alais HV -> RHV per request\r\n\r\n* [Feature  Rerun CI\r\n\r\n* [Feature  Remove Superfluous Assertion\r\n  
20288,     instructions to demo PowerShell Core on Raspbian (#4882)\n\n  
20289,     fix tests not setting back $psdefaultparametervalues back correctly (#4892)\n\n  
20290,     Add the timezone offset correctly (#4867)\n\nIt must be padded to 3 digits and prepended with either  -  or  + \r\nAn incorrectly formatted string will not be able to be converted back to a datetime  
20291,     Replace httpbin org/encoding Tests with WebListener (#4869)\n\n  
20292,     Fix a test issue that causes tests to be skipped in Travis CI run (#4891)\n\n  
20293,     Add  ArgumentCompletionsAttribute  to support more argument completion scenarios (#4835)\n\n- Add  ArgumentCompletionsAttribute  to support argument completion for parameters that cannot have a ValidateSetAttribute \r\n- Use  ArgumentCompletionsAttribute  for the  -Format  parameter of  Get-Date  to enable useful argument compeltions   
20294,     Sort  spelling (#4876)\n\n  
20295,     Initialize Headers Dictionary Only Once (#4853)\n\nSwitch the  WebResponseObject Headers Dictionary to initialize once instead of creating a new dictionary on every get  Moved logic to  WebResponseHelper GetHeadersDictionary()  as this code will be reused outside of  WebResponseObject  \r\n\r\n* [Feature  Create Headers Only Once and Only If Called\r\n\r\n*  feature  headers -> _headers\r\n\r\n* [Feature  Move logic to WebResponseObject for reuse\r\n\r\nThis code has potential reuse in InvokeRestMethodCommand  Moving it to WebResponseHelper\r\n\r\n* Add comment to address PR Feedback \r\n  
20296,     Remove remainder of Utility Activities (#4880)\n\n  
20297,     [Feature Added Remove-service to Management module (#4858)\n\n* [Feature Remove-Service added to Management module\r\n\r\n* [Feature Capitalization\r\n\r\n* [Feature Added test cases for Remove-Service  Removed return value\r\n\r\n* [Feature Documentation from copy-paste code corrected to reflect the new function\r\n\r\n* [Feature Erroraction to be sure that an error is thrown in testcase\r\n\r\n* [Feature Removed direct reference to module in Pester test\r\n\r\n* [Feature Removed extra line in test\r\n\r\n* [Feature Use FullyQualifiedErrorId in Remove-Service test without a valid servicename\r\n\r\n* [Feature Exposed Remove-Service\r\n\r\n* [Feature Consistent casing  Named Arguments & Remove incorrect exception on cleanup\r\n\r\n* [Feature Remove-Service test should fail if the service was not removed\r\n\r\n* [Feature Cleanup comments & add Remove-Service for CI\r\n\r\n* [Feature Remove-Service in CI set in alphabetic order\r\n\r\n* [Feature Use ParameterSetName instead of _ParameterSetName and rewrite test which used the function class directly\r\n\r\n* Revert  [Feature Use ParameterSetName instead of _ParameterSetName and rewrite test which used the function class directly \r\n\r\nThis reverts commit da41f7deb811f32538e0dc7f0d811646ceb8acf8 \r\n\r\n* [Feature Remove _ParameterSetName check & added test for pipeline input in\r\nSet-Service\r\n  
20298,     Revert the changes to Pester from merged PR #4184 (#4881)\n\nThat PR incorrectly included Pester changes  Most likely because that individual did not update his submodules   
20299,     Add setup steps for MacOS to use PSRP over SSH (#4872)\n\n  
20300,     Fix bugs with expression redirected to file (#4847)\n\nWhen handling file redirection for CommandExpression  we don\ t call \ DoComplete\  on the underlying PipelineProcessor of the FileRedirection object  and thus the EndProcessing method is not called on Out-File  which causes different behaviors between <expr> > out txt and <expr> | Out-File out txt \r\n\r\nThe fix is to make sure \ DoComplete\  is called after the stream output has been written to the redirection pipe \r\n\r\nAlso fix another issue\r\n\r\nThis PR also fixes an issue that could mess up restoring the original pipes  Here is the repro:\r\n\r\nPS> 1 *> b txt > a txt; 123\r\nCannot perform operation because object  PipelineProcessor  has already been disposed\r\nThe root cause is that we don\ t always restore pipes in the correct order  Please see the code changes in Compiler cs for more details \r\n\r\nFix #4812  
20301,     Call to CodeMethod returning void should work (#4850)\n\nFixes #4826  
20302,     Minor updates to host-powershell/README md (#4877)\n\n  
20303,     reduce output of pester for CI (#4855)\n\n  
20304,     Port tests for constrained language mode (#4816)\n\n* Port tests for constrained language mode\r\n* Added  RequireAdminOnWindows  for registry access\r\n* Restored Wait-UntilTrue to current state  
20305,     Only run tests on Windows  otherwise skip them  (#4861)\n\n  
20306,     Add VS 2017 solution file for powershell-win-core (#4748)\n\n  
20307,     Add CDXML CIM DateTime test (#4796)\n\n  
20308,     Add tests for Get-Content (#4723)\n\n* Add tests for Get-Content -Tail #4150\r\n\r\n* Incorporated the review comments\r\n\r\n* renamed couple of tests\r\n\r\n* removed extra spaces\r\n\r\n* Tests refactored into a Context and the checks broken down into separate tests\r\n\r\n* Made the indents consistent with the other existing tests\r\n\r\n* Incorporated the review comments\r\n  
20309,     Added WSMan Config provider tests (#4756)\n\n* [Feature \r\nfixed issues in WSMan Config Provider\r\nadded tests for get-item  get-childitem  set-item  new-item remove-item  clear-item  dynamic parameters\r\nmerged CoreClr and FullClr code\r\n\r\n* [feature \r\naddress PR feedback\r\n\r\n* [feature \r\nrevert to using microsoft powershell plugin as base for test\r\nkeeps it simple rather than relying on additional scripts or cmdlets since these tests don t require remoting\r\n\r\n* [feature \r\naddress Aditya s feedback\r\n\r\n* [feature \r\naddress some cosmetic feedback\r\n\r\n* [feature \r\nbased on discussion with Jim  we should skip resx checks on non-Windows\r\n  
20310,     Build powershell core using the generic RID  linux-x64  (#4841)\n\n  
20311,     Replace httpbin org/redirect Tests with WebListener (#4852)\n\n  
20312,     Fix tests that incorrectly use ShouldBeErrorId (#4793)\n\n  
20313,     Validate product resource strings against resx files (#4811)\n\n  
20314,     Add tests for  Get-Content -Tail  parameter (#4790)\n\n  
20315,     Added functionality to set credientials on Set-Service command (#4844)\n\nNow we can specifiy the -Credential parameter on Set-Service cmdlet to change a service s logon account   
20316,     Updated default ModuleVersion in ModuleManifest (#4842)\n\n* Updated default ModuleVersion in ModuleManifest to 0 0 1\r\n\r\n* updates tests where manifests default versions where still matched agianst the old 1 0 version\r\n  
20317,     fix set-service failing test (#4802)\n\n* Add  -ErrorAction Stop  in Set-Service Tests ps1 to correctly test exceptions \r\n* Refactor StartupType service code and add a throw for disabled startup types (System  Boot) \r\n* Made StartupType(-1) equivalent to Win32 SERVICE_NO_CHANGE \r\n  
20318,     Use a simple file based check for the VC++ 2015 redistributables (#4745)\n\n* A simple and minimal fix of 4665 to check for the Visual Studio C++ 2015 redistributables  Note that this is specific to 2015 (vcruntime140 dll refers to the Visual Studio version 14 0  which maps to Visual Studio 2015) \r\nA previous check registry check of  SOFTWARE\\Microsoft\\DevDiv\\VC\\Servicing\\14 0\\RuntimeMinimum  failed because when the redistributables are installed via Windows update (which does not use MSI)  then the registry entry did not get populated \r\nThe  Pending  attribute was removed from existing tests since the download links are now present again and the tests were improved using Pester TestCases \r\n\r\n* Fixed typo spotted in code review of PR 4745\r\n\r\n* Remove DirectorySearch Id duplication by defining it once and referencing according to this special trick in the official WiX documentation here:    org/documentation/manual/v3/howtos/files_and_registry/directorysearchref html\r\nRenamed property values as suggested \r\n\r\n* Remove replacements of HTTPS with HTTP  i e  test against exact link  Use -UseBasicParsing switch with the hope of not having failures in the CI environment \r\nAdded comment why there is no assertion about the StatusCode \r\n\r\n* Replace download links with link to pre-requisites page as suggested in PR 4745 because this page is easier to update\r\n\r\n* Compilation error CNDL0012 fix: WiX does not allow lowercase characters for file search property Ids because due to them being used for a search property means that they must be public  hence lowercase is not allowed \r\n  
20319,     Exclude directories discovered from  -Path  in Select-String (#4829)\n\nSelect-String can search in files only so we should skip directories   
20320,     Make the build output the WiX compilation log if it failed  (#4831)\n\n* Make the build output the WiX compilation log if it failed \r\nBefore it was not outputting it not at all because the build output is an array that was piped directly to  Write-Verbose  instead of converting it to a string using  Out-String \r\nBecause the WiX log is usually quite verbose (around 250 lines)  the log is only shown if there must have been a compilation error due to the missing MSI\r\n\r\n* PR 4831: Use -Verbose option on Write-Verbose to force output in build as suggested in review \r\n  
20321,     Skip Certificate Authentication tests on CentOS and Mac (#4822)\n\nThese two tests have been failing on CentOS for some time  It is because the available libcurl library does not support client authentication certificates  
20322,     Improve the guideline for perf consideration (#4824)\n\n* Improve the guideline for perf consideration\r\n\r\n* Address comment\r\n  
20323,     Replace httpbin org/user-agent with WebListener (#4798)\n\n* Replace httpbin org/user-agent with WebListener\r\n\r\n* [feature  -SkipCertificateCheck To avoid cert issue\r\n\r\n* [Feature  Rebase & Rerun CI\r\n\r\nRerun count: II\r\n  
20324,     Replace httpbin org/headers with WebListener Get (#4799)\n\n* Replace httpbin org/headers with WebListener Get\r\n\r\n* [feature  -SkipCertificateCheck to avoid Cert issue\r\n\r\n* [Feature  Rebase & Rerun CI\r\n  
20325,     Merge beta 7 release branch to master\n\n  
20326,     Update windows package names\n  
20327,     Update travis-ci script so that PRs can fail due to pester tests (#4830)\n\n* Add a switch to force tests to fail for testing CI system to Start-PSPester\r\n* [includeFailingTest  Add commit tag to force tests to fail for testing CI system\r\n  
20328,     added tests for start/stop/suspend/resume/restart service cmdlets (#4774)\n\n  
20329,     Add tests for Get-Module over remoting (#4787)\n\nSome additional tests that are remoting specific based on code coverage  
20330,     6 0 0-beta 7 Change Log (#4821)\n\n  
20331,     Update docs for beta 7 release\n  
20332,     Add a generic file watcher function in HelpersCommon psm1 (#4775)\n\nAdd a generic file watcher function in HelpersCommon psm1 and update some tests to use the `Wait-FileToBePresent` \r\n  
20333,     Mitigate intermittent failures in access denied tests  (#4788)\n\nThis change mitigates intermittent timeout failures in the access denied tests as well as fixes unintended cross-test dependencies  If PowerShell takes longer that 10 seconds to complete a race can cause the subsequent test to pick up the output file of the previous test and fail (i e   the expected output error file already exists from the previous test because it was created by the long running PowerShell process after the second test started ) Worse case  the failure cascades causing the race to propagate through the remaining tests in the set \r\n\r\nThe fix is two fold:\r\n1: Increase the timeout for waiting for the launched powershell process  (mitigation)\r\n2: Ensure each uses a unique name for the error and done files to avoid polluting the next test   
20334,     Add Multipart Support to Web Cmdlets (#4782)\n\nPartially implements  #2112\r\n- Adds `System Net Http MultipartFormDataContent` as a possible type for `-Body`\r\n- Adds `/Multipart/` test to WebListener \r\n\r\nThis allows for the user to create their own `Http MultipartFormDataContent` object and submit it  Since `multipart/form-data` submissions are highly flexible  adding direct support for it to the CmdLets may over-complicate the command parameters and a limited implementation would not address the broad scope of use cases  This at least allows the user to submit multipart forms using the Web Cmdlets and not have to manage their own `HttpClient`  Once this is introduced  limited multipart implementations can be expanded to use the code in this PR   
20335,     Added tests for get-service based on code coverage analysis (#4773)\n\n\r\n\r\n* reformated test cases\r\n\r\n* added whitespace to format the test cases\r\n  
20336,     [Regression  Fix for error on Enter-PSSession exit (#4693)\n\n* Fix for error on Enter-PSSession exit\r\n\r\n* Added comments per code review feedback\r\n\r\n* Updated comment\r\n  
20337,     The PSSessionConfiguration tests were putting many repeated warning messages into the log  changed warnings to be silent (#4794)\n\n  
20338,     Fix travis-ci script so that PRs can fail due to pester tests (#4807)\n\n  
20339,     Add tests for ProxyCommand APIs to improve coverage (#4791)\n\nExamine the code in ProxyCommand cs to find out specific missing areas \r\n  
20340,     Add tests for  New-Object -ComObject  (#4776)\n\n\r\n  
20341,     validate the expected output package exists (#4795)\n\n  
20342,     added tests for test-wsman (#4771)\n\n  
20343,     Added Meta  Charset  and Transitional parameters to ConvertTo-HTML (#4184)\n\n  
20344,     Enable cross compiling for raspberry-pi arm32 (#4742)\n\n  
20345,     Disable a failing test case in AppVeyor daily run (#4806)\n\n  
20346,     First round of workflow cleanup (#4777)\n\nThis round of cleanup focuses on the following areas\r\n- Tab completion code\r\n- InitialSessionState\r\n- Compiler/MiscOps\r\n- Utils/SessionStateFunctionAPIs\r\nChanges in the rest affected files are mainly some corresponding changes due to the cleanup work in the above areas \r\n  
20347,     Add tests for StaticParameter to improve coverage (#4779)\n\n  
20348,     Increase Set-Service and New-Service test coverage (#4785)\n\n\r\n\r\n* reformatted file to be consistent\r\n\r\n* manual fix formatting\r\n  
20349,     Update coding guidelines (#4754)\n\n* Update coding guidelines to make it more concrete and useful in a review process \r\n\r\n* Add a section about security\r\n\r\n* Address comments\r\n\r\n* Update  spelling\r\n\r\n* Address more comments\r\n\r\n* Address comment about the security section\r\n\r\n* Fix  i e   and  e g  \r\n\r\n* Update  spelling\r\n\r\n* One more tweak\r\n\r\n* Add motivation for using  nameof \r\n  
20350,     Enable use  Singleline Multiline  option in split operator (#4721)\n\nFix #4712  
20351,     Add -WhatIf switch to Start-Process cmdlet (#4735)\n\n* Add -WhatIf switch to Start-Process cmdlet\r\n* Add test for the -WhatIf switch \r\n\r\n* Added a test to ensure that using a whatif switch prevents the action from being performed \r\n\r\n* Incorporated code review comments\r\n\r\n* merged two tests into one as suggested\r\n\r\n* Included the error action at the end of the cmdlet\r\n\r\n* Remove extra space before `StringUtil` and new line\r\n\r\n* Renamed the resource string id ProcessStartInfo to StartProcessTarget\r\n  
20352,     Replace httpbin org/get tests With WebListener (#4738)\n\n* Adds the /Get/ functionality to Weblistener\r\n* Replaces the tests that rely on httpbin org/get with WebListener\r\n\r\n\r\n* [Feature  Move HttpBin/Get Tests to WebListener\r\n\r\n* [Feature  update  spelling\r\n\r\n* [Feature  Address PR Feedback\r\n\r\n* [Feature  Add and document Home & /\r\n\r\n* Readme Update\r\n\r\n* [Feature  Should Match -> Should Be\r\n\r\nRerun CI\r\n\r\n* [Feature  Rebase and Rerun CI\r\n  
20353,     Replace  Windows PowerShell  with  PowerShell  in resx files (#4758)\n\nReplace  Windows PowerShell  with  PowerShell  in   resx  files where appropriate \r\n  
20354,     Rename $IsOSX to $IsMacOS (#4757)\n\n  
20355,     Make it easier to view and compare code coverage for a file (#4764)\n\n  
20356,     Refactor MSBuild project files to get PowerShell version from git tag (#4182)\n\nExtract information about the release tag  number of commits since the tag and the hash of the latest commit within a MSBuild target  and bake that information into version properties of the assemblies appropriately   
20357,     Disable test  Test 01  Standard Property test - all properties (<property>)  due to missing CsPhysicallyInstalledMemory (#4763)\n\n  
20358,     Push locals of automatic variables to  DottedScopes  when dotting script cmdlets (#4709)\n\nWhen dotting a script cmdlet  the locals of automatic variables from the `PSScriptCmdlet` is not set up in the current scope before parameter binding  The fix is to push the locals in `CommandProcessor OnSetCurrentScope` and pop them in `CommandProcessor OnRestorePreviousScope`  which will be called from `SetCurrentScopeToExecutionScope` and `RestorePreviousScope` respectively \r\n\r\nSummary of changes:\r\n1  When a new local scope is used  currently we set the locals for `CommandProcessor` right before parameter binding (in `BindCommandLineParametersNoValidation`); we set the locals for `ScriptCommandProcessor` in `Prepare`  I moved both to the constructor  right after the new scope is created so that the code is more consistent \r\n\r\n2  In `CmdletParameterBinderController cs`  we set up the `PSBoundParameters` and `MyInvocation` variables in `HandleCommandLineDynamicParameters` again  which I think is unnecessary because this method is only called from `BindCommandLineParametersNoValidation`  where the setup is done for the first time \r\n\r\n3  Currently  the locals will be set for dotted script cmdlet in `EnterScope()` and `ExitScope()`  Now  that logic is moved to `OnSetCurrentScope` and `OnRestorePreviousScope` of `CommandProcessor`  This not only makes sure that locals are set before parameter binding  but also is consistent with the `ScriptCommandProcessor`   
20359,     update opensuse docker image to 42 2 (#4737)\n\n- fix missing dependency in amazonlinux dockerfile\r\n- change opensuse docker to use supported image\r\n- update to conform withe label-schema org\r\n  
20360,     get tests to display the same number of tests regardless of platform (#4728)\n\n* Make count of tests the same between Windows and Non-Windows platforms\r\n\r\nChange logic so test cases are created for all platforms  but only load the helper module on windows\r\n\r\n* Ensure Get-ComputerInfo tests run the same number of tests regardless of platform\r\n  
20361,     Modify travis build to upload a daily build based on platform (#4689)\n\nchange README md to view a platform specific badge  
20362,     Update using-vscode md (#4736)\n\nThe setting  powershell developer powerShellExePath  is deprecated and should be changed to  powershell powerShellExePath    
20363,     Removed double spaces from  cs and  ps1 files (#4743)\n\n  
20364,     Update docs about the pull-request-process (#4710)\n\nUpdate pull-request-process to clarify role/responsibility of author and reviewers based on recent feedback from team and community  Also moved it to ` github/CONTRIBUTING md` so that all related information can be found at one place   
20365,     Fix error message in ValidateSetAttribute ValidateElement() (#4722)\n\n  
20366,     Remove double spaces between words in resx files (#4741)\n\n  
20367,     added new approved Build and Deploy verbs (#4725)\n\n- Added Build and Deploy verbs  updated suggestions\r\n- Reorganized verbs to be in alphabetical order making it easier to compare against    microsoft com/en-us/library/ms714428(VS 85) aspx  
20368,     Fix for Get-Content -Delimiter including the delimiter in the  array elements returned (#3706) - formatting changes\n  
20369,     Fix for Get-Content -Delimiter including the delimiter in the  array elements returned (#3706) - functional changes\n  
20370,     Set Redist test pending to unblock daily build failure (#4729)\n\n  
20371,     Ensure GetNetworkCredential() returns null if PSCredential has null or empty user name (#4697)\n\n* GetNetworkCredential() returns null if PSCredential has empty user name\r\n\r\n* Fix test\r\n  
20372,     Move WebCmdlets HTTPS tests to WebListener (#4733)\n\n* Move HTTPS tests to WebListener\r\n\r\n* Move Invoke-WebRequest HTTPS Tests to Context\r\n\r\n* [Feature  Move Invoke-RestMethod HTTPS Tests to Context\r\n\r\n \r\n\r\n* [feature  Address PR Feedback\r\n\r\n* [feature  Mark Cert Auth Tests Pending\r\n\r\n-skip -> -pending\r\n  
20373,     Trace-Command tests for code coverage (#4288)\n\nAdded tests for Trace-Command that increase code coverage to 80%~85% per class   
20374,     Add absolute url for md in issue template and pull request template (#4718)\n\n  
20375,     Fix \ using module\  when module has non-terminating errors handled with \ SilentlyContinue\  (#4711)\n\n`Compiler LoadModule` assumes that when `ps HadErrors == true` the error stream is not empty  However  when `SilentlyContinue` is specified as the error action  the non-terminating error is not kept in `ErrorOutputPipe` of the cmdlet and thus does not appear in `ps Streams Error`  So when `ps HadErrors == true` while `ps Streams Error` is empty  it suggests it\ s OK to ignore the errors because they are explicitly suppressed with `SilentlyContinue` error action \r\n\r\nSo in my opinion  the expected behavior of ` using module  \\mod psm1 ` in this case should be successful as if `ps HaddErrors` is false   
20376,     Report the same number of tests when run by Travis via cron (#4731)\n\n  
20377,     Add explicit ContentType detection to Invoke-RestMethod (#4692)\n\nThis change removes the call to `ContentHelper GetEncoding` since it s logic for returning a default encoding when a ContentType header is not found disables subsequent checks for meta charset definitions \r\nAll variations of the Invoke-WebRequest tests have been mirrored for Invoke-RestMethod  Verbose output is used to verify the encoding since Invoke-RestMethod returns the JSON content directly instead of a response object  (See ExecuteRestMethod)  
20378,     Add test WebListener module and tests for Web Cmdlet Certificate Authentication (#4622)\n\nIntroduce new test module  WebListener psm1  \r\nNow web HTTPS tests can use it to exclude using external sites \r\n\r\nPowerShell/PowerShell#4609\r\n\r\n* [Feature  Add Tests for Web Cmdlet Certificate Authentication\r\n\r\nPowerShell/PowerShell#4609\r\n\r\n* [feature  Add new app to Publish-PSTestTools refactor tests\r\n\r\nalso add ASP NET to  spelling\r\n\r\n* [feature  spelling fix\r\n\r\n* [feature  revert badssl changes\r\n\r\n* [feature  Impliment suggestions\r\n\r\n* [feature  Spelling  var rename  port 8443 to 8083\r\n\r\nrebase fix conflict\r\n\r\n* [feature  Rename to HttpsListener and Module-ize\r\n\r\n \r\n\r\n* [feature  password protect ClientCert to fix macOS import issue\r\n\r\n* [feature  Rename to WebListener \r\n\r\n* Rename HttpsListener to WebListener\r\n* Switch Listener from Razor pages to MVC\r\n* Address PR feedback\r\n* Adjust tests\r\n\r\n* [feature  Address PR feedback\r\n\r\n* [feature  Replace missing smeicolons\r\n\r\n* [feature  Address PR Feedback\r\n\r\n* [feature  Cleanup and minor fix\r\n\r\n* Enum was not used\r\n* GetStatus() was not accessing the correct property chain\r\n* Added -Test param to make URL generation smoother in test code and to fix double / issues\r\n\r\n* [feature  More minor fixes\r\n\r\n* Https when it matters \r\n* Expand property    not exclude  \r\n* Remove superfluous and outdated ToString() override\r\n\r\n* [Feature  Move ClientCeret pfx to WebListener Module\r\n\r\n* Move the cert\r\n* Adjust Get-WebListenerClientCertificate \r\n* Remove cert from csproj\r\n* ActionResult -> JsonResult (was mistakenly left as ActionResult during testing)  \r\n\r\n* [Feature  Move ServerCert pfx to Module\r\n\r\n* Move cert\r\n* Upate csproj\r\n* Update module\r\n* Add/Update README md s\r\n\r\nCI Retest \r\n  
20379,     change the default windows RID to win7-<arch> (#4701)\n\n  
20380,     clean up coreclr/fullclr statements in tracesource (#4684)\n\n  
20381,     Creates a single package for Windows  (#4540)\n\nThe updates to build psm1 and packaging psm1 create a single package (per bitness)  which works on all the Windows OS versions  namely Windows 7 / Windows Server 2008 R2  Windows 8 1 / Windows Server 2012 R2  Windows 10 / Windows Server 2016   
20382,     Remove alternate file stream code from non-Windows (#4567)\n\n* AlternateStreams support relies on pinvoke to win32 APIs which don t work on non-Windows and produces errors about not loading a DLL in the case of copy-item\r\n* Address PR feedback  remove -Stream parameter for Unix added new -stream tests\r\n* if/def out alternate stream syntax checks not applicable to Unix  
20383,     Make  Test-ModuleManifest  not load unnecessary modules (#4541)\n\n\r\n  
20384,     Use stricter rule to unwrap a PSObject that wraps a COM object (#4614)\n\nGetMember/SetMember/InvokeMember operations on a COM object will generate code to unwrap the COM object if it s wrapped in PSObject  Due to a loose restriction  if you have a string wrapped to a PSObject with an ETS member of the same name  then the string PSObject will be unwrapped too and the ETS member will be lost  The fix is to use a more restricted rule by checking if the base object is a COM object   
20385,     For reliability  start using pester PassThru object to verify tests passed (#4644)\n\n* Add ability to verify a test run using the `-passthru` object from pester\r\n* update travis-ci to use `-passthru` object to verify test results\r\n* Address PR feedback\r\n* call show-pspestererror with a named parameter\r\n  
20386,     Disable  VC++ Redist  test and run  Windows Installer  test only on Windows (#4673)\n\n  
20387,     removed appending WindowsPowerShell PSModulePath (#4656)\n\n  
20388,     Correct linux md macOS brew reinstall command (#4627)\n\nCorrect linux md macOS brew reinstall command  
20389,     Merge beta 6 release branch\n\n  
20390,     Update WritingPesterTests md to reflect recommended use of ShouldBeErrorId\n\n\r\n\r\n* added spelling word\r\n\r\n* added sample to inspect details of the errorrecord\r\n  
20391,     Remove VCRedist check because it ignores the files installed via KB (#4664)\n\n  
20392,     Update ChangeLog for beta 6 release (#4654)\n\n  
20393,     Update docs and scripts for beta 6 release (#4660)\n\n  
20394,     Replace extension method  IsComObject(this Type)  with Type IsCOMObject (#4646)\n\n  
20395,     Mark Multiple Response Header Test Pending (#4640)\n\n  
20396,     Update install scripts with minor fixes targeting macOS\n\nFixes #4617\r\nFixes #4511\r\nChange VS code install to use cask\r\nChange OSX to use curl\r\nUpdate version number by point release   
20397,     Minor formatting commits for Build psm1 and csproj files (#4630)\n\n  
20398,     Add support for Content Headers to BasicHtmlWebResponseObject and HtmlWebResponseObject (#4494)\n\n  
20399,     [Feature  Add Certificate Authentication Support for WebCmdlets (#4546)\n\n* [Feature  Add Certificate Authentication Support for WebCmdlets\r\n\r\nPowerShell/PowerShell#4544\r\n\r\n* Add Certificate  Comments\r\n\r\n* Set Certificate Options\r\n\r\n* [feature  Post-rebase White-space correction\r\n\r\n* [feature  mark certauth tests pending\r\n  
20400,     Make MSI installer perform pre-requisite checks (#4602)\n\n* #4458 MSI installer checks that the Windows C Runtime and VS Studio 2015 C++ redistributables are present and returns error message if not \r\nIncludes tests to check that the Wix file contains the download URLs and those URLs are not dead   
20401,     Add File Coverage to coverage data (#4556)\n\nIt is now possible to see the coverage based on the file and then format\r\nthe data so a report generator is not needed  You can map the files from\r\none location to another  so if you have a copy of the repo  but in a different\r\nlocation  you can still format the output in a way so it may be studied  
20402,     Make PowerShell Core enumerate COM collections (#4553)\n\nMake PowerShell Core enumerate COM collections  
20403,     Merge pull request #4573 from SteveL-MSFT/console-no\n\n* Make invalid arg to -File consistent with -Command\r\nImprove error message if ambiguous arg is passed to -File\r\n\r\n* Update powershell console exit codes to match Unix standards\r\n\r\n* Enable -WindowStyle to work\r\n  
20404,     Remove workflow related modules (#4581)\n\n  
20405,     Remove src\\Microsoft PowerShell Activities (#4582)\n\n  
20406,     Remove src\\Microsoft PowerShell Core Activities (#4583)\n\n  
20407,     Remove src\\Microsoft PowerShell Diagnostics Activities (#4584)\n\n  
20408,     Remove src\\Microsoft PowerShell GraphicalHost (#4585)\n\n  
20409,     Remove src\\Microsoft PowerShell Management Activities (#4586)\n\n  
20410,     Remove src\\Microsoft PowerShell Security Activities (#4587)\n\n  
20411,     Remove src\\Microsoft PowerShell Utility Activities (#4588)\n\n  
20412,     Remove src\\Microsoft PowerShell Workflow ServiceCore (#4589)\n\n  
20413,     Remove src\\Microsoft WSMan Management Activities (#4590)\n\n  
20414,     Move to the official  NET Core 2 0 (#4603)\n\n* Migrate to official  NET Core 2 0\r\n\r\n* [Feature  Remove chmod code as the issue has been fixed in dotnet\r\n  
20415,     Improve test coverage for CDXML cmdlet infrastructure  (#4537)\n\nCreate custom CIM classes (via MOF) and CDXML cmdlets against the new CIM class\r\nCreate tests for CRUD operations for CDXML cmdlets\r\nCoverage for Microsoft PowerShell Cmdletization namespace is nearly 50%  
20416,     In Web CmdLets  Use HTML meta charset attribute value  if present (#4338)\n\n* Use HTML meta charset attribute value  if present  when the Context-Type header does not specify it \r\n\r\n  
20417,     Fixed typo (#4600)\n\n  
20418,     Update Format-Hex tests to include -TestCase parameter (#3800)\n\n* update tests to include -TestCase paramater in It block\r\n\r\n* Move test functions to appropriate context blocks\r\n\r\n* combine skipTest conditions\r\n\r\n* move skipTest to Describe block\r\n\r\n* correct typo  change to MatchExactly\r\n  
20419,     Enable -WindowStyle to work\n  
20420,     Update powershell console exit codes to match Unix standards\n  
20421,     Make invalid arg to -File consistent with -Command\nImprove error message if ambiguous arg is passed to -File\n  
20422,     added tests for primitive types  dictionary type  and enumerable type for convertto-xml (#4503)\n\n* added tests for primitive types  dictionary type  and enumerable type\r\n\r\n* address PR feedback\r\n  
20423,     [Feature  Clean up FullCLR related scripts/docs (#4580)\n\n  
20424,     Remove test and docs rules as they are too broad (#4597)\n\n  
20425,     Add support for converting enums as strings in JSON (#4318)\n\n* converting enums as strings support\r\n\r\n* removed !CORECLR code per @SteveL-MSFT s request\r\n  
20426,     Redefine the unicode output condition for nanoserver/IoT for more function (#4074)\n\n  
20427,     Package only from the powershell folder at the root directory (#4569)\n\n  
20428,     Add codeowner files (#4565)\n\n  
20429,     Add more tab completion tests (#4560)\n\n* Add tab completion tests for CompletionAnalysis cs\r\n\r\n* Minor fixes\r\n\r\n* Address comment\r\n\r\n* Address one more comment\r\n  
20430,     Fixes KeyFilePath parameter for Linux systems (#4529)\n\n  
20431,     Opencover and Code coverage improvements (#4550)\n\n  
20432,     fix intermittent failures in filesystem tests (#4566)\n\n  
20433,     Fix unblock read only file (#4395)\n\nAdds a new non-terminating error when a file is read-only\r\n  
20434,     Reorganize some engine tests to make it clean (#4551)\n\n1  The individual test files ( ps1) in `/test/powershell/engine` are moved to the corresponding subfolders \r\n2  The test asset file `test/powershell/Common/TestTypeFile ps1xml` is moved to `test/powershell/Common/engine/Api/assets/` so that it s next to the test that is using the file   
20435,     Update nano server insider for new bulid (#4555)\n\n  
20436,     Only push to NuGet for Full Build (cron) (#4517)\n\n  
20437,     Add an additional acceptance test for the PowerShellGet module (#4531)\n\n* Add an additional acceptance test for the PowerShellGet module\r\n\r\n* Removed  BVT  tag\r\n  
20438,     Clean up ShellExecute code to use the  NET Core implementation (#4523)\n\n* Clean up ShellExecuteHelper and enable ShellExecute in NativeCommandProcessor\r\n\r\n* Minor fix\r\n\r\n* [Feature  Fix NativeCommandProcessor to clean up in case an exception is thron\r\n\r\n* [Feature  Update tests\r\n\r\n* [Feature  Address comments\r\n\r\n* address one more comment\r\n\r\n* Address some more comments\r\n  
20439,     clean up map json related files and scripts (#4532)\n\n* clean up map json related files and scripts\r\n\r\n* Update  spelling\r\n  
20440,     Enable WSManCredSSP cmdlets (#4336)\n\n* [Feature \r\nFixed error message using a null resourcemanager\r\nWith most recent CoreFx supporting STA  removed special CoreClr code paths\r\nAdded test coverage\r\nRemoved some dead commented out code that was never used\r\n\r\n* [Feature \r\nmerged tests to one file  use runas to have relevant tests run as non-elevated\r\n\r\n* [Feature \r\nGet-CredSSP returns text so only run that test if current culture is en-US\r\n\r\n* [Feature  Update test to fix code exclusion\r\n\r\n* [Feature  Fix Skipping on test cases that already had a Skip value\r\n  
20441,     [Feature  Mark failing tests as pending to unblock the nightly test pass (#4538)\n\n  
20442,     Add ability to package non-release packages (#4509)\n\n  
20443,     Improve code coverage for Get-Item cmdlet (#4385)\n\n  
20444,     Fix the hang issue in Travis CI build triggered by the [Feature  tag (#4536)\n\n* Fix the hang issue in Travis CI build triggered by the [Feature  tag\r\n\r\n* [Feature  Update badge only in daily build\r\n\r\n* [Feature  Use the term  daily build \r\n  
20445,     Clean up  #if CORE  in PSUtils cs (#4453)\n\n* Cleanup  #if CORE  in PSUtils cs\r\n\r\n* Fix IsRunningOnProcessorArchitectureARM\r\n  
20446,     Porting Enable-PSRemoting and its Tests (#2671)\n\nFixes #1193 for most scenarios  The remaining scenario to be addressed is the Nano Server bring-up scenario  To continue supporting that scenario  I left the Install-PowerShellRemoting script in place \r\n\r\nThis change \r\n1  Ports Enable-PSRemoting and Disable-PSRemoting to PowerShell Core\r\n2  Adds side-by-side PowerShell Core remoting support to the PSSessionConfiguration cmdlets and PSRemoting cmdlets \r\n3  Ports PSSessionConfiguration tests\r\n\r\nThis change also introduces a behavioral difference  The PSRemoting and PSSessionConfiguration cmdlets are now context-sensitive and only work for endpoints that match the PowerShell type  For example  Get-PSSessionConfiguration  when running in PowerShell Core  will only return PowerShell Core WinRM endpoints  It will only modify PowerShell Core WinRM endpoints and cannot be used to configure Windows PowerShell endpoints   
20447,     Clean up  #if CORE  in MshHostTraceListener cs (#4402)\n\n  
20448,     Update brew before installing powershell in installpsh-osx sh (#4506)\n\n  
20449,     Clean up  #if CORE  in ProcessCodeMethods cs and  ClrFacade GetSafeProcessHandle  (#4428)\n\n  
20450,     Remove last-modified from headers as it causes a failure when updating the daily badge (#4522)\n\n  
20451,     Fix Tests from #4479 (#4512)\n\n* Fix Tests from PowerShell/PowerShell#4479\r\n\r\n* [Feature \r\n  
20452,     Add Homebrew to install docs (#3838)\n\n* add Homebrew to install docs\r\n\r\n* add missing install instructions\r\n\r\n* add  cask  to macOS uninstall\r\n\r\n* address PR comments on Mac install\r\n\r\n* move to cask reinstall for update\r\n  
20453,     add amazonlinux DockerFile and related test changes\n\n  
20454,     Clean up  #if CORE  in PSPrincipal cs (#4433)\n\n* Use TimeZoneInfo in PSPrincipal cs\r\n\r\n* Use TimeZoneInfo in serverremotesession cs\r\n\r\n* Use TimeZoneInfo in RemoteSessionCapability cs\r\n\r\n* Use TimeZoneInfo in serialization cs\r\n\r\n* Remove private fiield   clientTimeZone \r\n\r\n* Remove extra line\r\n  
20455,     Clean up  #if CORE  in RunspaceConfiguration* cs files (#4448)\n\n* Cleanup  #if CORE  in RunspaceConfigurationTypeException cs\r\n\r\n* Cleanup  #if CORE  in RunspaceConfiguration cs\r\n\r\n* Cleanup  #if CORE  in RunspaceConfigurationEntry cs\r\n\r\n* Cleanup  #if CORE  in RunspaceConfigurationTypeAttribute cs\r\n  
20456,     Ignore case when binding PSReadline keyhandler functions\n\nFix #4300  
20457,     Tests for New-WinEvent (#4384)\n\n* New-WinEvent tests\r\n\r\n* PR feedback\r\n\r\n* PR feedback 2\r\n\r\n* PR feedback 3\r\n\r\n* PR feedback 4\r\n\r\n* PR feedback 5\r\n  
20458,     Add Missing Assemblies to TPA List for Pwrshplugin dll (#4502)\n\n\r\n  
20459,     Make ResourceManagerCache check for alternative resource paths (#4139)\n\n  
20460,     Makes Start-Trace escape file paths correctly (#3863)\n\nStart-Trace neglects qualifying arguments to the -o and -pf command line\r\nswitches  causing logman (and subsequently Start-Trace) to exit with\r\n0x80070057 and return:\r\n\r\nError:\r\nThe argument is incorrect \r\n\r\nWhenever arguments to either -ProviderFilePath or -OutputFilePath\r\ncontain spaces because Start-Trace doesn t escape the path in any way \r\n\r\nThis commit moves basic input validation for output file paths to the\r\nProviderFilePath and OutputFilePath parameter definitions  and adds text\r\nqualifiers (double-quotes) around input arguments  
20461,     Small grammar change to pull requests guide  (#4322)\n\nhim -> them  which is consistent with usage above   
20462,     Use supported API to set CAPID in the SACL (#4496)\n\n  
20463,     Remove hash validation from nanoserver-insider dockerfile  (#4498)\n\nWe are using HTTPS from the same location we are getting the dockerfile from  it should be enough   
20464,     Ensure running `powershell` within PowerShell starts instance of currently running PowerShell (#4481)\n\nModify PATH env var at startup so that $PSHOME is in front  
20465,     Fixed passing common test modules path to unelevated Powershell (#4313)\n\n- Fixed the way common test modules are passed to elevated and unelevated powershell  Earlier  only elevated powershell got those through inheritance as a child process  Now we add them to the startup of the process \r\n- Fixed error reported by PSScriptAnalyzer about ? / Where-Object\r\n- Converted all the parameters passed to powershell exe to be a base64 encoded string to avoid complications with quotes \r\n- Removed code which was updated $env:PSModulePath as we do it in startup args for powershell process instead  \r\n- Added a way to disable -Quiet for Pester \r\n- Opencover console exe gets confused when the base64 encoded parameter is given with  &  invoke \r\nWriting to a ps1 file and invoking the script works around the issue \r\nThis also makes it similar to how unelevated tests are invoked \r\n  
20466,     Extend -SkipHeaderValidation to include -UserAgent to support non-standard User-Agent headers (#4479)\n\n  
20467,     Add Ilya as Maintainer (#4365)\n\n  
20468,     v6 0 0-beta 5 release\n\n  
20469,     Cleanup  #if CORE  in Utils cs (#4443)\n\n  
20470,     Cleanup  #if CORE  in TypeTable cs (#4442)\n\n  
20471,     Add more tab completion tests (#4356)\n\n* Add more TabCompletion tests\r\n\r\n* Minor changes\r\n\r\n* Add some more tests\r\n\r\n* Add more tab completion tests\r\n\r\n* Fix errors\r\n\r\n* Add more test coverage\r\n\r\n* Add  AfterEach   Pop-Location   \r\n\r\n* Enable DSC resource name completion and address comments\r\n\r\n* use both  /  and  \\  in the path for completion\r\n\r\n* Use a separate test for  \\  and  / \r\n  
20472,     Change test to not set PSDefaultParameterValues (#4482)\n\nCreate a local variable for determining whether the test should be skipped \r\nAlso  change the depth of `Export-Clixml` to speed up tests   
20473,     Update changelog for beta 5 (#4486)\n\n\r\n  
20474,     Update docs/scripts for beta 5 release (#4470)\n\n  
20475,     Clean up  #if CORE  in PropertyAccessor cs (#4429)\n\n* Cleanup  #if CORE  in PropertyAccessor cs\r\n\r\n* Remove RegistryAccessor class\r\n  
20476,     use fpm 1 8 1 (#4468)\n\n  
20477,     Add -Force parameter to new-zippackage (#4465)\n\n  
20478,     Resolve the loading crash on Win7 (#4463)\n\nAdded package reference for  Microsoft NETCore Windows ApiSets \r\n  
20479,     Support Positive/Negative ValidateRange (#4084)\n\nTo improve code clarity and give better error messages when using ValidateRange  you can now specify:\r\n\r\n```\r\n[ValidateRange(ValidateRangeKind Positive) \r\n```\r\n\r\ninstead of\r\n\r\n```\r\n[ValidateRange(1  2147483647) \r\n```\r\n\r\nValid kinds are:\r\n\r\nPositive\r\nNegative\r\nNonPostiive\r\nNonNegative  
20480,     Cleanup  #if CORE  in EtwActivity cs (#4455)\n\n  
20481,     Cleanup  #if CORE  in SessionStateExceptions cs (#4454)\n\n  
20482,     Add test coverage for Registry (#4354)\n\n* Add test coverage for Registry (#4148)\r\n\r\n* Add coverage for Get-Item  Get-ChildItem  Set-Item  and Clear-Item\r\n\r\n* Add test for accessing inaccessible path  per code review \r\n\r\n  
20483,     Increase test coverage for Rename-Item and Move-Item (#4329)\n\n* Increase test coverage for Rename-Item and Move-Item\r\n* Add access-denied tests\r\n* Add -skip on Unix for access-denied tests \r\n\r\n  
20484,     Cleanup  #if CORE  in ExtensionMethods cs (#4451)\n\n  
20485,     Cleanup  #if CORE  in PSTelemetryMethods cs (#4452)\n\n  
20486,     Cleanup  #if CORE  in PInvokeDllNames cs (#4456)\n\n  
20487,     Remove appx packaging related script (#4376)\n\n  
20488,     Allow passing $true/$false as parameter to script using -File (#4178)\n\nUsing powershell exe to execute a PowerShell script using -File currently provides no way to pass $true/$false as parameter values  Current behavior is that -File accumulates passed parameters as strings only \r\n\r\nFix is to special case this based on discussion with PS-Committee to support $true/$false as parsed values to parameters  Switch values is also supported as currently documented syntax doesn t work \r\n  
20489,     Add ability to package all of powershell core as a NuGet Package (#4363)\n\nSo that PowerShell can be installed using PackageManagement cmdlets find-package and install-package   
20490,     Increase code coverage of Get-ChildItem on file system  (#4342)\n\n* Increase code coverage of Get-ChildItem on file system   
20491,     Make ShellExecuteEx use STA (#4362)\n\n  
20492,     add amazonlinux compatibility in install-powershell sh (#4360)\n\n* Updated to support amazon linux (centos variant)\r\n\r\n* Updated to support amazon linux (centos variant)\r\n\r\n* Updated to support amazon linux (centos variant)\r\n  
20493,     Merge pull request #4283 from mwrock/no_debug\n\nif running noninteractively then do not break into debugger on ctrl +…  
20494,     Merge pull request #4441 from SteveL-MSFT/deviceguard-pending\n\nset deviceguard test to pending as it keeps failing in CI  
20495,     set deviceguard test to pending as it keeps failing in CI\n  
20496,     Add Aditya as a Maintainer (#4364)\n\n  
20497,     Give error instead of crashing if WSMan client lib not available (#4387)\n\n\r\n  
20498,     Clean up  #if CORE  in Utils cs (#4397)\n\n  
20499,     Clean up  #if CORE  in CimIndicationWatcher cs (#4398)\n\n  
20500,     Cleanup  #if CORE  in PdhSafeHandle cs (#4399)\n\n  
20501,     Cleanup  #if CORE  in cimConverter cs (#4400)\n\n  
20502,     Cleanup  #if CORE  in GetComputerInfoCommand cs (#4401)\n\n  
20503,     Cleanup  #if CORE  in PSUserAgent cs (#4403)\n\n  
20504,     Cleanup  #if CORE  in Native cs (#4404)\n\n  
20505,     Cleanup  #if CORE  in PInvokeDllNames cs (#4405)\n\n  
20506,     Clean up  #if CORE  in Cmdlets cs (#4406)\n\n  
20507,     Cleanup  #if CORE  in HistoryQueue cs (#4407)\n\n  
20508,     Cleanup  #if CORE  in CertificateProvider cs (#4408)\n\n  
20509,     Cleanup  #if CORE  in Set-QuickConfig cs (#4410)\n\n  
20510,     Cleanup  #if CORE  in cmdlets-over-objects objectModel autogen cs (#4411)\n\n  
20511,     Cleanup  #if CORE  in ILineOutput cs (#4412)\n\n  
20512,     Cleanup  #if CORE  in MshParameter cs (#4413)\n\n  
20513,     Cleanup  #if CORE  in CorePsExtensions cs (#4414)\n\n  
20514,     Cleanup  #if CORE  in CorePsPlatform cs (#4415)\n\n  
20515,     Cleanup  #if CORE  in CurrentConfigurations cs (#4409)\n\n  
20516,     Length script property for List View didn t include a name for the property so it defaulted to using the script as the property name (#4437)\n\n  
20517,     Cleanup  #if CORE  in CorePsStub cs (#4416)\n\n  
20518,     Cleanup  #if CORE  in ComAdapter cs (#4418)\n\n  
20519,     Cleanup  #if CORE  in CompletionCompleters cs (#4419)\n\n  
20520,     Cleanup  #if CORE  in ExtensibleCompletion cs (#4420)\n\n  
20521,     Cleanup  #if CORE  in CommandProcessor cs (#4421)\n\n  
20522,     Clean up  #if CORE  in ConnectionFactory cs (#4422)\n\n  
20523,     Cleanup  #if CORE  in DynamicInstructionN cs (#4423)\n\n  
20524,     Cleanup  #if CORE  in InstructionFactory cs (#4424)\n\n  
20525,     Clean up  #if CORE  in Utilities cs (#4425)\n\n  
20526,     Cleanup  #if CORE  in ModuleIntrinsics cs (#4426)\n\n  
20527,     Cleanup  #if CORE  ParameterBinderBase cs (#4427)\n\n  
20528,     Cleanup  #if CORE  in PSVersionInfo cs (#4430)\n\n  
20529,     Clean up  #if CORE  in remoterunspace cs (#4431)\n\n  
20530,     Fix Invoke-Item test on macOS (#4435)\n\nadd defensive measures to have TextEdit start explicitly bypassing restoring previously open docs and to explicitly close TextEdit after the test   
20531,     Clean up ClrFacade cs - remove ClrFacade PtrToStructure (#4379)\n\n  
20532,     Clean up ClrFacade cs - remove ClrFacade SizeOf<T>() (#4377)\n\n  
20533,     Remove ClrFacade GetUninitializedObject and  if CORECLR  cleanup (#4375)\n\n  
20534,     Clean up ClrFacade cs - remove ClrFacade DestroyStructure (#4378)\n\n  
20535,     Clean up ClrFacade cs - remove ClrFacade StructureToPtr (#4380)\n\n  
20536,     Make invoke-item test `Feature` and increase timeout (#4382)\n\n  
20537,     Merge pull request #4353 from SteveL-MSFT/deviceguard-startprocess\n\nFix DeviceGuard data being returned from Get-ComputerInfo and Start-Process test failure  
20538,     Clean up  #if CORE  in AddType cs (#4370)\n\n  
20539,     Clean up  #if CORE  - use SecurityZone from CoreFX (#4368)\n\nMake `System Management Automation references` to package `System Security Permissions`  which brings back `SecurityZone` and `System Security Policy Zone`   
20540,     Clean up  #if CORECLR  in ClrFacade cs (#4366)\n\n  
20541,     Clean up  #if CORE  in OrderObjectBase cs (#4371)\n\n  
20542,     Clean up  #if CORE  - use TimeZoneInfo and TimeZoneNotFoundException from CoreFX (#4369)\n\n\r\n  
20543,     added check to device guard not returning array\n  
20544,     Cleanup  #if CORE  in ManagedEntrance cs (#4373)\n\n  
20545,     [Feature \nIn CI  notepad exe isn t starting (or starting in time) when using start-process with  txt based on file association \nSince the test is validating opening files by association  fix is to create our own association that is predictable \n  
20546,     Support Invoke-Item -Path <folder> (#4262)\n\nOn CoreFx  UseShellExecute for Process start is false by default to be cross platform compatible \r\nIn the case of a folder  Process Start() returns Access Denied as it s not an executable \r\nOn Windows  we can use the ShellExecute path to have explorer open the folder  On Unix  we use `xdg-open` and `open` for Linux and macOS respectively   
20547,     [Feature \nfix Get-ComputerInfo return of status for DeviceGuard\nfix corresponding tests\n  
20548,     Fix Implicit Remoting test failure on nightly run (#4323)\n\nRetry setting winrm config if it fails with MaxConcurrentUsers > 100  
20549,     Fix error message when  HelpMessage  property of  ParameterAttribute  is set to empty string (#4334)\n\n- Fix invalid value error message on some properties of ParameterAttribute to point to the specific properties \r\n- Avoid wrapping argument exception into not a useful  requires  exception   
20550,     Move packaging strings to  psd1 file (#4333)\n\nMove here strings in packaging module to psd1 file for easier maintenance of strings and code   
20551,     Merge pull request #3608 from DarwinJS/feature/install-powershell sh\n\ncreate script to install latest powershell from repositories  
20552,     Start using vs 2017 image (#4340)\n\n  
20553,     Get macOS working and fix misc issue\n  
20554,     Separate Windows PSRP binary build out of Start-PSBuild (#4335)\n\nThere are following major changes:\r\n- `Start-PSBootstrap -BuildWindowsNative` installs the native dependencies required for building PSRP binary  Without `-BuildWindowsNative`  it only installs the dotnet-SDK on Windows platform \r\n- `Start-PSBuild` doesn t build Windows PSRP binary  Instead  `Start-BuildNativeWindowsBinaries` is added to build it  After the build  3 files (` pwrshplugin dll `  ` pwrshplugin pdb `  ` Install-PowerShellRemoting ps1 `) will be bin-placed at `src\\powershell-win-core` like before \r\n- The NuGet package ` psrp windows ` is added to `powershell-core` feed  and we reference it in `powershell-win-core csproj` to get the Windows PSRP related files  Files ( dll and  pdb) in the package are from the beta 4 release build   
20555,     Fix array expression to not return null or throw error (#4296)\n\nThis change fixes 3 issues:\r\n- According to [PowerShell Language Specification Version 3 0 (   microsoft com/en-us/download/details aspx?id=36389)  as quoted:  _The result is the (possibly empty) unconstrained 1-dimensional array_   `@(   )` should only return `object[ ` array \r\n- `@([object[  $null) GetType()` fails with error ` You cannot call a method on a null-valued expression  `\r\n- `@([System Collections Generic List[object  $null)` fails with error ` Object reference not set to an instance of an object  `  
20556,     Remove unneeded try-catch in build psm1 (#4328)\n\n  
20557,     [Feature Fix regressions that cause implicit remoting tests to fail (#4326)\n\n  
20558,     move packaging CmdLets to separate module (#4319)\n\n* fix PsScriptAnalyzer issues\r\n* update release docs\r\n  
20559,     Fix PRs not running Feature (#4304)\n\n  
20560,     Update doc about the process to become a Maintainer (#4311)\n\n  
20561,     PSScriptAnalyzer fixes by category (#4261)\n\n- Fix PSScriptAnalyzer warnings of type PSAvoidUsingCmdletAliases for  ForEach-Object  (alias is  %  or  foreach )\r\n- Fix PSScriptAnalyzer warnings of type PSAvoidUsingCmdletAliases for  Where-Object  (alias is  ?  or  where )\r\n- Fix PSScriptAnalyzer warnings of type PSAvoidUsingCmdletAliases for  Select-Object  (alias is  select )\r\n- Fix PSScriptAnalyzer warnings of type PSPossibleIncorrectComparisonWithNull  Essentially  $null has to be on the left-hand side when using it for comparison \r\n- A Test in ParameterBinding Tests ps1 needed adapting as this test used to rely on the wrong null comparison\r\n- Replace a subset of tests of kind  ($object -eq $null) | Should Be $true  with  $object | Should Be $null \r\n  
20562,     Add Test coverage for XmlCommand cs (#4201)\n\n  
20563,     trying apostrophes\nrename md to have only one period\nfix md spelling mistakes\nFixes to markdown to follow strict syntax\ncreate readme\n  
20564,     install-powershell sh\nupdating for pull request comments\nOSX Install script updated to use repositories\n\nUsing TR  use curl rather than wget since we ensured it is on the system\nUpdate comments in install-powershell sh\ninstall-powershell sh\n  
20565,     Create symlinks in publish path for RedHat variants (#4198)\n\n  
20566,      Due to the use of unsupported APIs  we must remove the LocalAccounts module until a better solution is found  (#4302)\n\n  
20567,     Due to the use of unsupported APIs  we must remove the Counter CmdLets in the Diagnostics Module until a better solution is found  (#4303)\n\n  
20568,     Add tests to do basic verification of docker images (#4244)\n\n  
20569,     Fix build message getting truncated on rerun (#4297)\n\n  
20570,     Add ability to run feature tests for pr (#4277)\n\n  
20571,     Add test to validate  Assembly LoadFrom  behavior (#4285)\n\n\r\n  
20572,     if running noninteractively then do not break into debugger on ctrl + break\n\nSigned-off-by: Matt Wrock <matt@mattwrock com>\n  
20573,     Run CI and Feature tests by default with Start-PSPester (#4273)\n\n  
20574,     Fix ConvertTo-Html single matched column header bug (#4276)\n\n  
20575,     updated webcmdlets CI tests to not depend on external website (#4279)\n\n* updated webcmdlets CI tests to not depend on external website\r\n\r\n* When used in background runspace  validate listener is working before returning\r\n\r\n* fix possible infinite loop waiting for listener to start\r\n  
20576,     Use cached  dotnet  in AppVeyor (#4278)\n\n\r\n  
20577,     Register-PSSessionConfiguration fails if SesionConfig folder doesn t exist (#4271)\n\n  
20578,     Add Build Check for MFC for Visual C++ During Windows Builds (#4185)\n\n* added requirement check for atlbase h\r\n\r\n* removed blank line mistakenly added\r\n\r\n* updated based on pull request feedback\r\n  
20579,     Enable DataRow/DataRowView adapters in PowerShell Core (#4258)\n\n  
20580,     Enable upgrades rather than side-by-side install (#4259)\n\n  
20581,     Disable UTC and SQM telemetry by enclosing the code in  #if LEGACYTELEMETRY  (#4190)\n\n  
20582,     Checkbox to open PowerShell after the (Windows) installer has finished (#4203)\n\nAdded a checkbox (unchecked by default) to the last dialogue of the Windows installer to provide the option of opening PowerShell because that s what most people want to do if they installed PowerShell   
20583,     Run PowerShell class static methods in the correct Runspace/SessionState (#4209)\n\nSummary\r\n----------\r\nWhen the same script file gets executed in multiple Runspaces  the RuntimeType generated from the powershell class defined in the file will be shared among those Runspaces  For different Runspaces  different SessionState should be used to run the static methods \r\n\r\nFix\r\n---\r\nWe use the `SessionStateKeeper` to query for the correct `SessionState` to use for a static method call \r\nWe already use `SessionStateKeeper` to track the `Runspace/SessionState` where a PowerShell class is defined  and thus we can leverage this for the static method invocation   
20584,     Beta 4 changelog updates (#4260)\n\n  
20585,     Fix C# tests for ValidateSetValuesGenerator (#4253)\n\n  
20586,     Fix for implicit remote regression in restricted session (#4222)\n\n\r\n  
20587,     Add -SkipHeaderValidation switch to Invoke-WebRequest and Invoke-RestMethod to support adding headers without validating the header value  (#4085)\n\n* Add -SkipHeaderValidation switch to Invoke-WebRequest and Invoke-RestMethod to support adding headers without validating the header value \r\n\r\n* Fix whitespace\r\n  
20588,     update nanoserver-insider-powershell known issues (#4251)\n\n* update nanoserver-insider-powershell known issues\r\n\r\n* Add new words to dictionary\r\n\r\n* address PR comments\r\n  
20589,     Added tests for built-in type accelerators (#4230)\n\n\r\n  
20590,     Fixes CIM deserialization bug (#4234)\n\n  
20591,     ValidateSetAttribute enhancement: support set values to be dynamically generated from a custom ValidateSetValueGenerator (#3784)\n\nCurrently `ValidateSetAttribute` accepts only explicit constants as valid values  This is a significant limitation  Sometimes we need to get valid values dynamically  ex   Azure VMs  logged-on users and so on  The PR add follow possibilities:\r\n- pass a _custom type_ (a valid values generator) implementing `IValidateSetValuesGenerator` interface to get valid values dynamically \r\n- pass a _custom type_ (a valid values generator) derived from `CachedValidValuesGeneratorBase` abstract class to get valid values dynamically and _cache_ the list to share with other ValidateSetAttribute attributes   
20592,     Move Bootstrap to  install  phase for Travis-CI (#4250)\n\n  
20593,     Merge beta 4 release changes (#4247)\n\n* Fix the path on windows containers (#4241)\r\n\r\n* Updated string to reflect beta 4 version (#4238)\r\n\r\n* Add beta 4 changelog (#4245)\r\n\r\n* first pass at beta 4 changelog\r\n\r\n* grammar and spelling fixes (#1)\r\n\r\n* sort and add new words to dictionary (#4248)\r\n  
20594,     Make travis ci quieter (#4229)\n\n  
20595,     add insider release notes (#4228)\n\n* add insider release notes\r\n\r\n* note that issue should be fixed in beta 4\r\n\r\n* fix spelling error in no known workaround\r\n\r\n* fix spelling of pre-release\r\n\r\n* Add new words to spelling dictionary for NanoServer-insider release\r\n\r\n* fix spelling of PackageManagement\r\n  
20596,     Get Pester fixes into PowerShell (#4227)\n\nThere are two fixes in psl-pester:\r\n1  Add Context information to the Pester log which will reduce the name collisions with test names\r\n2  Update test teardown so exceptions thrown in `AfterAll` will not leave pester in a bad state \r\nWhen this happens  Pester fails all subsequent tests with the error  Already in Describe    
20597,     Fix maintainer readme syntax (#4226)\n\n  
20598,     Fix heading for breaking change contract doc (#4224)\n\n  
20599,     add test coverage for -notcontains  -is  -isnot operators (#4179)\n\n* added test coverage for -notcontains  -is  -isnot operators\r\n\r\n* cleaned up tests to use -TestCases  added missing -cnotcontains test\r\n  
20600,     make sure we don t return null for share module path (#4219)\n\n* make sure we don t return null for share module path\r\nfall back to environment if call to get special path doesn t work\r\n\r\n* address PR comments\r\n  
20601,     Add  semver  as core (contrained-safe) accelerator for S M A SemanticVersion (#4142)\n\n  
20602,     Add nanoserver insider dockerfile (#4212)\n\n* remove empty file\r\n\r\n* add nanoserver insider docker image\r\n\r\n* remove entrypoint and add cmd\r\n\r\n* update docker repo to be an argument\r\n\r\n* update docker files for POSIX syntax changes\r\n\r\n* add comments\r\n  
20603,     Added section explaining Windows PowerShell vs PowerShell Core (#4186)\n\n\r\n  
20604,     Remove unneeded test hooks and tests due to behavior change in  NET Core (#4200)\n\n  
20605,     Added code coverage analysis to identify missing coverage (#4097)\n\n\r\n  
20606,     Add Windows PowerShell PSModulePath by default on Windows (#4132)\n\nThis change is only for Windows and appends the Windows PowerShell PSModulePath on startup via a default profile  Depending on the data/feedback we get  we can decide what to do (opt-in vs opt-out) as we get closer to a release candidate   
20607,     Updated Code Coverage badge and filtered out PSReadline module (#4121)\n\n  
20608,     Fix usage of -TestCases so that the parameters show up in the test case description (#4188)\n\n  
20609,     Close eventLogSession and EventLogReader to unlock an etl file (#4034)\n\nFix #3979  
20610,     Close FileStream opened by Get-FileHash (#4175)\n\nFix #4174  
20611,     Make Get-ChildItem follow symlinks on demand  with checks for link loops (#4020)\n\nAdd the dynamic parameter `-FollowSymlink` to `Get-ChildItem` \r\nAdd a mechanism for tracking visited directories \r\nAdd native code to get device/inode information on Unix/Windows \r\nAdd warning when refusing to enter an already-visited directory   
20612,     Added comma to the list of replaced characters in assemblyname (#4136)\n\n  
20613,     Static analysis: Fix usage of XmlReader to ensure XmlResolver is null (#4108)\n\n* the default XmlResolver will attempt to resolve external resources  recommendation is to explicitly set to null which\r\nwill raise exception if malicious xml attempts to cause xmlreader to access external resources\r\n\r\n* added DTDProcessing and related to XmlReaderSettings\r\n  
20614,     Add markdown lint errors as test failure message (#4189)\n\n  
20615,     Update  NET CLI information in windows-core md (#4176)\n\n  
20616,     Fix spurious error generated when importing cmdlets from an in-memory assembly (#4117)\n\n\r\n  
20617,     Move powershell to `2 0 0-preview3-25426-01` using the  NET CLI `2 0 0-preview2-006502` (#4144)\n\n  
20618,     Fix for SSH remoting when SSH client abruptly terminates (#4123)\n\n* Fix for SSH remoting when SSH client abruptly terminates\r\n\r\n* Put error message in localizable string resource\r\n\r\n* Renamed error string per code review request\r\n\r\n* Removed extra error==null check\r\n  
20619,     Refactor MSBuild project files by adding the common property file  PowerShell Common props  (#4106)\n\n`AssemblyVersion` and `FileVersion` are now inferred from the `Version` property  which is inferred by `VersionPrefix`  So now both `AssemblyVersion` and `FileVersion` are 6 0 0 0 for each of PowerShell assemblies  and the `ProductVersion` and `InformationalVersion` are 6 0 0   
20620,     Fixing Import-Module on Linux for special cases of NestedModules/RootModule path format (#4010)\n\n* IPMO fix for some cases of NestedModules/RootModule path syntax\r\n\r\n* Added tests for #3693 fix\r\n\r\n* Updated tests\r\n  
20621,     Address static analysis issues in SSH remoting (#4083)\n\n* address static analysis issues\r\n- remoteRunspaces is not used TFS:10618323\r\n- not checking return value of ResumeThread() TFS:10618344\r\n\r\n* fixed magic number use\r\n\r\n* changed magic number to Uint MaxValue\r\n  
20622,     Fix the link to  Net Core Foundation (#4127)\n\n  
20623,     add CODE_OF_CONDUCT md (#4109)\n\n* add CODE_OF_CONDUCT md\r\n\r\n* updated spelling for CODE_OF_CONDUCT md\r\n\r\n* Fixed markdown lint error\r\n\r\n* added link to CODE_OF_CONDUCT md as expected by GitHub\r\n  
20624,     Need explicit -command to execute command in Read-Host output test (#4103)\n\n  
20625,     Minimize writing ANSI escape sequences in PSReadline (#4110)\n\nInstead of changing Console *groundColor on every character  only set\r\nthe color when the color changes - this avoids writing out ANSI escape\r\nsequences after every character \r\n\r\nFixes #4075  
20626,     Implement Unicode escape parsing (#3958)\n\n* Implement Unicode variable width `u xxxxxx  escape sequences   
20627,     Add missing timestamper cert to the newer catalog signing APIs for Get-AuthenticodeSignature (#4061)\n\n* Fixed missing functionality to add timestamper cert for the newer catalog signing APIs for Get-AuthenticodeSignature\r\n  
20628,     Change New-ModuleManifest encoding to UTF8NoBOM on non-Windows platforms (#3940)\n\n* Change New-ModuleManifest encoding to UTF8NoBOM\r\n\r\n* Addressed PR feedback\r\n\r\n* Fixed test for Travis CI\r\n\r\n* Updated tests\r\n  
20629,     Enhance ResGen tool to support generating C# binding file for a specific  resx file (#3918)\n\n\r\n  
20630,     Run PowerShell in latest Kali (#4035)\n\n* Run PowerShell in latest Kali\r\n\r\n* markdown error in pull request\r\n\r\n* Update linux md\r\n\r\n* code block fix\r\n\r\n* fixed typo\r\n\r\n* fixed typos\r\n  
20631,     Add tab completion for Export-Counter -FileFormat parameter (#3856)\n\n* add tab completion for -FileFormat parameter\r\n\r\n* update expected error for invalid -FileFormat test case\r\n  
20632,     Revert  Set assembly versions by MSBuild  (#4091)\n\n\r\n  
20633,     Update the release steps (#4082)\n\n  
20634,     Add description of recommended settings for VS Code (#4054)\n\n  
20635,     Make Move-Item work with its -Include  -Exclude  and -Filter parameters (#3878)\n\n* Make Move-Item work with its -Include  -Exclude  and -Filter parameters (#2385)\r\n\r\nInvoke the correct overload of SessionState Path GetResolvedPSPathFromPSPath  passing the cmdlet context object \r\n\r\n* Update tests per code review \r\n\r\n* Changes per code review \r\n\r\n* Remove stray comment\r\n  
20636,     Set assembly versions by MSBuild (#3917)\n\n* Update assemblies versions by MSBuild and create a new PowerShellAssembly props file to consolidate properties \r\n\r\n* Move import on first place\r\n\r\n* Move to  6 0 0-beta 3 \r\n  
20637,     Update docs and scripts for v6 0 0-beta 3 release\n\n  
20638,     Resx - remove trailing white spaces and extra Newline at EOF (#4047)\n\n  
20639,     Fixed BaseDirectory tests by adding -c instead of positional argument (#4078)\n\n  
20640,     Add type inference for Foreach-Object -MemberName   (#3972)\n\nThis PR adds type inference support for the  MemberName  parameterset for Foreach-Object \r\n\r\nBoth of the following should work:\r\n\r\n```\r\n    Get-Process | %  $_ MainModule  | % Com<Tab>\r\n    Get-Process | % MainModule | % Com<Tab>\r\n```\r\n\r\nBefore this change  only the first line worked  this PR addresses the second line \r\n\r\nFixes #2596  
20641,     Make CodeCoverage tests work with CodeCov io and related fixes (#4050)\n\n* Fixed OpenCover module and CodeCoverage launcher script\r\n\r\n* Changes to layout of package caused some changes to package path \r\n* Added Test modules from tests\\tools\\modules\r\n* Fixed Get-ChildItem test\r\n* Added convertor for converting OpenCover output file to JSON \r\n* Updated how the file is uploaded to CodeCov io\r\n\r\n* Addressed code review comments\r\n  
20642,     Update host-powershell doc for beta 3 release (#4071)\n\n  
20643,     with change of positional parameter to powershell exe from -command to -file  need to update some feature tests (#4058)\n\n  
20644,     Refactor CompletionCompleters cs to avoid constructing unnecessary CompletionContext instances (#4048)\n\n\r\n  
20645,     Check the dotnet-cli version in Start-PSBuild (#4045)\n\n  
20646,     Update CHANGELOG md (#4059)\n\n\r\n  
20647,     Add cache for GetApplicationBase (#3969)\n\n  
20648,     Update release version\n  
20649,     Remove nightly docker images (#4052)\n\n\r\n  
20650,     Adding a slightly bigger window to  Start-Sleep  test  (#4049)\n\n  
20651,     Enable Send-MailMessage on CoreCLR (#3869)\n\n* Enable Send-MailMessage for PowerShell Core\r\n* Update cmdlet entry in DefaultCommands Tests ps1\r\n* Changes per code review:\r\n  * Add check for SMTP server\r\n  * Send mail to/from currently logged-in user on currently-named machine\r\n  * Do not try to clear/create the mailbox before the test\r\n  * Add validation of Subject  
20652,     Add  CSharpVersion7  member into public  Language  enum (#3933)\n\nPublic enum  LanguageVersion  from  Microsoft CodeAnalysis CSharp \r\nalready contains  CSharp7  member \r\nAfter moving PowerShell to  Net Core 2 0 we should add  CSharpVersion7 \r\nmember into public  Microsoft PowerShell Commands Language  enum too \r\n\r\nThis will allow  Add-Type -Language CSharpVersion7   
20653,     Remove ClrVersion property from $PSVersionTable (#4027)\n\n* ClrVersion property of $PSVersionTable is not useful with CoreCLR and end users should not be using it\r\nthat value to determine compatibility   Recommendation from dotnet team is to remove that property \r\n\r\n* Removed internal members used for CLRVersion\r\n\r\n* removed CLRVersion from FullCLR build as well\r\n\r\n* added additional information to run `start-psbootstrap -buildnative` if cmake is not found\r\n  
20654,     Change positional parameter for powershell exe from -Command to -File (#4019)\n\nPreviously powershell exe treated unknown arguments as a command line to execute  To align with POSIX so that things like shebang scripts work correctly  we are changing powershell exe so that it treats unknown arguments (aka positional argument) as a file  This means that `powershell foo` will now attempt to use `foo` as a PowerShell script whereas previously `foo` would be treated as a command to execute  This doesn t affect existing usage of either -File nor -Command  Fixed tests that didn t explicitly use -Command parameter   
20655,     Start-Sleep: add  ms  alias to  -Milliseconds  (#4039)\n\n\r\n  
20656,     Remove unused P/Invoke method declarations (#4041)\n\n  
20657,     Fix about_* topic help issues and a few tab completion regressions (#4014)\n\n  
20658,     Move PowerShell back to  NET Core 2 0 0-preview1-002106-00 (#4026)\n\n  
20659,     Strip authorization header on redirects with web cmdlets (#3885)\n\nInvoke-WebRequest and Invoke-RestMethod cmdlets will now strip authorization header on redirect unless the new parameter `-PreserveAuthorizationOnRedirect` is specified \r\n\r\nThe FullCLR implementation uses WebRequest to perform the request which silently strips the Authorization header when a redirect occurs \r\n\r\nThe CoreCLR implementation uses HttpClient to perform the request which does not strip the authorization header  The change explicitly handles the initial redirect  removes the authorization header and submits the request to location in the response \r\n\r\nFixes #2227  
20660,     Added logic in AssemblyLoadContext to load assembly from GAC  (#3981)\n\n  
20661,     Add a test for chaining more than 2 native commands in pipeline (#4012)\n\n  
20662,     Fix Linux platform SSH process creation for remoting (#3901)\n\n* Fix SSH process creation on Linux platforms\r\n\r\n* Fixed typos\r\n\r\n* Added UNIX managed code StartProcess\r\n\r\n* Fixed compile errors\r\n\r\n* Changed process create to return pid\r\n\r\n* Now resolve full SSH command file path for all platforms\r\n\r\n* Removed data reader error handling because it conflicts with SSH errors in the error stream\r\n\r\n* Clean up work\r\n\r\n* Fix for file line endings\r\n\r\n* More clean up\r\n\r\n* Change to Linux platform SSH process creation to create process in new session\r\n\r\n* Added third party license text for DotNet Core\r\n\r\n* Removed process creation in new session and added suppress SIGINT\r\n\r\n* Removed unneeded code for creating SSH process\r\n\r\n* Fixed Unix compile errors\r\n\r\n* Changes for code review\r\n\r\n* Response to more code review comments\r\n\r\n* Removed unneeded using statements\r\n  
20663,     Update README md about the  v1 11 0-beta4  VSCode C# extension (#4009)\n\n\r\n  
20664,     Move to latest  NET Core and enable `-SkipCertificateCheck` on OSX (#3887)\n\n  
20665,     Consolidated the two test exes into one (#3982)\n\nCombined the previous echoargs and createchildprocess test exes into a single TestExe that can be extended for other tests   
20666,     Fix the issue that PS only stops transcription when all runspaces are closed (#3896)\n\nOnly stop transcription when all runspaces are closed  
20667,     Update native code to not call into PSAssemblyLoadContext (#3973)\n\n  
20668,     Use wildcard matching in help file search (#3971)\n\n  
20669,     fixed link to download C++ Redist (#3983)\n\n  
20670,     Fix non-fatal (red) errors in test output (#3968)\n\n  
20671,     Make ConsoleHost honor NoEcho on Unix platforms (#3801)\n\n  
20672,     Add installation instructions for Kali Linux (#3634)\n\n* Update README md\r\n\r\n* Update linux md\r\n\r\n* Update linux md\r\n\r\n* fix markdownlint on README\r\n  
20673,     Alter test httplistener to use a new runspace rather than a job (#3966)\n\nThis improves the performance of the listener by not relying on a new\r\nprocess starting up to run the listener  It improves the debugability\r\nof tests by providing more direct access to the session executing\r\nthe listener  It also reverses the blocking nature of starting the\r\nlistener  By default  Start-HttpListener will no longer block  you need\r\nto use -Foreground to have Start-HttpListener block  Lastly  create\r\na way to catch errors if the listener has a problem  If code in the\r\nlistener throws  it emits an error record   
20674,     Support creating PS class instance that is not bound to any runspace (#3871)\n\n  
20675,     Allow use of long paths (#3960)\n\nWhen calling Windows native API to determine if an item exists \r\nensure the path is prepended with  \\\\?\\  when the path is a long path \r\n\r\nFixes #3891  
20676,     Fix bug where native exe --<tab> would not call native completer (#3633)\n\n  
20677,     Update README md (#3873)\n\nAdded link to  awesome-powershell   
20678,     Add version to PowerShell banner (#3916)\n\nFixes #3895  
20679,     Adding support for Typeinference based on runtime variable values (#2744)\n\n* Refactored the type inference code in preparation to make it a public api \r\n* Added type inference tests\r\n\r\nFixes #2567  
20680,     Add documentation requirements to CONTRIBUTING md (#3794)\n\n  
20681,     Update ISSUE_TEMPLATE md (#3953)\n\nAdds fenced code blocks / output blocks to the `Steps to reproduce`  `Expected behavior` and `Actual behavior` sections  so as to facilitate proper formatting \r\n\r\nFix #3952   
20682,     Convert tab indentations to spaces in * resx files  (#3576)\n\n* Convert tab indentations to spaces in * resx files\r\n\r\n* Add Newline at EOF\r\n\r\n* Remove extra char\r\n  
20683,     Fix the issue Get-Help does not support string pattern under Unix (#3852)\n\n  
20684,     Update the releasing documentation to reflect the desired release steps and order (#3938)\n\n* Update release documentation to reflect the desired release steps and order \r\n\r\n* Update in-doc links\r\n\r\n* Update  spelling\r\n\r\n* Address comments\r\n\r\n* Additional changes to build/package example\r\n\r\n* Update  spelling\r\n\r\n* Remove another internal URL\r\n\r\n* Name and link updates could be automated\r\n\r\n* Move  Note  to the top of  Release Steps  section\r\n  
20685,     Add code cleanup and documentation labels to issue-management md (#3908)\n\n* Update issue-management md to add `code cleanup` and `documentation needed` labels\r\n\r\n* changed label to `Documentation Needed` based on feedback\r\n  
20686,     Refactor PowerShell Core to use the default CoreCLR loader instead (#3903)\n\nRemove the code that spins up our own assembly load context  Keep the code that registers our `Resolve` method to the default loader s `Resolving` event  so that we can continue to do special assembly resolution as needed (such as the GAC probing logic needed for consuming FullCLR PS modules) \r\n\r\nEssentially  the assembly `Microsoft PowerShell CoreCLR AssemblyLoadContext dll` is not needed anymore  the remaining code should be moved to S M A dll  However  that will break DSC and other native hosts that are hosting powershell  So this assembly is kept for now \r\n  
20687,     Fixed code coverage infrastructure and some failing tests (#3914)\n\nFixed tests that were failing or throwing unnecessary information on-screen \r\nUpdated the paths to powershell exe as per the new artifact layout \r\nAdded Publish-PSTestTools to Compress-TestContent\r\nAdded PS Test tools to PSModulePath before starting tests   
20688,     Fix Import-Module to honor  ScriptsToProcess  when  -Version  is specified (#3897)\n\n\r\n  
20689,     Fix Start-PSBuild -SMAOnly with the latest dotnet cli (#3930)\n\n  
20690,     Set default parameter set for Start-PSPackge (#3939)\n\n  
20691,     Silently ignore failure on GetConsoleFontInfoEx() api call (#3937)\n\nThe api is available on ServerCore but fails (returns false) running in container \r\nSilently ignoring the failure allows PSReadline to work   
20692,     Make  Start-PSBuild  and  Start-PSPackage  accept a release tag argument (#3921)\n\n  
20693,     Update launch json Attach config to use process picker  (#3928)\n\n  
20694,     Update docs for beta 2 release (#3922)\n\n\r\n  
20695,     Remove BuildVersion from  $PSVersionTable (#3877)\n\n* Remove BuildVersion from PSVersionInfo type\r\n\r\n* Fix error messages\r\n\r\n* Remove BuildVersion from tests\r\n  
20696,     Update CHANGELOG md for beta 2 release (#3907)\n\n  
20697,     Update regular expression to filter out Json contents that do not start with an array for ConvertFrom-Json  (#3882)\n\n  
20698,     On Mac  when the httplistener is stopped  it takes time for the system to clean it up   It also appears that on Mac  http reservation (#3872)\n\nUse different HttpListener for Invoke-WebRequest and Invoke-RestMethod tests  
20699,     Enable PSReadline to work on NanoServer (#3815)\n\nNanoServer is missing some console APIs that PSReadline uses which causes PSReadline to not be usable on NanoServer docker images \r\n\r\nFor the missing font/display APIs  the fix is to assume all characters use 1 cell which is not always correct for some languages \r\n\r\nFor the missing keymap APIs - there is no workaround in this change and a small number of key bindings don t work  there is an open issue to track those \r\n\r\nFixes #3463  
20700,     Change package name  el7 centos  to  el7  (#3732)\n\n  
20701,     Fix daily test failure in set-content test (#3884)\n\n\r\n  
20702,     Make PSReadline render correct portion of prompt on Unix when it s a multi-line string (#3867)\n\nCheck whether the prompt is multi-line or not  If it is  then only use the part that is shown in the input line   
20703,     Make Get-ChildItem continue enumeration when encountering error on contained item (#3806)\n\nAdded try/catch within the enumeration loop to allow the enumeration to continue after encountering an error such as an item within the directory being deleted or renamed \r\n\r\nTo assist in testing  two new internal test hooks have been added which cause Get-ChildItem to either delete or rename a specific file (file name hard-coded) when encountered during enumeration   
20704,     Make ConvertFrom-Json deserialize an array of objects with multiple lines  (#3823)\n\n* Fixing ConvertFrom-Json on CoreCLR to be able to handle a collection of strings which represent a JSON content \r\n\r\n* Adding test case for ConvertFrom-Json to process an array of PSObjects as a single string \r\n  
20705,     Support Link Header pagination in WebCmdlets (#3828)\n\n* Support Link Header pagination in WebCmdlets to make it easier for the end user implementing:\r\n   com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0021-Link-header-based-pagination-for-WebCmdlets md\r\n\r\nWhen the response includes a Link Header (   ietf org/html/rfc5988#page-6)  for Invoke-WebRequest we\r\ncreate a RelationLink property that is a Dictionary representing the URLs and rel attributes and ensure the\r\nURLs are absolute to make it easier for the developer to use   For Invoke-RestMethod  we expose a -FollowRelLink\r\nswitch to automatically follow  next  rel links to the end until we hit the optional -MaxRelLink parameter value \r\n\r\n* removed unnecessary refs to namespaces\r\n\r\n* addressed code review feedback\r\n  
20706,     Fix  Invoke-Item  to accept a file path with spaces on Unix platforms (#3850)\n\nUse the method NativeCommandParameterBinder NeedQuotes  which is used by powershell native command processor  to check if quotes are needed  If yes  add quotes in the same way as our native command processor \r\nAlso  make \ Invoke-Item\  on Linux and OSX able to invoke an executable properly   
20707,     Make DocumentEncryptionCert test pending (#3854)\n\n  
20708,     Change to not expose unsupported aliases/cmdlets in Unix (#3595)\n\nMake changes to not expose the aliases  gin    gsv    sasv  and  spsv  in Unix platforms \r\nAlso refactored aliases related tests and added new tests covering the complete list of built-in aliases/cmdlets   
20709,     Remove undocumented certificate Win32 APIs (#3818)\n\nThe code paths deleted where using the undocumented Win32 APIs on WIn8 and newer for the following purposes:\r\n* Faster filtering\r\n* Getting two properties (left empty on Win7 and below)\r\n* Logging using Certificate components when a cert is deleted or copied \r\n\r\nAfter the change  all the code uses public APIs   Filtering is done in PowerShell using existing code   I don t believe the logging is needed   
20710,     Fix check for Wix toolset in New-MSIPackage (#3843)\n\nWix toolset is part of the AppVeyor base image  The daily build did not generate a MSI since Wix toolset was not found \r\nAppVeyor updated the Wix version in the base image and our checks failed \r\nThe fix removes the hardcoded version from path  It also guards against multiple side-by-side versions   
20711,     Removed automatically adding year to copyright message (#3804)\n\nRemoved automatically adding year to copyright message for file generated by New-ModuleManifest and New-PSRoleCapabilityFile   
20712,     Adding Server 2008 R2 to README md (#3824)\n\n  
20713,     Removed  Import-Module $helperModule  as it is not needed  (#3814)\n\n  
20714,     Support backgrounding pipelines with ampersand (#3360)\n\nImplements support for backgrounding pipelines with &  Putting & at the end of a pipeline will cause the pipeline\r\nto be run as a PowerShell job  When a pipeline is backgrounded a job object is returned  Once the pipeline is\r\nrunning as a job  all of the normal job cmdlets can be used to manage the job  Variables (ignoring process-specific\r\nvariables) used in the pipeline are automatically copied to the job so\r\n    copy $foo $bar &\r\njust works  The job is also run in the current directory instead of the user s home directory as is the case with Start-Job Implement  
20715,     Test HttpListener so that PowerShell Core tests don t have to rely on an internet web service (#3778)\n\n  
20716,     Removed unused help providers and related classes  (#3795)\n\n* Removed unused help providers and related classes \r\n\r\nWe do not publish any help content for FAQ  General and Glossary help providers  These were only used in v1 of Powershell \r\n\r\n* Removed XSDs for obsolete help providers\r\n\r\n* Removed references from other XSDs \r\n  
20717,     Add autoload for TestLanguage psm1 TestHelpers psm1 (#3456)\n\n* Add autoload for TestHelpers psm1\r\n\r\nTest Helpers psm1 was renamed to TestHelpers psm1\r\n\r\n* Resolve conflit and rebase Add autoload for TestLanguage psm1\r\n\r\n* Remove unneeded comments from PSD1 files\r\n\r\n* Rename test modules\r\n\r\nRemove approved verbs (Get-Verb) from module names \r\n\r\n* Enhance ShouldBeErrorId to output exception into pipeline for later analysis\r\n\r\n* Remove unneeded comments\r\n\r\n* Resolve merge conflict\r\n  
20718,     Do not send telemetry in CI (#3785)\n\nThis removes the telemetry semaphore file in CI for both Travis-CI and AppVeyor  
20719,     Fix for #3786 (#3793)\n\nThe appropriate [SemanticVersion  constructor now accepts a [version  instance that has only major and minor components specified  in which case the patch component now defaults to 0   
20720,     Cross-gen the top assemblies with JIT times > 5ms (#3787)\n\nStartup went from 1998 ms to 1067 ms \r\nSize went from 103 MB to 133 MB   
20721,     Prevent Get-ChildItem from recursing into symlinks (#3780)\n\nBrings the Get-ChildItem more in line with the Unix ls -r and the Windows DIR /S native commands  Like these commands  the cmdlet will display symbolic links to directories found during recursion but will not recurse into them \r\nLike the Unix ls command---and unlike the Windows DIR /S command--- the cmdlet will recurse into symlinks given on the command line   
20722,     update the doc about hosting powershell with a sample that uses beta 1 packages (#3770)\n\n  
20723,     Enable Get-TimeZone for Unix platforms since required classes are available in  Net Standard 2 0  (#3735)\n\n  
20724,     Update README md (#3757)\n\nNeed to update the privacy statement link to the broader one  
20725,     Update releasing md about NuGet package suffix (#3759)\n\n  
20726,     Beta 1 known issues doc (#3583)\n\n  
20727,     Add locales package and only generate locale after adding package (#3756)\n\n  
20728,     Update docs for beta 1 release (#3748)\n\n* First iteration\r\n\r\n* Second iteration\r\n\r\n* Third iteration\r\n\r\n* Fourth iteration\r\n\r\n* Fifth iteration\r\n\r\n* Revert the temporary workaround\r\n\r\n* beta 1 release only support Mac OSX 10 12+\r\n  
20729,     Installation docs update for Debian 8 and RHEL 7 (#3709)\n\n* Debian8 update\r\n\r\n* RHEL7 update\r\n\r\n* Main page update\r\n\r\n* Fixed  MD024 Multiple headers with the same content \r\n\r\n* Update linux md\r\n\r\nAdded explicit text about compatibility of Ubuntu14 04 pkg on Debian8 to avoid confusion about URLs\r\n\r\n* Update linux md\r\n  
20730,     Temporary workaround #2 to fix the PSVersion issue in beta 1 release (#3742)\n\n  
20731,     Temporary workaround to fix the PSVersion issue in beta 1 release (#3740)\n\n  
20732,     Update CHANGELOG md for  v6 0 0-beta 1  release (#3736)\n\n  
20733,     Relax SemanticVersion constructors to not require minor and patch (#3696)\n\n`$psversiontable psversion -gt  3 0 ` which is used by PowerShellGet to determine if a module is compatible with the current version of PowerShell \r\n\r\nChange is to allow specifying only major or major+minor where the missing segments default to zero by providing overloaded constructors and allow\r\nthe string parsing method to not require major  minor  and patch segments to all be specified (only major is required) \r\n\r\nBased on the [response (   com/mojombo/semver/issues/368) from the maintainer of semver  there is no requirement to have strict\r\nconformance for the inputs to the constructor and allowing  3 0  to result in a semver of 3 0 0 is reasonable   
20734,     Fix a pipe char in the table formatting (#3714)\n\nSet the proper escaping for a pipe char inside of a cell text in Markdown   
20735,     Use  <id> - <name>  as ToolTip and ListItemText when tab completing process ID (#3664)\n\n\r\n  
20736,     Update  Build sh  to allow building powershell manually on Unix (#3710)\n\n  
20737,     Change error message when using New-Item to create a symlink and the item exists (#3703)\n\n  
20738,     Correct formatting in PSVersionInfo (#3694)\n\n  
20739,     Change Get-ChildItem to list the content of a link to a directory on Unix  (#3697)\n\nBrings Get-ChildItem in line with ls command on Unix and with the PowerShell behavior on Windows when the link is a directory symbolic link   
20740,     Update powershell to use  NET Core 2 0 0-preview1-002106-00 (#3699)\n\nUse 2 0 CLI/SDK of version `2 0 0-preview1-005952` to keep in sync with the  NET Core 2 0 //Build dogfood instructions  The version of `Microsoft NetCore App` in use is `2 0 0-preview1-002106-00`   
20741,     Move  PSVersion  and  PSEdition  to first and second places in $PSVersionTable (#3562)\n\n  
20742,     Change native execution tests to use df instead of stty (#3685)\n\nwhen automating test execution  some environments don t have a tty which causes\r\nthe tests to fail  df is just as good a test as stty as it is also guaranteed to be\r\npresent  This change also allows the tests to be run on OSX  
20743,     Fix Rename-Item to allow Unix globbing patterns in paths (#2799) (#3661)\n\n* Fix Rename-Item to allow Unix globbing patterns in -Literal paths (#2799)\r\n\r\nIn the process of normalizing a relative path  PowerShell checks to see\r\nsee if the path exists  which it does by invoking\r\n    Directory EnumerateFiles(directory  filename);\r\n\r\nOn Unix platforms  if the filename contains globbing patterns  such as [ab  \r\nEnumerateFiles (and EnumerateDirectories) will perform the globbing  Using\r\nglobbing patterns  a file named  file[txt  txt  is reported as not existing \r\n\r\nThis fix changes the file-existence test on Unix to use a native function\r\ninstead of either of the Directory EnumerateXXX functions \r\n\r\n* Fix for AppVeyor failure\r\n\r\n* Changes per code review  and a couple of letter-casing changes \r\n  
20744,     Add statement to README md covering the current telemetry implementation (#3673)\n\nAdd statement regarding the current telemetry implementation to address concerns from Privacy Review  
20745,     Update class grammar comments (#3688)\n\n  
20746,     Add updating homebrew instruction (#3533)\n\n  
20747,     Add documentation about the Univeral C Runtime dependency (#3495)\n\n  
20748,     Improve ValidateCount attribute error message (#3656)\n\nLeave only two message for ValidateCount attribute error:\r\n1  Count is not in allowed range \r\n2  Count is not exactly equal allowed value \r\n  
20749,     Diable schema validation in ScriptWriter cs (#3679)\n\n  
20750,     Make sure nuget package version suffix applies to all ProjectReference (#3678)\n\n  
20751,     PSVersionTable should have entry for OS and Platform (#3654)\n\n  
20752,     Get-Help should find help files under pshome (#3528)\n\n  
20753,     Adding support for native command globbing on UNIX (#3643)\n\nThis change enables globbing (wildcard expansion) against the file system for native commands like \ /bin/ls\   The expansion is only done in the file system  In non-filesystem drives expansion is not done and the pattern is returned unchanged \r\n\r\nLimitations of the fix:\r\nCurrently quoting is not honored so for a command like /bin/ls  * txt   wildcard expansion will still be done  Adding support for bare word detection will come in a future PR  Use --% to suppress wildcard expansion e g  git add --% *  
20754,     Fixing a bug related to ModuleSpec syntax in RequiredModules (#3594)\n\nThis fixes issue #2607 \r\n RequiredModules  is a field in module manifest that can reference other modules using ModuleSpecification format \r\nThe basic version of this format (just module name) was working fine  however  there was a problem when a more detailed version of the format was used (the one that uses module versions or/and GUIDs) \r\nDuring module import  there is a check for cyclic references through  RequiredModules  field  The bug was in this check for cyclic references  related to comparison rules for ModuleSpecification objects - as a result  the code was incorrectly reporting  cyclic reference  error in cases when there was none \r\nAlso  added tests for different ModuleSpecification formats and a test for error when there is actually a cyclic reference   
20755,     Mark  -SkipCertificateCheck  tests pending on OSX for now (#3660)\n\nMark two tests pending on OSX due to #3648  
20756,     Change behavior of Remove-Item on symbolic links (#621) (#3637)\n\nWhen  Remove-Item  is used to remove a symbolic link in Windows  only the link itself is removed  The  -Force  switch is no longer required \r\nIf the directory pointed to by the link has child items  the cmdlet no longer prompts the user to remove the child items---those child items are not removed  The  -Recurse  switch  if given  is ignored \r\nThis brings  Remove-Item  more in line with the behavior of the  rm  command on Unix   
20757,     Add telemetry to the console host to report platform and version (#3620)\n\nThis is limited to the console host and is not meant as generalized telemetry code for PowerShell Core  It will capture the GitCommitID and Platform Information when the console host starts  It enables opting out of sending telemetry \r\n  
20758,     Performance improvements to security checks when group policies are in effect for ExecutionPolicy (#2588)\n\n* Caching the parent id of the current process\r\nIn certain scenarios  like a domain joined machine with an executionpolicy set via GPO  a lot of checks are done for the ExecutionPolicy  and this is in the hot path \r\n\r\n* Caching HasGPScriptParent \r\nIt is expensive to determine if a script was run as a result of applying a group policy  This does not change during the lifetime of a process \r\nThis only affect the scenario when an execution policy has been set by a group policy \r\n\r\n* Using available Microsoft PowerShell ProcessCodeMethods GetParentPid\r\n  
20759,     Adds Port parameter for SSH PSSessions (#3499)\n\n* fixes summary block typo\r\n\r\n* Adds support for Port parameter for SSH PSSessions\r\n\r\n* Reverted back to master  modified based on PR feedback\r\n\r\n* Update exception message\r\n\r\n* remove unused line\r\n\r\n* Add existing constructor back in as to not break public contract\r\n\r\n* remove port check\r\n\r\n* pass nested inner exception straight to Should\r\n\r\n* dispose runspace after each test\r\n\r\n* Add SSHHostParameterSet attribute for Invoke-Command Port property\r\n\r\n* Update ParseSSHConnectionHashTable method to accept Port value as integer\r\n\r\n* Add helper method for validating port in range  Refactor port parameter constructor overload to use original constructor\r\n\r\n* rename method\r\n\r\n* Adds GetSSHConnectionStringParameter and GetSSHConnectionIntParameter methods for retrieving SSHConnection hashtable values\r\n\r\n* Adds method comments\r\n\r\n* Adds helper method comment\r\n\r\n* Change methods to add C# 7 patterns\r\n  
20760,     New-ModuleManifest was incorrectly checking if a Uri was well formed by using ToString() which just outputs the original (#3631)\n\nstring   If the string was a uri with spaces  ToString() doesn t return the escaped version   The AbsoluteUri property\r\nshould be used instead which returns an escaped absolute uri (if valid) \r\n\r\nAlso renamed TestModuleManfest ps1 to TestModuleManifest Tests ps1 so that it gets picked up correctly as Pester test \r\n\r\nSince HelpInfoUri is just a string  ensure it is a valid absolute uri and escaped correctly whereas before it was just\r\nan opaque string that wasn t validated   
20761,     Added tests for Test Connection (#3604)\n\n\r\n  
20762,     Fix tab completion with  @ <tab>  to avoid crash in PSReadline (#3626)\n\n\r\n  
20763,     Add Hashtable tab completion for `-Property` of select-object (#3625)\n\nAlso added more tab completion tests \r\n  
20764,     Added requested comment (#3640)\n\n  
20765,     Remove unused and duplicated GetEncodingFromEnum (#3487)\n\n  
20766,     SSH Remoting should handle multi-line error messages from SSH client (#3612)\n\n* Fix to support multi-line error messages from SSH client\r\n\r\n* Fixed resx file\r\n\r\n* Added null check\r\n\r\n* Added Environment NewLine\r\n  
20767,     Improve ValidateCount attribute error message (#3596)\n\n  
20768,     Add dockerfile and test so we can test simple remoting behaviors (#3470)\n\n* Add dockerfile and test so we can test simple remoting behaviors\r\n\r\nthis docker file creates an image which can be used to test remoting with containers \r\nWe start with the microsoft/windowsservercore image and then set up the system for\r\ntesting by adding a user  setting up configuration for basic auth  installing\r\nPowerShell Core  and creating a configuration endpoint for PSCore \r\n\r\nThe tests are very simple; it retrieve $PSVersionTable PSVersion in the following\r\nconnections:\r\n   Full -> Full\r\n   Full -> Core\r\n   Core -> Full\r\n   Core -> Core\r\n\r\n* Add new file to bootstrap the docker image\r\n\r\nfix the tests to be more resilient to changes in the version of the PSCore package\r\n\r\n* update script to use local user cmdlets rather than net exe\r\n\r\nalso remove pscore msi at the end of the image build process to save space\r\n\r\n* clean up commented lines and remove an unused parameter from one of the functions\r\n\r\nalso use constants more consistently\r\n\r\n* remove reference to docker image name by string and use variable instead \r\n  
20769,     Use more accurate test to check if source and destination paths are pointing the same file (#3441)\n\nRather than relying on case-insensitive string compares of source and destination paths  use operating system calls to determine whether two paths refer to the same file  This solves not only the case-insensitivity issue but also allows the cmdlet to operate properly if the destination is a hard or symbolic link to the source \r\nThe Windows side is implemented in C#  The Unix side is implemented partially in native code   
20770,     Fix the Read-Host test that fails in OSX (#3609)\n\n  
20771,     Add ErrorMessage property to ValidatePattern  ValidateSet and ValidateScript attributes (#2728)\n\nThis makes it possibe to write for example\r\n[ValidatePattern(\ [A-Z :\    ErrorMessage=\ The Drive should be specified as a single letter followed by a colon  for example  D: \ ) \r\n[string  $Drive \r\n\r\nThe element being validated is also passed  so  0  can be used in the custom error message\r\n  
20772,     Fix web cmdlet tests and the error message for  Get-Member -input $null  (#3602)\n\n\r\n  
20773,     Add  x  permission to crossgen on Linux and OSX (#3592)\n\n  
20774,     New-Item -ItemType SymbolicLink cannot understand directory path ending with slash on Linux (#2974)\n\n  
20775,     Update build script to always use  dotnet publish  (#3589)\n\nAlso update 2 building docs  
20776,     Move powershell to  NET Core 2 0 (#3556)\n\nThis change moves powershell to  NET Core 2 0  Major changes are:\r\n1  PowerShell assemblies are now targeting `netcoreapp2 0`  We are using `microsoft netcore app-2 0 0-preview1-001913-00`  which is from dotnet-core build 4/4/17  We cannot target `netstandard2 0` because the packages `System Reflection Emit` and `System Reflection Emit Lightweight`  which are needed for powershell class  cannot be referenced when targeting `netstandard2 0` \r\n2  Refactor code to remove most CLR stub types and extension types \r\n3  Update build scripts to enable CI builds  The `-cache` section is specified to depend on `appveyor yml`  so the cache will be invalidated if `appveyor yml` is changed \r\n4  Ship `netcoreapp` reference assemblies with powershell to fix the issues in `Add-Type` (#2764)  By default `Add-Type` will reference all those reference assemblies when compiling C# code  If `-ReferenceAssembly` is specified  then we search reference assemblies first  then the framework runtime assemblies  and lastly the loaded assemblies (possibly a third-party one that was already loaded) \r\n5  `dotnet publish` generates executable on Unix platforms  but doesn\ t set  x  permission and thus it cannot execute  Currently  the  x  permission is set in the build script  `dotnet/cli` issue [#6286 (   com/dotnet/cli/issues/6286) is tracking this \r\n6  Replace the use of some APIs with the ones that take `SecureString` \r\n7  osx 10 12 is required to update to `netcoreapp2 0` because `dotnet-cli` 2 0 0-preview only works on osx 10 12 \r\n8  Add dependency to `System ValueTuple` to work around a ambiguous type identity issue in coreclr  The issue is tracked by `dotnet/corefx` [#17797 (   com/dotnet/corefx/issues/17797)  When moving to newer version of `netcoreapp2 0`  we need to verify if this dependency is still needed   
20777,     Fix New-Item to create correct symlink type (#2915) (#3509)\n\nNow `New-Item` can create a file symlink to a file target or to a non-existent target  It can also create a directory symlink to a directory target on Windows   
20778,     Accept `-i` for an interactive shell (#3558)\n\nOn Unix  it is a convention for shells to accept `-i` for an interactive shell and many\r\ntools expect this behavior (`script` for example  and when setting powershell as the\r\ndefault shell) and calls the shell with the `-i` switch   This change is breaking in\r\nthat `-i` previously could be used as short hand to match `-inputformat` which now will\r\nneed to be `-in`   
20779,     Use IntPtr(-1) for INVALID_HANDLE_VALUE instead of IntPtr Zero (#3544)\n\n- Fix incorrect handling of  GetCurrentProcess()  API return value in  IsWow64()  function (MainEntry cpp)\r\n- Remove unused INVALID_HANDLE_VALUE field from  ProcessNativeMethods  class (Process cs)  
20780,     Convert tab indentations to spaces in * cs files (#3551)\n\nPrepare to pass meta test   
20781,     Make the output of $PSVersionTable in alphabetical order (#3530)\n\n\r\n  
20782,     Typo in Format-Hex (#3539)\n\n  
20783,     Use /bin/bash  fixes #3525  
20784,     Add sudo for adding cert for OpenSUSE (#3524)\n\n  
20785,     Removed trailing whitespace (#3485)\n\n  
20786,     Fix markdown lint issues for SSH Remoting demo and enable related tests (#3484)\n\n\r\n  
20787,     Adding public ValidRootDrives property to ValidateDrive (#3510)\n\n  
20788,     Fix crash at startup when env:HOME not set (#3437)\n\nThere are cases like using PowerShell via Puppet where the account being\r\nused does not have a home directory   Updated PowerShell to use a process\r\nspecific temporary directory if HOME  CONFIG  CACHE  and DATA directories\r\nare not available   Temporary directory is removed when last runspace\r\nis disposed   
20789,     Update windows docker hashes and labels (#3508)\n\n  
20790,     Update docs to use the new windows package names (#3507)\n\n  
20791,     Alpha 18 release doc updates (#3492)\n\n\r\n  
20792,     Fix Default/OEM encoding behavior PowerShell Core (#3467)\n\nBased on the conclusion in discussion #3248  this PR fix  OEM  and  Default  encoding in powershell \r\n1  OEM -- We need an internal fix because  Net Core has no  OEM  encoding \r\nThe fix gives the following PowerShell Core behavior on  OEM  encoding:\r\n   - on Windows - as Windows PowerShell based on GetOEMCP() and legacy encodings (System Text Encoding CodePages)\r\n   - on Unix - the same as default encoding in PowerShell Core\r\n\r\n2  Default -- We need internal fix because CoreFX `Encoding default` for all platforms is UTF8 \r\nUntil we complete the `Encoding RFC` we should restore behavior as in Windows PowerShell \r\nThe fix gives the following PowerShell Core behavior on  Default  encoding:\r\n   - on Windows - as Windows PowerShell based on GetACP() and legacy encodings (System Text Encoding CodePages)\r\n   - on Unix - UTF-8 without BOM (We are expecting that the same will be [in CoreFX (   com/dotnet/coreclr/issues/10643))  
20793,     OpenSUSE42 1 docs update and download sh (#3478)\n\n  
20794,     Silently don t set execution policy for Unix machines (#3481)\n\n  
20795,     Update SSHRemoting demo README md  (#3471)\n\n  
20796,     Skip the parser tests that are run by  ShouldBeParseError  in Travis Full Build (#3479)\n\n\r\n  
20797,     Replace  libpsrpclient  with  psrp  package (#3477)\n\nThe package  libpsrpclient  was replaced by  psrp  in #3271  However  this was missed when moving from project json to MSBuild  This change makes this update   
20798,     Fix tests to work as expected under Linux (#3474)\n\n- Removed the -TimeoutSec option and modified the expected Error to be consistent across platforms \r\n- Changed the port of the phony proxy to 9 which is reserved for the Discard Protocol  So even if the system is listening  it s supposed to discard that TCP request (UDP may use it for Wake-on-Lan  but doesn t affect this)   
20799,     Make `Out-Default -Transcript` more robust in how it handles `TranscribeOnly` state (#3436)\n\n  
20800,     Add option -NoProxy to WebCmdlet\n  
20801,     Refer to Windows docker images license in main readme (#3469)\n\n  
20802,     Fix progress bar display when cursor not at left edge\n\nFix by saving the cursor position  displaying the progress  and restoring the cursor back to the original position so normal formatting (e g  table output) can continue \r\n\r\nCloses #3453   
20803,     Fix  StringBuilder  initialization (#3458)\n\n  
20804,     Add entry points to the windows docker files (#3462)\n\n  
20805,     fix hashes for windows docker files (#3454)\n\n  
20806,     Fix typo in Scripting Classes BasicParsing Tests ps1 (#3459)\n\n  
20807,     Expand md lint tests (#3451)\n\n  
20808,     Add test to verify approved aliases list (#3380)\n\n  
20809,     Use Product Semantic version in the MSI installer where possible (#3435)\n\n  
20810,     Add tab completion for Select-Object -ExcludeProperty -ExpandProperty (#3443)\n\n  
20811,     Autoload TestRemoting psm1 (#3430)\n\n  
20812,     Add  cache-control:no-cache  and  last-modifed  to headers to prevent GitHub CDN from caching Travis nightly badge (#3449)\n\n  
20813,     Sorted spelling dictionary for easy of management (#3446)\n\n  
20814,     Get-help may return multiple instances of the same help file (#3410)\n\n* Help was incorrectly returning multiple instances of the same help file if it existed under a culture path and the parent was in the search path as well\r\n\r\n* updated test to use generated help file rather than an actual one\r\n\r\n* Fixed test to have module in $pshome path and casing of en-US culture\r\n  
20815,     Update SSHRemoting README md (#3444)\n\n  
20816,     Reuse ProgressRecord in Web Cmdlets (#3411)\n\n  
20817,     Fix for job dropping runspace close error (#3445)\n\n  
20818,     Rename OSX package name to include operating system information (#3440)\n\n  
20819,     Add markdown lint test (#3420)\n\n* Fix markdown syntax and spelling issues\r\n* update spelling dictionary  
20820,     rename AppImage to include version (#3433)\n\n  
20821,     Update installing docs as we have moved to  NET Core SDK 1 0 1 (#3432)\n\n  
20822,     Update SSHRemoting README md (#3421)\n\n  
20823,     Add autoload for test modules (#3342)\n\nRelated #3238\r\n\r\n1  Add autoload for test modules\r\n2  Move TestHostCS psm1 to  test\\tools\\Modules\\  folder\r\n3  Remove explicit load TestHostCS psm1 from test files  
20824,     Add documentation about hosting PowerShell Core (#3409)\n\n* Add documentation about hosting PowerShell Core\r\n\r\n* fix spelling error\r\n\r\n* Address review comments\r\n\r\n* Update  spelling again\r\n\r\n* Address new comments\r\n  
20825,     Include info in installation docs on Microsoft Package Repository (#3396)\n\n  
20826,     Remove the old S M A csproj that was revived when resolving conflict (#3408)\n\n  
20827,     Add Linux repository instructions\n\nBased on Windows PowerShell Blog:\n\n   msdn microsoft com/powershell/2017/02/01/installing-latest-powershell-core-6-0-release-on-linux-just-got-easier/\n\nUse apt-get over apt due to man page pointing out apt as a tool for\ninteractive use  but apt-get as the proper tool to be used in scripted\ninstallations (in order to retain backward compatibility in the event\nthat apt is modified) \n  
20828,     Migrate from project json to MSBuild (#3398)\n\n- FullCLR build is disabled in this change \r\n- FullCLR build related functionalities in `build psm1` and `AppVeyor psm1` are disabled  They are not cleaned up from `build psm1` and `AppVeyor psm1` yet  We need to adopt  NET Core 2 0 to verify the portable module concept  and if that works well  we will remove the Windows PowerShell source code and clean up our scripts \r\n- `dnxcore50` and `portable-net5+win8` target framework monikers are removed \r\n- Dependency on `Microsoft NETCore Portable Compatibility` is removed  It s not necessary  but it may come back when we work on supporting the `portable module`  Its necessity can be reviewed at that time \r\n- I didn t spend the time to try building powershell in Visual Studio 2017  We should have a separate issue for that  It s tracked by #3400\r\n\r\nThe `TypeCatalogParser` project is replaced by a MSBuild target to gather the dependency information \r\nDue to  NET Core SDK issue [#1021 (   com/dotnet/sdk/issues/1021)  our meta-package project `Microsoft PowerShell SDK` starts to generate an empty assembly during the build and that results in an empty assembly `Microsoft PowerShell SDK dll` appear in `publish` folder and in ` deps json` file  We cannot simply remove the assembly because it s now part of the TPA  and removing it will cause powershell to crash at startup  We have to live with this empty assembly until that  NET Core SDK issue is fixed   It s tracked by #3401   
20829,     Get-Help does not work in JEA sessions (#2988)\n\n  
20830,     Add wrappers around native API calls to catch exceptions \n\nExceptions might be thrown if the referenced DLL is not present\nor if the native function is not found \n  
20831,     Add build support for OpenSUSE 42 1 (#3389)\n\n\r\n  
20832,     Remove Archive tests\n  
20833,     Restore Microsoft PowerShell Archive module from www powershellgallery com\n  
20834,     Remove Microsoft PowerShell Archive source code\n  
20835,     Fixed typos and improved text (#3394)\n\n  
20836,     Fix Markdown lint issues (#3357)\n\n* Fix Markdown lint issues\r\n\r\nMake header styles consistent\r\n\r\nMake header names unique (make anchors usable)\r\n\r\n* Fix spelling of sign up\r\n\r\n* Add words used in readme to spelling dictionary \r\n  
20837,     Update SSH Remoting demo text (#3386)\n\n\r\n  
20838,     Changed usage of registry to psdrive instead of type which causes failure on Linux (#3377)\n\n  
20839,     Implement Format-Hex in C# (#3320)\n\n  
20840,     tab expansion not working correctly for some parameters (#3364)\n\nThere was off by one error causing an `IndexOutOfRangeException` during parameter name completion \r\n  
20841,     correctly presenting progressbar when buffer scrolls and clearing at end (#3362)\n\n  
20842,     Update Get-ComputerInfo test to properly test DeviceGuard items  (#3339)\n\n* Make Get-ComputerInfo tests handle the case of the root\\Microsoft\\Windows\\DeviceGuard namespace not found on the test machine \r\n\r\nCatch CIM exceptions  but don t look specifically for namespace-not-found\r\n\r\n* Update Get-ComputerInfo test to properly test DeviceGuard items \r\n  
20843,     Improve a progress pane performance (one thread) (#2822)\n\nShowing a progress bar is handled on the pipeline thread only  But not every  WriteProgress  will trigger the  _progPane Show  to be called  Instead  a timer is used to set an  update  flag that will be checked in  HandleIncomingProgressRecord  to see whether  _progPane Show  should be called  The timer fires every 200 ms  I test intervals from 50 ms to 2000 ms and I didn\ t measure much difference with 100 ms and 200 ms  so 200 ms is chosen to make it more cost-efficient \r\n  
20844,     Search the assembly cache kept by ExecutionContext for type resolution  (#3327)\n\nOur assembly cache contains assemblies that are explicitly loaded by powershell egine  such as via module loading or the assembly entries from InitialSessionState  We should search it before searching all loaded assemblies to give preference to resolve a type against the assemblies contained in the cache  so that in case there is a conflict  we might have a preferred assembly to use for a type resolution \r\n\r\nChanges:\r\n- Search from context AssemblyCache Values before search from all loaded assemblies \r\n- Skip assemblies that we already searched and found no matching type \r\n- Skip checking PS types kept in the scope and type accelerators when it s not necessary   
20845,     Update all W3 links in the resource files to use HTTPS instead of HTTP (#3331)\n\n  
20846,     Remove opensuse 13 2 because it is not supported by dotnet or opensuse (#3351)\n\n  
20847,     put innerexception message as error detail rather than user getting generic error message (#3330)\n\n  
20848,     make transcripts include the configuration name in the transcript header (#2890)\n\n* PowerShell transcripts should include the configuration name in the transcript header\r\n* adding test case for PowerShell transcripts should include the configuration name in the transcript header #2890  
20849,     corrected use of PSModulePath casing to be consistent with Windows PowerShell (#3255)\n\n* corrected use of PSModulePath casing to be consistent with Windows PowerShell\r\naddresses #3227\r\n\r\n* addressing review feedback\r\nmake  PSModulePath  into const\r\nfixed some test workarounds due to failures for external reasons that wasn\ t meant to be checked in\r\n\r\n* addressing review feedback\r\nmake  PSModulePath  into const\r\nfixed some test workarounds due to failures for external reasons that wasn\ t meant to be checked in\r\n  
20850,     fix default folders for opencover  output xml  and powershell exe path (#3308)\n\n  
20851,     Add support for crossgen on OpenSUSE 13 2 (#3326)\n\n  
20852,     Add support to ShellExecute in powershell core when it s running on Windows full SKUs (#3281)\n\n* Add ShellExecute support to PowerShell core on windows full desktop\r\n* Add tests for Start-Process and update existing related tests  
20853,     Add dummy GET parameter to nightly Travis CI badge (#3297)\n\n  
20854,     Fix typo in the instruction to install for OpenSUSE 13 2 (#3305)\n\n  
20855,     Adding -Extension and -LeafBase switches to Split-Path (#2721)\n\n* Refactoring ParsePathCommand cs (SplitPathCommand) for readability\r\n   - Using auto properties when no when there is no logic in getter/setter\r\n   - Removing unused code\r\n   - Removing redundant qualifiers\r\n   - Removing Redundant initializers\r\n* Add -Extension and -Leafbase switches to Split-Path cmdlet\r\n   - Extension and LeafBase are specializations of Leaf  and uses System IO Path GetExtension and System IO Path GetFilenameWithoutExtension to extract parts from the Leaf\r\n* Adding tests for Split-Path -LeafBase and Split-Path -Extension\r\n  
20856,     Add openSUSE support in download sh (#3306)\n\n  
20857,     Fix a test when the information object returns a FQDN (#3296)\n\n  
20858,     Fix drifting of progress bar on Unix (#3289)\n\nThe progress bar was incorrectly setting the original x position which causes the progress to slowly move to the right in certain cases  
20859,     Add OpenSUSE 13 2 release Dockerfile (#3303)\n\n  
20860,     Update docs for alpha 17 release (#3298)\n\n  
20861,     Fix Invoke-Command remote debugging test failure in nightly build (#3294)\n\n  
20862,     Fix New-LocalUser cmdlet to roll back user in case of user attributes assignment failure \n\nResolving #3242\n\nAt this point  user account is created even if user attributes assignment\n(like setting password) fails  The cmdlet throws a\nnon-terminating error but ends up creating the user  This behavior is\nconfusing  As per the changes  the localuser account will be rolled back\nin case of failure in user attributes assignment \n  
20863,     Fix a test to use the targeted powershell rather than the system installed one (#3286)\n\n  
20864,     Updated tags of automounted drives tests (#3290)\n\nTwo updates with this PR:\r\n- reclassified automounted drives tests to be \ Feature\  instead of \ CI\  because this is more accurate;\r\n- fixed failures in tests setup caused by  subst exe  native utility having problems running as child process of powershell process tree run under  runas exe /trustlevel:0x20000  (in Start-UnelevatedProcess in build psm1)   
20865,     Corect xUnit heading and other MD linting warnings (#3272)\n\n  
20866,     Fix $LinuxInfo to be a Hashtable instead of an array of Hashtable s  (#3276)\n\nGet-Content /etc/os-release returns an array of strings  which get feeded to ConvertFrom-StringData  Therefore  $LinuxInfo is actually an array of Hashtable instances before this change  Property access on $LinuxInfo like $LinuxInfo ID happens to work because powershell supports accessing a property or calling a method on a collection of object  but it s inefficient \r\nAfter this fix  $LinuxInfo will be a Hashtable  and it s efficient to access its members   
20867,     update build psm1 to support packaging for opensuse 13 2 (#3274)\n\n  
20868,     Fix a CMS test that fails in nightly build \nAdd a certificate that cannot be used to encrypt data to verify an error condition \n  
20869,     Rename  generated  files (#3275)\n\n1  GetEvent_Types_Ps1Xml generated cs -> GetEvent_Types_Ps1Xml cs\r\n2  TypesV3_Ps1Xml generated cs -> TypesV3_Ps1Xml cs  
20870,     Do not reject Windows  reserved device names on non-Windows platforms  (#3252)\n\n\r\n  
20871,     Add OpenSUSE 13 2 build support (#3254)\n\n  
20872,     Update README md to add the section of Community Dashboard (#3256)\n\n  
20873,     Fixed typos that caused test to fail  (#3268)\n\n  
20874,     Auto-mounted file system drives correctly created when mounted inside a module (#3034)\n\nFixes #2442  
20875,     Update psrp client nuget for linux/mac\n\nAdds ntml over spnego for authentication between windows and centos7 3\nand ubuntu 16 04 \nFixes a number of problems that stopped connection to\nexchange/office365 \n  
20876,     Adding Parent extended property to System Diagnostics Process (#2850)\n\n  
20877,     Add additional tests for Clear-Content to improve coverage (#3157)\n\nCoverage has improved to more than 85% for Clear-Content  
20878,     Add PassThru support to Start-PSPester (#3205)\n\n  
20879,     adds parameter sets to web cmdlets to allow for standard and non-stan… (#3142)\n\n* adds parameter sets to web cmdlets to allow for standard and non-standard method verbs\r\n\r\n* add CoreCLI implementation\r\n\r\n* Adds CM alias and notnullempty for CustomMethod parameter\r\n\r\n* Add tests for Invoke-[WebRequest|RestMethod  CustomMethod parameter\r\n\r\n* Fix webcmdlet tests - incorrect parameter name\r\n  
20880,     Update VSCode install/debug instructions  (#3262)\n\n  
20881,     Allow profile directory creation failures for Service Account scenarios (#3244)\n\nXDG profile directory creation can fail for accounts that do not have home directories \r\n\r\nThe module analysis was trying to persist it s cache in an XDG profile directory \r\nThe cache is less critical than it once was  so it s reasonable to not cache if there is no good place to do so \r\n\r\nFixes #3011\r\n  
20882,     Update Copyright notice to remove year (#3204)\n\n  
20883,     Update issue-management md (#3253)\n\n  
20884,     Do not download from external sources (#3211)\n\nThis commit removes the external dependencies of the AppImage generation script by instead\r\ndownloading them from a known (and owned by Microsoft) location:\r\npsgithub file core windows net   
20885,     Add Arch Linux installation information (#3215)\n\n  
20886,     Remove System Array type data (#3231)\n\n* Rename Types_Ps1Xml generated cs\r\n* Remove <auto-generated> header from Types_Ps1Xml cs\r\n* Remove System Array type data\r\n* Update `Get-TypeData` tests  
20887,     Port CmsMessage cmdlets and Get-PfxCertificate to powershell core (#3224)\n\n  
20888,     Fix Test-Modulemanifest to normalize paths correctly before validating (#3097)\n\nChanged hard coded Windows directory separator and resolved path so the slashes are correct \r\nThrow if resolving file path returns more than one result\r\n\r\nFixes #2610  
20889,     Implementation for Invoke-Command step-in remote debugging (#3015)\n\nThese changes provide the ability to debug remote running scripts started with the Invoke-Command cmdlet  The design is event based and provides new public events that allow subscribers to be notified when an Invoke-Command remote session is ready for debugging  Since Invoke-Command allows running scripts on multiple targets at once (fan-out) the notification event is raised for each remote session as it becomes ready for debugging  The subscriber to these events will be a script debugger implementation (such as PowerShell console  ISE  or VSCode) and will handle all debugging details such as simultaneously debugging multiple remote sessions at once in separate windows \r\n\r\nBut these changes also include an internal implementation which is used by default if host debuggers don\ t want to handle the debugging details  This internal implementation is what PowerShell console  ISE uses so they can have this new behavior without having to modify their debugger implementations  The internal implementation serializes each remote session of Invoke-Command so that they can be debugged one at a time  The remote session debugger is  pushed  onto the internal debugger stack so that debugging transitions to the remote session  Existing debugging commands work so that the  quit  debugging command will stop the current remote session script from running and allow the next remote session to be debugged  Similarly the  continue  debugging command allows the script to continue running outside step mode and again go to the next remote session for debugging  The  stepout  debugging command steps out of all Invoke-Command remote sessions and lets the script continue to run for each remote session in parallel as they are normally run \r\n\r\nThe purpose of Invoke-Command step-in remote debugging is allow seamless debugging of a local script that calls Invoke-Command on remote targets  But there is also a new Invoke-Command  -RemoteDebug  parameter that lets you Invoke-Command on the command line and have it drop directly into the debugger \r\n\r\nAn example from the PowerShell command line looks like this:\r\n```\r\nPS C:\\> C:\\TestICM ps1\r\nEntering debug mode  Use h or ? for help \r\n\r\nHit Command breakpoint on \ Invoke-Command\ \r\n\r\nAt C:\\TestICM ps1:2 char:1\r\n+ Invoke-Command -cn $computerName paulhig-3 -File c:\\LinuxScript ps1\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[DBG : PS C:\\>> list\r\n\r\n    1:  $computerName =  localhost \r\n    2:* Invoke-Command -cn $computerName paulhig-3 -File c:\\LinuxScript ps1\r\n    3:   Test Complete! \r\n\r\n[DBG : PS C:\\>> stepin\r\nAt line:1 char:1\r\n+ Write-Output  Running script on Linux! \r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[paulhig-3 :[DBG : [Process:14072 : [Runspace5 : PS C:\\Users\\paulhi\\Documents>\r\n```\r\n\r\nNotice that the debugger  stepin  command transitioned from local script debugging to debugging the remote session on computer  paulhig-3   as can be seen by the change in the debugger prompt \r\n\r\nYou can also do this from the command line to drop directly into the debugger\r\n```\r\nInvoke-Command -cn localhost -Script  $scriptblock -RemoteDebug\r\n```\r\n\r\nThese changes also remove an old behavior that was incompatible with this new step-in feature  Previously if a remote session running script hit a break point it would stop in the debugger and go to the  disconnected session  state  This was to allow the user to reconnect using Enter-PSSession and then interactively debug the remote session script  This behavior has been removed and now the user needs to attach a debugger using the newer Debug-Runspace cmdlet   
20890,     Updated docker release images to pull powershell package from Microsoft Repo (#3219)\n\n  
20891,     Fix for race bug in WSMan command plugin instance close operation (#3203)\n\n  
20892,     Change NestedModule to NestedModules in error message (#3214)\n\n  
20893,     Fix powershell to not crash on converting recursive array to bool (#3208)\n\n\r\n  
20894,     Moving Import-PowerShellDatafile from script to cmdlet (#2750)\n\n  
20895,     return HTTP response for error status as part of exception (#3201)\n\n  
20896,     Update a comment in Credential cs to make it accurate (#3194)\n\n\r\n  
20897,     Add instructions for installation on Nano Server (Fixes #3151) (#3195)\n\n  
20898,     Prettier formatting for ConvertTo-Json output  #2736 (#2787)\n\n* Prettier formatting for ConvertTo-Json output  #2736\r\n\r\nThis change standardizes JSON output to example given  as well as\r\ncodemaid and online lint tools \r\n\r\nSample object used for testing:\r\n\r\n@ \r\nfoo = @ \r\nfirst =  a \r\nsecond =  bbbbbbbb \r\n \r\nbarbarbarbar = @ \r\nfirst =  a \r\nsecond =  bbbbbbbb \r\nNestedArray = @(\r\n Test3 \r\n Test4 \r\n Test5 \r\n3\r\n4\r\n)\r\nNestedObject = @ \r\nMoreObject =  AnotherObject \r\nTestBool = $true\r\n \r\n \r\narray = @(\r\n Thing1 \r\n Thing2 \r\n)\r\ndan = 15\r\n  | ConvertTo-Json\r\n\r\n* Updated CoreCLR implementation to use NewtonSoft Indented Formatting\r\n\r\nI did not change the FullCLR behavior  I was not sure if you meant to\r\nrevert my changes or to leave it as is in the current pull request \r\n\r\n* Added tests that validate pretty Json output \r\n\r\nNot sure if there is a better thought on how to implement these  The\r\nfirst two fail against current master  but succeed once this PR is\r\napplied  Third test is successful prior and post this PR \r\n\r\n* Moved tests and removed extraneous file \r\n\r\nMoved pretty/compressed json tests from standalone file into the\r\nexisting ConvertTo-Json test file \r\n\r\n* Updated tests for cross-platform support\r\n  
20899,     Update the PR template to remove links (#3193)\n\n\r\n  
20900,     add a timeout to test-connection (#2492)\n\n  
20901,     Define roles and their responsibilities in a PR (#3168)\n\n  
20902,     Work around the hang issue that happens when running class basic parsing tests (#3191)\n\n  
20903,     Implement -version parameter in console host (address part of https:/… (#3115)\n\n* Implement -version parameter in console host (address part of    com/PowerShell/PowerShell/issues/1084)\r\n\r\nThis does not support providing a specific version to run  but\r\nlike most other *nix commands  -version will now return the version\r\nof the PowerShell Engine   powershell  is prepended to the output to\r\nmatch other *nix commands  We are using gitcommitid which includes more\r\ninfo about the build   
20904,     Fix casting single element array to generic collection (#3170)\n\n  
20905,     Provide additional tests for the *-Job cmdlets (#3110)\n\n  
20906,     Merge pull request #2082 from andschwa/appimage\n\nGenerate AppImage  
20907,     Fixed broken link in create-powershell-scripts md (#3171)\n\n* Changed broken link to a working blog post\r\n\r\n run-ps  isn\ t a linkable document  so I changed the  Running PowerShell Scripts Is as Easy as 1-2-3  to link to an external article on Windows IT Pro with the same name   
20908,     Add ShouldProcess to New-FileCatalog and Test-FileCatalog (#3074)\n\n* Add ShouldProcess to New-FileCatalog and Test-FileCatalog\r\n\r\nClose #3068\r\n\r\nAdd support `-WhatIf` and `-Confirm` to `New-FileCatalog` and add a\r\ntest \r\n`Test-FileCatalog` has a common code base with `New-FileCatalog` so it\r\nautomatically get the same  I believe that adding a separate test in\r\nthis case doesn t make sense \r\n\r\n* Fiz after code review\r\n\r\nRemove  _ShouldProcess\r\nAdd var in test\r\n  
20909,     Get-ComputerInfo - fix typo in property name (#3167)\n\n  
20910,     Add Third Party Notices for AppImage\n\nThis license specifically covers the additional libraries that\nare bundled inside the AppImage archive \n  
20911,     Add AppImage to CI\n  
20912,     Add AppImage documentation\n  
20913,     Add AppImage tooling\n\n* Use icon from local repository\n     com/PowerShell/PowerShell/pull/2027#discussion_r75960616\n\n* Use the deb that has been generated in this build\n\n* Copyright and license\n     com/PowerShell/PowerShell/pull/2027#discussion_r75960505\n\n* MIT License for appimage sh\n     com/PowerShell/PowerShell/pull/2027#discussion_r75960505\n\n* Full text of the MIT License is in license_thirdparty_proprietary txt\n\n* Clarify license and clean up unused code\n     com/PowerShell/PowerShell/pull/2027#discussion_r76104601\n\n* Mark appimage sh as executable\n  
20914,     Fix PSModuleInfo CaptureLocals to not do ValidateAttribute check when capturing variables from the caller s scope (#3149)\n\nFix PSModuleInfo CaptureLocals to not do ValidateAttribute check when capturing variables from the caller s scope\r\n  
20915,     Fix for duplicate types in TypeTable (#3141)\n\nWhen a TypeTable is created it includes the types from type files provided along with references to the type files  When the InitialSessionState (ISS) object processes these types it reads the type files again and ends up with duplicate type entries  PowerShell V5 1 ISS type processing was re-written to improve performance and no longer removes duplicate types  so that this scenario (runspace ISS reuse) results in errors causing a regression \r\n\r\nThe fix is to copy only type data when a TypeTable is passed to the ISS   
20916,     doc updates for release alpha 16 (#3160)\n\n* doc changes for alpha 16 release\r\n\r\n* update spelling ignore file for new release\r\n  
20917,     Fix GetType() bad pattern and related issues in tests (#3134)\n\n* Fix GetType() bad pattern and related issues in tests\r\n\r\n$var GetType() can raise an exception in tests so we should check $var\r\nbefore make the call  A large part of the tests does not make this\r\ncheck \r\nI start with searching   GetType()  but discovered many related issues\r\nin tests (reduntant and unneeded tests   throw  bad pattens  bugs \r\nformattings (sorry!) and so on) - I had to fix them too \r\n\r\n* Fix after code review\r\n* Second wave of migration GetType() -> BeOfType\r\nRemoved \ GetType() Name\  patterns \r\n  
20918,     Remove async tests for parser (#3119)\n\n* Remove async tests for parser\r\nthis is a fix for    com/PowerShell/PowerShell/issues/3069\r\nThis removes an attempt to work-around the issue of tests hanging on Travis-CI \r\n* remove unneeded finally block\r\n  
20919,     Improve console cmdlets tests (#3101)\n\n* Improve console cmdlets tests\r\nMain improvements refer to tests of the Write-Host cmdlet \r\nOriginal tests:\r\n1  Slow because run external processes\r\n2  Don\ t test colors and -NoNewLine in fact \r\n\r\n1  The original tests is preserved (deleted one as redundant) but marked\r\nby \ Slow\  tag  They is preserved because they actually check the output\r\non the work  not a test console \r\n2  Add negative color tests  (Code cover grow!)\r\n3  Add tests based on TestHostCS  This test host has been refined so we\r\ncan see colors and a new line in output \r\n4  Add minor fixes for test modules loads \r\n\r\nAlso I add support for Information stream  I originally planned to use\r\nit but not actually used  However  I have left this as a useful addition\r\nfor future tests \r\nI wonder that a Write-Host console output is duplicated in Information\r\nStream - Is it by design? I left a debug print on this matter in the\r\ntest code \r\n\r\n* Fix after code review\r\n* Corrections after code review\r\nSuppress import-module warnings\r\nRename Describes\r\nAdd  -Object  test\r\nAdd Stream Information tests with TestHostCS\r\n* Add checks for Streams Information and add comments\r\n  
20920,     Implement RoleDefinitions RoleCapabilityFiles keyword (#3067)\n\n* Changes to implement remote endpoint RoleDefinition RoleCapabilityFiles keyword\r\n* Fixed spelling error   Added back missing resource string\r\n* Updated tests from CR comments\r\n* Simplified error tests per Code Review\r\n* Test change from Code Review  
20921,     Fix error position reporting on classes (#3103)\n\nInteractive hosts expect an `IncompleteParseException` to signal that more input is expected \r\n\r\nWhen detecting errors  the parser can report 2 positions:\r\n* where the error should be reported\r\n* where the error was detected\r\n\r\nTypically these are the same  so most error reporting methods have a single parameter \r\nFor missing braces  the pattern is supposed to be to report the error after the opening brace  but the error is typically detected at the end of the file \r\n\r\nThere were a few places where we were not consistent in reporting such errors  this PR corrects those places   
20922,     Fix tab completion of native parameters (#2919)\n\nNative argument completers were not invoked when the argument was a single dash \r\n\r\nThe fix is to treat unbound command parameters as command arguments for the purposes of parameter/argument completion   
20923,     Fix reference to sshd service restarting (#3138)\n\nAddresses    com/PowerShell/PowerShell/issues/3116  
20924,     Small typo in archive cmdlets tests (#3121)\n\n* Small typo in archive cmdlets tests\r\n* Add  -ErrorAction SilentlyContinue\r\n  
20925,     Don t allow_failures on osx (#3123)\n\n  
20926,     Use ruby 2 3 1 for fpm on OSX (#3120)\n\n  
20927,     Make small optimization in parser tests (#3072)\n\n* Make small optimization in parser tests\r\n\r\n* Add Clear() for common command\r\nRemove commands from AfterEach\r\n\r\n* Refactoring test  functions are resolved before cmdlets \r\n  
20928,     Fix #3080 (#3107)\n\nPass null rather than  localhost  to CimSession Create  
20929,     Fix lock contention during script compilation (#3064)\n\nIn rare cases  it was possible to cause high contention on a lock used\r\nwhile compiling code to run in the interpreter \r\n\r\nThis fixes the problem in a couple different ways:\r\n\r\n* Use ConditionalWeakTable which has finer granularity in locking\r\n* Avoid dictionary lookups in the most common cases\r\n  - There really aren t too many real cases  I could have covered them\r\n    all  but keeping the code generic is useful for the future \r\n\r\nNot quite related  but I noticed we didn t cache certain interpreter\r\ninstructions and it made sense to add a cache because we generate a lot\r\nof array-init instructions   
20930,     Provide class level coverage data via OpenCover module (#3088)\n\n  
20931,     Convert Get-FileHash to a cmdlet (#3024)\n\n  
20932,     Update KNOWNISSUES md (#3085)\n\nAdded some issue #s for open issues   Removed some rows from the table that have been fixed   
20933,     Enabling crossgen for the assemblies used by Add-Type  which are Microsoft CodeAnalysis CSharp dll  Microsoft CodeAnalysis dll  Microsoft CodeAnalysis VisualBasic dll  and Microsoft CSharp dll  This speeds up executing Add-Type from ~3 to 0 9 seconds  (#3086)\n\n  
20934,     Mark Write-Information test as pending on macOS\n  
20935,     Fix patching logic for  dotnet openssl dylib\n\nFixes #3062\n  
20936,     Adding  $pshome/cultureName/default help txt  to PowerShell Windows Core project   (#3032)\n\n* Adding PowerShellHelpFiles package which contains default help txt to powershell-win-core\r\n\r\n* Adding test case to validate that <pshome>/<culture>/default help txt is present  This is done by calling  Get-Help \r\n\r\n* Updating get-help to skip searching for the help file when the InternalTestHooks BypassOnlineHelpRetrieval is enable  This way  we force get-help to generate a metadata driven help object  which includes a helpUri that points to the fwlink defined in the cmdlet code \r\n\r\n* Updating get-help -online <cmdletName> tests to not delete the help files  Instead  I ve added logic to get-help to not find the help file when the test hook BypassOnlineHelpRetrieval is enable \r\n  
20937,     Add  osx 10 12-x64  runtime to project json files\n  
20938,     Fix GetComputerInfo test for looking up registry (#3065)\n\n* Fix GetComputerInfo test for looking up registry\r\n\r\n* Addressed code review comments\r\n  
20939,     Fix get-help online test (#3051)\n\nFix the  get-help -online  test using a workaround so that when a default browser is not set  the test does not fail   
20940,     Create a badge for the daily test runs in travis-ci (#3076)\n\n* changes which enable setting a badge for the daily test runs in travis\r\n\r\nIt updates an azure blob with an SVG and that location is referenced by the\r\nREADME md file  TravisCI doesn t support this directly so in order to report\r\non the status of a daily test run there  we need to do this \r\nProvide error reporting in case the badge can t be set\r\n\r\n* change new-object calls to use constructor\r\n\r\nRemove extraneous date setting\r\nupdate string creation to use stringbuilder rather than string addition\r\n  
20941,     Make OpenCover merge and upload more reliable/usable (#3078)\n\n* Corrected the opencover option to merge the output file\r\n\r\n- Delete temporary zip file \r\n- Remove CodeCov uploading through cygwin \r\n- Add code to use Invoke-WebRequest to upload to CodeCov\r\n\r\n* Codecov settings\r\n\r\n- Wait for 1 build to start analysis \r\n- Do not wait for CI \r\n- Disable comments in PR \r\n\r\n* Addressed code review comments\r\n  
20942,     Fixing  InFile parameter of Invoke-WebRequest doesn t work  and adding aliases (iwr for invoke-webrequest and irm for invoke-restmethod) to the web cmdlets  (#2848)\n\n* Fixing Invoke-WebRequest InFile parameter\r\n\r\n* Adding aliases for Invoke-RestMethod and Invoke-WebRequest\r\n\r\n* Adding test cases for Web cmdlets -InFile parameter\r\n\r\n* Adding tests for Invoke-WebRequest (iwr) and Invoke-RestMethod (irm) using the cmdlet aliases \r\n\r\n* Remove the extra leading space\r\n  
20943,     Adding Microsoft PowerShell Commands Diagnostics to the list of packages published to our MyGet feed (#3050)\n\n  
20944,     Added functionality to improve failure triaging (#3037)\n\n* Added functionality to improve failure triaging\r\n\r\n- Nunit logs will be created to tests \r\n- Logs are copied to the Azure share \r\n- Pester is run with -Quiet\r\n- Elevated and unelevated runs for tests with appropriate tags\r\n\r\n* Copy logs to Azure share and upload to CodeCov\r\n\r\n- Zip and copy to Azure log share\r\n- Upload to codecov using cygwin\r\n\r\n* Fixed varaible name in if condition\r\n\r\n* Addressed code review comments\r\n\r\n* Modified the destination folder structure for logs\r\n\r\n- Creates a folder structure for yyyy-MM and Windows for storing logs\r\n- Updated zip file name to not have illegal characters\r\n\r\n* Modifications as suggested by codecov io\r\n  
20945,     Added alias (Path) to the FilePath parameter of the Out-File cmdlet  (#2945)\n\n* Added parameter alias to the Out-File cmdlet  allowing -FilePath to be used as -Path \r\n\r\nRelevant issue:    com/PowerShell/PowerShell/issues/2923\r\n\r\n* Test to confirm the alias I added to the Out-File cmdlet s -FilePath parameter works \r\n\r\n* Changed test for parameter alias as per feedback \r\n\r\n* Updating based on feedback \r\n\r\nMade formatting changes:\r\nAdded space between brackets and start of cmdlet \r\nMoved end bracket to before the pipe and Should Not Throw statement \r\nRemoved -InputObject parameter for the test  as it was not needed \r\n\r\n* Added BeforeAll to the first part of the file  Replaced tabs with spaces \r\n\r\n#2945\r\n\r\n* Fixing indentation within the test file\r\n  
20946,     cache packages in appveyor (#3019)\n\n  
20947,     Fix link to macos pkg file in Readme (#3053)\n\n  
20948,     Cache padding strings up to 120 spaces (#3036)\n\n  
20949,     change  2k  years in build script (#3043)\n\n  
20950,     Merge rel-v6 0 0-alpha 15\n\n  
20951,     Update spelling exception for alpha 15\n  
20952,     Get-Help test reported as skipped if not applicable to the platform (#3009)\n\nAddressed #2887  
20953,     Add WindowsUBR to Get-ComputerInfo (#2995)\n\n  
20954,     Fixed a typo in the code coverage yaml file (#3033)\n\n  
20955,     Update CONTRIBUTING md: avoid rewrite (#3022)\n\nAvoid rewriting history in PR iterations   
20956,     Fix typo in Unblock-File test (#3025)\n\n  
20957,     Address code review issues\n  
20958,     Fix undefined variable in build psm1\n\n`$rpm_dist` used to be unconditionally defined \nbut the changes to support Fedora made it defined only on\nRedHat family platforms  so the variable was undefined on Ubuntu\nbut the flag still added to fpm s arguments  causing a build error \nNow we only add the flag and its argument when it s relevant \n  
20959,     Initial Support for Fedora 24 (#2738)\n\n* Initial support for Fedora 24\r\nThis commit adds initial support for the Fedora distribution \r\nstarting with Fedora 24 \r\n\r\nWhereever possible  build tooling for CentOS has been reused \r\n\r\nUntil the next release of PowerShell is compiled against  NET 1 1 \r\nthe Docker release image uses the CentOS 7 build  but loads\r\nin the CentOS 7 version of `libicu50` via LD_LIBRARY_PATH \r\n\r\n* Update Dockerfile\r\n\r\nFix typos\r\n  
20960,     Add codecov yml to fix the file paths (#3013)\n\nCodeCov io needs a yml file to be able to correct link the file paths to\r\nthe coverage numbers   
20961,     Update changelog for alpha 15\n  
20962,     Update links and docs for alpha 15\n  
20963,     Add Unblock-File tests\n  
20964,     upload pester-tests xml log file as an artifact (#3003)\n\n  
20965,     use global nuget package cache (#2987)\n\n  
20966,     Use (n) for offline file length formatting (#2986)\n\n  
20967,     Use correct win32 console mode w/ external commands (#2991)\n\nAt startup  we need to save the current console mode before potentially\r\nenabling VT100 support \r\n\r\nThen  when running an external command  we should use that initial\r\nconsole mode instead of whatever mode we changed it to \r\n\r\nAn application can t rely on the shell enabling VT100 because enabling\r\nby default can cause problems for some applications  therefore\r\nWindows applications must enable VT100 themselves   
20968,     Fix error handling in parsing  using  statement (#3007)\n\n  
20969,     Remove trailing whitespace (#3001)\n\n  
20970,     Rename Wait-CompleteExecution to Wait-UntilTrue\n  
20971,     Fix Wait-CompleteExecution usage\n  
20972,     Remove -Force from Import-Module in tests\n  
20973,     Another attempt to make native timer test less flaky\n  
20974,     Added Area-DSC\n  
20975,     Add dependent symlinks in package for libmi so\n  
20976,     Jameswtruher/travisdailybuild (#2958)\n\n* Stifle progress output in build psm1 for some operations\r\n\r\nModify test failure presentation to use platform available XML methods\r\n\r\n* Add timeout support for returning runtime parsing errors\r\n\r\nSome of the language/parser tests have been hanging in a non-reproducable manner which\r\ncauses the CI system to invalidate the entire run  This change adds support for timeout\r\nwhich will fail a test if it runs to long  rather than invalidate the entire run \r\n\r\ncurrent behavior is still supported  and is not done in a new session:\r\nPS> get-runtimeerror -src \ 1/\ \r\nAt line:1 char:3\r\n+ 1/\r\n+   ~\r\nYou must provide a value expression following the \ /\  operator \r\n    + CategoryInfo          : ParserError: (:) [   ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : ExpectedValueExpression\r\n\r\nAdding a timeout will do the operation in a async powershell session\r\nPS> get-runtimeerror -src \ 1/\  -timeout 5\r\nYou must provide a value expression following the \ /\  operator \r\n    + CategoryInfo          : ParserError: (:) [   ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : ExpectedValueExpression\r\n\r\nIf the operation takes longer than the supplied timeout  a timeout error will be returned\r\nPS> get-runtimeerror -src \ start-sleep 6\  -timeout 2\r\nget-runtimeerror : Operation Timed Out (\ start-sleep 6\ )\r\nAt line:1 char:1\r\n+ get-runtimeerror -src \ start-sleep 6\  -timeout 2\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Write-Error   WriteErrorException\r\n    + FullyQualifiedErrorId : Microsoft PowerShell Commands WriteErrorException Get-RuntimeError\r\n\r\n* Modify native linux command tests to skip on Windows and pending on Mac\r\n\r\n* remove verbose and progress output from help tests\r\n\r\n* Be sure that Feature Counter tests only run on Windows\r\n\r\nAlso  only call add-type in CounterTestHelperFunctions ps1 if we\ re going to actually run the tests\r\n\r\n* do not run any get-computerinfo tests on non-windows systems\r\n\r\n* suppress progress output from PowerShell Get tests\r\n\r\n* remove -quiet from API and CRON Builds\r\n\r\nTravis watches output from the build to ensure that it hasn\ t hung\r\nwe need to find a balance between too much output and not enough output \r\nA run which has too much output is killed because it looks like an error loop\r\nA run which has too little output is killed because it looks like a hang\r\n\r\n* Remove commented line in Import-Counter Tests ps1\r\n\r\nRemove extraneous extra line in PowerShellGet Tests ps1\r\n\r\n* Change `-as  type ` to `-as [type ` in build psm1\r\n\r\nAlter timeout to 10 seconds to be improve chances of not timing out for runtime parser checks\r\nimprove logic for counter tests to also skip for IoT\r\n\r\n* use the existing function of SkipCounterTests rather than duplicate the logic in import-counter tests ps1\r\n  
20977,     Revert  Initial Support for Fedora 24  (#2970)\n\n  
20978,     Initial Support for Fedora 24 (#2738)\n\n* Initial support for Fedora 24\r\nThis commit adds initial support for the Fedora distribution \r\nstarting with Fedora 24 \r\n\r\nWhereever possible  build tooling for CentOS has been reused \r\n\r\nUntil the next release of PowerShell is compiled against  NET 1 1 \r\nthe Docker release image uses the CentOS 7 build  but loads\r\nin the CentOS 7 version of `libicu50` via LD_LIBRARY_PATH \r\n\r\n* Update Dockerfile\r\n\r\nFix typos\r\n  
20979,     fixed some expected exception tests according to the template    com/PowerShell/PowerShell/blob/611f7f9b77f7bb336bc4c4069135eac8520bb77a/docs/testing-guidelines/WritingPesterTests md#L54\n  
20980,     Fix test where Export-Alias * fails when only single file exists (#2953)\n\n* Fix test where Export-Alias * fails when only single file exists\r\n\r\nThe test expects multiple files to be present at the location  We\r\nexplicitly create multiple files now under $TestDrive and use that the\r\nlocation for Export-Alias\r\nAlso  so test structure changes \r\n\r\n* Address code review comments\r\n  
20981,     Updating SHA values in Dockerfiles for Alpha 14 (#2961)\n\nPreviously contained Alpha 12 values - Need to find some way of\r\nautomating this      com/PowerShell/PowerShell/issues/2960  
20982,     Adding PlatformNotSupportedException to Counter cmdlets when running on IoT  (#2952)\n\n* Adding PlatformNotSupportedException to *-Counter cmdlets for IoT as pdh dll is not available \r\n* Adding tests to validate PlatformNotSupportedException for the Counter cmdlets on IoT \r\n  
20983,     Code coverage automation script (#2918)\n\nThis script downloads the latest nightly build package and executes the\r\ntests on it  It also downloads all necessary tools and then uploads the\r\nresults to Coveralls io  The badge for coverage is posted on README md  
20984,     Fix typo and formating in class basic parser tests\n  
20985,     All test reported as skipped if not applicable to the platform (#2892)\n\n* All test reported as skipped if not applicable to the platform\r\n\r\nFixed files:\r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\Clear-EventLog Tests ps1:1:if\r\n($IsWindows -and !$IsCoreCLR)  \r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\Get-ComputerInfo Tests ps1:1325:\r\nreturn\r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\Get-EventLog Tests ps1:1:if\r\n($IsWindows -and !$IsCoreCLR)  \r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\New-EventLog Tests ps1:1:if\r\n($IsWindows -and !$IsCoreCLR)  \r\npowershell\\Modules\\Microsoft PowerShell Management\\Registry Tests ps1:7:\r\nif ($IsWindows -eq $false)  \r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\Registry Tests ps1:167:\r\nif ($IsWindows -eq $false)  \r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\Remove-EventLog Tests ps1:1:if\r\n($IsWindows -and !$IsCoreCLR)  \r\n\r\npowershell\\Modules\\Microsoft PowerShell Management\\TimeZone Tests ps1:17:if\r\n($IsWindows)  \r\n\r\npowershell\\Modules\\Microsoft PowerShell Security\\FileCatalog Tests ps1:6:if\r\n($IsWindows)  \r\n\r\npowershell\\engine\\Help\\HelpSystem Tests ps1:112: if ($IsWindows)\r\n\r\n* Fix test after code review\r\n\r\n* Move skiping to common  try \r\n  
20986,     Add parameter -Group to Get-Verb (#2789)\n\n  
20987,     Add release checklist and add  -PSModuleRestore  to  Start-PSBuild  in a few docs (#2946)\n\n  
20988,     Display PM and WS in MB instead of KB (#2927)\n\nModify output of Get-Process to display PM and WS in MB instead of KB \r\n\r\nAlso change precision of CPU time to 2   
20989,     fix typo in comment (#2938)\n\n  
20990,     build: Update build sh to run fully manual build (#2832)\n\n* build: Update build sh to run fully manual build\r\n* add ubuntu-16 10-x64 to the list of architectures to build for w  
20991,     Fix here string \ `$a=@` `n\ ` \ `n` @\  (#2913)\n\nThe tokenizer did multiple scans the script line to get tokens  Before\r\nthe fix the tokenizer on the first pass examined that string as\r\ndouble-quoted (Expandable) string not as here string  figured the\r\naverage double quotation mark as a closing and then starting with the\r\nsingle quotation mark continued processing the line as single-quoted\r\nstring which had no closing single quotation mark \r\nThe fix is to stop the first scan pass after getting \ =\  (assume\r\nassignment-expression \ $a=\  for next pass)   
20992,     Add support for escape char ESC via `e   (#2920)\n\nThis change is a breaking change but falls into compat bucket #3 - unlikely grey area   
20993,     Fix type completion w/ type aliases (accelerators) (#2533)\n\nType completion would behave strangely when there were multiple aliases for a given type (currently only possible with type accelerators) \r\n\r\nThe fix is to only select the accelerator that matches what the user typed \r\n\r\nCloses #2295  
20994,     Update README md with Code coverage badge\n\nAdd the code coverage badge to the nightly build table  The code coverage data is collected on an Azure instance and pushed to Coveralls io  
20995,     [Build  Update the logic to remove PSGetModuleInfo xml from PowerShellGet module on Non-Windows platforms  (#2897)\n\n  
20996,     Merge pull request #2893 from PowerShell/v6 0 0-alpha 14\n\nV6 0 0 alpha 14 doc changes  
20997,     Correct links for alpha 13->14\n  
20998,     Update download sh for v6 0 0-alpha 14\n  
20999,     Change package name to CodeCoverage zip from Powershell_6 0 0    (#2886)\n\nChanged the package name from the standard Powershell_6 0 0-xx-gxxxxxxx to\r\nCodeCoverage zip so that it is easier to download the latest package from\r\nthe AppVeyor permalink for last successful build   
21000,     Invoke-RestMethod cmdlet error if the response is neither JSON nor XML (#2862)\n\n* This change fixes the Invoke-RestMethod cmdlet behavior if the input is neither xml nor json \r\n* test description\r\n* fixed the failed tests\r\n* removed some duplication\r\n* refactoring: eliminated some double castings\r\n* added JsonObject unit tests; enhanced JSON deserialization exception message\r\n* refactored JsonObject Tests ps1\r\n* entitled test cases\r\n* formatting\r\n  
21001,     Update CHANGELOG md for v6 0 0-alpha 14\n  
21002,     Update alpha 13 to alpha 14\n  
21003,     Adding windows server names to the windows packages + Misc formatting fixes (#2757)\n\n* Adding windows server names to the windows packages + Misc formatting fix\r\n\r\nMisc fixes are:\r\n- Added Get-PackageSemanticVersion function\r\n- Added New-ZipPackage function to separate the Zip packaging code\r\n- Removed ending  ;  in hashtable syntax since entries are on new lines\r\n- Standardized the variable name from $Source to $PackageSourcePath for\r\nvarious packaging functions\r\n- Removed  return  in the function end to output the variable value\r\n- Added -verbose to Write-Verbose to show the paths of various packages\r\n\r\n* update\r\n\r\n* Adding windows server names to the windows packages + Misc formatting fix\r\n\r\nMisc fixes are:\r\n- Added Get-PackageSemanticVersion function\r\n- Added New-ZipPackage function to separate the Zip packaging code\r\n- Removed ending  ;  in hashtable syntax since entries are on new lines\r\n- Standardized the variable name from $Source to $PackageSourcePath for\r\nvarious packaging functions\r\n- Removed  return  in the function end to output the variable value\r\n- Added -verbose to Write-Verbose to show the paths of various packages\r\n\r\n* update\r\n\r\n* Addressing review feedback\r\n\r\n* Removed the $PackageVersion variable per review feedback\r\n\r\n* Error message fix\r\n  
21004,     Adding Pester tests for *-Counter cmdlets\n  
21005,     Implement performance-counter cmdlets for Windows CoreCLR\n\nCode changes per PR code review - 3\n  
21006,     Fixed PowerShell extension broken link (#2874)\n\n  
21007,     Create Start-PSRelease helper function (#2753)\n\n  
21008,     Fix try/catch to choose the more specific exception handler (#2429)\n\n* Refactor  FindMatchingHandler  to get rid of recursion\r\nSearch state can be saved and used throughout the searching process without the recursion \r\n\r\n* Rank the exception types based on how specific they are\r\n\r\n* Refactor code to find handler based on the rank of given handlers  
21009,     Fix powershell class to use the current EngineSessionState for execution  (#2837)\n\nWhen a PS class is defined in a module and the module gets reloaded  the class would still use the SessionState from the old module for execution  and thus it doesn t reflect changes to the module state during the reload  This fix is to make sure we always use the current EngineSessionState for PS class execution \r\n  
21010,     Fix Unicode in license_thirdparty_proprietary txt (#2857)\n\nThis file contained many occurrences of U+F0A7  a character from the\r\ndesignated Private Use Area  so its meaning is not defined and fonts\r\ncan assign any symbol to that character  Since the person who originally\r\nwrote this file works at Microsoft  it seems reasonable to assume that\r\nhe was using the Wingdings font  which has a bullet character at U+F0A7 \r\nThus  replacing these characters with the proper Unicode bullet (U+2022)\r\nseems the right way to fix this   
21011,     Adding ValidateNotNullOrEmpty attribute to parameters listed in #2672 (#2685)\n\n  
21012,     Fix OpenCover console exe parameter ordering issue  (#2854)\n\n* Fix OpenCover console exe parameter ordering issue \r\n\r\nThe targetargs parameter needs to be at the end  otherwise everything\r\nafter that is considered as part of targetargs \r\n\r\n* Addressed code review comments\r\n\r\n* Removed unnecessary file\r\n  
21013,     Rebase onto  NET Core 1 1 (#2737)\n\n* Rebase onto  NET Core 1 1\r\n\r\nModify `Build psm1` and `project json` files to use  NET Core 1 1 \r\n\r\n NET Core 1 1 ships with an older dotnet/cli than has currently been used \r\nso we revert to use case-sensitive directory names for dependencies \r\n\r\n NET Core 1 1 is a pre-requisite for supporting Fedora 24 \r\n\r\n* PSReadLine: Bump major version of PSReadline to 6 0 0-*\r\n\r\n* Microsoft PowerShell Commands Utility: Bump major version of Microsoft CodeAnalysis Csharp\r\n\r\n* Microsoft PowerShell SDK: Revert attempt to import netcoreapp1 1 instead of dnxcore\r\n\r\n* build psm1: Restore ability to specify version of dotnet-install sh\r\n  
21014,     Rewrite New-TemporaryFile in C# (#2786)\n\nLiteral translation of New-TemporaryFile function to a C# cmdlet \r\nother than moving logic from Begin to End   
21015,     Jameswtruher/travisdaily2 (#2842)\n\n* Assign $ProgressPreference =  SilentlyContinue  to reduce output size\r\n\r\nTravis is still complaining that the log file is too big  eliminating progress is\r\nanother step to reducing output  It\ s also not needed for our CI environment \r\n\r\n* Removed white space at end of lines\r\n\r\n* fix misplacement of progress preference setting\r\n\r\nalso fix up trailing whitespace\r\n  
21016,     Add basic test to make sure  New-PSSession  doesn t crash powershell\n  
21017,     Depend on the NuGet package  libpsrpclient  to enable client-side PSRP on Linux and OSX\n  
21018,     Updated Split-Path to work with UNC Roots (#2788)\n\n  
21019,     Marked flaky test as pending to unblock daily builds (#2838)\n\n  
21020,     Implicitly convert value assigned to XML property to string (#2678)\n\nUsing LanguagePrimitives ConvertTo (to emulate what would happen if the property were a regular  Net property typed as string)  we now convert the value assigned to an XML property to string   
21021,     Disable help content test for Microsoft Powershell Archive module (#2835)\n\nThe published help content filename is missing   psm1   but the help still\r\nworks  The bug is in PlatyPS and needs to be fixed to re-enable this test   
21022,     SSH remoting cmdlet parameter set changes based on RFC 0010 (#2710)\n\n* RFC 0010 SSH remoting cmdlet updates \r\n\r\n* Tweaks to SSH remoting cmdlets\r\n\r\n* SSHTransport parameter is now optional instead of mandatory   Aded fix for CoreCLR entry point when hosted in SSH as a subsystem \r\n\r\n* Added tests\r\n\r\n* Code review feedback\r\n\r\n* Code review comment changes\r\n\r\n* Making SSHTransport switch parameter mandatory because otherwise existing Invoke-Command parameter set\r\n\r\n* The new SSH parameter set was causing legacy positional based parameters to no longer work  This fix separates the SSH parameter sets from the existing WinRM parameter sets \r\n\r\n* Fixed region name spelling error \r\n  
21023,     Remove one more extra Expression Block call (#2833)\n\n  
21024,     Wrapping a call to Registry so that Invoke-WebRequest does not fail on non-text responses (#2811)\n\n* Wrapping a call to Registry with a check for Platform IsWindows\r\n  
21025,     Add ErrorAction Stop so DeviceGuard function (#2825)\n\nA non-terminating error is thrown when the namespace does not exist by\r\nGet-CimInstance  The namespace is not present on OS versions below Windows\r\n10  It is not caught in the try-catch unless ErrorAction Stop is added   
21026,     Remove unneeded blocks\n  
21027,     Remove CheckForSevereException and private FailFast\n\nOur private implementation of FailFast was likely introduced\nwhen each individual application needed it s own code to\nget Watson reports  The CLR takes care of this for us now \nso we don t need our implementation \n\nOur method CheckForSevereException was also introduced in\nthe early days of the CLR - the exceptions it was checking\nfor aren t actually raised the CLR anymore  they just FailFast \nI removed them as there is a tiny bit of overhead (in code size)\nand also in the generated code  e g  dynamic sites called the method \n  
21028,     Added check for empty $nugetArtifacts (#2817)\n\nWhen the build fails there are no $nugetArtifacts  so AddRange fails  
21029,     Moving New-Guid to compiled cmdlet (#2752)\n\n  
21030,     modify Start-PSPester to accept -Quiet to eliminate Pester output (#2795)\n\n* modify Start-PSPester to accept -Quiet to eliminate Pester output\r\n\r\nalso modify travis ps1 to include -Quiet for Pester args to reduce\r\nstdout log size which should hopefully allow daily builds to run\r\nwithout being cancelled due to too much output\r\n\r\n* Add error detail information as part of Test-PSPesterResults\r\n\r\nTest-PSPesterResults will now also emit information about the errors\r\nfound during a test run rather than just the number of failed tests \r\nCreated a new errorlog function so the output of errors will be red \r\n  
21031,      Update issue-management md (#2823)\n\n* Added description for 2  committee  tags\r\n* Fixing slashes direction  
21032,     Temporarily disable Update-Help and Save-Help tests in CI builds\nAlso fix a flaky Start-Sleep test\n  
21033,     Revert the timer change introduced in #2640 because it causes race conditions\n  
21034,     Added -publish to codecoverage package generation and fixed package name (#2797)\n\n* Added -publish to codecoverage package generation and fixed package name\r\n\r\nAdded -Publish to Start-PSBuild used by CodeCoverage configuration so that\r\n netcore dependencies are also included in the package  This makes the\r\npackage usable on systems that do not have  netcore in path \r\n\r\nFixed the name of the coverage package by making it consistent with other\r\npackage names \r\n\r\n* Created a function to generate packagename\r\n  
21035,     Use -split operator to avoid error from new overload (#2796)\n\n  
21036,     Fixed typo (#2782)\n\nYou might want to correct this in the notes associated with the release as well (I don t seem to be able to edit that)   
21037,     Added -erroraction silentlycontinue for import-module (#2778)\n\nIf the module is not available it throws an error  To make sure OpenCover\r\nworks on PSv4 and below  -erroraction silentlycontinue was added   
21038,     Assigned all ArrayList Add() to $null (#2776)\n\n* Assigned all ArrayList Add() to $null\r\nArrayList Add() returns the array list size after the add  This causes the\r\nvalue to be thrown on the pipeline  Assigning them to $null as we do not\r\nneed to know the size after addition  This causes errors and unnecessary\r\noutput on the AppVeyor console \r\n* Changed the way nuget artifacts are added to arraylist\r\n* Remove unnecessary `$null =` for `AddRange` call because it s a void method \r\n  
21039,     Add back -Configuration  Release  to make sure AppVeyor CIs produce  Release  bits (#2773)\n\n  
21040,     Moved publishing of code coverage artifacts to test_script phase (#2760)\n\n* Moved publishing of code coverage artifacts to after_test phase\r\n\r\nThe webhook for build completion is called after the after_test phase\r\nhence we needed to publish code coverage artifacts before that  Moved the\r\nlogic for compression and publish the artifacts after running tests \r\n\r\n* Added check for daily build\r\n\r\n* Address code review comments \r\n\r\n* Addressed code review comments\r\n\r\nAddressed comments about definition of artifacts \r\nDefined new function for after_test phase \r\n  
21041,     updated error messages to tell user what to do (#2766)\n\n  
21042,     Fix Verbs<> class strings  #2716 (#2762)\n\n* Fix Verbs\r\n* Replace `-runspace` with `-Session`\r\n  
21043,     Remove obsolete entries in FAQ md (#2755)\n\n  
21044,     Update docs with release alpha 13 (#2765)\n\n* Update docs with release alpha 13\r\n* Additional doc updates\r\n* Update the  Get PowerShell  table\r\n  
21045,     - Fixed failing PackageManagement related tests in daily-builds (#2759)\n\n- Updated Restore-PSModule function to delete the PSGetModuleInfo xml so that this file will not be included in the PowerShell release \r\n- Since PackageManagement module gets installed with PowerShellGet module  removed PackageManagement module name in Restore-PSModule command invocation   
21046,     Fixing powershell exe lib paths and more thoroughly cleaning the powershell-native directory (#2758)\n\n  
21047,     Fix the indicator for redirecting standard input (#2749)\n\n  
21048,     Fix broken travis ps1 logic (#2739)\n\n  
21049,     Add x86 CrossGen support (#2726)\n\n  
21050,     Make Start-PSBootstrap on macOS better\n\nNo errors if brew dependencies already present\n  
21051,     Make Restore-PSModule -Name parameter a [string[  \n  
21052,     Removed PowerShellGet source and replaced with ones from myget\n  
21053,     add psmodulerestore in travis ps1\n  
21054,     # This is a combination of 3 commits \n# The first commit s message is:\n\nChanged to PSModuleRestore switch  i e   by default no PSModule install\n\n# This is the commit message #2:\n\ninstall PowerShell modules to publish folder as well as one level up\n\n# This is the commit message #3:\n\nremoved workaround\n  
21055,     remove packagemanagement test code\n  
21056,     remove PackageManagement source code\n  
21057,     Add PackageManagement acceptance test cases\n  
21058,     update project json\n  
21059,     Use alpha 11 instead of alpha 12 to allow using OneGet to install modules from myget\n  
21060,     Update build psm1 to pull PackageManagement assemblies\n  
21061,     Replace travis sh by travis ps1\n\nFix problem with running Start-PSPester from the wrong directory\n  
21062,     Remove redundent $buildConfiguration in appveyor psm1\n  
21063,     Add x86 support to the remoting install script\n  
21064,     Add x86 support to the MSI installer\n  
21065,     Add runtime win7-x86\n  
21066,     Make the MSI installers support Win 7 and above\n  
21067,     Add support to build x86 packages for PowerShell Core\n  
21068,     Merge remote-tracking branch  upstream/master \n  
21069,     updates to opencover module to make it more user friendly and works on coreclr (#2702)\n\n* added type to returned objects\r\nreplaced expand-ziparchive with call to Archive module\r\nadded defaults to location of opencover xml  opencover installation  powershell exe  and location of tests\r\nupdated error messages with corrective action\r\nreplaced System Net WebClient call (not available on coreclr) with invoke-webrequest\r\nscoped change of executionpolicy to process when starting pester to avoid error if system policy is less restrictive\r\nupdated version of module\r\n\r\n* addressing code review feedback\r\n- check for git before using\r\n- check for opencover console in path\r\n- fixed path to code coverage build of PS\r\n\r\n* added Expand-ZipArchive back to support psv4 scenario\r\n  
21070,     Guard against ReflectionTypeLoadException in InitializeTypeCache (#2549)\n\n  
21071,     Now Enum values definition have space-insensitive syntax (#2690)\n\nFix to support whitespace after the `=` and before the value expression \r\n  
21072,     Add support W3C Extended Log File Format in Import-Csv (#2482)\n\n* Add support W3C Extended Log File Format\r\n\r\n1  Add support W3C Extended Log File Format\r\n2  Refactoring Import-Csv tests\r\n\r\n3  Add #Type tests\r\n\r\n* Fx test after review\r\n\r\n* Fix tests after review\r\n\r\n* Remove unneeded test\r\n  
21073,     Jameswtruher/dailytravis (#2696)\n\n* Add daily build code for travis\r\n\r\nA cron job needs to be created to start the build  and the variable\r\nTRAVIS_DAILY_BUILD must be set to true\r\n\r\n* Change environment variable to the one suggested by the travis-ci documentation\r\n\r\nTRAVIS_EVENT_TYPE ==  cron \r\n  
21074,     Added tests to close code coverage in CIM area (#2528)\n\n* Added tests to close code coverage in CIM area\r\n\r\nAdded CimAdapter Tests for adaptation layer (code cribbed from BVT tests)\r\nAdded SessionOption Tests ps1 (Code cribbed from BVT tests)\r\nModified CimClass tests by adding more tests\r\nAdded CimSession Tests for basic tests of New-CimSession cmdlet\r\nAdded CimInstance Tests for basic tests of Get-CimInstance\r\n\r\n* Add CI tags to tests\r\n\r\n* unify test execution to use try/catch for marking tests as skipped\r\n\r\nmoved test which retrieves cimclass via method to feature as it is not\r\na common operation  this test can take some time as well  
21075,     Fix code errors found by PVS-Studio (#2695)\n\n* Fix errors found by PSV-studio analyzer\r\n\r\n   viva64 com/en/b/0447/\r\n\r\n* Remove old redundent comment\r\n\r\nerrorAsts is passed by ref\r\n  
21076,     added Expand-ZipArchive back to support psv4 scenario\n  
21077,     addressing code review feedback\n- check for git before using\n- check for opencover console in path\n- fixed path to code coverage build of PS\n  
21078,     Re-enable Add-Type coreclr tests (#2705)\n\n  
21079,     added type to returned objects\nreplaced expand-ziparchive with call to Archive module\nadded defaults to location of opencover xml  opencover installation  powershell exe  and location of tests\nupdated error messages with corrective action\nreplaced System Net WebClient call (not available on coreclr) with invoke-webrequest\nscoped change of executionpolicy to process when starting pester to avoid error if system policy is less restrictive\nupdated version of module\n  
21080,     Fixes deprecated syscall issue on macOS 10 12 (#2633) (#2675)\n\nsyscall() has been deprecated and is not available on macOS 10 12   
21081,     Add HelpUri for Get-Uptime (#2688)\n\n* Add HelpUri for Get-Uptime\r\n\r\n* Update online help test data to include Get-Uptime\r\n  
21082,     Correct samples in testing-guidelines (#2691)\n\nReplace  Start-PSPester -Directory  with  Start-PSPester -Path   
21083,     Write-Information accept objects from the pipeline (#2680)\n\n* Write-Information accept objects from the pipeline\r\n\r\n* Add test\r\n\r\n* Fix test\r\n\r\nRemove unneeded runspace \r\n\r\n* Clear streams before each test case\r\n\r\nStreams of the PowerShell instance might have records from other test runs  Clear the streams before each test case \r\n  
21084,     Merge pull request #2450 from vors/native-pipe\n\nRefactor  NativeCommandProcessor  to provide streaming behavior for running native commands in a pipeline   
21085,     Remove over-optimization in NativeCommandProcessor DequeueProcessOutput\n  
21086,     Separate Done() and Dispose() in ProcessInputWriter NativeCommandProcessor cs\n  
21087,     Update issue-management md (#2673)\n\n* Update issue-management md\r\n\r\n* Update issue-management md\r\n\r\nfixed link to PR code review\r\n  
21088,     Trying to make  native command lifecycle  test unflaky\n\nAlso move it to the Feature category\n  
21089,     Fix recursive Done() problem in steppable pipeline finalization\n  
21090,     Fix bug in native pipe  where we loose End() output\n  
21091,     Resurect Xml serialization logic inside ProcessInputWriter\n  
21092,     Prettify NativeCommmandProcessor cs\n\n- Move ProcessOutputHandler outside of NativeCommmandProcessor\n- Remove redundent ConsumeAvailableNativeProcessOutput() blocking call\n  
21093,     Re-shuffle minishell tests\n  
21094,     Add native pipelines entry to changelog md\n  
21095,     Replace spin-lock by a proper BlockingCollection in NativeCommandProcessor\n  
21096,     Clean-up unnesesary fields from NativeCommandProcessor\n  
21097,     Add a code to handle finished process correctly on Unix\n  
21098,     Add a test for broken linux pipe in native pipeline\n  
21099,     Use StreamWriter Dispose() instead of Close()\n  
21100,     Fix flushing mechanics for input writer in native pipe\n  
21101,     Add motivation example for the native pipeline changes\n  
21102,     Make native pipeline consume available output in the process block\n  
21103,     Add error stream and information stream tests\n\nfor native pipes\n  
21104,     Improve pipeline for native commands\n\n- Start native process in Prepare() instead of Complete()\n  in NativeCommandProcessor \n- Remove unneeded input  output  error threads  Replaced by\n  simpler primitives \n  
21105,     Add a minishell clixml tests\n  
21106,     Ensure *nix platforms add an initial / rooted drive (#2679)\n\n  
21107,     Improve coverage for Write-Information output\n  
21108,     Delay initialize some properties in InformationRecord\n\nAn InformationRecord instance is created when calling Write-Host \nbut many of the properties aren t read \n\nIt can be expensive to initialize some of those properties  so\nthe code has been changed to initialize those properties on first access \n  
21109,     Fix LengthInBufferCells test for downlevel\n\nWhen running on systems that do not support a virtual terminal \nthe tests was incorrectly assuming escape sequences were removed \n\nThe fix is to expect different results depending on whether or not\nthe host supports virtual terminal mode \n  
21110,     Fix WebRequest failure to handle missing ContentType in response header (#2666)\n\nIf a response to invoke-webrequest does not set the content type in the\r\nresponse header  an object not set exception is thrown in\r\nWebResponseHelper CoreClr cs   Updated to set contenttype = null   
21111,     Fix PackageManagement issue in the latest Alpah12 on Linux (#2665)\n\n* Registry LocalMachine throws on non-windows platform \r\n\r\n* address cr feedback\r\n  
21112,     Fixed reference to 0-backlog in CONTRIBUTING md (#2681)\n\n\r\n\r\n\r\n  
21113,     Remove default value for version from Install-Dotnet  so it s controlled only in Start-PSBootstrap\n  
21114,     Temporarely pin dotnet obtain script url\n  
21115,     address cr feedback\n  
21116,     Merge remote-tracking branch  upstream/master \n  
21117,     Update CONTRIBUTING md\n\nfix link  
21118,     Update CONTRIBUTING md\n\nFixed reference to 0-backlog  
21119,     Refactoring Linux Nighly Dockerfiles to in-line Bootstrap ps1 code\n\nProvides simpler usability by making the dockerfiles self-contained \n  
21120,     Updating to Alpha 12 and correcting  reslease  typo\n  
21121,     Updating to use Alpha-11 URLs\\SHA\n\nUpdated URLs to point at Alpha 11 URLs  reduced number of intermediate\nstages  simplified logging code  and added a new %PSCORE% environment\nvariable to make it easier to launch from other shells\n  
21122,     Release versions of WindowsServerCore and Nano DockerFiles\n\nEmbedded POWERSHELL_* ARGs will need to be updated when new releases\nbecome available\n  
21123,     Update releasing doc to include steps to create Linux/macOS packages and NuGet packages (#2663)\n\n* Update releasing md with package creation steps for Linux and macOS\r\n\r\n* Add documentation for creating NuGet Packages\r\n\r\n* Minor fixes\r\n  
21124,     Make Out-Null fast (#2629)\n\nPeople use Out-Null despite much faster alternatives:\r\n\r\n    $null = Do-Stuff\r\n    [void  = Do-Stuff\r\n    Do-Stuff > $null\r\n\r\nThis change makes Out-Null work in roughly the same say as the above \r\n\r\nThe optimization is to detect that we re calling the built-in Out-Null\r\ncmdlet when invoking a pipeline from script (the change won t have any\r\neffect in the PowerShell api)  If we detect Out-Null  we rewrite the\r\npipe to look similar to `Do-Stuff > $null`   
21125,     Add OpenCover PS Module to collect code coverage (#2585)\n\n* Add OpenCover PS Module to collect code coverage\r\n\r\nOpenCover PS Module helps is collecting Code Coverage using the OpenCover\r\ntoolset  The module helps in comparing two code coverage runs as well \r\n\r\n* Change OpenCover psd1 to ASCII\r\n\r\n* Fix an error in path for OpenCover\r\n\r\nFixed an error on path for OpenCover  Also used ZipFile class instead of\r\ncmdlet as it might not be available on CI system \r\n\r\n* Convert module to be Powershell v4 compliant\r\n\r\nChanged implementation from classes to PSObjects and implemented\r\nExpand-ZipArchive \r\n\r\n* Added CodeCoverage as a configuration to project json files\r\n\r\nAdded CodeCoverage as the new configuration for all the project json\r\nfiles  When Start-PSBuild is executed with configuration as CodeCoverage \r\nwe change the degubType to  full  as required by OpenCover toolset \r\n\r\nAlso made changes to appveyor psm1 to build a CodeCoverage package on\r\ndaily builds and publish it as a zip \r\n\r\n* Addressed code review comments\r\n\r\nChanged from Add-Member to use pscustomobject type accelator  Removed\r\n[gc ::collect \r\n\r\n* Added explicit garbage collection\r\n\r\n* Addressed code review comments\r\n\r\n- Make sure that the build Start-PSPackage gets is not a code coverage\r\n  build\r\n- Add debugType = full for FullCLR\r\n- Remove configurations from PackageManagement files as it is not needed \r\n- Build CodeCoverage build first in AppVeyor \r\n\r\n* Resolve merge conflict\r\n\r\n* Fix indentation\r\n\r\n* Fix newline at end of file\r\n\r\n* Added command discovery for locating OpenCover console exe\r\n  
21126,     Registry LocalMachine throws on non-windows platform \n  
21127,     Add Get-Uptime to Microsoft PowerShell Utility (C# cmdlet) (#2517)\n\n* Add Get-Uptime (C# code)\r\n\r\n1  Add Get-Uptime cmdlet (C# code)\r\n2  Modify psd1 files\r\n3  Add tests\r\n\r\n* Remove Pretty parameter after Powershell committee conclusion\r\n\r\n1  Remove Pretty parameter\r\n2  Remove tests for Pretty\r\n3  Add Throw if  IsHighResolution is False\r\n4  Fix formatting\r\n\r\n* Add test to check throw\r\n\r\n1  Add hook that simulate  System Diagnostics Stopwatch IsHighResolution == false  to test Get-Uptime throw\r\n2  Add test to check throw\r\n\r\n* Fixes after review\r\n\r\n1  Remove Timespan parameter\r\n2  Remove unneeded tests\r\n3  Fix localization\r\n4  Add string consts\r\n5  Fix throw\r\n\r\n* Fix OutputType to add parameter set name information  
21128,     Fixing background jobs for Unix and Windows (#1972)\n\n  
21129,     Wire up proper ConsoleHostRawUserInterface LengthInBufferCells for Unix (#2637)\n\n* Wire up proper ConsoleHostRawUserInterface LengthInBufferCells for Unix\r\n\r\nRef    com/PowerShell/PowerShell/issues/2502\r\nThis allows for Unix console host to properly calculate display width for\r\nstrings containing escape sequences (e g  ANSI color)  rather than\r\nfalling back to naive string Length \r\n\r\n* Add basic tests for host LengthInBufferCells calculation\r\n  
21130,     Fix small typo (#2647)\n\nit s -> its  
21131,     Improve a progress pane performance (#2640)\n\n* Improve a progress pane performance\r\n\r\nAdd timer to update a progress pane every 100 ms  
21132,     Fixed broken link in README (#2643)\n\n  
21133,     removed Handles column from Process formatter (#2617)\n\naddressing #1812\r\n  
21134,     Adding tests for update/save-help  and fixing existing help tests for\nLinux \n  
21135,     Fixing update/save-help on Linux \n  
21136,     Update KNOWNISSUES md (#2624)\n\nRemoved select-xml from the unsupported table based on #2316 as it appear to be working on PSCore on windows  
21137,     Add  AssemblyVersion  to  GraphicalHost  and  LocalAccounts  projects\n  
21138,     Update project version to 6 0 0 to match our release version\n  
21139,     Fixing alpha 11 name change (#2628)\n\n  
21140,     Changes to get security zone when urlmon dll is not present (#2625)\n\n  
21141,     Added -Top/-Bottom params to Sort-Object for Top/Bottom N sort and many Pester tests (#2518)\n\n* Added -Top/-Bottom params to Sort-Object for Top/Bottom N sorts; added many Pester tests\r\n\r\n* updated changelog\r\n\r\n* updated CHANGELOG md\r\n\r\n* replaced Get-Service with Get-Alias in Pester tests\r\n\r\n* improved performance for -unique -top/-bottom  changed according to PR feedback\r\n\r\n* added newlines to end of two files\r\n\r\n* Removed whitespace changes\r\n\r\n* Missed 2 whitespace changes to undo in last commit\r\n\r\n* Updated to try to resolve merge issue\r\n\r\n* change heapify return type  cleaned up test code\r\n\r\n* unique top/bottom N sorts are now 2-3 times faster\r\n\r\n* code cleanup (removed unused vars  simplified logic)\r\n  
21142,     Use the unabbreviated parameter names in Start-PSBootstrap (#2623)\n\n  
21143,     Adding alpha 12 to the list of spelling exclusions (#2603)\n\n  
21144,     Adding support for ENABLE_BINDER_DEBUG_LOGGING in CORECLR \n\nFix to also print dynamic expressions\n  
21145,     Fix Start-PSBootstrap install_name_tool call on macOS (#2601)\n\n  
21146,     Enable WebRequestPSCmdlet to not validate HTTPS certificates (#2006)\n\n* Enable WebRequestPSCmdlet to not validate HTTPS certificates\r\n\r\nAdded switch parameter IgnoreCertificateCheck to WebRequestPSCmdlet to enable Invoke-WebRequest and Invoke-RestMethod to not validate the HTTPS certificate of the server if required \r\n\r\n* Changed IgnoreCertificateCheck parameter name to NoCertificateCheck\r\n\r\nChanged the switch parameter IgnoreCertificateCheck to NoCertificateCheck for WebRequestPSCmdlet to enable Invoke-WebRequest and Invoke-RestMethod \r\n\r\n* Changed NoCertificateCheck parameter name to SkipCertificateCheck\r\n\r\nChanged the switch parameter NoCertificateCheck to SkipCertificateCheck for WebRequestPSCmdlet to enable Invoke-WebRequest and Invoke-RestMethod \r\n\r\n* Added test for SkipCertificateCheck parameter\r\n\r\nValidation of SkipCertificateCheck parameter in Invoke-WebRequest and Invoke-RestMethod  First validating  that exception is thrown for HTTPS URI with expired certificate  Then validating  that no exception is thrown if SkipCertificateCheck parameter is used  HEAD method must be used for Invoke-RestMethod to not return any body  Invoke-RestMethod can t parse the HTML returned when using GET method \r\n\r\n* Updated test for SkipCertificateCheck parameter to use ExecuteWebCommand function\r\n  
21147,     Change log and 6 0 0-alpha 12 version number updates (#2593)\n\n  
21148,     Fix NullReferenceException in binder (#2591)\n\nThere was a NullReferenceException after turning on constrained language mode\r\nif creating a binding on a thread with no runspace \r\n\r\nThe fix is to assume if there is no runspace that we are not in constrained language\r\nmode  and also generate a binding restriction that assumes the same   
21149,     Fix crypto libs patching logic to accomodate multiply files (#2541)\n\nNative library also changed from System Security Cryptography Native dylib\r\nto System Security Cryptography Native OpenSsl dylib\r\n\r\nSee discussion in #2510  
21150,     Get-ChildItem -Recurse -ErrorAction Ignore doesn t ignore the errors (#2503)\n\nGet-ChildItem -Recurse -ErrorAction Ignore doesn t ignore the errors for some specific files under a folder and instead terminate the pipeline   
21151,     Update KNOWNISSUES md (#2586)\n\nUpdate Remoting and JEA/Linux based on current status  
21152,     Fix Resolve-Path -LiteralPath for drive paths (#2572)\n\nResolving #2570 \r\nIgnore drive paths in the check  If the input is a drive path \r\nthen  \\  is passed as the path to GetDriveQualifiedPath with drive info \r\nSince  the path here starts with  \\   treatAsRelative is set to false\r\nwhich prevents further formatting of this path \r\nThe check is only valid for PSDrives with root path equals to UNC paths or the paths\r\nin unix   
21153,     Update NativeCommandProcessor Tests ps1\n\nFix logic error in skipping  
21154,     Test that pipeline isn t blocked when running windows exes\n  
21155,     Don t block pipeline when running windows exes\n  
21156,     Fix for PowerShell SSH remoting with recent Win32-OpenSSH change  (#2538)\n\n* Fix for Win32-OpenSSH break when hosting PowerShell in server mode as an SSH subsystem \r\n\r\n* Refactored to use null PSHostUserInterface implementation\r\n\r\n* Implemented code review comments\r\n  
21157,     fixed test on Windows  also should have been pending due to another bug (#2580)\n\n  
21158,      Fix Select-Object to approve UX and fix return a property named * (#2421)\n\nThere are mainly 2 changes:\r\n1  When \ -ExcludeProperty\  is specified but \ -Property\  is not  use  *  as the default value for \ -Property\  \r\n2  Allow \ Select-Object -Property noexist-name\  to return a PSObject with property noexist-name  unless noexist-name itself contains wildcards   
21159,     add some info about spellchecker to CONTRIBUTING md\n  
21160,     move markdown-spellcheck installation to the install section\n  
21161,     add newline as requested\n  
21162,     Ignore spelling errors in src/Modules/Shared/Pester \nBecause it is an external lib \n  
21163,     automatic spellchecking  md files in TravisCI (#838)\n  
21164,     Pin dotnet-cli version to 1 0 0-preview3-003930 (#2573)\n\n  
21165,     Fix Get-Alias Name parameter allows Null value (#2545)\n\n1  Add [ValidateNotNullOrEmpty()  to Name parameter\r\n2  Add tests  
21166,     Fixing the Win10 sdk presence check (#2568)\n\n  
21167,     Fixes #2534 by replacing expensive WMI query with Win32 API calls (#2535)\n\n* Fixes #2534 by replacing expensive WMI query with Win32 API calls\r\n\r\n* fix break on unix build\r\n\r\n* added tests for #2535\r\n\r\n* although test passed  fixing exception that shows up\r\n\r\n* fixed Describe text\r\n\r\n* addressing code review feedback\r\n\r\n* addressing review feedback to comment on why sleep is needed\r\nadded check that test processes are created before we try to kill them\r\n\r\n* fixed test to timeout and pending fix for #2561\r\n  
21168,     Replace  git rev-parse  with path relative to  $PSScriptRoot  in powershell tests\n  
21169,     Further update the tests and product code to fix test failures\n  
21170,     Refactor implicit remoting tests to work in CI\n  
21171,     Move implicit remoting tests from source depot to GitHub\n  
21172,     Enable implicit remoting cmdlets in PowerShell Core\n  
21173,     Fix set-content failure for creating file in psdrive  (#2392)\n\nResolving #2206\r\n\r\nSet-Content fails to create a file for PSDrive path  if the path root\r\nbegins with defaultPathSeperatorString (ex: UNC path and paths in Single\r\nrooted filesystems like Unix)  
21174,     Add ValidateNullOrEmpty to -Name parameter of Get-Service (#2542)\n\n* Adding validation to Get-Service -Name parameter\r\n  
21175,     Add support <Suppress> in Get-WinEvent -FilterHashtable (#2506)\n\n* Add support <Suppress> in Get-WinEvent -FilterHashtable\r\n\r\n1  Add support <Suppress>\r\n2  Refacrtoring BuildStructuredQueryFromHashTable() to use StringBuilder\r\n3  Add tests\r\n\r\n* Changelog\r\n  
21176,     Wrap calls to choco install in Start-NativeExecution (#2547)\n\n  
21177,     Fixing the plugin install directory to refect the current version (#2539)\n\n  
21178,     Adding details for the Windows release instructions (#2536)\n\n  
21179,     Fix download links for msi (#2523)\n\n#2522  
21180,     Add  <Link>  tag to  <Compile>    <None>  and  <EmbeddedResource>  tags to make those items look similar as when the * csproj files were in the original project folders  (#2519)\n\n  
21181,     Update the  csproj files to point to the correct items (e g  * cs and * resx)\n  
21182,     Move * csproj files to PowerShell/src/vs-csproj and PowerShell/test/vs-csproj to avoid confusing the latest dotnet exe \nIf a * csproj file is in a project directory  the latest dotnet exe will use it  instead of the project json file  to build the project \n  
21183,     Adding Windows path to the VS Code Debugging setup document  (#2512)\n\n  
21184,     Adding Ported Get-ComputerInfo Tests\n  
21185,     Adding WindowsVersion to Get-ComputerInfo\n  
21186,     Remove the unnecessary use of lock in PseudoParameterBinder to avoid deadlock (#2501)\n\nThis is the fix to MSFT:9039127 [RFC  : SMA Jobs stop processing  show various status but never change or progress; due to deadlock in sandbox process \r\nThe fix is brought to GitHub to make sure GitHub powershell always has the latest changes \r\n  
21187,     Remove crossgen ed IL assemblies and then rename NI assemblies to the same as the corresponding IL images  (#2484)\n\n* Remove crossgen ed IL assemblies and then rename NI assemblies to the same as the corresponding IL images \r\nThis is to make sure:\r\n  1  The dependency existence check by powershell exe will pass for all TPAs \r\n  2  CoreCLR by default will load the NI images even though it s using names of the IL images \r\n\r\n* Update the comment to make it easy to understand\r\n  
21188,     Update docs/scripts to use the alpha 11 release packages (#2498)\n\n  
21189,     Update coding-guidelines to encourage adding code comments (#2489)\n\n  
21190,     Document Start-ResGen and Start-TypeGen (#2487)\n\n  
21191,     Merge pull request #2441 from andschwa/native-perror\n\nFix error handling of libpsl-native  
21192,     Refactor \ Get-WinEvent\  to use StringBuilder for XPath query construction (#2467)\n\n1  Move  string  to const\r\n2  Use StringBuilder everywhere\r\n  
21193,     Set libpsl-native configuration to release\n\nThis disables asserts \n  
21194,     Fix GetCurrentThreadId\n  
21195,     Fix SetDate\n\nAnd use a bunch of unsafe code because of concerns about stack size \n  
21196,     Remove Windows ERROR codes from pal h\n  
21197,     Clean up GetFileOwner\n  
21198,     Clean up IsExecutable\n  
21199,     Clean up IsDirectory\n  
21200,     Clean up IsHardLink\n  
21201,     Clean up GetUserFromPid\n  
21202,     Clean up GetComputerName\n  
21203,     Remove GetLStat\n  
21204,     Clean up CreateHardLink\n  
21205,     Clean up CreateSymLink\n  
21206,     Clean up GetComputerName\n  
21207,     Clean up FollowSymLink\n  
21208,     Clean up SetDate\n\nRemove pass-by-reference from C API\n  
21209,     Add native errno to ErrorCategory mapper\n  
21210,     Switch to Win32Exception(GetLastWin32Error)\n\nThis is verified to work  correctly  on Linux in that it gets the\n`perror` for the last set value of errno in native code \n\nNo extra mapping or handling needs to be done on our part \n\nKeeping the strerror_r implementation in the history for the valuable\nimplementation of config h in in the library \n  
21211,     Add configure to CMake to detect GNU strerror_r\n\n* Add getstrerror to libpsl-native\n* Add Unix GetLastPerror to CorePsPlatform\n  
21212,     Clean up libpsl-native headers\n  
21213,     Addressing static analysis issue (#2486)\n\n* Addressing static code analysis issue from TFS:8328091\r\n\r\n* Addressing code review feedback\r\n\r\n* Fixed build break\r\n\r\n* Addressing static analysis issue TFS:8328091\r\n  
21214,     Save file as UTF8 with BOM (Fixes #2476) (#2477)\n\n  
21215,     Make Pester skip the redirection test for  [Encoding ::Default  instead of ignoring it  so that we can keep track of this encoding issue\n  
21216,     Fix test failures due to changes in  NET Core and the exclusion of  Certificate  provider in UNIX PS\n  
21217,     Exclude  Registry  and  Certificate  providers from UNIX PS since they don t work on UNIX platform \nWith this change   Registry  and  Certificate  providers won t be compiled for UNIX PS \n  
21218,     Avoid calling static members from  Microsoft Win32 Registry  on UNIX  especially the code that would run in TypeInitializer \nThis is because with the latest  NET Core packages (1 1 0 preview)  calling static members from  Microsoft Win32 Registry  will raise  PlatformNotSupportedException  \n  
21219,     Update build psm1 to not remove IL assemblies after crossgen because the latest dotnet exe checks the existence of all TPA assemblies  including those built from the local projects\n  
21220,     Update powershell to depend on latest dotnet core packages (preview1-24530-04 from 9/30/2016)\n  
21221,     Addressing static code analysis issue (#2470)\n\n* Addressing static code analysis issue: Add CultureInfo to  Type InvokeMember  calls\r\n\r\n* Addressing code review feedback\r\n\r\n* Fixed build break\r\n  
21222,     Added feature level test coverage to Registry provider (#2417)\n\n  
21223,     Add badge for nightly builds (#2455)\n\nAdd the badge for nightly builds with a link to the build page   
21224,     Add Invoke-Item deterministic Windows tests (#2443)\n\n* Add Invoke-Item deterministic tests  
21225,     Skipping New-PSRoleCapabilityFile and Get-PSSessionCapability on help system test since there is no help content for these two cmdlets (#2464)\n\n  
21226,     Fixing get-help <cmdletName> -online for  NET Core on Desktop  (#2174)\n\nIn PS Core on windows  we try to locate the default web browser and use it for online help  If we cannot find the default web browser (in NanoServer/IoT)  we error out \r\n  
21227,     Commit copies of bootstrap ps1 for automated builds (#2458)\n\nWhile this is copied by `launch sh`  it needs to exist in\r\neach folder for the automated Docker hub builds   
21228,     Fix Docker repos (#2457)\n\n  
21229,     Merge pull request #2454 from andschwa/rename-containers\n\nRename  stable unstable  containers to  release nightly   
21230,     Rename  stable unstable  containers to  release nightly \n\nThis change is made at the request of the PowerShell committee \nas the use of  stable  implied more stability than available with alpha\nreleases  This also changes the images from existing under one repo to\ntwo: powershell/powershell and powershell/powershell-nightly \n\nThe documentation and script have been updated \n  
21231,     Fix host remote test InvokeOnRunspace to work with AppVeyor (#2362)\n\n* Fix host remote test InvokeOnRunspace to work with AppVeyor\r\n\r\n* Updated to use new local account for remoting tests \r\n\r\n* Set the LocalAccountTokenFilterPolicy as needed \r\n\r\n* Adding verbose messages for debugging \r\n\r\n* Storing creds using Export-CliXml\r\n\r\n* Added CITravis skip for Windows only remoting test\r\n\r\n* Moving tests back to  Feature  scope\r\n\r\n* Added AppVeyor environment variable check to prevent account creation on non-appveyor configurations\r\n\r\n* Removed It block in BeforeAll block\r\n\r\n* Moving tests back to  Feature \r\n  
21232,     Add query to track action plan in issues (#2439)\n\nfix ActionPlan list to be formatted correctly  
21233,     Fixing JSON property accessor to attempt user settings directory creation on the first write operation\n  
21234,     Fix Get-WinEvent -FilterHashtable to work with named event data field (#2373)\n\nFix Get-WinEvent -FilterHashtable to work with named event data field\r\n\r\nNow FilterHashtable parameter in Get-WinEvent for named data field:\r\n1  generates a valid query  ex  @ Logname= System ;Param= a  \r\n2  generates a valid query for multiple values  ex \r\n@ Logname= System ;Param= a   b  \r\n\r\nAlso removed double cast in the original code and added more tests to cover the fixed scenarios \r\n  
21235,     Added feature level test coverage to FileSystem provider (#2416)\n\n  
21236,     Add PowerShell-RFC link to README (#2431)\n\n\r\n\r\n* Update README md\r\n\r\n* Update README md\r\n\r\nsince we re being pedantic :)\r\n  
21237,     First draft of test roadmap plan (#2332)\n\nAdd test roadmap plan document\r\nUpdate document with clarifying language for code coverage\r\nAlso add an acceptance criteria for remoting tests\r\ninclude Jenkins with mention of MS Build Lab for possible test infrastructure\r\n  
21238,     Use  CurrentCulture  for error message and update test to clean up resources\n  
21239,     Added testcase for validating invalid filepath scenario  (#1749)\n  
21240,     Fix Start-Transcript input path validation issues  (#1749)\n  
21241,     Fix Start-Transcript input path validation (#1749)\n  
21242,     Added feature level test coverage to Alias provider (#2419)\n\n  
21243,     Fix VS Code debug output (#2425)\n\n  
21244,     Added feature level test coverage to PSDrive provider (#2418)\n\n  
21245,     Add  NET Core debug build instructions (#2410)\n\nThese are thanks to Eric St John from  NET Core   
21246,     Fix variable assignment to not overwrite readonly/constant variables (#2400)\n\n  
21247,     Fix bytewise operators to work on enum types with  System Byte  as the underlying type (#2411)\n\n  
21248,     Allow Start-PSBuild -Output to take absolute path (#2398)\n\nThere was no point to using Join-Path here \r\nbut it made it impossible to specify absolute paths\r\n(or any path outside of the PowerShell repo)   
21249,     Adding test coverage for Variable provider\n  
21250,     Start process test (#2397)\n\nMark test as pending to unblock daily builds\r\n  
21251,     Add RequireAdminOnWindows tag for install-package tests (#2390)\n\nAdd the tag RequireAdminOnWindows tags so that these tests do not fail on\r\ndaily builds   
21252,     Merge pull request #2280 from vors/admin-tests\n\nSeparate tests on Windows CI to Admin-Required and Non-Admin-Required  
21253,     Add PS_DAILY_BUILD variable check in Test-DailyBuild (#2386)\n\nThe PS_DAILY_BUILD variable is set in the Appveyor environment in the\r\nPowerShell [Daily  project  When this is set we want to have full daily\r\nbuild   
21254,     Add tests for queries against userdata (#2388)\n\nadd a custom evtx file for the userdata tests to use  
21255,     Add verbose comment about the execution policy test\n\n -Scope LocalMachine is Settable  but overridden \n  
21256,     Change fwlink to use http instead of https \n\nAn issue was filed for corefx team for httpclient getasync with https and\nredirects     com/dotnet/corefx/issues/12171\n  
21257,     Add archive with test content to AppVeyor artifacts for daily builds \n\nThe change adds Compress-TestContent cmdlet to build psm1 so that it can\ncompress the powershell test content  This is done only for daily builds \n  
21258,     Allow ExecutionPolicy tests to throw specific type of error\n\nSplit LocalMachine test case into two separate tests:\n- One without overriden policy (throws exception)\n- One with overriden policy\n  
21259,     Make ExecutionPolicy Tests ps1 admin-aware\n  
21260,     Make LocalGroup tests admin-aware\n  
21261,     Make Get-PesterTag allow only one scope tag (CI  Feature  Priority)\n  
21262,     Make Registry Tests ps1 admin-aware\n  
21263,     Fix appveyor test runner logic for Admin and non-Admin tests\n  
21264,     Fix bug about Admin tests defaults Start-PSPester in build psm1\n  
21265,     Timezone tests require Admin on Windows\n  
21266,     Replace Transcription by *> redirection\n\ndue to the issue    com/PowerShell/PowerShell/issues/2334\n  
21267,     Make Invoke-AppVeyorTest run elevated and non-elevated tests separately\n\n- Add RequireAdminOnWindows to the list of blessed tags\n- Fix a bug in Get-PesterTag where we accepted  Slow  as a proper priority\n- Fix missed comma in Start-PSPester parameters\n- Add documentation about new Pester tag\n- Fix finishing logic for Start-PSPester -Unelevate\n  
21268,     Add Start-PSPester -Unelevated\n\nThat will enable running tests without Admin in CI\n  
21269,     Restructure PowerShellGet Tests ps1 to enable  RequireAdminOnWindows  tagging\n  
21270,     Change install scope for Install-PackageProvider Tests ps1\n\nThis helps avoid problem when run as non-elevated user \n  
21271,     Add  RequireAdminOnWindows  tag to some tests suites\n  
21272,     Merge pull request #2363 from lzybkr/maxvars\n\nRemove most Maximum* capacity variables  
21273,     Add capacity test for initialsessionstate\n  
21274,     Merge pull request #2379 from JamesWTruher/jameswtruher/moveEngineCoreTest\n\nMove tests to more appropriate places now that we have the directory structure defined  
21275,     Remove SessionStateOverflowException\n\nThis exception is no longer used by PowerShell  so it has been removed \n\nIt is a public api  so removing it risks breaking somebody  Nobody has any reason\nto catch or throw this exception  so it seems safe to remove  but I decided to\nbe conservative and keep it for Windows PowerShell   It seems safe enough to remove\nin Nano \n  
21276,     Merge pull request #2378 from JamesWTruher/jameswtruher/addwineventtest\n\nAdd additional tests for Get-WinEvent cmdlet  
21277,     Updating the ModuleVersion to 1 1 0 0\n  
21278,     Merging the changes from Windows Source Depot \nChange details:\n- Add metadata to the PowerShellGet psd1\n- Fixed special chars in PSGet Resource psd1\n- Catalog signing verification changes from Windows Source Depot\n  
21279,     Move tests to more appropriate places now that we have the directory structure defined\n  
21280,     Add return in BeforeAll to avoid running get-winevent cmdlet on non-Windows platforms\n  
21281,     Add additional tests for get-winevent for the xpath  xml and hashtable filters\n\nStill left to do is handling the non-System queries (such as UserData)\n  
21282,     Add new tests for Get-WinEvent\n  
21283,     Merge pull request #2375 from mirichmo/mirichmo/validating-properties-reads\n\nValidating JSON Properties File Reads Prior to Processing  
21284,     Moving ExecutionPolicy tests to Microsoft PowerShell Security and refactoring test skipping for Windows \n  
21285,     Fixing PowerShellProperties json reads to do a basic validity check prior to processing the JSON\n  
21286,     Improve Start-PSPackage to support zip package  downlevel packages for win-plat  Fix the version issue and package name for creating msi and appx (#2361)\n\n* Improve Start-PSPackage to support zip package  downlevel packages for win-plat  Fix the version issue and package name for creating msi and appx\r\n\r\n* Address comments about New-PSOptions\r\n\r\n* Update Start-PSPackage to not show the warning from New-PSOptions\r\n  
21287,     Fixing how the LocalAcccounts tests are skipped in Pester\n  
21288,     Fix  Get-ChildItem -Hidden  to work on system hidden files like c:\\hiberfil sys c:\\pagefile sys and c:\\swapfile sys\n\n  
21289,     update testing guidelines\n\n* correct links in test-guidelines md (issue #1665)\r\n\r\nadded specific links for PesterDoAndDont and WritingPesterTests\r\nadded new section in WritingPesterTests md on bulk skipping tests\r\n\r\n* update test directories to include a directory for remoting tests\r\n\r\n* fix lines in document to use semantic line breaks\r\n\r\nalso remove trailing spaces after    \r\n  
21290,     Merge pull request #2336 from lzybkr/stdin_fixes\n\nFix some issues with `powershell -Command -`  
21291,     Fix CategoryInfo Activity so that it has the specified value\n\nCategoryInfo Activity of Write-Error does not honor the value for\n activity  but uses the hard-coded string  write-error   The change sets\nthe value if specified by Write-Error cmdlet or set  write-error  \n  
21292,     Fix Get-Credential to not prompt twice when no parameter is specified\n  
21293,     Remove most Maximum* capacity variables\n\nMaximumErrorCount is fixed at 256 (we may want to consider an environment variable to make this bigger)\n\nMaximumAliasCount  MaximumDriveCount  MaximumFunctionCount  and MaximumVariableCount have been removed \n  
21294,     Remove bundler v1 13 1\n\nThe new version of bundler is buggy and causing installation of fpm to\nfail  which causes builds to fail \n  
21295,     Add test coverage for Command discovery and requires (#2285)\n\n  
21296,     Fix indentation in the test\n  
21297,     Fix $? assignment to not crash powershell\n  
21298,     Fix hang when reading stdin from ruby\n\nThis is a workaround for a full clr issue that causes a hang when calling PowerShell from ruby \nThey use named pipes instead of anonymous pipes  and for some reason that triggers the hang \n  
21299,     Merge pull request #2348 from ChrisUbben/FixThrowTypo\n\nFixed all misspelling of throw in Archive tests  
21300,     Merge pull request #2307 from ChrisUbben/PortTestMultiMachineProvidersRegistry\n\nAdding test coverage for Registry provider  
21301,     Removed all misspelling of throw\n  
21302,     Ignore macOS failures on Travis CI (#2345)\n\nSince the Travis CI OS X infrastructure is incredibly unstable \r\nwe need to let the builds run on a best effort basis \r\nbut not report failure and not hang a result until its finished \r\n\r\nWith this setup  the Linux build dictates the success \r\ncompletely ignoring OS X   
21303,     Merge pull request #2266 from ChrisUbben/PortTestMultiMachineProvidersFileSystem\n\nAdding test coverage for FileSystem provider  
21304,     Merge pull request #2241 from jeffbi/convertto-html-coreclr\n\nMake ConvertTo-Html work on CoreCLR  
21305,     move native execution tests to Language/Scripting/NativeExecution (#2333)\n\nupdate testing-guidelines md with new locations  
21306,     Fix binary operator tab completion (#2338)\n\n  
21307,     Merge pull request #2264 from ChrisUbben/PortTestMultiMachineProvidersAlias\n\nAdding test coverage for Alias provider  
21308,     Merge pull request #2267 from ChrisUbben/PortTestMultiMachineProvidersPSDrive\n\nAdding test coverage for PSDrive provider  
21309,     Fix `powershell -Command -` handling of backspace\n\nPowerShell can be started with input redirected in different scenarios \n\n`powershell -Command -` is one scenario where commands are sent to\nPowerShell  but this is not a interactive shell scenario  it s really\na server to run commands from some other process \n\n`powershell -File -` or just regular redirected input means PowerShell\nis an interactive shell  but command line editing must be done via\nthe redirected standard input handle instead of interacting directly\nwith a console handle \n\nIn this scenario  we want to provide a good editing experience  Today \nwe provide the bare minimum  supporting backspace but no cursor movement \n\nThe bug here is that backspace was treated as a backspace in the server mode\nbut should not have been \n  
21310,     Fix `powershell -Command -` to not ignore last command\n\nIf the last command sent via stdin did not have a newline \nthe command was ignored  This would happen when stdin was closed \n  
21311,     Adding test coverage for Registry provider\n  
21312,     Adding test coverage for FileSystem provider\n  
21313,     Adding test coverage for Alias provider\n  
21314,     Adding test coverage for PSDrive provider\n  
21315,     Merge pull request #2311 from andschwa/dependencies\n\nUpdate dependency list  
21316,     Patch System Net Http Native dylib\n\nAgain   NET Core expects users to forcibly link the third party OpenSSL\nlibraries into system directories  which the Homebrew team advises\nstrongly against (and attempts to prevent)  This also affects the\nSystem Net Http library  and results in runtime errors during SSL\ncertificate validation  So instead  we patch what we can  when we can \n  
21317,     Add one-line installation instruction\n  
21318,     Update Linux installation docs to resolve dependencies\n\nUse `dpkg -i` followed by `apt-get install -f`  Alternatives considered\nincluded using `apt install`  which does not work  and copying the\nPowerShell package to `/var/cache/apt/archives` which is just as messy\nas this  At least this follows the same steps as `download sh` \n  
21319,     Update download sh to install all dependencies\n  
21320,     Add all dependencies to New-UnixPackage\n\nNow that I finally have a decent list of dependencies (though it may\nstill be too many)  I have expanded the dependencies of the package so\nthat users get better error messages \n\nI ve removed ca-certificates as that s not *necessarily* required (but\nneeded on Docker to download over HTTPS)  This may be true of other\npackages too \n  
21321,     Merge pull request #2313 from jsoref/spelling-public\n\nspelling: public identifiers in src/Microsoft WSMan Management  
21322,     Merge pull request #2314 from jsoref/grammar-may-be\n\ngrammar: may be  
21323,     Merge pull request #2260 from jsoref/spelling-public\n\nFix spelling in public APIs  
21324,     Add tests to language part 5 (#2218)\n\n1  Added parameterbinding test\r\n2  Added ShouldBeErrorID function in helper file\r\n3  Removed ShouldBeErrorID function from other test modules\r\n4  Update New-TestHost to be able to run on full CLR\r\n5  updated file map json\r\n  
21325,     Added support for title in get-Credential  and message set to optional  (#1904)\n\n* Update CredentialCommands cs\r\n\r\nAdded possibility to add title to the credential prompt window \r\nAdded possibility to only supply username without giving a message \r\n\r\n* Added Test for Get-Credential new feature  (Title  and Message only optional )\r\n  
21326,     Merge pull request #2281 from daxian-dbw/update-FAQ\n\nupdate nuget package version number in FAQ md  
21327,     update nuget package version number in FAQ md\n  
21328,     Merge pull request #2276 from andschwa/post-alpha 10\n\nUpdate documentation and scripts for alpha 10  
21329,     Merge pull request #2156 from charub/StartProcessIssue\n\nProvide an unsupported message for  Verb  parameter (#1691)  
21330,     spelling: public identifiers in src/Microsoft WSMan Management\n  
21331,     grammar: may be\n\nmaybe be -- does not really make sense  it should almost always be\nwritten as simply: may be \n  
21332,     Update testing guidelines (#2244)\n\n* Move PesterDoAndDont md into WritingPesterTests md\r\n\r\n* Add powershell language moniker to codesnippets\r\n\r\nin WritingPesterTests md\r\nAdd extra new-lines for formatting\r\n\r\n* Adding here-string info to testings docs\r\n  
21333,     Update download sh and Dockerfile links\n\nThis is a breaking change until the release is posted \n  
21334,     Update documentation names and links for alpha 10\n  
21335,     Update changelog for alpha 10 (#2275)\n\n  
21336,     Spelling ps1 (#2256)\n\n* spelling: locals in src/Modules/Shared/PowerShellGet\r\n\r\n* spelling: locals in src/Modules/Windows-Full\r\n  
21337,      NET CLI tools need to be in path for VS Code (#2204)\n\n  
21338,     Add tests for the Language (#2118)\n\nDeserializedMethods  DeserializedTypeConversion \r\nDynamicParameters  Generics  Indexer  LindEndings  MyInvocation \r\nOrderedAttributeForHashTable   
21339,     Provide an unsupported message for  Verb  parameter (#1691)\n\nAdd the  Verb  parameter to Powershell core and add an unsupported message\nfor the same \n  
21340,     Merge pull request #2255 from jsoref/spelling-call\n\nspelling: call in Microsoft PackageManagement/providers/IPackageProvi…  
21341,     Merge pull request #2182 from douglaswth/fix-passing-escaped-double-quoted-spaces-to-native exe\n\nFix passing escaped double quoted spaces to native executables  
21342,     Merge pull request #2259 from jsoref/spelling-debug\n\nSpelling debug  
21343,     Merge pull request #2250 from mirichmo/mirichmo/localgroup-description-length\n\nRemoving length restriction on Description since SAM allows greater than 48 characters  
21344,     Merge pull request #2265 from daxian-dbw/improve-modulepath\n\nImprove ModulePath calculation and refactor related method names  
21345,     Adding ported LocalAccounts tests\n  
21346,     Removing length restriction on Description since SAM allows greater than 48 characters\n  
21347,     Merge pull request #2239 from JamesWTruher/jameswtruher/testgap-004\n\nJameswtruher/testgap 004  
21348,     Merge pull request #2262 from jsoref/spelling-display\n\nSpelling display  
21349,     Add more sxs module path tests and make the basic sxs module test run on both powershell core and windows powershell\n  
21350,     Improve the logic to detect PSHome module path derived from a different powershell core instance \n  
21351,     Refactor method names related to  PSHomeModulePath  and  SharedModulePath \n  
21352,     Minor improvements to SSH remoting cmdlets (#2249)\n\n* Fix for relative paths for KeyFilePath cmdlet parameter  renamed cmdlet KeyPath parameter to KeyFilePath parameter  and added tests \r\n\r\n* Code review comment update\r\n\r\n* Added missing KeyFilePath check\r\n\r\n* Test fix from review comment\r\n  
21353,     Merge pull request #2251 from ealexjordan/uninstalldocs\n\nAdd Uninstallation Instructions for PowerShell Package  
21354,     Add get-runspace -name test\n  
21355,     add runspace dispose to clean up created runspace\n  
21356,     Add a test for get-runspace -name and remove the runspace close from AfterAll block\n  
21357,     removed aggressive runspace cleanup code\n\nalso changed get-runspace test when multiple runspaces are present\nto look for explicit runspace ids\n  
21358,     Add get-runspace -name test  remove runspace close from AfterAll  dispose alone will suffice\n  
21359,     make the language more clear for the PSStandaloneMonitorRunspaceInfo test\n  
21360,     don t use git to determine where the common directory is\n\nit s not portable for our lab environment  where git may not exist\n  
21361,     fix up Get-Runspace test to be sure it has a clean environment before starting\n  
21362,     adding convert-path tests\n  
21363,     Rewrite to use $TESTDRIVE which does auto cleanup\n  
21364,     Start adding runspace debugging API tests\n  
21365,     Add Get-Runspace tests\n  
21366,     changing Package tests tags to Feature  as they go off box and should not be CI\n  
21367,     additional tests to close gaps\n\nMove-Item was identical to Rename-Item\n  
21368,     spelling: error ids in ErrorRecord (#2258)\n\n  
21369,     Update test per code review\n  
21370,     spelling fixes: demos apache (#2257)\n\n  
21371,     Merge pull request #2089 from 0xfeeddeadbeef/master\n\nUse prefixed QNames in XPath expressions used by all implementations of ICmdletProviderSupportsHelp interface  
21372,     Use a variable instead of a file for testing args\n\n* Use a variable (which can be indexed by line) instead of a file to\n  test the output of arguments passed to echoargs\n* Add comments explaining the tests\n  
21373,     Rename Publish-EchoArgs to Publish-PSTestTools\n\n* Rename Publish-EchoArgs to Publish-PSTestTools so it can be used\n  for other tools as well in the future\n* Publish EchoArgs to the bin directory instead of run to match\n  convention\n* Add source URL to EchoArgs header comment\n* Use wildcard of  * nuget props  to match\n   test/csharp/csharp nuget props  in  gitignore\n  
21374,     Move and  publish  EchoArgs for the tests\n\n* Move EchoArgs from test/EchoArgs to test/tools/EchoArgs\n* Use  dotnet publish  for building EchoArgs in build psm1 so the test\n  can call it directly\n  
21375,     Add tests for native command arguments\n  
21376,     Add test/csharp/csharp nuget props to  gitignore\n  
21377,     Fix passing escaped double quoted spaces to native executables\n  
21378,     Fix for Linux remote script debugging hang (#2213)\n\n* Fix for Linux remote debugging hang bug \r\n\r\n* Removing dependency in PSReadLine on new engine helper API since it needs to be compatible with V3 \r\n  
21379,     Add uninstallation instructions for PowerShell pkg\n  
21380,     Make sure we log that tests for Cert:\\ and WSMan:\\ provider-specific help are skipped\n  
21381,     Remove   ni  from module help file name (indicating a Ngen binary)\n\nFixes #2088\n  
21382,     Use prefixed QNames in XPath expressions used by all implementations of ICmdletProviderSupportsHelp interface\n\nAlso includes these bugfixes:\n  - WSManConfigProvider GetHelpMaml: Tried to load XML from\n    MemoryStream that was created from file name string  Use XmlReader\n    instead \n  - WSManConfigProvider GetHelpMaml: Use Path Combine instead of\n    platform-specific directory separator character \n  - WSManConfigProvider GetHelpMaml: CmdletHelpPath MAML XML element\n    attribute `ID` name casing seems inconsistent with other help xml\n    files  XPath 1 0 does not support case-insensitive expressions \n    use both `id` and `ID` in query \n  - Add Pester test to verify that Get-Help shows provider-specific help \n\nFixes #2088\n  
21383,     Added tests for hashtabletoPSCustomObjectConversion  OutErrorVairable tests (#2160)\n\n  
21384,     Merge pull request #2220 from andschwa/docker\n\nDockerize Linux build environments  
21385,     Fix typo in CONTRIBUTING md (#2242)\n\nChange  once  to  one  and remove spaces before and after  /    
21386,     Update documentation\n  
21387,     Copy artifacts from containers to docker/packages\n  
21388,     Parallelize Docker builds\n\nLog output to docker/logs \n  
21389,     Satisfy shellcheck\n\nSome variables left unquoted because they may be empty \n  
21390,     Add RUNARGS and BUILDARGS for more flexibility\n\nE g  RUNARGS= --rm  or BUILDARGS= --no-cache  \n  
21391,     Add -powershell and -Pester options to Start-PSPester\n\nWhen testing containers  we want to use the in-box PowerShell \n  
21392,     Consolidate test script with launch script\n  
21393,     Enable building arbitrary forks and branches\n  
21394,     Add unstable Dockerfile for CentOS 7\n  
21395,     Add stable Dockerfile for CentOS 7\n  
21396,     Add unstable Dockerfile for Ubuntu 16 04\n  
21397,     Add stable Dockerfile for 16 04\n  
21398,     Add Docker scripts\n\nCommon bootstrap ps1 script to run PowerShell builds \nLaunch script to build and tag all containers \nTest script to run tests in unstable containers \n  
21399,     Add unstable Dockerfile for Ubuntu 14 04\n  
21400,     Add stable Dockerfile for Ubuntu 14 04\n\nDependencies and PowerShell are installed \n  
21401,     Remove prototype Dockerfile\n  
21402,     Refactor  NET CLI installation into Install-Dotnet\n\nSo that it can be reinstalled separately if desired \n\nAlso removed the set validation as it was now wrong \nand removed the warning about no Invoke-WebRequest on Core PowerShell\n(it is ported now) \n\nI don t like the duplicate parameter logic \nespecially around -NoSudo \n  
21403,     Update apt-get repo in Start-PSBootstrap\n\nyum does not need this as yum install does it automatically \n\nThis is needed when running  for example  in a container \n  
21404,     Add -NoSudo option to Start-PSBootstrap\n  
21405,     Guard fatal bootstrap steps with Start-NativeExecution\n  
21406,     Install groff when bootstrapping for packaging\n  
21407,     Improve GetFullyQualfiedName() test\n  
21408,     Fix memory leak in GetFullyQualifiedName()\n  
21409,     Make ConvertTo-Html work on CoreCLR\n\nThis also includes some Pester test for the cmdlet \n  
21410,     Add tests to language part 1 (#2086)\n\n  
21411,     Update demos/Azure/Azure-Demo ps1 (#2149)\n\n* Update demos/Azure/Azure-Demo ps1\r\n\r\nFix typos and casing \r\nRemove double spaces \r\n\r\n* Update Azure-Demo ps1\r\n  
21412,     Merge pull request #2092 from bingbing8/Add-Tests-to-language-part-2\n\nAdd tests to language part 2  
21413,     Fix test-locale cpp to report failing value (#2191)\n\nASSERT_TRUE( a == b ) only reports that the strings do not match  hiding\r\ntheir values \r\nASSERT_STREQ( a   b ) is a functionally equivalent test  but reports\r\nback the values of the failing strings for easier troubleshooting   
21414,     move help tests to feature  It generate two much log\n  
21415,     Issue management (#2197)\n\n* punctuation: issue management\r\n\r\n* grammar: issue management\r\n\r\n* capitalization: issue management\r\n\r\n* miscellaneous: issue management\r\n  
21416,     grammar: TransactedRegistry stub in System Management Automation CoreCLR (#2196)\n\nPowerShell has some stubs to enable code to almost sort of work with things \r\nSome of the stubs try to say  Do not use me  \r\n\r\nThis commit corrects the grammar of the message \r\n\r\nPreviously the message tried to apply a past tense form to `hit` \r\nbut the past tense of `hit` is `hit`  and while breakpoints can\r\nbe hit  it\ s better to talk to the user about what should be done/\r\nshould not be done   
21417,     Fix incorrect function references in releasing md\n\nThis documentation is meant to describe Start-PSPackage  not Start-PSBuild   
21418,     Merge pull request #2154 from jsoref/spelling-locals\n\nSpelling locals  
21419,     spelling: call in Microsoft PackageManagement/providers/IPackageProvider cs\n  
21420,     Fix link to Build Manually in Linux build document (#2180)\n\n  
21421,     Merge pull request #2175 from andschwa/osx-openssl\n\nFix macOS CI build and installation instructions  
21422,     Update macOS install docs for OpenSSL\n  
21423,     Use direct download URLs instead of API\n\nGitHub s API is throttled to 60 requests per hour per IP address when\nfor non-authenticated calls  which was causing severe CI flakiness \nWhile this adds another set of URLs to update for each release  the\nalternative was adding an OAuth token and maintaining its ownership \nMoreover  this code is simpler than the previous API parsing \n  
21424,     Handle package download failure\n  
21425,     Revert  Temporarily disable OS X on Travis CI \n\nThis reverts commit bbf64d17ad8e0ad7dd7266408cd783d43ff37b07 \n  
21426,     Install OpenSSL via Homebrew on macOS\n\nSince it is required  Note that we do *not* unsafely link the OpenSSL\nlibraries into the system folders  as we instead patch  NET Core s\nlibraries to find OpenSSL in the installed location \n  
21427,     Don t download package silently\n\nOtherwise users think it s slow or hung \n  
21428,     Quote all $variables\n\nFor paranoia \n  
21429,     Use hash to check for curl\n\nOur shebang is Bash \n  
21430,     Merge pull request #2173 from vors/label-abandoned\n\nAdd label  Review - Abandoned  description  
21431,     Add label  Review - Abandoned  description  
21432,     fixed indentation\n  
21433,     Merge pull request #2169 from andschwa/fqdn\n\nRemove incorrect logic from GetFullyQualifiedName()  
21434,     Update based on PR feedback\n  
21435,     Remove incorrect logic from GetFullyQualifiedName()\n\nI think this logic was originally added with the assumption that any\nhostname with a dot in it was an FQDN  I believe this is incorrect  The\nhostname is the hostname regardless of included dots  and getting the\nFQDN amounts to always querying for the canonical name \n  
21436,     Merge pull request #2167 from jsoref/spelling-hangul\n\nspelling: Hangul (unify spelling)  
21437,     Merge pull request #2168 from jsoref/switch-case-space\n\nadd space to switch-case statement in CommandValidationVisitor Unreso…  
21438,     spelling: Hangul (unify spelling)\n\nBefore this commit there were three spellings  one of which was a typo \none was a variant spelling  and one was the dominant spelling \n\nMicrosoft generally uses Hangul for its enums:\n   microsoft com/en-us/library/cc250412 aspx\nAnd this is the dominant spelling in general and as used in web browsers \n  
21439,     add space to switch-case statement in CommandValidationVisitor UnresolvedCommandCouldSucceed\n  
21440,     Merge pull request #2046 from xiaoyinl/use-https-links\n\nUse HTTPS links for go microsoft com  
21441,     Merge TFS 2064268: ConstrainedLanguage PowerShell should not block nested cmdlet invocation via runspace (#2159)\n\n* Merge TFS 2064268: Under UMCI PowerShell should not block nested cmdlet invocation via runspace\r\n\r\n* Update SessionState cs\r\n\r\nFixed ExecutionContext property name error \r\n  
21442,     Merge TFS 8193011: Constrained language mode doesn t allow CIM cmdlets (#2158)\n\n* Merge TFS 8193011: Constrained language mode doesn t allow argument transformation\r\n\r\n* Update CommandProcessorBase cs\r\n\r\nAdded comment per review comment \r\n  
21443,     Use lowercase name for package folders (#2162)\n\n NET CLI build 3546 started placing packages in:\r\n\r\n    ~/ nuget/packages/microsoft codeanalysis common\r\n\r\ninstead of:\r\n\r\n    ~/ nuget/packages/Microsoft CodeAnalysis Common\r\n\r\nWhere the previous (capitalized) version corresponded directly to the\r\npackage s name  Now they are all lower-cased   
21444,     Merge pull request #2067 from JamesWTruher/jameswtruher/testgapfile-002\n\nFill more gaps in cmdlet test coverage  
21445,     Update the path to LanguageTestSupport psm1 -force\n  
21446,     spelling: locals in src/System Management Automation/namespaces\n  
21447,     spelling: debug src/System Management Automation/engine/runtime\n  
21448,     spelling: debug src/System Management Automation/engine\n  
21449,     spelling: locals in src/System Management Automation/commands\n  
21450,     spelling: locals in src/System Management Automation/CoreCLR\n  
21451,     spelling: locals in src/System Management Automation/DscSupport\n  
21452,     spelling: locals in src/System Management Automation/engine\n  
21453,     spelling: locals in src/System Management Automation/engine/ComInterop\n  
21454,     spelling: locals in src/System Management Automation/engine/CommandCompletion\n  
21455,     spelling: locals in src/System Management Automation/engine/hostifaces\n  
21456,     spelling: locals in src/System Management Automation/engine/Modules\n  
21457,     spelling: locals in src/System Management Automation/engine/parser\n  
21458,     spelling: locals in src/System Management Automation/engine/remoting\n  
21459,     spelling: locals in src/System Management Automation/engine/runtime\n  
21460,     spelling: locals in src/System Management Automation/help\n  
21461,     spelling: debug src/System Management Automation/singleshell\n  
21462,     spelling: locals in src/System Management Automation/singleshell\n  
21463,     spelling: locals in src/System Management Automation/utils\n  
21464,     spelling: locals in src/powershell-native\n  
21465,     spelling: display g_MANAGED_METHOD_RESOLUTION_FAILED\n  
21466,     Working directory fix for googletest submodule update (#2151)\n\n* Working directory fix for submodule update\r\n\r\nThe git submodule update for googletest must be run from the script s root directory\r\n\r\n* Added try-finally block around Push-Location\r\n\r\nGreat recommendation from @vors! \r\n\r\nThe edit is a best practice incase the user Ctrl-C s out of the script  \r\n\r\nTested locally by exiting out of: \r\ntry   Push-Location C:\\Users\\; Start-Sleep -Seconds 60   finally   Pop-Location  \r\n  
21467,     update map json\n  
21468,     spelling: display messages (#2135)\n\nspelling: resource strings (display messages and comments)  
21469,     Merge pull request #2063 from jsoref/spelling-test\n\nspelling fixes: tests  
21470,     Fix multi-line input w/ redirected stdin (#2090)\n\nThe input loop reading from stdin did not handle multi-line input correctly\r\nbecause it was adding a newline character where none was expected \r\n\r\nThe fix was to not include the final newline character to accept input \r\njust like Console ReadLine or PSReadline would   
21471,     Add support for multiple paths to Join-Path\n\nMultiple child paths can be specified via the new positional parameter -AdditionalChildPath \n  
21472,     Add powershell to /etc/shells (#1939)\n\nManages /etc/shells with after (un)install scripts for CentOS and Ubuntu\r\n\r\nFixes #1913  
21473,     Merge pull request #2139 from TravisEz13/AddDailyBuild\n\nAdd support for running all tests on scheduled builds  
21474,     Add support for running all tests on scheduled builds\nOnly produce nuget packages if tests pass\n  
21475,     Add message to make it clear what tests are running\n  
21476,     Mark failing test as pending\n  
21477,     spelling fixes: demos (#2060)\n\n  
21478,     spelling: display Microsoft PowerShell ODataUtilsStrings psd1\n  
21479,     Merge pull request #2099 from akkatracker/patch-2\n\nits to it s where appropriate in MessageTextBox Generated cs  
21480,     change throw message\n  
21481,     update exception messages\n  
21482,     address some review feedback\n  
21483,     fix typos in test descriptions\n  
21484,     Add simple runspace debugging tests\n  
21485,     Add new debugging tests which are based on existing earlier non-Pester tests\n  
21486,     Add simple securestring conversion cmdlet tests\n  
21487,     Add simple Enable-PSBreakpoint and Disable-PSBreakpoint cmdlet tests\n  
21488,     fix missing  ;  in Streams Clear\n  
21489,     quiet the start-process tests by redirecting all output\n  
21490,     Change Import-PowerShellDataFile tag to CI and simplify tests\n  
21491,     Add Set-Date test\n  
21492,     Add set-Date test\n\nthis one is a bit tricky  unless you re elevated you can t set the date\nhowever  if you are not elevated you should get an error  This file\ndoes one or the other based on whether you re elevated\n  
21493,     add read-host tests\n  
21494,     Merge pull request #2106 from jsoref/spelling-debug\n\nspelling: debug\r\n\r\n- Fix spelling in debug asserts and tracing\r\n- Fix telemetry event name for PackageManagement  
21495,     spelling: display PSGet Resource\n  
21496,     spelling: display AppendArchiveFileExtensionMessage\n  
21497,     spelling: api: OSRequirement::minimumVersion\n  
21498,     spelling: public identifiers in src/Microsoft PowerShell GraphicalHost/HelpWindow\n  
21499,     spelling: public identifiers in src/Microsoft PowerShell Workflow ServiceCore\n  
21500,     spelling: public identifiers in src/System Management Automation\n  
21501,     spelling: public identifiers in src/Schemas/PSMaml\n  
21502,     spelling: public identifiers in src/Microsoft PowerShell Commands Management\n  
21503,     spelling: public identifiers in src/Microsoft PackageManagement/Utility\n  
21504,     spelling: public identifiers in src/Microsoft PackageManagement PackageSourceListProvider\n  
21505,     spelling: public identifiers in src/Microsoft PackageManagement NuGetProvider\n  
21506,     spelling: public identifiers in src/Microsoft PackageManagement MetaProvider PowerShell\n  
21507,     spelling: public identifiers in src/Microsoft Management Infrastructure CimCmdlets\n  
21508,     removed the first 3 lines in i18n Tests ps1\n  
21509,     Merge pull request #2128 from TravisEz13/AddDailyBuild\n\nMade AppVeyor and TravisCI use similar code  
21510,     Ignore test results\n  
21511,     Address comments\nMade AppVeyor and TravisCI use similar code\n  
21512,     Rename readme md to README md (#2131)\n\nFix casing   
21513,     Merge pull request #2102 from akkatracker/patch-5\n\nits to it s where appropriate in comments in Microsoft PowerShell Arc…  
21514,     Merge pull request #2101 from akkatracker/patch-4\n\nits to it s where appropriate in MshTraceSource cs  
21515,     Merge pull request #2100 from akkatracker/patch-3\n\nits to it s where appropriate in ResourceManagerCache cs  
21516,     spelling: locals in src/Microsoft WSMan Management\n  
21517,     spelling: locals in src/Microsoft PowerShell Workflow ServiceCore\n  
21518,     redirect mc error messages to stdout\n  
21519,     Removed travis-ci branch restriction now that we are using forks\n  
21520,     assert\n  
21521,     Added info on the community Powershell slack team (#2062)\n\n* Added info on the community Powershell slack team\r\n\r\n* Revised update about Slack team to readme md\r\n\r\n* remove unneeded where\r\n\r\n* Adds a line break before the gitter badge\r\n\r\n* added missing full stops (periods)\r\n  
21522,     Added Debian compatibility notice (#2010)\n\nUbuntu 16 04 LTS is very similar to Debian 9 Strech (now in testing)  I can confirm  the instructions work and PS will install successfully   
21523,     Clone 1000 commits on Travis CI (#2124)\n\nThe previous failure we saw was because the most recent annotated tag\r\ndid not exist in the previous 50 commits  In my experience we ve gone\r\nabout ~300 commits between tags  so I believe 1000 to be safe  but know\r\n100 will not be   
21524,     Merge pull request #2105 from jsoref/spelling-comments\n\nSpelling comments  
21525,     Update i18n Testsps1 to use PSDefaultParameterValues\n  
21526,     Merge pull request #2125 from alexandair/patch-3\n\nUpdate and rename readme md to README md  
21527,     Merge pull request #2126 from alexandair/patch-4\n\nupdate REST demo to fix function name  
21528,     Publish nuget packages for  Microsoft WSMan Management  and  Microsoft WSMan Runtime  (#2119)\n\n  
21529,     Merge pull request #2121 from TravisEz13/AddDailyBuild\n\nRefactor PowerShell code from AppVeyor yml to AppVeyor psm1  
21530,     update REST demo to fix function name\n\nFix the function name to follow Verb-SingularNoun naming convention   
21531,     Update and rename readme md to README md\n\nFix typos and reword the description   
21532,     Fix issues identified in  Pull Request comments\n  
21533,     Added libcurl3 Docker dependency (#2104)\n\nFixes #2103  
21534,     Add description of the functions in appveyor psm1\n  
21535,     Handle error and retry test results push \n  
21536,     Added image requirement to appveyor yml to make it easier to run on your own appveyor instance\n  
21537,     Move the PowerShell code in appVeyor yml to a module\n  
21538,     debug/trace\n  
21539,     spelling: debug  tracer     \n  
21540,     correct ArgumentException message in PackageListParser\n  
21541,     Add BooleanParameterDCR and Eventing Pester Test (#2031)\n\n* Add BooleanParameterDCR and Eventing Pester Test\r\n\r\n* Correct describe for Eventing Pester Test\r\n\r\n* Add ProviderIntrinsics and Serialization Pester Test\r\n  
21542,     spelling: locals in src/Microsoft PowerShell ScheduledJob\n  
21543,     spelling: locals in src/Microsoft PowerShell PackageManagement\n  
21544,     spelling: locals in src/Microsoft PowerShell GraphicalHost\n  
21545,     spelling: debug  assert   \n  
21546,     spelling: locals in src/Microsoft PowerShell CoreCLR Eventing\n  
21547,     spelling: locals in src/Microsoft PowerShell ConsoleHost\n  
21548,     spelling: locals in src/Microsoft PowerShell Commands Utility\n  
21549,     spelling: locals in src/Microsoft PowerShell Commands Management\n  
21550,     spelling: locals in src/Microsoft PackageManagement PackageSourceListProvider\n  
21551,     spelling: locals in src/Microsoft PackageManagement MsiProvider\n  
21552,     spelling: locals in src/Microsoft Management Infrastructure CimCmdlets\n  
21553,     spelling: locals in src/libpsl-native/test\n  
21554,     spelling: debug   \n  
21555,     spelling: comments in src/System Management Automation/utils\n  
21556,     spelling: comments in src/System Management Automation/singleshell\n  
21557,     spelling: comments in src/System Management Automation/security\n  
21558,     spelling: comments in src/System Management Automation/namespaces\n  
21559,     spelling: comments in src/System Management Automation/minishell\n  
21560,     spelling: comments in src/System Management Automation/logging\n  
21561,     spelling: comments in src/System Management Automation/help\n  
21562,     spelling: comments in src/System Management Automation/engine\n  
21563,     spelling: comments in src/System Management Automation/engine/remoting/server\n  
21564,     spelling: comments in src/System Management Automation/engine/remoting/fanin\n  
21565,     spelling: comments in src/System Management Automation/engine/remoting/common\n  
21566,     spelling: comments in src/System Management Automation/engine/remoting/commands\n  
21567,     spelling: comments in src/System Management Automation/engine/remoting/client\n  
21568,     spelling: comments in src/System Management Automation/engine/parser\n  
21569,     spelling: comments in src/System Management Automation/engine/lang\n  
21570,     spelling: comments in src/System Management Automation/engine/interpreter\n  
21571,     spelling: comments in src/System Management Automation/engine/hostifaces\n  
21572,     spelling: comments in src/System Management Automation/engine/debugger\n  
21573,     spelling: comments in src/System Management Automation/engine/COM\n  
21574,     spelling: comments in src/Schemas/PSMaml\n  
21575,     spelling: comments in src/Microsoft WSMan Management\n  
21576,     spelling: comments in src/Microsoft PowerShell PackageManagement\n  
21577,     spelling: comments in src/Microsoft PowerShell Commands Management/commands\n  
21578,     its to it s where appropriate in comments in Microsoft PowerShell Archive  
21579,     its to it s where appropriate in MshTraceSource cs  
21580,     its to it s where appropriate in ResourceManagerCache cs  
21581,     its to it s where appropriate in MessageTextBox Generated cs  
21582,     Change some context to it\n  
21583,     Updated SSH Demo doc in line with error in #2003 (#2057)\n\n  
21584,     fix Markdown formatting to follow one-sentence-per-line recommendation (#2080)\n\n  
21585,     Merge pull request #2072 from mirichmo/mirichmo/fixing-win7\n\nFixing API set versioning to get PowerShell Core working on Windows 7  
21586,     fix Markdown formatting to follow one-sentence-per-line in windows-full md (#2081)\n\n\r\n  
21587,     Update PowerShellGet to install the modules and scripts to proper locations in PowerShell Core on Windows  (#2078)\n\n* 1  Update PowerShellGet to install the modules and scripts to proper locations in PowerShell Core on Windows  2  Added few CI tests for PowerShellGet\r\n\r\n* Handling the scenario of FullCLR-based PowerShell on Windows \r\n  
21588,     Fixing API set versioning to get PowerShell Core working on Windows 7\n  
21589,     Add Tests for parsing  international  and script help \n  
21590,     Spelling comments (#2066)\n\n* spelling: comments in src/Microsoft Management Infrastructure CimCmdlets\r\n\r\n* spelling: comments in src/Microsoft PackageManagement ArchiverProviders\r\n\r\n* spelling: comments in src/Microsoft PackageManagement CoreProviders\r\n\r\n* spelling: comments in src/Microsoft PackageManagement MetaProvider PowerShell\r\n\r\n* spelling: comments in src/Microsoft PackageManagement MsiProvider\r\n\r\n* spelling: comments in src/Microsoft PackageManagement MsuProvider\r\n\r\n* spelling: comments in src/Microsoft PackageManagement NuGetProvider\r\n\r\n* spelling: comments in src/Microsoft PackageManagement PackageSourceListProvider\r\n\r\n* spelling: comments in src/Microsoft PackageManagement\r\n\r\n* spelling: comments in src/Microsoft PowerShell Activities\r\n\r\n* spelling: comments in src/Microsoft PowerShell Commands Diagnostics\r\n\r\n* spelling: comments in src/Microsoft PowerShell Commands Management\r\n\r\n* spelling: comments in src/Microsoft PowerShell Commands Utility\r\n\r\n* spelling: comments in src/Microsoft PowerShell ConsoleHost\r\n\r\n* spelling: comments in src/Microsoft PowerShell Core Activities\r\n\r\n* spelling: comments in src/Microsoft PowerShell CoreCLR AssemblyLoadContext\r\n\r\n* spelling: comments in src/Microsoft PowerShell CoreCLR Eventing\r\n\r\n* spelling: comments in src/Microsoft PowerShell Diagnostics Activities\r\n\r\n* spelling: comments in src/Microsoft PowerShell GraphicalHost\r\n\r\n* spelling: comments in src/Microsoft PowerShell LocalAccounts\r\n\r\n* spelling: comments in src/Microsoft PowerShell Management Activities\r\n\r\n* spelling: comments in src/Microsoft PowerShell PSReadLine\r\n\r\n* spelling: comments in src/Microsoft PowerShell PackageManagement\r\n\r\n* spelling: comments in src/Microsoft PowerShell ScheduledJob\r\n\r\n* spelling: comments in src/Microsoft PowerShell Security Activities\r\n\r\n* spelling: comments in src/Microsoft PowerShell Security\r\n\r\n* spelling: comments in src/Microsoft PowerShell Utility Activities\r\n\r\n* spelling: comments in src/Microsoft PowerShell Workflow ServiceCore\r\n\r\n* spelling: comments in src/Microsoft WSMan Management Activities\r\n\r\n* spelling: comments in src/Modules\r\n\r\n* spelling: comments in src/Schemas\r\n\r\n* spelling: comments in src/libpsl-native\r\n\r\n* spelling: comments in src/powershell-native\r\n\r\n* spelling: comments in build psm1\r\n\r\n* spelling: comments in src/System Management Automation/CoreCLR\r\n\r\n* spelling: comments in src/System Management Automation/DscSupport\r\n\r\n* spelling: comments in src/System Management Automation/cimSupport\r\n\r\n* spelling: comments in src/System Management Automation/commands\r\n\r\n* spelling: comments in src/System Management Automation/engine/Modules\r\n  
21591,     OS X -> macOS (#1934)\n\nFix all documentation references of  OS X  to be  macOS   Apple\ s new brand \r\n\r\nCode is left unchanged because we\ re matching  NET Core   
21592,     Merge pull request #2061 from jsoref/spelling-docs\n\nspelling fixes: docs  
21593,     Merge pull request #2056 from adamdriscoll/master\n\nChanging the PATH for cmake   
21594,     spelling fixes: test\n  
21595,     spelling fixes: docs\n\nadditional fixes to grammar in windows-full md per alexandair\n  
21596,     Merge pull request #2055 from akkatracker/patch-1\n\nits to it s where appropriate in throttlemanager  
21597,     Changing the PATH for cmake \n  
21598,     its to it s where appropriate in throttlemanager  
21599,     Merge pull request #2053 from daviwil/update-vscode-docs\n\nUpdate using-vscode md to fix broken link  
21600,     Update using-vscode md to fix broken link\n\nThis change fixes a broken link in the Using Visual Studio Code\ndocumentation   This link is pointing to a GitHub repo that will never\nmade public   The resolution is to change the link to point to the public\nvscode-powershell repo \n  
21601,     Add missing OutputType attribute  (#2052)\n\n* Add missing OutputType attribute \r\n\r\n* Adding OutputType attribute with accurate output types  including PSObject for PSCustomObject (using Property parameter\r\n  
21602,     Merge pull request #2039 from rnelson0/patch-1\n\nInstall via URL on CentOS 7  
21603,     Clarifying OSX  adding issue with Install-Package (#2033)\n\n* Clarifying OSX  adding issue with Install-Package\r\n\r\n- Changing first section to  non-Windows  and clarifying that most of these issues apply to both Linux & OSX \r\n- Fixed a few typos \r\n- Adding known issue with Install-Package per #1773\r\n\r\n* Mac OSX -> macOS\r\n\r\nComplying with convention used in #1934\r\n\r\n* added alpha build # to install-package notice\r\n\r\n* typo\r\n\r\n* Typo\r\n  
21604,     Fix documentation on docker image to say you must build before running (#1987)\n\n* Can not run before building\r\n\r\nunless you provide a library/powershell image\r\n\r\n* Update docker md\r\n  
21605,     Use HTTPS links for go microsoft com\n\nI replace all occurrences of    microsoft com with    microsoft com in text files \n  
21606,     Merge pull request #2044 from daviwil/update-vscode-docs\n\nUpdate VS Code docs to mention OpenSSL requirement  
21607,     Merge pull request #2036 from mirichmo/mirichmo/fixing-user-config-path\n\nFixing the path to the user s JSON configuration file  
21608,     Update VS Code docs to mention OpenSSL requirement\n\nThis change updates the  Using Visual Studio Code  documentation to\nmention the requirement of having OpenSSL installed on OS X   Brief\ninstallation instructions have been included \n  
21609,     Fixing the path to the user s JSON configuration file\n  
21610,     Install via URL on CentOS 7\n  
21611,     Adding Azure Demo (#1922)\n\n  
21612,     Adding debugType portable to project json  (#1959)\n\n* Adding debugType portable to project json \r\n\r\n* Move debugType \r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Update project json\r\n\r\n* Moving debugType into correct places  Removing from non-core builds \r\n\r\n* Added missed files \r\n\r\n* Fixing project json debugType placement \r\n  
21613,     Merge pull request #2023 from JamesWTruher/jameswtruher/TestGapFill-001\n\nFilling test gaps (issue 2022) - this replaces PR 1834  
21614,     Merge pull request #2030 from mwrock/dotnetcliversion\n\nRemove misleading note about dotnet 1 0 1  
21615,     remove misleading note about dotnet 1 0 1\n  
21616,     Merge pull request #2025 from PowerShell/revert-1951-pesterfix\n\nRevert  Pester tests wouldn\ t run from build directory with spaces   
21617,     Revert  Pester tests wouldn\ t run from build directory with spaces \n  
21618,     Filling test gaps (issue 2022) - this replaces PR 1834\n\nThis replaces PR 1834 from the private fork I had\n  
21619,     Merge pull request #2016 from thezim/master\n\nAdd OSX/macOS icon file   
21620,     Add OSX/macOS icon file \n\nIcon file for use in Automator/Script application   
21621,     Pester tests won t run from directory with space (#1951)\n\nAdded quotes around file/pathnames as needed to get pester tests to run from build directory with a space in it   
21622,     Add Area-Remoting label to issue-management md  
21623,     Getting tests to run from build directory with spaces in it (#1981)\n\n* [build psm1  - mc exe input file needs quotes\r\n\r\nFor filenames that have spaces or paths to that file that have spaces  the input filename needs to have quotes around it \r\n\r\n* Quoted more paths so tests run from directories with spaces\r\n\r\nFound a few locations where paths weren t qutoed or escaped with  &      that are needed to get tests to run from build directories with spaces in them \r\n  
21624,     Merge pull request #1983 from ebelew/downloader\n\ndownload sh: Trap interrupt; Add sudo prompt info; Remove wget requirement  
21625,     Replace & for && in condition (#1996)\n\n  
21626,     Remove wget installation; Move curl installation after version check\n  
21627,     Updated URL to dotnet install  (#1990)\n\nThe current URL ends in a 404 error  It looks like the filename was changed from install ps1 to dotnet-install ps1  
21628,     grammer fix (#1989)\n\n  
21629,     Updated URL to VS Studio Community edition (#1991)\n\nUpdated the URL to VS Studio Community edition  The product is now out of beta and URL has moved   
21630,     Update CHANGELOG md (#1985)\n\nFixed typos   
21631,     download sh: Trap interrupt; Add sudo prompt info; Remove wget requirement\n\n Add interrupt handler so entire script exits if user hits ctrl-c on sub-command\n Add info before prompting for password using sudo\n Remove wget requirement since OSX does not have wget in default system\n Add `-C -` to curl package download to continue or skip existing packages\n  
21632,     clarify that visual studio with c++ compiler is required (#1973)\n\n  
21633,     Merge pull request #1974 from alexandair/patch-2\n\nfix a typo in installation/docker md  
21634,     fix a typo in installation/docker md\n\nChange  wery  to  very    
21635,     Merge pull request #1967 from JamesWTruher/jameswtruher/CredentialTest\n\nCreate new test for Get-Credential which requires module to create a test host  
21636,     Merge pull request #1966 from lalyos/master\n\nCreate a PowerShell Docker image   
21637,     Merge pull request #1944 from oldhamtj/patch-1\n\nAdded Oracle Linux 7 installation status   
21638,     Create new test for Get-Credential which requires module to create a test host\n  
21639,     Create a PowerShell Docker image \n  
21640,     Fix Install-Module error  Could not compare 6 0 0-alpha to 5 0   … (#1927)\n\n* Fix for Install-Module error  Could not compare 6 0 0-alpha to 5 0   Added workaround fix in PowerShellGet for issue #1618\r\n\r\n* removed the additional change related to exclusion of  nupkg and  nuspec files in Test-FileCatalog cmdlet usage\r\n  
21641,     Merge pull request #1964 from andschwa/exit-download\n\nFix error handling in download sh  
21642,     Fix error handling in download sh\n\nThis script should be deleted now that we can wget releases \n  
21643,     [build psm1  - mc exe input file needs quotes (#1943)\n\nFor filenames that have spaces or paths to that file that have spaces  the input filename needs to have quotes around it   
21644,     Add SSH Remoting readme md file (#1962)\n\nAdd SSH Remoting readme md file  
21645,     Merge pull request #1957 from jeroenjanssens/patch-1\n\nAdd Oxford comma  
21646,     Merge pull request #1960 from mrled/patch-1\n\nCorrect link to Pester Do and Don t document  
21647,     Merge pull request #1907 from stweil/master\n\nFix some trivial typos in documentation  
21648,     Merge pull request #1941 from kmosher/centos-deps\n\nFix CentOS build dependency issues  
21649,     Correct link to Pester Do and Don t document  
21650,     Add Oxford comma  
21651,     fix broken links in  maintainers/README m  and update  building/linux md  (#1938)\n\n  
21652,     Added Oracle Linux 7 installation status   
21653,     Explicitly install  which  on CentOS\n\nwhich isn t on CentOS by default and is needed by the dotnet install scripts\n  
21654,     Fix the rpm-build package name\n\nThe binary is rpmbuild  but the package that provides it is hyphenated \n  
21655,     Merge pull request #1928 from vivekjuneja/master\n\nChanged the link to Powershell on OSX  
21656,     Changed the link to Powershell on OSX\n\nLink to powershell on osx refers to osx anchor on the linux md  
21657,     Fix for issue 1528: SSH based remoting does not handle errors during connection attempt (#1856)\n\n  
21658,     Update Sign-Package ps1 to reflect prerequisites  remove the phrase  Open  (#1816)\n\n* Update Sign-Package ps1\r\n\r\n* Updated based on CR comments\r\n  
21659,     Merge pull request #1890 from alexandair/patch-1\n\nfix typos in building/osx md  
21660,     Fix GetFullyQualifiedName() (#1915)\n\nDon t expect GetComputerName() (hostname) and FQDN to be the same  They\r\nmay not be!  
21661,     Merge pull request #1879 from n8v/patch-1\n\nRefer to Mac OSX package by its actual name  
21662,     add information about the powershell sdk package in readme md (#1896)\n\n  
21663,     Merge pull request #1893 from mirichmo/mirichmo/fixing-wording-of-nano-knownissue\n\nGrammatical fixes for the Nano Server TP5 known issue  
21664,     docs: Fix typo (found by codespell)\n\nSigned-off-by: Stefan Weil <sw@weilnetz de>\n  
21665,     assets: Fix typo (found by codespell)\n\nSigned-off-by: Stefan Weil <sw@weilnetz de>\n  
21666,     Fixed a typo (#1898)\n\nFixed  sll  to  ssl   
21667,     Add description of tag Resolution-External (#1892)\n\n  
21668,     Grammatical fixes for the Nano Server TP5 known issue\n  
21669,     fix typos in building/osx md\n\nRemoved doubled  in  \r\nsoley -> solely  
21670,     Merge pull request #1885 from pborreli/typos\n\nFixed typos  
21671,     update FAQ md to include the powershell-core myget feed (#1878)\n\n  
21672,     Fixed typos\n  
21673,     Merge pull request #1871 from daviwil/vscode-windows-doc-note\n\nUpdate using-vscode md documentation  
21674,     commit test status doc to new repo (#1873)\n\n  
21675,     Refer to Mac OSX package by its actual name  
21676,     Update using-vscode md documentation\n\nThis change updates the  Using Visual Studio Code  documentation to give\nguidance on how to configure VS Code on to use a specific installation\nof PowerShell \n  
21677,     Fix typo in readme  
21678,     Temporarily disable OS X on Travis CI\n\ndownload sh script is failing  working to resolve   
21679,     update googletet submodule in bootstrap on linux and osx (#1805)\n\n  
21680,     Add Gitter chat room badge  
21681,     Fix asset download in download sh\n  
21682,     Merge pull request #1868 from PowerShell/TravisEz13-patch-1\n\nRemove AWS regison from travis-ci yml  
21683,     Remove AWS regison from travis-ci yml  
21684,     Fix AppVeyor badge image  
21685,     Fix CI badges  
21686,     Merge pull request #1864 from andschwa/public-repo\n\nFix scripts for public repo  
21687,     update nuget config to point to powershell myget org (#1867)\n\n  
21688,     Remove CI images badges until repaired\n  
21689,     Merge pull request #1861 from mirichmo/mirichmo/adding-nano-server-knownissue\n\nAdding remoting endpoint creation issue on Nano Server to list of known issues  
21690,     Merge pull request #1855 from raghushantha/master\n\nConsolidate demos/install/install sh with tools/install/download sh  add README  
21691,     Fix AppVeyor for public repo\n  
21692,     Fix Travis CI for public repo\n  
21693,     Fix download sh for public repo\n  
21694,     fix typos and casing in KNOWNISSUES md (#1860)\n\nFix typos and casing \r\n on Linux PowerShell  change to  in PowerShell on Linux  \r\nApply  one-sentence-per-line  rule   
21695,     Installing cmake instead of cmake portable (#1840)\n\n  
21696,     Update issue-management md (#1853)\n\nAdd OS-WSL  
21697,     Changed  sort  to  Sort-Object   (#1859)\n\nUpdated the sample output of $PSVersionTable and changed  sort  to  Sort-Object    
21698,     Adding Docker-PowerShell demo (#1862)\n\n  
21699,     Update rest demo (#1854)\n\n  
21700,     Adding remoting endpoint creation issue on Nano Server to list of known issues \n  
21701,     Fix docs/installation/windows md\n\nAlso consolidate install sh with download sh;\nremove unnecessary files;\ncreate README md in install \n\nRan dos2unix tool to cleanup extra carriage returns at the end of lines\n  
21702,     Merge pull request #1857 from andschwa/command-availability\n\nUpdate status of command availability  
21703,     Update status of command availability\n\nAlso better usage of Markdown `code` style for readability \n  
21704,     Add server SKUs to readme matrix\n\nRequested by Raghu   
21705,     better win 10 sdk folder to test (#1796)\n\n  
21706,     Fix OS X package link in readme  
21707,     Add DSC demo  Bugfix Apache and SystemD demo  (#1814)\n\n* Add DSC demo  Bugfix Apache and SystemD demo \r\n\r\n* DSC  Apache  SystemD demos  address comments\r\n\r\n* Fix capitalization in apache-demo ps1\r\n  
21708,     Merge pull request #1841 from mirichmo/mirichmo/remoting-documentation\n\nInstructions for installing the remoting endpoint and connecting to it using PSRP  
21709,     Instructions for installing the remoting endpoint and connecting to it\nusing PSRP \n  
21710,     Merge pull request #1804 from vors/links\n\nFix obsolete links in documentation  
21711,     Updated description of PowerShell (#1848)\n\n* Updated description of PowerShell\r\n\r\n* fixed one line per sentence (per protocol)\r\n  
21712,     remove obsolete  Permission  section from  docs/git/basics md  (#1843)\n\n  
21713,     Merge pull request #1847 from khansen00/patch-2\n\nNit update on name of Angel s profile   
21714,     Nit update on name of Angel s profile   
21715,     Stop using  Open PowerShell  and OPS in code (#1838)\n\n  
21716,     Merge pull request #1827 from andschwa/alpha 9-release\n\nUpdate documentation for v6 0 0-alpha 9 release  
21717,     Fix naming of Unix packages\n\n-  NET Core RID suffixes removed\n- `el7 centos` suffix added to RPM\n- `1ubuntu1 14 04 1` iteration used for DEB packages\n\n`~` cannot be used after `ubuntu1` because GitHub release renames it to\na ` `; additionally  no packages lack the final suffix ` 1`  While my\nmachine is ` 5` I could find no packages that went past ` 3`  so let\ s\nuse this to indicate that it works for `14 04 1` and forward \n\nWe are *not* recreating the alpha 9 packages  but will we rename them\naccordingly  This means that the filenames will be  correct  but the\nmeta-data will be out-of-date \n  
21718,     Add project lead names to governance (#1836)\n\n* add project lead names to governance\r\n* add links to GH profiles in governance\r\n  
21719,     Update changelog\n  
21720,     Update links for alpha 9\n\nAlso adds the Windows 8 1 build to the readme  and bumps the AppVeyor\nbuild number \n  
21721,     Update man page for ronn-formatting\n  
21722,     Merge pull request #1830 from alexandair/patch-2\n\nfix a typo in license_thirdparty_proprietary txt  
21723,     Merge pull request #1799 from mwrock/mw/actionable\n\nProvide a more actionable message when vcvarsall bat is missing  
21724,     fix a typo in license_thirdparty_proprietary txt\n\nChange PROPIETARY  to PROPRIETARY   
21725,     Fix download script for Ubuntu 16 04 (#1826)\n\nKept 14 04 for CI and because 14 04 is LTS  
21726,     Update KNOWNISSUES md (#1825)\n\n  
21727,     Merge pull request #1803 from mwrock/clean\n\nAdd a note about the dangers of VS builds and cleaning to fix  
21728,     Remove Windows-specific text from Linux man page (#1818)\n\n  
21729,     Create license for thirdparty proprietary file - Ensure installed root location contains this file (#1790)\n\nUpdate license_thirdparty_proprietary txt and update project json to include license in package \r\n  
21730,     Remove non-existing links from pull-request-process md\n  
21731,     Remove obsolete PR template links from docs\n  
21732,     add a note dangers of VS builds and cleanning to fix\n  
21733,     provide a more actionable message when vcvarsall bat is missing\n  
21734,     Update branch naming in git documentation (#1793)\n\nRemove statement about using  alias/feature-name   
21735,     Fix the test that fails in Travis CI build (#1792)\n\n  
21736,     Doc updates  remove PR template  update issue labels (#1776)\n\n* Remove PR template  update guidelines for PR\r\n\r\n* Update testing-guidelines md\r\n\r\n* Add clarification on when to use runtime/compiletime checks\r\n\r\n* Update issue label descriptions\r\n  
21737,     Merge pull request #1787 from PaulHigin/WorkingA\n\nPowerShell remoting over SSH   
21738,     Updated script to tag demo jobs and clean up afterwards; removed line that removes all jobs from start (#1783)\n\n  
21739,     Merge pull request #1784 from lzybkr/format_cleanup\n\nCleanup mis-formatting of preprocessor directives  
21740,     Update license rtf (#1768)\n\nUpdate license rtf  
21741,     Setting Initial OPS LocalMachine ExecutionPolicy to RemoteSigned (#1769)\n\n* Adding PowerShellProperties json to the build so ExecutionPolicy set to RemoteSigned at first run \r\n  
21742,     Update the job cache location on on windows platforms (#1740)\n\n* Update the job cache location on non-windows platforms  
21743,     Update KNOWNISSUES md (#1745)\n\n* Update KNOWNISSUES md\r\n\r\n* Updated with review feedback \r\n\r\nAll appropriate feedback has been incorporated into the document \r\n  
21744,     Merge pull request #1782 from PowerShell/mirichmo/fixing-remoting-install-script\n\nFixing remoting install script to parse the version # from a file  
21745,     These changes implement PowerShell remoting over SSH   The changes include feedback from code review comments \n  
21746,     Removed DefaultParameterSetName since it was unused \n  
21747,     Cleanup mis-formatting of preprocessor directives\n  
21748,     Fixing remoting install script so that it parses the verison number from powershell version\n  
21749,     Merge pull request #1774 from PowerShell/jianyunt/docs\n\nRemove the sections with empty contents which just got introduced in PR#1576  
21750,     Merge pull request #1767 from PowerShell/raghushantha-thirdpartynotices\n\nThird Party Notices for OSS components in PowerShell source  
21751,     Merge pull request #1772 from PowerShell/hiteshraigandhi-patch-1\n\nAdd reference to governance document on to readme  
21752,     Removed sections with empty contents which just got introduced in 1576 \n  
21753,     Add reference to governance document on to readme  
21754,     Third Party Notices for OSS components in PowerShell source  
21755,     Merge pull request #1757 from TravisEz13/FixAppVeyorRelease\n\nMade core build use release configuration  
21756,     Fix typo when getting Core build output location\nFail build if we fail to build PowerShell exe before running tests\nFail build if we fail to push an artifact because it doesn t exist \n  
21757,     Update additional places build configuration needs to be specified\n  
21758,     Made core build use release configuration\n  
21759,     Merge pull request #1337 from PowerShell/TestGetCommand\n\nAdd Pester test for TestGetCommand cs  
21760,     Merge pull request #1721 from PowerShell/dongbo/module-path\n\nAddress the side-by-side module path for OPS  
21761,     Merge pull request #1676 from PowerShell/NullableBooleanDCR\n\nAdd NullableBooleanDCR Pester Test  
21762,     Address review comments in test code\n  
21763,     Address review comments in product code\n  
21764,     Add NullableBooleanDCR Pester Test\n  
21765,     Use capital  PSMODULEPATH  in tests so that it works in unix\n  
21766,     Change  Platform XDG_Type  and  Platform SelectProductNameForDirectory  back to  public \nAdd CI tests for the module path change\n  
21767,     Fix tests that were broken by the sxs module path change  Also fix some unreliable tests \n  
21768,     update linux path doc\n  
21769,     Change runtime check to build check because  Platform XDG_Type  and  Platform SelectProductNameForDirectory  are make unix only\n  
21770,     Add the shared module path to unix (counterpart of  Program Files\\PowerShell\\Modules ) \nAlso make  Platform XDG_Type  and  Platform SelectProductNameForDirectory  unix build only  as they doesn t apply to windows \n  
21771,     Update module path calculation logic to support side-by-side \nUse  Path PathSeparator  instead of  ;  to separate paths  so that it uses  ;  on windows and  :  on unix \nAlso refactor some code as part of the change \n  
21772,     Merge pull request #1743 from andschwa/fix-appveyor-number\n\nUpdate AppVeyor build number to 6 0 0-alpha 8  
21773,     Update AppVeyor build number to 6 0 0-alpha 8\n  
21774,     Merge pull request #1742 from andschwa/alpha 8-release\n\nv6 0 0-alpha 8 release  
21775,     Fix Start-PSPackage for Release build on Windows\n  
21776,     Update releases on readme\n  
21777,     Update Linux / OS X installation documentation\n  
21778,     Update changelog for v6 0 0-alpha 8 release\n  
21779,     Merge pull request #1717 from andschwa/sxs\n\nSide-by-side Unix packages  
21780,     Merge pull request #1643 from PowerShell/AngelCalvo-patch-1\n\nUpdate windows-full md  
21781,     Merge pull request #1741 from PowerShell/raghushantha-windowsinstallinstructions\n\nUpdate min os allowed for MSI  
21782,     Update min os allowed for MSI\n\n#1737  
21783,     Merge pull request #1737 from PowerShell/raghushantha-MSIInstallerBranch\n\nUpdated MSI min supported OS to Win8 and above due to issue #1705  
21784,     Update releasing documentation\n  
21785,     Merge pull request #1540 from PowerShell/joey/governance\n\n[WIP  review of project governance   
21786,     Merge pull request #1738 from PowerShell/cchen/bugfix\n\nRemove Windows branding  
21787,     Merge pull request #1711 from PowerShell/johnkord-Linux_DSC_error_message\n\nError message for Linux DSC schema directory missing  
21788,     Remove Windows branding\n  
21789,     Updated MSI min supported OS to Win8 and above due to issue #1705\n  
21790,     address final PR/offline feedback for governance\n  
21791,     Support building Ubuntu 16 04 packages\n  
21792,     Add logic to rename package with runtime suffixed\n  
21793,     Fix permissions of package files\n\nThe DLLs should not be marked executable on Unix \n\nAlso remove deb-build-depends as the `dotnet` package is not yet\nuniversally available \n  
21794,     Enable side-by-side Unix packages\n  
21795,     Refactor Start-PSPackage\n\nMoved Unix package code into New-UnixPackage  switching on $Types to\ncall the appropriate function given the list of types \n\nAlso fixed bug with chmod on a symlink; it was unnecessary \n  
21796,     Include license during build\n\nRather than including it only at packaging  we should include this\nlicense as part of `dotnet build` and `dotnet publish` \n  
21797,     Merge pull request #1732 from daxian-dbw/master\n\nUpdate project json files to depend on Microsoft NETCore Runtime CoreCLR 1 0 4 and Newtonsoft Json 9 0 1  
21798,     Update to depend on Newtonsoft Json 9 0 1\n  
21799,     Update project json to depend on Microsoft NETCore Runtime CoreCLR 1 0 4\nThis new package contains 2 fixes that will unblock powershell remoting for windows OPS\n  
21800,     Merge pull request #1727 from PowerShell/SteveL-MSFT-patch-1\n\nUpdate readme md  
21801,     Merge pull request #1714 from PowerShell/mirichmo/native-binary-linking\n\nFixing Build and Linking of PwrshPlugin dll to Match the CoreCLR Native Binary Build Process  
21802,     Merge pull request #1707 from PowerShell/ShellInteropPesterTest\n\nAdd Shell Interop Pester Test  
21803,     Merge pull request #1729 from PowerShell/steve_demo_cleanup\n\ncleaning up placeholder files  leaving dsc ps1 as requested as stub f…  
21804,     Merge pull request #1728 from PowerShell/SteveL-MSFT-patch-2\n\nUpdate README md  
21805,     Merge pull request #1722 from vors/readme-you\n\nUse pronoun consistently in cloning instruction  
21806,     cleaning up placeholder files  leaving dsc ps1 as requested as stub for dsc demo\n  
21807,     Update README md  
21808,     Update readme md\n\nfixed typo  expanded first use of PS acronym  
21809,     Add Shell Interop Pester Test\n  
21810,     Use pronounces consistently in cloning instruction  
21811,     Fixing onecore lib link issue\n  
21812,     Fixing compile issue for FullClr and adding restart so that the WinRM changes take effect after the registration script runs \n  
21813,     Fixing CMakeLists txt files to produce a single plugin DLL that works in all supported OSs the same way CoreCLR builds coreclr dll\n  
21814,     Work in progress to modify the native binary CoreCLR build \n  
21815,     Merge pull request #1712 from PowerShell/ealexjordan/filenamecrash\n\nFixing Crash on File Name Extending BufferWidth  
21816,     Fix crash on file name being too long in prompt\n  
21817,     Merge pull request #1666 from PowerShell/ealexjordan/manps\n\nAdding Man Page For PowerShell  
21818,     Merge pull request #1695 from PowerShell/frangom/helpsystem\n\nFixing get-help on Linux  
21819,     Adding man page for linux\n  
21820,     Adding error message letting the user know they need to install PSDSC for Linux\n  
21821,     Updating tests to install the help content before running on Windows\n  
21822,     Adding Feature tag to help tests\n  
21823,     Breaking down help tests for CI and Feature test runs\n  
21824,     Fixing get-help on Linux\n  
21825,     Merge pull request #1698 from PowerShell/raghushantha-packagemetadatabranch\n\nUpdated *nix package metadata fields: Issue #1422  
21826,     Merge pull request #1701 from andschwa/unix-modules\n\nRemove unsupported commands from Unix modules  
21827,     Update known issues\n\nThe  unavailable cmdlets  section was removed pending a comprehensive\nlist compiled from the module declarations \n  
21828,     Remove Windows+Unix-Core\n\nThere are no longer module declarations that are identical between Core\nPowerShell on Windows and on Unix \n  
21829,     Remove unimplemented Management cmdlets from Unix\n\nThese are not currently implemented and so should not show up as\navailable \n\nThe *-Computer cmdlets are already not compiled for Unix (and so not\navailable)  so let s not declare them in the manifest \n\nThe Get-ComputerInfo cmdlet does not work on Unix and so should not be\nmade available \n\nTest-Connection depends on an unavailable WMI provider \n\nGet/Set-TimeZone are not yet ported \n  
21830,     Add copy of Management module declaration for Unix\n\nUnmodified so we can track changes \n  
21831,     Move Management module declaration to Windows-Core modules\n\nSince we need different versions for Windows and Unix \n  
21832,     Remove unimplemented Utility cmdlets from Unix\n\nConvertFrom-SddlString and Unblock-File are Windows-specific cmdlets\nwith no equivalent on Unix \n\nsquash! Remove Unblock-File from Unix\n  
21833,     Merge pull request #1694 from PowerShell/mirichmo/fixing-configfileaccessor-constructor\n\nResolves a JsonConfigFileAccessor constructor exception to fix #1689  
21834,     Add copy of Utility module declaration for Unix\n\nUnmodified so we can track changes \n  
21835,     Move Utility module declaration to Windows-Core modules\n\nSince we need different versions for Windows and Unix \n  
21836,     Fix welcome message in readme\n\nFirst word was misspelled  Welcome  and OS X was missing its space delimiter   
21837,     fix broken links in governance PR\n  
21838,     refactor maintainer and governance docs\n\nNow that we ve gotten enough of a sign-off\nfrom everyone involved in the governance\nprocess  the docs need to be reworked to use a\nconsistent terminology set  links  and directory\nstructure \n  
21839,     address offline feedback for governance\n  
21840,     respond to PR feedback on governance\n  
21841,     first pass of governance doc\n\nstill need to do a considerable rewrite of other\ncontributor docs in order to change terminology\nto align with governance md\n  
21842,     Whitespace change to retrigger a build\n  
21843,     Revert  Trying an idea to see if this will display the AppVeyor error since I cannot reproduce it locally  \n\nThis reverts commit 06c4d7e01fa7001d455380939977e477e01d4334 to undo an\nappveyor expiriment \n  
21844,     Removing directory creation from initialization \n  
21845,     Trying an idea to see if this will display the AppVeyor error since I cannot reproduce it locally \n  
21846,     Fixing JsonConfigFileAccessor constructor so that it doesn t throw exceptions when run as a regular user \n  
21847,     Merge pull request #1697 from PowerShell/mirichmo/pwrshplugin-hosting-fixes\n\nPwrshPlugin Fix to List Microsoft PowerShell CoreCLR AssemblyLoadContext Once in the TPA List  
21848,     Merge pull request #1699 from andschwa/execution-policy\n\nFix Execution Policy  
21849,     Correcting the fix to work with inbox PS\n  
21850,     Fixing load of ALC dll so it is only included in the TPA list once for side-by-side scenarios \n  
21851,     Merge pull request #1670 from PowerShell/jianyunt/docs\n\n Add Map Book for Experienced Bash users  
21852,     Fix publishOptions for powershell-unix\n\nWhile Unix builds were given their own module folder \nit was only being copied for build  not for publish \nthus breaking some builds \n  
21853,     Merge pull request #1641 from PowerShell/LanguagePrimitiveTest\n\nAdd Language Primitive Test  
21854,     Add Get/Set ExecutionPolicy cmdlets back to module\n\nWithout these declared in the Unix module manifest \nthe related tests fail as the cmdlets cannot be found \nThis is a regression \n  
21855,     Fix Start-PSPester setup\n\nStart-PSPester must ensure that the environment variable `PSMODULEPATH`\nis not set before starting the new PowerShell process \nIf it is set  then the tests are not guaranteed to be correct \nas they will be operating with the host process s `PSMODULEPATH` \nthus ignoring their own modules \n\nI also refactored the Start-PSPester command setup code \n  
21856,     Updated *nix package metadata fields: Issue #1422\n  
21857,     Add Get-Command Pester Test\n  
21858,     Add Language Primitive Pester Test\n  
21859,     Update windows-full md\n\nFixed typos     
21860,     Merge pull request #1647 from PowerShell/AngelCalvo-patch-3\n\nUpdate README md  
21861,     Merge pull request #1679 from andschwa/trace-command\n\nFix missing Trace-Command cmdlets  
21862,     Add Trace-Commands back to Utility module\n\nThis fixes a regression introduced by 0dd425da1 \n  
21863,     Run Trace-Command tests on CI\n  
21864,     Added Map book for bash users\n  
21865,     Merge pull request #1677 from alexandair/patch-2\n\nChange  Contribute  to  Contributing   
21866,     Merge pull request #1669 from andschwa/safe-hostname\n\nSafe hostname  
21867,     Move Unix class under Platform\n\nE g  SMA Platform Unix  not just SMA Unix \n  
21868,     Consolidate GetUserName code\n\nOnce  NET Core 1 1 becomes available  we can likely remove the entirety\nof CorePsExtensions cs \n  
21869,     Merge pull request #1674 from PowerShell/mirichmo/winrm-registration\n\nDelivering a script to register the WinRM endpoint  
21870,     Merge pull request #1672 from vors/links\n\nFix two broken links in docs  
21871,     Fixing capitalization of Copy-Item \n  
21872,     Adding WinRM registration script and pwrshplugin publishing \n  
21873,     Separated Windows binary build by CLR\n  
21874,     change the title of the article\n\nChange  Contribute  to  Contributing  to be consistent with other titles and section titles   
21875,     Merge pull request #1640 from alexandair/patch-2\n\nUpdate docs/FAQ md  
21876,     Update  gitignore to account for OS X specific temp files\n  
21877,     Fix broken link in docs/building/linux md\n  
21878,     Add missed Travis-CI badge image\n  
21879,     Merge pull request #1671 from lzybkr/remoting_fix\n\nFix remoting break caused by refactoring  
21880,     Update FAQ md  
21881,     Fix remoting break caused by refactoring\n\nRemoting apparently depends on the names of private fields\nnot changing between versions of PowerShell \n\nBecause of this  these refactorings broke remoting:\n* rename private fields\n* convert to auto-property\n  
21882,     Consolidate InternalGetFolderPath\n\nThis logic belongs in one place  not split in two \n  
21883,     Do not throw when getting Unix domain or user name\n\nIf the attempt to get the name fails  throwing an exception results in\nPowerShell crashing  Instead  we should simply return empty data \n\n unknown  is specifically not returned because it would be ambiguous; it\nis not impossible to have an actual user or domain named  unknown  \n  
21884,     Merge pull request #1659 from PowerShell/quoct/removepsl\n\nRemove PackageSourceListProvider from build  
21885,     Merge pull request #1667 from PowerShell/hiteshraigandhi-patch-1\n\nUpdate README md  
21886,     Merge pull request #1653 from andschwa/changelog\n\nImport Git tags to changelog  
21887,     Update README md  
21888,     Merge pull request #1638 from PowerShell/frangom/bugfixes\n\nFixing path to remove ILs after the ngen binary is generated  This fixes issue ##1636  
21889,     Fixing write-verbose call to let the user have control over it when calling the function\n  
21890,     Merge pull request #1661 from PowerShell/dongbo/get-pssession\n\nFix if/def guards to allow engine to load WsMan and Diagnostics snapins by default when RunspaceConfiguration is used to create a runspace  
21891,     Merge pull request #1662 from andschwa/ubuntu-16 04\n\nAdd Ubuntu 16 04 RID  
21892,     Fix issue #1609 - Get-PSSession -computername fails on nano\nRoot cause: Microsoft WSMan Management  and  Microsoft PowerShell Commands Diagnostics  are not put in the default snapin list for win-ops  and thus when a runspace is created using RunspaceConfiguration  those 2 are not loaded as snapins by default  which is a behavior change compared to Nano PS \nFix: Replace the guard  PORTABLE  to be  UNIX  so that they are in the default snapin list when targeting windows platform \n  
21893,     Merge pull request #1576 from PowerShell/migreene\n\nPowerShellGet demo and  getting started  doc changes  
21894,     Add Ubuntu 16 04 RID\n  
21895,     Merge pull request #1657 from alexandair/patch-3\n\nremoving OPS and a duplicate line in testing-guidelines md  
21896,     Merge pull request #1565 from PowerShell/ParameterBindingTest\n\nAdd Pester Test for ParameterBindingTests2 cs  
21897,     Update testing-guidelines md  
21898,     Remove building PSL\n  
21899,     Add ParameterBinding Pester Test\n  
21900,     Merge pull request #1627 from PowerShell/brucepayette/python-demo\n\nChecked in PowerShell python interop demo  
21901,     removing OPS and a duplicate line in testing-guidelines md\n\nChanging OPS to PowerShell \r\nChanging  PowerShell in Windows  to  Windows PowerShell  \r\nRemoving a duplicate line  test/powershell/Modules/Microsoft PowerShell Security  \r\nFixing a bunch of typos   
21902,     Updated to include Aleksandar s editorial changes; mostly python to Python\nin the comments \n  
21903,     Merge pull request #1655 from PowerShell/mirichmo/fixing-start-pspester\n\nFixing Start-PSPester for non-Windows environments  Fixes regression caused by PR #1530  
21904,     Merge pull request #1649 from PowerShell/AngelCalvo-patch-5\n\nUpdate testing-guidelines md  
21905,     Added README md to the demo \n  
21906,     Checked in PowerShell python interop demo\n  
21907,     Fixing Start-PSPester for non-Windows environments \n  
21908,     Merge pull request #1650 from PowerShell/raghushantha-msieulabranch\n\nEULA for MSI Installer  
21909,     Merge pull request #1651 from andschwa/andschwa/osx-fpm\n\nFix FPM on Travis CI OS X  
21910,     Fixing path to remove ILs after the ngen binary is generated \n  
21911,     Set merge=union for changelog\n\nThis will prevent the vast majority of conflicts with this file being\nupdated concurrently \n  
21912,     Import Git tags to changelog\n  
21913,     Merge pull request #1652 from PowerShell/raghushantha-thirdpartynotices\n\nCreate ThirdPartyNotices txt  
21914,     Create ThirdPartyNotices txt  
21915,     Use Ruby 2 2 1 explicitly on Travis CI OS X\n  
21916,     Use default Ruby on OS X\n  
21917,     Downgrade to Xcode 7 3\n  
21918,     Merge pull request #1530 from PowerShell/mirichmo/file-based-registry-support\n\nMirichmo/file based registry support Fixes #1187  
21919,     EULA for MSI Installer\n  
21920,     Reducing duplication of Environment variable extraction\n  
21921,     Resolving issue with Registry reads where values are not present \n  
21922,     Addressing reader and writer synchronization to the config file within the process \n  
21923,     Fixing implementation of GetModulePath to conform to the requirements of #1184 \n  
21924,     Reducing exception catching within ConfigPropertyAccessor classes to provide greater control to callers regarding the most appropriate way to handle them \n  
21925,     Removing dependency on JSON  Net for FullClr\n  
21926,     Fixing execution policy so test automation works\n  
21927,     Bug fixes and cleanup in preparation for push \n  
21928,     Added module path support  Not plumbed trhough yet \n  
21929,     Adding UpdatableHelp checks \n  
21930,     ExecutionPolicy is now working from JSON files\n  
21931,     Backing up in-progress changes to work on other stuff\n  
21932,     Update testing-guidelines md\n\nReplaced Open PowerShell with PowerShell  
21933,     Update README md  
21934,     Merge pull request #1645 from PowerShell/andschwa/osx-openssl\n\nFix OS X OpenSSL link for  NET Core  
21935,     Merge pull request #1633 from PowerShell/revert_psedition_namechange\n\nRevert the changes made in #1457  Desktop and Core are the PowerShell Edition names  Remove Linux as edition name   
21936,     Merge pull request #1637 from PowerShell/dongbo/ops-remoting\n\nMake the assembly version of AssemblyLoadContext dll to be 3 0 0 0  so that the ALC dll from OPS can work with existing native hosts in NanoServer  
21937,     Remove Travis CI cache\n\nIt is unbearably slow on OS X \n  
21938,     Fix OS X OpenSSL link for  NET Core\n\nDue to    com/Homebrew/brew/pull/597 \n NET Core s installation instructions of `brew link --force openssl` are\nnow invalid (for good reasons  due to security holes)  Until  NET Core\nupdates their libraries to find the OpenSSL libraries correctly  we can\nupdate them as part of `Start-PSBootstrap` \n\nSee    com/dotnet/cli/issues/3964\n  
21939,     Revert  Temporarily disable OS X builds on Travis CI \n\nThis reverts commit fef3871be2f6ed50335c57b9b495f07e44cacc9b \n  
21940,     Merge pull request #1632 from PowerShell/test/johnkord-Linux_DSC\n\nDSC MOF Compilation for Linux  
21941,     Disabling unit tests for OSX\n  
21942,     Adding Import-Module to MOF-Compilation tests\n  
21943,     Fixing up mof compilation test script to set PSMODULEPATH properly\n  
21944,     Adding DSC MOF compilation for Linux tests\n  
21945,     Adding libmi and PSDSC nuget deps\n  
21946,     Update windows-full md  
21947,     Make the assembly version of AssemblyLoadContext dll to be 3 0 0 0  so that the ALC dll from OPS can work with existing native hosts in NanoServer\n  
21948,     Merge pull request #1642 from PowerShell/andschwa/disable-osx\n\nTemporarily disable OS X builds on Travis CI  
21949,     Temporarily disable OS X builds on Travis CI\n\nOS X is failing due to home brew s OpenSSL package changes  Until we ve\nresolved  NET Core s use of the libraries  we need to disable the build \n  
21950,     Update docs/FAQ md\n\nFixing typos and formatting   
21951,     Reverting PSEdition name changes \n  
21952,     Removed Linux PSEdition name\n  
21953,     Remove redundent  ToLower() in PSDiagnostics psm1\n  
21954,     Revert  Merge pull request #1458 from PowerShell/psedition_rename \n\nThis reverts commit 042d1e99bb0661ae697dfef0ade6cc55f4cceb06  reversing\nchanges made to 105bf9c9ffbadd4f0e7d63b6113976521573e5ea \n  
21955,     Merge pull request #1571 from PowerShell/frangom/crossgen\n\nEnable crossgen for PowerShell binaries on Windows and Linux  
21956,     Merge pull request #1623 from PowerShell/jimtru/PSDriveFreeSpaceFix\n\nGet-PSDrive should report proper free space on all platforms  
21957,     Merge pull request #1622 from lzybkr/semver_remoting_fix\n\nFix remoting that broke from $PSVersionTable PSVersion use of SemanticVersion  
21958,     Fix inconsistent braces and whitespace in build psm1\n  
21959,     Fix libclrjit name for OS X\n\nIt s a dylib  not a so \n  
21960,     Add serialization test of SemanticVersion\n  
21961,     Set remoting PSVersionTable private data in a downlevel compatible manner\n  
21962,     Add serialization support for SemanticVersion\n  
21963,     Merge pull request #1620 from lzybkr/cleanup\n\nCleanup -  - R# refactoring  
21964,     Fix crossgen search for Ubuntu/CentOS\n  
21965,     Enable crossgen on CI\n  
21966,     Update Commands Utility csproj for WebCmdlet files\n  
21967,     Addressing code review comments\n  
21968,     Enable crossgen for PowerShell assemblies on Linux\n  
21969,     Refactoring - replace always null expressions with null\n  
21970,     Refactoring - use is operator instead of GetType() where possible\n  
21971,     Refactoring - use ?? in more places\n  
21972,     Refactoring - adjust modifiers declaration order\n  
21973,     Refactor - convert to auto-property\n\nMostly using R# to automatically refactor  with some manual\nfixups where it wouldn t work automatically (e g  xml comments\non fields) or some it seemed to miss \n\nSome minor code reformatting was also done on properties near\nother stuff I was manually inspecting \n  
21974,     Remove unused using statements\n  
21975,     update csproj references\n  
21976,     Enable crossgen for PowerShell binaries on Windows\n  
21977,     Change free/used calculation to be consistent across platforms\n\nadd a couple of tests to validate return values\n  
21978,     change linux diskfree calculations from using /bin/df as a source of data to [io driveinfo \n  
21979,     fix for Get-PSDrive to get free and used space on Non-Windows systems\n  
21980,     Merge pull request #1593 from PowerShell/ealexjordan/pscolors\n\nEalexjordan/pscolors  
21981,     Merge pull request #1619 from PowerShell/vors/mmi-alpha4\n\nBump MMI dependency to alpha04  
21982,     Merge pull request #1612 from PowerShell/jianyunt/docs\n\nRemoved license section  updated file header  fixed broken links   
21983,     Bump MMI dependency to alpha04\n\nalpha04 has following changes:\n- libmi so is not included in this package  It will be brough\n  as a separate nuget package later \n- all unix runtimes are replaced by generic unix runtimes to\n  enable easier builds on new unix platforms \n  
21984,     Merge pull request #1615 from PowerShell/vors/suffixes\n\nBe smarter about nuget package names on appveyor  
21985,     Removed file header section per comments from Joey \n  
21986,     Merge branch  master  of    github com/powershell/powershell into jianyunt/docs\n  
21987,     Merge pull request #1581 from PowerShell/AngelCalvo-patch-2\n\nUpdate README md  
21988,     Update README md\n\n Made some changes on package installation table -  I noticed some inconsistencies some places using How to Install  others Installation Instructions   So I cleaned up  and removed “How to” in favor of “install” and Installation Instuctions \n\nUpdate README md\n\nUpdate README md\n  
21989,     Merge pull request #1608 from PowerShell/vors/build-docs\n\nUpdate building instructions to use correct TOP directories  
21990,     Merge pull request #1547 from PowerShell/jameswtruher/TestGuidelineUpdate\n\nupdates from test-guideline PR to incorporate feedback  
21991,     Be smarter about nuget package names on appveyor\n  
21992,     Merge pull request #1501 from PowerShell/jameswtruher/CmdletTestMigration\n\nJameswtruher/cmdlet test migration  
21993,     Merge pull request #1604 from PowerShell/split-psrp-shared-library\n\nsplit the wsman apis into client/server shared libraries  
21994,     removed an empty legal-licensing md file \n  
21995,     Merge pull request #1607 from alexandair/patch-2\n\nUpdate installation/linux md  
21996,     Removed license section  updated file header  fixed broken links \n  
21997,     Merge pull request #1606 from PowerShell/vors/author\n\nRemove author tag from all project json files  
21998,     Update building instructions to use correct TOP directories\n  
21999,     Update installation/linux md\n\nFixing typo   
22000,     remove -PublishLocation\n  
22001,     update tests to include $IsCoreCLR rather than $IsCore\n\nalso fix archive test to be sure it gets the proper archive module (not the one that s somewhere in the filesystem)\n  
22002,     Merge pull request #1605 from PowerShell/vors/resgen\n\nC#-based resgen  
22003,     Merge pull request #1601 from PowerShell/travisez13/BuildWSManInCore\n\nCompile WSMan binaries when compiling for dot net core  
22004,     Remove author tag from all project json files\n  
22005,     Merge pull request #1599 from PowerShell/error-stream\n\nError stream  
22006,     Update json tests to be more cross-plat and handle multiple invocations\n\nonly create the enumtest type if it doesn t exist\ndon t try to compare line endings on json tests which contain arrays \nformatting of the output need not be validated\n  
22007,     update encoding on the test files - these are ascii\n  
22008,     create work-around for MacOS in handling wildcards\n  
22009,     Fix Get-Command tests to better handle non-Windows platforms \n\nset executable bit on Linux/MacOS as that s what determines whether something\nis executable  Also simplify partial path creation  only remove up to the first\ncolon  so those filesystems which have a single root are treated properly\n  
22010,     rename test files so they match map json and can be found by invoke-pester\n  
22011,     fix two more file copy targets\n\nthey weren t being recognized as pester tests because they didn t have the right name\n  
22012,     fix Archive module to work correctly when the DirectorySeparatorChar is  / \n\nrather than use either  /  or  \\   just use [io path ::DirectorySeparatorChar\n  
22013,     rename archive test file so it may be found by invoke-pester\n  
22014,     fix typo in archive test name\n\nit needs to have the correct name in order to be executed by invoke-pester\n  
22015,     migrated tests run clean on all platforms (locally)\n  
22016,     remove scheduled job tests\n  
22017,     remove scheduledjob cmdlet tests\n  
22018,     Add migrated files\n  
22019,     add missing sample archive file\n  
22020,     add map json file for migration of Pester cmdlet tests\n  
22021,     fix don t section so it s visible  
22022,     updates based on PR feedback\n  
22023,     Add images to this branch\n  
22024,     updates from previous PR to incorporate feedback\n  
22025,     Replace powershell-based resgen by dotnet C# based one\n  
22026,     Update  gitignore about  vscode\n  
22027,     Add dotnet-based resgen\n  
22028,     Compile WSMan binaries when compiling for dot net core\n  
22029,     split the wsman apis into client/server shared libraries\n  
22030,     Merge pull request #1603 from lzybkr/csproj_tweak\n\ncsproj fixes - add reference and fix assembly name so InternalsVisibl…  
22031,     csproj fixes\n\n- add some missing references\n- fix assembly name so InternalsVisibleTo works\n  
22032,     Merge pull request #1602 from alexandair/patch-2\n\nfixing casing and typos in windows-full md  
22033,     fixing casing and typos in windows-full md\n\nFixing casing for CoreCLR and FullCLR \r\nFixing a couple of typos   
22034,     Merge pull request #1514 from PowerShell/AdapterPesterTest\n\nAdd Adapter Pester Unit Test  
22035,     caps  Replace\n  
22036,     correct type in d$\n  
22037,     Context caps\n  
22038,     merge from master and resolve conflicts\n  
22039,     Working with PowerShell Objects\n  
22040,     Add Adapter Pester Unit Test\n  
22041,     Fixing default and error colors for PSReadLine\n  
22042,     Merge pull request #1594 from PowerShell/raghushantha-linuxinstall\n\nUpdates to Linux install instructions  
22043,     Add tests for Error stream\n  
22044,     Don t apply red color to error stream output\n  
22045,     Change formatter for ErrorRecord\n\nFix #1465\n\nOn Linux  it s common to use error stream (2) as an information stream \nThere is no errors in this case  it s just a way to report info \nWhen PowerShell redirects error stream  it wraps all output from stream 2\nin NativeCommandError ErrorRecord \n\nThat doesn t happen for interactive experience (when there is no\nredirection)  but it shows up in logs  scripting and non-console\npowershell hosts (i e  PowerShell ISE) \n\nHere we change the formatter  so we are keeping the ErrorRecords\nobjects  but we are changing their default representation \n\nIf it s a NativeCommandError  we don t use the regular ErrorRecord\nformatter  It allows us keep ErrorRecord object \nbut in redirection case it will look exectly like on the screen \n\nAlso  we are change NativeCommandErrorMessage to use one line per\nErrorRecord to enable this scenario \n  
22046,     Merge pull request #1598 from PowerShell/joey/license\n\nadd line breaks to MIT license  
22047,     Merge pull request #1591 from lzybkr/code_formatting\n\nCode formatting  
22048,     Merge pull request #1596 from PowerShell/raghushantha-windowsinstall-1\n\nUpdate Windows install instructions for MSI  
22049,     Update linux md  
22050,     Update linux md  
22051,     Update windows md  
22052,     Use nameof() where we use reflection\n\nWe use a lot of reflection  and when you rename a member (e g  when running\nthe code formatter)  it doesn t detect references where you re using reflection \n\nBy using nameof()  we can now find these references (e g  a build break) instead\nof failing at runtime \n  
22053,     Initial run of code formatter\n\nI (Jason Shirk) ran    com/dotnet/codeformatter with the default rules  basically:\n\n    codeformatter /nocopyright  /c:DEBUG UNIX CORECLR  @files rsp\n\nThis caused a few problems building  which were fixed up manually \n\nNotable changes:\n\n`this ` is removed unless needed to disambiguate \nprivate instance fields are renamed to have a `_` prefix \nprivate static fields are renamed to have a `s_` prefix \n\nI left some projects alone (like PackageManagement) and also left some generated code alone \n  
22054,     add line breaks to license\n  
22055,     Merge pull request #1597 from PowerShell/mirichmo/fixing-reverse-pinvoke\n\nFixing reverse PInvoke worker callback pointer structure layout to sy…  
22056,     Fixing reverse PInvoke worker callback pointer structure layout to synchronize it between managed and unmanaged code \n  
22057,     Merge pull request #1578 from alexandair/patch-2\n\nUpdating maintainers\\README  
22058,     Update windows md  
22059,     Update linux md  
22060,     Update linux md  
22061,     Update linux md  
22062,     Merge pull request #1592 from PowerShell/jianyunt/docs\n\nfixed the broken links and other minor updates due to the recent learning-powershell path changes   
22063,     fixed the broken links and other minor updates due to the recent learning-powershell path changes \n  
22064,     fixed the broken links and other minor updates due to the recent learning-powershell path changes \n  
22065,     Merge pull request #1551 from PowerShell/AngelCalvo-patch-3\n\nUpdate learning-powershell md  
22066,     Merge pull request #1580 from PowerShell/AngelCalvo-patch-1\n\nUpdate README md  
22067,     Update README md\n\nAdded link to the Windows Installation Pakage  
22068,     caps in title\n  
22069,     spaces in prompt examples\n  
22070,     caps for cmdlet\n  
22071,     remove publish commands and correct formatting of example\n  
22072,     Merge pull request #1577 from PowerShell/joey/license\n\nadd MIT license to root  
22073,     Merge pull request #1437 from PowerShell/johnkord-Linux_DSC\n\nEnabling DSC MOF compilation on Linux  
22074,     Linux DSC MOF compilation changes\n  
22075,     Updating maintainers\\  
22076,     update README with license info\n  
22077,     add MIT license to root\n  
22078,     example formattting\n  
22079,     Merge branch  master  into migreene\n  
22080,     Merge pull request #1573 from PowerShell/test/mmi-alpha02\n\nChange MMI package to alpha02  
22081,     Change MMI package to alpha02\n  
22082,     Merge pull request #1549 from PowerShell/AngelCalvo-patch-2\n\nUpdate README md  
22083,     Merge pull request #1557 from PowerShell/quoct/addpseditiontag\n\nAdd a tag to check for PSEdition for Find-Packageprovider  
22084,     page to describe creating and working with simple script files\n  
22085,     Merge pull request #1510 from PowerShell/maertend-patch-3\n\nDelete rest ps1  
22086,     Merge pull request #1570 from PowerShell/test/fix-master\n\nRevert back to old MMI package  until we fix regression  
22087,     Merge pull request #1564 from PowerShell/AngelCalvo-patch-4\n\nUpdate README md  
22088,     Merge pull request #1566 from PowerShell/andschwa/chars\n\nFix PSReadLine custom key binding on Linux  
22089,     Revert back to old MMI package  until we fix regression\n  
22090,     demo PowerShellGet repositories\n  
22091,     Fix Microsoft PowerShell GraphicalHost/map json\n  
22092,     Fix Microsoft PowerShell Commands Utility/map json\n  
22093,     Merge pull request #1560 from PowerShell/vors/sd-sync\n\nBring the latest changes from windows source tree  
22094,     Add regression tests for custom key bindings\n\nAlso tests capitalized key bindings  hence the need to compare case\nsensitively \n  
22095,     Fix comparison for default ConsoleKey\n  
22096,     Use GetCharFromConsoleKey on Windows\n\nDue to virtual key codes on Windows  simple chords like Ctrl+  are not\nrecognized as such  Instead  the ConsoleKey is Oem6  and the KeyChar is\nan control code \n  
22097,     Revert changes made to GetGestureString\n\nGiven the use of key KeyChar  the original implementation is now\nportable \n  
22098,     Implement TryParseCharLiteral for Linux\n  
22099,     Remove GetCharFromConsoleKey\n\nThe ConsoleKey enum does not necessarily cover all possible chars \nMoreover  the times we need to obtain this info  we already have it \n  
22100,     Update README md  
22101,     Skip $input type test per #1563\n  
22102,     Replace Uri UriSchemeHttps by https in PackageListParser\n\nUri UriSchemeHttps is not available on CoreCLR\n  
22103,     Integrate changes between [SD:717473  and [SD:725290 \n  
22104,     Consolidate map json files under Microsoft PowerShell Commands Utility\n\nFix #1489\n  
22105,     Merge pull request #1562 from PowerShell/dongbo/mmi-nupkg\n\nUpdate project json files to keep sync with the new MMI nuget package  
22106,     Merge pull request #1561 from PowerShell/vors/pr-links\n\nUpdate PULL_REQUEST_TEMPLATE md  
22107,     Update project json files to keep sync with the new MMI nuget package\n  
22108,     Update PULL_REQUEST_TEMPLATE md  
22109,     Update README md  
22110,     Update learning-powershell md\n\nRemoving the world  Professional  after DevOps  
22111,     Merge pull request #1546 from PowerShell/andschwa/docs\n\nClean up documentation  
22112,     Move build badges\n\n* Remove superfluous link to releases page\n* Remove superfluous link to docs/build\n* Add column back for install instructions\n* Add extra link to the FAQ\n  
22113,     Merge pull request #1554 from PowerShell/vors/env\n\nMake Get-Item env: case-aware on Unix  
22114,     Merge pull request #1552 from PowerShell/vors/modules\n\nCreate Unix-only Modules folder  
22115,     Update releasing documentation\n  
22116,     Update contributing guidelines\n\n* Links fixed \n* Link to maintainers removed; superfluous in this document \n* TODO added to changelog \n  (I don t like this but was hesitant to remove it) \n* Periods and spelling fixed \n  
22117,     Add a tag to check for PSEdition for Find-Packageprovider\n  
22118,     Make Get-Item env: case-aware on Unix\n\nFix #1196\n  
22119,     Update src/Modules/README md\n  
22120,     Update map json in src/Modules\n  
22121,     Move Microsoft PowerShell ODataUtils to Full windows only modules\n\nFix #1548\n  
22122,     Scope Microsoft PowerShell Security exported functions for unix\n  
22123,     Fix Start-DevPowerShell to use upercase for PSMODULEPATH (unix)\n  
22124,     Make 101 md the tree s README md\n  
22125,     Consolidate releasing and maintainers docs\n  
22126,     Make maintainers md the tree s README md\n  
22127,     Rewrite README\n  
22128,     Make learning-powershell md the tree s README md\n  
22129,     Fix learning-powershell path\n\nThere was a random capital S \n  
22130,     Merge pull request #1518 from PowerShell/AngelCalvo-patch-3\n\nUpdate learning-powershell md  
22131,     Update learning-powershell md  
22132,     Update learning-powershell md  
22133,     Update learning-powershell md  
22134,     Merge pull request #1545 from PowerShell/raghushantha-windowsinstall-1\n\nUpdated supported Windows versions/platforms/SKUs/Arch for MSI/APPX/WSA packages  
22135,     Merge pull request #1534 from PowerShell/vors/cd\n\nMake  cd  go to the HOME directory  
22136,     Add CI tag to SemanticVersion Tests ps1\n  
22137,     Make  cd  go to the HOME directory\n  
22138,     Merge pull request #1523 from lzybkr/semver\n\nSemver  
22139,     Merge pull request #1516 from PowerShell/AngelCalvo-patch-1\n\nUpdate README md  
22140,     Merge pull request #1526 from PowerShell/jameswtruher/TagPesterTests\n\nJameswtruher/tag pester tests  
22141,     Update powershell-beginners-guide md  
22142,     Update using-ise md  
22143,     Merge pull request #1539 from PowerShell/raghushantha-linuxinstall\n\nBetter Linux install instructions  
22144,     Update windows md  
22145,     Merge pull request #1544 from PowerShell/vors/ps-template\n\nSimplify PR template  
22146,     Improve Linux installation instructions\n  
22147,     Merge pull request #1541 from PowerShell/vors/start-devpowershell\n\nStart-DevPowerShell for all platforms and editions  
22148,     Simplify PR template\n\n- Fix broken   /docs link by using absolute url\r\n- Remove html comments  they are confusing in raw view\r\n- Be more specific about  code up-to-date with master : rebased  
22149,     make sure that all tests are using the proper $IsCoreCLR variable instead of $IsCore\n  
22150,     Fix Start-DevPowerShell for PowerShellCore edition on windows\n  
22151,     Merge pull request #1537 from PowerShell/vors/readme\n\nFormatting in top-level README md  
22152,     Fix Start-DevPowerShell call from appveyor yml\n  
22153,     mark the add-type tests as pending for $IsCore\n  
22154,     Merge pull request #1542 from PowerShell/raghushantha-windowsinstall\n\nBetter Windows Install instructions!  
22155,     fix bad tag to check tag checking\n  
22156,     purposefully create a bad tag to test tag checks for build\n  
22157,     update appveyor yml to check for bad test tags\n\nadd the function to check tags to build psm1\nrename the parser tests so they actually execute\n  
22158,     Be sure to invoke only CI tests in AppVeyor\n  
22159,     marked some package tests as feature rather than CI\n  
22160,     add tags to describe blocks that didn t have any tags\n  
22161,     final changes for start-pspester\n  
22162,     all tests are now marked with proper tag\n\nalso  update build psm1 to be more flexible\n  
22163,     Add changes to build psm1 to run only CI tests\n  
22164,     changes tags for tests\n\nStart using tags CI  Feature  Scenario\n  
22165,     Better Windows Install instructions!  
22166,     Fix Start-DevPowerShell for Unix\n  
22167,     Change $PSVersionTable PSVersion to 6 0 0-alpha\n  
22168,     Add SemanticVersion tests\n  
22169,     Add SemanticVersion type\n  
22170,     Teach Start-DevPowerShell run CoreCLR version\n  
22171,     Merge pull request #1538 from PowerShell/vors/sma-only\n\nMake Start-PSBuild -SMAOnly Unix-friendly  
22172,     Merge pull request #1464 from PowerShell/kkaczma/mc\n\nFixing mc exe detection and installing required tools in Start-PSBootstrap  Fixes #1451  
22173,     Make Start-PSBuild -SMAOnly Unix-friendly\n  
22174,     Merge pull request #1521 from PowerShell/AngelCalvo-patch-4\n\nUpdate powershell-beginners-guide md  
22175,     Formatting in top-level README md\n\n- Remove redundant  Build from Source  column  since the Section name already implies it\r\n- Lists with 1 bullet-point are weird-looking  especially sub-lists  
22176,     Merge pull request #1535 from PowerShell/RaghuS-PackagingBranch\n\nFix for handling alphanumeric characters in package build field  
22177,     Fix for handling alphanumeric characters in package build field\n  
22178,     Merge pull request #1512 from PowerShell/vors/add-type\n\nAdd-Type: add mscorlib dll to the list of default references  
22179,     Add test for Add-Type System Runtime Serialization Primitives dll TPA\n  
22180,     Address some feedback\n\n- Name fields more descriptive\n- Use  AddRange instead of foreach\n  
22181,     Improve Start-PSBuild -Clean\n\nAlways do the clean in the root folder\n  
22182,     Add-Type: add mscorlib dll to the list of default references\n\nFix #1361\nOn CoreCLR 1 0 0 RTM the layout changed compare to RC2 \nThis change accounts for it \nThis change also cleans up some left-overs for SecureString ref \n  
22183,     Merge pull request #1533 from PowerShell/vors/sdk\n\nMicrosoft PowerShell SDK  
22184,     Merge pull request #1529 from PowerShell/psget_demo_update\n\nMoving the PowerShellGet ps1 into Demos\\PowerShellGet folder   
22185,     Fix TypeGen with the new layout\n  
22186,     Rename src/powershell-windows to src/powershell-win-core\n\n- Update build psm1\n- Update docs\n  
22187,     Introduce Microsoft PowerShell SDK\n\n- introduce SDK project with our dependencies and CoreCLR framework\n  for runtime \n- Move dependencies for Full from ConsoleHost to powershell-win-full\n- make powershell-win-full Top-level project\n- Change build psm1 to do publish for -FullCLR build\n- Update docs\n  
22188,     Moving the PowerShellGet ps1 into Demos\\PowerShellGet folder \n\nMoving the PowerShellGet ps1 into Demos\\PowerShellGet folder \n  
22189,     Merge pull request #1519 from PowerShell/vors/json\n\nFix ConvertFrom-Json to handle mutlilines  
22190,     Merge pull request #1476 from PowerShell/andschwa/iscore\n\nRename IsCore to IsCoreCLR  
22191,     Merge pull request #1517 from PowerShell/AngelCalvo-patch-2\n\nUpdate breaking-change-contract md  
22192,     Rename IsCore to IsCoreCLR\n  
22193,     Re-enable assembly name comparison\n  
22194,     Use CORECLR to guard analysis progress record\n  
22195,     Clean up ApplicationBase work-around\n  
22196,     Clean up PSMODULEPATH Windows work-around\n  
22197,     Remove deprecated guard of resource verification\n  
22198,     Fix ConvertFrom-Json to handle mutlilines\n\nFix #956\n\nAdd Newtonsoft Json JsonSerializationException to catch block\nthat determines which mode to use: single-string or multi-string\n  
22199,     Update powershell-beginners-guide md  
22200,     Update breaking-change-contract md  
22201,     Update learning-powershell md  
22202,     Merge pull request #1505 from PowerShell/vors/remove-docs-readme md\n\nRemove docs\\README md  
22203,     Update breaking-change-contract md  
22204,     Update README md  
22205,     Merge pull request #1515 from PowerShell/krbash-demo-update\n\nMultiple Apache bug fixes  
22206,     Fix vhost directory finding function in Apache demo\n  
22207,     Merge pull request #1503 from PowerShell/krbash-demo-update\n\nUpdate apache & systemd demos  
22208,     Merge pull request #1481 from lzybkr/jasonsh/docs\n\nCoding guideline docs and other minor doc updates  
22209,     Update issue labels doc\n  
22210,     Coding guidelines first cut\n  
22211,     Delete rest ps1\n\nNo longer necessary as there is a rest folder  
22212,     Merge pull request #1504 from PowerShell/maertend-patch-2\n\nCreated readme md  rest folder  and added the up to date script files  
22213,     Merge pull request #1509 from PowerShell/andschwa/fix-alc-for-unix\n\nAdd WSManPluginWrapper to AssemblyLoadContext  
22214,     Update readme md  
22215,     Update readme md  
22216,     Add files via upload  
22217,     Update readme md  
22218,     Add files via upload  
22219,     Add WSManPluginWrapper to AssemblyLoadContext\n\nThis function is required for PSRP on Linux  as we need to wrap the call\ninto WSManPluginManagedEntryWrapper InitPlugin such that it is invoked\nvia reflection from an assembly loaded with our custom context \n  
22220,     Merge pull request #1502 from PowerShell/vors/full-docs\n\nAdd a reference to windows-full md to windows-core md  
22221,     Remove docs\\README md\n  
22222,     Create readme md  
22223,     Confirming before installing choco and improving prompt message\n  
22224,     Not installing choco when prerequisites present and confirming before updating env variable\n  
22225,     Installing Windows 10 SDK\n  
22226,     Removing incorrect warning about supportability and using precheck\n  
22227,     Installing cmake\n  
22228,     Installing chocolatey and updating machine path\n  
22229,     -refactor Apache demo completely\n-bug fix in SystemD (json) demo\n-Move demos to self-contained folders\n  
22230,     Add a reference to windows-full md to windows-core md  
22231,     Merge pull request #1500 from PowerShell/bmanikm-patch-1\n\nRemoved invalid  Open PowerShell  tag based search   
22232,     Merge pull request #1498 from PowerShell/vors/docs\n\nMove files from docs/workflow to docs/dev-process  
22233,     Removed invalid  Open PowerShell  tag based search \n\nRemoved invalid  Open PowerShell  tag based search   
22234,     Merge pull request #1496 from PowerShell/vors/links\n\nFix links in docs  
22235,     Merge pull request #1490 from PowerShell/mirichmo/pwrshplugin-optimization-and-build-fix\n\nFixing bug in pwrshplugin config file reader and wrapping mc exe call…  
22236,     Merge pull request #1497 from PowerShell/andschwa/travis-whitelist\n\nWhitelist master and test branches for Travis CI  
22237,     Merge pull request #1468 from PowerShell/frangom/webcmdlets\n\nPort Invoke-WebRequest/RestMethod to OPS  
22238,     Move files from docs/workflow to docs/dev-process\n\nRemove branch-structure md\n  
22239,     Merge pull request #1494 from PowerShell/vors/start-pspester\n\nSimplify Start-PSPester  
22240,     Guard ProgressPane for pseudo-TTYs\n\nAgain due to the fact that relying on Console IsOutputRedirected (as\nSystem Console does for these APIs) causes bugs when pseudo-TTYs are\nused (since the output is not redirected  but the APIs nonetheless can t\nbe used properly)  So we ran into a problem where the value of CursorTop\nand Console BufferHeight were lies  and so we accidentally attempted to\nset it numbers below zero  Guard everything \n  
22241,     Remove deprecated catch\n\nThese colors can be set now \n  
22242,     Adding WebCmdlets tests\n  
22243,     Addressing code review comments about the mshtml isolation work \n  
22244,     Make Invoke-WebRequest cmdlet work on CoreCLR without mshtml\n  
22245,     Added new file structure for CoreCLR and FullCLR files \n  
22246,     Moved WebCmdlet files to subfile  and added new file structure for CoreCLR and FullCLR files \n  
22247,     Whitelist master and test branches for Travis CI\n\nOnly pull requests  merges to master  and branches starting with the\nprefix  test  will trigger Travis CI builds \n  
22248,     Merge pull request #1495 from PowerShell/vors/gitignore\n\nUpdate  gitignore files  
22249,     Remove non-used link references\n  
22250,     Fix broken links\n  
22251,     Update  gitignore files\n  
22252,     Fix links in powershell-repository-101 md  
22253,     Simplify Start-PSPester\n\nPester already handles folder vs file \nThere is no need to have custom logic in Start-PSPester \n  
22254,     Merge pull request #1477 from PowerShell/vors/config\n\nCreate separate Top-level directory per platform  
22255,     Update building/internals md docs\n  
22256,     Update  gitignore to ignore dlls and pdbs\n  
22257,     Copy pwrshplugin into the Full CLR version artifacts\n  
22258,     Create separate Top-level directory per platform\n\n- Replace src\\powershell top level project by two\n  new root-level projects:\n    - src\\powershell-unix\n    - src\\powershell-windows\n- Break src\\Modules into more granular structure:\n  - Shared\n  - Windows+Unix-Core\n  - Windows-Core\n  - Windows-Core+Full\n  - Windows-Full\n  - To be created: Unix-Core  We will do it as a separate PR\n- Fix #1122 : Platform-specific set of Modules (and assemblies)\n- Fix Start-TypeGen to work with new top level folders layout\n  
22259,     Merge pull request #1492 from PowerShell/hiteshraigandhi-patch-1\n\nDelete code-review-guidelines md  
22260,     Delete code-review-guidelines md\n\nThis is not required   
22261,     Fixing bug in pwrshplugin config file reader and wrapping mc exe calls in vcvarsall bat \n  
22262,     Merge pull request #1487 from PowerShell/andschwa/convert-utf\n\nConvert UTF-16 files to UTF-8  
22263,     Merge pull request #1482 from PowerShell/RaghuS-PackagingBranch\n\nGenerate consistent package names for various Win platforms  
22264,     Convert UTF-16 files to UTF-8\n  
22265,     Merge pull request #1485 from PowerShell/vors/execution-policy-tests\n\nScope ExecutionPolicy tests to current user to allow it run without admin escalation  
22266,     Merge pull request #1483 from lzybkr/if_unix\n\nChange preprocessor macro LINUX to UNIX  
22267,     Update src/powershell-native/ gitignore\n  
22268,     Scope ExecutionPolicy tests to Process\n\nAllow it run without admin escalation\n  
22269,     Merge pull request #1474 from PowerShell/vors/remove-cimcmdlets-binary\n\nRemove *BinaryMiLog cmdlets  
22270,     Merge pull request #1480 from PowerShell/psget\n\nUpdating Test-RunningAsElevated to return true on *nix and OS X    
22271,     Merge branch  master  of    com/powershell/powershell\n  
22272,     Merge branch  jianyun/docs \n  
22273,     Change preprocessor macro LINUX to UNIX\n  
22274,     Generate consistent package names for various platforms\n  
22275,     Use one fragment per line in Markdown\n  
22276,     Updating an error message\n\nUpdating an error message\n  
22277,     Merge pull request #1472 from PowerShell/andschwa/externalconsole\n\nEnable external console for VS Code debugging  
22278,     Updating Test-RunningAsElevated  to return true on *nix and OS X \n\nPermission models on *nix can be very complex  to the point that you\ncould never possibly guess without simply trying what you need to try;\nThis is totally different from Windows where you can know what you can\nor cannot do with/without admin rights \n  
22279,     Seperated Commercial Resources from Free ones and other minor fixes \n  
22280,     Merge pull request #1470 from PowerShell/psget\n\nPowerShellGet demo script  
22281,     Merge pull request #1453 from alexandair/patch-1\n\nAdded newlines  Removed commercial resources   
22282,     Merge pull request #1467 from PowerShell/RaghuS-Demos\n\nMove install script to demos/install folder  
22283,     Remove *BinaryMiLog cmdlets\n  
22284,     Update debugging instructions for VS Code\n  
22285,     Enable external console for VS Code debugging\n\nInstead of half-running PowerShell with -noninteractive (and expecting\nthe user debugging to enter more arguments)  the latest stable version\nof VS Code allows us to launch an external console  This requires either\nGnome Terminal or xterm (sadly not Xfce Terminal)  but given either (and\nxterm is almost always available to install)  we can now launch an\ninteractive PowerShell session to debug \n  
22286,     Merge pull request #1458 from PowerShell/psedition_rename\n\nRename Desktop & Core PSEditions to WindowsPowerShell & PowerShellCore  
22287,     Updating the demo script \n  
22288,     Rename Install sh to install sh  
22289,     Rename demos/Install sh to demos/install/Install sh  
22290,     Merge pull request #1452 from PowerShell/vors/remove-links\n\nRemove unusable links from the source code  
22291,     Create install ps1  
22292,     PowerShellGet demo\n\nPowerShellGet demo\n  
22293,     Merge branch  psget  of    com/PowerShell/PowerShell into psget\n  
22294,     Updating PowerShellGet demo\n  
22295,     PowerShellGet demo script\n\nPowerShellGet demo script\n  
22296,     Merge pull request #1463 from PowerShell/vors/token\n\nMove GITHUB_TOKEN in tools/download sh  
22297,     Merge branch  master  into psedition_rename\n  
22298,     Updating the  Should have the correct edition  test\n\nUpdating the  Should have the correct edition  test\n  
22299,     Merge pull request #1462 from PowerShell/johnkord-MMI_full_version\n\nSetting MMI dependency in SMA to full version instead of wildcard  
22300,     Merge pull request #1435 from PowerShell/andschwa/commandlinetoargv\n\nRemove dead code around `CommandLineToArgv`  
22301,     Merge pull request #1460 from lzybkr/jasonsh/CronTab-Demo\n\nAdd crontab demo  
22302,     Fixing mc exe detection\n  
22303,     Move GITHUB_TOKEN in tools/download sh\n  
22304,     Setting MMI dependency in SMA to full version instead of wildcard\n  
22305,     Remove CommandLineParameterBinderNativeMethods\n\nThis was dead code  PreParseCommandLine was called only when tracing was\nenabled  which meant that the tracing itself was useless  as it was not\ntracing what the actual code was doing \n\nI believe the intention of this tracing was to  guess  how the native\ncommands on Windows *might* parse their command-line arguments  but the\ntraced result was not guaranteed to be accurate  Since we cannot provide\naccurate tracing  the tracer was removed in its entirety \n\nThe PreParseCommandLine function was the only place where\nCommandLineToArgv was called  so with it removed  the entire native\nmethods class here can be removed \n  
22306,     Remove managed CommandLineToArgv\n\nIt is entirely unused \n  
22307,     Add README\n  
22308,     cleanup demo script\n  
22309,     Add -Force to Remove-CronJob\n  
22310,     Don t use Invoke-Expression\n  
22311,     Fix Remove-CronTab to only remove the correct job(s)\n  
22312,     Move crontab demo to it s own directory\n\nAlso change CronTab psd1 encoding to ASCII\n  
22313,     Add argument completion for -UserName\n  
22314,     Merge pull request #1456 from PowerShell/hiteshraigandhi-patch-1\n\nCreate README md  
22315,     Merge pull request #1454 from PowerShell/jianyunt/learnps\n\nadded  recursive cloning  back to readme per request #1197  
22316,     Updating PowerShellGet demo\n  
22317,     Merge branch  master  into psedition_rename\n  
22318,     Update PSEdition values to Rename Desktop & Core to WindowsPowerShell and PowerShellCore\n\n$PSVersionTable PSEdition currently supports Desktop and Core enums \nBecause PowerShell is going to be Open and also available on Linux/Mac\nfrom August  we decided to rename these values so as to make it clear to\nthe end user \nWe decided to use the names WindowsPowerShell PowerShellCore \n  
22319,     Merge pull request #1447 from PowerShell/jameswtruher/LanguageTestMigration\n\nlanguage pester test migration - woo - adding 800 more tests  
22320,     Merge pull request #1439 from PowerShell/FixMaster\n\nChanged Find-Package test to  SLOW  to fix master  
22321,     Merge pull request #1404 from PowerShell/ParsePesterUnitTest\n\nAdd remain part of Parser Pester Unit Test  
22322,     Merge pull request #1449 from PowerShell/vors/git-rebase\n\nSimplify update sync local repo workflow in powershell-repository-101 md  
22323,     Create README md  
22324,     Updated the Downloading Source code section to address the feedback from lzybkr \n  
22325,     Merge pull request #1448 from PowerShell/writeprogress\n\nWrite-Progress  
22326,     Merge pull request #1436 from PowerShell/vors/sma-only\n\nAdd Start-PSBuild -SMAOnly option for faster incremental builds  
22327,     added  recursive cloning  back to readme per request #1197\n  
22328,     Added newlines  Removed commercial resources \n\nAdded newlines following one-sentence-per-line principle \r\nFixed typos \r\nRemoved commercial resources from  More Reading  section \r\nImplemented Joey\ s suggestions   
22329,     Remove unusable links from the source code\n  
22330,     Used method from PR comments to find powershell\nreplaced dir with get-childitem\nused appropriate path when importing pester\nverified failure count was 0\nsplit test case verification into individual it s so we get all the info \n  
22331,     made powershell invoke compatible with linux\n  
22332,     Removed test for appveyor yml\n  
22333,     Made the test run in new powershell\nRan the test with the same filter\nImported the result\ncleaned up the test run\n  
22334,     Added CI Tag to sample\n  
22335,     Made appveyor exclude  slow  tests\n  
22336,     Changed Find-Package test to  SLOW \n  
22337,     Merge pull request #1396 from alexandair/aleksandar\n\nUpdate learning-powershell md  
22338,     Merge pull request #1402 from alexandair/patch-5\n\nUpdate README md  
22339,     Merge pull request #1401 from alexandair/patch-4\n\nUpdate README md  
22340,     Merge pull request #1398 from alexandair/patch-1\n\nUpdate submodules md  
22341,     Update learning-powershell md\n\nResolving conflicts (second try)   
22342,     Remove FullCLR artifacts from installation instructions\n\nWe don t support FullCLR install  
22343,     Simplify update sync local repo workflow in powershell-repository-101 md\n\nThe best way to sync a branch for our purposes is to rebase\r\non origin/master  
22344,     Update learning-powershell md\n\nResolving conflicts   
22345,     Initial full draft document\n\nThis is the initial draft of the PowerShell breaking changes guidelines documents  NOTE: this document is heavily based on the  NET Core breaking changes document   
22346,     Merge pull request #1444 from PowerShell/travisez13/ReadmeFixes\n\nFixes to readme  
22347,     Fix removing all lines from crontab\n  
22348,     Merge pull request #1399 from alexandair/patch-2\n\nUpdate windows md  
22349,     Merge pull request #1400 from alexandair/patch-3\n\nUpdate resources md  
22350,     fix Get-PSBreakpoint test to not require 0 as the breakpoint id\n\nEssentially  other tests may set breakpoints and the Id is ever\nincreasing  so a test for Id 0 will only be true if this is the\nfirst time a breakpoint has been set in this session\n  
22351,     tests now run clean on Windows and Linux\n  
22352,     Language tests now run clean on Linux\n  
22353,     Add new test files to Language directory\n  
22354,     fixed up incorrect cases\n  
22355,     Add map json for language test migration\n  
22356,     Clarified how to install OS X \n  
22357,     Clarified the Get PowerShell instructions\n  
22358,     Update windows md\n\nGrouped URL tags   
22359,     Simplified over complicated table into single link \nRemoved redundant contributing text and replaced with link to contributing doc \nRemoved maitaner specific text and replaced with link to contributor specific section for the topic\n  
22360,     Update resources md  
22361,     Changing description of SetBufferContents function\n  
22362,     Implementing Write-Progress using SetBufferContents\n  
22363,     Merge pull request #1414 from PowerShell/mirichmo/add-pwrshplugin-to-build\n\nMirichmo/add pwrshplugin to build  
22364,     Add Start-PSBuild -StopDevPowerShell switch\n  
22365,     Add Start-PSBuild -SMAOnly option for faster incremental builds\n  
22366,     Merge pull request #1387 from PowerShell/travisez13/contributionGuideUpdate\n\nDraft of Contribution Guide update  
22367,     Cleaning up build psm1 per code review comments \n  
22368,     Fixing comment support for the ConfigFileReader\n  
22369,     Positioning powershell exe in Microsoft PowerShell ConsoleHost for consumption by Start-DevPowerShell\n  
22370,     Adding ConfigFileReader back into the plugin and fixing it to more efficiently parse the configuration file \n  
22371,     Additional fixes in preparation for review and pull request\n  
22372,     Resolved link issues to run pwrshplugin dll on Nano Server and Windows 10\n  
22373,     Backing up changes where the CoreCLR version runs on Nano Server  It still has the pwrshplugin!WSManPluginStartup call issue \n  
22374,     Additional code changes and link fixes\n  
22375,     Initial changes to split the CMake project into a hierarchical set of CMakeLists txt files\n  
22376,     removed link and mention of issue template\nAddress Addressed @jianyun `s PR comments\n  
22377,     Addressed @jianyun `s and @vor  s PR comments\n  
22378,     Addressed @jianyun `s PR comments\n  
22379,     Drafted update to contribution guidelines\n  
22380,     ignored VS Code Files\n  
22381,     Merge pull request #1423 from PowerShell/andschwa/fix-rm-in-tests\n\nFix use of rm alias in tests  
22382,     Mark feed dependent NuGet tests as pending\n\nThe feed/credential combo has stopped working  breaking all CI runs \n  
22383,     Mark failed NuGet test as pending\n\nOnce the clean-up stage on Linux / OS X was fixed  this test stopped\npassing  This test should be fixed \n  
22384,     Fix use of rm alias in tests\n\nThis is not an alias on Linux / OS X \n  
22385,     PowerShellGet demo script\n\nPowerShellGet demo script\n  
22386,     Use class instead of PSObject for Get/Remove-CronJob\n  
22387,     Merge pull request #1429 from PowerShell/psget\n\n[PowerShellGet  Enabling Proxy support on Linux   
22388,     Merge pull request #1428 from PowerShell/andschwa/xmldoc\n\nEnable XML documentation generation  
22389,     Merge pull request #1397 from alexandair/powershell-beginners-guide-edits\n\nUpdate powershell-beginners-guide md  
22390,     Merge pull request #1419 from alexandair/patch-6\n\nUpdate linux md  
22391,     Update learning-powershell md\n\nFixed Verb-Noun typo   
22392,     Merge pull request #1427 from alexandair/patch-7\n\nUpdate PowerShell/README md  
22393,     Update README md\n\nResolving conflicts   
22394,     Update powershell-beginners-guide md\n\nChanging descriptions for cmdlets with a synopsis from the help files   
22395,     Update powershell-beginners-guide md\n\nFixed  Hello world!  example and changed test ps1 to test txt   
22396,     Enable Check-PSGalleryApiAvailability on Linux\n\nUpdating Enable Check-PSGalleryApiAvailability on Linux to use\n[System Net NetworkInformation NetworkInterface ::GetIsNetworkAvailable()\n  
22397,     Fix some documentation warnings\n\nMostly low-hanging fruit and Linux additions/changes \n  
22398,     Disable some XML documentation warnings\n\nSome projects have more warnings than I can fix \n  
22399,     Enable XML documentation generation\n\nThis is enabled for PowerShell projects  but not PackageManagment \nWSMan  Cim  or MMI \n  
22400,     Enabling Proxy support on Linux\n\nEnabling Proxy support on Linux\n  
22401,     Merge pull request #1426 from PowerShell/jianyunt/docs\n\nUpdated the Get PowerShell table  
22402,     Update PowerShell/README md\n\nFixed casing and a couple of typos \r\nAdded newlines following one-sentence-per-line principle   
22403,     Clean up Getting Powershell table\n  
22404,     Merge pull request #1424 from PowerShell/quoct/fixnugetprovider\n\nImprove performance of finding and installing packages with dependencies for nugetprovider  
22405,     Merge branch  master  of    github com/powershell/powershell into jianyunt/docs\n  
22406,     Change variable name to make code more readable\n  
22407,     Merge pull request #1425 from PowerShell/RaghuS-Demo\n\nInstall script for *nix platforms  
22408,     Install script for *nix platforms\n  
22409,     Improve performance of installing packages with dependencies for nugetprovider and find-package\n  
22410,     Merge pull request #1418 from andschwa/andschwa/travis-pr\n\nDisable building packages on Travis CI for Pull Requests  
22411,     Don t build packages for pull requests\n\nSince we don t want to build packages for pull requests (as they cannot\nget archived as artifacts)  we need a slightly different build command \nand moving it to a script was cleaner \n  
22412,     Update linux md\n\nAdded newlines following one-sentence-per-line principle \r\nFixed typos   
22413,     Remove Slack CI notifications\n  
22414,     Merge pull request #1406 from andschwa/andschwa/travis-fork\n\nAdd GitHub token as insecure environment variable  
22415,     Merge pull request #1393 from PowerShell/jianyunt/docs\n\nUpdated the linux build doc  
22416,     Use os instead of matrix\n\nTravis is being picky about how this is specified \n  
22417,     Merge branch  master  of    github com/powershell/powershell into jianyunt/docs\n  
22418,     Updated linux md\n  
22419,     Add CentOS support\n  
22420,     Add GitHub token as insecure environment variable\n\nThis should enable building via PR from forks \n\nThis token has read-only access to download the installer packages  but\nshould nonetheless be revoked and replaced with a wget download when the\nrepository goes public \n  
22421,     Add remain part of Parser Pester Unit Test\n  
22422,     Update README md\n\nAdded newlines following one-sentence-per-line principle \r\nChanged  Open PowerShell  to  PowerShell  \r\nFixed typos   
22423,     Update README md\n\nAdded newlines following one-sentence-per-line principle \r\nChanged  Open PowerShell  to  PowerShell  (except for the current release title)   
22424,     Update resources md\n\nFixing typos and formatting   
22425,     Update windows md\n\nAdded newlines and fixed typos   
22426,     Update submodules md\n\nAdded newlines   
22427,     Fixed typos and code formatting\n\nFixed typos in text and code and properly formatted code \n  
22428,     added newlines\n\nAdded newlines following one-sentence-per-line principle \n  
22429,     Merge remote-tracking branch  refs/remotes/PowerShell/master  into powershell-beginners-guide-edits\n  
22430,     Update using-vscode md\n\nAdding newlines following one-sentence-per-line principle   
22431,     Update learning-powershell md  
22432,     Update learning-powershell md  
22433,     Merge pull request #1392 from PowerShell/vors/docs-faq-clean\n\nAdd Start-PSBuild -Clean in FAQ md  
22434,     Update learning-powershell md  
22435,     Update learning-powershell md\n\nFixing typos and  More Reading  section \n  
22436,     Merge remote-tracking branch  refs/remotes/PowerShell/master \n  
22437,     Merge remote-tracking branch  refs/remotes/PowerShell/master  into aleksandar\n  
22438,     Update learning-powershell md\n\nFixing typos and  More Reading  section \n  
22439,     Merge branch  refs/heads/aleksandar \n  
22440,     Updated the linux build\n  
22441,     Add Start-PSBuild -Clean in FAQ md\n\nThis came out few times in the past few days \n  
22442,     Merge pull request #1388 from PowerShell/andschwa/default-editmode\n\nUse Emacs as DefaultEditMode on Linux / OS X  
22443,     Merge pull request #1386 from PowerShell/vors/cim\n\nAdd CimCmdlets module in the produced package of core modules  
22444,     Test PSReadLine s DefaultEditMode and bindings\n  
22445,     Set DefaultEditMode to Emacs on Linux / OS X\n  
22446,     Set bindings based on options\n\nThis is instead of hard-coding a call to SetDefaultWindowsBindings() \n  
22447,     Refactor switch into SetDefaultBindings(EditMode)\n  
22448,     Add CimCmdlets module in the produced package of core modules\n  
22449,     Merge pull request #1384 from PowerShell/andschwa/platform-cleanup\n\nPlatform cleanup  
22450,     Merge pull request #1381 from PowerShell/jianyun/docs\n\nRemoved Get-Help  -ls from the example in the beginner s guide   
22451,     Merge pull request #1385 from alexandair/aleksandar\n\nUpdate to basics md  
22452,     Merge pull request #1320 from PowerShell/ParserPesterTest\n\nAdd Parser Pester Test Part 1  
22453,     Update to basics md\n\nFixing typos \n  
22454,     Merge pull request #1376 from PowerShell/vors/full-clr-doc\n\nVors/full clr doc  
22455,     Fix comments for Parser Pester Test Part 2\n  
22456,     Fix comments and add Parser Pester Test Part 2\n  
22457,     Add Parser Pester Test Part 1\n  
22458,     Add GetLStat\n\nfaccessat() does not support AT_SYMLINK_NOFOLLOW on OS X  so instead \nwe use the success of lstat() to determine if the file (not following\nsymbolic links) exists  Also allowed for some refactoring \n  
22459,     Removed ls alias as an example because it does not exist on Linux \n  
22460,     Removed Get-Help example  Fixed typos \n  
22461,     Remove unnecessary indirection from Platform Unix\n  
22462,     Fix failing New-Item tests\n\nPowerShell expects the behavior of NativeItemExists to not follow\nsymbolic links \n  
22463,     Clean up CreateSymLink()\n  
22464,     Format New-Item Tests ps1\n  
22465,     Guard IsWinPEHost\n  
22466,     Revert IsWinPEHost changes\n  
22467,     Remove Platform SupportsRemoveDrive query\n  
22468,     Remove Platform SupportsReparsePoints query\n  
22469,     Remove Platform HasNetworkDriveSupport query\n  
22470,     Remove Platform HasGroupPolicySupport query\n  
22471,     Remove Platform UseDotNetToQueryFileAttributes query\n  
22472,     Remove Platform HasUNCSupport query\n  
22473,     Remove Platform HasFileShares query\n  
22474,     Remove Platform HasSingleRootFilesystem query\n  
22475,     Remove Platform HasExecutionPolicy query\n\nAlso change Get-ExecutionPolicy to not throw  but to return\nUnrestricted (which is the effect of the actual policy) \n  
22476,     Remove Platform HasRegistry query\n  
22477,     Remove Platform HasDriveAutoMounting query\n  
22478,     Remove Platform HasAmsi query\n  
22479,     Remove Platform HasCom query\n  
22480,     Port NativeItemExists for Linux\n\nWithout using  NET\n  
22481,     Clean up IsExecutable and IsSymLink\n  
22482,     Remove Platform class override of PlatformNotSupportedException\n\nThis was confusing and unused in most places  exception itself removed\nin cleanup \n  
22483,     Rename Native so it is Unix NativeMethods\n\nLike the rest of PowerShell \n  
22484,     Rename LinuxPlatform to Unix\n\nSince it supports both Linux and OS X  This follows the  NET Core\nconvention \n  
22485,     Format CorePsPlatform\n  
22486,     Remove unnecessary throws in CorePsPlatform\n  
22487,     Add bool IsFile(char*) to libpsl-native\n  
22488,     Revert NativeItemExists changes from baseline\n  
22489,     Add bool IsDirectory(char*) to libpsl-native\n  
22490,     Merge pull request #1367 from PowerShell/vors/3-dlls\n\nBring  cs code for CimCmdlets  WSMan Management and WSMan Runtime dlls  
22491,     Merge pull request #1375 from PowerShell/cchen/bugfix\n\nmsft:8027609 Get-Module -List and Test-ModuleManifest import the the …  
22492,     Add AssemlbyInfo cs files\n\n- Microsoft WSMan Runtime\n- Microsoft WSMan Management\n- Microsoft Management Infrastructure CimCmdlets\n  
22493,     Merge pull request #1378 from PowerShell/psget\n\nIgnoring the errors from Receive-Job cmdlet in Uninstall-module logic…  
22494,     Downgrade Microsoft WSMan Management dependency so we can use the one from sources\n  
22495,     Fix ResourceManager instantiation in WsManHelper cs\n  
22496,     Update documentation about resources\n  
22497,     Convert txt resources into resx for Microsoft WSMan Management\n  
22498,     Update PowerShellGithubDev Tests ps1\n  
22499,     Copy cs files from [SD:717473 \n\ncommit 96877403a6a2eb9dcbee0f71bbc6dfb6e61dd9a3\n\n- Microsoft WSMan Runtime\n- Microsoft WSMan Management\n- Microsoft Management Infrastructure CimCmdlets\n  
22500,     Add project json files\n\n- Microsoft WSMan Runtime\n- Microsoft WSMan Management\n- Microsoft Management Infrastructure CimCmdlets\n  
22501,     Add map json files\n\n- Microsoft WSMan Runtime\n- Microsoft WSMan Management\n- Microsoft Management Infrastructure CimCmdlets\n  
22502,     Ignoring the errors from Receive-Job cmdlet in Uninstall-module logic  this is a workaround for #1365\n  
22503,     Merge pull request #1359 from PowerShell/quoct/onegettest\n\nEnable test for PackageManagement on CorePowerShell  
22504,     msft:7980238  7768797 Test-ModuleManifest loads all available modules if a module has the nested module dependencies  Get-Module -List and Test-ModuleManifest import the the nested module dependencies into the current runspace \n  
22505,     Correct a note about produced binaries for FullCLR  
22506,     Add a note about produced binaries for FullCLR  
22507,     msft:8027609 Get-Module -List and Test-ModuleManifest import the the nested module dependencies into the current/global runspace \n  
22508,     Merge pull request #1370 from PowerShell/andschwa/start-pspester\n\nImport Pester from new location  
22509,     Import Pester from new location\n\nThis is somewhat temporary as we re about to investigate using upstream\nPester without needing to have it as a submodule  and failing that \nmoving it to a vendor folder \n  
22510,     Place #if !LINUX at more appropriate places\n  
22511,     Merge pull request #1366 from PowerShell/jianyun/docs\n\nUpdated samples so that they work on Linux  
22512,     Merge pull request #1351 from PowerShell/RaghuS-AppxProviderBranch\n\nRemove AppxProvider from PowerShell Codebase and builds  
22513,     Remove test that calls powershell\n  
22514,     Merge pull request #1315 from PowerShell/vors/linefeeds\n\nAdd note about one sentance per line to CONTRIBUTING md  
22515,     Merge pull request #1368 from PowerShell/vors/git-katakoda\n\nAdd one more interactive tutorial source to git/basics md  
22516,     Add one more interactive tutorial source to git/basics md  
22517,     Merge pull request #1338 from PowerShell/vors/git-auth\n\nUpdate auth docs for git  
22518,     Merge pull request #1364 from PowerShell/bingbing8-docUpdate\n\nBingbing8 doc update  
22519,     Updated the examples so that they work on Linux \n  
22520,     Merge branch  master  of    com/PowerShell/PowerShell into jianyun/docs\n  
22521,     Merge pull request #1352 from PowerShell/andschwa/username\n\nImplement Get-Process -IncludeUserName for Linux   
22522,     Update to point to the github flow   
22523,     update some wording  
22524,     Remove install contoso credential test\n  
22525,     Fix CreateSymLink tests for OS X\n\n/tmp is symlinked to /private/tmp and since we re testing symlink\nresolution through FollowSymlink  we need to change what we expect to\nthe realpath \n  
22526,     Merge pull request #1358 from PowerShell/insivara-ps\n\nUpdated Microsoft PowerShell ScheduledJob to have version 3 0 0 0  
22527,     update some wording  
22528,     Remove scope test for install-package in nuget tests ps1\n  
22529,     Clean up CreateSymLink tests\n  
22530,     Clean up FollowSymlink\n  
22531,     Update windows-full md  
22532,     Fix FQDN test for OS X\n  
22533,     Guard Linux native build steps\n\nSo that non-zero exit codes fail the build  and the tests are run\nverbosely \n  
22534,     Refactor to use GetUserFromPid\n  
22535,     Add GetUserFromPid() to libpsl\n\nAnd clean up some tests \n  
22536,     Refactor libpsl to use GetPwUid()\n  
22537,     Add regression test for Get-Process -IncludeUserName\n  
22538,     Add tests for native GetFileOwner\n  
22539,     Implement Get-Process -IncludeUserName for Linux\n\nSo much plumbing  The correct way to identify the owner of a process on\nLinux is to get the owner of the /proc/<PID> file  However   NET Core\nhas no API to get this information  thus it had to be plumbed through to\nthe native library \n  
22540,     Add GetFileOwner\n  
22541,     Add GetStat\n\nWraps stat() with mapped errno \n  
22542,     Fix IsAdministrator for Unix\n  
22543,     Merge pull request #1360 from PowerShell/andschwa/cache\n\nEnable cache on CI machines  
22544,     Fix test failure for Install-PackageProvider tests ps1 on Windows\n  
22545,     Updated Microsoft PowerShell ScheduledJob to have version 3 0 0 0\n  
22546,     Merge pull request #1348 from PowerShell/powershellget\n\nEnabling PowershellGet module on Linux  
22547,     Corrected a typo in $PSVariable\n\nCorrected a typo in $PSVariable\n  
22548,     Changes for Get-ChildItem  Select-Object  IsWindows  IsCore and IsLinux\n\nChanges for Get-ChildItem  Select-Object  IsWindows  IsCore and IsLinux\n  
22549,     Added mapping for $env:TEMP path in Linux \n\nAdded mapping for $env:TEMP path in Linux \n  
22550,     PowerShellGet changes for Linux\n  
22551,     Fix AppVeyor version\n  
22552,     Enable caching of dotnet and NuGet packages on CI\n  
22553,     Merge pull request #1347 from PowerShell/joey/demo\n\nBring in comment-level demos  
22554,     Merge pull request #1349 from PowerShell/jianyun/docs\n\nAdded Debugging from PS Commandline  
22555,     Merge pull request #1264 from PowerShell/childitem\n\nFixing symlink to use absolute paths instead of relative  
22556,     Remove AppxProvider from PowerShell Codebase and builds\n  
22557,     Fix a test failure where path name is not in the correct case\n  
22558,     Fix NuGet tests ps1 failure\n  
22559,     Remove test that requires installing packages that has dependencies\n  
22560,     Remove logging for installation from OneGet on Linux\n  
22561,     Fix Install PackageProvider failure because we are not running on administrator\n  
22562,     Fix Nuget tests\n  
22563,     Fix test failures for PackageManagement\n  
22564,     Import source-depot tests for PackageManagement\n  
22565,     Edit map json to add in PackageManagement tests\n  
22566,     Merge pull request #1342 from PowerShell/RaghuS-MSIInstallerBranch\n\nAdd ability to perform SxS install in MSI package manifest  
22567,     Merge branch  master  of    com/PowerShell/PowerShell into jianyun/docs\n  
22568,     fixed a link\n  
22569,     Added debugging from PowerShell commandline\n  
22570,     Merge pull request #1339 from PowerShell/jianyun/docs\n\nCreated Learning PowerShell  
22571,     Merge pull request #1335 from PowerShell/joey/refactor-docs\n\nJoey/refactor docs  
22572,     move sample modules into demos\n  
22573,     add Samples folder\n  
22574,     Merge pull request #1336 from PowerShell/FixExecutionPolicyForWindows2\n\nFix execution policy for windows  
22575,     add comment-level demos\n\nWe ve signed off on these demos conceptually \nThe next step is for them to be implemented\nand all blocking engineering work needs to be\nenumerated and solved \n  
22576,     Changing childitem to cope with regex\n  
22577,     add value to PSGet demo\n  
22578,     Add ability to perform SxS install in MSI package manifest\n  
22579,     Fixed comments and white space issues\n  
22580,     first pass of contributor docs\n\nRework of contributor docs to reflect actual flow\nfor both internal and external developers using\nthe PowerShell/PowerShell repo for the first time \nIncludes updates to issue/PR guidelines  repo 101 \nand CONTRIBUTING md \n  
22581,     updated link in readme\n  
22582,     Created Learn PowerShell\n  
22583,     Update auth docs for git  
22584,     Fixed unreachable code issue\n  
22585,     Removed language if statement no longer needed  due to compiler if statement\nClarified comment\n  
22586,     Merge pull request #1334 from PowerShell/RaghuS-PackageManagementBranch\n\nExclude PackageSourceList from building on *nix platforms  
22587,     New-Item tests to use Should Match\n  
22588,     Editing for OSX passing symbolic links\n  
22589,     Add Linux part of issue to known issues list\n  
22590,     Ignored a per repo profile\n  
22591,     Ported Execution policy tests\nMade a fix to store data on testdrive instead of system drive\nMade a note of where the tests where ported from\nSkipped entire test file on non-windows machines\n  
22592,     Made check blocking execution policy  only blocking (always returning true) on linux\n  
22593,     Update sources instead of project json\n  
22594,     Add exclude attribute to correct location in project json\n  
22595,     Exclude PackageSourceList from building on *nix platforms\n  
22596,     Merge pull request #1332 from PowerShell/dongbo/modules\n\nUpdate and clean up module files in Core/Full/Shared folders  
22597,     Update and clean up module files in Core/Full/Shared folders\n  
22598,     Merge pull request #1283 from PowerShell/andschwa/readlinesafe\n\nImplement ReadLineSafe for Linux  
22599,     Remove char k\n  
22600,     Merge pull request #1305 from PowerShell/vors/docs\n\nUpdate docs  assigned to Sergei  
22601,     Use Control-F/B for Right/Left arrow\n  
22602,     Blacklist control characters rather than whitelist\n  
22603,     Use Control-D for delete\n  
22604,     Merge pull request #1328 from PowerShell/dongbo/type-completion\n\nFix issue #682 - [system manage<Tab>  doesn t work  
22605,     Merge pull request #1327 from PowerShell/adityap/stackoverflow\n\nFix stackoverflow issue by using strongly typed resource names  
22606,     Fix stackoverflow issue by using strongly typed resource names\n  
22607,     Merge pull request #1291 from PowerShell/andschwa/useshellexecute\n\nFix use of UseShellExecute for  NET Core  
22608,     Bump expect timeout for slow CI systems\n  
22609,     Fix #682 - [system manage<Tab>  doesn t work\n  
22610,     Move the most recent changes about the ALC from SD to Github\n  
22611,     Exclude the P/invoke code that is not supposed to be in CoreCLR build\n  
22612,     Throw PlatformNotSupported on Windows  NET Core build\n  
22613,     ReadLineFromConsole improvements\n\nAlso more guarding in ReadLineSafe\n  
22614,     Add Read-Host regression test\n  
22615,     Handle Ctrl-C while prompting\n  
22616,     Implement ReadLineFromConsole for Linux\n  
22617,     Remove ReadLineSafe from known issues\n  
22618,     Implement ReadLineSafe for Linux\n\nThis uses System Console instead of ConsoleControl to read keys into a\nSecureString in a portable manner  The Windows implementation is left\nuntouched \n  
22619,     Invoke-Item and Get-Help -Online are unsupported on Nano\n\nThese currently fail at runtime on Nano  and will continue to do so  But\nthis implements these much needed cmdlets for Open PowerShell \n\nIf there is a way to determine that PowerShell is being run on the Nano\nOS at runtime  then we could instead throw a platform unsupported\nexception  but this cannot be based on the target compilation framework \nas  NET Core is shared for both Nano and Windows \n  
22620,     Enable Invoke-Item test for Windows\n  
22621,     Guard use of UseShellExecute in PackageManagement\n\nTo re-enable elevation  the process will need to fork  For now  don t\nfail fatally \n  
22622,     Use start in Invoke-Item to open items on Windows\n\nSince `UseShellExecute` cannot be used \n  
22623,     Use start in Get-Help -Online to open URL on Windows\n  
22624,     Set UseShellExecute to false in Get-Help\n  
22625,     Merge pull request #1324 from PowerShell/andschwa/fix-osx-travis\n\nSwitch to Xcode 8beta image  
22626,     Switch to Xcode 8beta image\n\nThe 7 3 image is failing \n  
22627,     Merge pull request #1316 from PowerShell/jasonsh/psreadline_windows_fixes\n\nFix UNIX/Windows/CORE story for PSReadLine  
22628,     Merge pull request #1314 from PowerShell/vors/resgen-docs\n\nUpdate docs about ResGen  
22629,     Merge pull request #1318 from PowerShell/vors/branches\n\nRemove branches md  
22630,     changing logic around realpath in followsymlink\n  
22631,     Remove branches md\n\nIt s not relevant anymore  
22632,     changes to logic in followsymlink\n  
22633,     Refactored followsymlink\n  
22634,     Add note about one sentance per line to CONTRIBUTING md  
22635,     Merge pull request #1302 from PowerShell/eslesar-contributing-docs\n\nupdating contributing md with contributing to docs section  
22636,     Merge pull request #1311 from PowerShell/dongbo/exclude-unneed-gen\n\nExclude the unneeded gen/* cs for each target framework  
22637,     Update docs about ResGen\n\nYou don t need to alternate build psm1 anymore  when you add resx files    
22638,     Add more complex scenarios section to powershell-repository-101\n  
22639,     adding check for symlink to followsymlink\n  
22640,     Skip tone/duration on beep on LINUX\n  
22641,     Only use CHAR_INFO on Windows\n\nCHAR_INFO has 4 bits for ConsoleColor   On Linux  ConsoleColor is sometimes -1 (unknown) \nwhich is a 17th possible value for ConsoleColor  which can t be represented in CHAR_INFO \n\nTo fix this  I ve introduced a bigger type that gets converted to CHAR_INFO when necessary \n  
22642,     Introduce TTYConsole for UNIX\n  
22643,     First stab addressing CORECLR vs  LINUX in PSReadLine\n  
22644,     Add  TraceCommandStrings resx  back to CoreCLR build  TraceCommand cmdlets have been ported in Github \n  
22645,     Exclude the unneeded gen/* cs files from the build for each target framework\n  
22646,     Absolute filepath resolution for followsymlink\n  
22647,     Merge pull request #1304 from PowerShell/vors/pr-template\n\nSimplify PR template  
22648,     Remove stub docs that should be platform specific\n  
22649,     Remove out-dated git documentation\n  
22650,     Update git-related docs: basics and powershell-repository-101\n  
22651,     Update full build instruction  fix typo\n  
22652,     Simplify PR template  
22653,     updating contributing md with contributing to docs section\n  
22654,     Merge pull request #1301 from PowerShell/insivara-ps\n\nDefining workflows is broken on OPS on FullCLR  
22655,     Merge pull request #1285 from PowerShell/dongbo/miss-files-ops\n\nAdd back missing files for OPS  
22656,     Updated AssemblyVersion for Microsoft PowerShell Workflow ServiceCore\n  
22657,     Add map json file under the  test  folder to track the tests that were moved\n  
22658,     Merge Get-TimeZone Tests ps1 and Set-TimeZone Tests ps1 to TimeZone Tests ps1\n  
22659,     Disable 3 FileCatalog tests  They fail in CoreCLR OPS on AppVeyor build VM (Windows Server 2012R2)  though they always pass on Windows 10\n  
22660,     Merge pull request #1279 from PowerShell/andschwa/artifacts\n\nBuild Linux and OS X packages on Travis  
22661,     Exclude the TimeZone/Computer/FileCatalog cmdlets for Linux  They use windows specific Win32 APIs\n  
22662,     Add tests for TimeZone cmdlets and FileCatalog cmdlets [SD:717473 \n  
22663,     Update project json files to exclude certain  resx files for each target framework\n  
22664,     Add missing files for OPS [SD:717473 \n  
22665,     Merge pull request #1292 from PowerShell/vors/powershell-native\n\nMissed powershell native sources  
22666,     Merge pull request #1282 from PowerShell/quoct/fixnugetprovider\n\nExpose Platform API from SMA and uses that in NuGetProvider  
22667,     Copy missed native-powershell files from [SD:717473 \n\ncommit 559488db3\n  
22668,     Add missed files for powershell-native in map json\n  
22669,     Merge pull request #1220 from PowerShell/invokeitem\n\nInvoke-Item fix for Linux and OSX   
22670,     Rename enum interface; Change location used in NuGetProvider to go up 1 level\n  
22671,     Merge pull request #1284 from PowerShell/andschwa/fix-get-command-uses\n\nFix use of Get-Command when more than one exists  
22672,     Fixed scope issue in invokeitem\n  
22673,     Removing extra invokeitem test\n  
22674,     Add back missing files to OPS -- map json/project json udpates\n  
22675,     UseShellExecute moved to OS guards for Invoke-Item\n  
22676,     Fix use of Get-Command when more than one exists\n  
22677,     Merge pull request #1281 from PowerShell/dantra/build\n\n Comment out mc exe search logic   
22678,     Expose Platform API from SMA and uses that in NuGetProvider\n  
22679,     Merge pull request #1272 from PowerShell/vors/gitignore\n\nUpdate  gitignore  
22680,     Fix grammer on comment\n  
22681,     Comment out mc exe search logic \n- It s not currently not used\n- Search fails on clean systems that are setup exclusively using PowerShell s Full CLR setup instructions \n  
22682,     Upload Travis CI packages to AWS\n\nWe need to cd into tools so that the downloaded PowerShell package isn t\nsubsequently uploaded to AWS \n  
22683,     Merge pull request #1277 from PowerShell/jasonsh/vs_solution\n\nAdd csproj files and sln for editing but not building  
22684,     Package PowerShell on Travis CI\n  
22685,     Add packaging dependencies to Start-PSBootstrap\n  
22686,     Merge pull request #1276 from PowerShell/RaghuS-PackagingBranch\n\nDisable verbosity during package creation - now that we are stable  
22687,     Update dependencies list\n  
22688,     Add csproj files and sln for editing but not building\n  
22689,     Disable verbosity during package creation - now that we are stable\n  
22690,     Update  gitignore  
22691,     Add * csproj user to  gitignore\n  
22692,     Merge pull request #1246 from PowerShell/andschwa/guard-rawui\n\nGuard RawUI when TTY is non-existent  
22693,     Use ConsoleControl on Windows\n  
22694,     Add list of files excluded from ConsoleHost  
22695,     Note that CursorSize throws on Windows when output is redirected\n  
22696,     Merge pull request #1260 from PowerShell/vors/events\n\nResources for Events and Modules restructure  
22697,     Import PSReadLine change to throw when redirected\n\nA similar change was made to the Source Depot fork of PSReadLine  and\nthe behavior is depended on in the ConsoleHost  The host always attempts\nto load PSReadLine  because a future version of PSReadLine will support\nredirected input/output  and until then  PSReadLine must throw so that\nthe host correctly falls back to Console ReadLine() \n  
22698,     Check that switchKey isn t empty\n  
22699,     Normalize slashes in path given to --file\n\nSince we don t yet have a canonical way to normalize paths  here is yet\nanother use of String Replace (and this is how it happens) \n  
22700,     Fix Console-Host tests\n\nUpdate tests from Source Depot and run everywhere \n  
22701,     Fix Write-Host tests\n\nThese were not testing the development build of PowerShell \n  
22702,     Re-enable tests on OS X\n  
22703,     Implement FlushInputBuffer\n  
22704,     Guard use of throwable APIs in System Console\n\nThis is reconciled with the  NET Core 1 0 Unix ConsolePal\nimplementation  with additional error handling for when System Console\nreturns unusable values \n  
22705,     Remove extra comma in powershell/project json\n  
22706,     Update docs\\building\\windows-full md + typo fixes\n  
22707,     Fix typo in README md\n  
22708,     Add missed export into Microsoft WSMan Management psd1\n  
22709,     Copy missed format and types files from [SD:717473 \n\ncommit 559488db3\n  
22710,     Add missed types and format files into src/Modules/map json\n  
22711,     Fix Start-DevPowerShell call from appveyor\n  
22712,     Improve Start-DevPowerShell\n\n- Rename Start-DevPSGithub to Start-DevPowerShell\n- Add Configuration parameter to Start-PSBuild\n- Add -Command parameter to Start-DevPowerShell\n  
22713,     Fix Pester call for FullCLR from appveyor yml\n  
22714,     don t call specific submodules init in CI: get them all\n  
22715,     Speed-up CimCmdlets FullCLR test\n  
22716,     Move Modules related notes from internals md into src/Modules/README md\n  
22717,     Update project json files to take Modules only from src/Modules\n  
22718,     Update Modules map json files\n  
22719,     Move modules for Core in Module/Core\n  
22720,     Move modules for Full in Module/Full\n  
22721,     Move modules shared between frameworks in Module/Shared folder\n  
22722,     Fix Microsoft PowerShell ConsoleHost/map json\n  
22723,     Add a simple test for Get-WinEvent on windows (Core + Full)\n  
22724,     Exclude map json files from copyToOutput and publishOptions\n  
22725,     Fix GetEventResources problem in Microsoft PowerShell Commands Diagnostics\n\n-Move logic about instantiating ResourceManager in one place\n-Add CommonUtils cs to CoreCLR build\n-Update resources generation with dotnet cli naming pattern\n  
22726,     GetEventResources txt into GetEventResources resx for Microsoft PowerShell Commands Diagnostics resources\n  
22727,     Add Convert-TxtResourceToXml function to build psm1\n  
22728,     Merge pull request #1255 from PowerShell/jasonsh/measure-object-fix\n\nFix Measure-Object -Property w/ wildcards  
22729,     Fix Measure-Object -Property w/ wildcards\n\nFixes #1215\n  
22730,     Merge pull request #1199 from PowerShell/jasonsh/split-path-qualifier\n\nRevert Unix specific Split-Path -Qualifier code  
22731,     Merge pull request #1253 from PowerShell/andschwa/fix-isubuntu\n\nFix IsUbuntu logic in build module  
22732,     Fix IsUbuntu logic in build module\n\nI previously broke the automatic uninstallation logic by changing how I\nidentified the Linux distribution \n  
22733,     Fix Split-Path -NoQualifier for Unix paths\n  
22734,     Merge pull request #1251 from PowerShell/RaghuS-PowerShellGet\n\nResurect accidentally deleted files for PowerShellGet  
22735,     Resurect accidentally deleted files for PowerShellGet\n\nThe remove happened in eea998b4d\n  
22736,     Merge pull request #1245 from PowerShell/vors/types\n\nMake DefineTypes aware of / as a path delimiter on non-windows systems  
22737,     Merge pull request #1244 from HemantMahawar/demos\n\nInitial demo scripts for installation and PowerShellGet demos  
22738,     Merge pull request #1248 from PowerShell/kapil/nuget\n\nAdd CoreCLR nuget packages  
22739,     Merge pull request #1242 from PowerShell/andschwa/json-package\n\nDowngrade Newtonsoft Json package to 7 0 1  
22740,     Merge pull request #1237 from PowerShell/quoct/powershellmetaproviderfix\n\nMake PowerShellGet loaded for PackageManagement  
22741,     Merge pull request #1243 from PowerShell/vors/issue-template\n\nSimplify ISSUE_TEMPLATE md  
22742,     Make DefineTypes aware of / as a path delimiter on non-windows systems\n  
22743,     Simplify ISSUE_TEMPLATE md\n\n- only use $PSVersionTable as Environment data requirement\r\n- add a statement  that you don t need to fill up the template for non-bug-reports  
22744,     Update 1-PowerShellGet ps1  
22745,     Update 0-Install sh ps1  
22746,     Revert Unix specific Split-Path -Qualifier code\n\nThe -Qualifier code for Split-Path made some incorrect assumptions:\n\n* That a path only referred to the file system\n* That drives cannot be used on Unix systems\n\nThese assumptions were both wrong  so I ve reverted the change so we\ndo not have any Unix specific code in Split-Path now \n\nFixes #1176\n  
22747,     Fix build break associated with adding PORTABLE to PackageManagementService\n  
22748,     Downgrade Newtonsoft Json package to 7 0 1\n\nThis is the same as on Nano \n  
22749,     Initial Demo scripts for installation and PowerShellGet\n  
22750,     Adding isWindows to invoke item test and new test location\n  
22751,     use PORTABLE instead of commenting out code\n  
22752,     Merge pull request #1239 from PowerShell/andschwa/testrestructure\n\nRestructure of Pester test layout  
22753,     Adding pending to invokeitem tests due to windows bug\n  
22754,     Restructure of pester test layout\n\nThis restructuring moves tests to a directory name which matches the module\nin which the cmdlet resides which should improve the discoverability of a\nspecific test \nFor tests which are not about cmdlets in a module  new directories have been\ncreated to make those tests easier to find as well\n  
22755,     Merge pull request #1235 from PowerShell/andschwa/alc-wip\n\nConverge the AssemblyLoadContext scenario  
22756,     Fixed unknown char in comments\n\nCosmetic change   
22757,     Adding Invoke-Item tests\n  
22758,     Invoke-Item tests added\n  
22759,     Adding logic for invoke-item for non-Windows OSes\n  
22760,     Use publish instead of build on Travis\n\nAppVeyor also does this  and it s the scenario our packages ship  so\nit s what we should test \n  
22761,     Filter Assembly Load requests to let the default context load TPAs\n  
22762,     Make PowerShellGet loaded for PackageManagement\n  
22763,     Disable xUnit tests\n\nThis is temporary  We need to rewrite the test context to ensure the\nAssemblyLoadContext is used properly  since the default can no longer be\ninitialized \n  
22764,     Disable JIT cache tests\n\nThis test fails since we ve disabled the JIT cache entirely \n  
22765,     Filter runtime assemblies out of custom context\n  
22766,     Re-enable assembly load handler in CompletionCompleters\n  
22767,     Update ALC to work in publish scenario\n  
22768,     Fix it for  dotnet build  scenario\n  
22769,     Make AssemblyLoadContext a singleton and refactor\n  
22770,     Remove TPA list work-around\n  
22771,     Assert basePaths was not null\n  
22772,     Remove ClrFacade Load\n\nInstead  rely on intercepting Assembly Load\n  
22773,     Mimic InitializeDefaultLoadContext\n  
22774,     Merge pull request #1232 from PowerShell/vors/misc\n\nAdd misc missed files for modules  
22775,     Copy Maml xsd schema files from [SD:717473 \n\ncommit 559488db3\n  
22776,     Add map json for Maml xsd schema files\n  
22777,     Add test for CimCmdlets module\n  
22778,     Copy CimCmdlets psd1 files from [SD:717473 \n\ncommit 559488db3\n  
22779,     Add CimCmdlets psd1 into src/Modules/map json\n  
22780,     Add tests for PSWorkflow and PSWorkflowUtility\n  
22781,     Copy PSWorkflow files from [SD:717473 \n\ncommit 559488db3\n  
22782,     Remove extra output from Copy-MappedFiles\n  
22783,     Add PSWorkflow files into map json\n  
22784,     Move map json for Microsoft PowerShell ConsoleHost\\Modules in subfolder\n  
22785,     gitignore CorePsTypeCatalog cs\n  
22786,     Merge pull request #1226 from PowerShell/vors/build\n\nAdd simple test for non-empty workflow  make it work  
22787,     Merge pull request #1210 from PowerShell/andschwa/rtm\n\nUpdate PowerShell to use  NET Core 1 0  
22788,     Merge pull request #1231 from PowerShell/vors/start\n\nExclude Microsoft WSMan Management from the list of default snapins  
22789,     Add simple test for non-empty workflow  make it work\n  
22790,     Use Start-TypeGen to generate type catalog dynamically\n  
22791,     Exclude Microsoft WSMan Management from the list of default snapins\n\nFix #1180\n  
22792,     Remove IsReadOnlyCaretVisible property from HelpWindow xaml\n\nReason: msbuild v4 cannot resolve it\n  
22793,     Merge pull request #1222 from PowerShell/RaghuS-MSIInstallerBranch\n\nAdded ability to choose install location when using MSI  fixed issue #1135  
22794,     Added ability to choose install location  issue #1135\n  
22795,     Update type catalog without MMI\n  
22796,     Exclude MMI packages from type catalog parser\n\nNewtonsoft Json will be excluded at a later date \n  
22797,     Add NETStandard Library to CoreCLR Eventing\n\nAs a bottom-level dependency  it always needed it  The alternative is\nhunting down every particular dependency  but that s what the\nmeta-package is useful for \n  
22798,     Use Marshal ZeroFreeCoTaskMemUnicode\n\nThis removes the ClrFacade function of the same name as this API is in\n NET Core 1 0 Marhsal class  not SecureStringMarshal \n  
22799,     Update CorePsTypeCatalog for new packages\n  
22800,     Remove MyGet feeds\n  
22801,     Use dotnet-test-xunit package from NuGet\n  
22802,     Use Microsoft DotNet packages available on NuGet\n  
22803,     Depend on SecureString 4 0 0\n  
22804,     Remove SecureString stub project\n  
22805,     Port TypeCatalogGen to  NET Core\n  
22806,     Bump framework to netstandard1 6\n\nThis is required to use the new  NET Core RTM packages  specifically the\n`IEnumerable Append` API \n  
22807,     Update to  NET Core 1 0 packages\n  
22808,     Removing remaining centos 7 1 RIDs\n\nThis should have been done programmatically \n  
22809,     Merge pull request #1213 from PowerShell/andschwa/strong-names\n\nRe-enable checking of assemblies with strong names  
22810,     Merge pull request #1212 from PowerShell/RaghuS-MSIInstallerEnhancements\n\nMSI Installer enhancements Part 1  
22811,     Merge pull request #1198 from PowerShell/andschwa/code-of-conduct\n\nAdd official Microsoft Open Source Code of Conduct  
22812,     Re-enable checking of assemblies with strong names\n\nThis removes the `UsesCodeSignedAssemblies()` switch in `CorePsPlatform`\nand reverts the work-arounds skipping strong name checking \n  
22813,     Merge pull request #1214 from PowerShell/jianyunt/docs\n\nFixed the broken reference links in contributing md  
22814,     Fixed broken links\n  
22815,     Move version in template into comment  
22816,     Added Assets path to New-MSIPackage invocation\n  
22817,     MSI Installer enhancements Part 1\n  
22818,     Fixed the broken reference links\n  
22819,     Merge pull request #1206 from PowerShell/jianyun/docs\n\nThis is for the doc structure and place holder folders and files  thx  
22820,     Add official Microsoft Open Source Code of Conduct\n  
22821,     Merge branch  master  of    com/PowerShell/PowerShell into jianyun/docs\n  
22822,     Created the docs layout\n  
22823,     Merge pull request #1203 from PowerShell/jianyun/docs\n\nfixed a broken link in readme  
22824,     Add CoreCLR nuget packages\n  
22825,     addressed feedback from Andy \n  
22826,     fixed a broken link in readme\n  
22827,     Merge pull request #1129 from TravisEz13/patch-1\n\nQualify new-pssession known issue  
22828,     Merge pull request #1181 from PowerShell/vors/activities\n\nAdd * Activities dlls in Full build  
22829,     Start-XamlGen: ignore all errors from msbuild for all Xaml files\n  
22830,     Redirect Xaml msbuild output into verbose\n  
22831,     Remove full paths from references assemlbies in XAML generation\n  
22832,     Make Microsoft PowerShell Activities/Xamls compatible with msbuild v14\n  
22833,     Don t always use msbuild from the framework folder: causes problems with VS C++ 14 Tools\n  
22834,     Exclude native resources from pwrshplugin temporarely\n  
22835,     Bump appveyor build version\n  
22836,     build psm1 changes for Activities dlls\n\n- Add Start-PSBuild -Clean\n- Normalize $env:PATH references in  \\build psm1\n- Add more logging in Resolve-Xaml for troubleshooting\n- Always use msbuild from the Microsoft NET v4 0 30319\n- Rename Resolve-Xaml into Start-XamlGen for consistency with Start-TypeGen and Start-ResGen\n- Disable pwrshplugin build temporarely\n  
22837,     Add * Activities dlls in Full build\n\n- Add activities as a dependency to ConsoleHost\n- This creates a minor ambiguity in the type resolution in ConsoleHost \n  We are specifying a namespace name to workaround it \n  
22838,     Merge pull request #1202 from PowerShell/jasonsh/pspester-fix\n\nImport local Pester version before running tests  
22839,     Import local Pester version before running tests\n  
22840,     Merge pull request #1188 from jianyunt/master\n\nInitial draft of the contributing-to-powershell md  
22841,     Merge pull request #1182 from PowerShell/don/docs\n\n(WIP) Initial draft of repo readme for PM review    
22842,     Updated per feedback \n  
22843,     Qualify new-pssession known issue  
22844,     Updated Common Engineering Practices \n\n[skip ci \n  
22845,     Updated to address feedback\n\n[skip ci \n  
22846,      Updated to address the feedback  \n\n[skip ci \n  
22847,     Updated contributing md\n\n[skip ci \n  
22848,     Merge pull request #1183 from PowerShell/andschwa/cli-rel-1 0 0\n\nChange preview channel to rel-1 0 0  
22849,     Change preview channel to rel-1 0 0\n\nRecent CLI commits have changed the channel from which to download \n  
22850,     (WIP) Updated draft of readme for PM review \n  
22851,     WIP initial draft of readme\n  
22852,     Merge pull request #1178 from PowerShell/RaghuS-DocUpdatesBranch\n\nUpdated installation and release documentation to be current  
22853,     Updated installation and release documentation to be current\n  
22854,     Merge pull request #1171 from PowerShell/vors/sd-717473\n\nIntegrate changes from SD between [SD:715912  and [SD:717473   
22855,     Disable 3 debugging tests on all platforms to unblock code integration\n  
22856,     Integrate changes from SD between [SD:715912  and [SD:717473 \n  
22857,     Merge pull request #1172 from PowerShell/dongbo/bump_wsman_mgmt_version\n\nBump the version of dependent WsMan Mgmt nuget package to 1 0 1-rc1  
22858,     Merge pull request #1170 from PowerShell/vors/knownissues\n\nUpdate known issues  
22859,     Bump the version of dependent WsMan Mgmt nuget package to 1 0 1-rc1\n  
22860,     Update KNOWNISSUES md\n  
22861,     Revert GetComputerInfoCommand cs to source-depot state\n  
22862,     Merge pull request #1169 from PowerShell/vors/host\n\nAdd Microsoft PowerShell GraphicalHost into Full build  
22863,     Add GraphicalHost as net451 dependency to ConsoleHost\n  
22864,     Make Resolve-Xaml in build psm1 compatible with GraphicalHost\n  
22865,     Make Microsoft PowerShell GraphicalHost buildable\n\n-Exclude *Button files\n-Remove unnessasary namespace specifier for resources\n  
22866,     Copy Microsoft PowerShell GraphicalHost from [SD:715912 \n\ncommit 570d318\n  
22867,     Add project  map and AssemlbyInfo cs for GraphicalHost\n\n- Add xaml files to Microsoft PowerShell GraphicalHost\\map json\n- Add references into project json file\n- Known issue: ExpanderButtonAutomationPeer cs is excluded from the build\n  
22868,     Merge pull request #1168 from PowerShell/dongbo/activities\n\nAdd Activities dlls to Github  
22869,     Update build psm1 to use the same MSBuild checking logic\n  
22870,     Add project json files for Activities dlls\n  
22871,     Add source files for Microsoft WSMan Management Activities\n  
22872,     Add source files for Microsoft PowerShell Utility Activities\n  
22873,     Add source files for Microsoft PowerShell Security Activities\n  
22874,     Add source files for Microsoft PowerShell Management Activities\n  
22875,     Add source files for Microsoft PowerShell Diagnostics Activities\n  
22876,     Add source files for Microsoft PowerShell Core Activities\n  
22877,     Add source files for Microsoft PowerShell Activities\n  
22878,     Add map json files for Activities dlls\n  
22879,     Update build psm1 to add Resolve-Xaml function because  Microsoft PowerShell Activities  depends on  xaml files \n  
22880,     Merge pull request #1161 from PowerShell/vors/leftovers\n\nVors/leftovers  
22881,     Update KNOWNISSUES about ControlPanelItemCommand cs\n\n[skip ci \n  
22882,     Copy Microsoft PowerShell ODataUtils from [SD:715912 \n\ncommit 570d318\n  
22883,     Add OdataUtils to map json\n  
22884,     Copy ControlPanelItemCommand cs from [SD:715912 \n\ncommit 77eda78\n  
22885,     Add ControlPanelItemCommand cs into map json and exclude from build\n  
22886,     Merge pull request #1158 from PowerShell/vors/windows-build\n\nRemove src/windows-build submodule  
22887,     Merge pull request #1157 from PowerShell/RaghuS-PackageManagementModule\n\nEnable PackageManagement module in PS module store  
22888,     Remove src/windows-build from CI builds\n  
22889,     Remove src/windows-build submodule\n  
22890,     Remove doc information about psl-windows-build submodule\n  
22891,     Get packages from psl-windows-build online nuget feed\n  
22892,     Merge pull request #1148 from PowerShell/vors/pwrshplugin\n\nAdd pwrshplugin into windows build  
22893,     Enable PackageManagement module in OPS module store\n  
22894,     Merge pull request #1154 from PowerShell/andschwa/build-module\n\nBetter CentOS 7 support  
22895,     Detect DEB and RPM package types\n\nInstead of assuming DEB for Linux \n  
22896,     Merge pull request #1153 from PowerShell/quoct/oneget\n\nAdding PackageManagement  
22897,     Use COMPILE_FLAGS instead of add_compile_options\n\nThe latter came with CMake 2 8 12  and CentOS comes with 2 8 11  so we\nneed to use a more compatible method  Also bump the minimum required\nversion now that it is properly known \n  
22898,     Install gcc-c++ instead of just gcc on CentOS\n  
22899,     Use VERSION_ID instead of Version from /etc/os-release\n\nThey are different fields and VERSION_ID is just the number \n  
22900,     Install curl during bootstrap\n\nSince the LLVM feed is no longer added  we do not need to update nor\nrequire curl beforehand  nor install wget \n  
22901,     Use -match instead of -eq\n\nSince the use of quotes in /etc/os-release is inconsistent across\ndistributions  we have to match instead of exactly compare \n  
22902,     Add Find-Dotnet to make build module smarter\n\nNew function smartly adds the probable location of the  NET CLI tools to\nthe path if `dotnet` is not found  If it is still not found  it restores\nthe path  All functions using `dotnet` should call `Find-Dotnet` first \n  
22903,     Add project json for PackageManagement assemblies and make it build\n  
22904,     Add mapped files for all PackageManagement assemblies\n  
22905,     Support CentOS 7 in build module\n  
22906,     Add map json for all PackageManagement assemblies\n  
22907,     Merge pull request #1062 from PowerShell/XMLCommandPesterTest\n\nAdd Export-Clixml and Import-Clixml Pester Test  
22908,     Update powershell-native\\CMakeLists txt with a fixed name of the library\n  
22909,     Copy pwrshplugin def from [SD:715912 \n\ncommit 77eda78\n  
22910,     Update powershell-native\\map json to include pwrshplugin def\n  
22911,     Merge pull request #1147 from PowerShell/dongbo/workflow\n\nBuild Microsoft PowerShell Workflow ServiceCore dll in Github for Full PS  
22912,     Merge pull request #1140 from PowerShell/vors/typegen\n\nTypeGen enhancements  
22913,     Bump windows-build submodule version for including CimCmdlets nuget package\n  
22914,     Add test to verify that a simple workflow can run\n  
22915,     Update project json for Microsoft PowerShell ConsoleHost to depend on Microsoft PowerShell Workflow ServiceCore\n  
22916,     Add project json for Microsoft PowerShell Workflow ServiceCore\n  
22917,     Add source files for Microsoft PowerShell Workflow ServiceCore\n  
22918,     Add map json for Microsoft PowerShell Workflow ServiceCore\n  
22919,     Fix name for pwrshplugin\n  
22920,     Temporerely disable SQM Telemetry in pwrshplugin\n  
22921,     Add Release/ entry to  gitignore in powershell-native project\n  
22922,     Copy pwrshplugin native code from [SD:715912 \n\ncommit 77eda78\n  
22923,     Add pwrshplugin to cmake build\n  
22924,     Merge pull request #1136 from PowerShell/vors/scheduledjobs\n\nPSScheduledJobs Module  
22925,     Add Start-TypeGen\n\nUpdate Microsoft PowerShell CoreCLR AssemblyLoadContext\\project json\nInclude Crypto package for new source code\n  
22926,     Make Start-ResGen smarter: don t need to explicitly list all modules\n  
22927,     remove comments from project json per request\n  
22928,     Merge pull request #1138 from PowerShell/vors/gitignore\n\nAdd uninstall script in  gitignore  
22929,     Merge pull request #1139 from PowerShell/vors/missed-resx\n\nAdd missed resx file  
22930,     Merge pull request #1131 from PowerShell/KarolKaczmarek-patch-1\n\nFixing output location  
22931,     Add missed install/uninstall scripts to  gitignore\n  
22932,     Add new file AssemblyMetadataHelper cs from [SD:715912 \n\ncommit 77eda78\n  
22933,     Update map json with AssemblyMetadataHelper cs\n  
22934,     Fix wrong heuristic to start ResGen\n  
22935,     Add missed resx file from [SD:715912  commit 77eda78\n  
22936,     Add missed resx file into map json\n  
22937,     Ignore untracked files in Copy-MappedFiles pslMonadRoot check\n  
22938,     Add uninstall script in  gitignore\n  
22939,     Merge pull request #981 from PowerShell/SortObjectPesterTest\n\nAdd Sort-Object Pester Unit Test  
22940,     Update fix based on comments for Sort-Object Pester Test\n  
22941,     Add Sort-Object Pester Unit Test\n  
22942,     Update fix based on comments for Export-Clixml and Import-Clixml Pester Test\n  
22943,     Add Export-Clixml and Import-Clixml Pester Test\n  
22944,     Remove authors section from product project json\n  
22945,     Make Microsoft PowerShell ScheduledJob part of build for FullCLR\n  
22946,     Add project json for ScheduledJob  add test that we build PSScheduledJob module\n  
22947,     Bump src/windows-build submodule version\n  
22948,     Copy PSScheduledJob sources from psl-monad [SD:715912 \n\ncommit 77eda78\n  
22949,     Update Start-ResGen to have PSScheduledJob\n  
22950,     Update map json to have PSScheduledJob\n  
22951,     Add map json for Microsoft PowerShell ScheduledJob\n  
22952,     Fix CentOS RID in tests and build module\n  
22953,     Merge pull request #1132 from PowerShell/andschwa/install-docs\n\nUpdate installation docs for v0 5 0  
22954,     Update readme for Windows releases\n  
22955,     Add basic Windows package install instructions\n  
22956,     Fixing output location  
22957,     Bump package version in Linux install docs\n  
22958,     Merge pull request #1128 from PowerShell/andschwa/nano-bits\n\nDowngrade  NET Core packages to Nano s build rc2-24027  
22959,     Bump windows build with new MMI/MMIN packages\n  
22960,     Use CentOS 7  not 7 1 RID\n  
22961,     Downgrade packages to build 24027\n\nThis is the ancient build that Nano uses \n  
22962,     Sign all assemblies with key\n  
22963,     Merge pull request #1126 from PowerShell/vors/bits\n\nAdd test to ensure we build Archive and LocalAccounts correctly  
22964,     Add tests to ensure we build LocalAccounts and Archive correctly\n  
22965,     Merge pull request #1125 from PowerShell/andschwa/latest-dotnet-cli\n\nUnpin  NET CLI  
22966,     Remove LLVM feed\n\nThe feed was switched off due to excess load \n  
22967,     Unpin  NET CLI package\n\nUse latest until further notice \n  
22968,     Merge pull request #1121 from PowerShell/vors/bits\n\nFixes for local-account and process  
22969,     Merge pull request #1120 from PowerShell/andschwa/merge-sd\n\nMerge SD changeset 715912  
22970,     Fix our ResGen to make LocalAccounts work\n  
22971,     Move LocalAccounts ps1xml  psd1 files on the filesystem\n  
22972,     Move LocalAccounts ps1xml  psd1 files from powershell/map json to Modules/map json\n  
22973,     Fix indentation in project json\n  
22974,     Add info about dummy dependencies\n  
22975,     build psm1: Add Copy-MappedFiles -WhatIf switch\n  
22976,     Add first version of docs/building/internals md\n  
22977,     Update  gitignore\n  
22978,     Resurrect ArchitectureSensitiveAttribute\n\nRemoval was backed out in SD:712734\n  
22979,     Update files from Source Depot changeset [SD:715912 \n\nCorresponds to 77eda782aa78ba8b7a36c51ee619629ce6c990f2 in psl-monad \n  
22980,     Merge pull request #1090 from PowerShell/scriptdebug\n\nFix Broken Powershell Debugging   
22981,     Merge pull request #1119 from PowerShell/andschwa/fix-casing-again\n\nFix casing again  
22982,     Merge pull request #1111 from PowerShell/cchen/diagnostics\n\nadding microsoft powershell diagnostics dll to build  
22983,     Fix casing again\n  
22984,     Merge pull request #1117 from PowerShell/andschwa/fix-mapping\n\nFix Copy-MappedFiles  
22985,     Update SD file mappings\n\nThe `ConsoleTextWriter cs` file had a case-sensitivity issue  The\n`ArchitectureSensitiveAttribute cs` and `nativemsh` files were deleted\nin SD \n  
22986,     Copy resources files for Microsoft PowerShell Commands Diagnostics [SD:714215 \n\nCommit 2e2daeaff52930d981a31e0030d7161c4b45cc48\n  
22987,     Fix project json and map json in Microsoft PowerShell Commands Diagnostics\n  
22988,     update project json for consolehost to include microsoft powershell diagnostic\n  
22989,     Fix project json in diagnostics\n  
22990,     Copy files for Microsoft PowerShell Commands Diagnostics [SD:714215 \n\nCommit 2e2daeaff52930d981a31e0030d7161c4b45cc48\n  
22991,     Add AssemblyInfo for Diagnostics\n  
22992,     Add map json to src/Microsoft PowerShell Commands Diagnostics\n  
22993,     Add project json to src/Microsoft PowerShell Commands Diagnostics/project json\n  
22994,     Fix use of aliases in build psm1\n\nAlso use git-dir to make Copy-MappedFiles location agnostic \n  
22995,     Merge pull request #1081 from PowerShell/andschwa/slash-agnostic\n\nMake PowerShell slash-agnostic on Linux  
22996,     Mark tests as pending on Travis s OS X and on Windows\n\nBecause redirected `stdin` does not yet work on Windows  and because any\noutput based test does not yet work on OS X on Travis (where this is no\nTTY)  we cannot yet run these tests on those platforms \n  
22997,     Added PORTABLE as define for debugging and reidented tests \n  
22998,     Guarding Diagonstics to fix powershell debugging on Linux\n  
22999,     Moving debugging tests out of Set-PSBreakpoint tests\n  
23000,     Add backward slash in filename as known issue\n  
23001,     Add tests for hierarchical paths\n  
23002,     Revert string comparison changes\n\nThese comparisons did not need to be changed as the input path is not\nmodified  The normalized relate path created from the stack (if this\ncode path is taken) is created with the correct path separators \n  
23003,     Remove string literals in registry provider\n  
23004,     Fix GetDriveQualifiedPath for single root filesystems\n\nReverted to original code and fixed correctly \n  
23005,     Fix ExpandMshGlobPath for single root filesystems\n\nReverted to original code and fixed correctly \n  
23006,     Fix path root comparisons for Linux\n\nAssuming the path may not be normalized  to make PowerShell slash\nagnostic in a filesystem whose  drive  is a \ /\  and a \ C:\\\   we need to\ncompare to both \ /\  and \ \\\  for users of PowerShell\ s alternate path\nseparator on Linux (\ \\\ ) \n  
23007,     Fix the alternate path separator for Linux\n\nBecause normalization of paths occurs through the location globber and\nfilesystem provider by way of `path Replace(alternate  default)` \nchanging the alternate path separator on Linux to be \ \\\  instead of\n NET\ s \ /\  let\ s PowerShell be  slash agnostic  \n  
23008,     Merge pull request #1114 from PowerShell/andschwa/remove-resgen-artifacts\n\nRemove resgen artifacts  
23009,     Remove resgen artifacts\n\nThis has been deprecated by building these files on the fly using a\ntemplate in PowerShell  instead of using the resgen Windows-only binary \n  
23010,     Merge pull request #1113 from PowerShell/vors/resgen\n\nMove resgen artifacts from submodules into src subfolders  
23011,     Replace aliases by full names to fix build\n  
23012,     Update resources md doc  partialy fix #746\n  
23013,     Move resgen artifacts from submodules into src subfolders\n\nSubmodule adds unnessesary complexity \nThis commit removes dependency on pre-generated C# bindings \nStart-PsBuild -ResGen will call Start-ResGen \nIt also has auto-detect logic to simplify first time expirience \n  
23014,     Merge pull request #1098 from PowerShell/GetMemberCommandTest\n\nAdd Get-Member Pester Test and fix merged to master broken  
23015,     Merge pull request #1107 from PowerShell/andschwa/exclude-files\n\nRemove CORECLR guards  
23016,     Update fix for Get-Member Pester Test\n  
23017,     Merge pull request #1108 from PowerShell/dongbow/build-localaccounts\n\nDongbow/build localaccounts  
23018,     Add Get-Member Pester Test and fix merged to master broken\n  
23019,     Bump windows-build submodule version for LocalAccounts\n  
23020,     Add source files for Microsoft PowerShell LocalAccounts [SD:709776 \n\nCommit 15b1623\n  
23021,     Fix map json for LocalAccounts\n  
23022,     Update project json files to build Microsoft PowerShell LocalAccounts\n  
23023,     Add map json for LocalAccounts\n  
23024,     Fix build psm1 to account for LocalAccount dll\n  
23025,     Update unavailable cmdlets\n\nThese cmdlets were made available in b9bf32d96   
23026,     Work-around dotnet bug\n\nThe include must be duplicated because the root `buildOptions` is not\nbeing applied  whenever compiling the project  \n  
23027,     Exclude FullCLR files from CoreCLR build\n  
23028,     Revert unnecessary changes\n  
23029,     Revert CORECLR guard from FullCLR files\n\nThis reverts the `if !CORECLR     #endif` guard surrounding FullCLR\nfiles by applying the original diff from the `source-depot` branch  thus\nthe accidentally overwritten BOMs were restored as well \n  
23030,     Merge pull request #1097 from PowerShell/CompareObjectPesterTest\n\nFix merge to master broken for Compare-Object Pester Test  
23031,     Merge pull request #1106 from PowerShell/andschwa/pin-dotnet\n\nPin  NET CLI to LKG version 1 0 0-preview2-003067  
23032,     Pin  NET CLI to LKG version 1 0 0-preview2-003067\n\nAlso teach `Start-PSBootstrap` the parameters `Channel` and `Version` to\npass to  NET CLI s obtain scripts \n  
23033,     Change native powershell exe from x86 to x64\n  
23034,     Fix Start-ResGen to produce windows line-ends all the time\n  
23035,     Merge pull request #1102 from PowerShell/vors/map\n\nAdd some intelligence to Copy-MappedFiles  
23036,     Add some intelligence to Copy-MappedFiles\n  
23037,     Merge pull request #1101 from PowerShell/vors/map\n\nEnhance mappings story  
23038,     Update documentation about mapping md\n  
23039,     Add new map json files\n  
23040,     Enhance mappings story\n\n- Split mappings json into mappings json for every project (folder under\n  src)\n- Throw away src\\monad prefix  now it s not relevant\n- Remove New-MappingsFile\n- Rename Copy-SubmoduleFiles to Copy-MappedFiles\n- Make Copy-MappedFiles flexible about set of mappings json that it\n  uses\n  
23041,     Merge pull request #988 from PowerShell/DisplayXMLPesterTest\n\nAdd DisplayXMLTest to Pester Unit Test  
23042,     Update fixes based on James comments for DisplayXML Pester Test\n  
23043,     Update fix based on comment for DisplayXML Pester Test\n  
23044,     Update Format-Custom Tree object Pester Test\n  
23045,     Add Format-Custom Tree object Pester Test\n  
23046,     Fix OSX fail for DisplayXML Pester Test\n  
23047,     Add DisplayXMLTest to Pester Unit Test\n  
23048,     Add Compare-Object Pester Test and fix merge to master broken\n  
23049,     Merge pull request #1093 from PowerShell/andschwa/project-model-update\n\nRename compilationOptions to buildOptions in project json files; Remove NOETW  
23050,     Update building documentations for Linux and OS X\n  
23051,     Force link openssl on OS X\n  
23052,     Update `Start-PSBootstrap` to use  NET CLI\ s scripts\n\nLinux and OS X no longer install packages  instead they download the\n1 0 0 uninstall and install scripts provided by  NET CLI  uninstall all\nexisting `dotnet` packages  and  install  the latest 1 0 0 preview2\nversion of `dotnet` to `~/ dotnet`  which `Start-PSBuild` automatically\npicks up \n\nAdditionally  `Start-PSBootstrap` only attempts to install dependencies\nwhen it detects that it is on Ubuntu 14 04  otherwise it warns that\ndependencies must be installed manually  and still installs `dotnet` via\ntheir obtain script  This makes `Start-PSBootstrap` safe to run on\nDebian  and usable on CentOS \n  
23053,     Use `include` key in `copyToOutput` and `publishOptions`\n\nWhile the schema says that a `string[ ` will be picked up as if ` \n include  : [        ` was used  it does not  This is a  NET CLI bug \n  
23054,     Don t attempt to publish any profiles\n\nPowerShell does not ship with any default profiles \n  
23055,     Update content to `copyToOutput` and `publishOptions`\n\nThese must be duplicated as we require the same files for both `build`\nand `publish`  This is the requirement of the new schema  as `content`\nwas split \n\nNote that while each key can take an object  if given just a `string[ `\nas we do here  it defaults to `include` \n\nSee the new schema:    com/aspnet/Announcements/issues/175\n  
23056,     Remove unnecessary LINUX configuration from Commands Utility\n  
23057,     Remove NOETW in favor of LINUX\n\nETW is available on Windows  so this is only (and will always be)\nnecessary for Linux \n  
23058,     Move compile data to build options\n  
23059,     Rename compilationOptions to buildOptions in project json files\n\nThis resolves #928  This is a breaking change in that you *must* be\nrunning a recent version of  NET CLI \n  
23060,     Merge pull request #1091 from PowerShell/vors/xunit\n\nRe-enable xunit tests  
23061,     Temporarely skip 1 failing test\n  
23062,     Revert  Temporarily disable xUnit tests \n\nThis reverts commit 3d18f454f61d86c0ab9d57dc67fac0756bfd0ea9 \n  
23063,     Remove Microsoft PowerShell Diagnostics from default Snapins on LINUX\n  
23064,     Merge pull request #982 from PowerShell/SelectObjectPesterTest\n\nAdd Select-Object Pestert Test  
23065,     Merge pull request #989 from PowerShell/CsvCommandTest\n\nAdd Unit Test for Export-Csv  
23066,     Merge pull request #1022 from PowerShell/ImportCSVV2Tests\n\nAdd Unit Test for Import-Csv  
23067,     Merge pull request #983 from PowerShell/ConvertToXml\n\nAdd Unit Test for ConvertTo-Xml  
23068,     Merge pull request #1060 from PowerShell/xdg\n\nXDG Changes\r\nI like these tests much better now - far easier to follow\r\n  
23069,     Refactor base directory tests\n  
23070,     Merge pull request #1075 from PowerShell/andschwa/binary-compatibility\n\nCross-platform (FullCLR/CoreCLR) binary module creation  
23071,     Fix Windows consistency tests\n\nUse `USERPROFILE`  not `HOME`  The latter doesn t exist on Windows  and\n`HOMEPATH` strips the drive  The former provides `C:\\Users\\<username>` \n\nFix location tested for JIT cache location on Windows \n  
23072,     XDG cache directory now guaranteed to exist\n  
23073,     Update ModuleAnalysisCache to use XDGBDS on Linux\n  
23074,     Skip tests which can t be run on Travis OS X\n\nThese should be marked as `-Pending` but Pester doesn t accept both\n`-Skip` and `-Pending` parameters  so they had to be combined to support\nskipping on Windows \n  
23075,     Whitespace and formatting cleanups\n  
23076,     Fix PSReadLine history path on Windows\n\nBug introduced in initial port of PSReadLine  `Path Combine` sees the\ninitial backslash as an absolute path  thus discarding `AppData` \n  
23077,     XDG cache home now will create powershell child folder\n  
23078,     configdefault missed in refactoring\n  
23079,     Style changes and psreadline path change\n  
23080,     Update XDG BDS tests to specifications\n\nThis renames the tests and updates for better requirement\nspecifications  The profile  modules  history  and startup cache data\nare tested for not breaking Windows behavior  new Linux behavior  and\nrespecting set variables on launch  This also corrects some erroneous\nassumptions I had previously made \n\nThe ModuleAnalysisCache cannot be tested  and the startup cache data\nmight not be testable on Windows \n  
23081,     Changing history to cache  removed redundant code\n  
23082,     Further code review changes\n  
23083,     Adding XDG tests\n  
23084,     Changes to xdg to append powershell path\n  
23085,     Code review changes to XDG support\n  
23086,     Initial XDG support and folder default changes\n\nConflicts:\n\tsrc/Microsoft PowerShell ConsoleHost/host/msh/ConsoleHost cs\n  
23087,     Revert  Merge pull request #1046 from PowerShell/GetMemberCommandTest \n\nThis reverts commit 7392c68bcb9df71cdc8598924f78bac1981e5c53  reversing\nchanges made to 1ee6e4ef2d69e08c317f432c48783fc9267b322f \n  
23088,     Revert  Merge pull request #1047 from PowerShell/CompareObjectPesterTest \n\nThis reverts commit 1ee6e4ef2d69e08c317f432c48783fc9267b322f  reversing\nchanges made to 5a0155dc9d73790d0e55e018769c080ea1945897 \n  
23089,     Merge pull request #1024 from PowerShell/MeasureObjectPesterTest\n\nAdd Measure-Object Pester Unit Test  
23090,     Merge pull request #1046 from PowerShell/GetMemberCommandTest\n\nAdd Unit Test for Get-Member  
23091,     Merge pull request #1047 from PowerShell/CompareObjectPesterTest\n\nAdd Compare-Object Pester Unit Test  
23092,     Merge pull request #1056 from PowerShell/NewObjectPesterTest\n\nAdd New-Object Pester Unit Test  
23093,     Merge pull request #1057 from PowerShell/SelectXMLPesterTest\n\nAdd Select-XML Pester Unit Test  
23094,     Merge pull request #1059 from PowerShell/TeeObjectTests\n\nAdd Unit Test For Tee-Object  
23095,     Merge pull request #1077 from PowerShell/andschwa/tools\n\nMove some tools into tools tree  
23096,     Merge pull request #1079 from PowerShell/RaghuS-RenameAssetsBranch\n\nRenamed  Assets  folder to  assets  - for systems that are case sensitive  
23097,     Renamed Assets folder to assets - for systems that are case sensitive\n  
23098,     Merge pull request #1078 from PowerShell/RaghuS-MSIPackageFixesBranch\n\nFixes around MSI packaging functionality  
23099,     Moved MSI wxs file to assets ; Renamed MSI package creation function to be compliant with PowerShell verb-noun conventions\n  
23100,     Add LLDB with SOS via tools/debug sh note to debugging docs\n  
23101,     Update debug sh script for new layout\n  
23102,     Move debug sh\n  
23103,     Move download sh script to tools tree\n  
23104,     Merge pull request #1076 from PowerShell/andschwa/trace-command-docs\n\nAdd debugging info on use of Trace-Command  
23105,     Merge pull request #1073 from PowerShell/RaghuS-SignPackageToolsBranch\n\nUtility to generate a self-signed certificate and sign a given package such as OpenPowerShell zip/appx/msi  
23106,     Add debugging info on use of Trace-Command\n  
23107,     Test import of cmdlet-example module on FullCLR PowerShell\n  
23108,     Update cmdlet-example to use netstandard1 3\n\nAs this enables importing the same DLL everywhere \n  
23109,     Utility to generate a self-signed certificate and sign a given package such as OpenPowerShell zip/appx/msi\n  
23110,     Merge pull request #1072 from PowerShell/andschwa/psversiontable-issue\n\nAsk for $PSVersionTable in issue template  
23111,     Ask for $PSVersionTable in issue template\n  
23112,     Merge pull request #1048 from PowerShell/andschwa/skip-extensions\n\nDon t require extensions for script ps1 etc  on Linux  
23113,     Add tests for command name matching\n  
23114,     Allow scripts to be called without  ps1 extension\n\nFor instance  `script ps1` can be called with just `script` \n  
23115,     Merge pull request #1068 from PowerShell/andschwa/trace-command\n\nPort Trace-Command  
23116,     Add Get-TraceSource test\n  
23117,     Import Trace-Command tests from source depot\n  
23118,     Enable tracing commands in module\n  
23119,     Use Dispose() instead of Close() for CORECLR\n  
23120,     Use Security Permissions stub\n  
23121,     Merge pull request #919 from PowerShell/WriteTests\n\nAdd Unit Test For Write Command  
23122,     Build utility/trace sources for Core PowerShell\n  
23123,     Add TextWriterTraceListener to Commands Utility\n  
23124,     Merge pull request #1069 from PowerShell/andschwa/debian\n\nAdd Debian 8 RID  
23125,     Add Debian 8 RID\n  
23126,     Fixed CR Issues of Write-Host and Write-Output\n  
23127,     Update fix based on comments for Select-XML Pester Test\n  
23128,     Merge pull request #1066 from PowerShell/RaghuS-AppxPackageBranch\n\nAdd Ability to generate Appx packages  
23129,     Capture the final build version field from the complete version field\n  
23130,     Added additional logging for the appx function\n  
23131,     Added final version field for makeappx\n  
23132,     Fix more typo in yml\n  
23133,     Fix Appveyor yml parse issues - converted few more tabs to white spaces\n  
23134,     Fix Appveyor yml parse issues\n  
23135,     Add Ability to generate Appx packages\n  
23136,     Fixed CR Issues\n  
23137,     Fixed CR issues\n  
23138,     Fixed CR issues\n  
23139,     Merge pull request #1065 from PowerShell/andschwa/fix-start-psxunit\n\nFix and improve Start-PSxUnit  
23140,     Make git describe work relative to script\n\nSo that you don t have to watch your CWD when running commands from the\nbuild module \n  
23141,     Fix and improve Start-PSxUnit\n\n* Last PR had a typo in  TestAruments  which caused the configuration\n  not to get picked up\n* Now bails appropriately if PowerShell wasn\ t built  instead of\n  rebuilding it every time\n* Passes `-verbose` to the xUnit runner  not dotnet  so we can see which\n  test failed\n  
23142,     Merge pull request #1063 from PowerShell/GetPsCallStackTests\n\nAdd Unit Test for Get-PSCallSta  
23143,     Merge pull request #1064 from PowerShell/andschwa/fix-start-psxunit\n\nFix Start-PSxUnit  
23144,     Add Unit Test for Get-PSCallSta\n  
23145,     Update fix based on comments for Measure-Object Pester Test\n  
23146,     Update fix based on comments for Compare-Object Pester Test\n  
23147,     Update fix based on comments for New-Object Pester Test\n  
23148,     Update fix based on comments for Select-XML Pester Test\n  
23149,     Fix Start-PSxUnit\n  
23150,     Merge pull request #1054 from PowerShell/andschwa/wix-docs\n\nUpdate releasing notes for WiX  
23151,     Merge pull request #1049 from PowerShell/andschwa/revert-history-merge\n\nRevert EndProcessing to original code  
23152,     Merge pull request #1061 from PowerShell/andschwa/merge-sd\n\nMerge changes from [SD:709766   
23153,     Merge pull request #1052 from PowerShell/RaghuS-PackageManagementMappingUpdate\n\nUpdated PackageManagement mappings  
23154,     Bump windows-build\n  
23155,     Update files from Source Depot changeset [SD:709766 \n\nCorresponds to 15b1623435d6a195d1e877ba5c43709d991f573a in psl-monad \n  
23156,     Revert ALC rename\n  
23157,     Add Unit Test For Tee-Object\n  
23158,     Add Select-XML Pester Unit Test\n  
23159,     Remove a invalid TC to Fix issue of Update-TypeData\n  
23160,     Add NewObjectDRTTestsV2 Pester Unit Test\n  
23161,     Add New-Object Pester Unit Test\n  
23162,     Merge pull request #1053 from PowerShell/andschwa/coreconsolehost\n\nRemove more references to CoreConsoleHost  
23163,     Update releasing notes for WiX\n  
23164,     Update TypeCatalogParser for CoreConsoleHost removal\n  
23165,     Remove references to CoreConsoleHost from docs\n\nThe `src/powershell` project is the new host \n  
23166,     Revert CoreConsoleHost changes made to SMA\n  
23167,     Updated PackageManagement mappings based on 5/27/2016 SD changes\n  
23168,     Revert EndProcessing to original code\n\nThis appears to have been changed in a bad merge  Now these changes are\nexactly as in source-depot at [SD:706766  \n  
23169,     Update Get-Member Pester Test\n  
23170,     Add Unit Test for Get-Member\n  
23171,     Add Compare-Object Pester Unit Test\n  
23172,     Merge pull request #1043 from PowerShell/andschwa/typedata-pr\n\nFix Remove-TypeData runspace isolation  
23173,     Fix Remove-TypeData runspace isolation\n\nResponding to PR review \n  
23174,     Add troubleshooting notes dotnet restore for OS X\n\n[skip ci   
23175,     Merge pull request #1039 from PowerShell/andschwa/break-handler\n\nPort ConsoleHost break handler to System Console  
23176,     Port ConsoleHost break handler to System Console\n  
23177,     Merge pull request #1038 from PowerShell/jimtru-IgnorePackageFix\n\nbe sure to have git ignore a bunch of different package types  
23178,     be sure to have git ignore a bunch of different package types\n  
23179,     Fixed issue on OSX\n  
23180,     Remove Write-Debug Test\n  
23181,     Merge pull request #1035 from PowerShell/ealexjordan/fix-vscode-task\n\nSuppressing taskname in tasks json so  build  is not being sent as cmd  
23182,     Merge pull request #1032 from PowerShell/RaghuS-MSIPackageBranch\n\nCapability to generate Windows MSI packages  
23183,     Suppressing taskname in tasks json so  build  is not being sent as cmd\n  
23184,     Redirect WIX native output to Write-Verbose\n  
23185,     Remove MMI from Publish-NuGetFeed\n\nThis project was removed and provided as a package in the windows-build\nsubmodule  The artifact uploading to AppVeyor fails because this was not\nupdated \n  
23186,     Create MSI packages on AppVeyor\n  
23187,     Ignore executables\n  
23188,     Guard Remove-Item in Create-MSIPackage\n  
23189,     Return path to built package in Start-PSBuild\n\nFor Windows only right now \n  
23190,     Call Create-MSIPackage from Start-PSBuild\n  
23191,     Add MSI package creation capability\n  
23192,     Merge pull request #1028 from PowerShell/andschwa/fork-faq\n\nAdd FAQ about Travis CI failures from forks  
23193,     Merge pull request #1029 from PowerShell/andschwa/initialze-default-context\n\nSwitch from AssemblyLoadContext InitializeDefaultContext to AssemblyLoadContext Resolving event   
23194,     Merge pull request #1030 from PowerShell/andschwa/remote-typedata-test-fix\n\nIsolate Remove-TypeData tests with runspace  
23195,     Add FAQ about Travis CI failures from forks\n  
23196,     Isolate Remove-TypeData tests with runspace\n  
23197,     Rename PowerShellAssemblyLoadContext to PowerShellAssemblyLoader\n\nPowerShellAssemblyLoadContext does not inherit from AssemblyLoadContext  Rename\nit to avoid confusion \n  
23198,     Switch from AssemblyLoadContext InitializeDefaultContext to AssemblyLoadContext Resolving event\n\nAssemblyLoadContext InitializeDefaultContext was removed for  NET Core 1 0 RTM  Replaced its use\nwith AssemblyLoadContext Resolving event \n  
23199,     Merge pull request #1018 from PowerShell/andschwa/import-sd\n\nMerge SD changes  
23200,     Merge pull request #1026 from PowerShell/vors/nuget\n\nAdding Nuget artifacts to AppVeyor project nuget feed  
23201,     Merge pull request #1027 from PowerShell/jimtru-updateformattestfix\n\nJimtru updateformattestfix  
23202,     modified update-typedata tests for better isolation\n\nsimilar changes here as found in update-formatdata  Run each test in it s own\nPowerShell/Runspace instance which will protect the default runspace from\ndestructive changes\n  
23203,     modify updateformatdata tests to use runspace to isolate format changes \n\nThis should be the pattern for any test which mainupulates current state\nto protect from unintended side effects  This was done by default in ttest\nbecause each test would have its own runspace\n  
23204,     Merge pull request #918 from PowerShell/UpdateTypeDataPesterTest\n\nAdd Update-TypeData and Update-FormatData Pester Unit Test  
23205,     Bump windows-build\n  
23206,     Update files from Source Depot changeset [SD:706766 \n\nCorresponds to e2ce37c87c0ab9795bfac2389edc1aff934bdb9e in psl-monad \n  
23207,     Merge pull request #1025 from PowerShell/andschwa/move-mmi\n\nExport Microsoft Management Infrastructure project to package  
23208,     Merge pull request #1020 from PowerShell/vors/dotnet-install\n\ndotnet team changed their script name  change our bootstrap  
23209,     Bump windows-build with MMI package\n  
23210,     Remove MMI project\n  
23211,     Remove MMI files from mapping json\n  
23212,     Add Measure-Object Pester Unit Test\n  
23213,     Add Unit Test for Import-Csv\n  
23214,     dotnet team changed their script name  change our bootstrap\n  
23215,     Fix VersionSuffix in nuget packaging from appveyor yml\n  
23216,     Enable project_feed in appveyor yml\n  
23217,     Add Publish-NuGetFeed function to build psm1\n  
23218,     Update appveyor badge link [skip ci   
23219,     Merge pull request #1017 from PowerShell/andschwa/xunit\n\nUpdate xUnit runner  
23220,     Add FAQ about windows-build/nuget-feed being empty\n\nAnd then causing `dotnet restore` to fail \n  
23221,     Update xUnit tests to depend on powershell project\n  
23222,     Run xUnit tests verbosely\n  
23223,     Update dotnet-test-xunit package\n  
23224,     Use get-command instead of get-process in xUnit\n  
23225,     Added a V2 TC\n  
23226,     Add Unit Test for Write-Host\n  
23227,     Fix the CR issues for Write command test\n  
23228,     Add Unit Test For Write Command\n  
23229,     Update fix based on comment for Select-Object Pester Test\n  
23230,     Fixed CR Issues\n  
23231,     Fixed CR Issues\n  
23232,     Merge pull request #1013 from PowerShell/andschwa/secure-string\n\nAdd SecureString known issue  
23233,     Merge pull request #1015 from PowerShell/andschwa/secure-string-version\n\nBump System Security SecureString to 4 0 0  
23234,     Merge pull request #978 from PowerShell/ConverttoCSVDRT\n\nAdd Unit Test for ConvertTo-Csv\r\nthanks for updating   
23235,     Add SecureString known issue\n  
23236,     Merge pull request #1009 from PowerShell/jimtru-psversion2\n\nupdate PSVersionTable code to use powershell version rather than  version…  
23237,     Bump Eventing s SecureString version dependency\n  
23238,     Bump System Security SecureString version to 4 0 0\n  
23239,     Merge pull request #1011 from PowerShell/andschwa/slow-tests\n\nSkip slow Pester tests  
23240,     Skip slow tests in Start-PSPester\n\nThis will skip them for Linux and OS X (which are currently slower than\nAppVeyor) \n  
23241,     Mark SendGreeting module tests as slow\n  
23242,     Mark ConsoleHost tests as slow\n  
23243,     Merge pull request #1007 from PowerShell/andschwa/script-call-depth-exception\n\nAdd regression test for CallDepthOverflow  
23244,     Add jobs known issue\n  
23245,     Merge pull request #1008 from PowerShell/andschwa/ci-upgrade\n\nRefactor to get latest asset ID using API  
23246,     Refactor to get latest asset ID using API\n  
23247,     update PSVersionTable code to use powershell version rather than  version because on Linux the  version file doesn t seem to be binplaced  I postulate this is because it s a hidden file\n  
23248,     Add regression test for CallDepthOverflow\n  
23249,     Merge pull request #1000 from PowerShell/andschwa/delete-profile\n\nRemove system profile  
23250,     Merge pull request #999 from PowerShell/jimtru-AddGitCommitToPSVersionTable\n\nadd functionality to PSVersionTable to include GitCommitID and update…  
23251,     Merge pull request #1002 from PowerShell/andschwa/fix-build\n\nImport build psm1 on Travis  
23252,     Temporarily disable xUnit tests\n  
23253,     Import build psm1 on Travis\n\n`ag` ignored the ` travis yml` when this change was made \n  
23254,     Merge pull request #1001 from PowerShell/andschwa/import-sd\n\nMerge Source Depot changes  
23255,     Bump windows-build\n  
23256,     Don t compile GetComputerInfoCommand cs\n  
23257,     Update files from Source Depot changeset [SD:704605 \n\nCorresponds to 75764b265885c1a346d1b2dbcb281d61b71c5b31 in psl-monad \n  
23258,     Remove system profile\n  
23259,     Update mapping json for SD:704605\n  
23260,     Merge remote-tracking branch  origin/master  into jimtru-AddGitCommitToPSVersionTable\n  
23261,     Merge pull request #998 from PowerShell/andschwa/mapping\n\nUpdate  gitignore and mapping json  
23262,     add functionality to PSVersionTable to include GitCommitID and update tests\n  
23263,     Update mapping json for OneGet files\n\nThis purposefully does not include test files  which is out of my scope \n  
23264,     Merge pull request #997 from PowerShell/andschwa/improve-build\n\nImprove error message of Start-NativeExecution  
23265,     Ignore Packages and src/monad\n\nThe former is the NuGet package location on Windows  and the latter is\nused for copying from the old submodule \n  
23266,     Improve error message of Start-NativeExecution\n  
23267,     Merge pull request #995 from PowerShell/andschwa/build-psm1\n\nRename PowerShellGitHubDev psm1 to build psm1  
23268,     Use -noprofile in build sh\n  
23269,     Merge pull request #994 from PowerShell/vors/issue-template\n\nAlternate issue template  
23270,     Rename PowerShellGitHubDev psm1 to build psm1\n  
23271,     Alternate issue template\n\nA lot of people starting self-host released versions of powershell\r\nTemplate should reflect this fact  
23272,     Merge pull request #990 from PowerShell/andschwa/docs\n\nDocumentation update  
23273,     Add non-interactive console known issue\n  
23274,     Add team coordination link to internal docs\n  
23275,     Add aliases known issue\n  
23276,     Add sessions known issue\n  
23277,     PSRP known issues removed\n\nSince it was decoupled from this repo \n  
23278,     Eventing known issue is fixed\n  
23279,     MMIN known issue is fixed\n  
23280,     Update Linux installation documentation\n  
23281,     Link Pester readme to Pester Do and Don t\n  
23282,     Fix docs/Testing capitalization\n  
23283,     Add Unit Test for Export-Csv\n  
23284,     Add SelectObjectV2DRT Pester Unit Test\n  
23285,     Merge pull request #939 from PowerShell/andschwa/consolehost\n\nConverge the console hosts  
23286,     Fix ReadLineWithTabCompletion port\n\nRevert change made within the function since the function itself is\ncompiled out for the portable version of PowerShell \n  
23287,     Use WrapSize for WindowSize when unavailable\n  
23288,     Say that the portable UI supports virtual terminal\n\nWhich is most likely true \n  
23289,     Rename OPEN flag to PORTABLE\n\nMakes more sense \n  
23290,     Mark as pending Travis CI OS X failing tests\n\nThese tests *do not* fail locally  nor on the Linux test runner  They do\nnot fail when accessing the OS X runner under debug mode  The *only*\ncause is the lack of a TTY on the OS X runner  which is a Travis CI\nregression  Moreover  the formatting tests do not fail when the TTY is\nremoved locally \n\nThese absolutely should be fixed at some point  but it is not worth\nspending any more time on it \n  
23291,     Fix formatting and output when stdout is redirected\n  
23292,     Enable pre and post write in WriteToConsole\n  
23293,     Remove env key from OS X build\n\n`Start-PSBootstrap` takes care of this \n  
23294,     Disable Set-PSDebug tests on AppVeyor\n\nThese pass locally  just not with AppVeyor s host \n  
23295,     Use Pending for tests that shouldn t be Skipped\n  
23296,     Fix Import-Alias tests\n  
23297,     Clean up Set-PSDebug tests\n  
23298,     Mark redirected input test as pending on Windows\n\nWhile this passes on Linux  it does not pass on Windows  indicating a\nplatform-specific bug in  NET Core \n  
23299,     Guard BufferSize for improper terminals\n  
23300,     Don t build more unused code\n\nThis code is all used for reading secure strings  which we don t yet\nsupport \n  
23301,     Use -noninteractive on AppVeyor\n  
23302,     Skip complex prompting tests\n\nNot supported with non-PSReadLine Open PowerShell host \n  
23303,     Add ConsoleHost tests\n  
23304,     Use -noprofile on AppVeyor\n  
23305,     Add -noprofile to Start-PSPester\n  
23306,     Fix AppVeyor to use Get-PSOutput\n\nInstead of hard-coded paths \n  
23307,     Mark as pending tests not working with ConsoleHost\n  
23308,     Import System Console In/Out/Error stream changes\n\nThanks Jason \n  
23309,     Delete deprecated CoreConsoleHost project\n  
23310,     Add readme to src/powershell\n  
23311,     Migrate profile\n  
23312,     Migrate CoreConsoleHost/Modules\n\nAnd update mapping json\n  
23313,     Add managed entrance for powershell project\n\nThe powershell project s `Main` function initializes the custom\n`AssemblyLoadContext` and then delegates to `UnmanagedPSEntry Start` \nThis lets us undo several changes to the `ConsoleHost` managed\nentry (notably  the `Start` function signature does not have to change \nthus the `consoleFilePath` variable still exists) \n  
23314,     Add powershell project shim\n\nThe `src/powershell` project builds Core PowerShell as a  NET CLI app \nwith a dependency on `Microsoft PowerShell ConsoleHost`  so that the\nlatter can remain a library \n  
23315,     Fix ConsoleHost on Windows CoreCLR build\n  
23316,     Remove platform tests\n\nThis is pointless to test as the  NET Code better be correct  or we have\nworse problems \n  
23317,     Skip xUnit tests not yet ported to OS X\n  
23318,     Remove deprecated Listener tests\n  
23319,     Remove CoreConsoleHost from xUnit tests\n  
23320,     Make ConsoleHost internals visible to powershell-tests\n  
23321,     Update xUnit project to use ConsoleHost\n  
23322,     Fix PSReadLine for net451 build\n\nNeeded System Windows Forms\n  
23323,     Update ConsoleHost tests\n  
23324,     Migrate ConsoleHost tests\n  
23325,     Fix command-line parser to support --parameters\n  
23326,     Migrate ConsoleHost  gitignore\n  
23327,     Load PSReadLine by correct name\n\nLinux is case-sensitive  so the modules are too \n  
23328,     Build PSReadLine for ConsoleHost\n  
23329,     Use ~/ powershell for ConsoleHost profile on Linux\n  
23330,     Guard use of ConsoleControl in ConsoleHostRawUserInterface\n\nThis uses the RawUserInterface implementation from the original\nCoreConsoleHost \n  
23331,     Guard use of ConsoleControl in ConsoleHostUserInterface\n  
23332,     Guard use of ConsoleControl in ConsoleHost\n  
23333,     Don t build ConsoleControl\n  
23334,     Don t build EngineInstaller\n  
23335,     Don t build MshHostMshSnapin\n  
23336,     Guard AmsiUtils in SessionState Init\n  
23337,     Remove native host dependency for ConsoleHost\n\nWhen Open PowerShell is built (as  NET Core project)  `OPEN` is defined \nThe `Start` function normally used as the entry point from PowerShell s\ncustom native host is instead the real `Main` entry point of the\nprogram  so it can be launched from the `dotnet` host \n\nBecause Core PowerShell depends on the native host to setup the custom\nassembly load context  we do it here in managed code immediately on\nstart-up \n  
23338,     Make ConsoleHost deploy profiles and native libraries\n  
23339,     Make ConsoleHost/AssemblyInfo portable\n  
23340,     Make ConsoleHost emit powershell executable\n  
23341,     Always build ConsoleHost as top project\n  
23342,     Merge pull request #986 from PowerShell/andschwa/fix-cmdlet-example-packages\n\nPin cmdlet example packages to RC2  
23343,     Pin cmdlet example packages to RC2\n\nOtherwise builds fail because of RC3 \n  
23344,     Merge pull request #980 from PowerShell/vors/pkg\n\nAdd workaroud for OS X packaging utime bug  
23345,     Add Unit Test for ConvertTo-Xml\n  
23346,     Add Select-Object Pestert Test\n  
23347,     Update ErrorAction from SilentlyContinue to Ignore for remove-item in Update-TypeData Pester test\n  
23348,     Update fixes based on lzybkr comments for Update-TypeData Pester Test\n  
23349,     Fixed the CR issue\n  
23350,     Fix the CR issue for Update-TypeData\n  
23351,     Update fixes based on comments for Update-TypeData Pester Test\n  
23352,     Add Update-TypeData and Update-FormatData Pester Unit Test\n  
23353,     Fix CR Issues\n  
23354,     Comment out template guidelines\n\nThanks @vors! This makes the guidelines not show up in the rendered\nissue/pull request  but keeps the text in the source \n  
23355,     Add workaroud for OS X packaging utime bug\n  
23356,     Merge pull request #970 from PowerShell/ConvertFromCsvDRTTests\n\nAdd Unit Test for ConvertFrom-Csv  
23357,     Merge pull request #969 from PowerShell/ExportFormatDataCommandTests\n\nAdd Unit Test for Export-FormatData  
23358,     Merge pull request #967 from PowerShell/RemoveTypeDataCommandTest\n\nAdd Unit Test for Remove-TypeData  
23359,     Add Unit Test for ConvertTo-Csv\n  
23360,     Merge pull request #976 from PowerShell/vors/publish\n\nFix warning message in Start-PSBuild  
23361,     Fix warning message in Strt-PSBuild\n  
23362,     Merge pull request #973 from PowerShell/dantra/buildfix\n\nUpdate location where Start-PSBuild expects to find dotnet exe  
23363,     Update location where Start-PSBuild expects to find dotnet exe\n  
23364,     Fixed CR issues\n  
23365,     Fixed CR issues\n  
23366,     Add Unit Test for ConvertFrom-Csv\n  
23367,     Add Unit Test for Export-FormatData\n  
23368,     Fixed CR issues for Remove-TypeData\n  
23369,     Merge pull request #968 from HemantMahawar/master\n\nAdded a readme to clarify where internal vs  public documents should go  
23370,     Added a readme to clarify where internal vs  public documents should go \n  
23371,     Add Unit Test for Remove-TypeData\n  
23372,     Merge pull request #965 from PowerShell/NewTimeSpanPesterTest\n\nAdd Unit Test for New-TimeSpan  
23373,     Merge pull request #964 from PowerShell/GroupObjectTests\n\nAdd Unit Test for Group-Object  
23374,     Add Unit Test for New-TimeSpan\n  
23375,     Merge branch  master  into GroupObjectTests  
23376,     Add Unit Test for Group-Object\n  
23377,     Merge pull request #963 from PowerShell/andschwa/fix-appveyor\n\nPin AppVeyor to  NET CLI 1 0 0-rc2-002655  
23378,     Pin AppVeyor to  NET CLI 1 0 0-rc2-002655\n\nThe preview channel s latest is no good \n  
23379,     Merge pull request #961 from PowerShell/andschwa/output-switch\n\nAdd -Output switch to fix debug story  
23380,     Bump MMIN package to rc4\n\nWith the correct NETStandard Library dependency \n  
23381,     Ignore the debug folder\n  
23382,     Add an FAQ about build failures\n  
23383,     Note the pre-release VS Code requirements\n  
23384,     Make VS Code debug powershell with -NonInteractive\n  
23385,     Use -Output switch to fix VS Code debugging story\n  
23386,     Add Start-PSBuild -Output switch\n\nWhen specified  it will join the given path relative to the PowerShell\nrepository  This is useful to choose where the built artifacts will\nend-up  which is necessary to fix VS Code tasks \n  
23387,     Merge pull request #955 from PowerShell/ConvertFromStringDataTest\n\nAdd Unit Test for ConvertFrom-StringData  
23388,     Merge pull request #949 from PowerShell/native\n\nremove dependency on native GetHostname  
23389,     Merge pull request #933 from PowerShell/FormatCustomListWidePesterTest\n\nAdd Format-Custom Format-List Format-Wide Pester Test  
23390,     Merge pull request #920 from PowerShell/removeitem\n\nFixes removal of symbolic link on Windows\r\n\r\nAnd don t ask confirmation on Linux  
23391,     Merge pull request #908 from PowerShell/GetUniqueTests\n\nAdd Unit Test for Get-Unique  
23392,     Merge pull request #899 from PowerShell/GetRandomCommandTest\n\nAdd Unit Test for Get-Random  
23393,     Add Unit Test for ConvertFrom-StringData\n  
23394,     Merge pull request #950 from PowerShell/andschwa/dsc\n\nUse nuget package for MI dll  MMI Native dll and MMI Native Unmanaged dll  
23395,     Fix the CR issue for Get-Unique\n  
23396,     Add Unit Test for Get-Unique\n  
23397,     Fix the CR issues for Get-Random\n  
23398,     Fix the CR issue for Get-Random\n  
23399,     Fix the issue of CR for Get-Random\n  
23400,     Add Unit Test for Get-Random\n  
23401,     remove dead code\n  
23402,     Change NUGET_PACKAGES env setting to be conditioned on IsWindows\n  
23403,     Bump src/windows-build submodule\n\nWith MMI package \n  
23404,     Update PS build script to set env:NUGET_PACKAGES to support custom package installation directory \n  
23405,     Switch to MMI Native package instead of stub\n\nUpdate build to use a custom Package directory (`dotnet restore`\ninstalls package assemblies to this location) \n  
23406,     Strong name sign and InternalsVisibleTo for Microsoft Windows DSC CoreConfProviders\n  
23407,     remove dependency on native GetHostname\n  
23408,     Use shell-agnostic ; instead of && in template  
23409,     Merge pull request #941 from PowerShell/BryceM-dev\n\nPorting TTests from psl-monad Management DRTs  
23410,     removing debug code\n  
23411,     Incorporating feedback from code-review\n  
23412,     Merge pull request #947 from PowerShell/andschwa/update-packages\n\nUpdate  NET Core packages  
23413,     Add PSReadLine regression tests\n  
23414,     Update dotnet-test-xunit package\n  
23415,     Pin DotNet packages to eliminate NuGet warnings\n  
23416,     Add canonical CLI  NuGet  and xUnit feeds\n  
23417,     Update  NET Core from build 24022 to 24103\n  
23418,     Merge pull request #943 from PowerShell/andschwa/cmdlet-example\n\nAdd cmdlet example project with readme  
23419,     Add tests for cmdlet example\n  
23420,     Add AppVeyor sign-in instructions to FAQ\n  
23421,     Add cmdlet example project with readme\n  
23422,     Update Format-Custom Format-List Format-Wide Pester Test\n  
23423,     Porting TTests from psl-monad Management DRTs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/ClearEventLogDRT cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/CombinePathCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/ContentCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/ConvertPathCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/DebugProcessDRT cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/EventlogCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/GetEventLogDRTTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/GetHotFixDRTTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/GetProcessDRTTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/GetProviderCommandTest cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/GetServiceV2DRT cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/GetWMIObjectTest cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/InvokeWMIMethodTest cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/LimitEventLogDRT cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/NavigationTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/NewEventLogDRT cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/ParsePathCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/PingComputerDRT cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/PingPathCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/ProcessCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/ProcessTaskTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/PropertyCommandTests cs\n\n   com/PowerShell/psl-monad/monad/tests/monad/DRT/commands/management/UnitTests/RemoveEventLogDRTTests cs\n  
23424,     Merge pull request #937 from PowerShell/psreadline5\n\nFix MenuComplete  
23425,     Merge pull request #938 from PowerShell/andschwa/fix-tab-completion\n\nFix directory completion for different file-systems  
23426,     Fix directory completion for different file-systems\n\nUse the file-system agnostic `System IO Path DirectorySeparatorChar` for\n`GetReplacementTextForDirectory`  instead of hard-coded backslashes \n  
23427,     Fix MenuComplete\n  
23428,     Merge pull request #934 from PowerShell/psreadline4\n\nA number of PSReadLine changes  
23429,     Undo accidental removal of new keyword\n  
23430,     Remove commented out line\n  
23431,     Change default history file location\n  
23432,     Include System Windows Forms only if not CORECLR\n  
23433,     Change from check for Linux to not Windows\n  
23434,     Merge with Andy s changes\n  
23435,     Fix ClearScreen  and disable scroll-related functions that don t work in CoreCLR\n  
23436,     Fix Undo/Redo\n  
23437,     Change default colors  and show highlighted text properly\n  
23438,     Merge pull request #931 from PowerShell/andschwa/fix-keys\n\nFix comparison of keys in dispatch dictionary  
23439,     Fix comparison of keys in dispatch dictionary\n\nThis compares the keys by a combination of their ConsoleKey and\nModifiers fields  We cannot compare the KeyChar field as it is\nplatform (and TTY configuration) dependent \n  
23440,     Add Format-Custom Format-List Format-Wide Pester Test\n  
23441,     Merge pull request #927 from PowerShell/andschwa/sync-sd\n\nUpdate files from Source Depot changeset [SD:700586   
23442,     Merge pull request #926 from PowerShell/andschwa/package-management\n\nAdd PackageManagement sources to mapping json  
23443,     Merge pull request #923 from PowerShell/andschwa/test-psreadline\n\nImport TestPSReadLine  
23444,     Bump windows-build\n  
23445,     Update files from Source Depot changeset [SD:700586 \n\nCorresponds to 84837459913bb00660964d19ea07f5e0c7b4b442 in psl-monad \n  
23446,     Add PackageManagement sources to mapping json\n  
23447,     Merge pull request #901 from PowerShell/FormatTablePesterUnitTest\n\nAdd Format-Table Pester Unit Test  
23448,     Remove CaptureScreen binding\n\nDoes not exist for Open PowerShell\n  
23449,     Add project json to build test/PSReadLine\n  
23450,     Import TestPSReadLine app\n\nThis app is used for basic PSReadLine functionality testing \n\nSquashed commit of the following:\n\ncommit 3c1ac0aa87df663d0cfb1346352fd240a6ad1fa4\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Dec 13 09:23:31 2015 -0800\n\n    Use nuget packages for PowerShell SDK \n\ncommit 0fe7731a68d62af9508200a067aa162cb5154f68\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Nov 14 20:11:50 2015 -0800\n\n    Merge branch \ master\  of    com/srdubya/PSReadLine into vimode\n\ncommit aa6510e19887dd2cb1ed7fa06b172dc456b0cede\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 18:24:23 2015 -0700\n\n    Fix/suppress various FxCop errors\n\ncommit d59a997c3a2b4d18b91e0f937fc4ff76e58929f1\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 15:32:20 2015 -0700\n\n    Rename namespace PSConsoleUtilities to Microsoft PowerShell\n\ncommit 258a8f28db90d98b8785487516544836ce42bb4e\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Sep 26 18:15:19 2014 -0700\n\n    Fix exception after AcceptAndGetNext\n\n    The  current  line cleared after accepting via AcceptAndGetNext\n    and we would crash trying to recall this current line \n\n    I\ ve changed how history search works after AcceptAndGetNext\n    to work in a more natural way so that arrow keys can be used\n    to recall commands near the accepted command instead of\n    searching for other commands with the same prefix \n\n    Fixes #152 \n\ncommit e069ed088a9ea970d8b0e9cdb990da5ad4d20f01\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Sep 9 17:36:59 2014 -0700\n\n    Add ValidateAndAcceptLine function\n\n    To avoid cluttering the screen and history with command lines\n    that don\ t work because of stupid errors like  command not found  \n    you can bind enter to ValidateAndAcceptLine \n\ncommit cb81fa2cc4708ee54214320dc6ce8564e38a1642\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jun 27 20:58:57 2014 -0700\n\n    Fix prompt error highlight characters\n\n    When deciding what character to color red for errors  we were\n    using IsSymbol - that was a bit too restrictive so it was changed\n    to be any non-whitespace and non-alphanumeric characters \n\n    Fixes #127\n\ncommit 0ecd15d909ea31ccd9390c15d295af2f750d0d68\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 14:09:17 2014 -0700\n\n    Attempt better recovery from an exception\n\n    If an exception occurs when editing the command line  display some\n    diagnostic information so that I might get a bug report   Also\n    attempt to restore the command line so they can continue editing \n\ncommit 079d18223c7e49638c96f4533d27198b47a5d2bb\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Apr 17 09:28:04 2014 -0700\n\n    Tweak for easier testing\n\ncommit d79bf5056bdef0a165ee453c5f7b45e528cc0681\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Apr 13 11:21:30 2014 -0700\n\n    Cleanup some Resharper issues\n\ncommit 1258dd12cab81d07aa52d388468ee9ef99063664\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Jan 26 20:21:22 2014 -0800\n\n    InvokePrompt tests\n\n    Removed Console WriteLine replacement as it didn\ t work for InvokePrompt \n    Changed test harness to override VS and actually write stdout to the screen \n\ncommit 526b0b5123c88cd8f47a166f376f34356976edb5\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 24 23:00:48 2014 -0800\n\n    Remove custom bindings\n\ncommit fd0679c0da99da5ae4e1d5a59842b1fb0a9af6c2\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 3 00:09:49 2014 -0800\n\n    Add CaptureScreen function\n\n    CaputureScreen is used to copy lines from the screen to the clipboard \n    Text is copied in plain text as well as rtf with colors \n    Rtf looks best in Outlook - which is my primary reason for adding the feature \n\ncommit e2a0b53f72a0e6a39a9736a3c1a3d2a6b1b81184\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Nov 15 07:29:12 2013 -0800\n\n    Fix Undo after Paste\n\ncommit 8453eca0dd9ffe0cb160fefb12d0be935e64ec85\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Nov 15 00:30:50 2013 -0800\n\n    Ctrl-R support\n\ncommit 0b058c2aaee18b33d97dd8d375fac7bbf4d07ce9\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sat Nov 2 08:49:48 2013 -0700\n\n    Really exit from test program when typing exit\n\n    Exit wasn\ t exiting anymore because the thread that reads keys was blocked \n\ncommit e9d5203346f62dacc6315c8e8cb4dc227a6477df\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Sep 23 09:03:59 2013 -0700\n\n    Comment out history search in test program\n\ncommit 674f90a64c5c627d50f6b018511eb9585640d65a\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 09:18:19 2013 -0700\n\n    Add demo mode and ETW trace\n\n    Added ETW tracing for key presses (a key logger!) so it can be used\n    in a variety of ways  e g  when doing performance profiling  you can\n    add a message of sorts via key presses if you turn on the provider \n\n    The ETW tracing code depends on CLR 4 5  this might force some folks\n    to upgrade \n\n    Added PSReadline EnableDemoMode which uses the ETW trace to display\n    key presses while you type   This is useful for talks and producing\n    screen captures to show the editing experience \n\ncommit 222a5efea732d6c34e5263b638d5d3fc04407355\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Sep 11 17:55:30 2013 -0700\n\n    Support 2 key chords\n\n    Support for 2 key chords has been added \n\n    There is a small breaking change in Set-PSReadlineKeyHandler\n    because the -CtrlX switch is no longer needed   It could have\n    been left in  but it\ s better to just remove it - not very\n    many people use this module yet \n\n    The signature of key handlers was also changed to better support\n    features that have not yet been implemented   The signature change\n    shouldn\ t affect any existing key handlers because default arguments\n    should cover those cases \n\ncommit 3121bcbf6c57b98ead2cc525f8d3d40cbc54c49e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri May 24 19:56:34 2013 -0700\n\n    Add Get-PSReadlineKeyHandler\n\n    To make it easier to see what keys are bound  you can use the command Get-PSReadlineKeyHandler \n\n    The command Set-PSReadlineKeyHandler also adds support for binding Ctrl-X prefixed commands in Emacs mode \n\ncommit ed78159f1a27f7a78a26fbad555203dcee94a05c\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun May 12 23:52:15 2013 -0700\n\n    Initial checkin \n  
23451,     Fix spelling\n  
23452,     switch from Platform IsLinux to Not Platform IsWindows\n  
23453,     Fix FileNotFoundException\n  
23454,     Don t ask for Linux\n  
23455,     For Symlinks to directories  fix Windows error on removal  and asking confirmation on Linux\n  
23456,     Merge pull request #909 from PowerShell/WriteProgressTests\n\nAdd Unit Test for Write-Progress  
23457,     Merge pull request #917 from PowerShell/andschwa/import-psreadline\n\nImport PSReadLine  
23458,     Fix resource manager\n\nSince the project is `Microsoft PowerShell PSReadLine`  the embedded\nresource name had to be fixed \n  
23459,     Add PSReadLine as base module\n\nNote that  because Linux file systems are case-sensitive  we have to\nuse the correct capitalization that matches the actual module files \n  
23460,     Add PSReadLine module files\n\nThese are copied from `src/Microsoft PowerShell PSReadLine`  which is\nnecessary until  NET CLI has better support for specifying\nsource/destination content information (which is coming soon) \n  
23461,     Make CoreConsoleHost depend on PSReadLine\n  
23462,     Enable colors\n  
23463,     Enable setting of new key bindings\n  
23464,     PSReadLine for Linux\n  
23465,     Add PSReadLine project json\n  
23466,     Import PSReadLine sources\n\nThis imports the PSReadLine project to\n`src/Microsoft PowerShell PSReadLine`  The commits are squashed so that\nwe don\ t unnecessarily combine the histories \n\nSquashed commit of the following:\n\ncommit 1fe251f7681ffa9d5598e830a115c0700fe978df\nAuthor: Sergei Vorobev <sevoroby@microsoft com>\nDate:   Thu Feb 11 12:43:03 2016 -0800\n\n    Generate help from platyPS markdown\n\ncommit 52cef9e493cec5e642c938c0e6a64cce232fa813\nMerge: 68b9161b4 c1499bd29\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jan 21 08:23:54 2016 -0800\n\n    Merge pull request #337 from srdubya/master\n\n    Fixing #334 \n\ncommit 68b9161b4a8027f8cab908134b198a121295ee8a\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Wed Jan 20 15:58:05 2016 -0800\n\n    Update Changes txt\n\ncommit c66ccee060ffafcf174fe5f333620d987a113fdf\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Wed Jan 20 15:57:47 2016 -0800\n\n    Fix formatting\n\ncommit 2965e31d2b18c99041193d6e031872a8f1acef0d\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Wed Jan 20 15:30:20 2016 -0800\n\n    Update version number\n\ncommit c1499bd2924d1f85c1390cd4ded644d7f971bbf8\nAuthor: srdubya <stevewy@gmail com>\nDate:   Mon Jan 18 10:45:03 2016 -0700\n\n    Fixing #334 \n\ncommit fba34371a1a62ef077b08a7e07aa3333c9a4774e\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Sun Jan 17 09:44:42 2016 -0800\n\n    Fix build\n\ncommit d428a19feba06f6c4188df64605883bec0c460b0\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Sun Jan 17 09:39:59 2016 -0800\n\n    Fix sample for strict mode+better custom handler error msg\n\n    Fixes #304\n\ncommit 2897f6ed3d74b0e69be197a6de7ce765c747692a\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Sun Jan 17 09:04:35 2016 -0800\n\n    Handle abandoned mutex exception\n\ncommit d1fc73e731d8d0a609850d3fed24632e8fa0951d\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Sun Jan 17 09:01:02 2016 -0800\n\n    Update xmldoc comments\n\ncommit 3fc3007f83d7d0cc587aca42a7565a67e385375b\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Sun Jan 17 08:58:07 2016 -0800\n\n    Startup improvements\n\n    - Delay loading resources until they are used\n    - Delay creating vi mode key handler tables\n    - Remove format ps1xml file\n\ncommit 57843aacb68c39da7815f8c06825f965737e7a14\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Sun Jan 17 08:52:40 2016 -0800\n\n    Move some apis to be internal\n\ncommit 26752f508c8ac8e1f9ec6fb6306bc086c220600f\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jan 2 08:51:06 2016 -0700\n\n    Addressed this feedback:\n    1  _normalBackground (keybindings vi cs) unused\n    2  copyright notice in * vi cs files?\n    3  ReadLine vi cs - InsertCharacter unreferenced\n    4  SearchBackward - change fn name to ViSearchHistoryBackward?\n\ncommit 38eebac9d03c9a189bed7aad2b97bf98d484c2ef\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Dec 30 22:42:32 2015 -0800\n\n    Better error for history file access issues\n\n    When there is an IO error trying to create the directory for the history file  or some other sort of error trying to read or write the history file  we shouldn\ t tell the user to report a bug \n\n    Instead  the error will just report the exception message  and if it happens twice  suggest some solutions \n\n    The error will not be reported more than twice  because that would be too annoying \n    Fixes #322\n\ncommit 3a9584206fe8ef5ee0171282fab93a0be7e727ad\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Dec 24 21:06:48 2015 -0800\n\n    Cleanup resources\n\ncommit 720855d9232973ca4b70a983c378dd798e3e5c8d\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Dec 16 22:56:25 2015 -0800\n\n    Finish refactoring so unit tests run in VS2015\n\n    The mock of the console api is complete enough so unit tests run \n\n    It\ s still a hack  not exactly factored nicely to support other hosts \n    but at least some of the real interface is in one place  not scattered\n    about \n\ncommit fb3b178e66f378e68aebe7deb9a18419f9613212\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Dec 16 09:53:44 2015 -0800\n\n    Fix off by 1 error in BeginningOfLine\n\n    Home on first line of multi-line went to the second character  not the first \n\ncommit 5c627fb3eaa80a3d07cbd52922a9abc34c9668b9\nMerge: e0de45980 34e4e2fd9\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Dec 16 09:41:00 2015 -0800\n\n    Merge branch \ master\  of    com/rkeithhill/PSReadLine into rkeithhill-master\n\n    Conflicts:\n    \tPSReadLine/PSReadLine csproj\n    \tPSReadLine/PSReadLineResources Designer cs\n    \tPSReadLine/PSReadLineResources resx\n    \tPSReadLine/ReadLine cs\n\ncommit e0de4598069e3d4bd8568eb9f9bcf1334ac697a3\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Sun Dec 13 17:52:33 2015 -0800\n\n    CaptureScreen: scroll buffer with selection  add alternate movement keys \n\ncommit cf3471afdfe707f3a9b530dce9ed7cabad3c6768\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Fri Dec 11 18:31:59 2015 -0800\n\n    ScrollDisplayToCursor bug: don\ t try to scroll to before the buffer \n\ncommit 7b135909b99187bd3c42c0fc5472f3b8cbb31e72\nMerge: 9c97f5459 dac7ec2ff\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Dec 13 09:28:09 2015 -0800\n\n    Merge branch \ master\  of    com/PowerShell/PSReadLine\n\ncommit 9c97f5459605c75d2787168cca7f394a5a034ec5\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Dec 13 09:23:31 2015 -0800\n\n    Use nuget packages for PowerShell SDK \n\ncommit dac7ec2ffac1bbc3c97a4e0a2335ab5193a42564\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Thu Dec 10 07:26:03 2015 -0800\n\n    Feedback: Rename ChangePSReadlineKeyHandlerCommandBase  remove assert \n\ncommit f44943b0895b3454236ac41bdacc81d03f352111\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Wed Dec 9 22:48:35 2015 -0800\n\n    Add the ability to change Vi cmd mode dispatch tables \n\ncommit 0190001e864c0566d10e1483829c687d4295624b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Dec 9 17:27:02 2015 -0800\n\n    Fix coloring of bareword token w/ nested token at start\n\n    Fixes #204 \n\ncommit 461e14c8acda8c79c20a41a7b2daea34e6af504b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Dec 6 09:05:37 2015 -0800\n\n    Initial refactor console api usage\n\n    To get the unit tests passing in VS2015  and to help w/ possible future hosts \n    I\ ve moved most of the console api usage to a class  which is then mocked\n    in the unit tests \n\ncommit f9b4c98a00656c3deb720f80392c8eaa042f65b2\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Nov 29 21:43:20 2015 -0800\n\n    CaptureScreen tried to set clipboard on a MTA thread\n\n    Fix is to use ExecuteOnSTAThread \n\ncommit 1d85624cc7f40b4df89d63a1435857a092538082\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Nov 29 10:44:25 2015 -0800\n\n    Build against CLR 4 to support PowerShell V3\n\ncommit bf0de4e840a180754fa6e01552a47ae37419761b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Nov 29 10:40:37 2015 -0800\n\n    Fix indentation \n\ncommit 3bb4520664bfb263890b8550334386db0133a7ca\nMerge: 914101597 513a93a4f\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Nov 14 20:11:50 2015 -0800\n\n    Merge branch \ master\  of    com/srdubya/PSReadLine into vimode\n\ncommit 91410159765d38d10af2cd1a24f03a769c57780e\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Nov 14 19:27:23 2015 -0800\n\n    Avoid exception when $ExecutionContext is $null\n\ncommit b754d709624941ca6e42a8caf22d87d710f9c468\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Nov 14 19:15:41 2015 -0800\n\n    Fix formatting of error message\n\ncommit 24a9848483695a343ab37db8ddabad21631c1e1a\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Nov 14 19:14:28 2015 -0800\n\n    Get the real colors when copying the screen\n\ncommit 513a93a4f07aef05bb9a2e532ad531a92bc62811\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Aug 29 06:58:17 2015 -0600\n\n    Tab now does the same as Enter on command line search (\ /\ ) \n\ncommit bde626cee27e3d54132a8f4fd9e58f3d5322ee58\nAuthor: srdubya <stevewy@gmail com>\nDate:   Wed Aug 5 07:33:55 2015 -0600\n\n    Fixed tests and reformatted some code to fix a reported exception \n\ncommit 36f0bf739be5551e7ef4c6da4179b5790430d07a\nMerge: 363e552bf 788f57339\nAuthor: srdubya <srdubya@users noreply github com>\nDate:   Wed Aug 5 07:27:50 2015 -0600\n\n    Merge pull request #2 from ecsousa/fix_cimplete_redo\n\n    Fix exception for use completion when a edit group is already started \n\n    Merging into master  where a failing unit test awaits \n\ncommit 363e552bffd9a65b28620aea3b973737ffbdd53a\nMerge: 6e1412e23 3c7e5ce5b\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Aug 4 12:54:33 2015 -0600\n\n    Merging in Eduardo\ s fFrT for c and d changes  along with my tests and fixes \n\ncommit 3c7e5ce5bfc3e9be37e426c20b5495bf33b01fa5\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Aug 2 13:05:20 2015 -0600\n\n    Added unit tests and fixed a few issues found as a result \n\ncommit 6e1412e23c4ee94c86431ba7c3a420fbafc49026\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Aug 1 05:32:53 2015 -0600\n\n    Increased framework version to 4 5 to accomodate System Management Automation dependency version change \n\ncommit 788f5733936717c1830e6253d6a71056698ece53\nAuthor: Eduardo Antunes C  de Sousa <ecsousa@gmail com>\nDate:   Thu Jul 30 15:34:54 2015 -0300\n\n    Fix exception for use completion when a edit group is already started \n\ncommit f133b9af1de597345e0482b76e0f586acbe376a8\nAuthor: Eduardo Antunes C  de Sousa <ecsousa@gmail com>\nDate:   Thu Jul 30 14:51:31 2015 -0300\n\n    Adding \ f\   \ F\   \ t\   \ T\  movements to \ d\  and \ c\  command \n\ncommit 34e4e2fd94f6653e69711fb18a3a768826c11023\nAuthor: Keith Hill <r_keith_hill@hotmail com>\nDate:   Mon Jul 20 19:54:33 2015 -0600\n\n    Added InsertLineAbove and InsertLineBelow functions and set them up to key bind to Ctrl+Enter and Ctrl+Shift+Enter in Windows mode  Not being an emacs person  I\ m not sure what key bindings these two functions would bind to  I also added unit tests for the two functions as well as a unit test for what I believe is a bug in the BeginningOfLine (home) function when in multiline mode  I also updated the project to have the appropriate default namespace so that the resource file gets re-generated with the correct resource name without having to resort to hacking the csproj file  There was also an issue with trying to run unit tests because the unit test setup of PSReadline sets engineInstrincs to null and that caused a null reference exception which I worked-around by testing for null first \n\ncommit 6ffc6f0f9bf7579b388762506e75f1514eedfce2\nAuthor: srdubya <stevewy@gmail com>\nDate:   Mon Jul 20 07:03:13 2015 -0600\n\n    Move cursor to position 0 on history movement \n\ncommit 847cce49e4a47e4923c815d16604c3a2257940bd\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Jul 7 07:16:03 2015 -0600\n\n    Fixing defect #263 \n\ncommit 14cf3912ac68054516ecc815ebc78aa50ab2b29b\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Jun 28 10:54:03 2015 -0600\n\n    Adding documentation for \ o\   \ O\   and \ J\ \ s key handling methods \n\ncommit 687983a9d788336d4e15a390b9ad04ee6b93b4f8\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Jun 28 07:13:52 2015 -0600\n\n    Fixed cursor placement issues with \ o\  & \ O\  \n\ncommit 81c41ca72ba84907385cc4f944bf44118dd498b1\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jun 27 13:44:56 2015 -0600\n\n    Adding \ o\   \ O\   and \ J\  in Vi-Mode \n\ncommit 42fe350fa0f16c61ecbd392a3cda652c93b4091a\nMerge: b5db5e2e4 9a1ad952a\nAuthor: srdubya <stevewy@gmail com>\nDate:   Fri Jun 26 07:11:12 2015 -0600\n\n    Merge branch \ upstream\ \n\ncommit 9a1ad952a0b033b4ac053c73bef3171c1db812fd\nAuthor: Roman Kuzmin <nightroman@gmail com>\nDate:   Thu Jun 25 20:18:54 2015 +0100\n\n    Set-PSReadlineKeyHandler -Key F7 - two minor tweaks\n    - Clearer output of the result $line \n    - $ -> @  just in case if there is the only history command \n\ncommit 8be638271b376e36d856dec4d233820fe55b886d\nAuthor: Roman Kuzmin <nightroman@gmail com>\nDate:   Thu Jun 25 02:01:36 2015 +0100\n\n    Set-PSReadlineKeyHandler -Key F7: command history using Out-GridView \n    - Properly reads multiline commands from the history file \n    - Allows selection and insertion of several commands \n\ncommit b5db5e2e43152916199f5ae715477490f23a1941\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Jun 21 07:47:36 2015 -0600\n\n    Fixed merge problems  plus fixed broken tests \n\ncommit f5bdb3fe5787d44565fe524b5ff0f12a7a37d98d\nMerge: 5c999b15f ccfe2a3fa\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jun 20 16:47:33 2015 -0600\n\n    1st attempt at merge with #251 \n\ncommit ccfe2a3fad320ec7be621d37fc7beb314eb9a0b2\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Fri Jun 19 17:07:39 2015 -0700\n\n    Change resource name to match in-box version\n\ncommit 8e7665e9e24dd4df2cc13e029edd13a076323655\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Fri Jun 19 11:00:32 2015 -0700\n\n    Fix InvokePrompt for remote sessions\n\ncommit 70195b3e95a5d4f080f614c1c98f0d50fb4f79c9\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 20:01:49 2015 -0700\n\n    Move one-time initialization out of psm1\n\ncommit 1a2e9f54600b6c19b324f2bc1db03dc3653a75ca\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:55:38 2015 -0700\n\n    Better handling of exception after exception\n\ncommit 55150a225dc60a553de6d1213060d096e6dce209\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:43:59 2015 -0700\n\n    Update module manifest\n\ncommit fb1ecc49258c0d7d3353b523714bed7ae58cf797\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:43:03 2015 -0700\n\n    Use full namespace\n\ncommit dc1847bdebb2c1e27b0e2b7fa9bb0fe5ee848432\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:38:54 2015 -0700\n\n    Remove unreferenced/old code\n\ncommit 1309e1eb63ee169d9776ab525e8be4945fae26b7\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:38:26 2015 -0700\n\n    Formatting cleanup\n\ncommit f7615088467affafc9635ad67970d6c771864b0b\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:28:46 2015 -0700\n\n    Change default continuation prompt\n\ncommit 0f41d433d86944fd52afc7694f62f0a4e60c9a7d\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:10:18 2015 -0700\n\n    Change default location for history file\n\ncommit b54f7f11c73f9eb22e2514ced6e6b627bbdfb50d\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 19:01:59 2015 -0700\n\n    Mouse wheel doesn\ t work with powershell console\n\n    Fix is to clear the flag for capturing mouse events while in PSReadline because we would ignore them anyway \n\ncommit 8e86f7289476c58c8c9dadfb70d5d1ec82908177\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 18:57:07 2015 -0700\n\n    Right click w/ multiple lines pasted as a one line\n\n    This problem only happened in ValidateAndAcceptLine\n    It also only happened if validation failed for any reason \n\n    The fix is to insert a newline even if validation failed if we still have pending input \n    If there is no pending input  we don\ t want to insert the newline  as this is the common\n    case and people will not want to delete the blank line from the inserted newline \n\ncommit 95184cedbe947e7be61d2cf877f2419a7e9dcbba\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 18:54:13 2015 -0700\n\n    Switch to WinForms for clipboard\n\n    Some windows skus don\ t have WPF but do include winforms  so switch to winforms to access the clipboard \n\ncommit 7ce3eaabb3892b8c55ee4d9fbba3cdc43f69096a\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 18:50:48 2015 -0700\n\n    Change Enter back to AcceptLine\n\n    AcceptAndValidateLine still has some problems  so the default has been changed back to AcceptLine \n\ncommit 1a538e78212ee3c1f378212b2e21fee0b0a8bc79\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 18:24:23 2015 -0700\n\n    Fix/suppress various FxCop errors\n\ncommit 365da0c6628e438610fc4841f8909ef042b1ce6d\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 15:44:56 2015 -0700\n\n    Add a HelpUri for each cmdlet\n\ncommit 02eb13d7557faa759990aa6bad425a5347bdc095\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 15:32:20 2015 -0700\n\n    Rename namespace PSConsoleUtilities to Microsoft PowerShell\n\ncommit e6e46de26b5717d0ed379f36e96dcb9a4ae535b1\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 15:14:08 2015 -0700\n\n    Use absolute path for HintPath on reference assembly \n\ncommit e47cb0f7aa0c4e0434acb63aa9716f9e3bf0c594\nAuthor: Jason Shirk (POWERSHELL) <jasonsh@microsoft com>\nDate:   Thu Jun 18 15:04:49 2015 -0700\n\n    Add copyright header\n\ncommit ade70a13b0420a62a6ecaf433c6b9ab7e64b667b\nMerge: d81b1ea72 2d78cac3d\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Jun 17 14:24:12 2015 -0700\n\n    Merge pull request #235 from andrewducker/master\n\n    Adding in an F7 handler to bring up command history in a grid \n\ncommit 5c999b15f587bb0a85ae45156eebc4818fb2bcb8\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jun 6 13:15:58 2015 -0600\n\n    Fixed missing newline before  Oops  \n\ncommit a86fbe9fd41e8b3df384804af746629538fda59a\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jun 6 13:05:05 2015 -0600\n\n    Corrected a few uncessary file differences  mostly indentation issues \n\ncommit 22916e8b10031383a82dcc1e0e7f1610ea3a39e7\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jun 6 05:33:55 2015 -0600\n\n    Merged CJK language support from Jason\ s upstream (#243) \n\ncommit 7e9bb96db3c67c2f0cac3115ce1c5a65c7d0f1ef\nMerge: 5228456b1 d81b1ea72\nAuthor: srdubya <stevewy@gmail com>\nDate:   Fri Jun 5 19:09:45 2015 -0600\n\n    Merge branch \ upstream\ \n\ncommit 5228456b1e642f2bd27379fd4c01da323c04a8e8\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue May 19 20:29:43 2015 -0600\n\n    Adding Prompt option for ViModeIndicator   Fixing #227 - indicator returns back to None after any other set option \n\ncommit d81b1ea721e36f5353c639bd5df0c26ae20fe3e7\nAuthor: Yanbing Wang <yawang@microsoft com>\nDate:   Mon May 18 22:08:36 2015 -0700\n\n    support CJK with truetype font\n\ncommit bcf72c642e7da61a533deea88c77a70c11b65550\nAuthor: Yanbing Wang <yawang@microsoft com>\nDate:   Mon May 18 22:04:08 2015 -0700\n\n    support CJK with truetype font\n\ncommit d70398b0edf5ffce8cbcf0fab31a5dc63662b283\nAuthor: Yanbing Wang <yawang@microsoft com>\nDate:   Mon May 18 12:18:15 2015 -0700\n\n    update based on code review\n\ncommit 3b2973bacdd6de722e70f694af9c71a270a29c36\nAuthor: Yanbing Wang <yawang@microsoft com>\nDate:   Mon May 18 10:23:40 2015 -0700\n\n    add CJK support\n\ncommit 2d78cac3d51875608797d506ebda8041f11d9674\nAuthor: andrewducker <andrew@ducker org uk>\nDate:   Thu May 14 20:40:54 2015 +0100\n\n    Adding missing backticks\n\n    My fault for editing the file in Github in the first place   \n\ncommit 0189d6ed6b504c4f420f832d97d2824ff9193f27\nAuthor: andrewducker <andrew@ducker org uk>\nDate:   Thu May 14 17:21:03 2015 +0100\n\n    Adding in an F7 handler to bring up command history in a grid \n\n    See issue at    com/lzybkr/PSReadLine/issues/233\n\ncommit 66db8bed41d3e01d12925af87105219470587e88\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 21 06:39:49 2015 -0600\n\n    Made the default -ViModeIndicator None \n\ncommit f6be29dbf12f547e547750e2437d89dccd6112c7\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 21 06:34:20 2015 -0600\n\n    Switched from -ChangeCursor to -ViModeIndicator[Cursor|StatusLine|None    StatusLine does not work yet \n\ncommit 3a2b0bed2c26ecf0bf652219d0be79a2cec4917c\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Mar 15 13:56:48 2015 -0600\n\n    Added the changing of the console cursor size when in command/insert mode   Use the -ChangeCursor option to control \n\ncommit 58104d1b732dc21ec4d10ef98cdf854cf627aa43\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 14 10:16:54 2015 -0600\n\n    Added single-quote and double-quote to the list of word delimiters   Addressed bugs involving change-word and delete-word when word delimiters and special characters are involved \n\ncommit 09d4821e11ead411a78b70202883461fe0e7c9ff\nAuthor: srdubya <stevewy@gmail com>\nDate:   Fri Mar 13 07:05:08 2015 -0600\n\n    Switched visual editing temporary file from double quotes to single   Rounded out a test a bit \n\ncommit 8156ee51af35544100f3efb2fc5d4373921e9900\nAuthor: srdubya <stevewy@gmail com>\nDate:   Wed Mar 11 04:17:34 2015 -0600\n\n    Fixed defect #218 -- <esc> cw now works properly with non-space word separators \n\ncommit 717bfb679a151391ba899538b04f6aa97c931802\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Mar 10 21:05:11 2015 -0600\n\n    Enclosing visual edit temporary filename in quotes to handle special characters in user names \n\ncommit 15f36c751e00a23a5010eba3bacfd60456144aaf\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Mar 10 07:15:36 2015 -0600\n\n    Fixed  $i$  bug  #214 \n\ncommit 3372bf45e6700fd58c393702695c61c3cc255461\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Mar 10 07:00:30 2015 -0600\n\n    Fixed <esc> r <space> bug \n\ncommit 74a501777a7f9a32df193ddeb02ec3df11c327fb\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Mar 8 16:35:55 2015 -0600\n\n    Enabled VIM syntax highlighting during visual editing by giving the temporary file a  ps1 extension \n\ncommit d0f797c1cc33d427d25d78f8d3f807704fd5035d\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Mar 8 15:42:07 2015 -0600\n\n    Adding visual editing via <esc> v \n\n    Set either the EDITOR or VISUAL environment variable to your in-console editor command of choice   When entering visual editing mode  the shell will execute the command specified by EDITOR/VISUAL with a temporary file as the single parameter \n\n    VISUAL has precidence over EDITOR   Environment variable are search first in machine  then process  and finally user targets \n\ncommit f0295550278f57492bcd23ef30b415183be1b255\nMerge: 07ce10733 a3258ed85\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Mar 8 07:58:49 2015 -0600\n\n    Sync\ d with upstream \n\ncommit 07ce10733a67bbe1efd1da79cc720b0f7c82abb2\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Mar 3 20:32:57 2015 -0700\n\n    Fixed  <esc>h<space>ih  bug \n\ncommit a3258ed85a232e042e6fcd8030f126e1c838d040\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 18 09:02:09 2015 -0800\n\n    Remove call to SetOptions which was unnecessary\n\n    Fixes #206\n\ncommit f2fe25c7b2a83e8b1a452b4fb6f6ec5ccc450004\nMerge: 8480f36bb 4035d5dbd\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Feb 17 22:09:50 2015 -0800\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit 8480f36bbe8330f07b8cdcb7596082314357dfae\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Feb 17 22:09:29 2015 -0800\n\n    Update version number to 14 \n\ncommit 4035d5dbd8369ab729789c2946173d5bfe843ada\nAuthor: Roman Kuzmin <nightroman@gmail com>\nDate:   Wed Feb 18 03:47:46 2015 +0000\n\n    Spelling in about_PSReadline help txt\n\ncommit a28fc3f73de205e52af34b0f45927d8a14089e07\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Feb 7 22:59:04 2015 -0800\n\n    Recognize debugger pseudo-commands\n\n    ValidateAndAcceptLine was rejecting debugger commands like \ s\  or \ k\  \n    Now we check if we are debugging and accept these fake commands \n\n    Fixes #199\n\ncommit b753e6be014e5f09fc4ab4eeb31ede37fbf685be\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Feb 7 11:54:13 2015 -0800\n\n    Fix ScrollDisplayToCursor to work better\n\n    Fixes #190\n\ncommit 84c38795635fa2f3296583b392c53044ed76804e\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Jan 26 19:35:12 2015 -0800\n\n    Remove demo mode\n\n    Demo mode doesn\ t work right now  and I found a better alternative\n    here:     com/Code52/carnac\n\n    Fixes #192\n\ncommit 234f5ac9d27f7a56c85b9af11880044ece6836cc\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Jan 25 10:33:46 2015 -0700\n\n    Fixex cursor positioning after history change bug \n\ncommit ac09623ca35368b43fb7ca0a774491a76674386c\nMerge: 4a2e7bb72 f730b8abc\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Jan 24 10:03:16 2015 -0700\n\n    Merged Upstream\n\ncommit b77ec226dc6c7ab958410f8a5962323abc8ee607\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 22 19:27:30 2015 -0800\n\n    Honor $MaximumHistoryCount\n\n    This history count was being ignored  and the default in\n    PSReadline was 1024 instead of 4096 that PowerShell defaults\n    to \n\n    The fix is to up the default  and safely set MaximumHistoryCount\n    in PSReadline based on the variable when initializing the first\n    time PSReadlne is called \n\n    Fixes #135\n\ncommit b1fcc751d56c61d9108b83605d19af6353cb553b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 22:16:00 2015 -0800\n\n    Fix ClearScreen to properly scroll\n\n    The previous change scrolled the wrong test \n    losing the bottom instead of the top of the buffer \n\ncommit 75bdf63d98e9f579ab77b31387a604ba997d99ef\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 16:12:06 2015 -0800\n\n    Fix HistorySearch* when line is empty\n\n    The commit 49a4c4c1e62a00dc9fda357b0182a0d76d0d3bd9 broke\n    arrow keys working when the line was empty and you wanted\n    to go back more than one command \n\ncommit b8f2348945c844c6620b740a6f762de795090b83\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 09:28:51 2015 -0800\n\n    Color any prompt character when there is an error\n\n    cmder uses lambda as the prompt character which is a\n    regular character  so I just removed the test and will\n    color any random non-whitespace character that is used\n    in the prompt \n\n    Fixes #180\n\ncommit 32b7fc91ae2cab01ec0a1394ce47863ad4109942\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 09:24:34 2015 -0800\n\n    Update CaptureScreen description\n\n    Fixes #185\n\ncommit 7cbb0a858f4041b5cf4f46c22ded4cec228a7e63\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 09:19:26 2015 -0800\n\n    Clear status message in CancelLine\n\n    Fixes #189\n\ncommit c239364c24560087f452708bf47b816670c30420\nMerge: 9914838d3 f730b8abc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 09:14:47 2015 -0800\n\n    Merge remote-tracking branch \ origin/master\ \n\ncommit 9914838d3eb1cf05331f903b079113c3e276dc6d\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jan 21 09:13:29 2015 -0800\n\n    History recall should ignore other sesions\n\n    When using UpArrow  people prefer not recalling commands\n    from other currently running sessions \n\n    It\ s still useful to avoid entering commands that have\n    might have been entered in another currently running session \n    so those commands can still be found when *searching*\n    history  either interactively  or if the search string\n    is not empty when using HistorySearch[Backward|Forward  \n\n    Also fixed in this change - an obscure bug where\n    HistoryNoDuplicates did not work well with a DigitArgument\n    when recalling history \n\n    Fixes #179\n\ncommit 4a2e7bb7221086ecd56cb53192301c3986f211a6\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Jan 18 06:43:49 2015 -0700\n\n    Fixing problem with tab completion after \ c\  in command mode \n\ncommit b0b7241d32184527283d8f5bed7e63d7c7d43e02\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 16 09:05:32 2015 -0800\n\n    Support Cancel/Abort DigitArgument\n\n    There was an exception with input like:\n\n    a Alt+1 Ctrl+C\n\n    CancelLine was clearing the buffer  but didn\ t reset _current \n    That fixes the exception  but it still clears the input line\n    when called to terminate DigitArgument  so instead we do something\n    similar to how interactive history search is terminated \n\n    Fixes #184\n\ncommit 299aea82680b337c8658aaaeb2307ffa068e31db\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 15 17:22:15 2015 -0800\n\n    Fix bug with undo after possible completions\n\n    repro is something like:\n\n    [ArrayL <Ctrl+Space> <Ctrl+Z> <Ctrl+Space> <Ctrl+Z>\n\ncommit b6573377152e3b1bfce7659381c9adcede1c9271\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 15 09:19:09 2015 -0800\n\n    ValidateAndAcceptLine improvements\n\n    Script block arguments are now only validated as arguments to specific\n    cmdlets (which are in a user modifiable whitelist )\n\n    A custom validation handler must now throw an exception to report an error \n    returning an object is now ignored \n\n    A sample custom validation handler was added to demonstrate typo correction \n\n    Fixes #162\n\ncommit ae8b2f8dbc959a0eeee9fc0299f9cd54cc8bd270\nAuthor: srdubya <stevewy@gmail com>\nDate:   Tue Dec 30 07:18:10 2014 -0700\n\n    Surrounding Get-PSReadlineKeyHandler vi command mode keys in  <>  \n\ncommit 37d884a1a4a251f4ca1e5a67ca4964e6ca1c7bcd\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Dec 27 11:58:56 2014 -0700\n\n    Added support for mid-chord numberic arguments \n\ncommit 07186ba50e8ce24615338230f25274f11392bdbb\nAuthor: srdubya <stevewy@gmail com>\nDate:   Wed Dec 24 12:58:57 2014 -0700\n\n    Added ctrl-D handling (accept in insert mode  exit in cmd mode) \n\ncommit 7dc200af75e1a8536368db70496d8ba5d07df01f\nAuthor: srdubya <stevewy@gmail com>\nDate:   Wed Dec 24 12:43:26 2014 -0700\n\n    Cleaned a couple duplicate functions \n\ncommit 73b8e0276104bf6c49503f83edb131ac07fa6d74\nAuthor: srdubya <stevewy@gmail com>\nDate:   Mon Dec 22 18:27:22 2014 -0700\n\n    Sync\ d with Upstream \n\ncommit dd7fc31ac7c42ec6a8684a6196b5a96cb27dfe65\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Dec 21 16:23:45 2014 -0700\n\n    Fixed minor formatting   Ready for Sync \n\ncommit 9a926f2df4e048d330d2d0185b944730fe94b11e\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun Dec 21 16:20:20 2014 -0700\n\n    Fixed Delete and Change so the work for Globs \n\ncommit eb5e5e02f9b6b4ed9246aed5808e9ef4949f5918\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Dec 20 11:27:18 2014 -0700\n\n    Added Yank commands \n\ncommit 7c2ccd7365eda624cf5e9608e81734a66a90b0cc\nAuthor: srdubya <stevewy@gmail com>\nDate:   Fri Dec 19 10:57:18 2014 -0700\n\n    Removed mode  in preparation for merge with GitHub \n\ncommit e09b1ec92947e9563b5650750771fa08f6829af9\nAuthor: srdubya <stevewy@gmail com>\nDate:   Thu Dec 18 09:02:14 2014 -0700\n\n    Fixed word movement for B E &W \n\ncommit f730b8abc8221536091524655e84bf3f48fcbbb9\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Mon Dec 15 20:24:52 2014 -0800\n\n    Allow for clean exit on AppDomain unload \n\n    In a  hosted  scenario  the shell might be hosted in an alternate AppDomain\n    so that it can be loaded/unloaded independent of the process  This change\n    allows the unload to happen cleanly (without a rude threadabort tearing\n    through stuff) \n\ncommit ba540e34f4d94e26f39307818be4695be5e07844\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Dec 13 10:06:01 2014 -0700\n\n    Getting ready to fix dot word movement problem \n\ncommit eaf4f0b155013a7ecc30dda1747aa39a47dda1f7\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 2 09:35:11 2014 -0800\n\n    Fix exception after certain keywords\n\n    Rendering in PSReadline assumed all input had corresponding tokens \n    but the PowerShell parser doesn\ t return any tokens after in at least\n    one case - after input like \ process foo\  \n\n    The fix is to gracefully handle running out of tokens   Fixes #148 \n\ncommit 74659cbb3189c3d925ed4b602f377d8167674f73\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Nov 25 19:35:22 2014 -0800\n\n    Bind Alt+F7 to ClearHistory\n\n    cmd/PowerShell Windows mode supports clearing history with Alt+F7  so PSReadline will too \n\ncommit 69b083764203fa0f7194f0c16a96109b38cf1081\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Nov 19 13:33:11 2014 -0800\n\n    Better documentation for custom key bindings\n\n    Fixes #170\n\ncommit b94c7d6827b65215e03aae1c3ee6430826ba4b19\nMerge: 1cdcf9d2a ffedd7980\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Oct 28 21:13:27 2014 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\n    Conflicts:\n    \tPSReadLine/Changes txt\n\ncommit 1cdcf9d2a50cd0a7ce433f84c78e2caeabbe43b7\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Oct 16 18:33:01 2014 -0700\n\n    Add bindings to scroll the screen up/down by line\n\n    New functions:\n\n        ScrollDisplayUpLine\n        ScrollDisplayDownLine\n\n    And corresponding key bindings Ctrl+PageUp/Ctrl+PageDown\n\n    These functions accept a numeric argument  but the DigitArgument\n    implementation isn\ t compatible with scrolling the screen  so\n    it\ s not that useful unless a custom binding wants to do\n    something interesting  like scroll half a screen \n\ncommit 23f584e11dece2c882e6c23c4bf8844d3af85a72\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Oct 16 17:42:21 2014 -0700\n\n    ClearScreen now clears the screen  not the buffer\n\n    ClearScreen is meant to just clear the screen  not the full buffer \n    The command cls (or Clear-host) will clear the full buffer \n\ncommit eaf14629477fceb980d39c31a15da962e2978007\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Oct 14 19:29:35 2014 -0700\n\n    Raise PowerShell OnIdle if needed\n\n    If there are any registered handlers for the engine event PowerShell OnIdle \n    raise the event that PowerShell would have raised so the event handler\n    can do it\ s work \n\n    Fixes #169\n\ncommit c728a939da4f990e0a797289461a6ba642ce3a21\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Oct 14 09:43:42 2014 -0700\n\n    Add Remove-PSReadlineKeyHandler\n\n    Sometimes you just don\ t want a key binding for whatever reason  so now you can remove a binding \n\n    Note that unbound keys won\ t fall back to what happens in  cooked  editing mode \n    In raw editing mode (which is what PSReadline uses)  conhost only handles a very small\n    set of key bindings and those bindings weren\ t available to PSReadline anyway \n\n    Fixes #154\n\ncommit cc2de256504b078df2c3ec3686ac6425eef0d364\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Oct 8 09:24:12 2014 -0700\n\n    Fix null reference exception in AcceptAndValidate\n\ncommit ffedd7980d75dae94a218515c8c4819222bdf87b\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Oct 6 11:32:48 2014 -0700\n\n    Bind Ctrl+P/Ctrl+N like Up/Down arrow in Emacs mode\n\ncommit cddcef8f309eba2d375620d9072de5eefe6a2328\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Oct 1 23:23:22 2014 -0700\n\n    Support exit process with Ctrl+D in Emacs mode\n\n    Added new function DeleteCharOrExit bound to Ctrl+D\n    in emacs mode \n\n    Fixes #121 \n\ncommit 9b76b08399a2424af900f7b85857a9e5bd9a547b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Sep 26 18:22:44 2014 -0700\n\n    Stop using static parameter binder\n\n    The static parameter binder is causing too many false errors\n    so I\ m removing the checks it was doing \n\ncommit b5d5634e7cc1fe949cb593299e174e0e873e89d3\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Sep 26 18:15:19 2014 -0700\n\n    Fix exception after AcceptAndGetNext\n\n    The  current  line cleared after accepting via AcceptAndGetNext\n    and we would crash trying to recall this current line \n\n    I\ ve changed how history search works after AcceptAndGetNext\n    to work in a more natural way so that arrow keys can be used\n    to recall commands near the accepted command instead of\n    searching for other commands with the same prefix \n\n    Fixes #152 \n\ncommit 0dca3aac9595963c3697d0cdb93f429dda5d3e4d\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Sep 23 19:34:51 2014 -0700\n\n    Rethrow exceptions during unit tests\n\n    The error reporting message that was added gets in the way of\n    ensuring tests fail in a more reasonable way   So if I can tell\n    the unit tests are running  just rethrow the exception \n\ncommit a48127b4dd9b7ff05ec55831d4310e2e0b6db7e8\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Sep 19 08:34:40 2014 -0700\n\n    Fix MTA bug with Cut\n\ncommit c53d4b06ed27d0e2c2b4c9012e36c59677b2dbbc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Sep 11 09:08:04 2014 -0700\n\n    Add -ValidationHandler for ValidateAndAcceptLine\n\n    To support custom validation  for e g  to allow someone\n    to reject command lines where arguments are not valid \n    you can now specify a custom validation handler script block \n\ncommit a29f1f553be339337646b09a048b5e20f794ff6b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Sep 9 23:09:15 2014 -0700\n\n    Update changes txt\n\ncommit faed5680e4e27a5cdf93c75731710012c82ebef8\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Sep 9 23:08:50 2014 -0700\n\n    Make Enter default to ValidateAndAcceptLine\n\ncommit 400bf05c3ae438bdb34a8c1f8e91c4be0ccaf238\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Sep 9 17:36:59 2014 -0700\n\n    Add ValidateAndAcceptLine function\n\n    To avoid cluttering the screen and history with command lines\n    that don\ t work because of stupid errors like  command not found  \n    you can bind enter to ValidateAndAcceptLine \n\ncommit 0da7ec8c995132c0f40c836cc74d75574ed1da82\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Sep 8 10:16:16 2014 -0700\n\n    Add color support for an error status message\n\ncommit 85064bf226a1b1c7032bbe1b2096b38e703376be\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Sep 9 17:39:40 2014 -0700\n\n    Update version number to 13\n\ncommit 67b63c5265ea54f2db1f2817ddb2dc977b285894\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Sep 8 09:27:31 2014 -0700\n\n    Make PowerShell ExecutionContext available to C#\n\ncommit 417c94a926e8dcd7a8e0347c09a840d89076dd62\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Aug 26 07:43:25 2014 -0700\n\n    Update version #\n\ncommit 2fd3840589a19d51943c17489006e2c436bc2b32\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Aug 13 19:13:14 2014 -0700\n\n    Fix MenuComplete to properly clear the menu\n\ncommit 4e3dd6f63fb9c95a19ce8ccbb68f0f5080ffd87d\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Aug 13 09:56:10 2014 -0700\n\n    Update changes txt\n\ncommit 480b3fda7290d41c49eae43513e387b014623dd0\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Aug 13 09:01:44 2014 -0700\n\n    Clear emphasis if any before accepting a line \n\ncommit ba9bdba7f4ccd8a8878be16625381fa1dac669cf\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Aug 6 19:44:23 2014 -0700\n\n    Better multi-line editing\n\n    These changes provide a more seemless editing experience when\n    the command input has multiple lines \n\n    The history recall functions now avoid recalling history if the\n    input has multiple lines _and_ we aren\ t in the middle of\n    recalling history   If you do want to edit a recalled multi-line\n    line (ugh) then you can first use something like LeftArrow then\n    UpArrow will work like you would want \n\n    BeginningOfLine/EndOfLine have been changed as well   If you\ re\n    already at the start/end of a line  you\ ll go to the start/end\n    of the input  otherwise you\ ll go to the start/end of the line \n\n    Two new functions have been added for moving up/down lines in case\n    somebody wants to bind those independently of history  but I don\ t\n    see those being used much \n\n    Fixes #47\n\ncommit f5647cbcabdf140b6937b81cf299eb4fa00e93fe\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jul 17 08:51:43 2014 -0700\n\n    Reset console mode for calls to external code\n\n    For an unknown reason - SetConsoleMode calls fail when setting certain\n    modes   One such case is when PowerShell calls SetConsoleMode in it\ s\n    implementation of PSHostRawUserInterface ReadKey \n\n    PowerTab calls this method - and it\ s possible that other custom\n    key handlers might want to use that api  so I will reset the console\n    mode to what it was before calling PSReadline for the duration of\n    the external code (tab completion or custom handlers) and reset it\n    when the external code completes \n\n    Fixes #125 \n\ncommit d91401ac37363e871ee5ac57a370b231cf838c77\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jul 16 20:43:19 2014 -0700\n\n    Tweak yielding for event processing slightly\n\n    Based on feedback from Lee  the conditions under which\n    we need to pulse the pipeline can be even more restrictive\n    and a more minimal  useless bit of script  can be used \n\ncommit 901adece353ac15031151bd6ff17a3d474aa35f3\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jul 16 08:28:27 2014 -0700\n\n    Remember script block for custom key bindings\n\n    For various reasons  we may need to know that a key binding\n    came from a script block so that is now saved in the key binding \n\ncommit 31cfbc1689f9ad0d03e0d02991da7d0330fae969\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jul 16 07:22:58 2014 -0700\n\n    Add timeout in ReadKey for event processing\n\n    The pipeline thread is blocked when PSReadline is running \n    When the pipeline thread is blocked  PowerShell won\ t process\n    any events \n\n    I added a timeout of 300ms and check for event subscribers \n    if there are any  then run a bit of useless PowerShell so that\n    the PowerShell engine will get a chance to process events \n\n    Fixes #133 \n\ncommit 601cf56505b8424c25aedb31e0c8c6feabd530c1\nAuthor: jazzdelightsme <dan_j_thompson@hotmail com>\nDate:   Sun Jul 13 21:13:52 2014 -0700\n\n    Bind F8 to HistorySearch*  similar to cmd exe \n\n    It\ s not /exactly/ the same as cmd exe  For instance  it doesn\ t cycle\n    through results  but since you can use Shift+F8  to go the other way  it\n    still gets the job done \n\ncommit 550215264fefe2b99f4735d6975190006350de56\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Jun 28 12:16:19 2014 -0700\n\n    Fix undo bug\n\n    When recalling a line from history multiple times\n    and making edits to that line  the undo stack was incorrect \n\n    The fix was to make a copy of the undo stack when recalling\n    from history \n\n    Example repro:\n        ls Enter\n        UpArrow Escape dir Enter\n        UpArrow UpArrow Escape\n\ncommit e56368d5d2e020a9006cc2549046e252fe554a7b\nMerge: 693318de6 8c602017f\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jun 27 23:26:51 2014 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit 693318de6d175fbc8457cce9df556feb89dc4199\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jun 27 21:05:59 2014 -0700\n\n    Correct enums in history save option\n\n    Fixes #123\n\ncommit d7f4471f1904d112f2618ad13fcfb1fd76668fd3\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jun 27 20:58:57 2014 -0700\n\n    Fix prompt error highlight characters\n\n    When deciding what character to color red for errors  we were\n    using IsSymbol - that was a bit too restrictive so it was changed\n    to be any non-whitespace and non-alphanumeric characters \n\n    Fixes #127\n\ncommit 8c602017fb80e422658e36c648b8f70e631763a0\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Jun 13 14:38:58 2014 -0700\n\n    Update version # and change log for 1 0 0 11\n\ncommit 7630913270f3ee2026d32ad5e13916c55cd1f9d9\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Jun 13 13:57:31 2014 -0700\n\n    Fix MenuComplete to not use nested edit groups\n\n    I didn\ t feel like properly solving how to handle nested edit groups when\n    forgetting edits after an undo  but I forget that MenuComplete was\n    actually using nested edit groups \n\n    MenuComplete doesn\ t really need nested edit groups  it was just convenient \n    I switched to just remembering the edits to remove and saving a single edit\n    group for the final selection or removing them all if cancelled \n\ncommit bd211ea4f705dc9f527fab27aeb575b09fe19caa\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 14:11:32 2014 -0700\n\n    Update version # and change log for 1 0 0 10\n\ncommit 1cc4d37ea7899eb34ccc1b7ad185bf4b172d400e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 18:32:35 2014 -0700\n\n    Fix undo bug\n\n    There was a bug in undo code where if you undid some stuff  made an edit \n    then started a grouped edit  the undo state was incorrect   A simple\n    repro was something like (in Windows mode)\n\n        a b c d Ctrl+z Ctrl+z Ctrl+z Shift+LeftArrow Ctrl+x\n\ncommit c4508fd0d5f256124b94bb58ffeac049202fa272\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 18:51:11 2014 -0700\n\n    Fix tests for recent changes\n\ncommit 73fdd14911f73a4f133ab03f32a3abe3585da729\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 18:31:05 2014 -0700\n\n    Change parenthesize sample to honor selection\n\ncommit 53807405054fd9680205ac146b1e54b19f864b45\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 14:09:17 2014 -0700\n\n    Attempt better recovery from an exception\n\n    If an exception occurs when editing the command line  display some\n    diagnostic information so that I might get a bug report   Also\n    attempt to restore the command line so they can continue editing \n\ncommit 436216f44d3b5c1cdef605eb06ded4eb49d4fa42\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 13:22:15 2014 -0700\n\n    Change a couple key bindings\n\n    Bind MenuComplete to Ctrl+Space in Windows and Emacs mode\n    Bind YankLastArg to Alt+  in Windows mode\n\ncommit cd3d5a6230490f0fd207e1c72e18059e283b7e38\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 12:59:45 2014 -0700\n\n    Fix exception when setting history save path\n\ncommit 413b9eb5ff84fa35b4c26bcab3664f7a57fe1a69\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 12:57:36 2014 -0700\n\n    Fix ShowKeyBindings to not write blank lines\n\ncommit dfc12e906f7cf35790c091de2d15766a9dcf4c2b\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 12:17:20 2014 -0700\n\n    Fix a typo\n\ncommit 4c5cc57bf9f55bff44a9905b739f3e014a19ed53\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 12:16:39 2014 -0700\n\n    Update help for history saving options\n\ncommit f7161ae2f155f34d4f892603cd27d7bb89a3b25a\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Jun 12 12:14:58 2014 -0700\n\n    Fix initial creation of directory for history file \n\ncommit 3aa00c46c1e75dc868a9206f2e3fff30fde1ef98\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jun 11 09:35:05 2014 -0700\n\n    Update changes\n\ncommit a7e98ce07d261f612d72622ec41b2b195ae704fd\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jun 11 09:34:38 2014 -0700\n\n    Update help for Ctrl+r/Ctrl+s\n\ncommit 8d02b0f870957b3c1f4924ef606a3fa0c25cb80a\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jun 11 09:25:06 2014 -0700\n\n    Small fix to MenuComplete\n\n    The cursor was placed incorrectly when showing the menu\n    at the bottom of the screen if you hadn\ t reached the\n    end of buffer yet \n\ncommit 61891b41c9ca96d9dde08f8a1889a7b9cf4d6e53\nMerge: 75b2d9a9b dcd09566f\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jun 11 09:02:58 2014 -0700\n\n    Merge branch \ SaveHistory\ \n\ncommit dcd09566fcaaf492d0e13a2f7cf5590e75cf65fa\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Jun 11 09:01:28 2014 -0700\n\n    Auto-save history\n\n    Added options to save history automatically - either at exit or incrementally so that history can be shared across sessions \n    Default is current to save incrementally \n    Also added an option to not save history - useful for those importing history in their profile \n\ncommit 0ff6a3ed24f851fd3cf391a68facde9942df4452\nMerge: 24f3b0079 b495d2400\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sun May 18 06:57:26 2014 -0600\n\n    Merge remote-tracking branch \ upstream/master\ \n\n    Conflicts:\n    \tPSReadLine/PSReadLineResources Designer cs\n    \tPSReadLine/PSReadLineResources resx\n    \tPSReadLine/UndoRedo cs\n\n    Signed-off-by: srdubya <stevewy@gmail com>\n\ncommit 75b2d9a9b9dc1688f8ee3d4573bc5c556a600f5a\nMerge: 80b04250b b495d2400\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat May 17 23:07:57 2014 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit b495d2400d8e41bfa7bfb798f208044c0efdd9fa\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri May 16 18:16:35 2014 -0700\n\n    Add samples for marking/jumping to directories\n\n    For quick navigation  these examples let you mark a directory\n    and jump back to a directory with a couple of keys  all without\n    affecting the current command line \n\ncommit 80b04250b181cef3fd63c472794674d77e316027\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed May 14 07:43:23 2014 -0700\n\n    Update Changes txt\n\ncommit 34f63bf8fb50c5306c9c97358b693ca6eeb79849\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue May 13 17:44:31 2014 -0700\n\n    Recall the saved current line after end of history\n\n    When starting a search through history  we saved the\n    current line   A refactoring broke recalling this\n    saved line in one case (the default) so I added\n    some tests to make sure it doesn\ t regress again \n\ncommit 06654dcb75a1e62177f18710a2f6b0c48f5accc7\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue May 13 09:03:02 2014 -0700\n\n    Ensure completion menu is visible\n\n    When displaying the completion menu  it might be rendered in a\n    non-visible area and needs to be made visible \n\ncommit 96f235668887575aabfc07e07bcbc9304d35c68b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon May 12 07:41:42 2014 -0700\n\n    Add MenuComplete function\n\n    Some folks won\ t like the way menu complete works and the cleanest\n    way to invoke it is as a bindable function  so I\ m adding that \n\n    I considered emulating zsh more closely  but zsh is a little weird in\n    when it removes the possible completions \n\ncommit 230476cc365515aa9a7fb974d634f77fb89517c2\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun May 11 13:33:22 2014 -0700\n\n    Fix menu completion for scrolling and wrapping\n\n    Menu completion would crash PowerShell when invoked from the end of the buffer \n    The display also got messed up when the selected completion caused the line\n    length to exceed the buffer width and hence required wrapping \n\ncommit 44fe1fe2a669419e7060bf414dd8d7585dfefccb\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue May 6 11:20:28 2014 -0700\n\n    Support menu completion\n\n    If completion is ambiguous  we will support interactively selecting\n    the completion using tabs and/or arrow keys after displaying the\n    possible completions \n\n    This menu style completion can be cancelled with Ctrl+G or Escape \n\n    Menu completion should be optional as not everybody will like it \n    I will add an option and/or a function that makes this something\n    folks can customize \n\n    Also fixed:\n        * Tooltips that contain newlines now look much better\n        * Undo groups handled a little better (maybe a non-issue before\n          menu completion )\n\ncommit 77dea1787b614ea3bcf9aefb289997cfbe9dc6ec\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Apr 28 11:31:13 2014 -0700\n\n    Fix small bug with history no duplicates\n\n    Up/Down arrow with  no duplicates  would cause an exception\n    if you tried to go beyond the start/end of history \n\ncommit 24f3b00797a3973bf1693920bb98ccbc36f01d24\nAuthor: srdubya <stevewy@gmail com>\nDate:   Mon Apr 21 19:20:25 2014 -0600\n\n    Improved Undo for \ c\  commands \n\ncommit 7e54ab29be5f3e4ed075c09f3bbeebbe554fa0d5\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Apr 19 19:14:56 2014 -0600\n\n    Making UndoAll a non-VI specific key handler \n\ncommit d6dd9b87d56cd02611f0e8b4fe3cb99f13b0c036\nMerge: 5debc1cf5 25b79bf13\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Apr 19 18:06:06 2014 -0600\n\n    Merge remote-tracking branch \ upstream/master\ \n\n    Conflicts:\n    \tPSReadLine/History cs\n    \tPSReadLine/Movement cs\n    \tPSReadLine/PSReadLineResources resx\n    \tPSReadLine/UndoRedo cs\n\ncommit 5debc1cf5648fa12d223ed39ce6240887d8a58ed\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Apr 19 08:59:33 2014 -0600\n\n    Moving many Vi* commands to more generic names \n\ncommit b92952d778d46e2476f556df4d2ae048948100f5\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Apr 17 09:38:16 2014 -0700\n\n    Reset current history index when done w/ recall\n\n    After a series of UpArrow/DownArrow (or whatever keys\n    are bound to the history search/recall)  I am reseting\n    the current history index   This avoids a problem where\n    the current line might not match the line saved in history\n    for that history index \n\n    There is a small change in behavior that some might notice \n    Say you are searching for some command  but you can\ t think\n    of something unique to search for in that exact command  but\n    you do remember something you can search for in a command entered\n    near that command actual command you want \n\n    Before this change  you could use Ctrl+R to find the command near\n    the one you want  then use up/down arrows to get to the exact\n    command \n\n    This will no longer work after this fix   Any other fix will\n    likely be more complicated  so if folks ever noticed the previous\n    behavior and complain that it no longer works \n\n    Fixes #97\n\ncommit 48c66090199b1f15af7a238721f09c44a3955d66\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Apr 17 09:21:01 2014 -0700\n\n    *SearchHistory to recall current line\n\n    Like ordinary recall history  when you use the down arrow  you\n    eventually recall the current line (which is typically empty\n    but not always )\n\n    SearchHistory was stopping at the first match instead of getting\n    back to the current line (which will be exactly the search string )\n\ncommit ad636239dd1fbe6ef30a2196873b7a897b709420\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 18:06:48 2014 -0700\n\n    Move Ctrl+V entry for Get-PSReadlineKeyHandler output\n\ncommit 4bad9b07f66a9872c964a889386495f25c766083\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 18:05:35 2014 -0700\n\n    Support RevertLine for lines from previous sessions\n\ncommit 25b79bf1340aa0ccc033a7a6cc0a79a093b6a4d6\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 11:03:36 2014 -0700\n\n    Update for release\n\ncommit 3934046f69d4544c1c54b3057347b47d78ae8022\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 10:58:03 2014 -0700\n\n    Revert  Use runtime check to allow other console-based hosts to use PSReadline  \n\n    This reverts commit f5c94f7fe2da695190cc2584c32695f0eb7d8de7 \n\n    Conflicts:\n    \tPSReadLine/PublicAPI cs\n\ncommit 97bfc27146ce692b645ea71a42aec96fc95ef161\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 09:14:47 2014 -0700\n\n    Add api to get selection state \n\ncommit 79905c0974f16d212595fcf5ce265c7eb746788a\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 09:00:30 2014 -0700\n\n    HistorySearch changed to use emphasis\n\n    Like interactive search  history search now uses emphasis\n    to make it obvious what is being searched   With this change \n    the cursor will also always move to the end as it\ s much\n    less useful to have the cursor near the start of the line \n\ncommit 800860c51ee3c40f38f289cb48b8a09b375ba375\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 08:39:32 2014 -0700\n\n    Change eol behavior for NextWord/ForwardWord\n\n    Cmd and bash place the cursor at the end of the last word\n    instead of one past the end of the word when moving by word \n\n    PSReadline emulated that behavior  but it\ s inconsistent with\n    word movement on the rest of the line and it\ s inconvenient\n    because you typically need to use the right arrow or end\n    to edit at the end of the line \n\n    I\ ve removed the emulated behavior  the cursor will now move\n    to the end of the line \n\ncommit b6c9584703d1233c47257436410bb2f10f366882\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Apr 16 08:33:35 2014 -0700\n\n    HistoryNoDupes - Search/InteractiveSearch History\n\ncommit a985c974cfd74cc18342198f7e591a54a257fba6\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Apr 14 14:51:24 2014 -0700\n\n    HistoryNoDupes to store but not recall dupes\n\n    HistorySearch and InteractiveSearch still need work though\n\ncommit c703edae0831c8cb23bd27bdb7ffbda4697c1fc1\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Apr 13 11:21:30 2014 -0700\n\n    Cleanup some Resharper issues\n\ncommit cdd50113f18e8a434189808f09e586ab0df822b4\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Apr 13 10:43:57 2014 -0700\n\n    Support digit args for word/character movement\n\ncommit 816cd6cf8b86e1c7e918ea105d77f1b2a6ab6fc0\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Apr 12 10:16:11 2014 -0700\n\n    Add key bindings in Windows mode\n\n    Windows mode now has by default:\n        * Interactive history search (Ctrl+R/Ctrl+S)\n        * DigitArgument (Alt+Num)\n\ncommit abef5c2dc9d34e702144a35307671933816227ec\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Apr 4 13:02:25 2014 -0700\n\n    Fix #99 - completion in remote sessions\n\n    When powershell has entered a remote session via Enter-PSSession \n    completion was completing against the local session \n\n    The fix is to use the remote runspace when calling the completion\n    api   The remote runspace isn\ t exactly exposed in a clean way\n    from the host  so the fix is mixed between a bit of PowerShell\n    and C# \n\ncommit 67d0936cd81b12fd03d9da5d87ac13cd3ec843b0\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 29 10:23:03 2014 -0600\n\n    Attempting to comply with Jason\ s preferred formatting \n\ncommit b3dc32c0bad29e07b363a1a235ea7a151bf60536\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 29 10:16:02 2014 -0600\n\n    Added ShowKeyBindings cnt-alt-? key binding \n    Fixing missed inadvertant formatting change \n\ncommit fa40af83b74055819ded1f737db4c7f59a75bf35\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 29 09:39:24 2014 -0600\n\n    Attempting to improve Get-PSReadlineKeyHandler for vi mode \n\ncommit f308df0f8b45c9d62ad6f413c4477cfed27a2586\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 29 07:00:30 2014 -0600\n\n    Cleaned up formatting changes in common files \n    Further minimized changes to originals \n\ncommit ebcdf029f0ef081d3764f9f78b5090914f956af3\nAuthor: srdubya <stevewy@gmail com>\nDate:   Sat Mar 22 08:16:03 2014 -0600\n\n    Adding VI edit mode  along with unit tests \n    Note  these items need work:\n     - No support for Yank/Paste yet \n     - No support for \ G\  history goto yet \n     - Undo works  but not as desired in some cases \n\ncommit 7471399ad4c198c742c2f9b9da4cc0cd444b16b4\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Mar 8 16:25:12 2014 -0800\n\n    More cleanup from removing Fakes\n\ncommit c5cd2f03b486face037d3494b6ea475e0869fae2\nMerge: 24cf00ed2 906de61b3\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Mar 8 16:15:27 2014 -0800\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\n    Conflicts:\n    \tPSReadLine/PublicAPI cs\n\ncommit 24cf00ed234837caf59df63b7680cb8595e141f6\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Mar 8 15:52:44 2014 -0800\n\n    Replace Fakes with simple mock object\n\n    Fakes are handy  but require Visual Studio Professional \n    To enable folks using Express  I added a mock interface\n    for the bits that need mocking \n\ncommit 906de61b3b031ea44ddbbbd7fb918a800152d986\nAuthor: jazzdelightsme <dan_j_thompson@hotmail com>\nDate:   Tue Mar 4 18:12:42 2014 -0800\n\n    Use runtime check to allow other console-based hosts to use PSReadline \n\n    The host check in the  psd1 only allows you to specify one host  To allow\n    other hosts to use PSReadline  but still try to give a helpful error to\n    people trying to use PSReadline in other  non-console hosts (like the ISE) \n    we instead do a runtime check using IModuleAssemblyInitializer  wherein we\n    check to see if the current process has a non-hidden console window  and\n    emit an error if not \n\ncommit 366cf077623d43c23cc22f9e1fa350fb25ebba8d\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Feb 26 18:53:34 2014 -0800\n\n    Add post-mortem debugging aid\n\ncommit 8eb4c0c64ebf0a543fe6b5e25eacfa88a4816871\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Feb 26 17:18:34 2014 -0800\n\n    Generate Function param + ValidateSet dynamically\n\n    It was annoying to always update the ValidateSet attribute each\n    time I added a new Function to support   Dynamically generating\n    the parameter with ValidateSet works nicely \n\ncommit 553e9ad4424f85b145a8dfffc9de0938a219caad\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Sat Feb 22 21:15:49 2014 -0800\n\n    Mark ReadKeyThreadProc thread as background to prevent hang on exit \n\n    PowerShell exe does not exhibit the hang because it hosts the CLR and does\n    some teardown differently  but pure-managed hosts will get stuck waiting\n    for this thread unless it is marked as a  background  thread \n\ncommit c45b1a930a9f18ccb0d04175140ca5b02b0dac86\nAuthor: Dan Thompson <dan_j_thompson@hotmail com>\nDate:   Sat Feb 22 21:45:19 2014 -0800\n\n    Replace slow DateTime Now calls with Stopwatch (QueryPerformanceCounter)\n\n    It\ s an order of magnitude faster  We don\ t need all the fancy time info\n    given by DateTime Now anyway; we just need an accurate timestamp \n\n    There\ s also a correctness issue: when dealing with TimeSpans (what you\n    get when subtracting DateTimes)  the Milliseconds property is not the\n    same as the TotalMilliseconds property \n\ncommit 66ece9630d9a446e2c65377014410942f34b87ae\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Feb 23 23:50:13 2014 -0800\n\n    Copy all module files to build dir\n\ncommit 59049ab174d38a27a229108f31049dbf05ac5ff4\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Feb 23 23:31:37 2014 -0800\n\n    Add function CopyOrCancelLine\n\n    Ctrl+C should copy selected text if any is selected   Otherwise\n    it will cancel editing \n\n    On the off chance somebody prefers the old behavior  CancelLine\n    is unchanged  but it is no longer bound \n\n    Fixes #87\n\ncommit fc5983782a3c2184418bad1aa7e3279b58fa50de\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Feb 23 23:08:13 2014 -0800\n\n    Add SelectAll function (Ctrl+A)\n\n    Fixes #84\n\ncommit 3d1cc6a2cd35e3394c814163f15bafbe07ef1c32\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Feb 23 20:27:30 2014 -0800\n\n    Fix #89\n\n    Backspace after a failed history search made searching always fail\n    until starting a new interactive history search \n\ncommit 22ded640722349ed23b0cf2a5d9a502e259f3131\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Feb 14 14:39:29 2014 -0800\n\n    Add missing default arguments\n\ncommit 63c00d30ebe710e08c576c2ebe9fd27714ab2ccf\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Feb 6 08:24:12 2014 -0800\n\n    Add new functions to select to start/end of line\n\n    Function SelectBackwardsLine is bound to Shift+Home\n    Function SelectLine is bound to Shift+End\n\ncommit e4bce53095f64cd33a0da1b5ecb0541a6b2dfae8\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 5 23:42:05 2014 -0800\n\n    Update version number\n\ncommit 1305a5a8f4f7139dcfd185f9cfca3af838ebd82c\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 5 23:38:37 2014 -0800\n\n    Update ValidateSet for key handler functions\n\ncommit 274368daa733ca9345e67ff1d18366be145d03ad\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 5 23:38:10 2014 -0800\n\n    Fix colors in CaptureScreen\n\ncommit 81ea49455285327a2d52b888e6c66e29e5208f3c\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 5 23:11:37 2014 -0800\n\n    Add screen scrolling support\n\n    New functions:\n\n        * ScrollScreenUp\n        * ScrollScreenDown\n        * ScrollScreenTop\n        * ScrollScreenToCursor\n\ncommit 31e98dd6b634b7b689dfa476cc7dcfc26ce14e81\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 5 22:41:35 2014 -0800\n\n    Ensure token state matches buffer\n\n    There was a small bug where typing very quickly could cause\n    random errors - incorrect edits or null references \n\ncommit ff99d190f593101a3a1edf6a6ceea55a4dfbe933\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Feb 5 15:53:53 2014 -0800\n\n    Tests for directory completion\n\n    When completing a directory  we want to always add a trailing\n    backslash  and if the directory is quoted  make sure the backslash\n    is inside the quotes _and_ the cursor is placed inside the quotes\n    so it\ s quicker to type more of the path \n\ncommit c6a4de2174d906f426a4411c6e26b76d543fcc93\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Feb 4 19:18:49 2014 -0800\n\n    Add ShellNextWord\n\n    ShellForwardWord was behaving like *NextWord or *ForwardWord\n    depending on the edit mode \n\n    Instead  we should have 2 functions so people can bind as they choose\n    regardless of the edit mode \n\ncommit cfbd44dfb3a276cb390e64cdd28fc30bf29553dc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Feb 3 09:49:40 2014 -0800\n\n    Small fixes to ShowCompletions\n\ncommit 758c136a2369b5fb081ebf382ec117dcbcedfa4b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Feb 3 09:48:59 2014 -0800\n\n    Support replacing selected text in SelfInsert\n\ncommit e116a67d62ae6a683ddd2ec98568f0c6ed6c385b\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Jan 26 23:35:33 2014 -0800\n\n    PublicAPI tests\n\ncommit f51833d2c16adc6e77ccb010bb224f7d168216ce\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Jan 26 20:21:22 2014 -0800\n\n    InvokePrompt tests\n\n    Removed Console WriteLine replacement as it didn\ t work for InvokePrompt \n    Changed test harness to override VS and actually write stdout to the screen \n\ncommit 39198375fe2ca36c6ee85aa1f38e33216dd098d6\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Jan 25 22:04:04 2014 -0800\n\n    YankLastArg/YankNthArg tests and minor fixes\n\ncommit 99753d94ab714b40b280217596053fcc9ca9a3f8\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Jan 25 14:52:05 2014 -0800\n\n    Always reset bindings when setting edit mode\n\n    As a misguided optimization  if the edit mode is specified\n    but not changing  we skipped setting the key bindings \n\ncommit bf48a71acb916526067bd9207591bd83c18716bc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 24 23:01:08 2014 -0800\n\n    Fix WriteLine to properly scroll\n\ncommit bcead39ebee95bb5f29efa770eb7c7ab915f2ff8\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 23 07:34:22 2014 -0800\n\n    Interactive history search fixes and tests\n\n    Fixed some very minor issues with interactive history search including:\n        * Actually work if started with a forward search\n        * Support Backspace even if bound to a custom command\n        * Remove emphasis when search is in a failed state\n        * Don\ t use current line as search text when starting search\n\n    Tests added cover close the most important stuff  when I get closer\n    to 100% coverage I\ ll add a few more tests \n\ncommit 326fb0397ab411b3186384891fee55026e15deff\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Jan 21 16:55:05 2014 -0800\n\n    More tests   \n\ncommit 84690f543b56cd422d2962967cb2f42fdd7903cc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 17 11:07:29 2014 -0800\n\n    Fix DigitArgument bug\n\n    Multiple Alt+- before any digits would cause an exception \n\ncommit 8f2f14dfc032801f8cbda7c9f76641b48f5957d3\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 17 11:06:33 2014 -0800\n\n    Exclude debug code from code coverage\n\ncommit 894cb8ef4d0a16ae18ab9357aa610fb3366478dc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 16 16:09:32 2014 -0800\n\n    Add some begin/end of history tests\n\ncommit fb46544a935679200c776b7c05fe7d5813117f3d\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 16 14:17:15 2014 -0800\n\n    Avoid hanging when a test fails\n\n    A recent change to the test framework moved calling the validation\n    actions to the thread that reads keys   If an exception occurs on\n    that thread  the test would hang \n\n    Instead  we\ ll catch the exception and throw it from the main test thread \n\ncommit a4376b195b01d0d02b447ccfe88805d4ec2ec953\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 16 08:54:32 2014 -0800\n\n    CancelLine tests\n\ncommit e6dea08c7aa812e76a4911e7e79f2a657490e3b5\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 16 08:32:07 2014 -0800\n\n    Fix cut/paste typo\n\ncommit 515c8483d26570d34393f0f152b872774eb65023\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Jan 14 19:31:28 2014 -0800\n\n    Refactor test code to mirror code to test\n\ncommit b9035677ac2577272f25aa254c7d7f1f1dd16be4\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sun Jan 12 14:11:04 2014 -0800\n\n    Refactor code to multiple files\n\ncommit 4b10d1713ee0cc3b4118ea25665c1e28ab032b0d\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Jan 9 23:28:02 2014 -0800\n\n    Simplify tests with a different test hook\n\ncommit d152449a3010ac9871678b546cb5482836dda7df\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Jan 7 10:09:40 2014 -0800\n\n    New tests\n\ncommit b23507ccd999f62190e3fb6a954790fc5cbc469f\nMerge: 4d87baf0f 0f00966bb\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Jan 6 15:15:22 2014 -0800\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit 0f00966bb57963f90d45c99bc1da539da23d9787\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Jan 6 12:24:43 2014 -0800\n\n    Place cursor for custom handlers using Delete\n\ncommit 4d87baf0fbfa9fa110a6c37ba24a3a477822310c\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Jan 6 09:18:19 2014 -0800\n\n    Fix conversion from string=>ConsoleKey for digits\n\ncommit e66c519cab5c882a47d800263e7c679d6a9fdd7f\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 3 22:26:28 2014 -0800\n\n    Add function InvokePrompt to re-evaluate prompt\n\n    InvokePrompt can be used from a custom key handler to invoke the\n    prompt function again   This is done in a way that minimizes changes\n    to the display - the previous prompt is overwritten and the cursor\n    is placed where it was before the prompt was evaluated previously \n\n    The current input is also preserved \n\ncommit 01575ace3342ab3d5e1be326935987b74c77543e\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Jan 3 00:09:49 2014 -0800\n\n    Add CaptureScreen function\n\n    CaputureScreen is used to copy lines from the screen to the clipboard \n    Text is copied in plain text as well as rtf with colors \n    Rtf looks best in Outlook - which is my primary reason for adding the feature \n\ncommit 60dc59d7c4a59ed1086aa04260e99f39cfeaaf0a\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Dec 28 16:22:35 2013 -0800\n\n    Add keyboard selection + cut/copy support\n\n    Shift+Left/Right arrow now selects text\n    Shift+Ctrl+Left/Right arrow now selects words (Windows mode)\n    Alt+Shift+F/Alt+Shift+B now select words (Emacs mode)\n\n    Del/Backspace deletes highlighted region\n    Ctrl+X cuts to system clipboard (Windows mode)\n    Shift+Ctrl+C copys selection or full line to system clipboard (Windws mode)\n\n    New unbound function KillRegion which kills text b/w cursor and mark (unbound)\n\ncommit 9064fb14414c870a53e557b403acd6c6cbc1f1d4\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Dec 14 13:23:47 2013 -0800\n\n    Improve key->string conversion\n\n    The strings shown for commands like Get-PSReadlineKeyHandler or\n    shown from functions WhatIsKey and ShowKeyBindings should now\n    match what you can use with Set-PSReadlineKeyHandler \n\n    These strings will also omit +Shift in most cases because it\n    is usually clear from the character  e g  the following are\n    equivalent but the former is preferred \n\n        Ctrl+?\n        Ctrl+Shift+/\n\ncommit 75446b5eeae3d0d2498c7c3fc76dac9d128f7007\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Sat Dec 14 12:24:26 2013 -0800\n\n    Support passing non-int args to CharacterSearch\n\n    CharacterSearch/CharacterSearchBackward can now accept\n    a string of length 1 or a character so a handler can\n    hard code the character to search  e g \n\n    Set-PSReadlineKeyHandler -Key \ Alt+|\  -ScriptBlock  \n        [PSConsoleUtilities PSConsoleReadLine ::CharacterSearch($null  \ |\ )\n     \n\ncommit 6cacffc9b3efe54487a93141a7439139d476aed6\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Dec 11 22:41:57 2013 -0800\n\n    Add new functions WhatIsKey and ShowKeyBindings\n\n    WhatIsKey prompts for a key and then shows what it is bound to \n\n    ShowKeyBindings is like running Get-PSReadlineKeyBindings  but\n    does so without needing to run a command and preserves the current\n    input line \n\ncommit c5b82bead7f8ee73f91ed668f4b38e5604b0d255\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 10 15:34:48 2013 -0800\n\n    Unbound functions in Get-PSReadlineKeyHandler\n\n    Get-PSReadlineKeyHandler will now return unbound functions by default \n\n    A couple of parameters were added so you can get just the bound/unbound\n    parameters if so desired \n\n    OutputType was also added to Get-PSReadlineKeyHandler \n\n    The OutputType was cleaned up a bit - BriefDescription was renamed to Function\n    and LongDescription was renamed to ShortDescription \n\ncommit 408c286d1b5099d7ee502899c3c4c25f3badf1db\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 10 13:23:21 2013 -0800\n\n    Add missing function descriptions\n\ncommit 517e063eaece66db9c8c70083e4dd3c0181353d3\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 10 10:51:33 2013 -0800\n\n    Update about topic\n\ncommit 97038a6b69c0a36100e3adbf7d84ac222184fe5c\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 10 09:14:37 2013 -0800\n\n    Fix syntax  add missing parameters and cleanup\n\ncommit e87c41cacdda234ba97fc93d20ca39246a84b628\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 10 09:13:28 2013 -0800\n\n    Use SwitchParameter instead of bool\n\ncommit b4cd04c4e76206b4bded42bf275188ce67d0be9f\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Dec 9 18:25:19 2013 -0800\n\n    Change for parameter name consistency\n\ncommit f428d202253c476ce73dfc5e4eea1e84f404c058\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Dec 9 18:24:02 2013 -0800\n\n    Fix generating ValidateSet for Function parameter\n\ncommit 961f163ba70f6aaaca700fafafbd10a4e4c8febe\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Dec 9 13:12:24 2013 -0800\n\n    Update version number\n\ncommit 727248a3c36b4cbbf13dd7f74e50a468bc0f9382\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Dec 9 13:07:05 2013 -0800\n\n    Add Windows mode bindings for character searching\n\n    F3/Shift+F3 are now bound to character searching in Windows mode \n    This roughly matches Visual Studio bindings \n\n    Note that traditionally F3 copies text from previous line starting\n    using the position of the cursor in the current line   It\ s not\n    hard to implement  but I\ m not sure it\ s a useful feature  especially\n    with YankLastArg (which I could see mapping to F3 but probably won\ t )\n\ncommit 9978fdf717b45ce10d7da131ab64e1998d756b58\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Dec 9 11:26:35 2013 -0800\n\n    Add AcceptAndGetNext (Ctrl+O in Emacs mode)\n\n    Add support to execute the current command and recall the following command after the current command finishes \n\ncommit 59648c673f70e2b91a65671662483da20636a358\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Dec 9 09:29:09 2013 -0800\n\n    Add CharacterSearch/CharacterSearchBackward\n\ncommit 8a16a501cef8288c4205afb443f5d0e6ca86a8bc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Fri Dec 6 14:03:40 2013 -0800\n\n    Implement yank-last-arg/yank-nth-arg\n\n    Support for yank-last-arg and yank-nth-arg has been added \n    Combined with digit-argument  these functions provide a nice way\n    to copy arguments from previous commands fairly easily \n\n    For example  to copy the 2nd argument from a command 2 entries back \n    you can use: Alt+2 Alt+  Alt+ \n\n    I also tweaked digit-argument slightly so that when you start with\n    a negative argument (Alt--) the first digit can override the -1 \n    In Bash  to enter something like -2  you have to think backwards\n    and type Alt-2 Alt-- because Alt-- Alt-2 ends up giving you -12 \n\ncommit 4678057eef4d4e97cc16f4f7b6954cea3ac26c0a\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Dec 5 22:17:48 2013 -0800\n\n    Use case insensitive history search by default\n\n    PowerShell is mostly case insensitive  so history search should also ignore case \n    There are uncommon situations where someone may want to use a case sensitive search \n    so an option is provided to control the search \n\ncommit 48dd4963b436e5d397a966f70fbdd23e20dcc091\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Dec 5 21:59:44 2013 -0800\n\n    Fix exception with long status line\n\n    Long status lines (which can happen rarely on purpose but easily by accident)\n    were causing an exception in Render() because it assumed the status region\n    would only ever be 1 line \n\ncommit 75e5afb39204f993001782ae6bcb5760446f0d86\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Thu Dec 5 21:09:10 2013 -0800\n\n    Use less hacky way of prompting y/n\n\n    A bug report indicated some odd behavior after being prompted y/n and hitting tab \n    While I can\ t reproduce the problem  I suspect it has something to do with how\n    the prompt is being cleared \n\n    After introducing the status line for Ctrl+R  I realized I could use that for\n    prompting y/n  so hopefully this change addresses the reported bug \n\ncommit dc5fbe566a7086ff6827260fb180f3c5655d32cc\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Tue Dec 3 20:02:56 2013 -0800\n\n    Initial digit-argument support\n\n    Add support for digit-argument - currently only honored for self-insert \n\ncommit d49adea546849730bce89a330f55ee6f645d7b81\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Wed Nov 27 14:57:04 2013 -0800\n\n    Add backslash to directories when completing\n\ncommit c2d10a35881227e160c7819eddcd9b3950fc75f2\nAuthor: jason@truewheels net <jason@truewheels net>\nDate:   Mon Nov 25 23:33:46 2013 -0800\n\n    Fix bug w/ multiple kills not accumulating sanely\n\ncommit 290d9f83ae7775a2262836e85cd3526e14f54add\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Nov 25 19:25:06 2013 -0800\n\n    Add UnixWordRubout support (Ctrl+W) in Emacs mode\n\n    UnixWordRubout is like BackwardKillWord except it uses whitespace to define word boundaries \n\ncommit eb42b90f815e7ef4b88e3a8ec0745fe70b31a4e5\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Nov 25 19:14:13 2013 -0800\n\n    Add Windows mode bindings for [Backward KillWord\n\n    Like Visual Studio  Windows mode will use:\n        Ctrl+Backspace - BackwardKillWord\n        Ctrl+Delete - KillWord\n\ncommit 927fa36681d4cc1f65c0015abd0c9b47a363f5c5\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Nov 25 18:39:53 2013 -0800\n\n    Add delimiter support in *Word related functions\n\n    Functions including:\n      * NextWord (Windows mode)\n      * ForwardWord (Emacs mode)\n      * BackwardWord\n      * KillWord\n      * BackwardKillWord\n\n    now use delimiters instead of being token based   The\n    delimiters can be specified by\n\n        Set-PSReadlineOption -WordDelimiters      \n\n    To see the current set of delimiters:\n\n        (Get-PSReadlineOption) WordDelimiters\n\ncommit cf976577a2248a4a289f67b52567397686c93fef\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Nov 22 23:54:21 2013 -0800\n\n    Rename *Word functions to Shell*Word\n\n    The implementation of the various *Word functions more closely matches Bash\ s Shell*Word so I\ ve renamed the functions \n\n    The next step is to implement the configurable character based word boundaries \n\ncommit c6e0f7a4797aef7b2ed7f89e5583261eb51e88ee\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Nov 21 14:18:25 2013 -0800\n\n    Support some accidental shift-key to act like key\n\n    Apparently people accidently hit Shift+Backspace often enough that it\ s annoying\n    when it doesn\ t delete the previous character \n\n    To fix this - we\ ll pretend shift wasn\ t pressed if we see unbound keys where\n    the character is a control character  but the only modifier was shift   Realistically\n    this is just Backspace because Shift+Return is bound  but maybe there\ s another\n    I\ m missing \n\ncommit 58a1dc1855667a845991845a3a72b0e578c0040f\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sat Nov 16 11:50:41 2013 -0800\n\n    Version update\n\ncommit e7171e7cd015fc447448b8dee8b5bf871bbd7008\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sat Nov 16 10:44:14 2013 -0800\n\n    Correctly set history point after Ctrl-C\n\ncommit f2a71716cbc32021b2e7d57a2cd0eafe71c68e3f\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sat Nov 16 10:01:36 2013 -0800\n\n    Fix ugly scrolling introduced with Ctrl-R support\n\ncommit f5346d0f23255b7f8147723a5ed17aeb3d92131e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Nov 15 07:29:12 2013 -0800\n\n    Fix Undo after Paste\n\ncommit c506fa66dba2a23e8e40248f2791d007f4d6af38\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Nov 15 00:30:50 2013 -0800\n\n    Ctrl-R support\n\ncommit b2d71ab6d232b36525f6ee2505a365a6abf9e3dd\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 25 11:49:46 2013 -0700\n\n    Add PSReadLine psd1 back as ascii\n\ncommit 4bbd408fd0a81d95c1018e49f1b2195d7eb305a1\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 25 11:49:06 2013 -0700\n\n    Remove psd1 file so I can add it back as ascii\n\ncommit 12a7603a9b24b983d800e4b76addd1a356a947db\nMerge: 013851048 7c6cf5430\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 25 10:08:44 2013 -0700\n\n    Merge pull request #55 from cbadke/SynchVersion\n\n    Automatically apply version from dll to powershell module manifest\n\ncommit 013851048aa18a9bbf7ade0650b41f004c8f3139\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Oct 24 19:02:21 2013 -0700\n\n    Fix bug where console paste mixes up keys\n\n    Console paste was broken by the fix to exit w/o delay because\n    I needed to reconsider the logic of ReadKey instead of just refactoring\n    the code onto another thread \n\ncommit 7c6cf5430226a9c7ff5b65cd4e8eb5fa59264a46\nAuthor: Curtis Badke <curtis@badkid ca>\nDate:   Thu Oct 24 19:45:59 2013 -0600\n\n    Automatically apply version from dll to powershell module manifest\n\ncommit 8651dd754dd74dced42be3d14e8a0a4df416f3c6\nMerge: 5e92d7465 59e032d4a\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Oct 24 18:38:00 2013 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit 59e032d4ad6be6e2061ce5ebf192210503646919\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Oct 23 10:21:10 2013 -0700\n\n    Fix the slow exit problem\n\n    Moved the call to Console ReadKey to it\ s own thread\n    so I can control exiting ReadLine on the pipeline execution thread\n    and unblock PowerShell so that it will execute any Exiting\n    event handlers then let the process shut down before the OS\n    forcibly terminates the process \n\ncommit 5e92d74652c2e0360134c00f1eda75a95c484b8c\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Tue Oct 22 07:01:33 2013 -0700\n\n    Add ClearScreen\n\n    ClearScreen clears the screen then redraws the current line at the top of the screen \n\ncommit a84e9a2ab701667d88a721751df1df4bf0737b3e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Oct 21 08:20:11 2013 -0700\n\n    Add brace matching support\n\ncommit f78cd838c93eefd478ba604d0ff00c33c97838da\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Oct 20 18:20:06 2013 -0700\n\n    Fix completion at end of line\n\ncommit d1870d4a95c5ed5923161fc522254bdc4cbe3946\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Oct 20 16:53:30 2013 -0700\n\n    PossibleCompletions fixes\n\n    Fixes to PossibleCompletions:\n\n      * Truncate when list item/tooltip has `n\n      * Prompt when too many (default 100) completions\n      * Add option to configure how many completions before prompting\n\ncommit 13008c01ade1b1b3e70dea08a30db9723319ba86\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Oct 16 10:38:04 2013 -0700\n\n    Update for release\n\ncommit 6fbc62852da3bc0a7e632915da056330b688901e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Oct 16 10:35:59 2013 -0700\n\n    Fix bug with console paste not displaying everything\n\ncommit a8a031670f9f156937bc44178481ceb1ecdb9358\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Tue Oct 15 17:49:14 2013 -0700\n\n    Remove  Net 4 5 dependency by removing EventSource \n\ncommit 36caaeb1b61b7926ac3e904011ef41df43282fb8\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Oct 14 11:18:43 2013 -0700\n\n    Update version \n\ncommit 0914756db9155837ed5617e80783d78002522846\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Oct 14 10:52:12 2013 -0700\n\n    Update help files \n\ncommit 1491339aff830975b054c52f8b7f9f2afc161e52\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 11 09:54:18 2013 -0700\n\n    Remove SetBufferState\n\n    SetBufferState doesn\ t support Undo/Redo   I want to encourage handlers\n    to always support undo  so it\ s best to remove a code path that can\ t\n    easily support undo \n\ncommit 0cc188af70f711ff9a3af75f1d9faff4982fa59f\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 11 09:37:23 2013 -0700\n\n    Speed up pasting from console\n\n    Pasting from the console was slow for 2 primary reasons:\n\n    * StringBuilder is pathologically slow if you  Insert  at the end\n    * Rendering requires parsing  this was happening for every character\n\n    The first issue is trival to fix - call Append when truly appending \n\n    To address the second issue  I\ m queueing up characters when we\n    want to read a character   If enough characters are queued up  we\n    ignore requests to render if we\ ve rendered recently   This is\n    fine because we know we\ ll render soon because queued characters\n    will come along that will force us to render again \n\ncommit ec95d0ac255cfcf81879ce40c5b4aa666ad85ae1\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Oct 6 09:01:51 2013 -0700\n\n    Add Get-PSReadlineOption cmdlet\n\ncommit c29a4e81d4468c2fc7301bef9b9e22fe04125256\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 4 10:51:57 2013 -0700\n\n    Refactor options to their own class\n\n    Introduce a class for options for a Get-PSReadlineOptions cmdlet \n\ncommit 0c2db7427c9db8330445c5c56f885d6e0fa10a50\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Oct 4 07:48:06 2013 -0700\n\n    Remove old unneeded module initializer \n\ncommit 3fd18cc244ec4f1d4f62685f48ac69f6b484bc4d\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Oct 3 23:22:42 2013 -0700\n\n    Rename a couple parameters\n\ncommit 79cae6659fcdb469a706325065631f236cb72e11\nMerge: 9fff1ca91 474e6b688\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Oct 3 23:18:04 2013 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit 9fff1ca91e0d028a34bccbc93edc5d38faf3d670\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Oct 3 23:17:02 2013 -0700\n\n    Simplify adding handlers to builtin functions\n\ncommit 5b2ba4a552ca5dc6842c79de35ca2a047a05b409\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Oct 3 18:50:01 2013 -0700\n\n    Make Insert/Replace public\n\n    Insert and Replace are now public so handlers can support undo \n\ncommit 474e6b6880e530e9a46390dc9272504ae3bb1565\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Sep 30 13:58:17 2013 -0700\n\n    Fix loading history\n\n    Changes to support undo broke loading history \n\ncommit 04312111a950047b4f5e2878dc1d1478ed0b984b\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sat Sep 28 09:35:42 2013 -0700\n\n    Add bindings for  Beginning|End OfHistory\n\ncommit d03f65cb1218260c8be63055059ba540341bf7f7\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Sep 27 20:36:16 2013 -0700\n\n    Initial undo/redo support\n\ncommit 055e543b8d464a26d72b838245de4b23ddcab32d\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Sep 25 08:45:11 2013 -0700\n\n    Use string instead of StringBuffer in HistoryItem\n\ncommit 3d9c5b10428dd4563ba218eade7d5d2d4045f06e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Sep 25 08:36:27 2013 -0700\n\n    Save current line for recall during history commands\n\ncommit df7daf21a4111ae8f8c994ce1d44f754d5cee49b\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Sep 23 22:11:39 2013 -0700\n\n    Lay some groundwork to support undo\n\ncommit 88dc3065ef07e54b4b1a8ab175b959436f6e3103\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Sep 23 09:02:00 2013 -0700\n\n    Make displaying history in debugger simpler\n\ncommit d274a18d8da67be87632bc711744916d1746e8eb\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 14:58:38 2013 -0700\n\n    Add coloring support for Member names\n\ncommit 251caaccccf4ec723bfe7eb33daa02676be0c63d\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 13:53:57 2013 -0700\n\n    Fix coloring in generic tokens\n\ncommit 634422bf792afc7eda9e6daec1cd79e809579c48\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 11:57:36 2013 -0700\n\n    Correctly classify assignment tokens as operators\n\ncommit 76565d908bbf055bf3a573a73e37e45bc4f987a2\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 11:52:06 2013 -0700\n\n    Handle multi-line input better with CancelLine\n\n    Like cmd  we leave the input visible  but I appended\n    ^C (or whatever key was used to cancel) so there is\n    a clue input was canceled \n\n    Multi-line input is preserved as well \n\ncommit 6787a81542fa170899055f6ba7a1dcbf911c85a5\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 11:32:25 2013 -0700\n\n    Don\ t add empty lines to history\n\ncommit 110cada611bf587ab417bebf992816ad7ed16ec5\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 19 09:18:19 2013 -0700\n\n    Add demo mode and ETW trace\n\n    Added ETW tracing for key presses (a key logger!) so it can be used\n    in a variety of ways  e g  when doing performance profiling  you can\n    add a message of sorts via key presses if you turn on the provider \n\n    The ETW tracing code depends on CLR 4 5  this might force some folks\n    to upgrade \n\n    Added PSReadline EnableDemoMode which uses the ETW trace to display\n    key presses while you type   This is useful for talks and producing\n    screen captures to show the editing experience \n\ncommit fe984b6c5fb378e642d21543aa40935719598451\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Sep 13 09:16:53 2013 -0700\n\n    New release\n\ncommit 67056bdd5874d789ddd25c1a0e2ccb54f57d9afb\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri Sep 13 08:49:33 2013 -0700\n\n    Remove MinimumHistoryCommandLength\n\n    People seem to prefer all commands in history  so it seems better to have\n    fewer options \n\n    The following can be used if the previous functionality is desired:\n\n        Set-PSReadlineOption -AddToHistoryHandler   $args[0  Length -gt 3  \n\ncommit eb7eafb4b7758e7a4084874e82e73cd8d13b449f\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 12 22:41:34 2013 -0700\n\n    Read PowerShell history into PSReadline on import\n\n    Added a public api to add command lines to PSReadline history \n    Use this api when the module is loaded so people that\n    persist their history can recall those command lines without\n    any additional changes to their profile \n\ncommit 05caf627045e5ddc0783ea79444f2cb03f850d0c\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 12 19:13:08 2013 -0700\n\n    Add Ctrl+End/Ctrl+Home emulation in cmd mode\n\n    Ctrl+End deletes to end of line\n    Ctrl+Home deletes to start of line\n\n    Neither puts deleted text in the clipboard/kill ring \n\ncommit 7885d0bd660639c125f491369e2cc0b0d21f679f\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Thu Sep 12 06:03:29 2013 -0700\n\n    Fix cut and paste error that broke Ctrl-C\n\ncommit 7668dc9a9d89352040623863ce64c0f1d6d4eb57\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Sep 11 17:55:30 2013 -0700\n\n    Support 2 key chords\n\n    Support for 2 key chords has been added \n\n    There is a small breaking change in Set-PSReadlineKeyHandler\n    because the -CtrlX switch is no longer needed   It could have\n    been left in  but it\ s better to just remove it - not very\n    many people use this module yet \n\n    The signature of key handlers was also changed to better support\n    features that have not yet been implemented   The signature change\n    shouldn\ t affect any existing key handlers because default arguments\n    should cover those cases \n\ncommit 4154fbedd6ec088422fcfa22794dfab699ae88d3\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Tue Sep 10 22:52:12 2013 -0700\n\n    Add default mapping for Ctrl+C to Emacs mode\n\ncommit f94cd9b255551ac944e0bec9d03065743e00ec10\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Tue Sep 10 18:35:37 2013 -0700\n\n    Handle Ctrl+C like PowerShell/cmd\n\n    Ctrl+C was being processed by the system - fix was to\n    change the console mode \n\n    After that  to emulate cooked input mode  we return\n    to the host with an empty buffer so the input is\n    preserved and the prompt is evaluated again \n\ncommit d01e0d9671151ffc57101e3ca8ee94e533726e78\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Tue Sep 10 10:49:30 2013 -0700\n\n    Make Ding public for use from custom key handlers \n\ncommit b157d4f5a4f2adecc477dd3d73a7840b63e2dfc1\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Tue Sep 10 09:26:14 2013 -0700\n\n    Support alternate keyboards\n\n    Control keys that weren\ t bound to actions were ignored to avoid\n    adding ugly glyphs   Unfortunately with some keyboard layouts \n    important keys like \ |\  are entered with Control \n\n    Fix is to never ignore control keys and display the actual control\n    sequence like ^P   This means some characters can now span more\n    than one cell   I haven\ t done enough work yet to support CJK\n    characters  hopefully it will be as simple as the couple changes\n    needed for this fix \n\ncommit 9961445ae9a9906e8bb0d2a098ffb1e39ac102db\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon Jul 22 10:00:33 2013 -0700\n\n    Add Paste from clipboard \n\ncommit 7ca945fdbbdbbf562482df7edbd9f853290c7ab2\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Jul 21 15:49:02 2013 -0700\n\n    Add about topic \n\ncommit 5e6b56de6791ef83fa60ab622a4117b39053d63b\nMerge: fc820e7de 0f22712df\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Jul 21 15:42:16 2013 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit fc820e7de785caa5059d1b4b52bd96610a9e733e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Jul 21 15:41:18 2013 -0700\n\n    Update doc comments to reflect reality\n\n    Add a key binding for showing completions in cmd mode \n    Add an api to set the cursor position \n\ncommit b113fcd5b477f93335c19f0ad69616f931263282\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun Jul 14 00:25:29 2013 -0700\n\n    Make this more of a real module \n\ncommit 0f22712df3479f2aebf81d0b444ea76e4154f85b\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Jun 26 19:06:22 2013 -0700\n\n    Add cursor position as out parameter to GetBufferState \n\ncommit 38374837e2330d123b0038defd3706253365b565\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed Jun 19 22:37:57 2013 -0700\n\n    Add api to get token/ast buffer state \n\ncommit acde74038a9993aabc64250725ff1643cb2cf04a\nMerge: 2e385b01f e1ed59645\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri May 24 23:12:46 2013 -0700\n\n    Merge branch \ master\  of    com/lzybkr/PSReadLine\n\ncommit e1ed59645c129a3f51db2da3ed251aff31d0f0e3\nMerge: b2d7b4559 4d70792d3\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri May 24 23:12:10 2013 -0700\n\n    Merge pull request #7 from oising/master\n\n    consolekeyinfo converter work + tests\n\ncommit 2e385b01fc54fb12c6ed8392a1501e3e9d1f1d4c\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Fri May 24 19:56:34 2013 -0700\n\n    Add Get-PSReadlineKeyHandler\n\n    To make it easier to see what keys are bound  you can use the command Get-PSReadlineKeyHandler \n\n    The command Set-PSReadlineKeyHandler also adds support for binding Ctrl-X prefixed commands in Emacs mode \n\ncommit 4d70792d3591f3227fcc55be6b57993147f8fa4a\nAuthor: oising <oising@gmail com>\nDate:   Fri May 24 15:54:07 2013 -0400\n\n    implemented consolekeyinfo converter; added unit tests; tweaked parameters on set-psreadlinehandler\n\ncommit b2d7b455976fecc35829a1adb925d9b6426e48ab\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun May 19 09:04:40 2013 -0700\n\n    Fix some more end of buffer problems \n\ncommit 6e33c1c14f9adf82d7a207647a0d391a37a82d4b\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun May 19 09:02:59 2013 -0700\n\n    Add function keys \n\ncommit 3120d6758865e78f3f0c810a3fadad54001ed61d\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed May 15 12:42:26 2013 -0700\n\n    Fix a couple small completion bugs\n\ncommit 845e48e44511c47f73b05ec4564b7002e5d2ea2e\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Wed May 15 00:15:16 2013 -0700\n\n    Fix problem with ShowCompletions at end of buffer\n\n    When the cursor was at the end of the buffer  ShowCompletions would cause an exception trying to move the cursor outside the buffer \n\n    Fixed by writing an explicit newline - done using the native Console api so it isn\ t redirected by the test framework \n\ncommit 6c7f261296f46f74f90d3fd67effbbdb3d019163\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Mon May 13 23:28:35 2013 -0700\n\n    Don\ t insert garbage for non-printable keys \n\n    Function keys and Meta keys should not insert anything if the key is not bound to any action \n\ncommit 5eb2943854958df75cb5b2bdde67c95d5d98d462\nAuthor: Jason Shirk <jason@truewheels net>\nDate:   Sun May 12 23:52:15 2013 -0700\n\n    Initial checkin \n  
23467,     Avoid trying to load DLLs as Snap-Ins with Import-Module\n\nThanks @lzybkr \n  
23468,     Add Format-Table Pester Unit Test\n  
23469,     Merge pull request #915 from PowerShell/andschwa/shared-host-working\n\nUpdate  NET Core packages  
23470,     Fix Pester tests\n\nThe `Get-Process` cmdlet cannot be used for these types of tests due to\nsecurity constraints on OS X \n\nThese tests are about to be re-written soon anyway  so the simple fix\nwas to use another cmdlet \n  
23471,     Merge pull request #916 from PowerShell/JamesWTruher-AddTestFiles\n\nJames w truher add documentation to Testing directory  
23472,     Update type catalog\n  
23473,     Fix xUnit tests for new framework\n\nThis also enables us to run them on OS X (though they will fail) \n  
23474,     Switch to netcoreapp1 0\n\nInstead of using `dotnet publish`  we can use `dotnet build` and the new\n`netcoreapp1 0` framework with a new dependency on\n`Microsoft NETCore App` to generate output that does not include the\nruntime  but can be run anywhere (given the installation of the\nruntime) \n\nWhile we cannot yet adopt a dependency on the shared host until  NET\nCore RTM  we are forced to switch to this system anyway because the\nlatest RC3 packages and CLI do not support `netstandardapp1 5`  See\ndotnet/cli#2482 \n\nThus we\ re in an in-between state where we have to use `netcoreapp1 0` \nbut cannot use ` Microsoft NETCore App :    type :  platform   ` to\nutilize the shared host  as we need to continue to ship our host \nWithout specifying  platform   we retain the status quo with respect to\nbuild steps and outputs \n\nAdditionally  there is no longer a good reason to use the RC3 packages \nand it has been advised we switch to RC2 since the\n`Microsoft NETCore App` is only available for RC2  We must update\npackages because our current version can no longer be debugged \n  
23475,     remove extraneous line  
23476,     add testing files to repo\n  
23477,     Merge pull request #910 from PowerShell/noninteractive2\n\nIt s always non-interactive  
23478,     Ask for current commit hash in issue template  
23479,     Did I accidentally delete this line?\n  
23480,     Merge pull request #907 from PowerShell/andschwa/releasing\n\nAdd releasing documentation  
23481,     Add Unit Test for Write-Progress\n  
23482,     Merge pull request #873 from PowerShell/RemoveVariablePesterUnitTest\n\nAdd Remove-Variable Pester Unit Test  
23483,     Add Remove-Variable Pester Test\n  
23484,     Add releasing documentation\n\nResolves #665 \n  
23485,     Merge pull request #906 from PowerShell/andschwa/github-templates\n\nAdd GitHub templates  
23486,     Add GitHub pull request template\n  
23487,     Add GitHub issue template\n  
23488,     Fix up contributing guidelines\n\n- Remove CI skip section because we always want CI\n- Fix links due to file move\n- Add note that CI will fail for PRs from forks\n  
23489,     Move CONTRIBUTING md into  github folder\n  
23490,     Merge pull request #905 from PowerShell/andschwa/fix-invalid-profile\n\nFix bug when loading bad profiles  
23491,     Fix bug when loading bad profiles\n\nThis resolves #817 \n\nA PowerShell instance is created to load and execute profile code \nHowever  if the profile has a parse error  the instance never gets\ncreated  thus we have to check that it s not null before disposing it \n  
23492,     Merge pull request #904 from PowerShell/andschwa/fix-restore\n\nRemove aspnetvnext and dotnet-cli feeds  
23493,     Remove aspnetvnext and dotnet-cli feeds\n\nThe dotnet-core and aspnetcidev feeds provide all our required packages \nThe aspnetvnext causes `dotnet restore` to take an inordinate amount of\ntime  which terminates our CI builds \n\nReducing the number of feeds brings restore time from scratch down to 3\nseconds on my machine \n\nThe aspnetvnext feed was originally added for the CoreCLR xUnit runner\npackages; but is no longer necessary \n\nResolves #896 \n  
23494,     Merge pull request #886 from PowerShell/GetAliasV2DRT\n\nAdd a V2 DRT for Get-Alias  
23495,     Merge pull request #877 from PowerShell/GetCultureUT\n\nAdd Unit Test for Get-Culture  
23496,     Merge pull request #876 from PowerShell/UnitTest_Temp\n\nAdd Unit Test for Add-Member  
23497,     Merge pull request #867 from PowerShell/InvokeCommandPesterTest\n\nAdd Invoke-Expression Pester Unit Test  
23498,     Merge pull request #866 from PowerShell/UpdateNewAliasPesterTest\n\nUpdate New-Alias Pester Unit Test  
23499,     Merge pull request #897 from PowerShell/andschwa/add-encodedcommand-tests-#712\n\nAdd -EncodedCommand tests  
23500,     Merge pull request #902 from PowerShell/UpdateGetVariablePesterTest\n\nUpdate Get-Variable Pester Test for issue 818 closed  
23501,     Merge pull request #894 from PowerShell/shifttab\n\nAdd Shift-Tab for reverse traversal  
23502,     Update Get-Variable Pester Test\n  
23503,     Fix the issues of CR for Add-Member\n  
23504,     Fix the issue of CR fot Get-Culture\n  
23505,     Merge pull request #885 from PowerShell/BryceM-Dev\n\nPorting Management DRT TTests from psl-monad to Pester   
23506,     Merge pull request #893 from PowerShell/andschwa/add-help-tests-#710\n\nAdd CoreConsoleHost tests for --help flags  
23507,     Add Shift-Tab for reverse traversal\n  
23508,     Fix -EncodedCommand implementation\n\nPowerShell uses Encoding Unicode  which is different from Encoding UTF8 \n  
23509,     Add test for -EncodedCommand\n  
23510,     Add tests for powershell -? parsing\n\nAnd all other accepted forms \n  
23511,     Update Pester tests readme\n  
23512,     Use -noprofile for powershell exe tests\n  
23513,     Merge pull request #889 from PowerShell/help\n\nFixes seg fault when Get-Help cannot find topic  
23514,     Add Core PS links  
23515,     Revert  attempting to work around Linux\\OS1 dynamic file \n\nThis reverts commit 1d883c705d89d7de053328c036a53e1ded5320a9 \n  
23516,     attempting to work around Linux\\OS1 dynamic file\n\n   com/PowerShell/PowerShell/issues/891\n  
23517,     Fixing non-windows byte-encoding verification failure\n  
23518,     Merge pull request #890 from PowerShell/andschwa/fix-nuget-warnings-#856\n\nFix NuGet warnings due to TypeCatalogParser  
23519,     Fixing Linux\\OSX compatibility issues\n\n**Added -Pending:$flags for Linux and OSX to set-content and add-content\ntests that expose dynamic variable file issues on these platforms\n(   com/PowerShell/PowerShell/issues/891)\n**Handled platform-specific line-ending differences in Get-Content\n-ReadLine - Tail tests\n  
23520,     Make TypeCatalogGen build script quieter\n  
23521,     Use wild-card version of ProjectModel\n  
23522,     Fixes seg fault when Get-Help cannot find topic\n  
23523,     Merge pull request #882 from PowerShell/andschwa/faq\n\nAdd Frequently Asked Questions  
23524,     Add a V2 DRT for Get-Alias\n  
23525,     Porting Management DRT TTests from psl-monad to Pester\n  
23526,     Fixed the CR issues\n  
23527,     Porting Management DRT TTests from psl-monad to Pester\n  
23528,     Add Invoke-Expression Pester Unit Test\n  
23529,     Merge pull request #878 from PowerShell/GetHostUT\n\nAdd Unit Test for Get-Host  
23530,     Update New-Alias Pester Unit Test\n  
23531,     Add Frequently Asked Questions to documentation\n\nAddresses some PowerShell  build  and Git questions \n  
23532,     Make Start-PSBootstrap re-install dotnet on Windows\n\nIt now helpfully deletes the previous `dotnet` directory so that older\nversions of the CLI don t muck things up \n  
23533,     Move known issues to docs folder\n\nSo only readme and contributing are top level \n  
23534,     Merge pull request #881 from PowerShell/andschwa/fix-clear-variable-test\n\nFix clear variable test  
23535,     Whitespace cleanup\n  
23536,     Fix cryptic Pester failure\n\nWhen the Pester tests were invoked over PSRP and the environment was\nmore pristine than a local client  the lack of a  foo  variable in some\nscope caused the Pester test suite to emit an error at the end  failing\nthe PSRP build \n\nRemoving the Clear-Variable directive eliminates this error  and is not\nnecessary for the Pester test itself \n  
23537,     Merge pull request #879 from PowerShell/noninteractive\n\nModify Set-PSBreakpoint Tests ps1 and fix 3 pending tests  
23538,     Whitespace clean up and re-indent\n  
23539,     Modify Set-PSBreakpoint Tests ps1 and fix 3 pending tests\n  
23540,     Add Unit Test for Get-Host\n  
23541,     Add Unit Test for Get-Culture\n  
23542,     Add Unit Test for Add-Member\n  
23543,     Merge pull request #871 from PowerShell/vors/master\n\nFix build scripts for windows build  
23544,     Wrap all native commands in helper function in PowerShellGitHubDev psm1\n  
23545,     Fix log message in Start-PSBuild\n  
23546,     Merge pull request #869 from PowerShell/jimtru WSManModuleFix\n\nJimtru ws man module fix  
23547,     Merge pull request #860 from PowerShell/NewVariablePesterUnitTest\n\nAdd New-Variable Pester Unit test  
23548,     Merge pull request #857 from PowerShell/ClearVariablePesterUnitTest\n\nAdd Clear-Variable Pester Unit Test  
23549,     Fix typo in PowerShellGitHubDev psm1\n  
23550,     Remove mention of format file since this is done in code now\n  
23551,     Update fixes based on comments for New Variable Pester Unit Test\n  
23552,     Remove newline var for New-Variable Pester Unit Test\n  
23553,     Add New-Variable Pester Unit test\n  
23554,     Add try-catch to on_finish section to prevent hang\n  
23555,     Update fixes based on comments for Clear Variable Pester Unit Test\n  
23556,     Add Clear-Variable Pester Unit Test\n  
23557,     Add $ErrorActionPreference =  Stop  to fail the build\n  
23558,     Merge pull request #870 from PowerShell/xunit\n\nUse new Listener signature  
23559,     Use new Listener signature\n  
23560,     Merge pull request #850 from PowerShell/andschwa/fix-xunit\n\nRe-enable xUnit tests on Linux  
23561,     Merge pull request #855 from PowerShell/andschwa/psoptions\n\nAdd New-PSOptions  
23562,     Merge pull request #858 from PowerShell/options\n\nRe-write host code command parser engine to support both Linux and Windows style options   Also  add support for -noninteractive and -encodedcommand   
23563,     fix typo\n  
23564,     Change InvalidOperationException to PSInvalidOperationException because monad code looks only for PS version to rethrow MissingMandatoryParameter exception \n  
23565,     Merge pull request #845 from PowerShell/SetVariablePesterUnitTest\n\nAdd Set-Variable Pester Unit test  
23566,     Merge pull request #853 from PowerShell/andschwa/undo-foreach\n\nRevert use of foreach in ALC  
23567,     Updaet fixed comments for Set-Variable Peste unit test\n  
23568,     Enable xUnit tests on Linux\n\nWe have to pretend they pass on OS X for now \n  
23569,     Allow default ALC to not be PowerShell s \n  
23570,     Fix xUnit tests for Linux\n\nThe latest xUnit packages fix the  could not resolve coreclr path \nproblem we were having  To resolve all dependencies  the cli-deps feed\nwas replaced with the aspnet feeds \n\nHowever  the latest xUnit packages do not allow us to set the default\nAssemblyLoadContext \n  
23571,     Refactor options into New-PSOptions\n\nDeduction of PowerShell output path is now done in `New-PSOptions` \nwhich returns a hash table representing the build options  so that it\ncan be done outside of `Start-PSBuild` \n\n`Start-PSBuild` saves the options it creates as a script-local variable \n`$script:Options` \n\n`Get-PSOutput` will either unwrap the an options hash table parameter \nthe script local options hash table  or use the default options \n\nThus  if `Start-PSBuild` hasn t been run  it can be used to get the\noutput path given non-default options like this:\n\n```powershell\nGet-PSOutput -Options (New-PSOptions -Publish)\n```\n\nOr simply call `Get-PSOutput` to get the best-guess default path \n\nNote that because ValidateSet does not support the use of constant\nvariables  the set of runtimes has to be duplicated  and an empty\nruntime is supported \n  
23572,     Clean up whitespace in build module\n  
23573,     Revert use of foreach in ALC\n\nI forgot to revert this in #814  thanks @daxian-dbw for the pointer \n  
23574,     Merge pull request #830 from PowerShell/UnitTest_Temp\n\nAdd Unit test for Set-PSBreakpoint  
23575,     Merge pull request #848 from PowerShell/andschwa/try-osx\n\nEnable OS X tests on Travis  
23576,     Update documentation for OS X testing\n\nCopy the Travis CI badge for 10 11  It is the same badge  but it will\nfail if the build fails  I don t see a way to have separate badges  but\nthis highlights that the platform is being tested \n  
23577,     Prevent UI popups when run with -noninteractive\n  
23578,     minor change to error message\n  
23579,     Disable broken OS X Pester tests\n\n- The Get-Process cmdlet on OS X has issues due to permissions\n- The Get-Process test in NativeLinuxCommands should have been removed\n- The ProcessName property has the same bug that has been fixed on Linux\n  
23580,     Increase ulimit on OS X\n  
23581,     Enable OS X on Travis\n\nRemove unsupported osx 10 10-x64 moniker  Use `osx_image: xcode7 3` to\nget an OS X 10 11 image on Travis \n  
23582,     Redo command-line parsing  add -noninteractive and -encodedcommand options\n  
23583,     Merge pull request #844 from PowerShell/ealexjordan-patch-1\n\nUpdate linux md  
23584,     Add Unit Test for Out-File Out-String Write-Error\n  
23585,     Merge remote-tracking branch  origin/master  into SetVariablePesterUnitTest\n  
23586,     Add Set-Variable Pester Unit test\n  
23587,     Fixed the issue in PR\n  
23588,     Update linux md\n\nSeveral people have missed the bootstrap step for dotnet installation  making that slightly clearer in documentation   
23589,     Merge pull request #843 from PowerShell/andschwa/travis-osx\n\nSetup OS X on Travis CI  
23590,     Disable Travis CI OS X support\n\nUnfortunately  Travis CI\ s OS X machines are 10 9 5  per\n   travis-ci com/user/osx-ci-environment/#CI-environment-OS \nWhile NuGet supports the RID   NET Core does not yet publish 10 9\npackages  resulting in a build failure we can\ t do anything about \n\nI\ ve asked for best-effort support by providing runtime packages for\n10 9 in dotnet/corefx#7731 \n\nRevert  Add OS X 10 9 runtime \n\nThis reverts commit 19ab0de84cec37bb90443df14d4e69f10c41e1b1 \n  
23591,     Add OS X 10 9 runtime\n  
23592,     Deal with paths magically in Start-PSBuild\n  
23593,     Use matrix include and fix OS X PATH\n  
23594,     Update documentation for Start-PSBootstrap\n\nAlso moved Git setup section first \n  
23595,     Remove deprecated omibuild and psrp scripts\n  
23596,     Add OS X to Travis CI matrix\n  
23597,     Install package dependencies in download sh\n  
23598,     Update AppVeyor to use Start-PSBootstrap\n  
23599,     Update Travis to use Start-PSBootstrap\n  
23600,     Remove deprecated bootstrap sh\n  
23601,     Add Start-PSBootstrap function\n\nInstalls Open PowerShell build dependenices on all platform; deprecates\n`bootstrap sh` \n  
23602,     Download and install packages for Ubuntu and OS X\n\nThis both downloads the v0 3 0 release for the current platform and now\nalso installs it (requiring `sudo`)  Should probably rename \n  
23603,     Merge pull request #842 from PowerShell/andschwa/build-dwim\n\nImport-Module PowerShellGitHubDev in build sh  
23604,     Import-Module PowerShellGitHubDev in build sh\n\nMake it Do What I Mean \n  
23605,     Merge pull request #840 from PowerShell/andschwa/update-pester\n\nBump Pester with fixes  
23606,     Bump Pester with fixes\n  
23607,     Merge pull request #825 from PowerShell/andschwa/master\n\nUpdate files from psl-monad source-depot [SD:695331   
23608,     Merge pull request #834 from PowerShell/psreadline2\n\nHost code to enable PSReadLine  and remove checking of  NET Framework  
23609,     Merge pull request #814 from PowerShell/andschwa/recursive-alc\n\nFix stack overflow exception when loading assemblies  
23610,     Host code to enable PSReadLine  and remove checking of  NET Framework version if CORECLR\n  
23611,     Merge pull request #807 from PowerShell/GetVariablePesterUnitTest\n\nAdd Get-Variable Pester Unit Test  
23612,     Update files from psl-monad source-depot [SD:695331 \n\nCorresponds to 1218e29752ba4\n  
23613,     Update indent for Get-Variable Pester unit test\n  
23614,     Update fixed comments from PR for Get-Variable Pester unit test\n  
23615,     Enable bug777 skip for Get-Variable\n  
23616,     Add Get-Variable Pester Unit Test\n  
23617,     Merge pull request #782 from PowerShell/ImportAliasPesterUnitTest\n\nAdd Import-Alias Pester Unit test  
23618,     Fix stack overflow exception when loading assemblies\n\nWhen an assembly that exists outside of the trusted platform assembly\nlist but in the GAC on Windows was loaded  the use of `Assembly Load`\nbefore the `LoadFromAssemblyPath` caused a recursive loop to occur \n\nThis happens because an `Assembly Load` on a not-yet-loaded\nassembly is overridden  thus calling back into the\n`AssemblyLoadContext Load` override \n\nBy attempting to load from the file path first  we avoid this loop \nHowever  loading TPA assemblies by their path throws an exception  so\nnow we catch this particular exception and attempt the load through\n`Assembly Load` \n\nThis is safe for TPA assemblies since they re already loaded  thus the\n`Assembly Load` does not re-load the assembly  but simply returns it \n  
23619,     Update stand-alone tests for Import-Alias Pester unit test\n  
23620,     Add Unit Test for Set-PSBreakpoint\n  
23621,     Merge pull request #826 from PowerShell/andschwa/remove-omi\n\nRemove OMI and PSRP  
23622,     Update Git setup documentation\n\nNow that everyone needs all the submodules  Much simpler \n  
23623,     Disable xUnit tests on Travis temporarily\n\nUntil #806 is resolved \n  
23624,     Redirect PSRP documentation to other repo\n  
23625,     Remove PSRP building documentation\n\nMigrated to PSRP repository\n  
23626,     Remove OMI and provider submodules\n  
23627,     Merge pull request #813 from PowerShell/andschwa/download-v0 3 0\n\nUpdate download sh to get v0 3 0 deb asset  
23628,     Update download sh to get v0 3 0 deb asset\n  
23629,     Merge pull request #812 from PowerShell/andschwa/tests\n\nRemove alias tests for Write-Output  
23630,     Remove alias tests for Write-Output\n\nThe `echo` and `write` aliases were removed  which make these tests\ninaccurate (but did not fail them) \n  
23631,     Merge pull request #811 from PowerShell/andschwa/build-24011\n\nBump  NET Core packages to build 24011  
23632,     Bump  NET Core packages to build 24011\n\nAnd update the CorePsTypeCatalog \n  
23633,     Merge pull request #810 from PowerShell/andschwa/prepare-v0 3 0\n\nUpdate Linux installation documentation for v0 3 0  
23634,     Update Linux installation documentation for v0 3 0\n  
23635,     Merge pull request #805 from PowerShell/andschwa/pspackage\n\nImprove Start-PSPackage  
23636,     Unit Test for Set-PSBreakpoint\n  
23637,     Remove Context for Import-Alias pester unit test\n  
23638,     Improve Start-PSPackage\n\n- Now checks that previous Start-PSBuild was with -Publish\n- Uses $script:Output automatically\n- Uses /opt/microsoft/powershell on Linux per FHS\n- Uses /usr/local/microsoft/powershell on OS X per FHS\n- Specifies  --rpm-os linux  for RPM packages built elsewhere\n- Creates symlink on demand for packaging\n- Puts symlink in /usr/(local)/bin as it is expected to be in PATH\n- Uses $Arguments array for better syntax\n- Resolves #800\n\nNote that if the target of the powershell symlink exists  `fpm` aborts\nwith a `utime` error on OS X \n  
23639,     Clean up comparison operators in build module\n  
23640,     Merge pull request #804 from PowerShell/andschwa/symbolic-target\n\nAllow creation of symlink to non-existent target  
23641,     Allow creation of symlink to non-existent target\n\nThis action is completely valid on both Windows and Linux (and OS X)\noperating systems; tested with `mklink` and `ln -s` respectively \n\nNote that targets for hard links must exist  thus we check specifically\nfor symbolic links \n\nBoth the path globber in session state and the `New-Item` implementation\nneeded to be fixed to allow the target not to exist \n\nResolves #801 \n\nAlso enable symbolic link tests on Windows \n  
23642,     Merge pull request #803 from PowerShell/andschwa/help-online\n\nFix Get-Help -Online  
23643,     Fix Get-Help -Online\n\nWhile Windows will automatically open a URL used as a process by\nlaunching a browser  OS X needs to use `open <URL>`  and Linux needs to\nuse `xdg-open <URL>` (the most distribution-independent way) \n\nResolves #802 \n  
23644,     Merge pull request #798 from PowerShell/andschwa/pager\n\nRespect PAGER variable and default to less on Linux  
23645,     Merge pull request #797 from PowerShell/andschwa/packages\n\nBump  NET Core packages  
23646,     Fix whitespace in csharp/project json\n  
23647,     Respect PAGER variable and default to less on Linux\n  
23648,     Fix NuGet warnings by depending on NuGet Packaging Core\n\nAnd upgrade dotnet-test-xunit\n  
23649,     Bump  NET Core packages to 24004\n  
23650,     Merge pull request #796 from PowerShell/vors/add-type\n\nMake Add-Type work without a flat folder structure\n  
23651,     Make Add-Type work without a flat folder structure\n\n- Get rid of the assumption that all framework assemlbies live in\n  the same place\n- Enable build scenario (assemlbies are referenced directly from unpacked\n  nuget packages)\n- Fix #766\n- Re-enable Add-Type tests\n  
23652,     Merge pull request #794 from PowerShell/andschwa/profile-name\n\nRename profile from PSL to Microsoft PowerShellCore\n  
23653,     Merge pull request #792 from PowerShell/andschwa/assembly-load\n\nTry Assembly Load correctly\n  
23654,     Rename profile from PSL to Microsoft PowerShellCore\n\nFinal fix for #713 \n  
23655,     Try Assembly Load correctly\n\nThis should resolve #791 \n\nInstead of checking if `Assembly Load` returned null (it doesn t)  check\nif it threw `FileNotFoundException`  which it will if it doesn t find\nthe assembly \n  
23656,     Merge pull request #789 from PowerShell/andschwa/host-module\n\nFix accidental mapping change  
23657,     Fix accidental mapping change\n\nHappened in programmatic update commit bfaad3f05 \n  
23658,     Merge pull request #788 from PowerShell/andschwa/publish\n\nAdd Publish support to Start-PSbuild  
23659,     Publish on AppVeyor\n\nSo that the artifacts for Core PowerShell have the  NET Core\ndependencies \n  
23660,     Remove import of Platform module from AppVeyor\n  
23661,     Add Publish switch to Start-PSBuild\n\nNote that it is mutually exclusive with `FullCLR` as libraries are not\npublishable; only applications can be published \n  
23662,     Remove unsupported -Clean switch\n\nWill put back when it is functional \n  
23663,     Merge pull request #787 from PowerShell/andschwa/platform-module\n\nRemove Microsoft PowerShell Platform  
23664,     Merge pull request #786 from PowerShell/andschwa/remove-aliases\n\nFix aliases  
23665,     Add tests for removal of aliases\n  
23666,     Fix Pester test\n  
23667,     Fix xUnit tests\n  
23668,     Fix build module for removal of Platform module\n  
23669,     Fix tests for removal of Platform module\n  
23670,     Remove Platform module\n  
23671,     Fix properties\n\nStatic but not const  go figure \n  
23672,     Add PowerShell variables corresponding to platform\n\nThis deprecates the Microsoft PowerShell Platform module and ensure that\nIsLinux/OSX/Windows/Core variables are defined all throughout PowerShell \n  
23673,     Replace IsX method with IsCore property\n  
23674,     Replace IsWindows method with property\n\nAnd add *correct* IsLinux and IsOSX properties \n  
23675,     Replace use of IsLinux with IsWindows\n\nSo that IsLinux can stop being overloading for OS X \n  
23676,     Deploy Platform module on all flavors\n  
23677,     Fix tests broken by removal of aliases\n  
23678,     Remove A:   Z: drive functions on Linux / OS X\n\nResolves #612 \n  
23679,     Remove conflicting aliases for Linux and OS X\n\nThe aliases which conflict with Linux native commands were consolidated\nand removed with the pre-processor definition `LINUX`  Additionally \nseveral  conflicts  are purposefully kept and likewise consolidated \nThey are kept because Bash itself stomps on the native commands with its\nown built-ins  and so we\ re adopting the same behavior \n\nThe `clear` and `more` aliases are edge cases where the functions they\ncall are already fixed for Linux  and so we keep these too \n\nResolves #567 \n  
23680,     Merge pull request #783 from PowerShell/andschwa/rename-host\n\nRename Host to CoreConsoleHost  
23681,     Rename CoreConsoleHost host cs Name\n\nFully resolve #713 \n  
23682,     Programmatic update of core console host rename\n  
23683,     Rename Host to CoreConsoleHost\n\nTo resolve part of #713 \n  
23684,     Add Import-Alias Pester Unit test\n  
23685,     Merge pull request #775 from PowerShell/UnitTest_Temp\n\nAdd Unit Tests for GetDateTest cs and StartSleepTest cs  
23686,     Merge pull request #778 from PowerShell/ExportAliasPesterUnitTest\n\nAdd Export-Alias Pester Unit Test  
23687,     Merge pull request #780 from PowerShell/andschwa/deprecate-build sh\n\nDeprecate build sh script  
23688,     Merge pull request #779 from PowerShell/andschwa/git-docs\n\nSmall updates around Git documenatation  
23689,     fix the issue of review\n  
23690,     Update comments for Export-Alias Pester unit test\n  
23691,     Deprecate build sh script\n\nIf `powershell` is installed  run `Start-PSBuild` to ensure DWIM  Else \ndirect user to Linux / OS X build documentation \n\nResolves #767 \n  
23692,     Refer to contributing guidelines in building documentation\n\nFor #771 \n  
23693,     Quick markdown cleanups\n  
23694,     Refactor submodule documentation\n\nMoved notes on submodules out of contributing guidelines and into\n`docs/git/submodules md` as most developers will touch them infrequently\nnow \n  
23695,     Merge pull request #774 from PowerShell/AliasPesterUnitTest\n\nAdd New-Alias Pester and update Set-Alias Pester test  
23696,     Improve Unit Test for Get-Date\n  
23697,     Add Export-Alias Pester Unit Test\n  
23698,     Update Skip bug 777 for New-Alias Pester unit test\n  
23699,     Merge remote-tracking branch  origin/source-depot \n  
23700,     Revert  Update files from psl-monad \n\nThis reverts commit 9ed2c2a68b31429d781e140b581e6073d53d95d7 \nThis commit is here to make source-depot branch a parent of master\n  
23701,     Update files from psl-monad\n\nThis commit uses psl-monad branch source-depot 1ef187f49\nAnd corresponds to [SD:693793 \n  
23702,     Update files from psl-monad\n\nThis commit uses psl-monad branch source-depot 28156300\nAnd corresponds to [SD:692351 \n  
23703,     Merge pull request #772 from PowerShell/vors/docs\n\nAdd workflow docs and links to them  
23704,     Update mapping md\n\nAdd a note to use source-depot branch for initial adding [skip ci   
23705,     Remove server2016 branch from branches md\n\n[skip ci   
23706,     Remove server2016 from the build status matrix\n\n[skip ci   
23707,     Merge branch  master  into UnitTest_Temp  
23708,     Add New-Alias Pester and update Set-Alias Pester test\n  
23709,     Add Unit Test for StartSleepTest cs\n  
23710,     Add Unit Test for GetDateTest cs\n  
23711,     Add section about update in mapping md\n\n[skip ci   
23712,     Include links to docs\\workflow\\ in CONTRIBUTING md\n\n- branches md\r\n- mapping md\r\n- resource md\r\n[skip ci   
23713,     Add workflow/mapping md to docs [skip ci \n\n- explain mapping concept\r\n- describes mapping json format\r\n- overview function to work wiht mapping json files from PowerShellGitHubDev psm1  
23714,     Update references in resources md [skip ci   
23715,     Create workflow/branches md document [skip ci \n\n- explain 3 long living branches and their relations \r\n- describe a simple bugfix workflow  
23716,     Add workflow/resource md [skip ci \n\nWorkflow for changes that touches  resx files\r\n- editing\r\n- updating\r\n- add/remove\r\n- start-resgen  
23717,     Update commiting md : src/monad submodule is gone\n\nAdding an Update section with explanation that the whole complicated process is rarely needed after #656 fix [skip ci   
23718,     Make Start-ResGen generate folders for cs files\n  
23719,     Merge pull request #768 from PowerShell/andschwa/docs\n\nUpdate documentation  
23720,     Correct Start-DevPSGithub in windows-full md\n\n [skip ci   
23721,     Merge pull request #765 from PowerShell/vors/gitignore\n\nUpdate  gitignore  
23722,     Update test documentation\n  
23723,     Update Windows Full building documentation\n  
23724,     Update Windows Core building documentation\n  
23725,     Update OS X building documentation\n  
23726,     Update Linux building documentation\n  
23727,     Update default for Start-DevPSGitHub -binDir parameter\n  
23728,     Update  gitignore to include work on windows\n\n- Add files produced by cmake in powershell-native to it s own gitignore\n- Add files that VS creates to the root-level gitignore\n- Add  exe files that are content to the root-level gitignore\n  
23729,     Update windows-core md\n\nAdd missing quote in the install instruction [skip ci   
23730,     Merge pull request #762 from PowerShell/vors/master\n\nAdd changes from source-depot branch and Start-ResGen  
23731,     Update resources section in project json for Eventing\n  
23732,     Bump src/windows-build version\n  
23733,     Add Start-ResGen to PowerShellGitHubDev psm1\n\nNow everybody can just run resgen  instead of kicking in Jenkins job\n  
23734,     Fix file casing to enable C# binding generation\n\nUse windows-build\\gen\\<project> instead of windows-builg\\gen\\<somename>\n  
23735,     Update version of dotnet cli in windows-core md  
23736,     Merge remote-tracking branch  origin/source-depot  into vors/master\n  
23737,     Merge pull request #761 from PowerShell/andschwa/cli\n\nSwitch dotnet publish for dotnet build (and more)  
23738,     Disable AppVeyor cache\n  
23739,     Fix FullCLR build script for build instead of publish\n  
23740,     Fix powershell-native output directory\n\nThanks Stack Overflow    com/a/7750816\n  
23741,     Don t load Netwonsoft Json from path\n\nIt s already loaded \n  
23742,     Skip Add-Type Tests ps1\n\nThis broke and needs to be fixed \n  
23743,     Remove deprecated pester sh script\n  
23744,     Use Start-PSPester on Travis\n  
23745,     Add Start-PSPester function to replace pester sh\n\nSuper basic function that should be rewritten \n  
23746,     Throw in Get-PSOutput\n  
23747,     Formatting and function extractions\n  
23748,     Fix Pester path for Travis\n  
23749,     Fix paths for AppVeyor\n  
23750,     Disable Travis cache\n  
23751,     Use Start-PSxUnit on Travis\n  
23752,     Remove deprecated update-content sh\n  
23753,     Remove deprecated xunit sh script\n  
23754,     Add Start-PSxUnit function\n\nReplaces ` /xunit sh` to run xUnit tests on Linux  Pretty basic  can\ndefinitely be extended to support other flavors \n  
23755,     Add runtimes back to xUnit runner\n\nPer dotnet/cli#2201\n  
23756,     Merge src/Modules and host specific Modules\n  
23757,     Correct  Move files from psl-monad submodule to super-project \n\nCommit 45140c57520890b9bc7e0b4357faad14f7edf52b incorrectly stated that\nit imported from psl-monad repository commit\n860eb5d211b8fff4e015ac59ccb58da2f59a6b58; but it actually imported from\ncommit 8abffd25ebc33cbc0b4ce224b46e699704b01728 \n  
23758,     Log location of PowerShell build output\n  
23759,     Fix programatic references to Linux Host\n  
23760,     Move Module files from psl-monad submodule to super-project\n\nThis commit uses master branch 8abffd25ebc33cbc0b4ce224b46e699704b01728\n  
23761,     Rename Linux Host to Host\n  
23762,     Add Modules to mapping json\n  
23763,     Rename dotnet restore arguments variable\n  
23764,     Move Pester to src/Modules\n  
23765,     Initialize googletest submodule on Travis\n  
23766,     Migrate libpsl-native googletest submodule\n  
23767,     Add  src/libpsl-native/  from commit  4bb241ad11c54985617343fbeb8700cfdcdf7ae0 \n\ngit-subtree-dir: src/libpsl-native\ngit-subtree-mainline: 2264613ae3b82b1286c55ccadfa926e7ce4da8e9\ngit-subtree-split: 4bb241ad11c54985617343fbeb8700cfdcdf7ae0\n  
23768,     Remove libpsl-native submodule\n  
23769,     Add $script:Output to store location of executable\n  
23770,     Add win81-x64 runtime\n\nIt s what AppVeyor uses \n  
23771,     Install latest  NET CLI packages on Travis\n  
23772,     Bump  NET CLI version on AppVeyor\n  
23773,     Deploy powershell exe as content for ConsoleHost\n\nCMake will now output the artifacts of the native build into the\nConsoleHost project  where  NET CLI picks it up as content and deploys\nit automatically \n  
23774,     Obtain runtime from dotnet --info\n\nThis is a breaking change that requires developers to update their\nversion of  NET CLI  In order to stop specifying where dotnet should\noutput the artifacts  we need to be able to guess their location\ncorrectly  which requires knowing the current RID (and framework) \n  
23775,     Refactor native build steps\n\nMove dependency checks to precheck section and make conditional more\nsensible \n  
23776,     Whitespace and style cleanups\n  
23777,     Remove --runtime argument to `dotnet restore`\n  
23778,     Remove -Output switch from PowerShellGitHubDev\n\nThis is a breaking that stops publishing PowerShell by default  and\ninstead relies on `dotnet build`  Thus the artifacts will be output to a\nnew (RID  framework  and project dependent) location \n\nPublishing will still be needed to produce packages  but this logic will\nbe moved into `Start-PSPackage` \n  
23779,     Remove duplicate #if CORECLR from SMA/CoreCLR\n  
23780,     Add PAL_DBG_CHANNELS note\n  
23781,     Add COREHOST_TRACE debugging note\n  
23782,     Revert  Remove runtimes sections from projects \n\nThis reverts commit 47fd1a45bc40095bf2c31d7c1bbdacac504d65bc \n\nPer dotnet/cli#2029  RID inference is no longer supported by NuGet  and\nso the runtimes section needs to exist again \n  
23783,     Put version back to make VS Code happy\n  
23784,     Merge pull request #758 from PowerShell/SetAliasPesterUnitTest\n\nAdd Pester Unit test for Set-Alias  
23785,     Add Pester Unit test for Set-Alias\n  
23786,     Merge pull request #756 from PowerShell/GetAliasPesterUnitTest\n\nAdd Pester Unit test for Get-Alias  
23787,     Update Pester Unit test for Get-Alias\n  
23788,     Add server2016 branch to build status table  
23789,     Update files from psl-monad\n\nThis commit uses psl-monad branch source-depot cc6afbeb\nAnd corresponds to [SD:692351 \n  
23790,     Fix OMI provider link in PSRP instructions  
23791,     Merge pull request #757 from PowerShell/andschwa/update-packages\n\nBump  NET Core packages to 23931-00  
23792,     Bump windows-build\n\nThis commit was forgotten \n  
23793,     Update CorePsTypeCatalog cs\n  
23794,     Bump  NET Core packages to 23931-00\n  
23795,     Add Pester Unit test for Get-Alias\n  
23796,     Merge pull request #752 from PowerShell/docs\n\nDocumentation refactor  
23797,     Add Linux and Windows installation instructions\n  
23798,     Fix up Git docs\n  
23799,     Ignore all libraries in host\n  
23800,     Move debugging docs\n  
23801,     Fix up  vscode files\n  
23802,     Move PSRP notes\n  
23803,     Add test/README md\n  
23804,     Fix up Pester test documentation\n  
23805,     Remove long deprecated docker script\n  
23806,     Add build instructions matrix to readme\n  
23807,     Move Windows  NET Full instructions\n  
23808,     Move Windows  NET Core build instructions\n  
23809,     Document OS X dependency installation instructions\n  
23810,     Move Linux instructions to docs/building/linux md\n  
23811,     Refactor readme header\n  
23812,     Remove deprecated dependencies doc\n  
23813,     Remove obsolete testing docs\n  
23814,     Move Git documents to subfolder\n  
23815,     Merge pull request #753 from PowerShell/vors/master\n\nMerge changes that removes psl-submodule to master  
23816,     Fix version of dotnet-test-xunit to a previous good known one\n  
23817,     Fix hardcoded path to resources in EventLogLogProvider cs\n  
23818,     Move files from psl-monad submodule to super-project\n\nThis commit uses master branch 860eb5d\n  
23819,     Remove psl-monad submodule\n\nFix #656\n  
23820,     Make powershell-native use source from the superproject\n  
23821,     Bump windows-build submodule version to in-tree resx\n  
23822,     Remove compileFiles and resource sections from project json files\n  
23823,     Update AssemlbyInfo cs files to use snk from super-project\n\nConflicts:\n\tsrc/System Management Automation/AssemblyInfo cs\n  
23824,     Move files from psl-monad submodule to super-project\n\nThis commit uses psl-monad branch source-depot 7209cb9\nAnd corresponds to [SD:688741 \n  
23825,     Fix typo in PowerShellGitHubDev psm1 mapping\n  
23826,     Add resx files to mapping json\n  
23827,     Add resources mapping capability to New-MappingFile\n  
23828,     Add visualstudiopublic snk into mapping json\n  
23829,     Add powershell-native sources to mapping json\n  
23830,     Add Send-GitDiffToSd function to simplify sd workflow\n\nThis function will help us to port changes to source-depot\nfrom server2016 branch\n  
23831,     Add mapping to enable psl-monad submodule removal\n\nThere are 2 functions:\n\n- New-MappingFile - creates mapping json from project json files\n  (one is included in this commit)\n\n- Copy-SubmoduleFiles - enables copying files back and forth from\n  submodule to src/<projects> based on mapping json file\n  
23832,     Merge pull request #750 from PowerShell/andschwa/tpa\n\nFix the AssemblyLoadContext and Trusted Platform Assemblies problem  
23833,     Bump monad submodule with ALC/TPA fixes\n  
23834,     Don t send a path to the ALC\n  
23835,     Merge pull request #748 from PowerShell/dotnet-run\n\nEnable `dotnet-run`  
23836,     Fix build sh for new location of libpsl-native\n  
23837,     Bump libpsl-native submodule\n  
23838,     Deploy native library automatically\n  
23839,     Output libraries to host directory\n  
23840,     Merge pull request #749 from PowerShell/morelinks\n\nNew Linux GetTarget and GetLinkType for symbolic and hard links\r\n\r\nAlso fixes GetChildItem for symbolic links  
23841,     Updated src/monad\n  
23842,     Add src/libpsl-native\n  
23843,     Add src/monad\n  
23844,     Modify tests to display link type and link target\n  
23845,     Merge pull request #743 from PowerShell/andschwa/cli-resources\n\nUse dotnet-resgen to compile resx files  
23846,     Fix use of ResourceManager in monad\n  
23847,     Set default culture to en-US\n\nSo that the resource manager doesn t try to load a non-existent\nsatellite assembly (and thus throw) \n\nThe culture `en-US` is the default `CurrentCulture` on all platforms I\ntested  specifically not `en` \n\nNote that there is a problem with the FullCLR build where some other\nassembly is still attempting to reference `Logging resources` instead of\n`System Management Automation Logging resources` \n  
23848,     Add System IO MemoryMappedFiles dependency\n\nThis is a runtime dependency that causes an internal exception to be\nthrown and caught when not available \n  
23849,     Bump windows-build submodule with resources fixes\n  
23850,     Replace Eventing s namedResource section with resource\n  
23851,     Replace ConsoleHost s namedResource section with resource\n  
23852,     Replace Security s namedResource section with resource\n  
23853,     Replace Management s namedResource section with resource\n  
23854,     Replace Utility s namedResource section with resource\n  
23855,     Replace SMA s namedResource section with resource\n\nSpecifically this enables us to leverage `dotnet-resgen` to\nauto-generate the `resx` files into `resources` files for the default\nculture  which are then compiled into the SMA assembly \n\nThis requires a change to the C# bindings  The Windows build system\ntakes `file resx` and compiles `file resources`  but CLI prepends the\nassembly name  thus compiling `SMA file resources`  So the resource\nmanager in the generated bindings must be adjusted to look for\n`SMA file` instead of `file` \n\nNote that C# bindings cannot yet be auto-generated \n\nGiven localized resources of the form `file en-US resx`  `dotnet-resgen`\nwill create a satellite assembly and publish it to\n`en-US/SMA resources dll`  so #666 will not be a technical problem \n  
23856,     Fix VS Code attach debugging configuration\n\nNeeds to be `processName`  not `program`  Go figure \n  
23857,     Merge pull request #699 from PowerShell/vscode\n\nAdd VS Code launch and task files  
23858,     Handle `Start-PSBuild -Restore -Runtime    `\n\nIf a runtime is given  we need to restore for that particular runtime as\nwell \n\nThis also enables `Warning` `dotnet restore` output  and increases the\nverbosity to `Info` if `-Verbose` is used \n  
23859,     new native code and test for obtaining target of symlinks\n  
23860,     Remove runtimes sections from projects\n\nNo longer necessary to restore/build  Removing them allows NuGet to\nrestore only the packages necessary for the current platform  vastly\nreducing cache sizes and restore time \n\nMy `~/ nuget/packages` directory was almost 1GB smaller with this\nchange \n  
23861,     Add attach configuration\n  
23862,     Bump packages back to rc3\n\nThe primary reason to do this is that the VS Code debugger is not\ncompatible with rc2 \n\nSecondarily  we want to continue tracking CoreCLR/FX master branch \nwhich means to continue with the latest release candidates  Since we are\nreleasing in August  we will be able to pick up the converged RTM\nversion before release \n\nThe only advantage of rc2 is that it is frozen; but we have this anyway\nbecause we snap to particular builds \n  
23863,     Merge pull request #737 from PowerShell/PesterTest_Temp\n\nImprove Pester Test for New-object #476  
23864,     Merge pull request #741 from PowerShell/FileSystemProviderTest\n\nUpdate FileSystemProviderTest to let all test method works for #120  
23865,     Modify Pester test for New-Object\n  
23866,     Merge branch  master  of    com/PowerShell/PowerShell into PesterTest_Temp\n  
23867,     Modify Pester test for New-Object\n  
23868,     Add VS Code launch and task files\n\nThis enables building PowerShell through VS Code  The build task\nlaunches the installed version of PowerShell and runs\n`Start-PSBuild` (after importing the module) \n\nThis enables a `launch` debug task to immediately debug the `powershell`\nprocess  without having to attach to an external process \n\nThe defaults of `justMyCode` and `stopAtEntry` have been reversed  so\nthat all code is debugged  and the process is stopped at entry for\neasier debugging \n\nNote that an interactive PowerShell process requires access to `stdin` \nwhich the debug console does not provide  so once it requests access \n`System Console` will throw a (correct) exception \n  
23869,     Fix travis fail with different Mode format in special machine for FileSytemProvider xunit test\n  
23870,     Fix travis fail for FileSytemProvider xunit test\n  
23871,     Update FileSystemProviderTest to let all test method works for #120\n  
23872,     Merge pull request #730 from PowerShell/rawui2\n\nMegaPatch that includes all of #717  plus RawUI fixes  
23873,     Merge pull request #740 from PowerShell/paulcallen/shell-cleanup\n\nPull in latest PSRP fixes  
23874,     Pull in latest psrp fixes\n  
23875,     Changes per Andy comments  and add revert of colors at end of PS\n  
23876,     Fixes UI-related bugs  and migrate Console Write to myHost UI Write\n  
23877,     Reverse TreatControlCAsInput now that CoreFx fix has arrived\n  
23878,     Fix rendering issue with leading spaces  and added support for additional ctrl commands\n  
23879,     Add color to reverse search\n  
23880,     Add Ctrl-R reverse search\n  
23881,     Render multi-line command as a single-line command\n  
23882,     Adding support for Ctrl-K  Ctrl-Y  and Ctrl-L\n  
23883,     Tested  except for reversed TreatControlCAsInput\n  
23884,     Pending verification of TreatControlCAsInput\n  
23885,     Merge pull request #734 from PowerShell/typecataloggen\n\nFix type catalog generation  
23886,     Fix CoreCLR Eventing dependency versions\n  
23887,     Add regression test  NET class interop\n\nThis bug arose because of a shortcut previously taken when generating\ninput for the type catalog generator  With a proper parser created  the\ninput to the generator is now correct  and so this test should succeed \n  
23888,     Update CorePsTypeCatalog with reference assemblies\n\nResolves #720\n  
23889,     Update type catalog generator build script\n  
23890,     Add type catalog parser project\n\nParses PowerShell s `project lock json` file and emits the list of\nreference assemblies suitable for the type catalog generator \n  
23891,     Merge pull request #686 from PowerShell/FileSystemProviderTest\n\nAdd FileSystemProvider xUnit test for issue 120  
23892,     Delete Runtime facade\n\nDeprecated with new lockfile parser \n  
23893,     Update Fact Skip for not work tests for FileSystemProvider xunit test\n  
23894,     Update test fix for test_FileSystemProvider cs\n  
23895,     Add FileSystemProvider xUnit test for issue 120\n  
23896,     Improve Pester Test for New-object #476\n  
23897,     Merge pull request #725 from PowerShell/ComparisonOperatorTest\n\nAdd comparison operator tests for #219  
23898,     Merge pull request #731 from PowerShell/vors/simplify\n\nPrepare project json files for mapping from submodule  
23899,     Simplify Microsoft PowerShell ConsoleHost/project json\n  
23900,     Remove ConvertFrom-String cmdlet from build (see #726)\n  
23901,     Merge pull request #729 from PowerShell/eventing\n\nAdd Microsoft PowerShell CoreCLR Eventing project  
23902,     Bump submodule version to include !NOETW guards\n  
23903,     Add Microsoft PowerShell CoreCLR Eventing project\n  
23904,     Bump submodules versions to include ETW changes\n  
23905,     Move NOETW define from framework to configuration\n\nIn System Management Automation we want to build ETW events\nfor CORECLR on windows\n  
23906,     Merge pull request #728 from PowerShell/fix-xunit\n\nRe-enable xUnit on Travis  
23907,     Revert  Disable xUnit tests on Travis \n\nThis reverts commit a7e6a946b754dfd6a5b162445698f16171f0d848 \n\nResolves #727 \n  
23908,     Bump  NET Core packages to build 23922\n  
23909,     Add comparison operator tests for #219\n  
23910,     Merge pull request #723 from PowerShell/vors/guards\n\nBump submodule version to include fix for #722  
23911,     Bump submodule version to include fix for #722\n  
23912,     Merge pull request #719 from PowerShell/platform-specific\n\nUpgrade  NET Core packages  
23913,     Fix use of install ps1 on AppVeyor\n\nResolves #718 \n\nThe 1 0 0 builds are no longer in the  beta  channel \n\nUpdate version to 1888 \n  
23914,     Disable xUnit tests on Travis\n\nThe  NET Core xUnit runner is incompatible with build 23921  We have to\ndisable running the tests until dotnet/cli#1975 is resolved \n  
23915,     Update CorePsTypeCatalog\n  
23916,     Update runtime facade\n  
23917,     Downgrade packages from rc3 to rc2\n\nSince  rc3  is  vnext   not just closer to the actual release \n  
23918,     Bump  NET packages to build 23921\n\n- Bumps NETStandard Library to 1 5 0-rc3  fixes #663 \n- Remove reference to Unsupported Platform API  fixes #639 \n  
23919,     Stop deploying ps1xml files for xUnit\n  
23920,     Merge pull request #711 from PowerShell/PesterTest_Temp\n\nAdd Pester Test for Get-PSBreakpoint  Import-Module  Sort-Object  #535 #479 #474  
23921,     Modify Pester Test for Get-PSBreakpoint\n  
23922,     Merge pull request #695 from PowerShell/NativeLinuxCommandsTest\n\nAdd Pester tests for calling native Linux commands for #138  
23923,     Merge pull request #698 from PowerShell/vors/msbuild\n\nRemove explicit msbuild requirement  
23924,     Remove explicit msbuild requirement\n\nFix #684\nWe already require VS 2015 installation \nGrab msbuild automatically from  NET framework folder \n  
23925,     Merge pull request #693 from PowerShell/remove-ps1xml\n\nMerge Source Depot changes  
23926,     Stop deploying ps1xml files\n\nNote that we leave the ps1xml file parsing code alone in monad  as\nthird-party code may use the InitialSessionState interfaces directly and\nthus ask for these files to be parsed  The removal of these files is a\npure performance work-around  where instead of parsing the XML  a\npre-parsed C# version of the file is loaded \n  
23927,     Bump monad and windows-build submodules\n  
23928,     Add Pester Test for Get-PSBreakpoint  Import-Module  Sort-Object\n  
23929,     Update Pester test for calling native Linux commands for isssue 138\n  
23930,     Merge pull request #697 from PowerShell/RemoveModuleTest\n\nAdd Pester test for Remove-Module for #536  
23931,     Merge pull request #694 from PowerShell/GetProcessTest\n\nAdd Get-Process Pester test for #147  
23932,     Add Pester test for Remove-Module\n  
23933,     Add Get-Process Pester test for issue 147\n  
23934,     Merge pull request #687 from PowerShell/SessionStateInternalTest\n\nAdd unit test for SessionStateInternal Drives() about issue 64  
23935,     Add Pester tests for calling native Linux commands for issue 138\n  
23936,     Update test fix for test_SessionState cs\n  
23937,     Add SessionStateTests to AssemblyLoadContext collection\n  
23938,     Add SessionStateInternal Drives() xUnit test\n\nResolves #64\n  
23939,     Merge pull request #690 from PowerShell/travis-xunit\n\nRun xUnit tests on Travis  
23940,     Add xUnit tests readme\n  
23941,     Add all classes to AssemblyLoadContext collection\n\nTo ensure that the initializer is called before any other code  This is\nas close to a global init hook as I can find \n  
23942,     Fix AssemblyLoadContext fixture\n\nResolves #676 \n  
23943,     Build Linux configuration for xUnit tests\n  
23944,     Run xUnit tests on Travis\n  
23945,     Enable exit code from xUnit runner\n  
23946,     Merge pull request #689 from PowerShell/throw-error-code\n\nFix powershell -c  throw error   
23947,     Fix powershell -c  throw error \n\nWhen executing a single command block  two bugs existed \n\n1) Exceptions were not reported  instead it core dumped\n2) The error code was not set  instead 0 was returned\n\nFixing 1) required calling `Execute` instead of `ExecuteHelper` as the\nlatter handles exception through `ReportException` \n\nFixing 2) required setting the listener s error code when an exception\nwas thrown  and resetting it for each command when an interactive\nsession is running \n  
23948,     Merge pull request #688 from PowerShell/travis-module\n\nUse Start-PSBuild on Travis  
23949,     Build on Travis using PowerShell build module\n  
23950,     Bump Travis CI version to 1675\n\nThe latest in the feed  per the readme \n  
23951,     Add download script to obtain PowerShell release\n\nThis requires that $GITHUB_TOKEN be set  Travis sets this as a secure\nenvironment variable; a user can provider their own \n  
23952,     Merge pull request #681 from PowerShell/vors/readme\n\nAdd a note about VC++ in README md  
23953,     Improve readme\n  
23954,     Add a note about VC++ in README md  
23955,     Merge pull request #649 from PowerShell/colon-drive\n\nBump submodule version to include the new behavior for Drive:  
23956,     Bump submodule version to include the new behavior for Drive:\n  
23957,     Revert  Update README md \n\nThis reverts commit 0908997a8ee531a4275a4f18575555cda0030259 \n\nFixes #675\n  
23958,     Merge pull request #672 from PowerShell/vors/vs2015\n\nFix #528 : make powershell exe build with VS 2015  
23959,     Update README md to use Visual Studio 2015\n  
23960,     Set AppVeyor image to Visual Studio 2015\n  
23961,     Fix #528 : make powershell exe build with VS 2015\n\nAdd legacy_stdio_definitions lib to the list of linked assemblies\n  
23962,     Update git-101 md\n\nadd link to    info/article/git-pretty/ [skip ci   
23963,     Update git-101 md\n\nAdd info about sync scenario [skip ci   
23964,     Update CONTRIBUTING md\n\nadd information about branch names [skip ci   
23965,     Update CONTRIBUTING md\n\nRemove duplicates from docs/git-* md  add references   
23966,     Create git-101 md\n\nThis file contains:\r\n\r\n- Install info\r\n- Our favorite tutorials references \r\n- (Potentially) any general notes about git that we may want to include here  
23967,     Update and rename OperationalNotes md to git-commit md\n\nUse git-* pattern for notes  
23968,     Update CONTRIBUTING md\n\nAdd reference to git-sd md [skip ci   
23969,     Update CONTRIBUTING md\n\nAdd section about Microsoft employees [skip ci   
23970,     Merge pull request #662 from PowerShell/new-packages\n\nUpdate  NET packages to build 23914  
23971,     Update git-sd md\n\nAdd link to MS OSS Hub [skip ci   
23972,     Bump NETStandard Library to 1 5 0-rc2-23911\n\nThe rc3-23914 version does not restore `System Private Uri` correctly \nbut this version does  Bug reported to dotnet/corefx#6883 \n  
23973,     Bump  NET package builds to 23914\n  
23974,     Update xUnit runner to netstandardapp1 5\n\nThis was enabled in dotnet/coreclr xunit#12\n  
23975,     Fix runtime facade package versions\n\nThese packages had their semantic versions get updated  but the\ncorresponding packages in the facade were forgotten \n  
23976,     Create git-sd md\n\nAdd some information for sd users about starting with git  [skip ci   
23977,     Merge pull request #659 from PowerShell/appcontext\n\nFix AppContext BaseDirectory when remoting  
23978,     Revert work-around in Json Tests ps1\n\nThis resolves #627 \n  
23979,     Bump omi-provider with AppContext BaseDirectory fix\n  
23980,     Merge pull request #657 from PowerShell/update-readme\n\nUpdate readme  
23981,     Add Experimental  NET Core Debugging in VS Code\n\n[skip ci \n  
23982,     Add note on writing good commit messages\n  
23983,     Update FullCLR detailed build instructions\n\nThis was left out of date as of #655  It is also needed to be a\nsubsection of the detailed build notes section \n\nSome typos and superfluous information were fixed \n  
23984,     Move Git installation instructions to contributing\n\nThe readme is getting quite large  so in an effort to shorten it  the\nGit installation instructions (which have nothing to do with PowerShell \nbut are helpful for new users)  are now in `CONTRIBUTING md`  Thus  if\nsomeone is totally new to Git  they will be far more likely to review\nour contributing guidelines  and so read our rules and best practices \n\nCloning the source code was cleaned up so that initializing the\nsubmodules is done in a separate step  This simplifies the first step \nmaking it more likely to succeed (and narrowing the possible failures) \n  
23985,     Update README md\n\nFix one old version of dotnet cli [skip ci   
23986,     Remove PsModulePath step from Windows instructions\n\nThis gets automatically set correctly thanks to #646 \n  
23987,     Fix PSRP build notes\n\nThese got split up  Moved them all to detailed build notes section \n  
23988,     Update note on PowerShellGitHubDev module\n  
23989,     Remove DSC build notes\n\nThis should have been removed with the DSC submodule \n  
23990,     Move repo permissions note to contributing docs\n\nAnd remove the skip CI note  as it is already noted in CONTRIBUTING md \n  
23991,     Merge pull request #655 from PowerShell/vors/build\n\nIncorporate build FullCLR ps1 in PowerShellGitHubDev psm1  
23992,     Upgrade CLI to build 1718\n\nPer dotnet/cli#1783  this should resolve PowerShell/PowerShell#638 \n\nUnfortunately  per dotnet/cli#1839  the Ubuntu package feed is\nout-of-date  So now Travis and AppVeyor aren t quite in sync  This is\nnot great  but the Ubuntu version of CLI does not have the same\nregression that the Windows version had \n\nThe readme has been updated to note how to install an actually\nup-to-date copy on Linux \n  
23993,     Hide output of dotnet restore by default\n\nAddress Andy s comments about build script \nAdd more information about the version into build\nUse windows inbox version of pester for FullCLR\nRevert dotnet cli to a known good version to avoid #638\n  
23994,     Incorporate build FullCLR ps1 in PowerShellGitHubDev psm1\n\nThis commit fixes #652\n  
23995,     Remove obsolete build ps1 script\n  
23996,     Merge pull request #650 from PowerShell/remoteshutdown\n\nBump monad module for remote shutdown   
23997,     Bump monad module for remote shutdown \n  
23998,     Update OperationalNotes md\n\nEnhance Jim\ s  Commit dance  walk-thru  [skip ci   
23999,     Create OperationalNotes md  
24000,     Update README md\n\nupdated troubleshoot section and create troubleshooter for push\r\nAlso added Generally Useful Info section for operational notes\r\n[skip ci   
24001,     Merge pull request #648 from PowerShell/net451\n\nChange FullCLR framework to `net451`  
24002,     Bump monad with quick bugfix\n  
24003,     Merge pull request #646 from PowerShell/modulepath\n\nBump monad submodule with PsModulePath fix  
24004,     Print dotnet --version on AppVeyor\n  
24005,     Target `net451` instead of `dnx451` for FulLCLR\n  
24006,     Update README md\n\nAdd more info about git on windows [no ci   
24007,     Bump monad submodule with PsModulePath fix\n  
24008,     Merge pull request #645 from PowerShell/psrp\n\nUpdate OMI and PSRP modules  
24009,     Remove accidentally committed temporary file\n\nThis file was used to convert the test from UTF-8 with BOM to ASCII  and\ngot caught in a `git commit -a` \n  
24010,     Update OMI and PSRP scripts\n\n- `omibuild sh` now configures CMake in Debug mode\n- `psrp sh` no longer uses LLDB; now runs under `sudo`\n  
24011,     Bump OMI and PSRP provider modules\n\nBrings in changes to support remote connect/disconnect/reconnect \n  
24012,     Merge pull request #641 from PowerShell/docs\n\nUpdate readme and known issues  
24013,     Update readme and known issues\n\n[ci skip \n  
24014,     Merge pull request #640 from PowerShell/dev/jumping\n\nFixed Pester Get-Location test  
24015,     Fixed Pester Get-Location test\n  
24016,     Merge pull request #635 from PowerShell/rpm\n\nAdd CentOS 7 1 support  
24017,     Merge pull request #634 from PowerShell/merge-sd\n\nBump monad and windows-build submodules with SD updates  
24018,     Add -Clean switch to Start-PSBuild\n\nAnd use full names of cmdlets \n  
24019,     Validate -Runtime\n  
24020,     Add Start-PSPackage -Type switch to build any output\n\nIf not specified   deb  is used as default on Linux  This should be\nupdated to check the distribution and required package build\ndependencies \n\nDependency names switched per package type  since specific package names\nare different  Should check if this causes an issue on OS X when the\nnames are empty \n  
24021,     Bump monad and windows-build submodules with SD updates\n  
24022,     Add switch to Start-PSBuild any specific -Runtime\n\nMuch better argument passing to CLI  Thanks @vors \n  
24023,     Add CentOS 7 1 runtime\n  
24024,     Merge pull request #633 from PowerShell/new-packages\n\nUpdate  NET packages and CLI  
24025,     Bump  NET CLI to build 1638\n  
24026,     Add newly required packages\n\nThese packages are new requirements as of the 23907 build due to\nrefactoring of the  NET libraries \n  
24027,     Add Microsoft NETCore Unsupported Platform API package\n\nThis package contains the Windows runtime assemblies of packages that\nare not actually supported on Linux  The assemblies exist in the Linux\nruntime folder  While the code cannot be executed  this allows\nPowerShell to use the Windows specific types in its function calls\nwithout crashing (and allows compiling with these types in the first\nplace)  This is *not* an ideal work-around  but we are waiting on a\nbetter package from  NET that contains Linux runtime assemblies that\nthrow `PlatformNotSupported` exceptions on use \n  
24028,     Bump versions of upgraded packages\n\nThese packages had their minor and patch versions updated in addition to\nthe updated build number \n  
24029,     Bump  NET packages to 23907\n  
24030,     Merge pull request #630 from PowerShell/test-osx\n\nBump libpsl-native with OS X fixes  
24031,     Bump libpsl-native with OS X fixes\n  
24032,     Various code cleanups\n  
24033,     Ignore built library on OS X\n  
24034,     Fix test of FQDN\n\nWe can t use `hostname --fqdn` or any other shell tool because there is\nno POSIX compatible way to do this short of system calls \n\nUnfortunately this means the test practically reimplements the original\ncode  but oh well \n  
24035,     Merge pull request #628 from PowerShell/osx-ping\n\nFix Start-Process tests  
24036,     Fix Start-Process tests\n\nOS X s ping command requires the flags to be specified before the\narguments  I also reduced the ping count so that the tests execute a bit\nfaster  This resolves #556 \n  
24037,     Merge pull request #624 from PowerShell/hardlink\n\nAdd ability to create hardlinks on Linux  
24038,     Add src/monad\n  
24039,     Add src/libpsl-native\n  
24040,     Add hardlink test for New-Item\n  
24041,     Merge pull request #623 from PowerShell/xplat-pester\n\nAdd Microsoft PowerShell Platform module  
24042,     New native code to support creation of hard links\n  
24043,     Enable Add-Type test on Windows\n\nResolves #606 \n  
24044,     Import Platform module in pester sh for Travis\n  
24045,     Import Platform module on AppVeyor\n  
24046,     Merge pull request #622 from PowerShell/invoke-history\n\nFix Invoke-History of a native command  
24047,     Bump monad submodule with Invoke-History fix\n  
24048,     Programmatic indentation and whitespace-cleanup of tests\n  
24049,     Convert Pester tests to ASCII\n\nInstead of UTF-8 with BOM \n\nResolves #417 \n  
24050,     Fix Get-Location tests\n\nThese should never have passed \n  
24051,     Use $PSScriptRoot instead of assigning $here\n  
24052,     Increase New-TimeSpan difference to reduce errant failures\n  
24053,     Fix ExecutionPolicy tests to -Skip instead of return\n  
24054,     Update PSVersionTable tests for PSEdition\n  
24055,     Use -Skip:$IsWindows\n\nUses the $IsWindows etc  booleans from the Microsoft PowerShell Platform\nmodule instead of sourcing Test-Common repeatedly \n  
24056,     Pester test formatting cleanups\n  
24057,     Add Microsoft PowerShell Platform module\n\n- Exports the IsCore  IsLinux  IsOSX  and IsWindows variables\n- Imported by the default PSL profile\n- Can be used automatically in Pester tests and Open PowerShell sessions\n- Should maybe become a default module once it is polished\n- PowerShellGitHubDev module does not explicitly use it because on\n  FullCLR PowerShell (normal Windows development) it will not be\n  imported automatically\n  
24058,     Bump OMI and provider submodules\n\nEmergency fix for recursive cloning \n\nThe OMI branch had been rebased upstream and not simultaneously fixed\nhere \n  
24059,     Merge pull request #615 from PowerShell/merge-sd\n\nBump monad and windows-build with Source Depot changes  
24060,     Skip SymbolicLink tests on Windows\n\nOn Windows  making symbolic links requires administrator access  so\nlet s skip it \n  
24061,     Bump monad and windows-build with Source Depot changes\n\nResolves #610 \n  
24062,     Merge pull request #620 from PowerShell/fix-xunit\n\nWorkaround dotnet/corefx#6603  
24063,     Workaround dotnet/corefx#6603\n  
24064,     Merge pull request #619 from PowerShell/pending\n\nIgnore failing Add-Type test  
24065,     Don t cache NuGet packages on AppVeyor\n\nBecause the resulting archive is too big  so AppVeyor wastes time making\nit and testing it  and then refuses to upload it \n  
24066,     Make Add-Type test -Pending until it passes on Windows\n  
24067,     Merge pull request #601 from PowerShell/newitem\n\nModify New-Item to support Symbolic Link on Linux  
24068,     Remove directory symlink first to avoid broken symlink issues\n  
24069,     Change order of delete to get around broken symlink issue\n  
24070,     New test for symlink of directory\n  
24071,     Bump monad\n  
24072,     Bump libpsl-native\n  
24073,     Merge pull request #602 from PowerShell/pipes\n\nClean up usage of pipes  as it causes crashes in debugger sub-prompt  
24074,     cleanup per andschwa comment\n  
24075,     Merge pull request #605 from PowerShell/updates\n\nBump packages and fix dependencies  
24076,     Add simple regression test for Add-Type\n  
24077,     Update CorePsTypeCatalog\n  
24078,     Fix TypeCatalogGen script\n  
24079,     Clean up TypeCatalogGen dependencies\n\nPin to stable packages and use `net45` moniker instead of DNX \n  
24080,     Update runtime facade with additional packages\n\nThis had gotten out of date since it is a manual process \n  
24081,     Add System Xml XDocument dependency to host\n\nThis resolves #604 but leaves an open question of why the package is\nrequired at runtime  but not at compile-time \n  
24082,     Remove trailing comma from project json\n  
24083,     Bump CLI to 1 0 0 001598\n  
24084,     Bump  NET packages to 23829\n  
24085,     Clean up usage of pipes  as it causes crashes in debugger sub-prompt\n  
24086,     Merge pull request #600 from JumpingYang001/master\n\nAdd note when building on WS2012R2  
24087,     Add note when building on WS2012R2\n  
24088,     Add native test for createSymLink\n  
24089,     Merge pull request #599 from PowerShell/updates\n\nBump packages  
24090,     Add new CreateSymLink function\n  
24091,     Fix Start-Sleep Pester tests\n  
24092,     Bump monad with DataTable removal\n  
24093,     Add System Threading Thread package\n\nNow needed to use the `Thread` type \n  
24094,     Bump  NET packages to 23826\n  
24095,     Bump CLI version to build 1540\n\nLatest common build \n  
24096,     Merge pull request #597 from PowerShell/ci-cache\n\nEnable caching on CI machines  
24097,     Cache apt repositories on Travis\n  
24098,     Cache CLI on AppVeyor\n  
24099,     Cache ~/ nuget on AppVeyor\n  
24100,     Cache ~/ nuget on Travis\n\nShould speed up builds by several minutes \n  
24101,     Fail appveyor build  if CoreCLR tests failed on windows\n  
24102,     Merge pull request #589 from PowerShell/werror\n\nTreat C# warnings as errors  
24103,     Don t treat MMI warnings as errors on FullCLR\n\nIt can only build with warnings \n\nIt will error if the full `SafeHandleZeroOrMinusOneIsInvalid` type is\nused on FullCLR because the derivation is not completely implemented \n  
24104,     Treat C# warnings as errors\n  
24105,     Fix compiler warning about unused variable\n  
24106,     Fix list of submodules to update on Windows\n\nPester was moved to facilitate easier automatic publishing \r\n\r\n[skip ci   
24107,     Merge pull request #588 from PowerShell/cmake\n\nFix current working directory for CMake  
24108,     Fix current working directory for CMake\n\nThere is no way around this  The directory where CMake is invoked is\nwhere it writes its build files  so we have to `pushd`  In case anything\nfails  we `popd` in a finally block \n  
24109,     Merge pull request #587 from PowerShell/module\n\nImprove Start-PSBuild and Start-PSPackage functions  
24110,     Merge pull request #586 from PowerShell/multiline\n\nAdd support for multi-line input  
24111,     Merge pull request #585 from PowerShell/cursor\n\nFix crash when cursor goes  off screen   
24112,     Improve Start-PSBuild and Start-PSPackage functions\n\n- Better comments\n- Better indentation\n- Working directory agnostic (uses `$PSScriptRoot`)\n- Does not `cd`\n- `PSPackage` does not call `PSBuild`\n- Asserts that `bin/powershell` exists\n- Derives version from `git describe` if not given\n- Version parameter now a string to support metadata\n  
24113,     Simply code\n  
24114,     Add support for here-string\n  
24115,     Merge pull request #584 from PowerShell/remoteregfix\n\nAdding remote registry fix for monad  
24116,     Adding remote registry fix from submod\n  
24117,     Handle multi-line commands\n  
24118,     Fix crash when cursor goes  off screen \n  
24119,     Merge pull request #578 from PowerShell/remove-dsc\n\nRemove DSC submodule  
24120,     Remove DSC submodule\n\nResolves #573 \n  
24121,     Merge pull request #572 from PowerShell/self-host\n\nEnable self-hosting  
24122,     Use Start-PSBuild on AppVeyor\n  
24123,     Catch exception when used on FullCLR\n\nThis is the case when the module is used on FullCLR versions of\nPowerShell (necessarily on Windows) \n  
24124,     Add Start-PSPackage command to build deb/pkg packages\n\nDeprecates `package sh`  Committed necessary package symlink because\ncreating one with PowerShell is not yet implemented \n  
24125,     Add cross-platform Start-PSBuild function\n\nThis can replace `build ps1` and `build sh`  However  we need to upload\npackages so Travis can use PowerShell \n  
24126,     Change package script to generate  deb\n  
24127,     Add basic package creation script\n\nCreates a  pkg for OS X using Effing Package Management \n\nCan be easily modified to create a  deb or  rpm etc \n  
24128,     Use deployed Pester module path instead of src\n  
24129,     Fix capitalization of GitHub in dev module s name\n  
24130,     Copy user permissions to group and other in bin/*\n\nNecessary for packages so that the libraries/deps files are readable \neven when owned by root (because it was installed from a package) \n  
24131,     Respect Console BackGround color\n\nThis was bugging me  Instead of using the existing console\ s background\ncolor  we were hard-coding  Black   Now we just leave it alone \n  
24132,     Remove banner from profile\n\nWhen trying to use PowerShell a lot  this default banner gets annoying \nI don\ t think we need it any more  Also change the prompt to just  PS  \n  
24133,     Add Emacs-style readline bindings\n\nVery simple implementation of C-(A E K D B F P R N S J L) and Alt-(B F) \n  
24134,     Merge pull request #569 from PowerShell/tab4\n\nFix case where tab completion is not at end of command  
24135,     Reposition cursor after tab\n  
24136,     Fix case where tab completion is not at end of command\n  
24137,     Merge pull request #564 from PowerShell/rawui\n\nReconcile rawui cs with System Console  
24138,     Merge pull request #566 from PowerShell/fix-xunit\n\nFix xUnit tests for `netstandardapp1 5`  
24139,     Merge pull request #565 from PowerShell/scripts\n\nImprove debug sh and build sh scripts  
24140,     Improve pester sh script\n\n- Check if PowerShell has been built before trying to use it \n  
24141,     Improve build sh script\n\n- Check for cmake  g++  and dotnet programs \n- Check for project lock json \n- Check that libpsl-native was compiled \n  
24142,     Improve debug sh script\n\n- Move to the `bin` directly so that SOS works properly \n- Check for LLDB and PowerShell programs \n- Display help text \n  
24143,     Fix xUnit tests for `netstandardapp1 5`\n\nWith the switch to `netstandardapp1 5` framework for the host  the xUnit\ntest runner broke  For `dotnet test` to work with the  NET Core xUnit\nrunner  it must continue to target `dnxcore50`  Fortunately  we can\nimport our project s framework  and make everything work again \n\nAlso improved the `xunit sh` script to check for dependencies \n  
24144,     Merge pull request #557 from PowerShell/readline\n\nImprove tab-completion and up/down arrows  
24145,     Reconcile rawui cs with System Console\n\nWith the latest packages  a lot more System Console API is available \nThis commit implements what is now available through the API \n\nWhere an API functions correctly on Linux  the result of a call through\nPowerShell works as expected  Where it is not  a nice\n`PlatformNotSupported` exception is thrown (and displayed by\nPowerShell) \n\nOn Linux:\n\n- `$host ui RawUI WindowTitle` can be set but cannot be get\n- `$host ui RawUI CusorPosition` can be set and get\n- `$host ui RawUI CursorSize` can be get but cannot be set\n- `$host ui RawUI MaxPhysicalWindowSize` can be get\n- `$host ui RawUI MaxWindowSize` can be get\n- `$host ui RawUI WindowPosition` can be get but cannot be set\n- `$host ui RawUI WindowSize` can be get but cannot be set\n- `$host ui RawUI ReadKey` can be be used  but is only approximate\n  
24146,     Bump  NET Core packages to rc3-23819\n\nBrings in fix for #546 and so enables the use of the PowerShell in non\nxterm terminal emulators (like Tmux and screen) \n  
24147,     Fix a special down arrow scenario\n  
24148,     Adding monad branch\n  
24149,     New changes to readline cs to improve tab-completion and up/down arrow\n  
24150,     Update README md [skip ci \n\nAdd info about msbuild alias  
24151,     Update README md  
24152,     Merge pull request #555 from PowerShell/cli-release\n\nRefactor projects for use with  NET CLI 1 0 0  
24153,     Pin CLI to 1 0 0 001425 and update readme\n  
24154,     Build with new framework and new CLI\n\nAll libraries now use the framework `netstandard1 5`  and import the\n`dnxcore50` and `portable` frameworks  The app that is published \nMicrosoft PowerShell Linux Host  that is  the top-level dependency that\nemits an executable  instead targets `netstandardapp1 5` and has a new\n`runtimes` key so that  NET CLI s `restore` and `publish` commands know\nwhich runtime implementations to resolve \n\nWhen switching to the new CLI  we needed to fix how we specified our\ndependencies  In particular  the  NET CLI team helped me figure out how\nto download packages that are reference assembly only on Linux  with\nimplementations on Windows  The result of this is the new `frameworks`\nsetup \n\nAdditionally  we were incorrectly specifying our build dependencies;\nthat is  projects we also build (not packages)  The solution was much\ncleaner  We removed the `type: build` section and replaced it with the\nversion `1 0 0-*` that all our projects currently use \n\nThe `project json` files also had their names  descriptions \nindentation  and versions fixed \n\nThe build scripts were simplified \n  
24155,     Merge pull request #554 from PowerShell/vors/security\n\nVors/security  
24156,     Update pointer to src/monad submodule\n  
24157,     Add missed files to Microsoft PowerShell Security\n\nThis files are needed for FullCLR build \nThey are responsible for some errors reported in BVT/DRT regression \n  
24158,     Fix issue with missed ImplicitRemotingCommands cs\n  
24159,     Merge pull request #545 from PowerShell/cli-xunit\n\nxUnit test runner integration  
24160,     Bump monad submodule with fix for Append<T>\n\nNewest  NET Core implements this  so the reimplementation in PowerShell\nwas a conflicting type  It was removed \n  
24161,     Bump  NET packages to 23817\n  
24162,     Use Linux Host in xUnit tests\n\nMake its internals visible to the `powershell-tests` assembly  and use its\n`MyHost` and `Listener` classes instead of facades \n  
24163,     Initialize the ALC for the runspace tests\n\nThis initialization was moved out of the native host and into the\nmanaged host  so the same setup must now be done before tests \n  
24164,     Add xUnit test runner script\n\nUnfortunately a wrapper is needed because `LD_LIBRARY_PATH` must be set\nto avoid having to place build artifacts (specifically\n`libpsl-native so`) out-of-tree to run tests \n  
24165,     Remove Commands Omi module\n\nThis was a temporary work-around that now needs to be removed (mostly\nbecause the xUnit tests are out-of-date because we didn t have a runner \nand it s not worth it to fix them)  Rather than let more cruft\naccumulate  we need to remove it \n\nResolves #551\n  
24166,     Update CorePsTypeCatalog\n  
24167,     Expose SMA internals to powershell-tests\n  
24168,     Update xUnit dependencies for dotnet-test-xunit\n\nAdd `xunit` and `dotnet-test-xunit` packages  Import `portable-net45`\nfor `xunit`  Add `xunit` as `testRunner` \n  
24169,     Add cli-deps feed for dotnet-test-xunit\n\nAlthough there is a dedicated `coreclr-xunit` feed for this package  it\nis missing some needed dependencies  Rather than add yet another feed\n(`aspnetvnext`)  we ll use the `cli-deps` feed as it has all the\npackages that `dotnet-test-xunit` needs  and is likely to stick around \n  
24170,     Use CLI obtain script to install on AppVeyor\n  
24171,     Pin dotnet-nightly package on Travis\n  
24172,     Move check of no match\n  
24173,     Additional changes to correct tab-completion\n  
24174,     Fixes one of tab-completion problems\n  
24175,     Fix  handle is invalid  error on AppVeyor\n  
24176,     Remove versions from frameworkAssemblies\n\nIt is odd  but they re unsupported here  If a version is given  it\ncauses every build/publish to think it needs to be restored again \nbecause the lock file doesn t end up with a version \n  
24177,     Fix Microsoft PowerShell Commands Management project json casing\n  
24178,     Add WebCmdlets to Microsoft PowerShell Commands Utility\n  
24179,     Update src\\monad reference to include #if !CORECLR guards\n  
24180,     Add missed files to Microsoft PowerShell Commands Management\n\nAdd almost all files to Microsoft PowerShell Commands Management\nOne of them is Computer cs that was listed in known issues \nWe start to use a nuget packages generated for assemlbies that\ncannot be listed in framework assemlbies  but exist in a GAC\non all windows machine and not a PowerShell assemblies\nThe first one is Microsoft WSMan Management\n  
24181,     New pester test for Import-LocalizedData\n  
24182,     Modified Get-ChildItem pester test to check for sorted list of files\n  
24183,     Add readme to Linux Host\n  
24184,     Update appveyor yml to import pester from the new location\n  
24185,     Make appveyor fail if it cannot find test results\n  
24186,     Fix handling of bin directory\n  
24187,     Move Pester to submodule to Host/Modules\n\nThis way it can also be deployed automatically  removing the last manual\ncopy steps from our build scripts \n\nTravis and AppVeyor configurations updated for new submodule location \n  
24188,     Add update-content sh script\n  
24189,     Add Modules to tree for `content`\n\nSame as ps1xml files: already deployed in the wild  i e  not source\ncode  Allows to remove recursive copies from build scripts and rely just\non CLI s behavior \n  
24190,     Use `content` to publish PSL_profile ps1\n  
24191,     Copy ps1xml files into tree to use `content`\n\nThis allows us to remove the duplicated copying steps from our Windows\nand Linux build scripts  These files are already distributed to users of\nWindows  and so are not  source code  \n  
24192,     Remove registry stub\n\nWith latest changes to PowerShell source code  and better behaviors of\nGet/Set-ExecutionPolicy  the Windows registry API stub can be removed \n  
24193,     Update Get/Set-ExecutionPolicy tests\n\nTest expected behaviors on both Windows and Linux \n  
24194,     Bump monad with changes to ExecutionPolicy\n  
24195,     Merge pull request #524 from PowerShell/vcxproj\n\nBuild vxcproj file instead of sln file on fullCLR  
24196,     Build vxcproj file instead of sln file on fullCLR\n\nBuilding sln file generated by cmake causes troubles on my dev machine \nIt contains additional checks for tools version that cannot be satisfied \n  
24197,     Clean up  gitignore files\n  
24198,     Use NuGet instead of aspnetvnext for CodeAnalysis\n\nThe aspnetvnext MyGet feed was unreliable  and we should prefer NuGet\nanyway  This should make automated builds fail less often \n  
24199,     Bump monad submodule with ClrFacade Load refactor\n  
24200,     Bump monad with merge from Source Depot\n  
24201,     Fix HOMEPATH and Wait-Event tests\n\nOn Windows  HOMEPATH is not necessarily `\\Users\\username`  so the test\nwas made to match more loosely \n\nWait-Event s timeout varied more than expected  so the test s range was\nincreased \n  
24202,     Fix errors on CoreCLR Windows port\n  
24203,     Remove / and /tmp references\n  
24204,     Clean up temp files in pester scripts\n  
24205,     Modernize our nuget config\n\nUse the V3 api  and use the clear directive instead of\n`activePackageSources` \n  
24206,     Merge pull request #503 from PowerShell/full-deps\n\nUpdate FullCLR ConsoleHost dependencies  
24207,     Update FullCLR ConsoleHost dependencies\n\nSuch that only one publish command is required \n  
24208,     Guard prompt function\n\nFixes #485 \n  
24209,     Remove versions from frameworkAssemblies\n\nThis should fix bug #499 where building complains about a restore not\nhaving been done  even when it has \n  
24210,     Update readme\n\n- New links due to rename\n- Better formatting\n- More details\n  
24211,     Merge pull request #493 from PowerShell/console-freeze\n\nFix for #491: make powershell exe work in new window  
24212,     Merge pull request #492 from PowerShell/remove-workaround\n\nRemove temporary dotnet-publish workaround  
24213,     Fix for #491: make powershell exe work in new window\n\nFullCLR windows host doesn t read keys when run in separate window \nFix: don t use Start-Process -Wait $false -NoNewWindow $false\n\nInstead  ommit this parameters  Seems like a bug in Start-Process \n  
24214,     Use $env:CORE_ROOT if set  otherwise AppContext BaseDirectory\n\nOtherwise the Json NET DLL cannot be found when Pester tests are run\nover PSRP \n  
24215,     Merge pull request #487 from PowerShell/on_finish\n\nPublish AppVeyor artifacts on PRs  
24216,     Publish AppVeyor artifacts on PRs\n\nI originally used `deploy_script:` section for publishing artifacts \r\nThis section is not invoked on Pull Requests \r\nHence  use `on_finish` section instead  so we can consume artifacts from PRs as well   
24217,     Add FullCLR section to README md\n\n* Setup environment\r\n* Building\r\n* Running\r\n* Running from CI server  
24218,     Fix quotes in appveyor yml\n  
24219,     Run FullCLR sanitary tests in AppVeyor\n\nThis change brings a very minimal set of tests and make\nbuild fail  if we cannot load some PS assamblies on FullCLR\n\nWe should increase test coverage for FullCLR in future \n  
24220,     Teach PowerShellGithubDev psm1 -NoNewWindow Mode\n\nWe need it to run tests in CI\n  
24221,     Make build FullCLR ps1 build RELEASE by default\n\nSince we start include CRT runtime inside powershell exe \nthe size of executable jumped from 32kb to 1Mb in DEBUG \nRelease produces about 20kb  so we keep size managable \n  
24222,     Make CMakeLists correctly build RELEASE\n  
24223,     Add binFull/ and build/ folders to  gitignore\n  
24224,     Make build FullCLR ps1 script more user friendly:\n\nerror messages + -G parameter support for cmake\n  
24225,     Include msvcr120 dll runtime to powershell exe\n  
24226,     Remove temporary dotnet-publish workaround\n\nLatest dotnet-nightly packages have not required this \n  
24227,     Set Pester error threshold to 0\n  
24228,     Fix guard in MMI s AssemblyInfo\n  
24229,     Add PowerShellGithubDev psm1 module to run FullCLR powershell\n  
24230,     Add strong-name signature to Microsoft Management Infrastructure\n  
24231,     Add AppVeyor notifications to PSCore Slack #ci channel\n  
24232,     Move Travis CI notifications to PSCore Slack #ci channel\n  
24233,     Bump monad version to include UsesCodeSignedAssemblies() fix\n  
24234,     Bring back BufferWidth and BufferHeight\n  
24235,     Revert  Skip BufferSize when not interactive \n\nThis reverts commit 9a5c010f54a26708a8c3615eb3c46e857978e702 \n  
24236,     Bump monad submodule with use of NOETW\n  
24237,     Add NOETW preprocessor definition to Automation\n\nThis is necessary to disable Tracing on Core PowerShell until the\nreimplementation of the Eventing library is ported to CLI \n  
24238,     Bump monad and windows-build submodules\n  
24239,     Add ImplicitRemotingCommands and WebCmdlet to known issues\n  
24240,     Remove executable bit from build ps1\n  
24241,     Use --configuration Linux for CorePS build\n  
24242,     Remove Computer cs from Commands Management\n  
24243,     Build Full and Core PowerShell on AppVeyor\n  
24244,     Add build FullCLR ps1 script\n\nThis script builds PowerShell targeting FullCLR  using the same projects\nas Core PowerShell  and PowerShell on Linux \n  
24245,     Add CMake project to build Windows powershell exe\n  
24246,     Add file superset to Utility and Automation\n\nTo enable building on both Core and Full CLR with the same project json\nfiles  the superset of file dependencies for both builds must be\nincluded  The set differences are applied by `CORECLR` preprocessor\nguards around the files themselves \n\nThe file name cases were corrected for case-sensitive filesystems \n  
24247,     Update AssemblyInfo files for FullCLR build\n  
24248,     Add Microsoft PowerShell ConsoleHost\n\nFor the Windows console \n  
24249,     Add dnx451 to project json files\n  
24250,     Uses spaces instead of tabs in project json files\n  
24251,     Refactor project json dependencies\n\nThe packages are now dependencies of the `dnxcore50` framework itself \nrather than globally  The `compilationOptions` were pruned  with\n`CORECLR` moved to frameworks  `_CORECLR` removed for all but\n`Management Infrastructure`  and `LINUX` moved to a new `Linux`\nconfiguration  used only in `build sh`  This configuration is\npurposefully absent from libraries that do not use `LINUX`  so that it\nis not relied upon without strong consideration  The dependencies\nwere pruned to reduce duplication \n  
24252,     Decrease failed test threshold to 11\n\nThe updated packages fix our Start/Stop process tests  which were\nfailing intermittently due to the process name appearing incorrect \n\nSee dotnet/corefx#5421 for further details \n  
24253,     Add System Diagnostics Process dependency\n\nThe new packages do not pull this in automatically \n  
24254,     Bump packages to rc3-23729\n  
24255,     Use ConsoleReadLine for script debugger\n\nInstead of Console ReadLine() so that arrow keys and tab-completion can\nbe used \n  
24256,     Add build script for OMI provider and OMI\n  
24257,     Title case ExecuteHelper function\n  
24258,     Use --noprofile for Pester tests\n  
24259,     Add --noprofile option to host\n\nDisables parsing of all profiles when used \n  
24260,     Remove unsupported --working-dir flag\n  
24261,     Fix up --help\n\nMoved to argument parsing and cleaned up \n  
24262,     Bump monad submodule\n  
24263,     Add missing cmdlets/modules to known issues\n  
24264,     Use Modules instead of SnapIns\n\nProper deployment of the Modules we support allowed me to remove my\nwork-arounds using the deprecated SnapIn system to load all PowerShell\nlibraries via Modules \n\nI still don t like that this is done in build scripts  but we need\nbetter asset support from  NET CLI to change how this is done \n\nPowerShell Utility now deploys the CoreClr manifest  so unsupported\ncommands don t show up erroneously \n  
24265,     Make dotnet-nightly workaround version-agnostic\n\nIf the `Debug/dnxcore50` path does not exist  don t worry about it \n  
24266,     Note that CI gates pull requests\n\n[ci skip   
24267,     Temporarily fix build scripts due to CLI bug\n\nLatest versions of  NET CLI ignore --output and instead publish to a\nlong path inside of it  Until this is resolved properly  we can work\naround it by copying to the expected location \n\nRevert this when CLI is fixed \n  
24268,     Bump monad and windows-build submodules\n  
24269,     Add packages required for updated sources\n\nCommands Utility now needs Microsoft CodeAnalysis CSharp  which doesn t\nexplicitly target `dnxcore50`  so now Commands Utility and the packages\nwhich depend on it now much `import` the Portable Windows framework \nThis also required adding the aspnetvnext feed \n\nSystem Management Automation now requires System Diagnostics StackTrace \n  
24270,     Update mapped compileFiles\n\nRemoved CorePsPlatform cs from the build mapping so that I could perform\nit before merging \n\nNote that SMA by default now builds with a bunch of tracing files for\nETW  which cannot be compiled on Linux and must be hand-removed from the\nwindows-build auto-generated compileFiles output \n  
24271,     Realign project json files\n  
24272,     Link Waffle io scrum board in readme\n\nAdd note to skip CI tests for documentation changes \n\n[ci skip \n  
24273,     Let Travis notify Slack\n  
24274,     Enable Travis CI\n\n- Add badge to readme\n- Use language  cpp  because  csharp  would bring in Mono\n- Set to Trusty Tahr (Ubuntu 14 04)\n- Only clone necessary submodules\n- Use SSH for powershell-ci user access\n- Install dotnet-cli\n- Build PowerShell\n- Run Pester tests\n  
24275,     Add test failure threshold to pester sh\n\nSet to 14 because of non-tty and random process failures \n  
24276,     Enable Environment Exit\n\nWas not previously available \n\nMoved so `--command` exits with code too \n  
24277,     Enable more UI code that s now available\n  
24278,     Update README md\n\nremove temp branch from build table [skip ci   
24279,     Skip BufferSize when not interactive\n\nSo short of re-implementing an entire new PSHost for non-interactive\nsessions  this is a work-around  If a script (file or command) is passed\nto the shell  we tunnel that information through to the raw UI so it can\nskip calling out to the TTY (which may not exist) \n\nThere has to be a better way to do this  but the structure of PSHost >\nUI > Raw UI just makes this incredibly difficult \n  
24280,     Add AppVeyor CI integration \n\nAppVeyor is a cloud-based CI platform for windows \nUse [skip ci  tag in any place of message to mark commit as trivial (i e \nREADME md changes) \n  
24281,     Bump OMI and provider modules\n  
24282,     Move more Git notes to CONTRIBUTING md\n  
24283,     Add explicit dependency instructions to README  
24284,     Add link to known issues\n  
24285,     More readme updates\n  
24286,     Bump dsc submodule because of upstream rewrite\n  
24287,     Bump libpsl-native and windows-build submodules\n\nWith new readmes \n  
24288,     Create contributing file and update readme\n  
24289,     Update OMI submodule s remote URL\n\nOMI was transferred to the Microsoft organization  with read access for all FTEs \n  
24290,     Update profile banner\n  
24291,     Remove xUnit reference from csharp/project json\n\nCurrently fails to restore  working on prototype \n  
24292,     Update README md\n\nUpdate step for windows init  
24293,     Bump monad submodule for Windows support\n  
24294,     Update readme for cross-platform support\n  
24295,     Add build ps1 for Windows\n  
24296,     Emit powershell executable\n\nInstead of Microsoft PowerShell Linux Host\n\nSince this changes the name of the library \nSystem Management Automation s assembly info needed to be updated \n  
24297,     Added help file for the command line\n  
24298,     Enable PowerShell script debugger\n  
24299,     Reindent and strip whitespace in host\n  
24300,     Clean up PSL_profile ps1\n\nRemove unneeded cruft and use here-string \n  
24301,     Additional logic for up-down arrows indexing\n\nAlso fixes tab completion for paths \n  
24302,     Added banner to profile  removed from main\n  
24303,     Execute profile commands with out-default\n\nSo functions called in profile can write to the screen without any\nworkarounds \n  
24304,     Fix the Get-Item Pester test\n\nFailed because we renamed the test directory \n  
24305,     Add readme\n  
24306,     Update readme for GitHub\n  
24307,     Update build for OS X compatibility\n\nShared libraries are  dylib (not  so) so use a wildcard  Recent\ndotnet-cli builds will guess the correct runtime when not supplied \n  
24308,     Sort  gitmodules\n  
24309,     Reorganize tests\n\n- Pester source code moved to `test/Pester`  deleted `ext-src` \n- Pester tests ( ps1 files) moved to `test/powershell`\n- xUnit tests ( cs files) moved to `test/csharp`\n- Third-party script test moved to `test/shebang`\n  
24310,     Move Pester test/Pester and push to GitHub\n  
24311,     Bump DSC with fixes\n  
24312,     Move OMI PSRP provider to GitHub\n\nRemove the `monad` prefix from its name \n  
24313,     Move monad-build to windows-build on GitHub\n\nBetter name since this submodule only has to do with the Windows build\nsystem and generated artifacts \n  
24314,     Move monad to psl-monad on GitHub\n\n- Removed more pre-processor conditionals\n- Loads libpsl-native\n- Pruned wmi (rewrote history)\n\nThe wmi folder was massive  and we did not need 99% of it  so a `git\nfilter-branch --tree-filter` was performed to remove all but the single\nnecessary subdirectory before pushing to GitHub \n\nThe psl-monad repository can no longer be updated from the existing\nGitSD sync  When the PSW teams have a Git repo for the monad codebase \nwe will apply our patches to it and delete this fork \n  
24315,     Move monad-native to libpsl-native on GitHub\n  
24316,     Rename tests to test\n\nRequires moving a submodule  so its better to do it now when everything\nis moving \n  
24317,     Remove terminal queries\n\nThanks to improvements in System Console  we no longer rely on these \n  
24318,     Rename to psl-native\n\nThe name `psnative` would have been confusing when this goes\ncross-platform; instead use the `psl` suffix for PowerShell on Linux \n  
24319,     Merge branch  dev/start-dsc \n  
24320,     Rename native to src\n\nWith the removal of the host  this submodule is now just one thing:\nlibpsnative  so it makes sense to have a `src` directory instead of a\npoorly named `monad-native/native` \n  
24321,     Bump Newtonsoft Json to 8 0 2\n  
24322,     Update readme\n  
24323,     Add DSC submodule from GitHub\n  
24324,     Bump OMI submodule with test fixes\n  
24325,     Move OMI submodule to GitHub\n\nUpdated  gitmodules for new location of OMI and new working branch \n\nThis requires running `git submodule sync` \n  
24326,     Bump monad-omi-provider submodule with moved host\n\nThe monad-native submodule no longer owns a native host whatsoever  with it moved to the provider  and the provider s build system refactored to use CMake \n\nBecause CMake is way better  even for dealing with OMI \n  
24327,     Bump monad-native submodule with removal of host\n  
24328,     Remove stty echo workaround\n\nNote that the run script is now entirely deprecated  since the host can be run directly \n  
24329,     Remove deprecated patch script\n\nPatching System Console manually is no longer required \n  
24330,     Use Window(Width|Height) instead of Buffer\n\nThe former is available  the latter is not  For our simple case of a\nreadline-esque shell on Linux  they seem equivalent  This removes the\nimport of libpsnative and the native calls to get terminal width/height \n  
24331,     Bump  NET packages to build rc2-23712\n\nThis brings in the previously missing System Console APIs and the fix for the echo TTY issue  fixing our remaining patches of the runtime \n  
24332,     Add logging to PSRP script\n  
24333,     Fix indentation and build warning\n  
24334,     Merge branch  dev/nixreadline \n  
24335,     Fix location of MOFs in DSC tests\n  
24336,     Fix ConvertTo-Csv tests\n\nAssert that this cmdlet uses collections internally  which does not rely\non order \n  
24337,     Merge branch  dev/cross-platform-pester \n  
24338,     Removing Console Writelines for debugging and modifying bounds chekcing\n  
24339,     Fix for tab completion indexing with backspace\n  
24340,     Fixed tabcompletion index issue with buffer ending in whitespace\n  
24341,     Add new pester test to clean up created file\n  
24342,     Remove host code\n\nMoved to OMI provider as the local shell no longer depends on a custom\nnative host \n  
24343,     Rename cmdlets\n  
24344,     Adding Get-DscConfiguration  and Get/Set-DscLocalConfiguration cmdlets\n  
24345,     Enumerate WriteObject output\n  
24346,     New pester test for Start-DscConfiguration\n  
24347,     Clean up code\n  
24348,     Refactor some code\n  
24349,     process xml output\n  
24350,     Fix third party library loading in JSON tests\n\nSince we no longer have CORE_ROOT defined  but do have\nAppContext BaseDirectory from  NET\n  
24351,     corrected Split-Path tests\n  
24352,     New Start-DscConfiguration cmdlet\n  
24353,     fixed cross-platform support\n  
24354,     Changed platform OS test in Get-PSDrive tests\n  
24355,     Removed spurious tests\n  
24356,     Environment-Variables Tests ps1\n  
24357,     Added test to validate that fields are getting populated\n  
24358,     moved alias test to its own test case\n  
24359,     Merge branch  master  into dev/cross-platform-pester\n  
24360,     Bump monad-native submodule with removal of host\n  
24361,     Eliminate dependency on native host for shell\n\nPSRP will of course still require it  but now the managed host sets up\nthe assembly load context  meaning we can depend on the emitted binary\nfrom dotnet-cli \n  
24362,     Don t fail on Jenkins for lack of stty support\n  
24363,     Don t launch any infinite processes\n\nIt is too messy to count on being able to stop the infinite processes\nthat Start-Process tests start  All processes will now stop on their\nown  removing the dependency on Stop-Process  The wait test is now not\nmuch of a test however \n  
24364,     Fix another Start-Process test\n\nThis one would sometimes just fail to stop the process    which is a probably a bug to be fixed \n  
24365,     Output Pester results in XML again\n\nAnd bump submodule \n  
24366,     Bump monad submodule with RuntimeInformation OS check\n  
24367,     Fix another Start-Process test\n\nThis test was not viable as it didn t retain the process object \ninstead relying on Get-Process with the process name  which could fail\nto get the correct process (since no PID was available) \n\nSince it is pointless to test Start-Process without -PassThru  and that\ntest was the exact same code as the fixed first test  it was removed \n  
24368,     Fix up Get-OmiInstance build and tests\n\nDeploying module is a bit funky until dotnet-cli gives us more control\nover which libraries to build and where  Theoretically we ll be able to\npackage System Management Automation and depend on the package instead \nso Commands Omi can be its own project entirely \n\nCleaned up the Commands Omi project json as it had some unnecessary\ncruft from where it was copied  Also removed the AssemblyInfo as it does\nnot matter for a new module \n\nMoved the Get-OmiInstance Pester test to the project s test folder so it\ndoesn t run with our suite of tests (as it takes a dependency on OMI) \n  
24369,     Added Get-OmiInstance Pester test\n  
24370,     Added Get-OmiInstance cmdlet\n\nIn a separate module importable into PowerShell \n  
24371,     Set monad-native submodule branch back to master\n\nSince we re no longer working off develop \n  
24372,     Fix types and format files\n\nLink to them instead so they don t get out of date  Explicitly fix the\nincorrectly named file with an explicit link name  Also deploy the types\nfiles with fixes to monad to fix shell output for various cmdlets \n\nBumps monad submodule \n  
24373,     Bumping monad\n  
24374,     Bump monad-native submodule\n  
24375,     Clean up native host CLI\n\n- Fix launching of specific assembly via --assembly\n- Fix displaying help via --native-help\n  
24376,     Use System Environment NewLine in host\n  
24377,     Use StringBuilder append instead of insert\n\nFor the special case of having a string to insert on the buffer  switch from calling this Insert to appending the string directly (and incrementing the count appropriately) \n  
24378,     Change access-level of Run() from public to internal\n  
24379,     Remove deprecated Makefile\n  
24380,     Bug fix for up arrow with history not indexing correctly\n  
24381,     Remove BOM from New-TimeSpan file\n  
24382,     Added tests for Write-Debug  Write-Verbose  Write-Error cmdlets\n  
24383,     Added New-Timespan tests\n\n- fixed whitespace and minor typos\n- added tests to increase test coverage of function and test the output\n- increased failure threshold to one hundredth of a second\n  
24384,     Improved tabcompletion logic for blank prompt and reset line after tab\n  
24385,     Remove Get-TypeData tests\n\nJason Shirk of the PowerShell team removed the dependency on\nTypes ps1xml  so it was removed from our produce  Therefore this test is\nnow deprecated \n  
24386,     Add script to launch Pester tests\n  
24387,     Fix Start-Process Pester tests\n\nThese tests attempted to stop the test ping process by name  which was\nfragile  Now they stop by PID  which is far less fragile \n  
24388,     Fix Wait-Event\n\nAfter reading the docs  the prior test was incorrect as written  as by default  it will wait for any event  So to test the timeout  we needed to make it wait for an event that would enver come \n  
24389,     Bump Pester submodule\n  
24390,     Deploy PowerShell Utility modules\n\nOdd that this caused only one test failure \n  
24391,     Fix Newtonsoft Json Pester tests\n\nLook for library in new location \n  
24392,     Bring up RegOpenKeyExW stub\n\nThis works around the Get-ExecutionPolicy Pester test failure  It s not a good solution  but it s also (seemingly) not our code that is calling the extern function  This needs to be fixed in CoreFX itself \n  
24393,     Bump monad-native with fixes\n  
24394,     Use _POSIX_HOST_NAME_MAX instead of HOST_NAME_MAX\n\nFor OS X compatibility \n  
24395,     Handle error in GetEnvAbsolutePath\n\nCan t return nullptr because its an invalid cast for the return type \n  
24396,     Return 0  not undefined FALSE\n  
24397,     Fix Boost include dir variable\n\nBoost_INCLUDE_DIRS is only used intermittently by CMake  whereas\nBoost_INCLUDE_DIR (no S) is always populated correctly \n  
24398,     Remove icuuc entirely\n\nWhile we no longer used it  we still linked to it and included its\nheader  This is now gone \n  
24399,     Patch use of /tmp in Pester tests\n\nMore work needs to be done here  but this at least gets rid of the dependency on the TEMP environment variable \n  
24400,     Whitespace cleanup of readline\n\nSorry   \n  
24401,     Up and down arrows now function similiarly to windows\n  
24402,     Readline logic added to prevent out of index when history queue is null\n  
24403,     Added downkey logic and improved up key logic for index errors\n  
24404,     Clean up Host s project json\n  
24405,     Make dotnet-cli link more explicit\n\nLink to the anchor which links to their docs \n  
24406,     Bump OMI and provider submodules\n  
24407,     Fix PowerShell remoting with dotnet-cli\n  
24408,     Fix compiler warning\n  
24409,     Bring back InitialSessionState()\n  
24410,     Prune ALC s dependencies\n  
24411,     Add patch script and update readme\n\nTo make it easier to patch `System Console dll`\n  
24412,     Implemented readline  readkey  special keys\n  
24413,     Repin Pester with fix\n  
24414,     Fix CorePsTypeCatalog for Management dependencies\n  
24415,     Add Commands Management dependencies\n  
24416,     Fix CorePsTypeCatalog\n\nRuntime facade updated with dependencies copied from\nSystem Management Automation \n  
24417,     Prune System Management Automation dependencies\n\nI thought this seemed too easy earlier    I forget to replace the\nframeworks section  This is now the minimum set of packages required \n  
24418,     Deploy Pester with symlink\n  
24419,     Fix tty after exit of shell\n\nThis seems to be a bug with new versions of  NET  An interactive program\npurposefully unsets echo  but should also restore on shutdown  and\nPowerShell is not doing this (though it used to) \n\n   com/questions/171449/shell-does-not-show-typed-in-commands-reset-works-but-what-happened\n  
24420,     Update CorePsTypecatalog for new runtime\n  
24421,     Major refactor of  NET dependencies\n\nMuch simpler now  thanks to NETStandard Library \n  
24422,     Remove test sh\n\nRelic from DNX buid system  Deprecated \n  
24423,     Update PSRP submodules\n\nI am unsure what all needs to be merged in OMI  and what branch it\nbelongs at  Same goes for the provider \n  
24424,     Update readme\n  
24425,     Rename publish sh to build sh for consistency\n  
24426,     Fix bug with System Native so\n\nNeed the up-to-date version so that exiting the console doesn t totally\nmess up the hosting shell (Bash) \n\nShould not depend on this package longterm  as it s\nplatform-specific  Tracking in    com/dotnet/cli/issues/405\n  
24427,     Better publish/run/debug scripts\n\nDeploys development libraries to bin\n  
24428,     Bring back registry stub :(\n  
24429,     Remove host s AssemblyInfo file\n\nIt doesn t need it for anything \n  
24430,     Merge branch  dev/get-filehash-update  into dev/dotnet\n  
24431,     Merge branch  dev/write-verbose  into dev/dotnet\n  
24432,     Merge branch  dev/write-output  into dev/dotnet\n  
24433,     Merge branch  dev/set-psbreakpoint  into dev/dotnet\n  
24434,     Merge branch  dev/get-pscallstack  into dev/dotnet\n  
24435,     Merge branch  dev/writeprogresscmdlet  into dev/dotnet\n  
24436,     Merge branch  dev/remove-psbreakpoint  into dev/dotnet\n  
24437,     Add PSRP script\n  
24438,     Update run script\n  
24439,     Make SMA internals visible to ALC\n  
24440,     Add AssemblyInfo files for Management and Utility\n\nTo set their versions to 3 0 0 0\n  
24441,     Fix AssemblyInfo versions\n\nReconciled with PowerShell assemblies on Windows  Thanks ildasm \n  
24442,     Rename AssemblyInfo files\n  
24443,     Bump submodules for dotnet-cli\n  
24444,     Add TEMP and LD_LIBRARY_PATH to run script\n  
24445,     Fix copying of Pester module\n  
24446,     Update compileFiles and namedResource from makegen\n\nThese are now auto-generated in monad-build \n  
24447,     Remove icuuc dependency from host\n\nBroke this dependency by changing the\n`SetPowerShellAssemblyLoadContext()` function to expect an LPStr on\nLinux  instead of an LPWStr  which is easier to deal with because  NET\ncan marshal an LPStr automatically \n  
24448,     Build SMA with version 0 0 0 0\n\nBecause the monad code expects this version on Linux for all PowerShell\nassemblies  This should be changed back once they all build with 3 0 0 0 \n  
24449,     Remove GenerateTypeCatalog from RunspaceTests\n\nThis was Garrett s workaround that we no longer use \n  
24450,     Define LINUX for AssemblyLoadContext\n  
24451,     Update the type catalog\n  
24452,     Build native components in publish script\n  
24453,     Remove ms-win-core-registry stub\n\nWe ve already removed the dependency on this  At shutdown  something\ntries to use it  but let s fix the problem rather than hide it \n  
24454,     Move Management Infrastructure Native code\n  
24455,     Remove deprecated host mk\n  
24456,     Add run script\n\n- Deploy profile ps1xml\n- Remove deprecated build/nuke scripts\n  
24457,     Start fix of ps1xml files\n  
24458,     Update CorPsTypeCatalog\n  
24459,     Patch things in publish script\n  
24460,     Update readme\n  
24461,     Update submodules for dotnet-cli\n  
24462,     Resurrect PowerShell s AssemblyLoadContext\n  
24463,     Add symlink to `powershell` native host\n\nRequired because we brought back PowerShell s custom\nAssemblyLoadContext \n  
24464,     Update source file mapping\n  
24465,     Remove aspnetrelease NuGet repo\n\nNo longer required with removal of Microsft Extensions Platform Abstractions\n  
24466,     Add generated CorePsTypeCatalog cs to AssemblyLoadContext\n\nTypeCatalogGen/build sh generates this using the facade runtime \n  
24467,     Bump runtime facade s packages\n  
24468,     Brought back PowerShell s AssemblyLoadContext\n\nRemoves dependency on Microsoft Extensions Platform Abstractions \n\nMakes use of native executable from `dotnet-cli` impossible; must use\n`powershell` from monad-native \n  
24469,     Upgrade Microsoft VisualBasic\n\nHow could we possibly even need this? I think we can remove it \n  
24470,     Build AssemblyLoadContext\n  
24471,     Work around broken content\n\n   com/dotnet/cli/issues/435\n  
24472,     Move ps1xml files to host so content works\n\n   com/dotnet/cli/pull/61\n  
24473,     Move assembly-info files\n  
24474,     Wild card and sort dependencies\n\nThese still need to be pruned \n  
24475,     Null terminate exePath\n  
24476,     Refactor host for dotnet-cli\n\n- Now uses Boost\n- No longer uses libicu\n  
24477,     Remove deprecated types files\n\nJason deprecated these with better code upstream \n  
24478,     Add generated type catalog to System Management Automation\n  
24479,     Add TypeCatalogGen\n  
24480,     Add dotnetcore NuGet repo back\n  
24481,     Update for use with dotnet-cli\n\n   com/dotnet/cli\n  
24482,     Bump  NET version\n  
24483,     Added Pester tests for Get-FileHash\n  
24484,     Revert  Add runspace test without InitialSessionState \n\nThis reverts commit cc2bdee9ecdd4807ccdcc70807fb4bcce15ae9e3 \n\nThis is no longer neccesary as we\ re now able to unit test this \n  
24485,     Merge pull request 300 from dev/removelang1 into develop\n\nMerge dev/removelang1 to develop\n  
24486,     Add failing PowerShell function test\n\nThis narrowed down the bug in  NET Core \n  
24487,     Temporarily remove InitialSessionState\n  
24488,     Add Runspace with PSHost test\n  
24489,     Add SecureString stub\n\nProject from Garret  code originally from Mono \n  
24490,     added cross-platform support for split-path tests\n  
24491,     Pin NuGet packages\n\nUsing new ASP NET Release feed and pinned package versions \n\nThanks Garret!\n  
24492,     Bump DNVM version in scripts\n  
24493,     Remove restore sh because of global json\n\n`dnu restore` works appropriately with the global json to restore all\nthe pacakges\n  
24494,     Add more PowerShell runspace tests\n  
24495,     added cross-platform NewLine Support\n  
24496,     Made newline characters cross-platform\n  
24497,     added -Force parameter to ensure object creation\n  
24498,     Modified tests for cross-platform testing\n1  removed the context block \n  
24499,     modified tests to make them work on Windows\n  
24500,     added cross-platform newline support\n  
24501,     removed a very platform-specific and time specific test for new-item\n  
24502,     fixed get-UICulture to work cross-platform\n  
24503,     fixed get-psdrive test to work cross-platform\n  
24504,     modified check to test environment setting\n  
24505,     Specified ItemType as it was causing errors in Windows\n  
24506,     used HOME directory since that will always exist on the test machine on windows and linux\n  
24507,     added support for global newline characters\n  
24508,     Made Environment tests cross-platform   Added logic in to run under windows or linux- this will change when we set the environment variables\n  
24509,     Made Test-Path tests cross-platform\n1  wrapped braces because apparently that was required in linux \n2  added a beforeAll and AfterAll section to prepare and cleanup the\ntest suite \n3  removed superfluous test \n4  Fixed issue with invalid path\n  
24510,     Move TypeCatalog code to System Management Automation\n\nWe re keeping it in the superproject for now  as it s the only build\nsystem with a dependency on the file  However  we have to move it out of\nthe host because the unit tests also need to initialize the type catalog \n  
24511,     Removed BAD_ENVIRONMENT from comments and added errno back to several fns\n  
24512,     Removed LANG dependancies from native fns\n  
24513,     Removing explicit test of en_US UTF-8 in native code and moving to a unit test\n  
24514,     Update Makefile for common DNX targets\n\nThis Makefile should probably go away  but I gave it a quick update to\nso that there s a familiar interface \n  
24515,     Add test script to run xUnit tests\n  
24516,     Add global json for `dnu restore` from root\n  
24517,     Track `long` type in TypeCatalog\n  
24518,     Use named resources for Commands Utility\n  
24519,     Copy ps1xml files to SMA package\n\nThese will sometimes need to be manually updated  but this is the best\nwe can do for now to enable `dnx build` and `dnx run` without\npublishing \n  
24520,     Added Write-Progress cmdlet to PSL host code\n  
24521,     Change package versions back to 3 0 0 0\n\nAnd fix correctly using assembly-info cs\n  
24522,     Fix up dirty build scripts\n  
24523,     Clean up assembly infos\n  
24524,     Change SMA assembly info for DNX xUnit runner\n  
24525,     Move xUnit tests for DNX xUnit runner\n  
24526,     Update publish script for move to src subtree\n  
24527,     Change source file paths for move to src subtree\n  
24528,     Move DNX assemblies to src subtree\n  
24529,     Name the PowerShell host  PSL \n  
24530,     Add runspace test without InitialSessionState\n  
24531,     Fix versions of generated assemblies\n\nThe  Snapins  were attempting to load version 1 0 0 0  but for some\nreason we were building with version 3 0 0 0 \n  
24532,     Define NOALC for AssemblyLoadContext replacement\n  
24533,     Fix Commands Management files\n\nThese was somehow accidentally the Commands Utility files \n  
24534,     Use compileFiles and sort Commands Utility sources\n  
24535,     Use packInclude instead of content for *ps1xml\n\nThe latter doesn t actually place items in the NuGet package  The\nformer  while undocumented  exists in the schema and works as intended \n  
24536,     Use compile and compileFiles\n  
24537,     Add System Reflection dependency to Host\n  
24538,     Bump coreclr version in publish script\n  
24539,     Guard TrackAssembly\n\nBecause it can fail sometimes\n  
24540,     Add Docker user to sudo group\n  
24541,     Fix NuGet feeds\n  
24542,     Switch packages to latest build\n  
24543,     Generate TypeCatalog in managed host\n\nRefactor Main into own static class\n\nSo that the Listener doesn t get instantiated until after the\nTypeCatalog has been generated \n  
24544,     Fix SMA s content section\n\nI swear I already did this \n  
24545,     Mount to /opt/src in Docker\n\nBecause DNX is installed to /opt/dnx\n  
24546,     Add quickly written build scripts\n\nThese are from from correct \n  
24547,     Make Main() public because a private main is bad\n\nThis was very  very  frustrating \n  
24548,     Fix SecureString package\n\nFor some reason the newer package was removed from the feeds \n  
24549,     Build PowerShell using DNX\n  
24550,     Update gitignore for DNX\n  
24551,     Remove nuget exe and packages config\n\nSince DNX takes care of packages for us \n  
24552,     Remove monad-ext submodule\n\nIn preparation for full DNX use\n  
24553,     Add project json for PowerShell DLLs\n  
24554,     Merge pull request 297 from dev/alexjopester into develop\n\nMerge dev/alexjopester to develop\n  
24555,     Added Remove-Breakpoint tests\n  
24556,     removed E2Etestfunctions because it serves no purpose  and automation cleans up tests\n  
24557,     Merge branch  dev/set-psbreakpoint  of    visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/set-psbreakpoint\n  
24558,     replaced breakpoint tests with better tests that actually test that actually verify behavior\n  
24559,     modified and added tests according to PR\n  
24560,     Added write-verbose tests\n  
24561,     Merge pull request 293 from dev/write-error into develop\n\nMerge dev/write-error to develop\n  
24562,     Minor whitespace edits to Import-Alias and Measure-Command\n  
24563,     Added file used for pester testing Import-Alias\n  
24564,     minor logic change to Start-Sleep pester test\n  
24565,     Added pester tests for Wait-Event\n  
24566,     Added pester tests for Update-TypeData\n  
24567,     Added pester tests for Update-FormatData\n  
24568,      Added pester tests for Tee-Object\n  
24569,     Added pester tests for Start-Sleep\n  
24570,     Added pester tests for Remove-Event\n  
24571,     Added pester tests for Register-ObjectEvent\n  
24572,     Added pester tests for Register-EngineEvent\n  
24573,     Added pester tests for Measure-Command\n  
24574,     Added pester test for Invoke-Expression\n  
24575,     Added pester tests for Import-Alias\n  
24576,     Added pester test for Get-RunspaceDebug\n  
24577,     Added pester test for Get-Event\n  
24578,     for jenkins build and creating PR\n  
24579,     added write-output pester tests\n  
24580,     added write-error tests\n  
24581,     Merge pull request 289 from dev/measure-object2 into develop\n\nfixed typo\n  
24582,     fixed typo\n  
24583,     Merge pull request 288 from dev/measure-object-rebase into develop\n\nadded numeric tests to verify number capabilities and corrected bad\n  
24584,     resolved merge conflicts with origin/develop\n  
24585,     added numeric tests to verify number capabilities and corrected bad\nassumptions\n  
24586,     Merge pull request 287 from dev/measure-object into develop\n\ncorrected bad test assumptions\n  
24587,     fixed merge conflicts\n  
24588,     corrected bad test assumptions\n  
24589,     Merge pull request 285 from dev/measure-object into develop\n\nadded Measure-Object tests   There are considerable differences between\n  
24590,     corrected bad test assumptions\n  
24591,     added numeric tests to verify number capabilities\n  
24592,     added tests per code Review\n  
24593,     Merge branch  develop  into dev/measure-object\n  
24594,     bring in changes from monad to fix measure-object counting issue\n  
24595,     Create PR\n  
24596,     Merge pull request 282 from dev/setdate-native into develop\n\nMerge dev/setdate-native to develop\n  
24597,     added End to End testable initial script for manually testing Get-PSCallStack\n  
24598,     added Measure-Object tests   There are considerable differences between different versions of PowerShell\n  
24599,     Remove microsecond\n  
24600,     Merge pull request 281 from dev/monad-osx into develop\n\nFix monad-impersonate for OS X\n  
24601,     Merge pull request 279 from dev/exit-pshostprocess into develop\n\nFix Exit-PSHostProcess cmdlet crash issue\n  
24602,     SetDate function\n  
24603,     Fix Exit-PSHostProcess cmdlet crash issue\n  
24604,     Merge pull request 278 from dev/geteventsubtest into develop\n\nMerge dev/geteventsubtest to develop\n  
24605,     Added Get-EventSubscriber pester test\n  
24606,     Merge pull request 273 from dev/out-string into develop\n\nadded Out-String tests\n  
24607,     Merge pull request 274 from dev/get-typedata into develop\n\nadded Get-TypeData tests\n  
24608,     Merge pull request 275 from dev/get-random3 into develop\n\nPrevious push got lost\n  
24609,     Merge pull request 272 from dev/start-process-pester into develop\n\nMerge dev/start-process-pester to develop\n  
24610,     Previous push got lost\n  
24611,     Fix Jenkins build issues\n  
24612,     Adding monad submodule\n  
24613,     Changes per review comments\n  
24614,     Added 6 pester tests Convertto-SecureString  Export-FormatData  Format-Custm  Get-ExecutionPolicy  Get-FormatData  New-Event\n  
24615,     added Get-TypeData tests\n  
24616,     added Out-String tests\n  
24617,     Added RedirectStandardInput Test\n  
24618,     Renamed file\n  
24619,     new start-process pester test\n  
24620,     Merge pull request 269 from develop into master\n\nMerge develop to master\n  
24621,     Merge pull request 268 from dev/repin-submodules into develop\n\nMerge dev/repin-submodules to develop\n  
24622,     Repin submodules to remote references\n\n`git submodule update --remote` mostly just the extraneous VSO merge commits \n  
24623,     Remove ext-src/cppunit\n\nCruft fromn long ago  not necessary \n  
24624,     Merge pull request 265 from dev/defaulthost into develop\n\nMerge dev/defaulthost to develop\n  
24625,     Merge pull request 267 from dev/get-date2 into develop\n\nadded test and renamed file\n  
24626,     Merge pull request 266 from dev/easy-shell into develop\n\nMerge dev/easy-shell to develop\n  
24627,     removed old titled version\n1  fixed typo\n  
24628,     added test and renamed file\n  
24629,     Merge branch  develop  into dev/limits\n  
24630,     Use HOST_NAME_MAX as specified in gethostname(2)\n\nNAME_MAX is the  maximum number of bytes in a filename   which is\nirrelevant to the gethostname libc function \n  
24631,     Merge pull request 264 from dev/variable-tests into develop\n\nMerge dev/variable-tests to develop\n  
24632,     Fix monad-impersonate for OS X\n\nDocker on OS X uses a Linux host for the containers  99% of the time\nit s the boot2docker image  The user and group within the image (and\ntheir IDs) is different from that of the OS X user  However  the Linux\nhost machine also has the OS X host /Users folder mounted (using a\nVirtualBox share)  Given the permissions of the Linux user inside the\ncontainer  the OS X user s folders are writable \n  
24633,     Fix xUnit test target\n\nPOWERSHELL_HOST is gone  only POWERSHELL remains!\n  
24634,     Fix third-party shebang test\n\nNative powershell host can now be used as an interpreter for other\nscripts through the hashbang/shebang directive \n  
24635,     Remove deprecated POWERSHELL_HOST variable\n  
24636,     Repin monad-native with coupled changes\n  
24637,     Refactor host command-line parsing\n\nSupports a syntax more similar to powershell exe on Windows  with --file\nand --command options  as well as the automatic execution of a script by\nname  or a command via string  Prepares for reading of stdin \n  
24638,     Rename appDomainFriendlyName to psl_cmdline_host\n  
24639,     Update usage text\n  
24640,     Refactor argument parsing for new interface\n\nOnly one argument is accepted by the native host  which is an optional\npath to a managed host assembly (aka the PowerShell console)  If not\nspecified  lib/powershell/powershell exe is used by default  All other\narguments are forwarded as-is to the managed host \n  
24641,     Expose pshost s pwrshPath (PowerShell libraries)\n\nIt s the determined path of the PowerShell libraries (whether specified\nvia PWRSH_ROOT or found relative to the native bin/powershell\nexecutable)  Like exePath  this is available only after a call to\nstartCoreCLR \n  
24642,     Merge pull request 263 from wip/werror into develop\n\nAdded -Werror to treat all warnings as errors to monad-native CMake\n  
24643,     fixed broken tests; the issue here is that powershell scoping is difficult for testing in pester\n  
24644,     Added -Werror to treat all warnings as errors to monad-native CMake\n  
24645,     Remove reference to deprecated scripts folder\n\nAnd renumber list \n  
24646,     Add note about make bootstrap\n  
24647,     Update readme\n  
24648,     Document dependencies\n  
24649,     Merge pull request 262 from dev/host-culture-tests into develop\n\nMerge dev/host-culture-tests to develop\n  
24650,     Merge pull request 251 from dev/export-alias into develop\n\nadded export-alias basic tests\n  
24651,     removed extra material that was more suited for end-to-end test scenarios  allowing for easier exposure of the real bug- which is likely with Get-Variable\n  
24652,     Get-UICulture Pester Test should return a CultureInfo on CorePS instead of VistaCultureInfo\n  
24653,     Added pester tests for Get-Culture  Get-Host  Get-UICulture\n  
24654,     Merge pull request 255 from dev/fixtests into develop\n\nUse HOME instead of HOSTNAME for environment tests\n  
24655,     Use HOME instead of HOSTNAME for environment tests\n\nBecause HOSTNAME can be tricky  but HOME is always set \n  
24656,     Merge pull request 253 from dev/history into develop\n\nFix for history\n  
24657,     Fix for history\n  
24658,     Merge pull request 244 from dev/host into develop\n\nMerge dev/host to develop\n  
24659,     Repin monad-native with fixes\n  
24660,     Merge pull request 252 from dev/fixgetcomputername into develop\n\nMerge dev/fixgetcomputername to develop\n  
24661,     Fix username tests by checking for null\n  
24662,     Fix test since gethostname gets the nodename\n\nThe nodename is not necessarily the short name returned by hostname \n  
24663,     added export-alias basic tests\n  
24664,     Fix Pester tests\n\nThese fail with the improved console because $input is already defined \n  
24665,     Update monad and monad-build submodules\n  
24666,     Prepend existing LD_LIBRARY_PATH\n\nThough it s rarely ever set \n  
24667,     Fix monad-run\n\nUse a non-interactive tty with monad-run  add monad-attach to run\nwithout a tty\n  
24668,     Execute * ps1 arguments as scripts\n  
24669,     Clean up\n  
24670,     Enable PowerShell profiles\n\nAdded default PSL_profile ps1 script  with rule to copy to expected\nlocation (which is the same location of the PowerShell libraries) \n\nCopied from Host06 example the code which loads the profile \n\nMade HostUtilities available to powershell exe \n  
24671,     Small clean up\n  
24672,     Fix exception reporting\n  
24673,     Clean up main cs\n  
24674,     Fix xUnit tests\n\nMoved the xUnit tests build rules to their own Makefile  included by\nmonad-build/Makefile \n\nTemporarily introduced POWERSHELL_HOST to reenable running of\nxunit console netcore exe until this is built-in to the native\npowershell host \n  
24675,     Rename ps_test to xunit-tests\n  
24676,     Update Makefile to use powershell exe\n  
24677,     Fix monad-build/Makefile for powershell exe rename\n  
24678,     Fix host Makefile for file renames\n  
24679,     Remove powershell-simple from Makefile\n  
24680,     Move custom host Makefile out of monad-build\n  
24681,     Rename powershell-run to host\n\nBecause this is our custom host for PowerShell on Linux \n  
24682,     Rename powershell-run to powershell\n\nIt is now the only shell \n  
24683,     Delete powershell-simple\n\nDeprecated for powershell-run\n  
24684,     Merge pull request 235 from dev/convertto-csv into develop\n\nAdded test to validate ConvertTo-Csv\n  
24685,     Further cleanup of pal h\n  
24686,     Merge pull request 247 from dev/isexecutable into develop\n\nNew xunit tests for domainname and isexecutable\n  
24687,     Merge pull request 245 from dev/isexecutable-native into develop\n\nMerge dev/isexecutable-native to develop\n  
24688,     adding submodules\n  
24689,     Remove unnecessary code\n  
24690,     Clean up of pal h\n  
24691,     New IsExecutable function\n  
24692,     New xunit tests for domainname and isexecutable\n  
24693,     added additional tests to ConvertTo-Csv tests\n  
24694,     Fix ConvertFrom-Csv failure\n  
24695,     Merge pull request 242 from dev/console-args into develop\n\nmade powershell work with additional argument logic\n  
24696,     Merge pull request 240 from dev/fix-pester into develop\n\nUse $here to avoid  cd $(PESTER) \n  
24697,     Use $here to avoid  cd $(PESTER) \n\nPer the Pester examples:    com/pester/Pester/blob/master/Examples/Calculator/Add-Numbers Tests ps1\n  
24698,     Merge pull request 243 from dev/submodules into develop\n\nRepin monad (and monad-ext)\n  
24699,     Repin monad (and monad-ext)\n  
24700,     Merge pull request 238 from dev/symlink into develop\n\nAdd tests for FQDN and SymLink\n  
24701,     made powershell work with additional argument logic\n  
24702,     Untabify Json Tests\n  
24703,     Merge pull request 241 from dev/json into develop\n\nAdd Json NET Pester tests\n  
24704,     Merge pull request 229 from dev/convertfrom-csv into develop\n\nadded ConvertFrom-Csv tests\n  
24705,     made changes according to PR\n  
24706,     Added Csv test file for Convertfrom-Csv\n  
24707,     Merge pull request 239 from dev/set-alias into develop\n\nMerge dev/set-alias to develop\n  
24708,     Update monad-native to fix Jenkins job\n\nmonad-native has a new target  `install` which places the native bits\ninto bin and lib folders  which here are prefixed to monad-linux \n\nNote that the location of native-tests xml has changed so that the\nmonad-native Jenkins build can pick it up \n  
24709,     Use `make install` target\n\nInstead of manually and always resolving to monad-linux/ bin lib   we\nuse the CMake `install()` command to generate a `make install` target\nwhich places powershell  libpshost  and libpsnative in\n$ CMAKE_INSTALL_PREFIX / bin lib  respectively  CMAKE_INSTALL_PREFIX\ndefaults to `/usr/local` which we will want upon actual package\ninstallation  During development  we will override this to be the path\nto monad-linux in the superproject s Makefile \n\nAlso move test output so monad-native Jenkins job can pick it up \n  
24710,     Add Json NET Pester tests\n  
24711,     Merge pull request 236 from dev/symlink-native into develop\n\nAdding new isSymLink() function\n  
24712,     corrected an issue with set-alias on linux\n  
24713,     added set-alias tests\n  
24714,     Add tests for FQDN and SymLink\n  
24715,     Added test to validate ConvertTo-Csv\n  
24716,     Merge pull request 233 from dev/update-monad into develop\n\nUpdate submodules\n  
24717,     Adding new isSymLink() function\n  
24718,     Update submodules\n\nThis brings in the updates to monad-native and monad-build necessary to\nbring in the updates to monad \n  
24719,     Merge pull request 230 from dev/console-prompt into develop\n\nMerge dev/console-prompt to develop\n  
24720,     added todo message for later completion\n  
24721,     Track develop branch of monad-native\n  
24722,     changed query to get the HOME environment variable  since that s what we re really going for and won t break under root\n  
24723,     added code to allow navigation via  by querying the environment variable   This appears to be how it s already done in linux\n  
24724,     added ConvertFrom-Csv tests\n  
24725,     Merge pull request 226 from dev/FQDN into develop\n\nMerge dev/FQDN to develop\n  
24726,     Change /bin/hostname to just hostname  and let sh figure out the path\n  
24727,     Add new getfullyqualifiedname test\n  
24728,     Skip getaddrinfo if hostname is already FQDN\n  
24729,     Merge pull request 224 from dev/defaults into develop\n\nAdd sensible defaults for powershell and coreclr\n  
24730,     Merge pull request 228 from dev/convertFrom-stringdata into develop\n\nadded convertFrom-StringData pester tests to parse structured data\n  
24731,     Merge pull request 225 from dev/defaults into develop\n\nMerge dev/defaults to develop\n  
24732,     added convertFrom-StringData pester tests to parse structured data\n  
24733,     Adding additional comments\n  
24734,     Fix distribution of  NET\n\nI still really don t like copying this around  but until we get using\nDNX  it s probably our best bet  Now  at least  the host can expect\nlib/ powershell coreclr  \n  
24735,     Update monad submodule because of monad-native\n\nmonad-native develop and monad got out of sync  this fixes that\n  
24736,     Update monad-native submodule\n\nTo bring in sensible default handling \n  
24737,     Add sensible defaults for powershell and coreclr\n  
24738,     Use defaults for PWRSH_ROOT and CORE_ROOT\n\nThis moves the PowerShell output to `lib/powershell` and copies the\n NET runtime assemblies to `lib/coreclr` \n  
24739,     made the text output b/w instead of white on a green background\n  
24740,     made debug text yellow and background the default color\n  
24741,     moved logic for prompt to prompt function  simplifying the main loop\n  
24742,     Change reference of GetComputerName\n  
24743,     Don t rm -rf tools on make distclean\n  
24744,     Merge branch  develop  into dev/FQDN\n  
24745,     Merge pull request 221 from dev/GetComputerName-Native into develop\n  
24746,     Changes per Zack comments\n  
24747,     Add GetFullyQualifiedName()\n  
24748,     Modify return value\n  
24749,     Merge pull request 223 from dev/powershell-run into develop\n  
24750,     Merge pull request 222 from dev/pop-location into develop\n  
24751,     deleted test1 method because it s no longer used\n  
24752,     modified the colors of the runtime shell to not look horrible\n  
24753,     added pop-location tests\n  
24754,     Remove <iostream>\n  
24755,     Remove debug output\n  
24756,     Remove W suffix of native function\n  
24757,     Merge pull request 219 from dev/temp into develop\n  
24758,     made the shell target have a TEMP directory of /tmp\n  
24759,     Simpliefied GetComputerName\n  
24760,     Merge pull request 215 from dev/build-refactor into develop\n  
24761,     Update monad-native submodule to merge commit\n  
24762,     Merge branch  dev/build-refactor  into develop\n\nNote that a subtree split took place  removing the src directory \n  
24763,     Add distclean-native target\n  
24764,     Fix recursive make test targets\n  
24765,     Fix make boostrap\n\nAgain\n  
24766,     Repin monad-native and monad-omi-provider\n  
24767,     Fix PSRP OMI provider name\n\nAnd add dependency on powershell-native\n  
24768,     Ignore clean failures\n  
24769,     Enable native tests with make\n  
24770,     Compile pshost with -fPIC\n\nSo that libpshost can be linked with shared libraries (like the OMI\nprovider) \n  
24771,     Fix make distclean bootstrap\n  
24772,     chmod -x monad-docker sh\n\nIt has function definitions and should be sourced  not executed \n  
24773,     Fix clean target\n  
24774,     Remove deprecated scripts directory\n\nShell-in-a-box Docker container might come back in the future \n  
24775,     Update submodules\n  
24776,     Add note on various tracing options\n  
24777,     Add more clean targets\n  
24778,     Add PSRP and OMI building\n\nRemoved OMI test targets as they can be run directly from the OMI\nfolder  and there is a separate Jenkins job that does so \n  
24779,     Fix IsHardLink() unit tests\n\nOur API as written says a file with no other links to it is not a\nhardlink  and a file with multiple links to it is a hardlink  Corrected\none test and added an additional \n  
24780,     Add monad-build submodule\n  
24781,     Add Pester tests\n  
24782,     Note that hashbang needs to be fixed\n  
24783,     Export POWERSHELL_SIMPLE variable\n  
24784,     Update library names\n\n- libps to libpsnative\n- ps_test to PowerShell Linux Test\n  
24785,     Start build refactor with top-level Makefile\n\n- Recursively calls make in monad-linux and monad-build\n- Eventually will deprecate scripts dir\n- Makes monad-docker sh shareable\n  
24786,     Require absolute path to assembly\n\nRather than assuming that it s in the current directory  Later this will\nbe refactoring to choose the appropriate host assembly (for an\ninteractive shell  script  command list  or self-test) from the\n`PWRSH_ROOT` path \n  
24787,     Output psnative and pshost to monad-linux/bin\n\nBut leave test artifacts in monad-native \n  
24788,     Update gitignore\n  
24789,     Enable unit testing via CMake\n  
24790,     Resurrect  gitignore\n  
24791,     Rename libps to libpsnative\n\nAnd impl to native\n  
24792,     Resurrect  gitmodules after subtree split\n\nRemoved src intermediate directory\n  
24793,     Merge branch  dev/HardLink-Native  into dev/username\n  
24794,     Rename host_cmdline to powershell\n  
24795,     Remove deprecated GetCPInfo code\n  
24796,     Refactor CMake build system and host files\n\nUse CMakeLists txt file for each directory  Setup to be consumed by\nmonad-linux s CMake  Utilize GoogleTest s CMake  Refactor host files\nlayout \n  
24797,     Return char* for GetUserName\n\nThe UTF-8 char* is marshaled to a UTF-16 string automatically  It must\nbe allocated on the heap as the CLR will free the returned memory \n\nThis removes entire classes of possible errors  greatly reducing the\ncode complexity and number of tests \n  
24798,     GetLinkCount is not Unicode\n  
24799,     Merge pull request 210 from develop into master\n  
24800,     Update readme\n  
24801,     Conditionalize extern  C \n  
24802,     Conditionalize extern  C \n  
24803,     Merge pull request 207 from dev/set-location into develop\n  
24804,     Adding native tests\n  
24805,     Merge pull request 209 from dev/validate-pester into develop\n  
24806,     Fix startDirectory\n\nNeeded to move initial tests below the assignment\n  
24807,     Ignore dirty pester submodule\n\nThe pester-self-tests leave behind unignored artifacts\n  
24808,     Fix some Pester self-tests\n  
24809,     Add $(SCRIPTS) variable\n  
24810,     Added code that runs the pester tests  verifying that the unit test framework works as expected\n  
24811,     Merge pull request 208 from dev/host_cmdline into develop\n  
24812,     Update monad-native submodule\n  
24813,     Remove -alc from host_cmdline arguments\n  
24814,     Use PWRSH_ROOT instead of -tpa\n  
24815,     Use CORE_ROOT instead of -c\n  
24816,     fixed issue with ending the test suite correctly   The current method is still brittle  however  so we shall have to come up with a better solution soon\n  
24817,     Merge pull request 201 from dev/libhost into master\n  
24818,     fixed test issue causing issues with other tests\n  
24819,     New GetLinkCount()\n  
24820,     1  renamed Test-Push-Location to be in line with new naming standards \n2  Set-Location: moved the start directory assignment into a context\nblock because of powershell/pester quirks\n  
24821,     added set-location tests\n  
24822,     Update libpshost comments\n  
24823,     Update libpshost comments\n  
24824,     Remove deprecated functions from coreclrutil\n\nUsing `getcwd()` in main for resolving relative to the current working\ndirectory removed the last public use of `GetAbsolutePath()`  so\n`coreclrutil h` is now stricly `extern  C ` \n  
24825,     Remove deprecated functions from coreclrutil\n\nUsing `getcwd()` in main for resolving relative to the current working\ndirectory removed the last public use of `GetAbsolutePath()`  so\n`coreclrutil h` is now stricly `extern  C ` \n  
24826,     Remove deprecated hostutil and tests\n  
24827,     Remove deprecated hostutil and tests\n  
24828,     Rename variables and reorganize\n  
24829,     Rename variables and reorganize\n  
24830,     fixup! Clean up error codes\n  
24831,     fixup! Clean up error codes\n  
24832,     Move appPath and nativeDllSearchDirs to libpshost\n\n- for PowerShell  the `appPath` is the path to the PowerShell libraries\n  and consoles  i e   `PWRSH_ROOT`\n\n- the `nativeDllSearchDirs` is just `appPath` plus `CORE_ROOT`\n\n- probably should parse and add `LD_LIBRARY_PATH` to `appPath`\n\nThis refactors the last vestiges of command line arguments out of the\ncommand-line host and into libpshost  where all necessary questions are\nanswered either automatically or through the two introduced environment\nvariables (`CORE_ROOT` and `PWRSH_ROOT`) \n  
24833,     Move appPath and nativeDllSearchDirs to libpshost\n\n- for PowerShell  the `appPath` is the path to the PowerShell libraries\n  and consoles  i e   `PWRSH_ROOT`\n\n- the `nativeDllSearchDirs` is just `appPath` plus `CORE_ROOT`\n\n- probably should parse and add `LD_LIBRARY_PATH` to `appPath`\n\nThis refactors the last vestiges of command line arguments out of the\ncommand-line host and into libpshost  where all necessary questions are\nanswered either automatically or through the two introduced environment\nvariables (`CORE_ROOT` and `PWRSH_ROOT`) \n  
24834,     Clean up error codes\n  
24835,     Clean up error codes\n  
24836,     Remove base_path and load_context_assembly\n\n- libpshost resolves the absolute path to the PowerShell binaries from\n  the environment variable PWRSH_ROOT\n\n- libpshost assumes that PowerShell s AssemblyLoadContext dll exists in\n  PWRSH_ROOT and loads during `startCoreCLR()`\n\n- libicu is now only used by libpshost; note that an icu::UnicodeString\n  is UTF-16  and endianness does not matter (see\n     icu-project org/strings#TOC-ICU:-16-bit-Unicode-strings)\n  
24837,     Remove base_path and load_context_assembly\n\n- libpshost resolves the absolute path to the PowerShell binaries from\n  the environment variable PWRSH_ROOT\n\n- libpshost assumes that PowerShell s AssemblyLoadContext dll exists in\n  PWRSH_ROOT and loads during `startCoreCLR()`\n\n- libicu is now only used by libpshost; note that an icu::UnicodeString\n  is UTF-16  and endianness does not matter (see\n     icu-project org/strings#TOC-ICU:-16-bit-Unicode-strings)\n  
24838,     Refactor tpaList into libpshost\n  
24839,     Refactor tpaList into libpshost\n  
24840,     Merge pull request 206 from dev/rename-pester-tests into develop\n  
24841,     Merge pull request 203 from dev/submodules into develop\n  
24842,     Merge pull request 205 from dev/push-location into develop\n  
24843,     removed old naming scheme references\n  
24844,     remove reference to old naming convention in the Describe block\n  
24845,     tabs to spaces\n  
24846,     rename pester tests to something less redundent\n  
24847,     added a return to the starting directory\n  
24848,     Refactor into GetEnvAbsolutePath()\n  
24849,     Refactor into GetEnvAbsolutePath()\n  
24850,     cleaned up formatting\n  
24851,     added push-location tests\n  
24852,     Remove currentExeAbsolutePath\n  
24853,     Remove currentExeAbsolutePath\n  
24854,     Fix warning in GetDirectory()\n  
24855,     Fix warning in GetDirectory()\n  
24856,     Remove coreclr_path\n\nObtained via CORE_ROOT  like on Windows \n  
24857,     Remove coreclr_path\n\nObtained via CORE_ROOT  like on Windows \n  
24858,     Move start/stop functions\n  
24859,     Move start/stop functions\n  
24860,     Reconcile with coreruncommon cpp\n  
24861,     Reconcile with coreruncommon cpp\n  
24862,     Rename to (start|stop)CoreCLR()\n  
24863,     Rename to (start|stop)CoreCLR()\n  
24864,     Remove CoreCLRUtil namespace\n\nSo that is all accessible from C\n  
24865,     Remove CoreCLRUtil namespace\n\nSo that is all accessible from C\n  
24866,     Add  src/host/unixcoreruncommon/  from commit  a566a181a076f4fa49f4874934c080309424bd6c \n\ngit-subtree-dir: src/host/unixcoreruncommon\ngit-subtree-mainline: ba972b0113d26313113f7fb0c06d6348202e5aa5\ngit-subtree-split: a566a181a076f4fa49f4874934c080309424bd6c\n  
24867,     Add  src/host/unixcoreruncommon/  from commit  a566a181a076f4fa49f4874934c080309424bd6c \n\ngit-subtree-dir: src/host/unixcoreruncommon\ngit-subtree-mainline: ba972b0113d26313113f7fb0c06d6348202e5aa5\ngit-subtree-split: a566a181a076f4fa49f4874934c080309424bd6c\n  
24868,     Merge pull request 204 from dev/new-alias into develop\n  
24869,     Added new-alias pester tests\n  
24870,     Update cppunit and pester\n  
24871,     Merge pull request 198 from dev/set-psdebug into develop\n  
24872,     Merge pull request 202 from dev/set-psbreakpoint into develop\n  
24873,     fixed typo\n  
24874,     added testable script for testing script calls   Currently required by set-psbreakpoint\n  
24875,     Pin monad and pester submodules to develop branchs\n\nThis only affects updating with `git submodule update --remote`  which\nwill fetch and checkout the corresponding branch (defaulting to master\nfor most of our submodules) instead of the recorded commit \n\nNote that the submodule will still be checked out to a detached head  as\nit should be \n  
24876,     added set-psbreakpoint tests\n  
24877,     Refactor most CLR code into libpshost\n  
24878,     Refactor most CLR code into libpshost\n  
24879,     Reindent host code using project standards\n  
24880,     Reindent host code using project standards\n  
24881,     Use stream in one statement\n\nThis just really bugged me and I had it stashed from earlier\n  
24882,     Use stream in one statement\n\nThis just really bugged me and I had it stashed from earlier\n  
24883,     Merge pull request 200 from dev/Pester-linux-fix into develop\n  
24884,     Merge pull request 199 from dev/move-monad into develop\n  
24885,     Move monad to msostc\n\nRun `git submodule sync` to update monad\ s remote \n\ndiff --git c/ gitmodules i/ gitmodules\nindex 61529ee9f  3794c1aa8 100644\n--- c/ gitmodules\n+++ i/ gitmodules\n@@ -1 6 +1 6 @@\n [submodule  src/monad  \n \tpath = src/monad\n-\turl =    visualstudio com/DefaultCollection/PowerShell Monad/_git/monad-sync1\n+\turl =    visualstudio com/DefaultCollection/PS/_git/monad\n [submodule  ext-src/cppunit  \n \tpath = ext-src/cppunit\n \turl = git://anongit freedesktop org/git/libreoffice/cppunit/\n  
24886,     assigned TEMP environment variable when make shell\n  
24887,     added set-debug tests\n  
24888,     Merge pull request 197 from dev/repin-monad into develop\n  
24889,     Repin monad submodule\n\nStill on microsoft visualstudio com  but repinned to latest fixes on\ndevelop branch \n  
24890,     Merge pull request 196 from dev/fix-hashbang into develop\n  
24891,     Make runps-file to use runps-simple & script ps1\n\nWorks much better  Removes dependency on `--file` switch in our\nexecutable (which is not a PowerShell thing) and instead uses the\ncanonical method of launching a script/executable in PowerShell (the\nampersand)  Coincidentally  this now makes the output not depend on a\nTTY  and so `monad-run make hashbang-tests` now works as expected \n  
24892,     Fix bug in hashbang-tests target\n  
24893,     Merge pull request 195 from dev/import-csv into develop\n  
24894,     Fix pester-tests relative file handling\n\n- `APP_BASE` was made into an absolute path\n- `% ps1` target now runs without `--file` but instead with `&`\n- ^ also cd s into pester-tests first\n  
24895,     Rename TestAssets to assets\n  
24896,     added line to copy TestAssets directory over to working directory used in the build process\n  
24897,     Added a test assets folder to contain csv/html/xml/json/etc files required for reading in\n  
24898,     Added import-csv test suite\n  
24899,     Merge pull request 193 from dev/console-monad-linux into develop\n  
24900,     Merge pull request 191 from dev/omi-build into develop\n  
24901,     Repin monad-native with library refactor\n  
24902,     Refactor host_common into pshost static lib\n\nFor reuse by psrp provider\n  
24903,     Refactor host_common into pshost static lib\n\nFor reuse by psrp provider\n  
24904,     Merge branch  dev/console-monad-linux  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/console-monad-linux\n  
24905,     removed dangling variable and cleaned up space\n  
24906,     removed dangling variable\n  
24907,     added functionality to get standard default command prompt\n  
24908,     Merge pull request 192 from dev/Get-Random2 into develop\n  
24909,     Fix Minimum test bug\n  
24910,     Teach Git to ignore indicationlog\n\nTest output from OMI\n  
24911,     Update omi s gitignore\n  
24912,     Update OMI build so Make is always called\n  
24913,     Merge pull request 184 from dev/build-omi into develop\n  
24914,     Added omi tests to master rule\n  
24915,     Pick up omi fixes for options\n  
24916,     Merge pull request 188 from dev/export-csv2 into develop\n  
24917,     Merge pull request 186 from dev/console into develop\n  
24918,     Added pester tests for Export-Csv cmdlet\n  
24919,     Remove Console WriteLine(HandleControlC)\n\nCtrl-C works  If a command is running  it stops it and returns  If one\nis not running  it seems to  suspend  the readline until enter is\npressed again \n  
24920,     Remove deprecated init() function\n  
24921,     Change console prompt\n  
24922,     Updated Native Tests md\n  
24923,     Merge pull request 185 from dev/fix-parallel-build into develop\n  
24924,     Fix build of monad-native\n\nMoved recursive make into phony target  This is okay because the called\nmake does not rebuild things  The calling make no longer flails about\nwhen trying to make the three monad-native targets \n  
24925,     Fix TypeCatalogGen exe dependencies\n\nNuGet packages referenced as dependencies needed to depend on buildtemp\nas well \n  
24926,     Ignore errors from clean targets\n  
24927,     Add cleaning targets for PSRP\n  
24928,     Fix OMI dependency for provider\n  
24929,     Add OMI targets to Makefile\n\nRecursively builds OMI and the TestShell provider  The OMI tests\ncurrently do not pass and so have not been added to `make test` \n  
24930,     Update the omi and provider submodules so that they build\n  
24931,     Update readme\n  
24932,     Merge pull request 178 from develop into master\n  
24933,     Merge pull request 183 from dev/omi into develop\n  
24934,     Add src/omi submodule at OMI-Shell/OMI-PSRP-Support\n  
24935,     Add src/monad-omi-provider\n  
24936,     Merge pull request 182 from dev/select-object into develop\n  
24937,     Merge pull request 181 from dev/rebuild into develop\n  
24938,     Changes per pull request 182 comments\n  
24939,     Clean up cruft\n  
24940,     Refactor exec_env setup  can now build in parallel\n\nWith dependencies setup correctly  `make -j` now works as\nexpected  `prepare` target came back under a new role  to setup the\napplication base and CoreCLR in the execution environment \n\nNote that `$(APP_BASE)` is a phony target because we always want a clean\ndeployment  Cannot `rm -rf exec_env` because it conflicts with\n`$(CORECLR)` when run in parallel \n  
24941,     Factor out relative paths in Makefile\n\nThey make for terrible headaches \n  
24942,     Fix missing dependency for PowerShell Security dll\n  
24943,     Refactor xUnit build\n\n`ps_test dll` is now built in dotnetlibs  and copied along with xUnit\nlibraries during `internal-prepare-exec_env` \n\nBuild process now creates things only as needed \n  
24944,     Improved readability of some variables\n  
24945,     Move libps build out of buildtemp\n  
24946,     Refactor use of dotnetlibs for reduced rebuilding\n\nAlso cleaned up Makefiles   Added `scripts/dotnetlibs` back to Git so\nMake doesn t ever have to create it (now I understand Peter s reasoning\nhere) \n  
24947,     Add new pester test for Select-Object cmdlet\n  
24948,     Adding a new test utility file that contains mocks and functions\n  
24949,     Refactor prepare target for non-phony buildtemp\n\n- buildtemp  being non-phony  won t cause a recompilation every run\n- rearranged where appropriate for better use of $<\n  
24950,     Remove PRODUCT_BASE_REFS\n  
24951,     Fix IMPERSONATE=false\n  
24952,     Merge pull request 180 from dev/tests into develop\n  
24953,     Rename XML test results\n  
24954,     Enable XML output for native tests\n  
24955,     Add pestertests xml to cleanall target\n  
24956,     Merge pull request 179 from dev/pester-xml into develop\n  
24957,     Enable XML output for Pester\n\n- Taught Git to ignore XML output\n- Updated Pester submodule with fixes\n- Enabled reporting in Pester Makefile target\n  
24958,     Merge pull request 176 from dev/make into develop\n  
24959,     Add basic Hello World program for easier testing\n\nWe can use this to assert simple things about  NET Core (our build in\nparticular) for easier debugging \n  
24960,     Fix  Hello World  target\n  
24961,     Add build sh back as wrapper to monad-run\n\nFixes CI and lets us remove it at a later date \n  
24962,     Build from scripts again\n  
24963,     Fix mkdir\n  
24964,     Add  Hello World  exe target\n\nCompile with monad-run make HelloWorld exe  given a HelloWorld cs  Will\ncompile with our  NET Core  and output how to run  Does not support\nmultiple files \n  
24965,     Merge pull request 177 from dev/runtime into develop\n  
24966,     Remove workaround for missing Reflection Metadata\n\n- monad-ext updated to contain missing libraries\n- monad updated to remove workaround\n  
24967,     Alias shell to run-interactive\n  
24968,     Remove deprecated scripts\n  
24969,     Replace docker build scripts\n\nImport the functions into your shell  `source scripts/monad-docker sh` \nthen run `monad-run make test` or `monad-tty make run-interactive` from\n`monad-linux`  Top level `Makefile` passes to `scripts/Makefile` \n  
24970,     Merge pull request 175 from dev/clean-cliargv into develop\n  
24971,     Implement simpler use of CommandLineToArgv\n\nReduced code churn from monad s master branch (aka Source Depot)\n  
24972,     Merge pull request 174 from dev/get-psprovider into develop\n  
24973,     Added Get-PSProvider unit tests\n  
24974,     Merge pull request 173 from dev/cliargv into develop\n  
24975,     bringing in committed monad changes\n  
24976,     Merge pull request 172 from dev/get-itemproperty into develop\n  
24977,     Merge pull request 171 from dev/dotnetapi into develop\n  
24978,     added get-itemproperty tests\n  
24979,     added tests to ensure that powershell can interface with the dotnet api\n  
24980,     added unit tests for CommandLineToArgvW in Linux\n  
24981,     added unit test to verify functionality of CommandLineArgvW in linux\n  
24982,     Some readme cleanups\n  
24983,     Update readme\n  
24984,     Merge pull request 170 from develop into master\n  
24985,     Merge pull request 169 from dev/cache-nuget into develop\n  
24986,     Cache nuget exe in scripts\n\nRather than downloading nuget exe on every run  we can cache it  just\nnot in monad-ext with a rule to copy it  Instead  there s a rule to\nrefresh it from its canonical home \n\nSee    nuget org/index html\n  
24987,     Merge pull request 168 from dev/clean-up-makefile into develop\n  
24988,     Clean up Makefile\n\n- Use explicit versions of NuGet packages\n- Removed cruft\n- Use MONO_PATH over cp\n- Remove nuget exe on cleanall\n- Patch version bump of Reflection Metadata and Collections Immutable\n  
24989,     Merge pull request 167 from dev/update-coreclr into develop\n  
24990,     Use nuget -restore functionality\n\n- Download nuget exe from its official home\n- Remove beta nuget exe from monad-ext\n- Specify dependencies in packages config and use nuget exe -restore\n- Add prepare dependency to package libraries\n- No more manual prepare step\n- Update  gitignore\n  
24991,     Update Roslyn compiler\n\nPrior package was last updated 2015-05-20 and was prerelease  New\npackage is stable at 1 0 0 from 2015-07-13 \n\n   nuget org/packages/Microsoft Net Compilers/\n  
24992,     Improve lipbs build\n\n- Use $(MAKE) -C like the good developers intended\n- Use -j flag for practically instant libps compilation\n- DRY the dependencies and copies\n  
24993,     Improve make clean  cleanall  clean-native\n\n- Use clean-native to clean the native library\n- Remove buildtemp and dotnetlibs from Git  mkdir on demand\n  
24994,     Update CoreCLR/CoreFX to TFS build 23214\n\n- Repins monad-ext to master  which was reset to the CoreCLR/FX update \n- Fixes Makefile for restructuring of monad-ext/coreclr\n- Repins monad with fix for lack of System Reflection Metadata\n- Updates build mapping for repin of monad\n  
24995,     Update monad submodule to master\n\nIncludes updated  gitignore\n  
24996,     Ignore  bash_history from Docker\n  
24997,     Ignore more things\n  
24998,     Merge pull request 166 from dev/group-object-pester into develop\n  
24999,     added group-object tests\n  
25000,     Merge pull request 165 from dev/compare-object-pester into develop\n  
25001,     Added Compare-Object tests\n  
25002,     Merge pull request 164 from dev/get-unique-pester into develop\n  
25003,     added get-unique pester tests\n  
25004,     Merge pull request 163 from dev/265-format-wide into develop\n  
25005,     Added Format-Wide Pester tests\n  
25006,     Merge pull request 155 from dev/115-get-psdrive into develop\n  
25007,     added test to validate that alias and Cmdlet produce the same output\n  
25008,     Merge pull request 160 from dev/263-set-variable into develop\n  
25009,     fixed test according to code review\n  
25010,     Merge branch  develop  into dev/263-set-variable\n  
25011,     Merge pull request 157 from dev/259-new-variable into develop\n  
25012,     Merge branch  develop  into dev/259-new-variable\n  
25013,     Merge pull request 158 from dev/260-remove-variable into develop\n  
25014,     fixed typo in last test\n  
25015,     Merge branch  develop  into dev/260-remove-variable\n  
25016,     Merge pull request 156 from 261/get-variable into develop\n  
25017,     Merge branch  develop  into 261/get-variable\n  
25018,     Merge pull request 159 from dev/262-clear-variable into develop\n  
25019,     Merge branch  develop  into dev/262-clear-variable\n  
25020,     Added clear-variable pester tests\n  
25021,     Use bash  not sh\n  
25022,     Merge branch  develop  into dev/263-set-variable\n  
25023,     Added set-variable tests\n  
25024,     Added remove-variable pester tests\n  
25025,     Added new-variable pester tests\n  
25026,     Merge pull request 161 from documentation into develop\n  
25027,     Merge branch  develop  into dev/115-get-psdrive\n  
25028,     Merge pull request 148 from dev/188-get-content-add-tests into develop\n  
25029,     Merge branch  develop  into dev/188-get-content-add-tests\n  
25030,     Merge pull request 147 from dev/240-getrandom into develop\n  
25031,     Merge branch  develop  into dev/240-getrandom\n  
25032,     added Get-Variable tests\n  
25033,     Merge pull request 145 from dev/208-select-string-pester into develop\n  
25034,     Merge branch  develop  into dev/208-select-string-pester\n  
25035,     Merge pull request 162 from repin into develop\n  
25036,     Repin monad-native with updated gitignore\n  
25037,     Repin monad-ext with System Console patch\n  
25038,     Repin monad to 2015-10-01\n  
25039,     Run sudo with --set-home\n  
25040,     Ignore NuGet folders\n  
25041,     Make impersonation switchable\n\nUseful when debugging issues with root vs non-root\n  
25042,     Run as local user inside Docker container\n  
25043,     Refactor build sh\n\n- build sh runs non-interactively\n- build-tty sh runs interactively with a pseudo tty\n- both are shims to build-run sh\n- monad-native no longer depends on a tty\n  
25044,     Create TypeCatalogGen exe input  powershell inc\n\nPrevious attempt at this failed because it is not actually a Makefile \n  
25045,     Updated Pester Tests md\n  
25046,     Ignore libps so\n  
25047,     Updated Pester Tests md\n  
25048,     Updated Pester Tests md\n  
25049,     Added file Native Tests md\n  
25050,     Added file xUnit Tests md\n  
25051,     Deleted /docs/xUnit Tests\n  
25052,     Updated xUnit Tests\n  
25053,     Added file xUnit Tests\n  
25054,     Added file Pester Tests md\n  
25055,     Updated Testing md\n  
25056,     fixed markdown\n  
25057,     initial commit\n  
25058,     initial commit\n  
25059,     Merge pull request 154 from dev/252-getusername into develop\n  
25060,     Use getpwuid(geteuid()) instead of getlogin()\n\nThis removes the dependency on a TTY and now does what is expected: gets\nthe (possibly impersonated) username of the current process/thread \n\nImplementation and tests updated  still uses reentrant versions where possible \n  
25061,     Use getpwuid(geteuid()) instead of getlogin()\n\nThis removes the dependency on a TTY and now does what is expected: gets\nthe (possibly impersonated) username of the current process/thread \n\nImplementation and tests updated  still uses reentrant versions where possible \n  
25062,     fixed up tests to test standards\n  
25063,     minor typo fixing\n  
25064,     Merge pull request 151 from dev/248-cleanup into develop\n  
25065,     Refactor to use $(APP_BASE)\n\nNow that everything is run from exec_env/app_base  we can reuse it and\nremove TESTRUN_FOLDER \n  
25066,     implemented changes from code review\n  
25067,     merging develop into branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/188-get-content-add-tests\n  
25068,     fixed a bug in final test to verify that we can get-content in different drives \n  
25069,     Fix rm\n  
25070,     Refactor NuGet install step\n  
25071,     Delete xunittests xml on make clean\n  
25072,     Remove unneeded strings folders\n  
25073,     Remove src/linux\n\nIt was a deprecated experiment\n  
25074,     Refactor Makefile\n\n- Update variable names\n- Remove no longer used variables\n- Include coreref and tests directly (now that they re short)\n  
25075,     Merge pull request 150 from dev/242-noinlining into develop\n  
25076,     Repin monad with removal of NoInlining attributes\n\nSwitching to Roslyn from Mono in PR 17 made this possible \n  
25077,     minor typo fixes\n  
25078,     merging in monad changes required to fix get-content -tail bug\n  
25079,     added changes from code review\n  
25080,     merging in changes from dev/updates\nMerge branch  dev/updates  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/188-get-content-add-tests\n  
25081,     Merge pull request 149 from dev/updates into develop\n  
25082,     Repin monad and build mapping\n\nMonad submodule has been squashed and rebased to new PowerShell branch \nth2_srv1_mgmt_dev  Build system has been updated to include upstream\nchanges  as well as the addition of CorePsPlatform cs to the PowerShell\nbuild system (so it longer needs to be added automatically) \n  
25083,     Ignore CS170 1 2  C# compiler warnings\n  
25084,     added more pester tests\n  
25085,     Changed to Select-String Pester tests based off of feeddback from pull request\n  
25086,     Added pester tests for Get-Random\n  
25087,     Merge pull request 129 from dev/184-New-Item-pester into develop\n  
25088,     incorporating updates to monad\n  
25089,     incorporated changes to pester tests from code review\n  
25090,     pulling in updates from develop\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/184-New-Item-pester\n  
25091,     Merge pull request 119 from dev/180-out-file into develop\n  
25092,     incorporated final changes to pester tests\n  
25093,     brought monad up to date with latest PSL changes\n  
25094,     brought out-file branch up to date with latest develop branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/180-out-file\n  
25095,     made changes based off of feedback\n  
25096,     Added popd\n  
25097,     Pesters tests for Select-String\n  
25098,     Merge pull request 138 from dev/183-test-path-pester into develop\n  
25099,     added additional testing according to code review\n  
25100,     Merge pull request 144 from dev/repin-monad into develop\n  
25101,     Repin monad to latest fixes\n\nResolves all approved work items prior to resubmission of a code review\nto the PowerShell team \n  
25102,     Merge branch  develop  into dev/repin-monad\n  
25103,     added changes from code review testing credentials\n  
25104,     Merged in upstream changes into branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/184-New-Item-pester\n  
25105,     Merge pull request 137 from dev/158-ishardlink-xunit into develop\n  
25106,     merging upstream changes into branch\nMerge branch  dev/158-ishardlink-xunit  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/158-ishardlink-xunit\n  
25107,     fixed typo\n  
25108,     changed according to code review\n  
25109,     merged upstream changes inside monad\n  
25110,     merging upstream changes from the develop branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/158-ishardlink-xunit\n  
25111,     modified test code according to code review\n  
25112,     Update xUnit tests for AMSI and repin monad\n\nIncludes lots of fixes to monad \n  
25113,     Merge pull request 143 from dev/228-braces into develop\n  
25114,     Missed a pair\n  
25115,     Swap    for () in Makefile\n\nParentheses are more portable  There was an inconsistent mix of\nparentheses and curly braces \n  
25116,     Merge pull request 142 from dev/199-security into develop\n  
25117,     Add Security dll reference for Commands Management dll\n\nWhile enabling previously disabled code in `cimConverter cs`  it was\nrevealed that `Microsoft PowerShell Commands Management dll` has a\ndependency on `Microsoft PowerShell Security dll` for the type\n`SecurityDescriptorCommandsBase` \n  
25118,     merging upstream changes to local branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/180-out-file\n  
25119,     Merge pull request 141 from dev/175-run-ps-from-xunit into develop\n  
25120,     added a simple test that creates a full PS Runspace and executes a script\n  
25121,     Merge pull request 139 from dev/226-auto-coreref into develop\n  
25122,     Generate $COREREF in Makefile automatically\n\nPreviously generated by hand and saved  Now will update itself\nautomatically when monad-ext/coreclr is updated \n  
25123,     Added test suite for Test-Path cmdlet\n  
25124,     Repin monad\n  
25125,     added unit test for additional failure cases and removed unneeded code from existing unit tests\n  
25126,     added fail under directory as input unit test\n  
25127,     bringing implementation code up-to-date with the test code\n  
25128,     implemented xunit tests for testing isHardLink using a fileSystem object\n  
25129,     Merge pull request 135 from dev/209-make-script into develop\n  
25130,     Make path relative to monad-linux/scripts\n\nSince that s where the Makefile lives\n  
25131,     Add `make script ps1` target for easy testing\n\nUse like `make src/pester-tests/Test-Split-Path Tests ps1`\n  
25132,     Merge pull request 134 from dev/tests into develop\n  
25133,     Repin monad and monad-native\n\n- GetCpInfo fixes monad-native compiler warning\n- monad has more fixes\n  
25134,     Refactor test targets\n  
25135,     Merge pull request 122 from dev/112-split-path-pester into develop\n  
25136,     Ignore Remove-Item errors in Split-Path setup\n  
25137,     Refactor Split-Path regexp test\n\nFix issues with ordering etc \n  
25138,     Merge branch  develop  into dev/112-split-path-pester\n  
25139,     Match array instead of testing elements\n\nSo that we can ignore the ordering from the regexp\n  
25140,     fixed unordering of files created during test\n  
25141,     Merge pull request 113 from dev/8-getcpinfo into develop\n  
25142,     Fix GetCpInfo\n\n- Move cpinfo related code out of pal h and into getcpinfo h\n- Use static cpinfo struct (not pointer) in test and pass address\n- Whitespace cleanup\n  
25143,     Fix GetCpInfo\n\n- Move cpinfo related code out of pal h and into getcpinfo h\n- Use static cpinfo struct (not pointer) in test and pass address\n- Whitespace cleanup\n  
25144,     Got rid of warnings from cpinfo struct\n  
25145,     Got rid of warnings from cpinfo struct\n  
25146,     Changes to documentation\n  
25147,     Changes to documentation\n  
25148,     Merge pull request 133 from dev/164-GetComputerName-cherry into develop\n  
25149,     Fix GetComputerName xUnit test and repin monad\n  
25150,     added unit test for getting the machine name from the p/invoke\n  
25151,     Merge pull request 121 from dev/182-remove-item into develop\n  
25152,     Merge pull request 132 from dev/193-repin-monad into develop\n  
25153,     Pin src/monad to develop-2015-08-28\n\nBuild files updated  Patches squashed and rebased \n  
25154,     fixing issue with errorAction not suppressed- produces false positives on the test logs\n  
25155,     added modifications from code review \n  
25156,     merging latest remote develop branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/182-remove-item\n  
25157,     bringing submodules up to date\n  
25158,     using a created temp directory instead of the root temp directory \n  
25159,     Deleted CMakeCache txt\n  
25160,     Deleted CMakeCache txt\n  
25161,     Merge Conflict\n  
25162,     Merge Conflict\n  
25163,     Get rid of merge conflict\n  
25164,     Get rid of merge conflict\n  
25165,     Added logic to handle failing jenkins test\n  
25166,     Merge Conflict\n  
25167,     Merge Conflict\n  
25168,     added tests from CR\n  
25169,     added code review changes\n  
25170,     Got rid of merge conflict\n  
25171,     Got rid of merge conflict\n  
25172,     added New-Item Test Suite\n  
25173,     made changes based on feedback from pull request\n  
25174,     made changes based on feedback from pull request\n  
25175,     turned repeated string into a variable\n  
25176,     re-ordered tests to indicate a logical progression to facilitate\ndebugging\nadded tests to validate individual environmental variables\n  
25177,     added tests to validate individual environmental variables\n  
25178,     deleted superfluous assertion\n  
25179,     modified to work under jenkins\n  
25180,     updating branch\nMerge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/171-environmental-variable-test-bug\n  
25181,     Merge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/112-split-path-pester\n\nConflicts:\n\tsrc/monad\n  
25182,     added environment variable tests\n  
25183,     removed typos\n  
25184,     Refactor host usage\n\nBuild scripts and powershell-simple cs were refactored to work with the\npatch to CoreCLR and updated hosting code \n\n- Paths in Makefile were fixed because the hosting code runs the\n  assembly from the current working directory (usually app_base)\n- runps scripts were all fixed because the hosting code CLI changed\n- powershell-simple cs was cleaned up because its Main function is now\n  directly executed\n- monad submodule was repinned while we had the change\n- monad-ext submodule was updated with rebuild CoreCLR binaries\n- monad-native submodule was repinned to development  including fixed\n  test and hosting code changes\n  
25185,     Remove type_name and function_name from host\n\nCustom hosting code was refactored to take a path to an assembly instead\nof an assembly name coupled with a type and function to\nexecute  Instead  the host now directly executes the given assembly \ncalling its Main function \n\nThe path is resolved relative to the current directory  as should be\nexpected \n  
25186,     Remove type_name and function_name from host\n\nCustom hosting code was refactored to take a path to an assembly instead\nof an assembly name coupled with a type and function to\nexecute  Instead  the host now directly executes the given assembly \ncalling its Main function \n\nThe path is resolved relative to the current directory  as should be\nexpected \n  
25187,     Merge pull request 123 from dev/123-main into develop\n  
25188,     Merge pull request 123 from dev/123-main into develop\n  
25189,     Call into Main of PowerShell assembly\n\nInstead of UnmanagedMain  Requires patch to CoreCLR (submitted upstream\nbut backported until we ve integrated their work) \n  
25190,     Call into Main of PowerShell assembly\n\nInstead of UnmanagedMain  Requires patch to CoreCLR (submitted upstream\nbut backported until we ve integrated their work) \n  
25191,     added testing code to call into Main\n  
25192,     added testing code to call into Main\n  
25193,     Fixed whitespace and directory test assertions\n  
25194,     removed AfterEach block because it s not required\n  
25195,     fixed typo using parent switch\n  
25196,     brought in submodule changes and modded test to not expect the / to be removed in the path\n  
25197,     Merge pull request 102 from dev/9-getcomputername into develop\n  
25198,     Merge pull request 102 from dev/9-getcomputername into develop\n  
25199,     made changes based on feedback from pull request\n  
25200,     made changes based on feedback from pull request\n  
25201,     changes back on feedback from pull request\n  
25202,     changes back on feedback from pull request\n  
25203,     added tests to get working in linux\n  
25204,     added pester tests for out-file and got running in linux\n  
25205,     Added changed from feedback from Andy\n  
25206,     Added changed from feedback from Andy\n  
25207,     added support for PSL to remove qualifiers correctly\n  
25208,     added more tests to more thoroughly test split-path\n  
25209,     implemented suggested changes based off of feedback\n  
25210,     implemented suggested changes based off of feedback\n  
25211,     Merge remote-tracking branch  origin/develop  into dev/8-getcpinfo\n  
25212,     Merge remote-tracking branch  origin/develop  into dev/8-getcpinfo\n  
25213,     No longer defining LPSTR\n  
25214,     No longer defining LPSTR\n  
25215,     Changes to make converting beteween UTF8 and UTF16\n  
25216,     Changes to make converting beteween UTF8 and UTF16\n  
25217,     Added changes based of feedback from Peter\n  
25218,     Added changes based of feedback from Peter\n  
25219,     Use libicu properly in tests\n  
25220,     Use libicu properly in tests\n  
25221,     Use libicu properly for UTF-16 conversion\n\n- No more messy calculations\n- Only one include  not four\n- No resizing\n- No memcpy\n- Faster because of fromUTF8()\n  
25222,     Use libicu properly for UTF-16 conversion\n\n- No more messy calculations\n- Only one include  not four\n- No resizing\n- No memcpy\n- Faster because of fromUTF8()\n  
25223,     Use known size instead of calculation\n  
25224,     Use known size instead of calculation\n  
25225,     Use just LOGIN_NAME_MAX\n\nThe +1 is unnecessary since LOGIN_NAME_MAX includes null \n  
25226,     Use just LOGIN_NAME_MAX\n\nThe +1 is unnecessary since LOGIN_NAME_MAX includes null \n  
25227,     Use length() instead of size()\n\nTo be consistent with everything else \n  
25228,     Use length() instead of size()\n\nTo be consistent with everything else \n  
25229,     Use 0 instead of  \\0 \n\nTo be consistent with tests\n  
25230,     Use 0 instead of  \\0 \n\nTo be consistent with tests\n  
25231,     Remove std::string utf8\n\nNot used consistently  Use in-place for comparison \n  
25232,     Remove std::string utf8\n\nNot used consistently  Use in-place for comparison \n  
25233,     Return FALSE instead of 0\n  
25234,     Return FALSE instead of 0\n  
25235,     Fix GetUserName unit test\n\nA deadlock was occurring when executing `whoami` through\nSystem Diagnostics Process because we were calling `WaitForExit()`\nbefore `StandardOutput ReadToEnd()`  According to the documentation   To\navoid deadlocks  always read the output stream first and then wait  \nwhich is what we do here now \n\nAdditionally  `Process` implements IDisposable  and is now automatically\ndisposed via the `using` block \n\n   microsoft com/en-us/library/system diagnostics process standardoutput(v=vs 110) aspx\n   microsoft com/en-us/library/System Diagnostics Process(v=vs 110) aspx\n  
25236,     changed PowerShell code to get Split-Path -Qualifier working in linux\n  
25237,     New line for  \n  
25238,     New line for  \n  
25239,     Changed based of feedback\n  
25240,     Changed based of feedback\n  
25241,     Added changes to code based on additional documention and using a 16 bit string\n  
25242,     Added changes to code based on additional documention and using a 16 bit string\n  
25243,     Fixed Merge Confilct with CMakeLists txt\n  
25244,     Fixed Merge Confilct with CMakeLists txt\n  
25245,     changes to pal h\n  
25246,     changes to pal h\n  
25247,     changed ParsePathCommand cs to get Split-Path unit tests to pass\n  
25248,     Merge branch  develop  into dev/fix-nuget\n  
25249,     Use NuGet APIv3\n  
25250,     Repin monad and monad-native\n  
25251,     Convert to Allman style with 4-space indentation\n  
25252,     Convert to Allman style with 4-space indentation\n  
25253,     Assert GetUserName unit test against whoami\n  
25254,     Merge branch  develop  into dev/67-GetUserName\n  
25255,     Merge pull request 109 from dev/153-format-list-tests into develop\n  
25256,     made string calls more precise\n  
25257,     Fix list of props test and merge cruft\n  
25258,     merged changes from upstream\n  
25259,     added a beforeEach clause\n  
25260,     Refactor and add tests\n  
25261,     Repin monad and monad-native\n  
25262,     Add -Wall to CMAKE_CXX_FLAGS\n  
25263,     Add -Wall to CMAKE_CXX_FLAGS\n  
25264,     Map getlogin_r() s ERANGE to ERROR_GEN_FAILURE\n\nERROR_INSUFFICIENT_BUFFER should never occur here and would be a\nmisleading error for the user \n  
25265,     Map getlogin_r() s ERANGE to ERROR_GEN_FAILURE\n\nERROR_INSUFFICIENT_BUFFER should never occur here and would be a\nmisleading error for the user \n  
25266,     Fix style issues\n\n- Use Doxygen style comments (with better comments)\n- Use `type* ident` instead of `type *ident`\n- Start   on new lines\n- Use TRUE/FALSE from PAL H\n  
25267,     Fix style issues\n\n- Use Doxygen style comments (with better comments)\n- Use `type* ident` instead of `type *ident`\n- Start   on new lines\n- Use TRUE/FALSE from PAL H\n  
25268,     removed unnecessary comments and matched style\n  
25269,     changed filtering test to be better\n  
25270,     resolved style and readability comments\n  
25271,     Clean up CMakeLists\n  
25272,     Clean up CMakeLists\n  
25273,     added custom powershell object to properly mock the test function\n  
25274,     Rename to GetUserNameW since it is Unicode\n  
25275,     Rename to GetUserNameW since it is Unicode\n  
25276,     added comments explaining why the test has to be scripted this way\n  
25277,     changed it statement to accurately reflect test\n  
25278,     Got rid of tests for UTF7  added error checking  adding test to check for null paramater for codepage\n  
25279,     Got rid of tests for UTF7  added error checking  adding test to check for null paramater for codepage\n  
25280,     Merge pull request 112 from dev/70-refactor-FileSystemProvider into develop\n  
25281,     added Pester test for mode flags in ls output\n  
25282,     re-pin to latest fixes  added small test for CreateJunction\n  
25283,     Add source flag to nuget exe install\n\n`-Source     org/api/v2 `\n\nWorks around NuGet 3 issues  Necessary with the MonoProject s\nmono-devel (which is used in the Docker build container) \n  
25284,     added test to determine if output is correct\n  
25285,     Update Docker build script to use fakelogin\n\nfakelogin populates /var/run/utmp enough such that getlogin() works  and\nis included in the latest Docker image \n\nRun `docker pull andschwa/magrathea` to update \n  
25286,     updates to CMakeFile txt\n  
25287,     updates to CMakeFile txt\n  
25288,     re-pin to latest cleanup\n  
25289,     re-pin to latest refactoring fixes\n  
25290,     Update pinned monad-native\n  
25291,     Use WCHAR sizes instead of CHAR sizes\n\nSuch that lpnSize is the length (number of UTF-16 characters  including\nnull) of the username  Must be multiplied by sizeof(char16_t) for bytes \n  
25292,     Use WCHAR sizes instead of CHAR sizes\n\nSuch that lpnSize is the length (number of UTF-16 characters  including\nnull) of the username  Must be multiplied by sizeof(char16_t) for bytes \n  
25293,     Change mshttps to https for Pester submodule\n\nShould not assume mshttps anyway  plus it s been deprecated \n  
25294,     added Format-List test\n  
25295,     Add passing GetUserName unit test\n\nUpdates monad-native submodule to include GetUserName P/Invoke  and\nupdates monad submodule to use said P/Invoke \n\nMatches the username against ^[a-z [a-z0-9\\- *$\n  
25296,     Made changes based off feedback from Peter   Also added more unit tests\n  
25297,     Made changes based off feedback from Peter   Also added more unit tests\n  
25298,     Remove PAL submodule\n  
25299,     Update GetUserName tests\n\nNote that these fail when run in a Docker container because a) the\ncurrent container s locale is not completely set  and b) getlogin()\nreturns null with ENOENT since /var/run/utmp is being mapped to the\nhost  and thus denied access from within the container \n\nThe container needs the locale set and its own /run/utmp  see\n   linuxcontainers org/pipermail/lxc-users/2011-July/002374 html\n  
25300,     Update GetUserName tests\n\nNote that these fail when run in a Docker container because a) the\ncurrent container s locale is not completely set  and b) getlogin()\nreturns null with ENOENT since /var/run/utmp is being mapped to the\nhost  and thus denied access from within the container \n\nThe container needs the locale set and its own /run/utmp  see\n   linuxcontainers org/pipermail/lxc-users/2011-July/002374 html\n  
25301,     Use icu for Unicode conversion and fix lpnSize\n\nA careful reading of the GetUserName documentation and Windows Data\nTypes says that lpnSize is  the number of TCHARs copied to the\nbuffer   including the terminating null character   and a TCHAR in this\nenvironment is a CHAR because we assume UNICODE is always defined for\nCoreCLR  A CHAR is a byte  So lpSize is number of bytes  not number of\nUTF-16 characters as we previously believed \n  
25302,     Use icu for Unicode conversion and fix lpnSize\n\nA careful reading of the GetUserName documentation and Windows Data\nTypes says that lpnSize is  the number of TCHARs copied to the\nbuffer   including the terminating null character   and a TCHAR in this\nenvironment is a CHAR because we assume UNICODE is always defined for\nCoreCLR  A CHAR is a byte  So lpSize is number of bytes  not number of\nUTF-16 characters as we previously believed \n  
25303,     Link ps against icu instead of scxcore\n\nRemove scxcore library from CMake\n  
25304,     Link ps against icu instead of scxcore\n\nRemove scxcore library from CMake\n  
25305,     undid failing test\n  
25306,     created a failing test for jenkins troubleshooting\n  
25307,     added format-table tests\n  
25308,     added more error handling\n  
25309,     added more error handling\n  
25310,     Rename userName in test to expectedUsername\n\nTo clarify that it is for comparison; not the result of GetUserName \n  
25311,     Rename userName in test to expectedUsername\n\nTo clarify that it is for comparison; not the result of GetUserName \n  
25312,     Refactor setting of lpnSize when buffer size is insufficient\n  
25313,     Refactor setting of lpnSize when buffer size is insufficient\n  
25314,     Remove unnecessary static qualifier from const string\n  
25315,     Remove unnecessary static qualifier from const string\n  
25316,     Use std::string instead of C99 dynamic array\n  
25317,     Use std::string instead of C99 dynamic array\n  
25318,     Use LOGIN_NAME_MAX instead of L_cuserid\n\nSince L_cuserid is only for cuserid  not getlogin_r\n\nUnit test for L_cuserid removed because the macro may not be available\non all platforms \n  
25319,     Use LOGIN_NAME_MAX instead of L_cuserid\n\nSince L_cuserid is only for cuserid  not getlogin_r\n\nUnit test for L_cuserid removed because the macro may not be available\non all platforms \n  
25320,     Add more unit test coverage for GetUserName\n  
25321,     Add more unit test coverage for GetUserName\n  
25322,     Set lpnSize when insufficient\n  
25323,     Set lpnSize when insufficient\n  
25324,     Use test fixture in GetUserName unit tests\n  
25325,     Use test fixture in GetUserName unit tests\n  
25326,     Use L_cuserid instead of 64 and given lpnSize\n  
25327,     Use L_cuserid instead of 64 and given lpnSize\n  
25328,     Factor out using directives\n  
25329,     Factor out using directives\n  
25330,     Change global to local static const\n\nTo avoid polluting the global namespace without using a namespace \n  
25331,     Change global to local static const\n\nTo avoid polluting the global namespace without using a namespace \n  
25332,     Clarify lpBuffer layout in GetUserName unit test\n  
25333,     Clarify lpBuffer layout in GetUserName unit test\n  
25334,     Convert get_login_r to UTF-16 and return\n  
25335,     Convert get_login_r to UTF-16 and return\n  
25336,     Check for invalid parameters in GetUserName\n  
25337,     Check for invalid parameters in GetUserName\n  
25338,     Explain GetUserName signature\n  
25339,     Explain GetUserName signature\n  
25340,     Test UTF-16 output of GetUserName\n  
25341,     Test UTF-16 output of GetUserName\n  
25342,     Link scxcore to ps and include headers\n  
25343,     Link scxcore to ps and include headers\n  
25344,     Add unit test for GetUserName\n  
25345,     Add ext-pal dependency\n\nStatic library and header pulled from a build of the PAL on Ubuntu\n14 04  Ugly workaround  but much easier than incorporating that entire\nproject s build system  or even just a part of it \n  
25346,     Add unit test for GetUserName\n  
25347,     Use getlogin_r() in GetUserName and map errno\n  
25348,     Use getlogin_r() in GetUserName and map errno\n  
25349,     Check locale in GetUserName\n  
25350,     Check locale in GetUserName\n  
25351,     Update GetUserName signature\n  
25352,     Update GetUserName signature\n  
25353,     Add error handing for bad enivronment and bad parameter\n  
25354,     Add error handing for bad enivronment and bad parameter\n  
25355,     Merge pull request 104 from dev/131-cleanup-Environment OSVersion into develop\n  
25356,     Merge pull request 105 from dev/130-move-libps-build-to-buildtemp into develop\n  
25357,     Merge remote-tracking branch  origin/develop  into dev/9-getcomputername\n\nConflicts:\n\tsrc/CMakeLists txt\n  
25358,     Merge remote-tracking branch  origin/develop  into dev/9-getcomputername\n\nConflicts:\n\tsrc/CMakeLists txt\n  
25359,     removed libps-build from  gitignore\n  
25360,     Makefile changes to move libps-build into buildtemp sub directory\n  
25361,     made null change to  gitignore to re-trigger build\n  
25362,     re-pin to cleanup of System Management Automation Environment OSVersion  added unit test\n  
25363,     enabled hash bang support  fixed run scripts to not alter the current working directory\n  
25364,     Added test for buffer not having enough space to write computer name\n  
25365,     Added test for buffer not having enough space to write computer name\n  
25366,     Added failure casex\n  
25367,     Added failure casex\n  
25368,     Added case for failure\n  
25369,     Added case for failure\n  
25370,     Added ERROR_BUFFER_OVERFLOW\n  
25371,     Added ERROR_BUFFER_OVERFLOW\n  
25372,     changed Dockerfile to support updated directory structure in exec_env  added copy command to copy missing libps so for run targets\n  
25373,     Merge branch  dev/121-custom-hosting-2  into dev/125-split-dlls\n  
25374,     refactored Makefile run targets  added helper scripts for powershell-simple  changed how PS is invoked to solve issue #122  moved dlls for PowerShell away from CoreCLR  re-pinned to latest monad and monad-native fixes  added UnmanagedMain entry point for powershell-run exe\n  
25375,     added hostutil h  added tests for hostutil  added more cmdline options to PS host\n  
25376,     added hostutil h  added tests for hostutil  added more cmdline options to PS host\n  
25377,     added interpreting the verbose option\n  
25378,     added interpreting the verbose option\n  
25379,     added test_Utils with test for IsWinPEHost\n  
25380,     re-pin to refactored IsWinPEHost changes\n  
25381,     added host_cmdline to RUN_TARGETS\n  
25382,     changed back make targets  changed existing make targets to new custom hosting for powershell-simple exe\n  
25383,     added libicu52 to docker container\n  
25384,     cleaned up Makefile\n  
25385,     re-pin to latest monad-native version\n  
25386,     added libicu-dev to readme instructions\n  
25387,     re-pin to latest native host implementation  changed managed code signature\n  
25388,     added more temporary folders to  gitignore\n  
25389,     initial version of custom hosting code\n  
25390,     using nuget 3 because it s much faster  re-pin to monad-ext containing nuget exe  hardcoded c# compiler toolchain version too\n  
25391,     hardcoded  net dependency versions\n  
25392,     changed build and dependency paths\n  
25393,     moved TypeCatalogGen exe and its dependencies into buildtemp\n  
25394,     fixed string termination issue  added verbose mode\n  
25395,     fixed string termination issue  added verbose mode\n  
25396,     cleaned up implementation  added command line parsing and standardized managed interface for cmdline hosts\n  
25397,     cleaned up implementation  added command line parsing and standardized managed interface for cmdline hosts\n  
25398,     renamed function pointer type  changed code to call UnmanagedMain\n  
25399,     renamed function pointer type  changed code to call UnmanagedMain\n  
25400,     added first version of custom PS hosting code\n  
25401,     added first version of custom PS hosting code\n  
25402,     deleting trailing whitespace\n  
25403,     Merge branch  develop  of ms   visualstudio com/DefaultCollection/PS/_git/monad-linux into dev/117-cleanup-test-files\n  
25404,     removed src/coreclr submodule that was not used\n  
25405,     refactored Get-Content and Get-Item to compensate for the backslash not being used and the first 3 lines being removed from test suites\n  
25406,     removed first 3 lines of autogenerated code- it was superfluous\n  
25407,     Renamed Test-Add-Member Tests ps1 to comply with naming standards\n  
25408,     renamed test file to comply with standards\n  
25409,     deleted non-test files\n  
25410,     Merge branch  develop  into dev/116-enable-native-apps to get update on\nxunit output xml required for jenkins\n  
25411,     Merge pull request 85 from dev/34-xUnit-XML into develop\n  
25412,     re-pin to PS version that allows native command execution\n  
25413,     Merge pull request 84 from dev/115-PSDrive into develop\n  
25414,     Merge pull request 83 from dev/113-reenable-pester into develop\n  
25415,     Enable xUnit unit test coverage results in XML\n  
25416,     fixed test to run on linux\n  
25417,     initial commit\n  
25418,     Run pester-tests also on make test\n\nFixes #113\n  
25419,     added Pester tests for PSVersionTable\n  
25420,     added unit test for cleanup\n  
25421,     re-pin to monad version with PSVersionInfo cleanup\n  
25422,     added file version info attributes to main assemblies\n  
25423,     Merge pull request 80 from dev/use-latest-tag into develop\n  
25424,     Use andschwa/magrathea:latest to update container\n\nPlus some readme tweaks \n  
25425,     Merge pull request 79 from dev/111-update-coreclr into develop\n  
25426,     Unit tests use xUnit runner and [Fact  declaration\n\n- Workaround test executable is now completely removed\n- make test also depends on $(RUN_TARGETS)\n  
25427,     Makefile target test uses the xUnit runner\n\nInstead of the prior work-around \n\nMakefile target `internal-prepare-exec-env` was modified to create\n`exec_env/testrun` and depend on `dotnetlibs/corerun` (on which it\nalready depended) \n  
25428,     re-pin to updated coreclr\n  
25429,     updated coreclr dependency to latest version  fixed / path separators in pester  which were invalid due to recent coreclr cleanup and changes\n  
25430,     Merge pull request 71 from dev/104-105-code-cleanup into develop\n  
25431,     Merge pull request 72 from initialTestSuites into develop\n  
25432,     fixed Get-ChildItem Tests\n  
25433,     fixed Environment-variables tests and typos in get-item\n  
25434,     fixed Get-Item tests\n  
25435,     fixed split-path tests; found a bug in powershell\n  
25436,     fixed get-date tests\n  
25437,     re-pin to latest monad fixes for issue 104 and 105\n  
25438,     removed nuget from list of dependencies\n  
25439,     download latest nuget automatically\n  
25440,     Extend the Unix hosting API\n\nThis change modifies the Unix hosting API so that the hosting app can create\nas many managed delegates as it needs and execute them as many times it wants \nThe new API contains separate functions to initialize and shutdown CoreCLR\nand a function to create a delegate \nThe current ExecuteAssembly function behavior stays unmodified for now to\nensure that dnx that uses that API and that pulls the binary libcoreclr\nis not broken \nAfter the dnx is updated to use the new coreclr_create_delegate API  I ll remove\nthe ExecuteAssembly \n\nAlso done:\n1) Added support for comments and skipping empty lines in the mscorwks_unixexports src \n2) Restructured the mscorwks_unixexports src\n3) Added coreclr_execute_assembly to the unixinterface cpp / exports\n4) Modified coreruncommon cpp to use the new hosting API\n  
25441,     removed monad_app_base submodule because it s not needed anymore\n  
25442,     fixed get-Content issues\n  
25443,     fixed typo\n  
25444,     fixed test assumptions; is now passing tests\n  
25445,     added more granular unit-test for failing getType() output\n  
25446,     removing commit\n  
25447,     deleted test-Get-Alias ps1\n  
25448,     test suite was not recognizing test file\n  
25449,     initial commit\nMerge branch  develop  of    visualstudio com/DefaultCollection/PS/_git/monad-linux into initialTestSuites\n  
25450,     initial commit\n  
25451,     Add note on recursive init submodule update\n  
25452,     Merge pull request 64 from dev/103-pester-instructions into develop\n  
25453,     re-pin to latest monad updates\n  
25454,     re-pin to latest version in develop-2015-07-13\n  
25455,     added pester instructions\n  
25456,     re-pin to latest rebased powershell changes and updated resources\n  
25457,     Merge pull request 62 from dev/100-add-pester-to-make-test into dev/101-docker-port-url\n  
25458,     added another make message to output username and password\n  
25459,     added pester-tests target to Makefile  added that as a dependency to make test\n  
25460,     fixed container-relative port\n  
25461,     made docker port configurable and output URL at end of build\n  
25462,     Merge pull request 60 from dev/95-get-pester-running into develop\n  
25463,     re-pin to pester fixes  added pester hello world test\n  
25464,     changed pester url to our own fork\n  
25465,     add pester to Makefile  re-pin to latest monad fixes\n  
25466,     added pester submodule\n  
25467,     Add Security module Makefile target\n\nAlso updated dependencies to build it\n  
25468,     Add Security module build files from Windows\n  
25469,     Use correct filenames from Windows\n  
25470,     Fix COMMAND_UTILTITY typo\n  
25471,     added changes to query terminal size\n  
25472,     added pinvoke functions to query terminal size\n  
25473,     added pinvoke functions to query terminal size\n  
25474,     added --file parameter to run a script\n  
25475,     Merge branch  dev/67-GetUserName  into develop\n  
25476,     Merge pull request 52 from dev/docker-build into develop\n  
25477,     Add unit test for HasRegistrySupport()\n\nThe use of the function in RegistryProvider cannot be tested without a\nmock of a PowerShell cmdlet context \n  
25478,     Add unit test for PSEnumerableBinder IsComObject()\n  
25479,     Update readme for Docker build environment\n  
25480,     Fix list items\n  
25481,     Add a readme\n  
25482,     re-pinned to latest monad repo\n  
25483,     re-pin monad-ext to removed reference assemblies\n  
25484,     cleaned Makefile  extended powershell-simple exe host  updated to latest monad version\n  
25485,     bumping to latest monad changes  updated makefiles\n  
25486,     stubbed Microsoft Management Infrastructure Native dll\n  
25487,     Update src/monad submodule to monad-sync1\n\nAt branch dev/undo-resx-changes\n  
25488,     Update generate makefiles\n\nPulled gen and * mk from \\\\win2012-ps-01\\builds\\makegenout\\081853542dc16e4d5a354dbf648b0f6a918f0cca\n  
25489,     forcing shellinaboxd port to 4201\n  
25490,     changed caching to off\n  
25491,     added some debug output\n  
25492,     changed base image and separated startup of shellinaboxd into separate script\n  
25493,     removed sudo from docker calls  requires group membership now\n  
25494,     Merge pull request 46 from dev/76-interactive-shell into develop\n  
25495,     Dockerfile and Makefile cleanup\n  
25496,     added get-current-ref sh script\n  
25497,     bumping monad-ext to include xunit\n  
25498,     added a new host based on Sample06 from msdn  added docker testing support\n  
25499,     Indent and whitespace cleanup powershell-run cs\n  
25500,     Merge pull request 38 from dev/33-DriveAutoMount into develop\n  
25501,     Merge pull request 39 from dev/xunit-runner into develop\n  
25502,     Merge pull request 40 from dev/68-fix-make-depdendency-libps so into develop\n  
25503,     bumped the monad-native submodule to a version that contains libps so\n  
25504,     added libps so  added stub for GetUserName\n  
25505,     added libps so  added stub for GetUserName\n  
25506,     Refactor tests mk with $(addprefix)\n\nFor less repitition\n  
25507,     Add xunit runner target\n\nDoes not yet work  see #50\n  
25508,     Add unit test for HasDriveAutoMounting()\n\nCannot unit test SessionStateInternal Drives() (where this feature query\nis used) without a testable mock of PowerShell \n  
25509,     Add unit tests for UsesCodeSignedAssemblies()\n\nUsed in MshSnapinInfo PSSnapInReader\n  
25510,     Merge branch  develop  into dev/59-run-test\n\nFix merge conflict\n  
25511,     Rename run-test target to test\n\nSince `make test` is usually expected for running unit tests\n  
25512,     Add dependency to run-test needed for teardown\n  
25513,     Factor run-test dependencies out of Makefile\n\n- tests mk includes all test related code except run-test target\n- run-test moved after run target\n- TEST_SRCS uses wildcard to collect files\n- dotnetlibs/xunit* uses wildcard to copy dependencies for monad-ext\n  - not % dll because of the soon to be used xunit console netcore exe\n  
25514,     Merge pull request 30 from dev/57-prefix-internal-rules into develop\n  
25515,     Add unit tests for HasAmsi()\n  
25516,     Add unit tests for HasCom() and IsComObject()\n\nAdded using declartion for clarity to test_CorePsPlatform and made test\nfunction naming scheme consistent \n\nUpdate monad submodule with feature query \n  
25517,     added internal- prefix\n  
25518,     Compile all unit tests into one shared dll\n  
25519,     Refactor unit tests\n\nSplits unit tests into multiple files and a mock test runner (to be\nreplaced with the xUnit runner when it becomes available) \n  
25520,     fixed PS shutdown issue by providing a pinvoke library for RegKeyClose because that s what CoreCLR on Linux requires\n  
25521,     added run-debugclr target that uses the debug build of CoreCLR\n  
25522,     updated makefiles to newly generated versions of linux-only makefiles without the windows build rules  removed hack from master Makefile\n  
25523,     Merge branch  dev-build  into develop\n  
25524,     Merge branch  dev-build  into develop\n  
25525,     Merge branch  dev-build  into use-roslyn\n\nConflicts:\n\tscripts/Makefile\n  
25526,     renamed ps_hello_world exe to powershell-run exe\n  
25527,     Merge branch  dev-build  into use-roslyn\n\nConflicts:\n\tscripts/Makefile\n  
25528,     adding and changing rules to use the roslyn compiler instead of mcs for the PS code\n  
25529,     cleanup of Makefile\n  
25530,     added more files to be ignored in the scripts directory\n  
25531,     changed paths to COREREF_2 assemblies\n  
25532,     Use Xunit assertions\n\n* Update monad-ext submodule with Xunit dlls\n* Point Makefile xunit targets to monad-ext/xunit\n* Add xunit assert target to Makefile\n* Add xunit assert as dependency of ps_test exe\n* Add corerun as dependency of ps_test exe\n* Link ps_test exe with xunit assert\n* Temporarily remove libps so from ps_test exe dependencies (WIP)\n* Use Xunit in ps_test cs\n* Remove Assert mock\n* Temporarily remove Platform UserName (WIP)\n\nWith this patch  `make cleanall && make prepare && make run-test`\nexecutes our (few) tests correctly using Xunit (without needing to `make\nrun` first) \n  
25533,     using management-infrastructure mk instead of wmi-sources mk\n  
25534,     added prepare rule as a hack to have correct timestamps for make for now\n  
25535,     Merge branch  dev-system-automation mk  into dev-build\n  
25536,     linking in string resources files\n  
25537,     compile time changes to enable system-automation mk\n  
25538,     fixed dependencies of run target to include modules\n  
25539,     moved temporary string resources for SMA dll to string_resources folder  until system-automation mk is enabled\n  
25540,     updated makefile with more comments\n  
25541,     latest build udpates to have selfhosted builds\n  
25542,     added empty gitignore to create folder\n  
25543,     bulk add of all build changes and resources needed to build PS on linux\n  
25544,     Fix exitCode from ExecuteAssembly\n\nExecuteAssembly is initializing exitCode to 0 on entrance to the function   If it then fails prior to exitCode being set when invoking the entry point  the exitCode remains 0 even though there was a failure  and corerun ends up returning a successful exit code \n  
25545,     Fix unixcoreruncommon build error on FreeBSD\nNeeded cstdlib to build properly\n  
25546,     Add Unix version of coreconsole \n\nCreated a Unix version of coreconsole which  like the Windows version \nis similar to corerun but runs the managed binary with the same name as\nthe executable (but with the DLL extension)  Moved code that is common\nbetween corerun and coreconsole to coreruncommon \n\nRemove the workaround for the XCode 6 3 SDK issue wherein some of the\nsystem headers that we reference try to include a __debug header which\ndoes not exist  The 6 3 1 update fixed that issue so the workaround is no\nlonger required \n\nFix #747\n  
25547,     changed spacing\n  
25548,     changed spacing\n  
25549,     changed spacing and using  std::string instead of TCHAR\n  
25550,     changed spacing and using  std::string instead of TCHAR\n  
25551,     Changes to spacing\n  
25552,     Changes to spacing\n  
25553,     changes based on comments\n  
25554,     changes based on comments\n  
25555,     Merge pull request 11 from feature/getcurrentthreadid into develop\n  
25556,     Changes from notes\n  
25557,     Changes from notes\n  
25558,     fetched changes from branch feature/GetComputerName\n  
25559,     fetched changes from branch feature/GetComputerName\n  
25560,     added build files and folders to gitignore\n  
25561,     code for cpinfo\n  
25562,     code for cpinfo\n  
25563,     built and tested - pass\n  
25564,     built and tested - pass\n  
25565,     added  idea to gitignore\n  
25566,     initial commit\n  
25567,     initial commit\n  
25568,     made the first powershell headers compile with stubs and modified coreclr headers\n  
25569,     changed unit test and switched compiler to clang with libc++\n  
25570,     fixed prefix to use abs path and switched to libc++ with clang\n  
25571,     added some more checks for basic windows data types\n  
25572,     added cpp unit  simple bootstrap build script  added unit test to check a few coreclr pal datatypes\n  
25573,     added initial empty project and  gitignore\n  
25574,     initial commit with submodule setup\n  
